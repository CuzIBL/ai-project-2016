                     Temporal Reasoning with Preferences and Uncertainty 

                          N. Yorke-Smith                              K. B. Venable and F. Rossi 
                              IC-Parc                                     Dept. of Mathematics 
                     Imperial College London                               University of Padova 
                           London, U.K.                                        Padova, Italy 
                  nys@icparc.ic.ac.uk*                      {kvenable,frossi}@math.unipd.it* 


                        Abstract                                 To address the lack of expressiveness in standard STPs, the 
                                                               Simple Temporal Problems with Preferences (STPP) frame-
     Temporal Constraint Satisfaction Problems allow 
                                                               work merge STPs with semiring-based soft constraints [Rossi 
     for reasoning with events happening over time. 
                                                               et al, 2002]. Soft temporal constraints are specified by 
     Their expressiveness has been extended indepen•
                                                               means of a preference junction on the constraint interval, 
     dently in two directions: to account for uncontrol•
                                                                                     where A is a set of preference val•
     lable events, and, more recently, to account for soft 
                                                               ues. The set A is part of a semiring. In general, STPPs 
     temporal preferences. The motivation for both ex•
                                                               are NP-complete. However, if the preference functions are 
     tensions is from real-life temporal problems; and 
                                                               semi-convex (that is, they have at most one peak), the con•
     indeed such problems may well necessitate both 
                                                               straints are combined via an idempotent operation (like max 
     preferences and uncertainty. This paper proposes 
                                                               or min), and the preference values are totally ordered, then 
     the study of temporal problems with both pref•
                                                               finding an optimal solution of a STPP is a polynomial prob•
     erences and uncertainty, and puts forward some 
                                                               lem. Two solvers for STPPs with the features above are pre•
     methods for their resolution. 
                                                               sented by Rossi et al. [2002]. The first, Path-solver, enforces 
                                                               path consistency in the constraint network, then takes the sub-
 1 Motivation and Background                                   interval on each constraint corresponding to the best prefer•
Research on temporal reasoning, once exposed to the difficul•  ence level. This gives a standard STP, which is then solved 
ties of real-life problems, can be found lacking both expres•  for the first solution by backtrack-free search. The second 
siveness and flexibility. Planning and scheduling for satel•   solver, Chop-solver, is less general but more efficient. It finds 
lite observations, for instance, involves not only quantitative the maximum level y at which the preference functions can 
temporal constraints between events and qualitative tempo•     be 'chopped', i.e. reduced to the set 
ral ordering of events, but also soft temporal preferences and This set is a simple interval for each I. Hence we obtain a 
contingent events over which the agent has no control. For     standard STP, STPy. By binary search, the solver finds the 
example, on one hand, slewing and scanning activities should   maximal y for which STPy is consistent. The solutions of 
not overlap, but may if necessary. On the other hand, the du•  this STP are the optimal solutions of the original STPP. 
ration of failure recovery procedures is not under the direct    To address the lack of flexibility in execution of standard 
control of the satellite executive. To address the lack of ex• STPs, Vidal and Fargier [1999] introduced Simple Temporal 
pressiveness, preferences can be added to the framework; to    Problems under Uncertainty (STPUs). Here, again as in a 
address the lack of flexibility to contingency, handling of un• STP, the activities have durations given by intervals. The 
certainty can be added. Some real-world problems, however,     timepoints, however, fall into two classes: requirement and 
have need for both. It is this requirement that motivates us.  contingent. The former, as in a STP, are decided by the agent, 
   In a temporal constraint problem, as defined in Dechter et  but the latter are decided by 'nature': the agent has no con•
al [1991], variables denote timepoints and constraints rep•    trol over when the activity will end; he observes rather than 
resent the possible temporal relations between them. Such      executes. The only information known prior to observation is 
constraints are quantitative, describing restrictions on either that nature will respect the interval on the duration. Control•
durations or distances of events, in terms of intervals over the lability of a STPU is the analogue of consistency of a STP 
timeline. In general such problems are NP-complete. How•       Controllable implies the agent has a means to execute the 
ever, if each temporal constraint has just one interval — hence timepoints under his control, subject to all constraints. Three 
the constraints have form where de•                            notions are proposed. A STPU is strongly controllable if 
note the timepoints — then we have a Simple Temporal Prob•     there is a fixed execution strategy that works in all realisations 
lem (STP) that can be solved in polynomial time.               (that is, an observation of all contingent timepoints). Check•
   'Partially supported by the EPSRC under grant GR/N64373/01. ing strong controllability is in P [Vidal and Fargier, 1999]. A 

   f Partially funded by the Italian MIUR projects NAPOLI and  STPU is dynamically controllable if there is a online execu•
COVER, and the ASI (Italian Space Agency) project ARISCOM.     tion strategy that depends only on observed timepoints in the 


POSTER PAPERS                                                                                                       1385  past and that can always be extended to a complete sched•     those parts which have the highest preference level, and then 

 ule whatever may happen in the future. Checking dynamic       neglect the preferences, obtaining a STPU Popi; (3) apply 
 controllability is also in P [Morris et al, 2001]. A STPU is  Strong-Controllability to Popt. Theoretical results that we have 
 weakly controllable if there exists at least one execution strat• proven, but omit for lack of space, show the correctness of the 
 egy for every realisation. Checking weak controllability is   algorithm: (1) If a STPPU is optimally strong controllable, 
 co-NP [Vidal and Fargier, 1999]. The three notions are or•    then the STPU obtained by neglecting preferences is strongly 
 dered by their strength; strong dynamic weak.                 controllable; (2) A STPPU P is optimally strong controllable 
   In this paper we introduce a framework which allows one     if and only if the STPU Popt is strongly controllable. 
to handle both preferences and uncertainty in temporal prob•     We have also generated a different algorithm by combining 
 lems. This is done by just merging the two pre-existing mod•  Strong-Controllability with Chop-solver. This algorithm is less 
 els of STPPs and STPUs. We also adopt the notion of con•      general but more efficient. Both algorithms we propose are 
trollability, to be used instead of consistency because of the polynomial, with a time complexity 0(n3 x Rx /), where n 
presence of uncertainty, and we adapt it to handle preferences. is the problem size, R is the range of the largest interval, and 
We then investigate the complexity of checking such notions    / is the number of preference levels. 
of controllability, and we develop algorithms to perform such    For a-strong controllability, we rely on theoretical results 
checks. The main results are for strong and weak controlla•    similar to those above, and we propose two algorithms. Given 
bility, which we show to maintain the same complexity as in    a, the first one checks a-SC by: cutting the intervals to those 
 STPUs under the same hypothesis that make STPPs polyno•       parts whose preference is above a, and applying strong con•
mial^ solvable. As future work, we plan to study dynamic       trollability checking to the resulting STPU. The time com•

controllability, and to implement our algorithms to compare    plexity is 0(n3 x R). The second algorithm finds the highest 
their performance experimentally.                              a at which P is a-SC, by performing a binary search for the 
                                                               highest a, checking strong controllability at each step. Its 
2 Simple Temporal Problems with                                time complexity is 0(p x n3 x R), where p is proportional to 
                                                               the precision we want in returning the result. 
     Preferences and Uncertainty (STPPU) 
A STPPU is a STPP with timepoints partitioned into two         4 Checking Optimal and a Weak 
classes, requirement and contingent, just as in a STPU. Since      Controllability 
some timepoints are not controllable by the agent, the no•
                                                               Optimal weak controllability of a STPPU is equivalent to 
tion of consistency of a STP(P) is replaced by controllabil•
                                                               weak controllability of the corresponding preference-stripped 
ity, just as in a STPU, with the three notions suitably ex•
                                                               STPU. Thus we can use the existing STPU algorithms for 
tended. While all three notions of controllability used for 
                                                               checking weak controllability. For checking a-weak con•
STPUs can be adapted to STPPUs, for this short paper we 
                                                               trollability, we propose two approaches. The first chops the 
will focus on just weak and strong controllability. A STPPU 
                                                               STPPU at level a by considering only those parts of its inter•
is optimally strongly controllable if there is a fixed execution 
                                                               vals which have preference level above a (semi-convcxivity 
strategy that works in all realisations and is optimal in each 
                                                               guarantees that the result is always a single interval), and then 
of them. Rather than optimality, one could be interested in 
                                                               applies Weak-Controllability to the STPU so obtained. The 
just reaching a certain quality level: a STPPU is a-strongly 
                                                               second approach generates the realisations that arise by con•
controllable, where a is a preference level, if there is a fixed 
                                                               sidering the contingent intervals reduced to just their upper or 
execution strategy that works in all realisations and is above 
                                                               lower bound (other realisations need not be considered) [Vi•
a in each of them. A STPPU is optimally (resp. a-) weakly 
                                                               dal and Fargier, 1999]), and checks the consistency of all such 
controllable if there exists at least one optimal (resp., above 
                                                               realisations. Both algorithms are exponential in the number 
a) execution strategy for every realisation. 
                                                               of contingent constraints. 

3 Checking Optimal and a Strong                                References 
     Controllability                                           [Dechter et al., 1991] Rina Dcchter, Itay Mciri, and Judea Pearl. 
It can be proved that checking either optimal or a strong        Temporal constraint networks. Artificial Intelligence, 49:61-95, 
                                                                  1991. 
controllability is in P. The method we propose relies on 
two known algorithms. The first is Path-solver, which en•      [Morris et al., 2001] Paul Morris, Nicola Muscettola, and Thierry 
forces path consistency on a STPP. The second is Strong-         Vidal. Dynamic control of plans with temporal uncertainty. In 
                                                                 Prvc. of IJCAI'01, pages 494-502, Seattle, WA, 2001. 
Controllabillty(STPU) [Vidal and Fargier, 1999], which checks 
if a STPU is strongly controllable. The main idea is to ap•    [Rossi et al., 2002] F. Rossi, A. Sperduti, K.B. Venable, L. Khatib, 
ply Strong-Controllability(STPU) to a special STPU, which        P. Morris, and R. Morris. Learning and solving soft temporal 
we will call P   , that can be constructed starting from the     constraints: An experimental study. In Proc. ofCP'02, pages 
              opt                                                249-263, Ithaca, NY, 2002. 
STPP P' obtained by applying Path-solver to a STPPU P. 
More precisely, the algorithm takes as input a STPPU P and     [Vidal and Fargier, 1999] Thierry Vidal and Helene Fargier. Han•
performs the following steps: (1) forgetting the uncertainty,    dling contingency in temporal constraint networks: From consis•
treat P as a STPP and apply Path-solver to it, obtaining the     tency to controllabilities. Journal of Experimental and Theoreti•
                                                                 cal Artificial Intelligence, ll(l):23-45, 1999. 
STPP P'\ (2) collapse the non-contingent intervals of P' to 


1386                                                                                                   POSTER PAPERS 