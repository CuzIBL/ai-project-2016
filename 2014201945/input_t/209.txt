                 EVOC: A Music Generating System using Genetic Algorithms 

                                            Timothy Weale and Jennifer Seitzer 
                                                          University of Dayton 
                                                           Dayton, Ohio, USA 
                                        {timothy, weale, Jennifer.seitzer} @notes. udayton.edu 


                            Abstract                                     counterpoint. 

      In this work, we present a Genetic Algorithm 
      (GA) system "Evolutionary Counterpoint"                            2 Music as a Constraint Problem 
      (EVOC) that generates contrapuntal music.                            Constraint programming is concerned with using con•
      Counterpoint is the construction of a musical                      straints to solve problems. Music composition of a coun•
     piece by superimposing multiple melodies, indi•                     terpoint nature can be seen as a specialized constraint 
      rectly forming an underlying harmonic structure.                   satisfaction problem (CSP). Any CSP has the following 
      Here, we include a description of the underlying                   characteristics: a set of variables, a domain for the vari•
     algorithm, fitness function, and overall system                     ables, and a set of constraints on the domain [Bartak, 
      modules.                                                           1999]. Every note in a given cantus firmus line gives the 
                                                                         composer at least one variable to satisfy. Every variable 
 1 Introduction                                                          (note) is defined within the domain of every possible mu•
                                                                         sical tone. Finally, the set of counterpoint guidelines 
   Counterpoint is the art of combining individual me•
                                                                         gives us the constraints on the domain. The task of the 
 lodic voices to form a harmonious whole fGreenberg, 
                                                                         composer (our system, EVOC) is to come up with a cor•
 1997]. Contrapuntal music composition can be thought 
                                                                         rect set of pitches along with its timing schedule. The 
of as a vast search for the perfect combination of melo•                 version of counterpoint rules we are currently applying is 
dies. Given the exhaustive nature of the problem, genetic                limited to Species I in two voices (Figure 2), where given 
algorithms are ideal to facilitate the pursuit. In this work,            an upper melody as input, the system composes the bass 
we employ genetic algorithms to this end, and describe                   line. We employ the counterpoint rules found in a typi•
our implementation.                                                      cal music theory setting [Magnuson] some of which are 
   One aspect of counterpoint study involves taking a                    shown in Figure 1. 
given musical line and creating an accompanying line. 
To do this correctly, the composer uses a set of guide•
 lines (rules) for composition. These can be as simple as                3 Main Algorithm 
 'no dissonant sounds' to as complex as 'perfect intervals               begin EVOC-Algorithm( ) 
must be approached from opposite voices and one voice                      input: cantus firmus line 
must step.' Using these sets of rules and a given melodic                  output: Species I melody line 
line known as a cantus firmus, one develops accompany•
ing lines that adhere to every guideline. The guidelines                   Randomly generate 8 initial melodies (parents) 
are of utmost importance to our system because our fit•                    repeat 
ness function is based on them. In our work, we have                          1. create 32 offspring using crossover on parents 
made the problem more manageable by using Species I                           2. randomly mutate offspring 
counterpoint, the most structurally primitive form of                         3. apply fitness function to offspring 
                                                                              4. select new parents from offspring 
        Sample Principles of Species I Counterpoint                        until fitness function returns 0 

       1. Leaps of a third, fourth, fifth and ascending mi•
         nor sixths arc available. 
       2. A distance of no greater than a sixth may be 
         covered in one direction (with the exception of 
         anoctave leap). 
       3. Only two leaps in one direction may be used 
         consecutively. 
       4. Do not repeat notes consecutively. 
                             Figure I 

POSTER PAPERS                                                                                                                         1383 4 System EVOC                                                 lection, the highest rated melodies persist to the next 
                                                              generation. 
   The EVOC system consists of two independent pro•              The evaluation function first constructs a list of note() 
gram modules each invoked by the Visual Basic inter•          values. These notes have the form: note(MIDI_value, 
face. Module One reads in the input MIDI file and             MIDl_name, measure). With these note lists, the 
transforms it into an intermediate text format. Module        PROLOG evaluation is done using multiple scans, with 
Two uses this to run the genetic algorithm and generate a     two primary areas of investigation: melodic adherence 
counterpoint line. A graphical representation of the logi•    and harmonic adherence. Compositional errors occur 
cal organization can be found in Figure 3.                    when the constraints of the program (the species counter-
                                                              point rules) are broken. When such an error is encoun•
                                                              tered, an appropriate penalty is assessed against the par•
                                                              ticular genotype valuation. Serious infractions (e.g., par•
                                                              allel fifths) suffer a -500 penalty, while non-serious vio•
                                                              lations (e.g., counterbalance issues) may only suffer a 
                                                              -100 penalty. 

                                                              5 Conclusion 
                                                                To date, we have an operational system that can gener•
                                                              ate valid counterpoint lines in Species I. The output is 
                                                              correct and perfectly valid as a functional counterpoint 
                                                              line. We are currently working on improving the rule 
                                                              base as well as the user interface for EVOC. 
                                                                In this poster, we presented a genetic algorithm and a 
                                                              theorem proving deductive fitness function for the 
                                                              searching and generation of musical counterpoint. It em•
                                                              ploys a theorem prover as a fitness function that houses 
                                                              fundamental guidelines used by musicians composing 
                                                              these pieces. 

                                                              References 
  The Visual Basic interface provides a simple, easy way      [Bartak, 1999] Bartak, Roman. Constraint Programming: 
to invoke the other two modules. After loading the inter•     In Pursuit of the Holy Grail. Proceedings of Week of 
face, the user defines the name of the MIDI file with the     Doctoral Students (WDS99), Part IV, MatFyz Press, Pra•
given melody line. Using this file name, the additional       gue, June 1999, pp. 555-564 
two modules are invoked. 
  The MIDI input module is a C++ program that reads in        [Greenberg, 1997] Bernard S. Greenberg; Bach FAQ 
a MIDI file and outputs it as an intermediate file. The       Site, 1997 (date veri•
melody (as represented by a MIDI file track) is read from     fied i 1/1/2002) 
the file using file-processing routines implemented in 
Sapp's IMPROV suite 12002]. From there, the lines are         [Magnuson] Magnuson, Phillip. Species Counterpoint. 
converted to an internal representation, from which the 
intermediate file is created. 
  The final module runs the genetic algorithm. This part      [Sapp, 2002] Sapp, Craig S. Improv. 
reads the intermediate file, initializes the algorithm, and   http://improv.sapp.org. 
employs the main algorithm detailed in Section 3. This 
algorithm iterates until the fitness function returns zero    ISchottstaedt, 1989] Schottstaedt, W. Automatic Coun•
indicating that a correct melody has been generated. The      terpoint. Current Directions in Computer Music. MIT 
output of this final module is the generated contrapuntal     Press, Cambridge. 
melody. 

4.1 PROLOG Fitness Function 
  In any GA system, the fitness function indicates which 
members of a generation survive. For our fitness func•
tion, we wrote a theorem prover that embodies the his•
torical Species I counterpoint guidelines. By comparing 
any given genotype melody with the guidelines, we as•
sign a valuation of validity to the genotype. During se•


1384                                                                                                  POSTER PAPERS 