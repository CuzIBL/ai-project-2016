                       Automated Design of Multistage Mechanisms∗

         Tuomas Sandholm                   Vincent Conitzer                   Craig Boutilier
     Carnegie Mellon University             Duke University                University of Toronto
   Computer Science Department         Dept. of Computer Science        Dept. of Computer Science
       sandholm@cs.cmu.edu               conitzer@cs.duke.edu              cebly@cs.toronto.edu


                    Abstract                          such strategic behavior by agents. Classical mechanism de-
                                                      sign provides some general mechanisms, which, under certain
    Mechanism design is the study of preference ag-   assumptions, satisfy some notion of nonmanipulability and
    gregation protocols that work well in the face    maximize some objective. Typically, such mechanisms do
    of self-interested agents. We present the ﬁrst    not rely on (even probabilistic) information about the agents’
    general-purpose techniques for automatically de-  preferences (e.g., the Vickrey-Clarke-Groves (VCG) mecha-
    signing multistage mechanisms. These can reduce   nism [29; 7; 12]), or can be easily applied to any distribution
    elicitation burden by only querying agents for in- over preferences [11; 1; 21; 19]. However, these general algo-
    formation that is relevant given their answers to rithms only work in restricted settings (e.g., they may require
    previous queries. We ﬁrst show how to turn a given the possibility of side payments, or work only for speciﬁc ob-
    (e.g., automatically designed using constrained op- jectives) and may not reﬂect the designer’s objectives.
    timization techniques) single-stage mechanism into
                                                        Recently, automated mechanism design (AMD) has been
    the most efﬁcient corresponding multistage mech-
                                                      proposed as a means to design mechanisms automatically
    anism given a speciﬁed elicitation tree. We then
                                                      for the setting at hand [8; 3]. This approach, based on
    present greedy and dynamic programming (DP) al-
                                                      constrained optimization, produces optimal special-purpose
    gorithms that determine the elicitation tree (opti-
                                                      mechanisms even in settings for which no good general mech-
    mal in the DP case). Next, we show how the query
                                                      anisms are known, or for which impossibility results pre-
    savings inherent in the multistage model can be
                                                      clude the existence of good general mechanisms for the class
    used to design the underlying single-stage mecha-
                                                      of instances. While AMD is a relatively new approach, it
    nism to maximally take advantage of this approach.
                                                      has already started to be adopted in applications, for ex-
    Finally, we present negative results on the design
                                                      ample, in strategic sourcing, reserve price setting in as-
    of multistage mechanisms that do not correspond
                                                      set recovery, and recommender systems [14].However,all
    to dominant-strategy single-stage mechanisms: an
                                                      prior work on general-purpose AMD has focused on single-
    optimal multistage mechanism in general has to
                                                      stage mechanisms, in which all agents reveal their prefer-
    randomize over queries to hide information from
                                                      ences completely and simultaneously. This is problematic
    the agents.
                                                      for several reasons. First and foremost, agents may need
                                                      to invest signiﬁcant computational, cognitive or other re-
1  Introduction                                       sources to determine their preferences over outcomes [24; 25;
                                                      16]. For instance, when bidding on trucking tasks in a com-
In multiagent settings, often an outcome (e.g., presidents, binatorial reverse auction, an agent needs to solve, for each
joint plans, allocations of resources) must be chosen based subset of tasks, a complex vehicle-routing problem). Second,
on the preferences of a set of agents. Since the preference the agents lose all privacy about their preferences. Third, it
aggregator generally does not know these preferences apri- can require a large amount of communication. While the third
ori, the agents must report their preferences to the aggregator. reason applies only when the space of possible preferences is
Unfortunately, an agent may have an incentive to misreport large, the ﬁrst two reasons are signiﬁcant even in settings with
its preferences in order to mislead the aggregator into select- few outcomes or possible preference functions.
ing an outcome that is more desirable to the agent than the
outcome that would be selected if the agent revealed its pref- Much of this computation, communication, and privacy
                                                      loss is unnecessary when certain aspects of an agent’s pref-
erences truthfully.
                                                      erences have no inﬂuence on the ﬁnal outcome. For instance,
  Mechanism design is concerned with the creation of prefer-
                                                      if a second agent can perform a task at much lower cost than a
ence aggregation rules that lead to good outcomes in spite of
                                                      ﬁrst, we need not determine precisely how suboptimal assign-
   ∗This material is based upon work supported by the Na- ing the task to the ﬁrst agent is. Unfortunately, single-stage
tional Science Foundation under ITR grants IIS-0121678 and IIS- mechanisms cannot take advantage of this: we cannot apriori
0427858, a Sloan Fellowship, and an IBM Ph.D. Fellowship. rule out the need to know the ﬁrst agent’s precise preferences

                                                IJCAI-07
                                                  1500for the task—this only becomes apparent after receiving in- report them. In general, mechanisms may choose the out-
formation from the second.                            come randomly. Thus, a mechanism consists of a distribu-
  Our solution is to use multistage mechanisms, where the tion selection function p :Θ1 × ...× ΘN → Δ(O),where
aggregator queries the agents about certain aspects of their Δ(O) is the set of probability distributions over O. A mech-
preferences, and chooses the next query to ask (and who to anism is a dominant strategy mechanism if truthtelling is op-
ask it of) based on answers to earlier queries. In a non- timal regardless of what other agents report. In other words,
game-theoretic setting, a move to multistage protocols can for any agent i, type vector (θ1,...,θi,...,θN ), and alter-
yield an exponential savings in bits communicated [15].In         ˆ  ∈                                 ≥
                                                      native report θi Θi,wehaveEo|θ1,..,θi,..,θn ui(θi,o)
mechanism design settings, such a move can yield an expo-    ˆ     i  i
                                                      Eo|θ1,..,θi,..,θn u (θ ,o). If telling the truth is optimal only
nential savings in communication and the aggregator’s com- given that the other agents are truthful, we have a Bayes-Nash
putation [10].
                                                      equilibrium (BNE) mechanism. That is, in a BNE mecha-
  Multistage mechanisms have been manually designed for                ∈                         ˆ ∈
                                [ ]                   nism, for any i, θi Θi, and alternative report θi Θi,
several applications, such as voting 9 , single-item auc-                                              ≥
tions (e.g., [5]), and combinatorial auctions (see reviews [26; we have E(θ1,..,θi−1,θi+1,..,θN )|θi Eo|θ1,..,θi,..,θn ui(θi,o)
                                                        (θ ,..,θ ,θ ,..,θ )|θ   ˆ      i i  .
22]). Automated design of multistage mechanisms has been E 1 i−1 i+1  N  i Eo|θ1,..,θi,..,θn u (θ ,o)
addressed for speciﬁc settings in parallel with our work [17; In settings where participation is voluntary, the AMD for-
27; 13]. Prior work has studied the design of multistage mulation also includes participation (or individual rational-
mechanisms in strategic multi-party computation [28; 2],but ity) constraints: no agent is worse off participating in the
the issues in that setting (e.g., that an agent may be tempted mechanism than not. Techniques for handling them in single-
not to invest the effort necessary to determine its private in- stage AMD can be applied to our multistage case without
formation) are very different from those we address. In this modiﬁcation.
paper, we introduce the ﬁrst general techniques for automated Given that the mechanism is allowed to choose the out-
design of multistage mechanisms. We adopt a very speciﬁc come at random, the problem of designing an optimal single-
methodology: ﬁrst design a single-stage mechanism using ex- stage mechanism can be solved in polynomial time (given
isting techniques for AMD; this is then converted into a mul- that the number of agents is constant) using linear program-
tistage mechanism using one of several techniques we pro- ming [8]. The decision variables of that linear program are the
pose. We also show how the multistage model can be used following: for every type vector θ and every outcome o,there
to to inﬂuence the design the underlying single-stage mecha- is a decision variable p(θ, o) that determines the probability
nism to maximally take advantage of the savings inherent in of that outcome given that type vector. It is straightforward
the multistage model. As such, relying on an intermediate to check that the incentive compatibility constraints above, as
single-stage mechanism incurs no loss.                well as the expectation of the objective, are linear functions
                                                      of these variables, which gives us the linear program. Gener-
2  The model                                          ating and solving this linear program is all that is required to
                                                      have a basic approach to automatically designing single-stage
2.1  Automated design of single-stage mechanisms      mechanisms, and it is in fact the approach that we use in this
In this subsection, we review the relevant deﬁnitions and re- paper to generate single-stage mechanisms.
sults from the single-stage AMD literature. In a single-stage
AMD setting, we are given: 1) a ﬁnite set of outcomes O 2.2 Automated design of multistage mechanisms
(payments to/from agents can be part of the outcome); 2) a In multistage AMD, the input includes—in addition to the
ﬁnite set of N agents; 3) for each agent i, (a) a ﬁnite set of input for single-stage AMD—a set of queries Q and a set
types Θi, (b) a probability distribution γi over Θi (in the case of answers A. Assuming a single answer set (rather than
of correlated types, there is a single joint distribution γ over distinct Aq for each query q) comes without loss of gener-
Θ1 ×...×ΘN  ), and (c) a utility function ui :Θi ×O → R;4) ality. One set of special interest is A = {yes, no}. Each
an objective function g :Θ1 × ...× ΘN × O → R whose ex- query q is associated with a particular agent i (of whom q
pectation the designer wishes to maximize. Note that utility would be asked),2 and the answer that the agent would give
functions are parameterized by type; while the ui are com- to q (when answering truthfully) is given by the function
mon knowledge, the types encode (private) preferences [18]. a : Q × Θi → A,wherea(q, θi) is i’s truthful answer to
The restriction to a ﬁnite type space is somewhat limiting. query q when i’s type is θi. This implies that there is only one
However, continuous spaces can be handled via suitable dis- truthful response to any q ∈ Q; thus, each query partitions the
cretization of the type space.1 Possible designer objectives agent’s type space. Upon receiving answer a to q from agent
are many (e.g., social welfare, or maximizing the sum of i, the mechanism can infer (assuming truthfulness) i’s type is
agent utilities for the chosen outcome).              in {θi ∈ Θi : a(q, θi)=a}.
  By the revelation principle [18], we can restrict attention A multistage mechanism M corresponds to a given single-
to truthful, direct revelation mechanisms, where agents re- stage mechanism S if, for each type vector θ reported by
port their types directly and never have an incentive to mis-
                                                         2In this paper we will restrict our attention to the case where we
   1The discretization can be ﬁxed in advance with an analysis of its query one agent at a time; however, our approach is easily extended
impact on incentives and efﬁciency (as in recent research on limited to settings where we query multiple agents at the same time. We
revelation auctions [4]). Or, it may be optimized within the AMD note, however, that querying agents one at a time leads to the largest
model itself; this latter point is the subject of current research. possible savings in the number of queries.

                                                IJCAI-07
                                                  1501the agents, both M and S choose each outcome o with the in a museum; (4) it is cut into pieces which are given to the
same probability. Suppose M corresponds to some S where husband; and (5) it is cut up with pieces given to the wife.
truth-telling is dominant. It is not hard to see that M has The husband and wife each have two possible types: type
truthtelling as an ex-post equilibrium, regardless of the the L (“Low”) is associated with relative indifference toward the
results of previous queries revealed. (A vector of strategies is painting, and type H (“High”) with deep attachment. Each
an ex-post equilibrium if for each agent, following the strat- has type L with probability 0.8 and type H with probability
egy is optimal regardless of the types of the other agents 0.2. To maximize social welfare, the arbitrator would like to
given their strategies.) That is, truth-telling is optimal (re- give the painting to whomever cares for it more; but since a
gardless of an agent’s beliefs) whenever all other agents an- party who cares little would prefer having it over not, the ar-
swer queries truthfully.This implies that we never need to ran- bitrator must design appropriate incentives to ensure truthful
domize over query choice (though this no longer holds if S is reporting. The utility function for each party is the “same.”
not a dominant-strategy mechanism, as we will see later). Ex Keeping the painting gives utility 2 (type L)or100 (H). The
post implementation is weaker than dominant strategies, but other party getting the painting gives utility 0 (for either type).
stronger than BNE. Note that even if S is a dominant-strategy The museum outcome gives utility 1.5 (L)or40 (H). Receiv-
mechanism, M need not be: if an agent makes her answer ing pieces gives utility −9 while not even getting the pieces
dependent on the history of queries asked, another agent may gives utility −10 (for either type).4
have an incentive to lie about her type in order to inﬂuence Our goal is to ﬁnd a dominant-strategy (possibly ran-
which queries the former is asked.                    domized) mechanism (without payments) that maximizes ex-
  For these reasons, apart from the last technical section in pected social welfare. First we ﬁnd the optimal single-stage
the paper, we focus exclusively on multistage mechanisms mechanism. Solving this example using the methodology de-
that correspond to dominant-strategy single-stage mecha- scribed earlier yields the following randomized mechanism
nisms. Thus, we can restrict ourselves to mechanisms that (the probabilities are rounded):
select the next query deterministically based on answers to
prior queries; moreover, we need not worry about incentives.       wife L            wife H
  Under these restrictions, a multistage mechanism is deﬁned husband L Museum        0.96 Wife keeps;
by: 1) a tree with nodes V and edges E; 2) for each internal                         0.04 Husband gets pieces
(non-leaf) node v, an agent i and a query q to that agent; 3) husband H 0.96 Husband keeps; 0.47 Husband keeps;
a one-to-one correspondence between possible answers to the        0.04 Wife gets pieces 0.40 Wife keeps;
query at node v and children of node v; 4) for each node v and                       0.13 Wife gets pieces
outcome o, a probability that, given that we reach v,westop In spite of the symmetry between the husband and the wife,
asking queries and choose outcome o. (In the case where v the mechanism is asymmetric. Of course, other optimal so-
is a leaf, these probabilities must sum to one.) An elicitation lutions exist (e.g., where the roles of husband and wife are
tree is a multistage mechanism without outcome probabili- interchanged).
ties. We denote by Iv the information set at node v (i.e., the
                                                        Now we consider how to turn this single-stage mechanism
set of type vectors consistent with the answers that lead to v).
                                                      into a corresponding multistage mechanism (i.e., with the
We generally assume an elicitation tree is complete: Il is a
                                                      same outcome probabilities). First, suppose the elicitation
single type vector for any leaf l.3
                                                      tree is given, with the wife’s type elicited ﬁrst. Fig. 1 shows
  We study several variants of multistage AMD. We consider
                                                      the optimal multistage mechanism. (Why this is so will be-
the possibility starting with a given single-stage mechanism
                                                      come apparent.) This mechanism saves one query with prob-
(e.g., computed by single-stage AMD software) and turning it
                                                      ability 0.2 · 0.4=0.08.
into a corresponding multistage mechanism, as well as allow-
ing our multistage perspective to inﬂuence the choice/design If the elicitation tree (query order) is not ﬁxed, the optimal
                                                      mechanism is that given in Fig. 2. It turns out that greater
of the underlying single-stage mechanism. We also consider
                                                      savings can be obtained by eliciting the husband’s type ﬁrst:
multistage design when the elicitation tree (hence the query                                     ·
order) is given beforehand, and when we impose no con- this mechanism saves a query with probability 0.2 (0.04 +
                                                                  . (This is due to the asymmetry of the single-
straints on the form of the tree.                     0.47) = 0.10
                                                      stage mechanism from which we are starting.)
                                                        Suppose queries to the husband are slightly more expensive
3  A small example                                    than those to the wife, so that we would rather save on hus-
In this section, we illustrate various notions for automatically band queries (unlike the previous mechanism). If we allow a
designing multistage mechanisms using a simple example. different optimal single-stage mechanism, namely the analog
Suppose a divorcing couple jointly owns a painting, and an of the one above with the husband and wife roles switched
arbitrator has to decide the fate of the painting. There are (which remains optimal due to the problem symmetry), then
5 options: (1) the husband keeps the painting; (2) the wife the optimal multistage mechanism that corresponds to this
keeps it; (3) the painting remains jointly owned, but is hung
                                                         4This problem has some similarity to King Solomon’s dilemma;
   3This does not imply that the mechanism will ask all queries and however, when that dilemma is discussed in the economics litera-
uniquely determine a type vector: the concrete outcome probabili- ture [23], it is assumed that there is only one rightful mother, and
ties, speciﬁcally, the possibility of terminating at an interior node both women know who it is—unlike our problem, where the agents
will typically preclude this.                         do not know each others’ types.

                                                IJCAI-07
                                                  1502                  HUSBAND LOW    Museum w.p. 1        cess in our trees.5 Our tree transformations do have an analog
                                                      in decision tree learning, where reordering is often consid-
                                                      ered for the purposes of simplicity and generalization [6];but
   WIFE LOW                      Husband keeps w.p. .96 again the motivation, details, and meaning of such transfor-
                  HUSBAND HIGH   Wife gets pieces w.p. .04 mations are quite distinct.

                  HUSBAND LOW    Wife keeps w.p. .93  4   Converting a single-stage mechanism into a
   WIFE HIGH                     Husband gets pieces w.p. .07
                                                          multistage mechanism
           Wife keeps w.p. .40
                                                      In this section we develop methods for converting a given
                  HUSBAND HIGH   Husband keeps w.p. .78
                                 Wife gets pieces w.p. .22 (e.g., automatically designed) single-stage mechanism into
                                                      an equivalent multistage mechanism which saves on elicita-
Figure 1: The optimal elicitation tree given the single-stage tion costs. The analog of this in decision trees would be con-
mechanism and given that the wife is queried ﬁrst. When an structing a (short) decision tree, given that, for each complete
internal node has a probability-outcome pair associated with instantiation of all the features, we have already decided how
it, we terminate early at that node with that probability, with we want to classify examples with that instantiation. In the
that outcome; with the remaining probability, we move on to ﬁrst subsection we develop methods for the case where the
the next query.                                       elicitation tree (query order) is given. In the second subsec-
                                                      tion we generalize the approach to the case where the elicita-
                                 Museum w.p. 1        tion tree is not given, but can be chosen endogenously.
                    WIFE LOW
                                                      4.1  Given elicitation tree
                                                      We ﬁrst solve the simplest of our problems: converting a
  HUSBAND LOW                    Wife keeps w.p. .96
                    WIFE HIGH    Husband gets pieces w.p. .04 single-stage mechanism into the most efﬁcient multistage
                                                      mechanism for a given elicitation tree. This problem can be
                                                      motivated by considering exogenous constraints on query or-
                    WIFE LOW     Husband keeps w.p. .1 der (e.g., agents available at different times, or when the op-
  HUSBAND HIGH                                        timal ordering is readily available). More importantly, this
        Husband keeps w.p. .47                        setting serves as a stepping stone to more general techniques
        Wife gets pieces w.p. .04
                    WIFE HIGH    Wife keeps w.p. .82  below. Our key technique is to “propagate up” probability
                                 Wife gets pieces w.p. .18 from the leaves to internal nodes where this is possible.
Figure 2: The optimal mechanism when asking the husband Lemma 1 Let multistage mechanism M  correspond to
ﬁrst.                                                 single-stage mechanism S. Suppose that for some internal
                                                      node v in the elicitation tree (with exit probability ev) and
                                                      outcome o, all the leaves of the subtree Tv rooted at v assign
saves a query to the husband (rather than the wife) with prob- a probability of at least p>0 to outcome o (and none of the
ability 0.10, giving greater cost savings.            internal nodes of Tv have any exit probability). Then the fol-
  Finally, if we are willing to sacriﬁce optimality of the lowing modiﬁcation M  of M corresponds to S: (1) At node
single-stage mechanism to obtain greater query savings, this v, exit with o with probability (1 − ev)p; (2) Subtract p from
may again change the mechanism. For example, if we make the probability assigned to o at each leaf of Tv; (3) Divide all
the cost of querying sufﬁciently large, it will be optimal to not the outcome probabilities at leaves Tv by 1 − p.
ask any queries, and always choose the same outcome.                                                   
  One interesting additional motivation for automatically de- Proof: Consider the probability p(θ, o ) that outcome o
                                                      will be selected given type vector θ in M .Ifθ does
signing multistage mechanisms is that the tree-based repre-                                            
sentation of a multistage mechanism may be easier to un- not lead to v, clearly p(θ, o ) is the same in M and M ;
                                                      so assume that it does. If o = o (the outcome we exit
derstand for a human than the tabular form of a single-stage                                  
mechanism—especially if the tree is relatively small. early with), then the probability of selecting o at v is now
                                                      the early-exit probability p, plus the probability that we
  The trees in the ﬁgures are reminiscent of decision trees in                            
                                                      do not exit early but choose outcome o later, which is
machine learning [20] and boolean function representation.         old                    old
                                                      (1 − p)(p(θ, o ) − p)/(1 − p)=p(θ, o )   − p. Hence
In decision tree learning, the tree classiﬁes an example based                 old
                                                      the total probability is p(θ, o ) ; i.e., it did not change. If
on the answers to a sequence of queries about features of the                            
                                                      o  = o, then the probability of selecting o at v is the prob-
example. Similarly, a multistage mechanism determines the
                                                      ability that we do not exit early with o and choose outcome
outcome for a particular type vector based on the answers to                     old                old
                                                      o later, which is (1 − p)(p(θ, o ) )/(1 − p)=p(θ, o ) .
a sequence of queries about the agents’ types. There are sig-                      
                                                      Hence for any θ, M and M select o with the same probabil-
niﬁcant differences, however, in the form of the trees. For
                                                      ity.
example, decision trees typically do not use randomization
in determining the classiﬁcation. Moreover, decision trees 5Randomized decision trees in circuit complexity literature can
never determine the classiﬁcation at an internal node of the in some sense be viewed in this light, though the representation is
tree, whereas we probabilistically terminate the querying pro- usually as a distribution of “deterministic” trees.

                                                IJCAI-07
                                                  1503                                                      our use of the “propagating probabilities up” technique within
                                                      all of the algorithms discussed later in the paper.
  We note that the ability to propagate probability up in this
manner even when the distributions at the leaves are not iden- Corollary 1 In a multistage mechanism that saves a maxi-
tical makes this different from the standard framework in mum number of queries, for any type vector θ such that node
communication complexity theory. (In addition, we may have v will be reached if the mechanism does not exit early, the
a restricted query language, and we have a prior distribution probability that we will reach v and not exit early at v, given
                                                                               −
over the inputs.)                                     that θ is the type vector, is 1 minθ∈Iv p(θ, o). Hence,
                                                                                 o∈O
  If we propagate up as much probability as possible, we ob-
                                                      given that θ is the type vector and we have not exited early at
tain the optimal mechanism (for a given S and tree):
                                                      or before node v, and we transition from node v to node w,
Theorem 1 Suppose we apply Lemma 1 to every pair (v, o), the probability of exiting early at nodew is
                                                        −   −                      −
starting at the root and working our way down to the leaves. 1 (1 minθ∈Iw p(θ, o))/(1    minθ∈Iv p(θ, o)).
Then the resulting multistage mechanism saves the most        o∈O                    o∈O
queries (or, in the case of different query costs, the great- 4.2 Endogenously determined elicitation tree
est query cost) among multistage mechanisms corresponding
to the given single-stage mechanism and the given elicitation In this section we develop methods for converting a single-
tree.                                                 stage mechanism into a multistage one, without constraints
                                                      on the elicitation tree (query order). We ﬁrst provide a greedy
  As an example, we derive the mechanism of Fig. 2. We algorithm, and show two ways in which it can “fail” (i.e.,
start from a mechanism that saves no queries (Fig. 3). yield an arbitrarily small fraction of the query savings avail-
                                                      able). We then give an optimal dynamic program.
                                 Museum w.p. 1
                    WIFE LOW                          Greedy algorithm
                                                      Our greedy algorithm chooses the query at each stage so as
  HUSBAND LOW                    Wife keeps w.p. .96  to maximize the probability of being able to exit immediately
                    WIFE HIGH    Husband gets pieces w.p. .04 after this query given the preceding queries and responses.
                                                      Letting U(I,q,aq) denote the information state that results
                    WIFE LOW     Husband keeps w.p. .96 from being in information state I and then receiving answer
                                 Wife gets pieces w.p. .04
  HUSBAND HIGH                                        a to query q, we deﬁne the algorithm as follows.
                                                      Deﬁnition 1 The greedy algorithm chooses the query to ask
                                 Husband keeps w.p. .47
                    WIFE HIGH                         at node v from the set 
                                 Wife keeps w.p. .40                    |
                                                      arg maxq∈Q     P (a Iv,q)  minθ∈U(Iv ,q,a) p(θ, o).
                                 Wife gets pieces w.p. .13       a∈A          o∈O

Figure 3: Multistage mechanism that saves no queries at all. The greedy algorithm does what we intend:
                                                      Theorem 2  The greedy algorithm chooses a query that max-
  At the node after the husband reports “high”, the husband imizes the probability of exiting immediately after it.
                      ≥
keeps the painting with p .47 in all subsequent leaves. So Theorem 3 The greedy algorithm chooses the query for node
we can propagate this probability up (Fig. 4).        v in time O(|Q|·|A|·|O|·|Θ|).

                                 Museum w.p. 1          Unfortunately, the greedy algorithm can be arbitrarily far
                    WIFE LOW                          from optimal (even when all queries have equal cost):
                                                      Proposition 1 There exist single-stage mechanisms S for
  HUSBAND LOW                    Wife keeps w.p. .96
                    WIFE HIGH                         which the greedy algorithm achieves only an arbitrarily small
                                 Husband gets pieces w.p. .04 fraction of the possible query savings (even when S is deter-
                                                      ministic, there are only three players, two types per player,
                    WIFE LOW     Husband keeps w.p. .92 and three outcomes; alternatively, even when priors over
                                 Wife gets pieces w.p. .08
  HUSBAND HIGH                                        types are uniform, there are only three players, two types per
        Husband keeps w.p. .47                        player, and ﬁve outcomes).
                    WIFE HIGH    Wife keeps w.p. .75    This is a worst-case result; it is likely that the greedy algo-
                                 Wife gets pieces w.p. .25
                                                      rithm will perform quite well in practice.
       Figure 4: Some probability propagated up.      Dynamic programming algorithm
                                                      Unlike the greedy algorithm, the dynamic program must build
  At the same node, the wife gets the pieces of the painting the entire tree. The program works by computing, for ev-
with p ≥ .08 in all subsequent leaves. Propagating this up ery possible information state I, the minimum possible ex-
results in the mechanism of Fig. 2.                   pected number of queries n(I) from that point on, given that
  The following corollary characterizes the probability of ex- we have not exited early. As before, let U(I,q,a) be the in-
iting early at or before a given node. This will be helpful in formation state that results from receiving answer a to q at

                                                IJCAI-07
                                                  1504