                                   Quantiﬁed Coalition Logic

                  Thomas   Agotnes˚             Wiebe van der Hoek         Michael Wooldridge
               Faculty of Engineering                   Computer Science Department
        Bergen University College, Norway              The University of Liverpool, UK
                   tag@hib.no                         {wiebe,mjw}@csc.liv.ac.uk


                       Abstract                       However, adding quantiﬁcation in such a naive way leads to
                                                      undecidability over inﬁnite domains (using basic quantiﬁca-
    We add a limited but useful form of quantiﬁcation tional set theory we can deﬁne arithmetic), and very high
    to Coalition Logic, a popular formalism for rea-  computational complexity even over ﬁnite domains. The
    soning about cooperation in game-like multi-agent question therefore arises whether we can add quantiﬁcation
    systems. The basic constructs of Quantiﬁed Coali- to cooperation logics in such a way that we can express use-
    tion Logic (QCL) allow us to express properties as ful properties of cooperation in games without making the re-
    “there exists a coalition C satisfying property P sulting logic too computationally complex to be of practical
                         ϕ
    such that C can achieve ”. We give an axioma-     interest. Here, we answer this question in the afﬁrmative.
    tization of QCL, and show that while it is no more
    expressive than Coalition Logic, it is exponentially We introduce Quantiﬁed Coalition Logic (QCL), by mod-
                                                      ifying the existing cooperation modalities of CL in order to
    more succinct. The time complexity of QCL model
                                                      enable quantiﬁcation. In CL, the basic cooperation constructs
    checking for symbolic and explicit state represen-     ϕ                                ϕ1
    tations is shown to be no worse than that of Coali- are C , meaning that coalition C can achieve ; these op-
    tion Logic. We illustrate the formalism by show-  erators are in fact modal operators with a neighbourhood se-
                                                      mantics. In QCL, we replace these operators with expressions
    ing how to succinctly specify such social choice    ϕ    [ ]ϕ
    mechanisms as majority voting, which in Coalition  P   and  P  ; here, P is a predicate over coalitions,and
                                                      the two sentences express the fact that there exists a coalition
    Logic require speciﬁcations that are exponentially                                           ϕ
    long in the number of agents.                     C  satisfying property P such that C can achieve and all
                                                      coalitions satisfying property P can achieve ϕ, respectively.
                                                      Thus we add a limited form of quantiﬁcation to CL without
1  Introduction                                       the apparatus of quantiﬁcational set theory. We show that the
                                                      resulting logic, QCL,isexponentially more succinct than CL,
Game theoretic models of cooperation has proved to be while being computationally no worse with respect to the key
a valuable source of techniques and insights for the ﬁeld problem of model checking.
of multi-agent systems, and cooperation logics such as  The remainder of the paper is structured as follows. After
                                  [               ]
Alternating-time Temporal Logic (ATL) Alur et al., 2002 a brief review of CL, we introduce a language for expressing
and Coalition Logic (CL) [Pauly, 2001] have proved to be coalition predicates, and show that the satisﬁability problem
powerful and intuitive knowledge representation formalisms for this language is NP-complete. We then introduce QCL,and
for such games. Many important properties of cooperative give its complete axiomatization. We show that while QCL is
scenarios require quantiﬁcation over coalitions.However, no more expressive than Coalition Logic, it is nevertheless
existing cooperation logics provide no direct facility for such exponentially more succinct, in a precise formal sense. We
quantiﬁcation, and expressing such properties therefore re- then extend the language of coalition predicates to talk about
quires formulae that are exponentially long in the number of the cardinality of coalitions, and show that the corresponding
agents. Examples include expressing the notion of a weak completeness and succinctness results also hold for QCL over
          [                         ]
veto player Wooldridge and Dunne, 2004 in CL, or solu- this extended language. We illustrate QCL by showing how
tion concepts from cooperative game theory such as non- it can be used to succinctly specify a social choice mecha-
                                           [ ˚
emptyness of the core in Coalitional Game Logic Agotnes nism, which in CL requires speciﬁcations that are exponen-
et al., 2006]. An obvious solution would be to extend, for ex- tially long in the number of agents; we then round off with
ample, ATL, with a ﬁrst-order-style apparatus for quantifying some conclusions.
over coalitions. In such a quantiﬁed ATL, one might express
the fact that agent i is a necessary component of every coali-
                ϕ
tion able to achieve by the following formula:           1We adopt a notation which is in line with that in ATL:weuse
                                                      C  for ‘there is a coalition C such that ...’ where [Pauly, 2001]
              ∀C :  C  ♦ϕ → (i ∈ C )              uses [C ], and we write [C ] for Pauly’s C .

                                                IJCAI-07
                                                  11812  Coalition Logic                                     Prop    CL ψ
                                                       Ag⊥¬Ag⊥
Since QCL is based on Pauly’s Coalition Logic CL [Pauly,        CL
                                                       CL        ¬∅⊥ →  C 
2001], we ﬁrst brieﬂy introduce the latter. CL is a proposi-                  
                                                       ⊥C           ⊥ → C ⊥
tional modal logic, containing an indexed collection of unary   CL
                                                       Ag         ¬∅¬ϕ →Agϕ
modal operators C  and [C ],whereC is a coalition, i.e., a    CL
                                                       S          (C1ϕ1 ∧C2ϕ2) →C1  ∪ C2(ϕ1 ∧ ϕ2)
subset of a given set of agents Ag. The intended interpreta-    CL
tion of C ϕ is that C can achieve ϕ,or,thatC is effective MP CL ϕ →  ψ, CL ϕ ⇒CL   ψ
for ϕ.FormulaeofCL are deﬁned by the following grammar Distr   CL ϕ →  ψ ⇒CL   C ϕ →C ψ
(with respect to a set Φ0 of Boolean variables, and a ﬁxed set
Ag of agents):                                        Table 1: Axioms and Rules for Coalition Logic. In (Prop), ψ
                                                      is a propositional tautology, in axiom (⊥), we require C  ⊆
           ϕ ::= |p  |¬ϕ | ϕ ∨ ϕ |C ϕ              C ,andfor(S), C1 ∩ C2 = ∅.

where p ∈ Φ0 is an atomic proposition and C a subset of Ag.
As usual, we use parentheses to disambiguate formulae where enumerate 2n disjunctions of the form C p. The idea be-
necessary, and deﬁne the remaining connectives of classical hind Quantiﬁed Coalition Logic (QCL) is to avoid this blow-
logic as abbreviations: ⊥≡¬, ϕ → ψ ≡  (¬ϕ) ∨ ψ and   up in the length of formulas. Informally, QCL is a proposi-
ϕ ↔ ψ  ≡  (ϕ → ψ) ∧ (ψ → ϕ).                          tional modal logic, containing an indexed collection of unary
  A model M  for (over Φ0, Ag) is a triple M = S, E,π modal operators Pϕ and [P]ϕ. The intended interpretation
where                                                 of Pϕ is that there exists a set of agents C , satisfying pred-
                                                      icate P, such that C can achieve ϕ. We refer to expressions
  • S = {s1,...,s } is a ﬁnite non-empty set of states;
                o                                     P as coalition predicates, and we now deﬁne a language for
                     2S
  •E:2Ag    × S  →  2  is an effectivity function,where coalition predicates; QCL will then be parameterised with re-
    T ∈E(C  , s) is intended to mean that from state s,the spect to such a language. Of course, many coalition predicate
    coalition C can cooperate to ensure that the next state languages are possible, with different properties, and later we
    will be a member of T;and                         will investigate another such language. Throughout the re-
  • π : S → 2Φ0 is a valuation function.              mainder of this paper, we will assume a ﬁxed, ﬁnite set Ag of
                                                      agents.
Call the set of all models general models, denoted by Gen.
It is possible to deﬁne a number of constraints on effectivity
functions, depending upon exactly which kinds of scenario Coalition Predicates: Syntactically, we introduce two
they are intended to model [Pauly, 2001, pp.24–39].Unless atomic predicates subseteq and supseteq, and derive a stock
stated otherwise, we will assume that our models M are weak of other predicate forms from these. Formally, the syntax of
playability models M∈WP, where effectivity functions are coalition predicates is given by the following grammar:
outcome monotonic, i.e., ∀C ⊆ Ag, ∀s ∈ S, ∀X , Y ⊆ S,if
                                                           P ::= subseteq(C ) | supseteq(C ) |¬P | P ∨ P
X ∈E(C  , s) and X ⊆ Y ,thenY ∈E(C , s), and moreover
that effectivity functions satisfy Pauly’s weak playability con- where C ⊆ Ag is a set of agents. One can think of the
ditions [Pauly, 2001, p.30].Aninterpretation for CL is a pair atomic predicates subseteq(C ) and supseteq(C ) as a stock
M, s where M is a model and s is a state in M. The satisfac- of 2|Ag |+1 propositions, one for each coalition, which are then
           |=
tion relation “ CL”forCL holds between interpretations and to be evaluated in a given coalition Co. The circumstances
                                            ϕ
formulae of CL. We say that coalition C can enforce in s if under which a concrete coalition Co satisﬁes a coalition pred-
          ∈E(   , ) ϕ            ∈
for some T    C  s ,  is true in all t T.Thatis,C can icate P, are speciﬁed by a satisfaction relation “|=cp ”, deﬁned
make a choice such that, irrespective of the others’ choices, by the following four rules:
ϕ will hold. Formally, the satisfaction relation is deﬁned by
                                                              |=         (  )      ⊆
the following inductive rule (we assume the cases for p, , Co cp subseteq C iff Co  C
negation and disjunction are clear):                      Co  |=cp supseteq(C ) iff Co ⊇ C

    M, s |=CL C ϕ iff ∃T ∈E(C , s) such that ∀t ∈ T,    Co  |=cp ¬P iff not Co |=cp P
    we have M, t |=CL ϕ.
                                                          Co  |=cp P1 ∨ P2 iff Co |=cp P1 or Co |=cp P2
The notions of truth of ϕ in a model (M|=CL ϕ) and validity
                 C  C|=    ϕ                          Now we can be precise about what it means that “a coalition
in a class of models ( CL   ) are deﬁned as usual. The                              |=
                                                     Co satisﬁes P”: it just means Co cp P. We will assume
inference relation CL for CL is given in table 1 (taken from the conventional deﬁnitions of implication (→), biconditional
[         ]
Pauly, 2001 , but adapted to our notation): it is sound and (↔), and conjunction (∧)intermsof¬ and ∨.
complete with respect to the class of weak playability models Coalitional predicates subseteq(·) and supseteq(·) are
W    [              ]
  P ( Pauly, 2001, p. 55 ).                           in fact not independent. They are mutually deﬁnable –
                                                      due to the fact that the set of all agents Ag is assumed
3  Quantiﬁed Coalition Logic                          to be ﬁnite.  We then have that ([Agotnes˚ and Wal-
                                                               ]        (  ) ≡          ¬       ({ })
If we have n agents in Ag, and one wants to express that some icki, 2006 ) subseteq C i∈Ag \C supseteq i and
                                                              ( ) ≡              ¬        ( )
coalition can enforce some atomic property p, one needs to supseteq C C ⊆Ag ,C ⊆C  subseteq C . The reason

                                                IJCAI-07
                                                  1182that we include both types of predicates as primitives is a Example QCL Expressions: To get a ﬂavour of the kind
main motivating factor of this paper: we are interested in suc- of properties we can express in QCL, we present some exam-
cinctly expressing quantiﬁcation in coalition logic.  ple QCL formulae. First, note that the conventional CL/ATL
  We ﬁnd it convenient to make use of the following derived ability expression is deﬁned simply as: C ϕ ≡eq (C )ϕ.
predicates:                                           We can also succinctly express properties such as the solution
                                                                                              [
           (  )  ≡          ( ) ∧        (  )         concepts from Qualitative Coalitional Games Wooldridge
         eq C        subseteq C   supseteq C          and Dunne, 2004]. For example, a weak veto player for ϕ
      subset(C ) ≡   subseteq(C ) ∧¬eq (C )
           (  )  ≡          (  ) ∧¬  (  )             is an agent that must be present in any coalition that has the
      supset C       supseteq C    eq C               ability to bring about ϕ: WVETO(C ,ϕ) ≡¬excl(i)ϕ.
         incl(i) ≡   supseteq({i})                                                                 ϕ
            ( )  ≡¬      ( )                          Of course, if no coalition has the ability to achieve ,then
         excl i       incl i                          this means that every agent is a veto player for ϕ.Astrong
           any   ≡   supseteq (∅)                                  ϕ
           (  )  ≡           ( )                      veto player for is thus an agent that is both a weak veto
        nei C          ∈  incl i                               ϕ
           (  )  ≡¬i    C( )                          player for and that is a member of some coalition that can
          ei C        nei C                           achieve ϕ: VETO(i,ϕ)   ≡  WVETO(i,ϕ)   ∧incl(i)ϕ.
The reader may note an obvious omission here: we have not A coalition C is weakly minimal for ϕ if no subset of C can
                                                             ϕ        (  ,ϕ)  ≡¬       (  )ϕ
introduced any explicit way of talking about the cardinality achieve : WMIN C      subset C   .AndC   are
of coalitions; such predicates will be discussed in Section 4. simply minimal if they are weakly minimal and also able to
                                                                ϕ       ( ,ϕ)  ≡   ϕ ∧       (  ,ϕ)
  We say that a coalition predicate P is Ag-consistent if for bring about : MIN C C      WMIN   C    .Fi-
                                                      nally,   ( ) says that is the grand coalition: ( ) ≡
some Co ⊆  Ag,wehaveCo    |=cp P,andP  is Ag-valid if      GC  C          C                    GC  C
                                                      [     (  )]⊥.
Co |=cp P for all Co ⊆ Ag.                             supset C
  The model checking problem for coalition predicates is the
problem of checking whether, for given Co and P,wehave
                                                      Model Checking:   Model checking is currently regarded as
Co |=cp P [Clarke et al., 2000]. It is easy to see that this
problem is decidable in polynomial time. The satisﬁability perhaps the most important computational problem associ-
problem for coalition predicates is the problem of deciding ated with any temporal/modal logic, as model checking ap-
whether P is consistent. We get the following.        proaches for such logics have had a substantial degree of suc-
                                                      cess in industry [Clarke et al., 2000].Theexplicit state model
Theorem 1 The satisﬁability problem for coalition predi- checking problem for QCL is as follows:
cates is NP-complete.
                                                          Given a model M, state s in M, and formula ϕ of
                                                                             M,   |=    ϕ
Quantiﬁed Coalition Logic: We now present QCL.Itsfor-     QCL, is it the case that s QCL  ?
mulae are deﬁned by the following grammar:
                                                      Notice that in this version of the problem, we assume that
                                                                                M
        ϕ ::= |p  |¬ϕ | ϕ ∨ ϕ |Pϕ | [P]ϕ           the components of the model  are explicitly enumerated
                                                      in the input. It is known that the corresponding problem for
Models for CL and QCL are the same. The satisfaction relation Coalition Logic may be solved in polynomial time O(|M| ·
for the new operators is as follows.                  |ϕ|) [Pauly, 2001, p.50] (as may the explicit state ATL model
                                                      checking problem [Alur et al., 2002]). Perhaps surprisingly,
    M, s |=QCL Pϕ iff ∃C ⊆ Ag: C |=cp P and ∃T ∈
                                                      the QCL model checking problem is no worse:
    E(C , s) such that ∀t ∈ T,wehaveM, t |=QCL ϕ.

    M, s |=QCL  [P]ϕ iff ∀C ⊆ Ag: C  |=cp P implies   Theorem 2  The explicit state model checking problem for
    ∃T ∈E(C  , s) such that ∀t ∈ T, M, t |=QCL ϕ.     QCL may be solved in polynomial time.
Readers familiar with modal logic may wonder why we did Of course, this result is not terribly useful, since it assumes
not introduce the universal coalition modality [P]ϕ as the             M
    ¬  ¬ϕ                                           a representation of that is not feasible, since it is expo-
dual  P    . In fact such a deﬁnition would not serve the nentially large in the number of agents and Boolean vari-
desired purpose. Consider the pattern of quantiﬁers in the ables in the system. Implemented model checkers use suc-
semantics of ·: ∃∃∀. Taking the dual ¬·¬ would yield
                                                      cinct languages for deﬁning models; for example, the REAC-
the quantiﬁers ∀∃∃, rather than the desired ∀∃∀ pattern. Of
                                                      TIVE MODULES LANGUAGE    (RML)ofAluretal[Alur and
course, this does not mean that [P]ϕ is not deﬁnable from
                                                      Henzinger, 1999]. Assuming an RML representation, Coali-
Pϕ (and the propositional connectives) in some other way.
                                                      tion Logic model checking is PSPACE-complete [Hoek et al.,
In fact:                                                 ]
             [ ]ϕ ≡            ( )ϕ                 2006 , and thus no easier than theorem proving in the same
             P                eq C                    logic [Pauly, 2001, p.60]. It is therefore more meaningful to
                    { | |=  }
                     C C pc P                         ask what the model checking complexity of QCL is for such
Thus, for expressiveness, C  together with the proposition- a representation. We only give a very brief summary of RML
als are adequate connectives, and [P]ϕ is deﬁnable. The rea- – space restrictions prevent a complete description; see [Alur
son we introduce the box cooperation modality as a separate and Henzinger, 1999; Hoek et al., 2006] for details.
construct is one of the main motivations in this paper, as dis- In REACTIVE MODULES, a system is speciﬁed as a col-
cussed before for the different predicate operators: succinct- lection of modules, which correspond to agents. Here is a
ness of expression.                                   (somewhat simpliﬁed) example of an RML module:

                                                IJCAI-07
                                                  1183                                                           P0     cp supseteq(∅)
                                                                                             
                                                           P1     cp supseteq(C ) ∧ supseteq(C )
                  module  toggle controls x                                        
                                                                 ↔ supseteq(C ∪ C )
         init       []  ;   x :=                           2              (  ) →¬        (  )
                        ;     := ⊥                       P       cp supseteq C     subseteq C
                    []       x                             P3        subseteq(C ∪{a}) ∧¬supseteq(a)
         update     []x  ;  x  := ⊥                               cp
                                                                 → subseteq(C )
                    [](¬x)  ; x  :=                                                          
                                                           P4     cp subseteq(C ) → subseteq(C )
                                                                     ψ
This agent toggle, controls a single Boolean variable, x.The Prop  cp
                                                                     ϕ → ψ,    ϕ ⇒    ψ
choices available to the agent at any given time are deﬁned MP     cp         cp       cp
                                                           δ          δ(   )
by the init and update rules. The init rules deﬁne the      Ax     QCL   Ax
                                                           δ          ϕ ↔
choices available to the agent with respect to the initialisation QCL  P
                                                                            eq (C )ϕ
of its variables, while the update rules deﬁne the agent’s          {C |C cp P}
choices subsequently. The init rules deﬁne two choices for δ[]    QCL [P]ϕ ↔
                                                                             (  )ϕ
the initialisation of this variable: assign it the value or the     {C |C  P} eq C
     ⊥                                                                   cp
value . Both of these rules can ﬁre initially, as their condi- δR δ(R)
tions () are always satisﬁed; in fact, only one of the avail-
able rules will ever actually ﬁre, corresponding to the “choice Table 2: Axioms and Rules for Quantiﬁed Coalition Logic.
made” by the agent on that decision round. With respect to The condition of P2 is C ⊆ C ,forP4 it is C ⊆ C , ψ
                                                
update  rules, the ﬁrst rule says that if x has the value , in Prop is a propositional tautology; Ax in δAx is any CL-
                                                ⊥
then the corresponding choice is to assign it the value , axiom, R in δR is any CL-rule
while the second rule ‘does the opposite’. In other words,
the agent non-deterministically chooses a value for x initially,
and then on subsequent rounds toggles this value.     Axiomatization: The translations introduced above pro-
  The following can be proved by an adaption and extension vide the key to a complete axiomatization of QCL. First, recall
of the proof in [Hoek et al., 2006].                  Pauly’s axiomatization of Coalition Logic (Table 1). Given
                                                      this, and the translations deﬁned previously, we obtain an ax-
Theorem 3 The model checking problem for QCL assuming
                                                      iom system for QCL-formulae as follows. First, QCL includes
an RML representation for models is PSPACE-complete.
                                                      the δ translation of all the CL axioms and rules, and axioms
This result, we believe, is potentially much more interesting that state that the δ-translation is correct: see the lower part of
than that for explicit state model checking, since it tells us Table 2. On top of that, QCL is parametrised by an inference
that QCL model checking is no more complex than Coalition relation cp for coalition predicates. The axioms for this in
Logic even for a realistic representation of models.  Table 2 are taken from [Agotnes˚ and Walicki, 2006].
                                                      Theorem 5
Expressive Power: We now argue that QCL is equivalent in
                                                            ˚                        
expressive power to Coalition Logic. To begin, consider the 1. ([Agotnes and Walicki, 2006]) cp is sound and com-
                                                                         |=        ⇔
following translation τ from QCL formulae to CL formulae. plete: for any P, cp P           cp P
                τ
For atoms p and ,  is the identity, and it distributes over 2. For any CL formula ϕ, CL ϕ ⇒QCL    δ(ϕ)
disjunction, and moreover:                                    ϕ                             ϕ ↔  δ(τ(ϕ))
                                                       3. Let  be any QCL formula. Then QCL
                                                                              ϕ        δ(τ(ϕ))
         τ(Pϕ)=                C τ(ϕ)                 and, in particular, QCL iff QCL       .
                      {C |C |=pc P}
         τ([P]ϕ)=                C τ(ϕ)                                                       ϕ
                        {C |C |=pc P}                 Theorem 6 (Completeness and Soundness) Let be an ar-
                                                      bitrary QCL-formula. Then: QCL ϕ iff |=QCL ϕ
  We already know from above that we have a translation
in the other direction: let us call it δ, with deﬁning clause Examples of derivable properties include:
δ(C ϕ)=eq (C )δ(ϕ).
                                                           |=    [P1]ϕ → [P2]ϕ    when |=   P1 → P2
  As an example, suppose Ag =  {a, b, c} and let P =         QCL                         cp
                                                           |=    ([P1]ϕ ∧ [P2]ϕ) → [P1 ∨ P2]ϕ
(supset({a})∨supset({b})∨supset({c}))∧¬eq ({a, b, c}).       QCL
Now, consider the QCL  formula ψ  =   Pq.Then       These illustrate that we not only have primitive modal oper-
τ(ψ)={a,  b}q ∨{a, c}q ∨{b, c}q while δ(τ(ψ)) = ators, but also some kind of operations over them, like nega-
eq ({a, b})q ∨eq ({a, c})q ∨eq ({b, c})q. Hence, one tion and conjunction. This of course is very reminiscent of
can think of δ(τ(ϕ)) as a normal form for ϕ, where the only Boolean modal logic, where one studies algebraic operations
coalition predicate in ϕ is eq .ThatQCL and CL have equal ex- like complement, meet and join on modal operators [Gargov
pressive power follows from the fact that the two translations and Passy, 1987]. We will not pursue the details of the con-
preserve truth.                                       nection here.
Theorem 4 Let M  be a model, and s a state, and let ϕ be a
QCL formula, and ψ a CL formula. Then:                Succinctness: Theorem 4 tells us that the gain of QCL over
 1. M, s |=    ϕ  iff M, s |=  τ(ϕ)                   CL is not its expressivity. Rather, the advantage of QCL is
           QCL              CL                        in its succinctness of representation. For example, for the
    M,   |=   ψ     M,   |=    δ(ψ)
 2.    s   CL    iff   s   QCL                        QCL formula anyq, the translated CL formula τ(anyq) is

                                                IJCAI-07
                                                  1184exponentially longer, since it has to explicitly enumerate all
                                              τ(ϕ)
coalitions in Ag.Isithowevergenerally the case that                gt(n)  ≡   geq(n +1)
is shorter than ϕ? Since the translation does some computa-          ( )  ≡¬      ( )
          |=                                                        lt n       geq n
tions under cp , this is in general not the case. For instance,    leq(n) ≡   lt(n +1)
if P = supseteq({a}) ∧ supseteq({c}) ∧ supseteq({b}) ∧               ( )  ≡      (( +1)/2)
(       ({ , , }) ∨        ({ , , }))     ψ =                   maj n       geq  n
 subseteq a b c    subseteq a  b d   ,then     P q                ceq (n) ≡   (geq(n) ∧ leq(n))
would have as a τ-translation {a, b, c}q, which is shorter
than the original QCL-formula ψ. But then again, δ(τ(ψ)) The ﬁrst natural question is whether geq(n) is deﬁnable in
is a QCL formula that is equivalent to ψ, but that has a size QCL. Indeed it is:
similar to τ(ψ).                                                             
                                                                   (  ) ≡                  (  )
  To make this all precise, let us deﬁne the length (ϕ) of     geq n               supseteq C        (1)
both QCL and CL formulas ϕ, as follows:                                  C ⊆Ag ,|C |≥n
      ()=(p)=1                                     However, we again see that such a deﬁnition leads to expo-
                                                      nentially large formulae, which justiﬁes extending the pred-
      (ϕ1 ∨ ϕ2)=(ϕ1)+(ϕ2)+1
      (¬ϕ)=(ϕ)+1                                    icate language of QCL with an atomic coalition predicate
      ( ϕ)=[   ]ϕ)=          ( )+(ϕ)             geq(n) for every n ∈ N. Call the resulting logic QCL(≥),
         P       P         prsize P                          |=        |=
      (C ϕ)=coalsize(C            )+(ϕ)           and let  cp≥ and   QCL(≥) denote the satisﬁability rela-
                                                      tions for QCL(≥) predicates and QCL(≥) formulae, respec-
with                                                  tively. Once again, the gain is not expressiveness but suc-
                                                      cinctness. As another example of the added succinctness,
      (       (  ))  =         (  )+1
 prsize subseteq C       coalsize C                   consider the CL formula C p.InQCL this cannot in general
      (        ( ))  =         (  )+1
 prsize supseteq C       coalsize C                   be written by any less complex formula than subseteq(C ) ∧
      (¬  )=(                   )+1
 prsize P                prsize P                     supseteq(C )p,butinQCL(≥) it can be simpliﬁed somewhat
      (   ∨   )=              (  )+       (  )+1
 prsize P1  P2           prsize P1  prsize P2         to supseteq(C )∧¬geq(|C |+1)p (which in general is sim-
        ( )=|               |
 coalsize C               C                           pler since one of the enumerations of the agents in C is re-
                                                      placed by a number).
  Let ϕ and ψ be X and Y formulas, respectively, where
                                                        A subtle but important issue when reasoning with the logic
X and Y  both range over CL and QCL. Then we say that
                                                      is the way in which the natural number argument of the
they are equivalent with respect to some class of models if
                                                      geq(...) predicate is represented. Suppose, (following stan-
they have the same satisfying pairs M, s, that is, for each
                                                      dard practice in complexity theory), that we represent the
M, s in the class of models it is the case that M, s |= ϕ
                                               X      argument in binary. Now, we ask whether a given coali-
iff M, s |= ψ. This deﬁnition naturally extends to sets of
         Y                                            tion predicate P is satisﬁable, where P contains a constraint
formulas.
                                                      geq(n). Now checking the satisﬁability of such constraints
  In the following theorem we show that QCL is exponen-
                                                      is not obviously in NP. The problem is that the witness C
tially more succinct than CL, over general models. This no- to the satisﬁability of P is exponentially larger than the con-
                                   [         ]
tion of relative succinctness is taken from Lutz, 2006 ,who straint geq(n). Of course, if we express the natural number
demonstrates that public announcement logis is more succinct n in unary, then this is not an issue. But unary is not a realis-
than epistemic logic.                                 tic or practical representation for numbers. It turns out, how-
Theorem 7                                             ever, that we do in fact get NP completeness for the satisﬁabil-
                                                                           ≥
There is an inﬁnite sequence of distinct QCL formulas ity problem also for QCL( ), although the argument requires
ϕ0,ϕ1,...such that, not only is the CL formula τ(ϕi ) equiv- some more work. The reason is that we can use an efﬁcient
                                                                                              [ ˚
alent to ϕi for every i ≥ 0,butevery CL formula ψi that encoding of the witness C .Thiswasshownby Agotnes and
                                                                   ]
is equivalent, with respect to general models, to ϕi has the Alechina, 2006 for a similar problem (cf. Section 5).
                |ϕ |
                 i                                      Let Ag(P) and subp(P) denote the set of agents, and the
property (ψi ) ≥ 2 .
                                                      set of sub-predicates, respectively, occurring in a predicate P.
4  Coalition Size                                     Lemma 1   Any satisﬁable QCL(≥)predicateP is satisﬁed by
                                                      a coalition consisting of no more than 1+maxP agents,
As we noted earlier, an obvious omission from our language where 1+maxP equals
of coalition predicates is designated predicates for expressing
cardinality properties of coalitions. In this section, we ex- max({|Ag(P)|, max({geq(n):geq(n) ∈ subp(P)})})
plore extensions to the framework for this purpose. The ob- Theorem 8 The satisﬁability problem for QCL(≥) coalition
vious approach is to introduce primitive coalition predicates predicates is NP-complete.
geq(n),wheren ∈ N, with semantics as follows:
                                                        It is straightforward to lift the translation τ from QCL to
                                                                                                      ≥
               C |= geq(n) iff |C |≥n                 CL to the case when also the additional predicates of QCL( )
                                                      are allowed, and it is easy to see that Theorem 4 holds also
Given this predicate, we can deﬁne several obvious derived for QCL(≥) formulae. For axiomatisation, we only need to
predicates (see also [Agotnes˚ and Alechina, 2006] for a dis- add axioms for the geq(n) predicates to the predicate calclu-
cussion of a similar language).                       lus. That can be achieved simply by adding (1) as an axiom

                                                IJCAI-07
                                                  1185