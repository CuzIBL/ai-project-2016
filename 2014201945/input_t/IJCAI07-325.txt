              Domain Independent Approaches for Finding Diverse Plans

                      Biplav Srivastava†        Tuan A. Nguyen‡     Alfonso Gerevini¶
                                            ∗
                  Subbarao Kambhampati           Minh Binh Do§         Ivan Serina¶
                   †IBM India Research Laboratory, New Delhi and Bangalore, India, sbiplav@in.ibm.com
                            *Arizona State University, Tempe, AZ, USA 85287, rao@asu.edu
                     ‡University of Natural Sciences, Ho Chi Minh, Vietnam, natuan@ﬁt.hcmuns.edu.vn
                                §Palo Alto Research Center, USA, minhdo@parc.com
                              ¶University of Brescia, Italy, {gerevini,serina}@ing.unibs.it

                    Abstract                          are domain-speciﬁc approaches (See Section 5). For exam-
                                                      ple, Myers [Myers & Lee, 1999] expects the domain model-
    In many planning situations, a planner is required ers to provide a “meta-theory” of the domain (in addition to
    to return a diverse set of plans satisfying the same the domain transition model in terms of actions and their ef-
    goals which will be used by the external systems  fects). In this paper, we focus on domain-independent means
    collectively. We take a domain-independent ap-    of ﬁnding (and comparing) diverse plans. This immediately
    proach to solving this problem. We propose differ- brings up the issue: on what basis should two plans be com-
    ent domain independent distance functions among   pared? The ﬁrst contribution of this paper is the proposal of a
    plans that can provide meaningful insights about  spectrum of distance measures that capture plan characteris-
    the diversity in the plan set. We then describe how tics in terms of actions, behaviors (states that result from the
    two representative state-of-the-art domain indepen- plan execution) and causal structures.
    dent planning approaches – one based on compila-    Once the distance measures are in place, we turn to the
    tion to CSP, and the other based on heuristic local issue of automatically generating sets of plans that have the
    search – can be adapted to produce diverse plans. desired diversity in terms of those distance measures. A naive
    We present empirical evidence demonstrating the   approach for this would be to let the planner generate multi-
    effectiveness of our approaches.                  ple solutions and ﬁlter out the solutions that do not satisfy
                                                      the required diversity. Such a ﬁltering approach is not very
                                                      promising, particularly given the fact that the set of plans for
1  Introduction                                       a given problem can in principle be inﬁnite.1 Indeed, Boddy
A typical automated planner takes as input the speciﬁcations et. al. 2005, who use this type of ﬁltering technique in the in-
of the initial and goal states and the set of available ac- trusion detection domain, explicitly acknowledge the need for
tions, and ﬁnds a plan that will satisfy the goals by efﬁciently approaches that take diversity constraints into account during
searching in the space of possible state conﬁgurations or ac- search more actively.
tion orderings (plans). In many planning situations, a planner The second contribution of our paper is thus an investiga-
is required to return not one but a set of diverse plans satisfy- tion of effective approaches for using distance measures to
ing the same goals which will be used by the external systems bias a planner’s search to ﬁnd diverse plans efﬁciently. The
collectively. As an example, in adaptive web services compo- technical details of biasing the search do depend on the de-
sition, the web service engine wants to have a set of diverse tails of the underlying planner. To get a broader understand-
plans/ compositions such that if there is a failure while exe- ing, we decided to investigate two representative state-of-the-
cuting one composition, an alternative may be used which is art planning approaches. The ﬁrst, GP-CSP, typiﬁes the issues
less likely to be failing simultaneously[Chaﬂe et al., 2006]. involved in generating diverse plans in bounded horizon com-
However, if a user is helping in selecting the compositions, pilation approaches, while the second, LPG, typiﬁes the issues
the planner could be ﬁrst asked for a set of diverse plans and involved in modifying the heuristic search planners. Our in-
when she selects one of them, the planner is next asked to ﬁnd vestigations with GP-CSP allow us to compare the relative dif-
plans that are similar to the selected one. Another example is ﬁculties of enforcing diversity with each of the three distance
using planning for intrusion detection [Boddy et al., 2005], measures. We ﬁnd that using action-based distance measures
where the aim is to detect diverse ways of possible intrusion to ﬁnd diverse plans usually results in plans that are also di-
attacks (represented as plans).                       verse with respect to their behavior and causal structures, but
  Although the need for ﬁnding similar or different plans has less likely in other permutations. With LPG, we focus only
been noticed in the past, there has been little concrete work on the action-based distance, which can be treated in a nat-
on formalizing and solving the problem. What little there is ural way by a relatively simple modiﬁcation of the heuristic
has concentrated on ﬁnding similar plans[Fox et al., 2006] or function, to explore scaleup issues. We ﬁnd that the proposed
                                                      distance measures make LPG more effective in solving for di-
  ∗Kambhampati’s research is supported in part by an IBM Faculty verse plans over large problem instances.
Award, the NSF grant IIS–308139, the ONR grant N000140610058,
and by a Lockheed Martin subcontract TT0687680 to ASU as part 1To see this, note that there may be inﬁnitely many non-minimal
of the DARPA Integrated Learning program.             variations of a single plan.

                                                IJCAI-07
                                                  2016     Basis    Pros              Cons                             Name   Basis    Computation
     Actions  Does not require  No problem information           δ1 (δa) Actions Set-difference
              problem information is used                        δ2     Actions  Preﬁxes Neighbourhood
     States   Not dependent on any speciﬁc Needs an execution    δ3 (δs) States  Set-difference
              plan representation simulator to identify states   δ4     States   Preﬁxes Neighbourhood
     Causal links Considers causal proximity Requires domain theory δ5 (δc) Causal Links Set-difference
              of state transitions (action)                      δ6     Causal Links Preﬁxes Neighbourhood
              rather than positional
              (physical) proximity
                                                      Table 2: A spectrum of distance functions based on different
Table 1: The pros and cons of different bases to characterize bases and way of computations.
plans.                                                actual states that an execution of the plan will take is consid-
  In the rest of the paper, we start by formalizing the problem ered. Hence, we can now compare plans of different repre-
and then propose different plan distance functions. Next, we sentations, e.g., 4 plans where the ﬁrst is a deterministic plan,
propose methods to ﬁnd diverse plans and demonstrate their the second is a contingent plan, the third is a hierarchical plan
effectiveness using GP-CSP and LPG. We end with a discus- and the fourth is a policy encoding probabilistic behavior. If
sion on related work and our main results.            causal links are used as the basis for comparison, the causal
                                                      proximity among actions is now considered rather than just
2  Distance Measures                                  physical proximity in the plan.
To talk formally about generation of diverse plans, we need to Aggregating Distances Once a basis for plan comparison is
start with the notion of distance between plans. Let δ(Si,Sj) chosen, we still have different choices for aggregating the dis-
→  [0, 1] denote a distance function between a pair of plans. tances. For example, if we are interested in action based com-
A value of 0 represents complete similarity of plans while 1 parison of plans, then we could (i) view the plans as sets (or
represents complete diversity. Following the convention of bags) of actions and consider set (bag) difference between the
[Hebrard et al., 2005],foragivensetS of plans, we de- two plans, (ii) consider the plans as sequences of actions and
               max    (     )               min       consider measures such as “hamming distance” that are sen-
ﬁne max(δ, S) = Si,Sj ∈S δ Si,Sj and min(δ, S) = Si,Sj ∈S
                                                      sitive to the position of the actions. In Table 2, 6 distance
δ(Si,Sj). The problem of ﬁnding k diverse/ similar plans
for a problem PP, whose set of all plans is represented by functions are presented which use 3 different bases and 2 dif-
Plan(PP), is then stated below.                       ferent ways of computation. We use δ1, δ3 and δ5 and refer to
                                                      them by δa, δs and δc, respectively, in the rest of the paper.
    dDISTANTkSET (resp.   dCLOSEkSET): Find  S
    with S ⊆ Plan(PP), | S | = k and min(δ, S) ≥ d                             nalae           alae
    (resp. max(δ, S) ≤ d).                               n    Pendn  e
  At the heart of tackling this problem is the issue of deﬁning
criteria by which two plans are compared.2 As mentioned
earlier, we focus here on domain-independent measures for
comparing plans. We can compare two plans in terms of:                                  Plan -
 1. Actions that are present in the two plans.
                                                         Plan al aalan

 2. The behaviors resulting from the execution of the plans -     ----
    (where the behavior is captured in terms of the sequence -
    of states the agent goes through).                            ----
                                                                                        Plan -
                                                                  ----

 3. The causal structures of the two plans measured in terms -    ----
    of the causal links representing how actions contribute to
                                                                  ----   --
    the goals being achieved.3                                    --
                                                                  --  ----   -
  Table 1 gives the pros and cons of using the different com-     ---    --
parison methods. We note that if actions in the plans are used                          Plan -
as the basis for comparison, no additional problem or domain
theory information is needed. If plan behaviors are used as Figure 1: Example illustrating bases for distance measures.
the basis for comparison, the representation of the plans that
                                                      Ai and Ag denote dummy actions producing the initial state
bring about state transition becomes irrelevant since only the and consuming the goal state, respectively.
  2                                                   Example:
   This issue is complicated by the fact that the plans being com- In Figure 1, three plans are shown for a planning prob-
pared can be generated by an automated planner or found in other
                                                      lem where the initial state is p1,p2,p3 and the goal state
ways, e.g., given manually or manipulated after getting it from  
a planner[Srivastava, Vanhatalo, & Koehler, 2005]. Although we is g1,g2,g3 . The action models and the causal structures
only consider generated plans, the distance measures apply to other of plans are shown to the left. Plans S1-1 and S1-2 have the
provences as well. We make no apriori assumption about the plans same actions but different ordering structures. S1-1 has par-
like each goal has a single causal support structure. allel actions while S1-2 has them in sequence. The plan S1-3
                 p
  3               1
              A1 →  A2                                has A1 like the other plans but all other actions are different
   A causal link       records that a predicate is produced   
at A1 and consumed at A2. A causal chain is a sequence of causal (A2 and A3). However, it also achieves the same goals.
                p1      p2           pn−1
links of the form A1 → A2,A2 → A3, ..., An−1 → An.Weuse An action based plan comparison method which uses
causal links for analysis but refer to a plan’s causal links by causal position-based distance aggregation would ﬁnd S1-1, S1-2
chains, wherever possible, for convenience.           and S1-3 to be all different. This is because all the three plans

                                                IJCAI-07
                                                  2017have different sets of action preﬁxes. If instead, the action in- second complication arises for the causal-based distance. A
                                                                    p
formation is used with set differencing, S1-1 and S1-2 would causal link a1 → a2 between two actions a1 and a2 indi-
be found to be identical.                             cates that a1 supports the precondition p of a2.However,the
  A state based comparison method which uses any of the CSP assignment p, a1 only provides the ﬁrst half of each
given computation choice would ﬁnd S1-2 and S1-3 to be causal-link. To complete the causal-link, we need to look at
identical, and both of them to be different from S1-1. This the values of other assignments to identify action a2 that oc-
is because the states after every transition in S1-2 and S1-3 cur at the later level in the planning graph and has p as its
are identical. S1-1, on the other hand, has (trivially) the same precondition.
ﬁrst and last states but no intermediate states.
  A causal link based comparison method which uses set dif- 3.2 Making GP-CSP Return a Set of Solutions
ferencing would ﬁnd S1-1 and S1-2 to be the same while S1-3
as different. This is because the causal links for goals g2 and To make GP-CSP return a set of solutions satisfying the
g3 in S1-1 (S1-2) are different from those of S1-3.   dDISTANTkSET constraint using one of the three distances,
                                                      we add “global” constraints to each original encoding to en-
3  Finding Diverse Plans with GP-CSP                  force d-diversity between every pair of solutions. When each
                                                      global constraint is called upon by the normal forward check-
The GP-CSP planner[Do & Kambhampati, 2001] converts   ing and arc-consistency checking procedures inside the de-
Graphplan’s planning graph into a CSP encoding, and solves fault solver to check if the distance between two solutions is
it using a standard CSP solver. The solution of the encoding over a predeﬁned value d, we ﬁrst map each set of assign-
represents a valid plan for the original planning problem. In ments to an actual set of actions (action-based), predicates
the encoding, the CSP variables correspond to the predicates that are true at different plan-steps (state-based) or causal-
that have to be achieved at different levels in the planning links (causal-based) using the method discussed in the previ-
graph (different planning steps) and their possible values are ous section. This process is done by mapping all var, value
the actions that can support the predicates. For each CSP vari- CSP assignments into action sets using a call to the planning
able representing a predicate p, there are two special values: graph, which is outside of the CSP solver, but works closely
i) ⊥: indicates that a predicate is not supported by any action with the general purpose CSP solver in GP-CSP.Thecom-
and is false at a particular level/planning-step; ii) “noop”: in- parison is then done within the implementation of the global
dicates that the predicate is true at a given level i because it constraint to decide if two plans are diverse enough.
was made true at some previous level j<iand no other    We investigate two different ways to use the global con-
action deletes p between j and i. Constraints encode the re- straints: 1) parallel strategy to return the set of k solutions
lations between predicates and actions: 1) mutual exclusion all at once; and 2) greedy strategy to return them one after an-
relations between predicates and actions; and 2) the causal other. In the parallel approach, we create one encoding that
relationships between actions and their preconditions. contains k identical copies of each original planning encod-
                                                      ing created using GP-CSP planner. The k copies are connected
3.1  Adapting GP-CSP to Different Distance Bases      together using k(k − 1)/2 pair-wise global constraints. Each
When the above planning encoding is solved by any standard global constraint between the th and th copies ensures that
                                                                             i      j
CSP solver, it will return a solution containing var, value of two plans represented by the solutions of those two copies
        {            }
the form  x1,y1 , ... xn,yn . The collection of xi where will be at least d distant from each other. If each copy has n
   = ⊥
yi    represents the facts that are made true at different time variables, then this constraint involves 2n variables.
steps (plan trajectory) and can be used as a basis for the state-
                             (   = ⊥) ∧ (   =     )     In the greedy approach, the k copies are not setup in par-
based distance measure; the set of yi   yi   noop     allel up-front, but sequentially. We add to the ith copy one
represents the set of actions in the plan and can be used                                         th
for action-based distance measure; lastly, the assignments global constraint to enforce that the solution of the i copy
                                                      should be d-diverse from any of those i − 1 solutions. The
xi,yi themselves represent the causal relations and can be
used for the causal-based distance measure.           advantage of the greedy approach is that each CSP encoding
  However, there are several complications we need to over- is signiﬁcantly smaller in terms of the number of variables (n
                                                      vs. k∗n), smaller in terms of the number of global constraints
come before a speciﬁc distance measure between plans can     ( − 1) 2
be computed. First, the same action can be represented by (1 vs. k k / ), and each global constraint also contains
                                                                                 2∗   4
different values in the domains of different variables. Con- lesser number of variables (n vs. n). Thus, each encoding
sider a simple example in which there are two facts p and in the greedy approach is easier to solve. However, because
q, both supported by two actions a1 and a2.Whenset-   each solution depends on all previously found solutions, the
ting up the CSP encoding, we assume that the CSP variables encoding can be unsolvable if the previously found solutions
x1 and x2 areusedtorepresentp and q. The domains for  comprise a bad initial solution set.
x1 and x2 are {v11,v12} and {v21,v22}, both representing
the two actions {a1,a2} (in that order). The assignments 3.3 Empirical Evaluation
{x1,v11, x2,v21} and {x1,v12, x2,v22} have a dis- We implemented the parallel and greedy approaches dis-
tance of 2 in traditional CSP because different values are as- cussed earlier for the three distance measures and tested them
signed for each variable x1 and x2. However, they both rep- with the benchmark set of Logistics problems provided with
resent the same action set {a1,a2} and thus lead to the plan the Blackbox planner[Kautz & Selman, 1998]. All experi-
distance of 0 if we use the action-based distance in our plan ments were run on a Linux Pentium 4, 3Ghz machine with
comparison. Therefore, we ﬁrst need to translate the set of
values in all assignments back to the set of action instances 4However, each constraint is more complicated because it en-
before doing comparison using action-based distance. The codes (i-1) previously found solutions.

                                                IJCAI-07
                                                  2018          Prob1 Prob2  Prob3 Prob4  Prob5  Prob6            d    Prob1  Prob2 Prob3 Prob4 Prob5 Prob6
    δa    0.087 7.648  1.021 6.144  8.083  178.633          0.01 11,5, 28 8,18,12 9,8,18 3,4,5 4,6,8 8,7,7
    δs    0.077 9.354  1.845 6.312  8.667  232.475          0.03 6,3,24 8,13,9 7,7,12 2,4,3 4,6,6 4,7,6
                                                            0.05 5,3,18 6,11,9 5,7,10 2,4,3 4,6,5 3,7,5
    δc    0.190 6.542  1.063 6.314  8.437  209.287
                                                            0.07 2,3,14 6,10,8 4,7,6 2,4,2 4,6,5 3,7,5
  Random  0.327 15.480 8.982 88.040 379.182 6105.510        0.09 2,3,14 6,9,6 3,6,6 2,4,2 3,6,4 3,7,4
                                                            0.1  2,3,10 6,9,6 3,6,6 2,4,2 2,6,4 3,7,4
                                                            0.2  2,3,5  5,9,6 2,6,6 1,3,1 1,5,2 2,5,3
Table 3: Average solving time (in seconds) to ﬁnd a plan us- 0.3 2,2,3  4,7,5 1,4,4 1,2,1 1,3,2 1,3,3
ing greedy (ﬁrst 3 rows) and by random (last row) approaches 0.4 1,2,3  3,6,5 1,3,3 1,2,1 1,2,1 1,2,3
                                                            0.5  1,1,3  2,4,5 1,2,2 -     1,2,1 1,2,1
                                                            0.6  1,1,2  2,3,4 -     -     -    -
       Prob1  Prob2   Prob3   Prob4   Prob5   Prob6         0.7  1,1,2  1,2,2 -     -     -    -
 δa   0.041/0.35 0.067/0.65 0.067/0.25 0.131/0.1* 0.126/0.15 0.128/0.2 0.8 1,1,2 1,2,2 - - -   -
 δs   0.035/0.4 0.05/0.8 0.096/0.5 0.147/0.4 0.140/0.5 0.101/0.5 0.9 -  1,1,2 -     -     -    -
 δc   0.158/0.8 0.136/0.95 0.256/0.55 0.459/0.15* 0.346/0.3* 0.349/0.45
                                                      Table 5: For each given d value, each cell shows the largest
Table 4: Comparison of the diversity in the solution sets re- solvable k for each of the three distance measures δa, δs,and
turned by the random and greedy approaches            δc (in this order). The maximum values in cells are in bold.
                                                      proach returns 4.25x, 7.31x, and 2.79x more diverse solutions
                            5
512MB RAM. For each problem  , we test with different d than the random approach for δa, δs and δc, respectively.
values ranging from 0.01 (1%) to 0.95 (95%)6 and k increases Analysis of the different distance-bases: Overall, we were
from 2 to n where n is the maximum value for which GP-CSP able to solve 1264 (d, k) combinations for three distance mea-
can still ﬁnd solutions within plan horizon. The horizon (par- sures δa,δs,δc using the greedy approach. We were particu-
allel plan steps) limit is 30.                        larly interested in investigating the following issues:
  We found that the greedy approach outperformed the paral- • H1 - Is it easy or difﬁcult to ﬁnd a set of diverse so-
lel approach and solved signiﬁcantly higher number of prob- lutions using different distance measures? Thus, (1) for
lems. Therefore, we focus on the greedy approach hereafter. the same d and k values, which distance measure is more
For each combination of d, k, and a given distance measure, difﬁcult (time consuming) to solve; and (2) given an en-
we record the solving time and output the average/min/max coding horizon limit, how high is the value of d and k
pairwise distances of the solution sets.                  that we can still ﬁnd set of solutions for a given problem
Baseline Comparison: As a baseline comparison, we have    using different distance measures.
also implemented a random approach. In this approach, we •
do not use global constraints but use random value ordering H2 - What, if any, is the correlation/sensitivity between
in the CSP solver to generate k different solutions without different distance measures? Thus, how diverse the so-
                                                          lutions returned when using distance measure δ are ac-
enforcing them to be pairwise d-distance apart. For each dis-                =          ∈{       }
tance d, we continue running the random algorithm until we cording to another δ δ (where δ ,δ  δa,δs,δc )
ﬁnd kmax solutions where kmax is the maximum value of k Regarding H1, Table 5 shows the highest solvable k value
that we can solve for the greedy approach for that particular for each distance d and base δa, δs,andδc.Foragiven(d, k)
d value. In general, we want to compare with our approach pair, enforcing δa appears to be the most difﬁcult, then δs,and
of using global constraint to see if the random approach can δc is the easiest. GP-CSP is able to solve 237, 462, and 565
effectively generate diverse set of solutions by looking at: (1) combinations of (d, k) respectively for δa, δs and δc. GP-CSP
the average time to ﬁnd a solution in the solution set; and solves dDISTANTkSET problems more easily with δs and δc
(2) the maximum/average pairwise distances between k ≥ 2 than with δa due to the fact that solutions with different ac-
randomly generated solutions.                         tion sets (diverse with regard to δa) will likely cause different
Figure 3 shows the comparison of average solving time to trajectories and causal structures (diverse with regard to δs
ﬁnd one solution in the greedy and random approaches. The and δc). Between δs and δc, δc solves more problems for eas-
results show that on an average, the random approach takes ier instances (Problems 1-3) but less for the harder instances,
signiﬁcantly more time to ﬁnd a single solution, regardless of as shown in Table 5. We conjecture that for solutions with
the distance measure used by the greedy approach. To assess more actions (i.e. in bigger problems) there are more causal
the diversity in the solution sets, Table 4 shows the compar- dependencies between actions and thus it is harder to reorder
ison of: (1) the average pairwise minimum distance between actions to create a different causal-structure.
the solutions in sets returned by the random approach; and (2) For running time comparisons, among 216 combinations
the maximum d for which the greedy approach still can ﬁnd of (d, k) that were solved by all three distance measures, GP-
a set of diverse plans. The comparisons are done for all three CSP takes the least amount of time for δa in 84 combinations,
distance measures. For example, the ﬁrst cell (0.041, 0.35) for δs in 70 combinations and 62 for δc. The ﬁrst three lines
in Table 4, implies that the minimum pairwise distance av- of Table 3 show the average time to ﬁnd one solution in d-
eraged for all solvable k ≥ 2 using the random approach is diverse k-set for each problem using δa, δs and δc (which we
d =0.041  while it is 0.35 (i.e. 8x more diverse) for the call ta, ts and tc respectively). In general, ta is the small-
greedy approach using the δa distance measure. Except for 3 est and ts >tc in most problems. Thus, while it is harder
cases, using global constraints to enforce minimum pairwise to enforce δa than δs and δc (as indicated in Table 5), when
distance between solutions helps GP-CSP return signiﬁcantly the encodings for all three distances can be solved for a given
more diverse set of solutions. On an average, the greedy ap- (d, k),thenδa takes less time; this can be due to tighter con-
                                                      straints (more pruning power for the global constraints) and
  5log-easy=prob1, rocket-a=prob2, log-a = prob3, log-b = prob4, simpler global constraint setting.
log-c=prob5, log-d=prob6.                               To test H2, in Table 6, we show the cross-validation be-
  6
   Increments of 0.01 from 0.01 to 0.1 and of 0.05 thereafter. tween different distance measures δa, δs,andδc.Inthistable,

                                                IJCAI-07
                                                  2019                     δa   δs   δc
                                                      from the reference plan π0. Each cost term in E is computed
                δa   -    1.262 1.985
                δs   0.485 -   0.883                  using a relaxed temporal plan πR [Gerevini, Saetti, & Serina,
                δc   0.461 0.938 -                    2003].
                                                        The πR plans are computed by an algorithm, called Re-
Table 6: Cross-validation of distance measures δa, δs,andδc. laxedPlan, formally described and illustrated in [Gerevini,
                                                                      ]
cell row, column = δ ,δ  indicates that over all combina- Saetti, & Serina, 2003 , that we have slightly modiﬁed to pe-
       (  )                                       nalize the selection of actions decreasing the plan distance
tions of d, k solved for distance δ , the average value d /d                                  RelaxedPlan
where d and d are distance measured according to δ and δ, from the reference plan. The speciﬁc change to
respectively (  ≥ ). For example,   =0485 means    for computing diverse plans is very similar to the change de-
           d    d              δs,δa     .                     [              ]
that over 462 combinations of (d, k) solvable for δ , for each scribed in Fox et al., 2006 , and it concerns the heuristic
                                          s           function for selecting the actions for achieving the subgoals
d, the average distance between k solutions measured by δa                                       Relaxed-
is 0.485 ∗ d . The results indicate that when we enforce d for in the relaxed plans. In the modiﬁed function for
         s                                            Plan, we have an extra 0/1 term that penalizes an action b for
δa, we will likely ﬁnd even more diverse solution sets accord-                             +
ing to δ (1.26 ∗ d )andδ (1.98 ∗ d ). However, when we πR if its addition decreases the distance of π πR from π0 (in
      s        a      c        a                      the plan repair context investigated in [Fox et al., 2006], b is
enforce d for either δs or δc, we are not likely to ﬁnd a more
diverse set of solutions measured by the other two distance penalized if its addition increases such a distance).
                                                        The last term of the modiﬁed evaluation function E is a
measures. Nevertheless, enforcing d using δc will likely give
                              0 94 ∗                  measure of the decrease in plan distance caused by adding or
comparable diverse degree d for δs ( . dc) and vice versa.                  i                 r         i
                                                      removing a: |(π0 − π) ∩ πR| or |(π0 − π − a) ∩ πR|,whereπR
We also observe that ds is highly dependent on the difference
between the parallel lengths of plans in the set. d seems to contains the new action a.Theα-coefﬁcients of the E-terms
                                          s           are used to weigh their relative importance.7 The values of
be the smallest (i.e ds <da <dc)whenallk plans have the
same/similar number of time steps. This is consistent with the ﬁrst 3 terms are automatically derived from the expression
                                                                                        [
the fact that δ and δ do not depend on the steps in the plan deﬁning the plan metric for the problem Gerevini, Saetti, &
           a     c                                    Serina, 2003]. The coefﬁcient for the fourth new term of E
execution trajectory while δs does.
                                                      (αD) is automatically set during search to a value propor-
                                                      tional to d/δa(π, π0),whereπ is the current partial plan under
4  Finding Diverse Plans with LPG                     construction. The general idea is to dynamically increase the
LPG is a local-search-based planner, that incrementally mod- value of αD according to the number of plans n that have
iﬁes a partial plan in a search for a plan that contains no been generated so far: if n is much higher than k, the search
ﬂaws [Gerevini, Saetti, & Serina, 2003]. The behavior of process consists of ﬁnding many solutions with not enough
LPG is controlled by an evaluation function that is used to diversiﬁcation, and hence the importance of the last E-term
select between different plan candidates in a neighborhood should increase.
generated for local search. At each search step, the elements
in the search neighborhood of the current partial plan π are 4.2 Making LPG Return a Set of Plans
the alternative possible plans repairing a selected ﬂaw in π. In order to compute a set of kd-distant plans solving a
The elements of the neighborhood are evaluated according to dDISTANCEkSET problem, we run the LPG search multiple
an action evaluation function E [Gerevini, Saetti, & Serina, times, until the problem is solved, with the following two ad-
2003]. This function is used to estimate the cost of either ditional changes to the standard version of LPG: (i) the pre-
adding or of removing an action node a in the partial plan processing phase computing mutex relations and other reach-
π being generated. In the next two subsections, we present ability information exploited during the relaxed plan con-
some modiﬁcations to LPG for computing diverse plans using struction is done only once for all runs; (ii) we maintain an
the action-based plan distance.                       incremental set of valid plans, and we dynamically select one
                                                      of them as the reference plan π0 for the next search. Concern-
4.1  Revised Evaluation Function for Diverse Plans    ing (ii), let P = {S1, ..., Sn} be the set of n valid plans that
                                                                                        ( )
In order to manage dDISTANCEkSET problems, the function have been computed so far, and CPlans Si the subset of P
E has been extended to include an additional evaluation term containing all plans that have a distance greater than or equal
that has the purpose of penalizing the insertion and removal to d from a reference plan Si ∈ P . The reference plan π0
of actions that decrease the distance of the current partial plan used in the modiﬁed heuristic function E is a plan Smax ∈ P
π under adaptation from a reference plan π0. In general, E which has a maximal set of diverse plans in P , i.e.,
consists of four weighted terms, evaluating four aspects of the
                                                                  =                 {|CPlans(  )|}
quality of the current plan that are affected by the addition Smax  ARGMAX{Si∈P    }         Si   .
  ( )i             ( )r
(E a )orremoval(E  a  )ofa                            Smax  is incrementally computed each time the local search
      i                     i                   i
  E(a) = αE ·Execution cost(a) +αT ·Temporal cost(a) + ﬁnds a new solution. In addition to being used to identify the
                             i                 i      reference plan in E, Smax is also used for deﬁning the initial
           + αS · Search cost(a) + αD ·|(π0 − π) ∩ πR| state (partial plan) of the search process. Speciﬁcally, we ini-
  E(a)r = α ·Execution cost(a)r+α ·Temporal cost(a)r+ tialize the search using a (partial) plan obtained by randomly
           E                   T                      removing some actions from a (randomly selected) plan in the
       + α · Search cost(a)r + α ·|(π − π − a) ∩ πr|.
          S                  D     0          R       set CPlans(Smax) ∪{Smax}.
                                                        The process of generating diverse plans starting from a dy-
The ﬁrst three terms of the two forms of E are unchanged namically chosen reference plan continues until at least k
from the standard behavior of LPG. The fourth term, used
only for computing diverse plans, is the new term estimating 7These coefﬁcients are also normalized to a value in [0, 1] using
how the proposed plan modiﬁcation will affect the distance the method described in [Gerevini, Saetti, & Serina, 2003].

                                                IJCAI-07
                                                  2020