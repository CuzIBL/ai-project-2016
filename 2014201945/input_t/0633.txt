            A  Model    for Generating     Random      Quantiﬁed     Boolean    Formulas

                       Hubie  Chen                                Yannet  Interian
                Departament  de Tecnologia                 Center for Applied Mathematics
                 Universitat Pompeu  Fabra                        Cornell University
                     Barcelona,  Spain                         Ithaca, New York,  USA
                hubie.chen@upf.edu                       interian@cam.cornell.edu

                    Abstract                          “average” or “typical” case complexity. In addition, theo-
                                                      retical issues concerning this model have stimulated fruitful
    The quantiﬁed boolean formula (QBF) problem is a  and highly non-trivial interaction among the areas of arti-
    powerful generalization of the boolean satisﬁability ﬁcial intelligence, theoretical computer science, probability
    (SAT) problem where variables can be both univer- theory, and statistical physics. One particular question that
    sally and existentially quantiﬁed. Inspired by the has garnered signiﬁcant attention is the “satisﬁability thresh-
    fruitfulness of the established model for generating old conjecture” which roughly states that, as the density of
    random SAT instances, we deﬁne and study a gen-   constraints is increased, formulas abruptly change from being
    eral model for generating random QBF instances.   satisﬁable to being unsatisﬁable at a critical threshold point.
    We exhibit experimental results showing that our    The utility and widespread embrace of the random SAT
    model bears certain desirable similarities to the ran- model suggests that research on QBF could similarly beneﬁt
    dom SAT model, as well as a number of theoretical from random QBF models. This paper deﬁnes and studies a
    results concerning our model.                     general model for generating random instances of the QBF
                                                      problem. We exhibit experimental results showing that our
1  Introduction                                       model bears certain desirable similarities to the random SAT
A phenomenal success story of artiﬁcial intelligence research model; in particular, we show that our model exhibits thresh-
over the past decade has been progress on the boolean satisﬁ- old and easy-hard-easy phenomena as in the SAT model.
ability (SAT) problem. The technology of solvers for SAT has However, we also experimentally demonstrate that the much
been transformed by techniques such as conﬂict-driven learn- larger parameter space of our model offers a richer frame-
ing, highly efﬁcient propagation mechanisms, and random- work for exploring and controlling complexity than the SAT
ization. Today, state-of-the-art solvers can cope with problem model. In addition, we present a number of theoretical results
instances having sizes that are orders of magnitude beyond concerning our model, namely, we give techniques for estab-
what one would have optimistically predicted a decade ago. lishing lower and upper bounds on the purported threshold
  Inspired and encouraged by the tremendous advances in in our model. This places our work in contrast to previous
boolean satisﬁability, many researchers have recently turned work on random QBF models (discussed below), which con-
to studying a powerful generalization of boolean satisﬁa- tained very little rigorous theoretical analysis. Our theoretical
bility where both universal and existential quantiﬁcation of results demonstrate nice connections to both previously stud-
variables is permitted; this generalization is often called the ied problems as well as less studied but natural problems; we
quantiﬁed boolean formula (QBF) problem. Whereas the  believe that these results evidence that our model is mathe-
SAT problem provides a framework wherein one can model matically tangible and holds promise for being analyzed on
search problems within the complexity class NP, the QBF the level of sophistication that work on the SAT model has
problem permits the modelling of problems having higher reached.
complexity–from the complexity class PSPACE–including
problems from the areas of veriﬁcation, planning, knowledge Formulation of QBF. In this paper, we use the formulation
representation, game playing, logic, and combinatorics. Re- of QBF where consecutive variables having the same quanti-
call that SAT is known to be NP-complete, and QBF is known ﬁer are combined into a set. The following are the thus the
to be PSPACE-complete.                                general forms of QBF formulas having one, two, and three
  A signiﬁcant tool for SAT research has been the model for quantiﬁer blocks, respectively:
generating random SAT instances studied by [Mitchell et al.,                 ∃X1φ
1992], in which it is possible to reliably generate instances
that are robustly difﬁcult. This model has become a canon-                 ∀Y1∃X1φ
ical benchmark for solver evaluation, has been used heav-                ∃X2∀Y1∃X1φ
ily in conducting and thinking about SAT-related research, By a quantiﬁer block, we mean an expression QV where Q
and is widely regarded as a suitable basis for investigating is a quantiﬁer (∃ or ∀) and V is a set of boolean variables. Ingeneral, an instance of QBF contains a sequence of quantiﬁer the notation
blocks which alternate between universal and existential type,
followed by a set of clauses, denoted here by φ.1 The seman- (jl, kl, . . . , j1, k1)-F((ml, nl, . . . , m1, n1), C)
tics of these formulas are deﬁned as is standard in logic; for or
instance, a formula ∀Y1∃X1φ is true if for every assignment
to the variables Y1, there exists an assignment to the variables (kl, jl−1, . . . , j1, k1)-F((nl, ml−1, . . . , m1, n1), C)
X1 such that φ is true. An intuitive way to view a QBF for-
mula is as a game between two players: a “universal player”, depending on whether or not the number of quantiﬁer blocks
who attempts to falsify φ, and an “existential player”, who is even or odd, respectively.
attempts to satisfy φ. Players set their variables in the or- Notice that in a random QBF from this model, if any quan-
der given by the quantiﬁer preﬁx. For instance, a formula tiﬁer block is picked and the clauses are restricted to literals
∃X2∀Y1∃X1φ  can be viewed as a three-round game in which over the quantiﬁer block, the result is a random formula over
the existential player ﬁrst sets the variables X1, the universal the variables of the quantiﬁer block in the sense of the random
player then sets the variables Y1, and the existential player SAT model. It can in fact be veriﬁed that the model has a cer-
ﬁnishes by setting the variables X1. In general, the formula tain “recursive” property: generating a random QBF and then
is true if the existential player can always win the game by randomly instantiating the variables of the outermost quanti-
satisfying φ.                                         ﬁer block results in another random QBF from the model.

Description of model. Let us review the random SAT    Previous work.  Random  QBF  models have been previ-
model, which our model generalizes. This model takes three ously studied by [Cadoli et al., 1999] and [Gent and Walsh,
                                                          ] [                ]
parameters: the clause length k, the number of variables n, 1999 . Cadoli et al., 1999 have experimentally studied the
and the number of clauses C. A random formula with these QBF generalization of the SAT model where clauses of ﬁxed
parameters, denoted here by k-F(n, C), is generated one length k are generated by randomly choosing k distinct vari-
clause at a time; each clause is generated by selecting, uni- ables from the entire set of variables, and then negating each
formly at random, k distinct variables, and then negating each with probability one half. In this generalization, denoted
with probability one half.                            FCL, the generation of clauses does not differentiate among
  Now we describe our random QBF model. In the random variables from different quantiﬁer blocks. It was pointed out
                                                         [                   ]
SAT model, every clause has the same length. In our model, in Gent and Walsh, 1999 that this model is “ﬂawed” in
this also holds, but in addition, the number of literals in a that it generates trivially false formulas when the number of
clause from each quantiﬁer block is a constant. The ﬁrst pa- clauses is on the order of the square root of n, the number of
rameter to our model is thus a tuple specifying, for each quan- variables. These trivially false formulas arise from pairs of
tiﬁer block, the number of literals from that block that are in clauses where one clause contains a single existential literal,
a clause. For instance, the tuple (2, 3) speciﬁes that the gen- the other contains a single existential literal that is the com-
                                                      plement of the ﬁrst, and no universal variable is repeated in
erated formulas are of the form ∀Y1∃X1φ, where each clause
                                                      the pair.
in φ has 5 literals, 2 from Y1 and 3 from X1. We will call
                                                                                    [                   ]
such formulas (2, 3)-QBF formulas. As another example, the In attempts to remedy this issue, Gent and Walsh, 1999
                                                                                                   [
tuple (4, 2, 3) speciﬁes that the generated formulas are of the proposed two models, model A and model B, and Cadoli
                                                      et al., 1999] proposed another model, FCL2. Model A and
form ∃X2∀Y1∃X1φ,  where each clause in φ has 9 literals, 4
                                                      FCL2 are essentially modiﬁcations of the original FCL model
from X2, 2 from Y1, and 3 from X1. Analogously, we call
such formulas (4, 2, 3)-QBF formulas.                 that disallow the types of clauses that lead to the trivial fal-
  The second parameter to our model is a tuple of the same sity; for instance, in Model A, each clause is generated in-
length as the ﬁrst one, specifying the number of variables in dependently as before, but clauses containing one existen-
each quantiﬁer block. The third parameter to our model is tial literal are simply discarded and replaced. As pointed out
                                                        [                   ]
simply the number of clauses C. As an example, suppose in Gent and Walsh, 1999 , instances generated by Model A
that the ﬁrst tuple is (2, 3), the second tuple is (44, 37), and lack uniformity; in our view, the deﬁnitions of Model A and
the number of clauses is 290. The generated formulas are FCL2 have an ad hoc ﬂavor that we believe make them less
                                                      amenable to mathematical analysis.
of the form ∀Y1∃X1φ, where Y1 has 44 variables, X1 has
                                                        The study of model B in [Gent and Walsh, 1999] is con-
37 variables, each clause in φ has 2 literals from Y1 and 3
                                                      cerned mostly with QBF formulas with two quantiﬁer blocks;
literals from X1, and there is a total of 290 clauses in φ. Each
clause is generated by selecting uniformly at random, for each results of two experiments are reported. The parameteriza-
quantiﬁer block, the designated number of distinct variables, tions of Model B studied can be obtained within our model,
and then negating each variable with probability one half. We and indeed our model can be viewed as a generalization of
denote such a random formula by (2, 3)-F((44, 37), 290). In these parameterizations. However, no systematic deﬁnition
general, to denote random formulas from our model, we use of the parameter space of Model B is given. We believe that
                                                      one of the contributions of this paper is the precise articula-
  1Note that we use the standard assumption that the innermost tion of a general random QBF model that may be instantiated
quantiﬁer block is existential, for if it is universal, the block can in various ways, and from which it is possible to methodi-
be efﬁciently eliminated. We also assume, as usual, that different cally embark on experimental and theoretical explorations of
quantiﬁer blocks have disjoint variable sets.         the parameter space.2  Experimental    results                            this transition seems to take place relatively abruptly, sug-
Our ﬁrst set of experimental results concerns (2, 3)-QBF for- gesting that our model exhibits a threshold phenomenon as
mulas, all of which have the same number of variables, 80. is conjectured in the random SAT model. Also, recall that
We varied both the number of clauses, as well as the ratio of in the random SAT model, computational difﬁculty exhibits
universal to existential variables, denoted by ρ (rho). Figure 1 an easy-hard-easy pattern, where the computational difﬁculty
shows the computational cost of deciding these formulas. of formulas peaks around the point where half of the forulas
                                                      are satisﬁable. For each value of ρ in these two ﬁgures, and

      6e+08                                           in all of the other experiments we performed, our model also
                                     rho 1.2
                                     rho 1.0          exhibits this phenomena.
                                     rho 0.8
      5e+08                          rho 0.6            Now, let us consider the curves of Figure 1 together. The
                                                      picture suggested is an extremely intriguing one: starting
      4e+08                                           from the left, the peaks of each of the four curves appear to
                                                      increase as ρ decreases, attain a maximum, and then decrease
      3e+08                                           as ρ further decreases. That is, the peaks of the easy-hard-
                                                      easy patterns appear to themselves exhibit an easy-hard-easy
      2e+08                                           pattern! One lesson begged by this ﬁgure is that if one wishes
                                                      to generate the computationally hardest quantiﬁed formulas
    number  of branches
      1e+08                                           for a given number of variables, it is of crucial importance
                                                      to select the appropriate relative numbers of variables in each
         0                                            quantiﬁer block. It is also clear from this ﬁgure that, even
          6  6.5  7  7.5  8  8.5  9  9.5  10  10.5  11
             ratio=clauses/(existential variables)    after we have committed ourselves to studying (2, 3)-QBF
                                                      formulas and ﬁxed the number of variables, there are still two
Figure 1: Computational cost of random (2, 3)-QBF formulas parameters, ρ and the clause density, that can be used to con-
with 80 variables.                                    trol complexity. We envision that the large parameter space of
                                                      our model will be useful in the evaluation of QBF solvers. For
  Each curve corresponds to a different value of ρ. For instance, by tuning the clause density appropriately, one can
instance, using the introduced notation, the curve with generate an ensemble of (2, 3)-QBF formulas with 80 vari-
ρ =  0.6 corresponds to the hardness of formulas of the form ables which all have the same hardness (for one solver), but
(2, 3)-F((30, 50), C) for varying numbers of clauses C. The different ρ values; observing the behavior of another solver
hardness is plotted as a function of the ratio of clauses to ex- on such an ensemble could give insights into the relative be-
istential variables; in the case of ρ = 0.6 and 80 variables, haviors of the solvers.
this ratio is equal to C/50. Note that all of the experiments
were performed using the solver QuBE-BJ [Giunchiglia et
                                                                3.5e+07                        1
       ]                                                                               3 alt
al., 2001 , and each point of our plots represents the median                          prob
value.                                                           3e+07
  Figure 2 concerns exactly the same formulas studied by
Figure 1, but shows the probability of truth instead of the     2.5e+07
computational cost.
                                                                 2e+07
                                                                                               0.5
        1                                                       1.5e+07
                                     rho 1.2
                                     rho 1.0                                                      probability  sat
                                     rho 0.8
                                     rho 0.6                     1e+07
       0.8
                                                             number  of branches
                                                                 5e+06

       0.6
                                                                    0                          0
                                                                    40   45  50  55   60  65  70
                                                                   ratio=clauses/(existential variables)
       0.4


    probability  sat                                  Figure 3: Formulas of type (2, 2, 3)-F((15, 15, 15), C). The

       0.2                                            x-axis is the ratio of clauses to 15, the number of existential
                                                      variables in the innermost block X1.

        0
         6  6.5  7  7.5  8  8.5  9  9.5  10  10.5  11   Figure 3 shows results on   -QBF  formulas in which
            ratio=clauses/(existential variables)                             (2, 2, 3)
                                                      each quantiﬁer block has 15 variables, for a total of 45 vari-
Figure 2: Probability of truth of random (2, 3)-QBF formulas ables. When there is an odd number of quantiﬁer blocks, a
with 80 variables.                                    solver can conclude truth of a formula as soon as it ﬁnds an
                                                      assignment to the outermost quantiﬁer block such that the rest
  Examining each value of ρ individually, we see that as the of the formula is true. Accordingly, for an odd number of
number of clauses is increased, the formulas change from be- quantiﬁer blocks, the hardness drops down more slowly on
ing almost certainly true to almost certainly false. Moreover, the right of the peak (the “false” region) than on the left (the“true” region). This slowness in dropping down on the right is 3 Theoretical results
quite pronounced in Figure 3. Note that a dual phenomenon In this section, we present a number of theoretical re-
takes place for an even number of quantiﬁer blocks; see for sults which concern techniques for proving lower and upper
example Figure 1.                                     bounds on the purported threshold in our model. In the ran-
                                                      dom  SAT model, theoretical work generally studies asymp-

       1.2e+09                             1          totic properties of the model, in particular, properties that
                                (3,3) (35,35)
                                   prob               hold as the number of variables approaches inﬁnity. In this

        1e+09                                         section, we will similarly be concerned with asymptotic prop-
                                                      erties of our model, and we assume that in parameterizations

        8e+08                                               (jl, kl, . . . , j1, k1)-F((ml, nl, . . . , m1, n1), C)
                                                      and
        6e+08                              0.5
                                                          (kl, jl−1, . . . , j1, k1)-F((nl, ml−1, . . . , m1, n1), C)
                                               probability  sat
        4e+08
                                                      of our model, the ki and ji are constant, but the ni, mi, and


    number  of branches                               C  are all functions of an underlying argument n. We will
        2e+08                                         discuss properties that hold almost surely by which we mean
                                                      with probability tending to one as n approaches inﬁnity.
          0                                0
           11  12  13  14  15  16  17  18  19           Our ﬁrst result concerns a way of obtaining threshold upper
            ratio=clauses/(existential variables)     bounds, that is, “almost surely false” results. To illustrate the
                                                      idea, let us focus on -QBF formulas with two quantiﬁer
    Figure 4: Formulas of type (3, 3)-F((35, 35), C).                  (j, k)
                                                      blocks, which are of the form ∀Y1∃X1φ. Consider the game
                                                      view (mentioned in the introduction) of such a formula: the
  Figure 4 shows results on (3, 3)-QBF formulas with ρ = 1, universal player wishes to set Y1 so that the resulting formula
that is, with the same number of existential and universal vari- cannot be satisﬁed by the existential player. A reasonable tac-
ables, 35 each, for a total of 70 variables. Interestingly, al- tic for the universal player is to attempt to set the variables Y1
though the number of variables is less than in Figure 1, the so that the number of clauses in the resulting formula is max-
hardest formulas (of Figure 4) are considerably harder than imized. Suppose that the universal player chooses a setting
those of Figure 1, emphasizing the importance of the ﬁrst pa- to Y1 in such a way that she does not “look at” the existential
rameter of our model, the tuple giving, for each quantiﬁer literals of the formula–that is, the choice of assignment to Y1
block, the number of literals per clause.             depends only on the universal literals in the formula. With
  Figure 5 shows results for (1, 4)-QBF formulas with 80 this form of choice, in a sense that can be made precise, the
variables. We again see that differences in ρ can dramatically resulting formula (over X1) can be veriﬁed to be a random
affect complexity.2                                   SAT formula. If the universal player can guarantee that the
                                                      resulting random SAT formula has sufﬁciently many clauses,
                                                      then almost sure falsity follows by making use of SAT thresh-
      70000
                                   rho 0.6 (1,4)      old upper bounds.
                                   rho 1.0 (1,4)        Let us be a bit more precise. We show  how to ob-
      60000                                           tain almost sure falsity results for formulas of the form

      50000                                           (j, k)-F((m, n), D). Assume that k-F(n, C) formulas are
                                                      almost surely false, that is, C/n is an upper bound for the
      40000                                           k-SAT threshold. If we restrict such a formula to the uni-
                                                      versal literals (the Y1 literals), we obtain a j-F(m, D) for-
      30000
    time  (s)                                         mula.  Assume  further that D ≥ C is sufﬁciently high

      20000                                           so that (almost surely) a j-F(m, D) has an assignment
                                                      leaving C clauses unsatisﬁed. (In notation, we assume
      10000                                           that minSAT(j-F(m, D)) ≤  D −  C almost surely, where
                                                      minSAT(F  ) denotes the minimum, over all assignments, of
         0
          11    12    13    14    15    16    17      the number of clauses satisﬁed in the formula F .) Together,
             ratio=clauses/(existential variables)    these two assumptions, in light of the above discussion, im-
                                                      ply that (j, k)-F((m, n), D) formulas are almost surely false.
Figure 5:  Formulas of type (1, 4)-F((30, 50), C) and The following proposition is a formal statement of this claim,
(1, 4)-F((40, 40), C).                                but in a more general form.
                                                      Proposition 3.1. Suppose that instances of

                                                          (kl, jl−1, . . . , j1, k1)-F((nl, ml−1, . . . , m1, n1), C)
  2
   Note that in Figure 5, we use execution time instead of number are almost surely false, and that D is sufﬁciently high so that
of branches as a measure of hardness. This is because in some cases, almost surely, it holds that
the number of branches was so high that it was not correctly reported
by the solver (in particular, overﬂow occurred).      minSAT(jp, kp, . . . , kl+1, jl)-F((mp, np, . . . , nl+1, ml), D)is less than or equal to D − C. Then, instances of    instances of (2, 3)-F((n, n), cln) are almost surely true. The
                                                      idea is that (2, 3)-F((n, n), cln) formulas are almost surely
     (jp, kp, . . . , j1, k1)-F((mp, np, . . . , m1, n1), D) true because after “eliminating” the ﬁrst quantiﬁer block in
are almost surely false.                              such formulas, one obtains 3-F(n, cln) formulas, which are
                                                      almost surely true by our choice of c . To summarize the re-
  Note that one can formulate a dual of Proposition 3.1 that                         l
                                                      sults observed so far, we have that (2, 3)-F((n, n), cn) in-
allows one to infer “almost surely true” results from previ-
                                                      stances are almost surely true when c ≤ c = 3.52, and al-
ous “almost surely true” results, and that concerns maxSAT                                l
                                                      most surely false when c ≥ 14.5.
instead of minSAT.
                                                        Now, let us consider (2, 3)-F((ρn, n), cn) formulas. Re-
  We next observe that, given a parameterization (of the
                                                      garding lower bounds, as before, we have by Proposition
model), if the parameterization is almost surely true after the
                                                      3.2 that instances of (2, 3)-F((ρn, n), c n) are almost surely
elimination of a “preﬁx”, then the original parameterization is                        l
                                                      true. Turning to upper bounds, we observe that, by a standard
almost surely true. This permits, for instance, the derivation
                                                      probabilistic argument, every 2-SAT formula has an assign-
of “almost surely true” results for formulas beginning with a
                                                      ment satisfying (at most) 3/4 of the clauses. Thus, we have
universal quantiﬁer from such results for formulas beginning
                                                      minSAT(2-F(ρn, 4c n)) ≤ 3c n for any value of ρ. Using
with an existential quantiﬁer.                                         u        u
                                                      Proposition 3.1 as before with C = cun and D = 4cun,
Proposition 3.2. Let                                  we obtain that instances of (2, 3)-F((ρn, n), cn) are almost
                                                      surely false for c ≥ 4cu, that is, 4cu is a threshold upper
      (j , k , . . . , j1, k1)-F((m , n , . . . , m1, n1), C)
       l  l               l  l                        bound on formulas (2, 3)-F((ρn, n), cn), for any value of ρ.
be a parameterization of the model. If for some i < l it holds Summarizing, we have obtained that for any value of ρ,
that instances of                                     formulas (2, 3)-F((ρn, n), cn) are almost surely false when
                                                      c ≤  cl, and almost surely true when c ≥ 4cu. That is,
     (ji, ki, . . . , j1, k1)-F((mi, ni, . . . , m1, n1), C) such formulas change from being almost surely true to al-
or                                                    most surely false between cl and 4cu. If we set cl and cu
                                                      to 4.26, which is an approximate value of the 3-SAT thresh-
   (ki+1, ji, . . . , j1, k1)-F((ni+1, mi, . . . , m1, n1), C) old, we expect the threshold for such formulas to lie between
are almost surely true, then instances of             c = 4.26 and c = 4 · 4.26 = 17.04, where c denotes the ratio
                                                      of clauses to existential variables; this expectation is consis-
      (jl, kl, . . . , j1, k1)-F((ml, nl, . . . , m1, n1), C) tent with Figure 2.
are almost surely true.                                 In the usual random SAT model, whenever the clause
                                                      length is ﬁxed, it is known that at a sufﬁciently low constant
  Proposition 3.2 follows from the general fact that a quan- clause-to-variable ratio, formulas are almost surely satisﬁ-
tiﬁed formula is true if eliminating one or more quantiﬁer
            Φ                                         able, and that at a sufﬁciently high constant clause-to-variable
blocks from the outside of Φ, along with their associated lit- ratio, formulas are almost surely unsatisﬁable. These results,
erals, gives a true formula.                          of course, validate the hypothesis that there is a threshold phe-
Example  3.3. We demonstrate how to make use of the   nomenon in this model. We can show analogous results in our
two propositions given so far by explicitly computing model.
some threshold bounds for our model. We will consider
                                                      Proposition 3.4. Fix (j , k , . . . , j1, k1) to be a tuple with
(2, 3)-F((ρn, n), cn) formulas, that is, formulas of the type              l l
                                                      k1 ≥  2, and for i ∈ {1, . . . , l}, let n (n) be a linear func-
considered in Figures 1 and 2.                                                        i
                                                      tion of n, that is, n (n) = σ n for a constant σ > 0. There
  We begin by looking at the case where    , that is,                 i       i               i
                                     ρ =  1           exist positive constants a and a such that instances of
(2, 3)-F((n, n), cn) formulas. We can use Proposition 3.1                  l     u
specialized to two quantiﬁer blocks (that is, with p = l = 1) (jl, kl, . . . , j1, k1)-F((ml, nl, . . . , m1, n1), cn)
to obtain an upper bound of c = 14.5 for such formulas, as
discussed prior to the statement of that proposition. How is are almost surely true when c ≤ al, and instances of
this done? The ﬁrst requisite ingredient is a value cu such (jl, kl, . . . , j1, k1)-F((ml, nl, . . . , m1, n1), cn)
that 3-F(n, cun) formulas are almost surely false, that is, a
SAT threshold upper bound. By [Dubois et al., 2000], we can are almost surely false when c ≥ au. (This proposition is
                                                      meant to address formulas with both even and odd numbers
take cu = 4.506. The second ingredient needed is an up-
per bound for minSAT(2-F(n, cn)). By Theorem 3.5, which of quantiﬁer blocks, that is, we permit jl = 0.)
is presented below, we have that minSAT(2-F(n, cn)) ≤   The “almost surely true” part follows from Proposition 3.2
(0.657)cn for c = 14.5. Using the proposition with C = cun along with known lower bounds on the SAT threshold, while
and D = 14.5n, we see that (0.657)cn ≤ (14.5n) − (cun) the “almost surely false” part follows from the fact that shift-
and hence we have minSAT(2-F(n, cn)) ≤ D − C as re-   ing existential quantiﬁers inward preserves truth of quantiﬁed
quired. Therefore, instances of (2, 3)-F((n, n), cn) are al- formulas, the idea of Proposition 3.1, and a standard ﬁrst mo-
most surely false for c = 14.5 (and hence for all c ≥ 14.5). ment argument.
  Now let cl be a lower bound on the 3-SAT threshold, so We now study threshold upper bounds for our model in
that instances of 3-F(n, cln) are almost surely true. We can greater detail. Proposition 3.1 establishes a connection be-
take cl = 3.52 by [Kaporis et al., 2003]. By Proposition 3.2, tween minSAT and upper bounds in our model. Although