Session No. 15 Heuristic Problem Solving                                                        621 


                             A MODEL FOR FUNCTIONAL REASONING IN DESIGN* 
                                      P. Freeman and A. Newell 
                                    Computer Science Department 
                                     Carnegie-Mellon University 
                                  Pittsburgh, Pennsylvania, U.S.A. 

                  Abstract                                    Find a point x in a space X such that 
                                                              x satisfies the constraints C.(x) and 
      A model of the design process is developed              maximizes an objective function F(x). 
 in two stages, corresponding to the task environ 
 ment of design and the activity of posing and       Most mathematical work takes X to be Euclidean, 
 solving design problems. Use of the model with      so that a mathematical programming problem of 
 top-down and bottom-up disciplines is discussed.    some type is obtained (e.g., 20). Much computer 
 An example of the design of an object using a       work follows suit, being practical algorithms 
 semi-automated design system based on the model     for solving such problems (e.g., 5). A small 
 is presented. Several issues raised by the          amount, mostly experimental work in artificial 
 model's qualitative aspects, its suitability to     intelligence, considers more complex spaces, 
 automated design, and lines for iurther develop-    such as all arrangements of a set of objects in 
 ment are discussed.                                 a two-dimensional room (9), (11). 

                                                          The generality and utility of this formula•
                Introduction                         tion belies the difficulty of specifying prob•
                                                     lems in its terms. To formulate completely the 
      We wish to understand "the process oi devis•   design, say, of an operating system appears to 
 ing artifacts to attain goals," as Herbert Simon    be essentially impossible. All aspects of the 
 (19) recently characterized design. Our inter•      formulation contribute to the difficulties: 
 ests include the design of programming and com•     defining the space of possibilities; formulating 
 puter systems, the intellectual processes that      the constraints; obtaining all the constraints 
 constitute designing, and the actual processes      in advance; and creating a reasonable objective 
 used by humans in designing.                        function. Evidence from Eastman (7) and con•
                                                     siderations brought forth by others (e.g., 1) 
      Informal knowledge about design is abundant.   agree in indicating that humans do not design 
 Entire professions--engineering, programming and    using this approach. Even when the space seems 
 architecture--take design as a central profes•      well defined, the constraints emerge continually 
 sional aim. However, little reliable information    throughout the design, rather than being avail•
 exists about how design is accomplished. Most       able all at once. 
 works, e.g. (3), exposit design methodology to 
 instruct the novice, being based on informal             Following Eastman's evidence, one could 
 observation of design and participation in its      profitably consider relaxing the above con•
 practice, overlaid with attempts to rationalize     straint-formulation: permitting the space, the 
 i.ts methodology. These works provide a useful      objective function or the constraints to change 
 initial approximation. We learn strategies such     or to become progressively defined throughout a 
 as top-down and bottom-up, that careful specifi•    design. Instead, we wish to follow a different 
 cation of design goals is a must, and that care•    clue: the tendency of humans to design in terms 
 ful evaluation is equally important. But this       of functions. 
 provides only a beginning. Of works on the 
 psychology of design, there is even less (though         Reasoning in terms of functions--functlonal 
 see 7 and 8).                                       reasoning, as we shall call it--appears to be 
                                                     ubiquitous. We often name things by the func•
     What does exist, in quantity and quality, is    tions they provide: a machine for washing 
 work on formalizing design. This occurs both as     clothes is a "washing machine;" a man who sets 
 mathematical models and as computer programs for    switches for trains is a "switchman." We give 
 classes of design tasks. The bulk of this work      advice in functional terms: "If your man is 
 fits the following constraint formulation:          attacked, defend it." We even write definitions 
                                                     of function terms by using others: 

   This work was supported by the Advanced                    wash: To cleanse, using water or 
   Research Projects Agency of the Office of the                     other liquid, usually with soap 
   Secretary of Defense (F44620-70-C-0107) and is                    detergent, bleach or the like, 
   monitored by the Air Force Office of Scientific                   by immersing, dipping, rubbing 
   Research,                                                         or scrubbing (2). 622                                                             Session No. 15 Heuristic Problem Solving 


      Only a modest amount of scientific study has   The Basic Model for the Design Task Environment 
 been devoted to functional reasoning. Psychology 
 has had a continuing concern with functional             The basic (or qualitative) model of a 
 fixity (6), the observed tendency of humans to      design task environment consists of a set of 
 select objects for consideration in problem solv•   structures and a set of functions such that: 
 ing in terms of their functional descriptions 
 (thus, proving to be poor problem solvers if                  P1: Each structure provides a set of 
 becoming fixated on inappropriate descriptions).                   functions. 
 This work mainly demonstrates that humans do 
 indeed reason in terms of functional descriptions.            P2: For each function It provides, a 
                                                                    structure requires a set of func•
      Among artificial Intelligence programs, GPS                   tions. 
 (10) and related programs (e.g., the Heuristic 
 Compiler, 18) offer the most explicit model of                P3: A functional connection can occur 
 functioning reasoning. GPS differences operate                    between two structures if one 
 as function terms; they describe a situation in                   provides a function required by 
 its relation to a goal and operators in relation                  the other. 
 to how they affect situations. Matching the 
 functional description of a situation's require•              P4: A constructed structure consists 
 ments to the functional description of what an                    of a set of structures (its 
 operator provides selects out a subset of all                     parts) and a set of functional 
 possible operators for consideration. Thus, in                    connections between them such 
 an action task (transformation of a situation                     that: 
 into a desired one) GPS provides at least one 
 paradigm of functional reasoning.*                                 1) The functions provided are 
                                                                      those provided by the parts 
     Nothing Indicates that functional reasoning                      that are not consumed in func•
 is a total scheme, sufficient to carry out com•                      tional connections. 
 plete solutions. In GPS it only provides one 
 strand of means-ends analysis. GPS also applies                    2) The functions required are 
 actual operators to actual situations and                            those required by the parts 
 observes the results. Thus, unlike schemes for                       that are not provided by a 
 reasoning that attempt to map problems into a                        functional connection. 
 single formalized representation (e.g., those 
 in the Advice Taker tradition (14), (12)), func•         We call this the qualitative model because 
 tional reasoning may be only a partial technique    nothing is said about how many structures of a 
 that must be combined with others to achieve a      given type may exist or how much of a function 
 complete problem solving system.                    is provided or required. These additional stipu•
                                                     lations are augmentations to the model, to be 
     This paper is limited to describing and         discussed in the next section. We illustrate 
 illustrating a model for functional reasoning in    below each of the propositions, drawing most but 
design. Evidence for the model must come from        not all examples from computer systems. 
 studies of human reasoning or from the construc•
 tion of design systems that incorporate the         Structures provide functions 
model. Neither is presented here. A semi-
automated design system based on the model is             The most obvious examples are those where 
being developed (by PF) and has been used in the     an object has already been named by its functions: 
main illustration presented later. It will be 
reported on in a separate publication.                    A core memory provides memory. 
                                                          A store instruction stores information. 
     We start by describing the task environment 
 in which design can take place. We first give       The apparent banality of these statements arises 
the simplest possible model and then augment it     purely from the use of functional names as can be 
with various complexities. The next section          seen in these examples: 
deals with posing design problems and solving 
them. Finally, a detailed example is developed.           A drum provides memory. 
                                                          The BOZ instruction provides a change in 
                                                            program control. 
  The success of GPS-like programs in describing 
  human problem solving offers additional evi•      This common usage of functional names for struc•
  dence for the role of this paradigm (15), (16).   tures does lead to more serious confusion of what 
                                                    are functions and what are structures, however: Session No. 15 Heuristic Problem Solving                                                       623 


           An iteration-code requires an initiali•            items of information (their contents). 
           zation, an iteration-action, a termina•
           tion-test and an exit.                    A structure may provide a given function for any 
                                                     number of objects: 
The iteration-code is a structure--a sequence of 
 instructions. We name it "iteration-code"                    A single real-time clock provides time-
because all we know about it is that it provides              of-day for all user programs. 
 the function of iteration. If we had called it 
"Sam," there would have been no confusion between    In general there is no limit on the number of 
 structure and function.                             structures that can use a provided function. 

     Proposition P1 asserts that more than one       Structures require functions 
 function can be provided by a single structure: 
                                                          The most obvious examples involve general 
           The drum can hold user files or resi•     requirements. 
           dent systems. 
                                                              A physical object requires space. 
           The conditional branch instruction can 
           provide either loop control or switch•             A program requires primary memory 
           ing between two mutually exclusive                 space. 
           control paths. 
                                                     Typically a structure requires the conjunction 
 In all these examples there appears to be a         of several functions: 
 single capability--a single function--that under•
 lies the multiple use. A drum provides memory;               A compiler requires primary memory, 
holding user files and resident systems are                   secondary memory, input-output, and 
 simply two subvariates of the memory function.               a processor. 
 The branch provides for the single function of 
changing program control; it suffices for either              A generator requires initialization, 
 loop control or path splitting.                              a way to obtain a candidate from the 
                                                              generator state, a next state, and a 
     This singularity, however, need not be:                  termination test. 

           A pencil can print characters, punch      The second example has another instance of using 
           holes in paper, serve as a core for a     function terms to name structures. The termina•
           ball of string, and tamp down pipe        tion test might seem to be a structure. After 
           tobacco.                                  all, we know that any test is a piece of code. 
                                                     But this is because we presume a unique struc•
 Different aspects of a single object provide the    ture for the required function of testing for 
 structural basis for each separate function.        termination. In fact, generator terminations 
 Other structures can be found that provide each     can be provided by a memory protect system that 
 function separately, but not the others (in any     detects out-of-bounds memory accesses. 
 reasonable way): In the example above a type•
writer, a three-hole punch, a cardboard cylinder,         The converse of one structure providing 
 and a pipe tool, respectively.                      many functions is that in general many struc•
                                                     tures can be found to provide a given function; 
     With designed objects (e.g., a magnetic 
 tape) there is a strong tendency for a single                Tape, disk, and core provide memory. 
 function to be dominant, with all others seen as 
 variant, or even deviant:                                    Printers, terminals, and card punches 
                                                              provide output. 
           A magnetic tape provides memory or a 
           photogenic visage for public relations,   The choice of one of the structures providing a 
                                                     function is the central activity of qualitative 
 Inside of a structure the situation is otherwise,   design. 
 and parts are carefully constructed to have 
 multiple function (e.g., general registers in a          Proposition P2 is more specific than we 
 central processor).                                 have demonstrated. Functions are required by a 
                                                     structure in order to provide specific functions: 
     The structures in the examples above are 
 physical objects (drums and pencils) and abstract            A program requires primary memory 
 objects (instructions). Another important class               space to execute. 
 of structures in computer systems are relations: 
                                                     This is most clearly seen when a structure has 
           Adjacency of cells in memory provides     different functional requirements for the 
           a two-way association between two 624                                                             Session No. 15 Heuristic Problem Solving 


 different functions it can provide:                 structure is never taken as complete and always 
                                                     admits of further refinement and modification. 
          A compiler provides compiled programs 
          and also source language debugging. 
          It requires a resident symbol table to               Augmentations of the Model 
          provide the source language debugging, 
          but not to provide compiled programs. 
                                                          The model in the previous section was the 
 Construction of structures                          simplest one that seems to capture the essence 
                                                     of the relations between structure and function 
     Propositions P3 and P4 describe how struc•      in design. The situation can be complicated by 
 tures can be combined into new structures. By       various restrictions: 
 choosing a set of structures so that the func•
 tional requirements of some are satisfied by                  Define the functional specification of 
 others, some functions are left for external                  a structure to be the functions pro•
 usage. Consider a functional description of a                 vided and required by it along with 
 knife:                                                        whatever restrictions apply (as 
                                                               defined below). 
     Component structures: 
                                                                   P4. A constructed structure must 
                                                                        obey the restrictions on its 
                                                                        individual subparts after 
                                                                        the effects of the func•
                                                                        tional connections are 
                                                                        accounted for. 

                                                                   P5. A structure may be subject 
                                                                        to a supply law that limits 
                                                                        the number of structures of 
                                                                        a given functional specifi•
                                                                        cation that are available 
                                                                        and/or can be constructed. 

                                                                   P6. A structure may be subject 
                                                                        to a capacity law that 
                                                                        limits the functions that 
                                                                        can be provided. 

                                                                   P7. Functions may be quantified 
                                                                        so that an amount of a func•
                                                                        tion may be provided or 
                                                                        required (measured in some 
A functional connection exists between the                              units); these amounts may be 
blade's requirement for being held (R1) and the                         subject to capacity laws. 
handle's provision of that function (P2) . The 
blade's provision of the cutting function (P1) is                  P8. A structure may be subject 
not consumed in a connection and is thus provided                       to an input-output relation 
by the constructed structure; likewise, the                             connecting the functions it 
handle's requirement of being held (R2) is not                          provides and those it 
satisfied and is thus a functional requirement of                       requires (either by amounts 
the knife.                                                              for quantified functions or 
                                                                        mere existence for unquanti-
     This example illustrates a basic property of                       fied functions--compare 
construction: Once a functional connection is                           compiler example above). 
established, some of the functions involved may 
disappear (e.g., the ability of the handle to             As elaborate restrictions are applied, the 
hold a narrow object). They become internal to       problem of design gradually converts from one of 
the new structure, so to speak.                      purely qualitative specification into one that 
                                                     gives the full details of the structures 
     The functional description of a knife just      involved and requires quantitative mathematical 
given is incomplete. More is required to cut         treatment. 
than just having a blade and a handle (even with 
a hand). There must be motion aimed in the right     Supply laws 
way and with sufficient pressure; the material 
from cutting must be removed; the blade must be           Often only a limited supply of a given type 
sharp; and so on. A functionally described           of structure is available, especially in ad hoc Session No. 15 Heuristic Problem Solving                                                       625 


design efforts:                                              secondary file• 
          In constructing a raft to get across a                  - If it is kept in primary memory, 
          river, exactly two large felled logs                      the users will have a smaller 
          oi particular characteristics are                         job area. 
          avai lable• 
                                                                  - If it is kept on the swapping 
These logs can be described in terms of the func•                   drum, fewer users can be logged 
tions they provide and require, but one must not                    in simultaneously. 
assume from such descriptions the availabi1ity of 
an indefinite number of logs.                                     - If it is kept on the file, the 
                                                                    time to obtain files increases. 
     When design is done in a commercial enter•
prise, supply restrictions often do not exist.      The first two consequences derive from the capac-
Any number of structures of a given type can be     ity law on the amount of memory that is a form 
used, the restrictions being expressed in terms     oi conservation law (i.e., what is provided to 
oi the costs of obtaining them.                     one structure is not available for others). The 
                                                    thirI arises from the fundamental law that a 
Capacity laws                                       function (obtaining files) cannot be performed 
                                                    until its required functions (obtaining file 
     The mos t pervasive form of restriction is on  addresses) is provided. 
the ability of a structure to provide a function 
for more than one (or several) structures, or to    Input-output relations 
provide a function given that it is providing 
another.                                                 The amount of a funct ion provided can be 
                                                    tied to the amount of the functions required by 
          A wall plug may provide any electrical    an input-output relation: 
          device with power, but only one at a 
          time .                                              The number of users logged on depends 
                                                              on the amount of pr imary memory avail -
          If a conditional branch instruction is              able . 
          used for a loop, it cannot also be used 
          for path-splitting.                                 The amount oi cutting depends on the 
                                                              sharpness of the blade. 
     Capacity laws are not quantitative, but 
rather an expression of the logical character oi    Summary 
the structure in providing its functions. AImost 
any pattern oi interrelation can exist, but the          Functional reasoning in design doe s not 
most usual are:                                     operate at some particular level in the range oi 
                                                     restrictions, Rather, different domains of 
          Single-iunction capaci ty: A s tructure   design (different technologles) require the use 
          can provide one and only one of its        of specific types oi restrictions. Further, no 
          functions at a time.                      consis tency occurs within a des ign s i tuat ion 
                                                     (e.g., if some supply laws are used, it does not 
          Single-structure capacity: A structure     follow that there are supply laws on everything). 
          can provide a function to one and only    Complexity is added only for the critical struc-
          one s tructure at a time.                  tues that need it , other component s be mg le ft 
                                                     as simple as possible . 
     There at e also strong time dependent effec ts 
as we 11 as irreversible ones:                           We have laid out these augmentations to 
                                                     provide context for the qualitative model and to 
         A bomb may provide an explosion only        emphasize that casting the basic mode 1 in the 
          once .                                     simp lest of forms was deliberate. This paper 
                                                    will focus on the qualitative model, since it 
         A pawn may be queened only once.            contains the basic notions. 

Quantitative functions 
                                                                Design wi th the Mode 1 
     Many homogeneous quantities occur in func-
tional descriptions: power, space , memory, pro•         The model given in the previous sections 
cessing, channe 1 capacity, energy, time, etc.       lays out an environment. Within this a variety 
The amounts of these functions that can be pro•      of design problems can be posed. The most fun•
vided are frequently subject to capacity laws:       damental one is: 

         A file directory can be kept in primary              Given: A set of structures and 
                                                                         and their functional speci -
         memory, on the swapping drum, or on the                         fications. 