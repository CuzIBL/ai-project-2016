                                    LEARNING SHAPE DESCRIPTIONS 

                                       Jonathan H. Conn ell and Michael Brady 

                        Massachusetts Institute of Technology, Artificial Intelligence Laboratory 
                                    545 Technology Square, Cambridge MA 02139 

                    ABSTRACT 
    We report on initial experiments with an implemented 
learning system whose inputs are images of two-dimen•
sional shapes. The system first builds semantic network 
shape descriptions based on Brady's smoothed local sym•
metry representation. It learns shape models from them 
using a modified version of Winston's ANALOGY pro•
gram. The learning program uses only positive examples, 
and is capable of learning disjunctive concepts. We dis•
cuss the lcarnability of shape descriptions. 

1. Introduction 

   We report on initial experiments with an implemented 
system that learns two-dimensional shapes from images. 
The system first builds semantic network descriptions of 
the imaged shape based on Brady's smoothed local symme•
try representation [Brady and Asada 1984, Ileide 1984]. It 
learns shape models from the descriptions using a modified 
version of Winston's ANA LOG Y program [Winston 1980, 
1981, J982; Winston, Binford, Katz, and Lowry 1984]. 
The inputs to the program are grey-scale images of real 
objects, such as tools, model airplanes, and model ani•
mals. The outputs of the program are production rules 
that constitute a procedure for recognising subsequent in•
stances of a taught concept. 
   Figure la shows the gray-scale image of (a model of) 
a Boeing 747, Figure lb shows the results of Brady's         Figure 1. a. The input image, b. The smoothed local symmetries of 
smoothed local symmetries program, and Figure lc shows       the plane c. A portion of the hierarchical semantic network that is 
                                                             computed from the information m b. The full network generates 239 
a portion of the semantic network that is computed from      associative triples. 
them by our program. The semantic network is trans•
formed into a set of associative triples [Doyle and Katz        The novelty of our work is the ability to learn vi•
1985] and input to our learning program. The 747 gener•      sual shape representations from real visual data. Previous 
ates 239 associative triples. Similarly, Figure 2a shows the work has not been based on real data because such data 
subshapes found from the smoothed local symmetries of        was unavailable or too complex and unstructured for ex•
a tack hammer and Figure 2b shows the full semantic net      isting learning algorithms. However, recent developments 
for this image. The tack hammer generates 51 associative     in edge-detection [Canny 1983] and middle-level vision 
triples.                                                     [Brady and Asada 1984] have provided a solid base on 
   The learning program is a modification of Winston's       which to build a robust vision system. Using this system 
ANALOGY [Council 1985]. It is capable of learning con•       we can generate shape descriptions in a form amenable 
cepts containing disjunctions. The program learns shape      to learning. Furthermore, although the descriptions typi•
models using positive examples only. Figure 3b shows the     cally comprise between fifty and three hundred assertions, 
concept hammer that is learned from the three positive       various forms of abstraction keep this volume of data man•
instances shown in Figure 3a.                                ageable.                                                                                           J. Connell and M. Brady 923 


 Figure 2. a. The main nmoothed local symmetries computed from 
the results of Brady's program, h. The semantic network that is Figure 3. The concept hammer that is learned from the three positive 
computed from the information in a.                           instances shown above. 
 2. Representing Shape                                        A vision program needs to maintain several different rep•
                                                              resentational hierarchies, including the following: 
 To describe an object it is necessary to first segment it 
                                                              • Numeric values and symbolic descriptors 
into separate subshapes. In terms of the mathematical 
analysis in Brady and Asada 1984 i, a subshape is defined        Specifying a shape parameter of interest, say a mea•
as maximal with respect to smooth variations in the defin•    sure of the elongation of a shape, by a numerical value 
ing parameters. For example, the portions of fuselage in      is sensitive, but highly unstable. Symbolic names that 
front of and behind the wings of the B747 in Figure 2 are     correspond to an interval of numeric values are (usually) 
joined, but the handle and blade of a screwdriver arc per•    more stable but less sensitive. Our representation employs 
ceived as separate pieces. Once a part has been found, its    symbolic descriptors that have overlapping ranges. For ex•
shape is specified by three numbers: the aspect ratio, the    ample, an end which is determined to be on the borderline 
curvature of the axis, and the change in width along the      between blunt and sharp is declared to be both blunt and 
axis.                                                         sharp. Overlaps like this help to combat the quantization 
                                                              error introduced by encoding a continuous range as a set 
   Joins between subshapes are determined by examin•
                                                              of discrete symbolic values. A small change in value leads 
ing the spines of the regions and the adjacency of the 
                                                              to a small change in the representation. 
contour segments. A join is specified by the relative angle 
and sizes of the pieces, and the location of join with re•    • Structural approximations to shapes 
spect to each piece. Few previous representations of shape       Marr and Nishihara [1978] proposed summarizing the 
have described subshape joins. For example, ACRONYM           lesser subparts of an object, leaving them unspecified until 
(Brooks 1981, Brooks and Binford 1980] specified the co-      they are needed. For example, all airplanes have a fuse•

ordinate transformation between two joined pieces, but        lage, writh pairs of symmetrically attached wings and ele•
did not explicitly describe the join.                         vators. Upon closer examination, a wing of a B747 has two 
   Once we break the image into pieces and find the joins     attached engine pods, a DC10 has one, and an L1011 none. 
we must somehow represent this information. Images are        Suppressing mention of the engine subshapes, as well as 
noisy, so it is necessary to develop representations that     summarizing the parameters that describe the shapes of 
are stable, in the sense of being invariant under localized   the wings and fuselage, enables the descriptions of the 
changes such as image noise. However, tasks involving         three airplanes to closely match each other. 
visual representations, for example inspection, often re•        In general, larger subshapes tend to determine gross 
quire that programs be sensitive to fine detail. A variety    categorization, and so they tend to appear higher in the 
of techniques for simultaneously achieving stability and      structural hierarchy. Conversely, smaller subshapes tend 
sensitivity have been proposed, each expressing some as•      to allow finer discrimination and occur lower in the hier•
pect of hierarchical description. The underlying idea is      archy. The smaller subparts of a tool typically determine 
that gross levels of a hierarchy provide a stable base for    the specific function of the tool. For example, deciding 
the representation, while finer levels increase sensitivity.  whether a tool is an awl, a gimlet, or a Phillips screw 924 J. Conneil and M. Brady 


 driver involves looking closely at the end of the blade;     of the wing model the program notices that there is a dis•
 the relatively localized context of the business end of the  crepancy yet judges that the piece is still close enough to 
 blade is established by the grosser levels of the hierarchy, the description to be called a wing. When the top level 
 where it is recognized (for example) that the tool is not a  of the matcher asks if the piece in question looks like a 
 hammer or wrench. In this way, the Marr-Nishihara pro•       wing the answer is "yes". No mention is made of the fact 
 posal tends (hcuristically) to relate large scale geometric  that the wing is missing an engine. The difference only 
 structure to gross functional use.                           matters locally and is isolated from the higher levels of 
 • A-kind-of hierarchies                                      matching. 
    Family hierarchies are ubiquitous, and apply as much         Another important concern is limiting the scope of 
 to visual shape representations as to the more cognitive     generalizations made. Imagine that the program is shown 
 situations in which they were developed in Artificial In•    a positive example that is substantially different from its 
 telligence. ACRONYM represents the fact that the sets        current model. Altering the model by the usual induc•
 of B747-SPs, B747s, wide-bodied jets, jets, and aircraft,    tion heuristics typically leads to gross over-generalization. 
 are ordered by subset inclusion. Similarly, a claw hammer    This, in turn, runs counter to what Winston [1984, page 
 is a-kind-of framing hammer, which is a-kind-of hammer.      401] has dubbed Martin's law, namely: learning should 
 In general, a subset hierarchy is a partially-ordered set,   proceed in small steps. Therefore our program creates a 
 but not a tree. From the domain of tools, for example, a     new, separate model based on the new example, splitting 
 shingle ax is both a-kind-of ax, and a-kind-of hammer.       the concept being taught into a disjunction. 
                                                                 In some cases, the disjunction will be replaced by a 
                                                              single model as positive examples are taught that are in•
 3. Learning 
                                                              termediate to the disjuncts. For example, suppose that 
 The commonest form of inductive generalization used to       the first example of a hammer shown to the program is 
 learn concepts from positive examples is the drop con•       a claw hammer, and that the second is a sledge hammer. 
 dition heuristic IDietterich and Michalski 1981, Winston     The program will create a disjunction as its concept of 
 1984, page 398). This is the method used in our program.     hammer, but it will be consolidated into a single model 
 Through careful design of the representation the method      once it has seen such examples as a mallet and ballpein 
 has been extended to allow generalizations of intervals and  hammer. 
 structural graphs.                                              Even though the program only generalizes a concept 
    The idea behind the heuristic is that if two things be•   using an example that is structurally similar, it is some•
 long to the same class then the differences between them     times deceived and must recover from over-generalization. 
 must be irrelevant. Accordingly, when we have a partial      We follow Winston [1984] and provide censors that over•
model of a concept and receive a new example, we modify       ride the offending rule. Censors can be generalized and 
the model by deleting all the differences between it and      there can be disjunctive censors; in fact this is the usual 
the example. This can be seen by comparing Figure 2b          case. Since censors can be generalized they also have the 
with Figure 3b. Notice that the network in Figure 3 puts      possibility of being over-generalized. This is countered by 
very little constraint on the size or shape of the head. This putting censors on the censors. In general, a concept is 
is because the shapes of the heads in the examples vary       not represented by a single model but by a group of mod•
widely. For instance, the heads of the first and third ham•   els. There can be several positive models corresponding 
mer are straight while the head of the second hammer is       to the disjuncts as well as several negative non-models 
curved. Note also that the manner in which the handle         summarizing the exceptions to the other models. 
joins the head.is only loosely specified. This is because 
the handle is joined to the side of the head in the first two 4. Current Work 
examples but to the end of the head in the third example. 
                                                              The goals of our research are not limited to learning. The 
   This is a simplified explanation of the learning algo•
                                                              work reported here forms part of the Mechanic's Mate 
rithm. The matching involved is not graph isomorphism 
nor is it, merely counting the number of required features   project [Brady, Agre, Braunegg, and Conneil 1984], which 
an object has. Rather it is a complex local matching         is intended to assist a handyman in generic assembly and 
scheme. Consider using the semantic net shown in Fig•        construction tasks. The primary goal of that project is to 
ure 1 as the model for the airplane concept. For an object    understand the interplay between reasoning that involves 
to match this model, at the top level it must have three      tools and fasteners and representations of their shape. 
pieces which look similar to the three in the model. A           For example, instead of learning that a certain geomet•
piece of the example is similar to the wing model if, first   ric structure is called a hammer, we learn that something 
of all, it has the shape specified in the network and, sec•   which has a graspable portion and a striking surface can 
ond, it has two things which look like engines attached to    be used as a hammer. These two functional concepts are 
it. Suppose that a certain piece has the right shape for a    then defined geometrically in terms of the shape repre•
wing but has only one engine attached to it. At the level    sentation. Reasoning from function as well as from form                                                                                          J. Connell and M. Brady 925 


 allows more flexibility. For instance, faced with a ham•    Brady, Michael, Agre, Philip, Braunegg, David J., 
 mering task, but no hammer, one might try mapping the          and Connell, Jonathan H., [1984], The Mechanic's 
 hammer structure onto that of any available tool. A screw      Mate, ECAI 84: Advances in Artificial Intelli•
 driver provides a good match, identifying the blade of a       gence, O'Shea, T. (ed.), Elsevier Science Publishers 
 screw driver with the handle of the hammer, and the (as•       B.V. (North-Holland). 
 sumed flat) side of the screw driver handle with the strik• Brooks, Rodney A., [1981], "Symbolic Reasoning A-
 ing surface of the head of the hammer. In this way, the        mong 3-D Models and 2-D Images," Artif. Jntell, 17, 
 Mechanic's Mate can suggest improvisations, like using a       285 - 348 . 
 screw driver as a hammer.                                   Brooks, Rodney A., and Binford, Thomas O., 
    Our initial goal was to learn shape models cast in the       [1980), Representing and Reasoning About Partially 
representation described previously. Eventually, the Me•        Specified Scenes, Proceedings, DARPA Image Under•
 chanic's Mate will have to learn about the non-geometric       standing Workshop, Baumann, Lee S. (ed.), Science 
properties of objects: weight, material type, and the pro•      Applications Inc., 150 156. 
cesses that use them. Currently we are using Katz's En•
glish interface |Katz and Winston 1983] to tell our pro•      Canny, John Francis, [1983], Finding Edges and Lines 
gram such things. This is not satisfactory. Instead, we          in Images, MIT Artificial Intelligence Laboratory, Cam•
hope to teach dynamic information using a robot arm and          bridge Mass., AI-TR-720. 
hand.                                                        Connell, Jonathan H., [1985], forthcoming SM thesis, 
    Another area of interest is inducing structural sub•        MIT Department of Electrical Engineering. 
classes from examples. Since the subclasses that form the 
                                                             Dietterich, T. G., and Michalski, R. S, [1981], "In•
a-kind-of hierarchy are an important part of the shape 
                                                                ductive Learning of Structural Descriptions," Artif. 
representation, they should be learnable. However, in 
                                                                 Intell, 16 . 
learning subclasses there is a danger of combinatorial ex•
plosion. Learning subclasses requires a suitable similarity  Doyle, Richard J., and Katz, B, [1985], Exploring 
metric. Feature-based pattern recognition systems learn         the Boundary Between Natural Language and Knowl•
subclasses as clusters in feature space, and clusters are       edge Representation, MIT Artificial Intelligence Lab•
sets that are dense with respect to the Euclidean metric.       oratory, Forthcoming AI Memo. 
Part of our research in learning shape descriptions has      Heide, S, [1984], A Hierarchical Representation of Shape, 
been to determine what makes objects look similar. This         SM thesis, MIT Department of Mechanical Engineer•
suggests using the metric employed in the learning pro•         ing. 
cedure to form subclasses through a process analogous to     Katz, Boris, and Winston, Patrick H, [1983], A Two-
feature space clustering. This is the focus of our current      way Natural Language Interface, Integrated Interac•
work.                                                           tive Computing Systems P. Degano and Erik Sandewall 
                                                                (eds.), North-Holland, Amsterdam. 
5. Acknowledgements                                          Marr, D., and Nishihara, H. K, [1978], "Represen•
                                                                tation and Recognition of the Spatial Organisation of 
This report describes research done at the Artificial Intelli•
                                                                Three Dimensional Shapes," Proc. Roy. Soc. Lond. 
gence Laboratory of the Massachusetts Institute of Tech•
                                                                ii, 200 , 269 - 294. 
nology. Support for the Laboratory's Artificial Intelli•
gence research is provided in part by the the System De•     Winston, Patrick II., [1980], "Learning and Reasoning 
velopment Foundation, the Advanced Research Projects            by Analogy," Comm. ACM, 23 , 689 - 703. 
Agency of the Department of Defense under Office of Na•      Winston, Patrick H., [1981], "Learning New Principles 
val Research contract N00014-80-O-0505, and the Office          from Precedents and Exercises," Artif. IntelL, 19 , 
of Naval Research under contract number N00014-77-C-            321 - 350. 
0389. We thank the people who have commented on              Winston, Patrick H., [1982], Learning by Augmenting 
the ideas presented in this paper, particularly Phil Agre,      Rules and Accumulating Censors, MIT Artificial In•
Steve Bagley, Hob Berwick, Hen DuBoulay, Alan Bundy,            telligence Laboratory, AIM-678. 
Margaret Fleck, Scott Heide, Boris Katz, Tomas Lozano-       Winston, Patrick H., [1984], Artificial Intelligence, 
Perez, John Mallery, Tom Mitchell, Sharon Salveter, Dan         2nd. Ed., Addison-Wesley, Reading, Ma.. 
Weld, and Patrick Winston.                                   Winston, Patrick H., Binford, Thomas 0. , Katz, 
                                                                B., and Lowry, M., [1984], Learning Physical De•
                      References                                scriptions from Functional Definitions, examples, and 
Brady, Michael, and Asada, Haruo, [1984], "Smooth•              precedents, Robotics Research, Michael Brady and 
   ed Local Symmetries and their Implementation," Int.          Richard Paul (eds.), MIT Press, Cambridge, 117 - 135. 
   J. Robotics Research, 3 (3) . 