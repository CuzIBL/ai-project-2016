    Techniques for Efﬁcient Interactive Conﬁguration of Distribution Networks

                   Tarik Hadžic´  and  Andrzej Wasowski ˛   and  Henrik R. Andersen
               Computational Logic and Algorithms    Group, IT University of Copenhagen,
                      Rued Langgaards Vej 7, DK-2300 Copenhagen S, Denmark
                                {tarik,wasowski,hra}@itu.dk


                    Abstract                            For general CSP models over ﬁnite domains, enforcing
                                                      GAC is NP-hard. Therefore, in order to provide real-time
    Recovering from power outages is an essential task guarantees, current approaches use off-line compilation of
    in distribution of electricity. Our industrial partner the CSP model into a tractable data structure representing
    postulates that the recovery should be interactive the space of all valid conﬁgurations [Møller et al., 2001;
    rather than automatic: supporting the operator by Amilhastre et al., 2002]. It has been observed that the com-
    preventing choices that destabilize the network.  piled representations based on reduced ordered binary deci-
    Interactive conﬁgurators, successfully used in spec- sion diagrams (BDD) [Bryant, 1986], although having expo-
    ifying products and services, support users in se- nential worst-case size, can usually be kept small for the in-
    lecting logically constrained parameters in a sound, dustrial instances of product conﬁguration [Subbarayan et al.,
    complete and backtrack-free manner. Interactive   2004].
    restoration algorithms based on reduced ordered bi- Here we advance a state of the art for a recent application
    nary decision diagrams (BDDs) had been devel-     of interactive conﬁguration in the domain of power supply
    oped also for power distribution networks, however restoration [T. Hadzic and H. R. Andersen, 2005]. The PSR
    they did not scale to the large instances, as BDDs domain has received a lot of attention, after several blackouts
    representing these could not be compiled.         had caused serious ﬁnancial loss and had raised security con-
    We discuss the theoretical hardness of the interac- siderations throughout North America and Europe. These in
    tive conﬁguration and then provide techniques used turn have inspired a host of research on automatic recovery
    to compile two classes of networks. We handle     from power outages based on search and planning techniques
    the largest industrial instances available. Our tech- [Thiébaux and Cordier, 2001; Bertoli et al., 2002] ﬁrst for the
    niques rely on symbolic reachability computation, high voltage transport networks, and later for the more com-
    early variable quantiﬁcation, domain speciﬁc order- plex and dense distribution networks.
    ing heuristics and conjunctive decomposition.       Our industrial partner NESA A/S, a power distribution op-
                                                      erator in the Copenhagen area, insisted that the power restora-
                                                      tion process should be interactive rather than automatic: leav-
1  Introduction                                       ing the control to the operator interactively reconﬁguring the
Interactive conﬁguration is an application of constraint satis- network, while still guiding her in this process. This makes
faction (CSP) that assists a user in her search for a valid vari- the standard solutions based on network-ﬂow algorithms in-
able assignment (a conﬁguration) in a combinatorial problem. adequate since instead of ﬁnding just one (possibly optimal
Its major application areas include sales of services (airplane wrt. some cost) conﬁguration we need to reason about all
tickets, insurance policies) and goods (personal computers, possible valid network conﬁgurations. In addition we were
cars).                                                strongly required to take into account the entire combinatorial
  The assistance takes the form of proposing choices that are hardness of the problem, guaranteeing not only uninterrupted
globally consistent, i.e. always lead to a legal solution to the ﬂow of electricity in circuits (connectivity constraints), but
problem. In CSP terms interactive conﬁgurator enforces gen- also meeting constraints on the maximum load carried by a
eralized arc consistency (GAC) wrt. implicit conjunction of line (load constraints).
all constraints, i.e. it computes a valid domain for each unas- Due to numerous cyclic dependencies, the industrial in-
signed variable, consisting of all valuations that are guaran- stances provided by NESA, proved to be much harder than
teed to be globally completable. As a consequence, as long any of the product conﬁguration instances we had encoun-
as a user assigns values from valid domains the interaction tered so far. They were also much larger than PSR instances
is complete (all valid conﬁgurations are reachable through seen elsewhere, making our existing conﬁgurators unable to
user interaction) and backtrack-free (a user is never forced work with them. Basic BDD based techniques (see for ex-
to change an earlier choice). Additionally the computation ample the monolithic approach in [T. Hadzic and H. R. An-
must run in real-time, to facilitate use in interactive setting. dersen, 2005]) required representing the network with a sin-

                                                IJCAI-07
                                                   100gle BDD. We investigated a number of techniques to in-                          e2

crease the size of the network that can be compiled. In                  e1     v e3
this paper we present the most successful of these. We de-
scribe improvements in the PSR models achieved by reduc-
                                                                               e4
ing the number of network elements represented in a BDD,
and use of PSR speciﬁc variable orderings. We also intro-
duce an alternative way to compile BDDs representing con- Figure 1: Lines e1,e2,e3,e4 incident with sink v.Forsim-
nectivity constraints only—an important subclass of the prob- plicity arrows denote the direction of ﬂow, not the edge direc-
lem, widely used in other PSR research. Finally, we de- tions. Only one of the lines can lead the power into v (connec-
scribe our decomposition approach that allows us to scale tivity rules), e2 here. If v is on then according to Kirchhoff’s
                                                          l  = |v| + l + l + l
to the largest instance in our collection (3 power sources, law: e2 e1   e3  e4
119 consumer sinks, 146 line segments, see Figure 2). We
believe that this is the largest network that can be handled       S              P ⊆V,S  = V \P
in a backtrack-free and complete manner, under given time rent) and sinks (consuming it):       . In reality
                                                      sinks are transformer stations that transmit electricity to ﬁ-
requirements so far. Our instances are publicly available at                 e =(v ,v ) ∈ V ×V
http://www.itu.dk/~tarik/psr.                         nal consumers. Each edge    1 2         ,representsa
                                                      power line capable of transporting current between v1 and v2,
  Related work BDDs have been successfully applied in
                                                      in any direction. The state of e is forward if e is transmitting
product conﬁguration [Subbarayan et al., 2004].However,
                                                      a non-zero current from v1 to v2,andbackward when trans-
the network topology of PSR is much harder for BDDs to rep-
                                                      mitting from v2 to v1. Otherwise the state is off. We denote
resent (standard compilation techniques experience size ex-
                                                      the current load on e as le ≥ 0.Whene is off then le =0.
plosion of BDDs even for smaller instances). Interaction over
                                                        Asinkv  consumes up to |v| units of power. A sink can be
decomposed set of BDDs has been explored before. In [Meer
                                                      on iff it is connected to a line in the forward or backward state
et al., 2006] the authors provide strong guarantees for inter-
                                                      that provides at least |v| units of current. Otherwise a sink is
action over acyclic network of BDDs that can be dynamically
                                                      off. A sink can be off even when connected to a powered line.
extended by unlimited number of new BDDs. In contrast, we
                                                      In such case current ﬂows through it without any loss.
do not provide support for dynamic structures of unbounded
                                                        The following connectivity constraints must always hold:
size, but we handle cyclic dependencies.
  The PSR problem has been investigated in the context of • No short circuits: undirected cycles with sources but
automated planing. However, the instances presented were  without active sinks (resistance) are forbidden.
relatively small [Thiébaux and Cordier, 2001] and disre- • No self feeding cycles: undirected cycles that have no
garded the combinatorial hardness of the problem caused by active sinks and no sources are forbidden.
the load constraints. Recently it has been shown that the PSR •
planning problem is easy when these constraints are ignored No sink is powered from more than one power line.
[Helmert, 2006]. We show that the interactive conﬁguration Most of the distribution network instances that we have
of PSR, as postulated by NESA, is NP-hard under load con- seen in the PSR research enforce only the above connectiv-
straints and polynomial when these constraints are ignored. ity rules, effectively ignoring the relation between the con-
  Our work is likely to be of interest for other applications sumption of sinks and the capacity of lines. This means that a
exploiting BDD representations of networks such as auto- sink can be switched on based only on whether it can be con-
matic reconﬁguration [T. Hadzic and H. R. Andersen, 2005], nected to a powered line. We call these special subclass of
automated planning [Jensen et al., 2004] and reliability anal- the networks the Connectivity Distribution Networks.They
ysis [Dutuit et al., 1997]. The techniques should perform well are important to study in themselves, as being the basis for
also for other kinds of networks (eg. distributing water, natu- most of the PSR research they can serve as a reference in
ral gas, sewage, or for telecommunication networks).  comparisons. However, our industrial partner also requires
  We proceed as follows. Section 2 describes the problem the following load distribution constraints to hold:
deﬁning load networks and connectivity networks, their com- • Kirchhoff’s laws for load distribution must be preserved
plexity properties and the basics of our models. Section 3 dis- as illustrated in Figure 1.
cusses techniques supporting compilation of load networks
                                                        • For each line e its current load le must not exceed a con-
up to the medium size instances. Section 4 describes tech-                        l ≤|e|
niques for compiling connectivity networks up to the largest stant maximum capacity |e|: e .
instances available, while Section 5 brings a decomposition In case of a line failure, an operator should be supported to
approach that allows interactive conﬁguration of the largest interactively conﬁgure the affected part of the network. The
available instances of load networks. Experimental evalua- advantage of interactive instead of automatic recovery lies in
tion is discussed throughout sections 3–5. We summarize and the fact that since a lot of information about the network can-
conclude in Section 6.                                not be encoded in CSP models, an operator is likely to make
                                                      more qualiﬁed decisions about how to reconﬁgure than an
2  PSR Conﬁguration Problems                          automatic system. [T. Hadzic and H. R. Andersen, 2005] de-
                                                      scribe this interactive reconﬁguration process in detail.
We view a power network as a directed graph G(V,E),where The operator interactively decides which power lines to
vertices represent power sources P (supplying electrical cur- use, and which to keep off. The broken lines are forced

                                                IJCAI-07
                                                   101to be off, and some important sinks (hospitals, etc) should dummy sinks s1,s2,s3 such that |s1| = |s2| = |s3| =1.
be always on. In each interaction step, after ﬁxing a line Let |e(p, s1)| = c1, |e(p, s2)| = c2 and |e(p, s3)| =1.For
or a sink, the operator gets valid domains for remaining each sink vk add lines e(s1,vk) and e(s2,vk) with capacity
network elements. We distinguish the problem of comput- max(c1,c2). Notice that due to connectivity constraints, in
ing CONNECTIVITY-VALID-DOMAINS   from LOAD-VALID-     any legal conﬁguration each vi sink can be powered from a
DOMAINS, depending on which of the two kinds of distribu- line coming from either s1 or s2, but never from both. Con-
tion networks we are working with.                    sider solving LOAD-VALID-DOMAINS  on the created graph
                                                          E   = ∅    V   = {v | k ∈ S}
Problem (CONNECTIVITY-VALID-DOMAINS).    For a set of with  off   and  on    k       . This requires deciding
                                                      whether s3 can be on, while the other constraints are satis-
lines Eoff ⊆ E required to be off and the set of sinks Son ⊆ S
                                                      ﬁed. If it cannot, then there is no suitable partition of S.Ifit
required to be on decide for each line e∈E\Eoff whether it is
                                                      can then the answer to the original problem is yes (to obtain
possible to power all sinks in Son only using lines in E\(Eoff∪
                                                      a witness put into S1 all k ∈S such that vk is powered via s1
{e}), and for each sink v ∈ S \Son whether the set Son ∪{v}
                                                      and into S2 all k powered via s2).
can be powered only using lines in E\Eoff, while connectivity
constraints are satisﬁed.                               Since the cost of computing valid domains for spaces rep-
Theorem 1. CONNECTIVITY-VALID-DOMAINS    is easy.     resented in BDDs is given by a polynomial parameterized
                                                                      [                  ]
                                            O(mn)     by the BDD size T. Hadzic et al., 2006 , Thm. 2 implies
Proof sketch. The following algorithm checks in       that there exist instances of load networks with exponentially
time if a given selection of Eoff and Son can be satisﬁed (m is
                    n                                 large BDD representations, regardless of the variable order-
the number of lines and is the number of sinks):      ing. Additionally the two complexity results above may be
CONNECTIVITY-SAT(G, E   ,S  )                         perceived as indications (not proofs!) how hard it is to rep-
                       off on                         resent the respective problems using BDDs. Indeed we will
   G ← G(V, E\E    ) S ←∅
1                 off , on
                      p   P                           soon experience that it is relatively easier to construct repre-
2  for each power source in                           sentations for connectivity networks than for load networks.
                               G              p
3      do DFS traversal of nodes in reachable from      We have built models of NESA’s instances using a cus-
                S
4Addtoon           all visited nodes
          S  ⊆ S                                     tomized version of a BDD-based conﬁguration library CLab
5  return ( on   on)                                  [Jensen, online]. NESA require to model their network as
                                                      a load distribution network. The part of the network un-
It sufﬁces to call CONNECTIVITY-SAT |E \ E | + |S \ S |
                                       off      on    der consideration contains lines of maximum current capac-
times to verify if any of the remaining lines can be forced off,
                                                      ity of 260 A, and transformer stations of size 400 KVA -
or if any of the remaining sinks can be forced on.
                                                      which corresponds to current consumption of about 22 A for
  Similar models of connectivity networks are used as bench- each transformer. This means that a power line with max-
marks for planing under uncertainty [Thiébaux and Cordier, imum current intensity can feed at most 13 sinks. This al-
2001]. A complexity analysis of [Helmert, 2006] indicates lows us to discretize the domain of current load from [0, 260]
that these networks are easy also for planning algorithms. to {0, 1,...13}, assuming that each transformer station con-
                                                      sumes one unit of current. It sufﬁces to enforce Kirchoff’s
Problem (LOAD-VALID-DOMAINS).    Given a set of lines
E  ⊆  E required to be off and the set of sinks S ⊆ S re- distribution laws over these discrete domains to achieve a
 off                                      on          close and sound approximation of network models with con-
quired to be on decide for each line e ∈ E \ Eoff whether
it is possible to power all sinks in S only using lines in tinuous current values: for every conﬁguration satisfying our
                                on                    discrete model there is a range of continuous valuations sat-
E \ (Eoff ∪{e}), and for each sink v ∈ S \ Son whether the
   S ∪{v}                              E\E            isfying the real-valued model.
set on    can be powered only using lines in off, while                 v ∈  V                    v    ∈
both the connectivity and load constraints are satisﬁed. For each vertex        we have a variable pow
                                                      {on, off} indicating whether it consumes (produces) current
  Let us now formulate an auxiliary problem:          or whether it is idle. For each line e ∈ E we introduce a
Problem (SET-SUM-PARTITION).  Given a ﬁnite set S of  variable indicating the direction of the current ﬂow edir ∈
positive integers and two integer constants c1 and c2 such {off, backward, forward}, and a variable modelling the load
         s ≤ c +c                               S     l ∈{0,  1,...13}
that  s∈S     1  2 decide whether there exist subsets 1 e            . Kirchoff’s laws are modelled using ﬁ-
and S2 such that S = S1  S2 and for i=1, 2. s∈S s ≤ Ci. nite arithmetic constraints implicitly expanded by CLab into
                                           i          boolean formulæ.
  The above problem is NP-hard [T. Hadzic and H. R. Ander-
sen, 2006], which can be shown by a straightforward reduc-
tion from SUBSET-SUM [Garey and Johnson, 1979, p.223]. 3  Compilation Techniques for Load Networks
Theorem 2. LOAD-VALID-DOMAINS    involves solving NP- The theoretical intuition that BDDs representing load net-
hard problems.                                        works are hard to construct, has been conﬁrmed in practice
                                                      for our instances. Structural properties of these instances are
Proof sketch. We show that decision problems contained in reported in Table 1 (the instances have been created by Hen-
LOAD-VALID-DOMAINS    are NP-hard, by reduction from  ney, Bak, Jensen and Sonne [T. Bak and S. Henney, 2004;
SET-SUM-PARTITION. For an instance S, c1,c2 create a net- Lars Sonne and Rene Jensen, 2005] in collaboration with
work as follows: for each k ∈ S create a sink vk with con- NESA). The ﬁrst column in the table shows names of the
sumption |vk| = k. Add one source p connected to new  instances. The subsequent three columns list the numbers

                                                IJCAI-07
                                                   102                        p
             R4         3                               Despite employing  several quantiﬁcation scheduling
      p                                               heuristics, we were unable to compile Large and Complex
       2                                              (see the last column in Table 1). Nevertheless we have ob-
                                                      served much smaller intermediary BDDs, hinting that this
                                         R            technique may be helpful in combination with other improve-
                                           3          ments. More importantly we have observed a drastic decrease
                                                      of the ﬁnal BDD sizes (due to projection). Such a big de-
                p                                     crease is not surprising in fact, given that more than half of
                 1                                    all Boolean variables in the model were only encoding loads.
                                          R2            It is well known that the size of BDD representations of
                                                      logical rules strongly depends on the variable ordering.The
                  R1                                  orderings for BDDs in Table 1 were created using a general
                                                      purpose Fan-In heuristic [Meinel and Theobald, 1998, p.146–
                                                      147] that operates directly on logical rules. Since our model
        Figure 2: Complex: the largest instance.      follows the network topology we decided to apply heuristics
                                                      operating directly on the graph structure instead. We recog-
                                                      nized a direct relationship between the topological distance
of lines, sinks and power sources respectively. The size of of network elements (sinks, lines) and the logical interdepen-
resulting BDD is indicated in the ﬁfth column. Even the dencies between the variables encoding them. Because of that
medium sized instances lead to enormous BDDs, and the we place each vertex variable vpow in proximity to variables
largest ones cannot be compiled.                      edir,le for all the lines incident to v that were not already
  The largest instance, Complex, has been set by NESA as a placed with another vertex. Then, in order to place vertex
goal for the ﬁrst stage of our collaboration. We were focused groups with respect to each other, we search for an optimal
on scaling our techniques to be able to handle it. Figure 2 linear layout of the input graph G(V,E) [Diaz et al., 2002]
shows the topology of this instance. We believe that Complex using the Minimum Linear Arrangement (MINLA) measure
is the largest real-world instance publicly available. as the objective cost. Other measures might be well suited,
  We have begun with an observation that for an operator too.
conﬁguring the network, the information about loads is not After constructing and applying this ordering we observed
necessary, as long as the load constraints are guaranteed to a signiﬁcant improvement in the size of the generated BDDs.
be met. It sufﬁces to just represent the on/off state of sinks We ﬁnally managed to compile Large to: 8 483kb (1 811kb
and lines. The BDD can be decreased by projecting only on after quantifying out loads). Nevertheless, the combination of
relevant non-load variables. Any satisfying conﬁguration of these two techniques still does not sufﬁce to reach our mile-
these variables in the projected BDD can be extended to a stone: interactive conﬁguration of Complex.
conﬁguration including loads in the original BDD.
  To beneﬁt from the projection already during compilation 4 Techniques for Connectivity Networks
we use early variable quantiﬁcation [Meinel and Theobald,
1998, p. 195]. CLab compiles models by compiling the con- We should now present a compilation technique for Con-
straints separately and then conjoining the results. Early vari- nectivity Distribution Networks. We have shown in Sec-
able quantiﬁcation allows to quantify out variables at interme- tion 2 that there exists a truly polynomial algorithm for
diate steps of the long conjunction. As soon as a load variable CONNECTIVITY-VALID-DOMAINS not using BDDs. Still,
is not appearing in constraints remaining to be conjoined, it the BDDs for connectivity networks are interesting in them-
can be existentially quantiﬁed. The technique keeps the in- selves. Besides being useful for comparison with other PSR
termediary BDDs smaller, making it easier to reach the ﬁnal research, they can be used for cost bounded interactive con-
result (it is known that the ﬁnal BDD is often much smaller ﬁguration [Hadzic and Andersen, 2006], where an operator
than the biggest intermediate BDDs in a long conjunction). can interactively prune valid domains based on some notion
                                                      of cost. For example, an operator could limit the maximum
                                                      number of not-powered sinks, or if there is a cost assigned
            Table 1: Benchmark properties.            to changing the status of each network line, then the operator
                                                      could limit the total cost of introduced changes.
   instance  #of   #of     #of    simple  quantiﬁed     After experiencing very large intermediate BDDs when
    name     lines sinks sources size(kb) size (kb)   conjoining connectivity constraints in regular fashion we
 Std-diagram  13    7       2      215      7.3       have developed an alternative way to compile connectivity
  1-6+22-32   21    17      2      455      31.6      networks. We remodelled the problem as a transition sys-
 Complex-P2   24    18      1     3 282     252       tem, such that its reachable state space equals the set of all
 Complex-P3   28    19      1     61 240    418       legal conﬁgurations. The construction is rather simple: in the
    1-32      38    32      2    448 360    4 154     initial state all sinks are off, and every transition step only
    Large     66    56      2       -        -        powers lines and sinks in ways that do not violate connectiv-
  Complex    146   119      3       -        -        ity constraints (lines cannot close cycles, powered sinks/lines
                                                      should be connected to powered lines). We compute the state

                                                IJCAI-07
                                                   103                                                                   R       R       R      R
space by using the regular algorithm, which applies the tran-       1       2       3      4

sition relation transitively to the initial state until a ﬁxpoint is  I12 /I21 I23 /I32 I34 /I43
reached [Meinel and Theobald, 1998, p.185].
  We have created the instances of connectivity networks Figure 3: Decomposing Complex to regions R1,R2,R3,R4
from the instances of Section 3 by imposing connectivity con-
straints instead of load constraints and maintaining the topol-
                                                        After a user assigns x ← v, the solution space φi to which
ogy. We have experienced much smaller intermediate BDDs
                                                      x belongs is restricted by assigning φi ← φi ∧ x = v.This
than when using the regular compilation scheme of CLab.
                                                      may make some of the neighboring components allow in-
Also we were able to compile BDDs for all the instances,
                                                      consistent assignments. Therefore a synchronization step is
including Large (52.5 KB or approx. 2 191 nodes) and Com-
                                                      needed, where a global consistency is restored. The new so-
plex (1961 KB and 83 572 nodes).
                                                      lution space of φi is projected on all of its neighboring inter-
                                                      faces Iij ((φi ∧ x = v)↓Iij ) and sent towards the respective
5  Decomposition for Load Networks                    neighbors φj. Then the neighbors propagate the information
                                                      recursively until a ﬁxpoint is reached. The main algorithm,
We have tried a range of other techniques to scale up to
                                                      stripped of technicalities, is presented below (assume that the
our biggest instance and only the conjunctive decomposition
                                                      node i has already been restricted by x = v):
was successful. It is strongly related to [Meer et al., 2006].
We divide the graph G(V,E) into overlapping components RESTORE-CONSISTENCY(i, φ1,...,φn)
G (V ,E  ),...,G (V ,E  ) V ⊆ V  E ⊆ E
 1  1   1       n  n  n ,  i    , i     such that ev- 1  S ←{i}
ery vertex belongs to exactly one component and each edge 2 while S is not empty
belongs to at least one and at most two components. Cross 3  do remove some element n from S
                                     ∀e(v ,v ).v ∈
component edges belong to two components: 1 2  1     4         for each interface Inm incident with component n
Vi ∧ v2 ∈Vj ∧ i = j ⇒ e ∈Ei Ej                                        
                             . Remaining edges belong 5            do φm  ← φm
to single components. The sink consumption, and load capac- 6         φm  ← (φn↓Inm) ∧ φm
                                                                         
ities of lines are naturally inherited from the global problem. 7     if φm = φm then add m to S
We refer to the shared lines between regions as interfaces:
Iij = Ei  Ej .                                          We have partitioned Complex into four geographical com-
                                                             R   R
  WecompileaBDDφi    for each component Gi separately. ponents 1– 4 as shown in Figures 2–3. Each region shares
                                                                                   l ,e
Since our modelling closely follows the network topology, with its neighbors line variables e dir from the interface
                                                          I
only minor modiﬁcations are needed to generate the logical sets ij . The interface sizes are 12, 18 and 30 bits in this ex-
rules representing the subnetworks (in particular the load lev- ample. The BDDs for each of the components are built sep-
els and directions on interface lines should not be quantiﬁed). arately, using the techniques described in previous sections.
  Computing valid domains for conjunctive partitions is NP- The variable ordering is optimized for each of the modules
hard in general, even if represented by BDDs. However, separately, using the MINLA heuristic. This means that on
valid-domains can be calculated in the time polynomial in top of the projections, we also need to perform renamings
the sum of the sizes of components, if all the component when restoring the consistency. In return we beneﬁt from be-
      φi                    [                 ]       ing able to optimize each ordering separately. The sizes of
BDDs    are globally consistent Dechter, 2003, p. 67 ,i.e.                                            R
if for each component i =1...n and for every satisﬁable the component BDDs are 403 138 nodes (9 769kb) for 1,
                                                                          R2                      R3
assignment σi to φi there exist a satisﬁable assignment σ 169 585 (4 497kb) for , 136 636 (3 578kb) for ,and
                                                                              R4
to φ = φ1 ∧ ··· ∧ φn which is an extension of σi (for 126 976 nodes (3 240kb) for . These BDDs could be made
acyclic decompositions this reduces to arc consistency). The smaller in an industrial quality implementation by introduc-
computation of valid domains over the globally consistent ing more components. Still, the numbers were satisfactory
space φ reduces to standard BDD-based computation over for our „proof of concept” implementation.
                                                        The computation of valid domains for Complex lasts less
each subnetwork separately: LOAD-VALID-DOMAINS(φ)=
 n                                                    than 0.5s (using a state of the art implementation from CLab).
 i=1 LOAD-VALID-DOMAINS(φi), giving an algorithm of
cost polynomial in the size of the component BDDs.    The restoration of global consistency takes less than 3s. using
  So once a conjunctive decomposition is constructed the our crude implementation. Because the structure is so sim-
main problem lies in maintaining global consistency of the ple, the restoration never requires more than four conjunc-
network throughout the conﬁguration process. One success- tions, but our simplistic implementation often does twice as
ful way to do [Meer et al., 2006]. The authors observe that many. The experiments have been carried on a 3.2Ghz PC.
the growth of BDDs at runtime can be exponential in the size The times decrease dramatically if the network is nearly con-
                                                      ﬁgured, which is the case in most of the realistic situations.
of the interface sets Iij , making it essential to ﬁnd a partition-
ing with small interfaces. Observe that the use of conjunctive
decomposition sacriﬁces the polynomial response time guar- 6 Conclusions and Future Work
antees of the previous sections. The sizes of the BDDs created We have discussed a range of techniques for interactive con-
during interaction may be exponential, but only exponential ﬁguration of power distribution networks. We have shown
in a small number (the interface size). The experiments show that the interactive conﬁguration over Connectivity Distribu-
that the worst-case time complexity does not appear in prac- tion Networks is easy, while our more realistic model of Load
tice.                                                 Distribution Networks makes interaction NP-hard.

                                                IJCAI-07
                                                   104