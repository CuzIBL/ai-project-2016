                     Dynamic Interactions Between Goals and Beliefs
                                Steven Shapiro   and  Gerhard Brewka
                                         Computer Science Inst.
                                          University of Leipzig
                                          Augustusplatz 10–11
                                       04109 Leipzig, Germany
                              {shapiro,brewka}@informatik.uni-leipzig.de

                    Abstract                          ity with beliefs. However, it could be the case that each goal
                                                      individually is compatible with an agent’s beliefs, but the set
    Shapiro et al. [2005; 2006], presented a framework of all goals of the agent is incompatible with its beliefs.
    for representing goal change in the situation calcu-
    lus. In that framework, agents adopt a goal when    In Sec. 2, we present the situation calculus and Reiter’s
    requested to do so (by some agent reqr ), and they action theories, which form the basis of our framework.
    remain committed to the goal unless the request is In Sec. 3, we present Shapiro et al.’s framework, and in
    cancelled by reqr . A common assumption in the    Sec. 4, we show how to extend the framework to take into
    agent theory literature, e.g., [Cohen and Levesque, consideration the dynamic interactions between beliefs and
    1990; Rao and Georgeff, 1991], is that achieve-   goals. Some properties of the new framework are presented
    ment goals that are believed to be impossible to  in Sec. 5. In Sec. 6, we sketch how to extend the framework
    achieve should be dropped. In this paper, we incor- further so that achievement goals that are believed to have
    porate this assumption into Shapiro et al.’s frame- been already achieved are dropped by the agents. We con-
    work, however we go a step further. If an agent be- clude in Sec. 7.
    lieves a goal is impossible to achieve, it is dropped.
    However, if the agent later believes that it was mis- 2 Representation of Action and Beliefs
    taken about the impossibility of achieving the goal,
    the agent might readopt the goal. In addition, we The basis of our framework for goal change is an action the-
    consider an agent’s goals as a whole when making  ory [Reiter, 2001] based on the situation calculus [McCarthy
    them compatible with their beliefs, rather than con- and Hayes, 1969; Levesque et al., 1998]. The situation calcu-
    sidering them individually.                       lus is a predicate calculus language for representing dynam-
                                                      ically changing domains. A situation represents a possible
1  Introduction                                       state of the domain. There is a set of initial situations cor-
                                                      responding to the ways the agents believe the domain might
Shapiro et al. [2005; 2006], presented a framework for repre- be initially. The actual initial state of the domain is repre-
senting goal change in the situation calculus. In that frame- sented by the distinguished initial situation constant, S0.The
work, agents adopt a goal when requested to do so (by some term do(a, s) denotes the unique situation that results from
agent reqr ), and they remain committed to the goal unless the agent doing action a in situation s. Thus, the situations
the request is cancelled by reqr . A common assumption in can be structured into a set of trees, where the root of each
the agent theory literature, e.g., [Cohen and Levesque, 1990; tree is an initial situation and the arcs are actions. The se-
Rao and Georgeff, 1991], is that achievement goals that are quence of situations that precedes a situation s in its tree is
believed to be impossible to achieve should be dropped. In called history of s. Predicates and functions whose value
this paper, we incorporate this assumption into Shapiro et may change from situation to situation (and whose last argu-
al.’s framework, however we differ from previous approaches ment is a situation) are called ﬂuents. For instance, we might
in two respects. If an agent believes a goal is impossible to use the ﬂuent INROOM(Agt, R1,S) to represent the fact that
achieve, it is dropped. However, if the agent revises its be- agent Agt is in room R1 in situation S. The effects of actions
liefs, it may later come to believe that it was mistaken about on ﬂuents are deﬁned using successor state axioms [Reiter,
the impossibility of achieving the goal. In that case, the agent 2001], which provide a succinct representation for both ef-
should readopt the goal. To our knowledge, this has not been fect axioms and frame axioms [McCarthy and Hayes, 1969].
considered in previous approaches. In addition, most frame-
                                                        We will be quantifying over formulae, so we assume that
works1 consider goals in isolation when checking compatibil-
                                                      we have an encoding of formulae as ﬁrst-order terms. As
  1Bell and Huang [1997] consider the compatibility of all of an shown by De Giacomo et al. [2000], this is laborious but
agent’s goals with its beliefs, but they do not consider the possibility straightforward. It includes introducing constants for vari-
of readopting a goal previously believed impossible.  ables, deﬁning substitution, introducing a Holds predicate to

                                                IJCAI-07
                                                  2625deﬁne the truth of formulae, etc. We assume we have such an We also need an axiom stating that do is injective.
axiomatization, and so we will freely quantify over formulae
here (using ﬁrst-order quantiﬁers). To simplify notation, we Axiom 2.4
ignore the details of the encoding and use formulae directly
instead of the terms that represent them.                  do(a1,s1)=do(a2,s2)  ⊃ (a1 = a2 ∧ s1 = s2)
  We will also be using lists of formulae, so we need an ax-
iomatization of lists. We do not present the details here but The induction axiom for situations says that if a property
such a formalization is well known. We use the functions P holds of all initial situations, and P holds for all successors
car(l), cdr(l), cons(ψ, l), reverse(l),andremove(ψ, l);and to situation s if it holds for s,thenP holds for all situations.
the relation member(ψ, l) with their usual meanings. nil de-
notes the empty list. We will also use lists of formulae (with- Axiom 2.5
out repetitions) to represent ﬁnite sets of formulae, and there-
fore use ﬁnite sets when it is convenient, along with the usual ∀P.[(∀s.Init(s) ⊃ P (s)) ∧ (∀a, s.P (s) ⊃ P (do(a, s)))] ⊃
set functions and relations.                                 ∀sP (s).
  To axiomatize a dynamic domain in the situation calculus,
we use Reiter’s [2001] action theory, which consists of (1) We now deﬁne precedence for situations. We say that s
successor state axioms for each ﬂuent; (2) initial state axioms, strictly precedes s if there is a (non-empty) sequence of ac-
which describe the initial state of the domain and the initial tions that take s to s.
mental states of the agents; (3) unique names axioms for the
actions, and domain-independent foundational axioms (given Axiom 2.6
below); and (4) the axioms to encode formulae as terms, and
to deﬁne lists of (terms for) formulae.2                  ∀s1,s2.s1 ≺ s2 ≡ (∃a, s.s2 = do(a, s) ∧ (s1   s)),
  Unique names axioms are used to ensure that distinct ac-
tion function symbols denote different actions. For distinct       def
                                                      where s1   s2 = s1 = s2 ∨ s1 ≺ s2 denotes that s1 precedes
action function symbols, a1 and a2, we need an axiom of the
                                                      s2.
following form:3
                                                        Although belief change plays a large role in this paper,
Axiom 2.1                                             the focus is on the goal change framework. Belief change
                  a  ( ) = a ( )                     frameworks in Reiter’s action theory framework have been
                    1 x   2 y .                     developed [Shapiro et al., 2000; Shapiro and Pagnucco, 2004;
                                                      Shapiro, 2005], however we will not assume a particular
                                 a
Also, for each action function symbol, , we need an axiom framework here. Instead, we will make a few general as-
of the following form:                                sumptions about the belief change framework as needed. In
                                                      particular, we assume a possible worlds approach (with B as
Axiom 2.2                                             the accessibility relation) using situations as possible worlds.
                a(x)=a(y) ⊃ x = y.                The accessible situations are the ones that are used to deter-
                                                      mine the beliefs of the agent, as usual. These would cor-
  We want the situations to be the smallest set generated by respond to, e.g., the most plausible accessible situations of
sequences of actions starting in an initial situation. We ax- Shapiro et al. [2000] or simply the situations that the agent
iomatize the structure of the situations with foundational ax- considers possible in a framework without plausibilities over
                                       [    ]         situations. Therefore, we assume that the language contains
ioms based on the ones listed in Levesque et al. 1998 for the                (      )
language of the “epistemic situation calculus”. We ﬁrst deﬁne a distinguished predicate B agt,s,s . We also assume that
the initial situations to be those that have no predecessors: the agents’ beliefs are always consistent:

                  def      
            Init(s ) = ¬∃a, s.s = do(a, s)            Axiom 2.7
                                                                       ∀  ∃  (      )
  We declare S0 to be an initial situation.                              s s B agt,s,s .

Axiom 2.3                                             The beliefs of the agent are deﬁned as those formulae true in
                      Init(S0)                        all the accessible situations:
                                                                 (      ) =def ∀  (    ) ⊃  [ ]
  2Action theories normally also include axioms to specify the dis- Bel agt,φ,s s .B agt,s,s φ s .
tinguished predicate Poss(a, s) which is used to described the con-
ditions under which it is physically possible to execute an action, Here, φ is a formula that may contain the distinguished con-
however to simplify notation, we omit the use of Poss here and as- stant Now instead of its (ﬁnal) situation argument. φ[s] de-
sume that it is always possible to execute all actions. notes the formula that results from substituting s for Now in
  3We adopt the convention that unbound variables are universally φ. When the intended meaning is clear, we may suppress this
quantiﬁed in the widest scope.                        situation argument of φ.

                                                IJCAI-07
                                                  26263  Goal Change                                         Note that s corresponds to the “current situation” (or the
                                                      current time) in the path deﬁned by s. We deﬁne a similar
Shapiro et al. [2005; 2006], presented a framework for repre- accessibility relation C below and deﬁne Goal in the same
senting goal change in the situation calculus. In that frame- way but using C instead of W .
work, agents adopt goals when requested to do so (by some
                                                        Shapiro et al. specify how actions change the goals of
agent reqr ) and they remain committed to their goals unless
                                                      agents. They do not give a successor state axiom for W di-
the request is cancelled by reqr . One problem with this ap-
                                                      rectly, instead they use an auxiliary predicate, REQUESTED.
proach is that an agent will retain a goal even if it believes
                                                      REQUESTED  records which goals have been requested of and
the goal is impossible to achieve. We address this problem
                                                      adopted by an agent, as well as which situations should be
here. We ﬁrst introduce Shapiro et al.’s [2006] framework,
                                                      dropped from W  to accommodate these requests. When a
and then show how it can be changed to better reﬂect the in-
                                                      request is cancelled, the corresponding goal (and dropped sit-
tuitive interactions between beliefs and goals.
                                                      uations) are removed from the REQUESTED relation. A re-
  An agent’s goals are future oriented. For example, an agent quested goal is adopted by an agent if the agent does not cur-
might want some property to hold eventually, i.e., the agent’s rently have a conﬂicting goal. This maintains consistency of
                   (  )                                                        
goal is of the form Ev ψ , for some formula ψ.Weeval- goals. REQUESTED(agt,ψ,s,s) holds if some agent has re-
uate formulae such as these with respect to a path of situa- quested that agt adopt ψ as a goal in situation s and this re-
tions rather than a single situation, and we call such formu- quest causes agt to cease to want situation s.Hereisthe
lae goal formulae. Cohen and Levesque [1990] used inﬁnite successor state axiom for REQUESTED:
time-lines to evaluate such formulae, but for simplicity, we
evaluate goal formulae with respect to ﬁnite paths of situa- Axiom 3.1
                                                                             
tions which we represent by pairs of situations, (Now, Then), REQUESTED(agt,ψ,s, do(a, s)) ≡
such that Now   Then. Now  corresponds to the “current    ((∃reqr .a = REQUEST(reqr , agt,ψ) ∧
time” on the path of situations deﬁned by the sequence of        W −(agt, ψ, a, s,s)) ∨
                                                                                
situations in the history of Then. Goal formulae may con-   (REQUESTED(agt,ψ,s,s)   ∧
tain two situation constants, Now and Then.Forexam-         ¬∃reqr .a = CANCELREQUEST(reqr , agt,ψ))),
ple, ∃r.INROOM(JOHN,r,Now)∧¬INROOM(JOHN,r,Then)
could be used to denote the goal that John eventually leaves where W − is deﬁned below. An agent’s goals are expanded
the room he is in currently. If ψ is a goal formula then ψ[s, s] when it is requested to do something by another agent. After
denotes the formula that results from substituting s for Now the REQUEST(requester, agt,ψ) action occurs, agt should
and s for Then. When the intended meaning is clear, we may adopt the goal that ψ, unless it currently has a conﬂicting goal
suppress these situation arguments of goal formulae.  (i.e., we assume agents are maximally cooperative). There-
                                                                       (              )
  Following Cohen and Levesque [1990], Shapiro et al. fore, the REQUEST requester, agt,ψ action should cause
                                                      agt to drop any paths in W where ψ does not hold. This
model goals using an accessibility relation over possible                                 −
worlds (situations, in our case). The accessible worlds are is taken into account in the deﬁnition of W :
the ones that are compatible with what the agent wants to be W −(agt,ψ,a,s,s) =def
the case. Shapiro et al.’s W accessibility relation, like the B ∃s.B(agt,s,s) ∧ s   s ∧¬ψ[do(a, s),s].
relation, is a relation on situations. Intuitively, W (agt,s,s)
                                     
holds if in situation s, agt considers that in s everything that According to this deﬁnition, s will be dropped from W ,
it wants to be true is actually true. For example, if the agent due to a request for ψ,ifs B-intersects some s such that
wants to become a millionaire in a situation S, then in all sit- ψ does not hold on the path (do(a, s),s). The reason that
uations W -related to S, the agent is a millionaire, but these we check whether ¬ψ holds at (do(a, s),s) rather than at
situations can be arbitrarily far in the future.      (s,s) is to handle goals that are relative to the current time.
  Following Cohen and Levesque [1990], the goals of the If, for example, ψ states that the very next action should be
agent should be compatible with what it believes. The situ- to get some coffee, then we need to check whether the next
                                                      action after the request is getting the coffee. If we checked
ations that the agent wants to actualize should be on a path   
from a situation that the agent considers possible. Therefore, ¬ψ at (s ,s), then the next action would be the REQUEST
the situations that will be used to determine the goals of an action.
agent will be the W -accessible situations that are also com- We also have to assert that initially no requests have been
patible with what the agent believes, in the sense that there made. We do so with the following initial state axiom:
is B-accessible situation in their history. We will say that s
                                               Axiom 3.2
Bagt,s-intersects s if B(agt,s ,s) and s   s . We will
                                                                                            
suppress agt or s if they are understood from the context.     Init(s) ⊃¬REQUESTED(agt,ψ,s,s).
Shapiro et al. deﬁne the goals of agt in s to be those formu-
                                                                                                      
lae that are true in all the situations s that are W -accessible Shapiro et al. deﬁned W in terms of REQUESTED. s is
from s and that B-intersect some situation, s:      W -accessible from s iff there is no outstanding request that
                                                      caused s to become inaccessible.
            (       ) =def
    GoalSLL  agt,ψ,s                                         (      ) =def ∀ ¬         (        ))
    ∀s,s.W (agt,s,s) ∧ B(agt,s,s) ∧ s   s ⊃       W  agt,s,s     ψ. REQUESTED   agt,ψ,s,s
             ψ[s,s].

                                                IJCAI-07
                                                  26274  Dynamic interactions between goals and             where chooseMin is a function which takes a ﬁnite set of for-
   beliefs                                            mulae and returns an element of the set that is minimal in ≤:
A common assumption in the agent theory literature [Cohen Axiom 4.2
and Levesque, 1990; Rao and Georgeff, 1991] is that achieve-
                                                            chooseMin(α)=x   ⊃∀y  ∈ α.y ≤ x ⊃ x ≤ y.
ment goals that are believed to be impossible to achieve
should be dropped. However, we go a step further. If some
time later, an agent revises its beliefs and decides that the goal After the set of requests is sorted, a maximally B-consistent
is achievable after all, the agent should reconsider and possi- sublist is selected that respects the ordering, using the func-
                                                      tion makecons, which is deﬁned using a recursively deﬁned
bly readopt the goal. Also, the previous focus has been on                     5
individual goals that are incompatible with an agent’s beliefs. auxiliary function makecons .
However, it could be the case that each goal is individually
                                                      Axiom 4.3
compatible with an agent’s beliefs but the set of goals of the
                                                                          
agent is incompatible, so some of them should be dropped. makecons (agt,l,s)=l ≡
                                                            =          =
  First, we make precise the notion of a ﬁnite set of goal if l nil then l nil else
                                                           if BCons(agt, cons(car(l),
formulae being compatible with an agent’s beliefs. We say                          
                                                                          makecons (agt, cdr(l),s)),s) then
that a ﬁnite set of goal formulae α is B-consistent in situation                     
                    (  )                                  l = cons(car(l), makecons (agt, cdr(l),s)) else
s, if there exists a path s ,s such that s is B-accessible                 
from s, and none of the goals in α caused s to be dropped     l = makecons (agt, cdr(l),s).
from W .                                                                                 
                                                       makecons(agt,l,s)=reverse(makecons (agt,
                  def                                                                           ( )  ))
   BCons(agt,α,s) =                                                                       reverse l ,s .
     ∃s,s.B(agt,s,s) ∧ s   s ∧
                                           
            ∀ψ.ψ ∈ α ⊃¬REQUESTED(agt,ψ,s,s).          In other words, the list α is checked starting from the end
                                                      to see if the last element is B-consistent with the result of
If α is a singleton, we may replace it with its element. recursively making the rest of the list B-consistent. If it is B-
  To make its goals compatible with its beliefs, an agent consistent, then it is added to the result, otherwise it is left out.
takes the set of requested formulae which may be B-   Finally, the resulting list is reversed to restore the ordering.
inconsistent and chooses a maximally B-consistent set to be This list is used to deﬁne our accessibility relation for
                                                ≤                                        
its goals. We assume that each agent has a preorder ( ) goals. First, we deﬁne CHOSEN(agt,ψ,s,s) (in analogy to
over goal formulae corresponding to a prioritization of goals. Shapiro et al.’s REQUESTED), which holds if was chosen
  ≤                                                                                        ψ
ψ   ψ  indicates that ψ has equal or greater priority than ψ . by agt and that choice should cause s to be dropped from the
                                                                                               
This ordering could be used to, e.g., represent that an agent accessibility relation (i.e., REQUESTED(agt,ψ,s,s) holds).
gives different priorities to requests from different sources,
                                                                             def
or to give higher priority to emergency requests. The agent CHOSEN(agt,ψ,s,s) =
chooses a maximally B-consistent subset of the requested for- member(ψ, makecons(sort(reqs(agt,s)),s)) ∧
                                                                                
mulae respecting this ordering. To simplify notation, we ﬁx  REQUESTED(agt,ψ,s,s).
here a single such ordering for all agents, but in practice dif-
ferent agents will have different orderings, and it is not difﬁ-
cult to generalize the deﬁnitions to accommodate this.  We   deﬁne  a new  accessibility relation for goals,
                                                      C(agt,s,s), based on the chosen set of goal formulae rather
  Let:                                                than the requested set. Intuitively, s is a situation that the
              def                                                                             (      )
    reqs(agt,s) = {ψ |∃s REQUESTED(agt,ψ,s,s)},       agent wants to realize in situation s. We say that C agt,s,s
                                                      holds if s is a situation that was not caused to be dropped by
denote the set of formulae that have been requested for agt in any chosen goal formula ψ:
situation s. Since there are no requests initially, and an action
                                                                       def                  
adds at most one goal formula to the set of requests, it is easy C(agt,ss) = ∀ψ¬CHOSEN(agt,ψ,s,s).
to see that this set is ﬁnite in any situation. Therefore, we
can consider the set of requests in a situation to be a list. The
list is sorted according to the priority ordering (≤), using the Finally, the goals of the agent are deﬁned analogously to
recursively deﬁned function sort(α), which takes a ﬁnite set the way it was done by Shapiro et al., but using C instead of
α and returns a list of elements of α sorted according to ≤:4 W :
                                                                        def
Axiom 4.1                                                 Goal(agt,ψ,s) =
                                                            ∀s,s.C(agt,s,s) ∧ B(agt,s,s) ∧ s   s ⊃
    sort(α)=l ≡                                                            
                                                                       ψ[s ,s].
      if α = nil then l = nil else
          l = cons(chooseMin(α),
                   sort(remove(chooseMin(α),α)),         5A similar function was deﬁned in Booth and Nittka [2005].This
                                                      way of handling preferences can also be viewed as a special case of
  4if P then A else B is an abbreviation for (P ⊃ A)∧(¬P ⊃ B) [Brewka, 1989].

                                                IJCAI-07
                                                  26285  Properties                                         formulae α, if the priority of ψ is at least as high as the prior-
                                                      ity of any goal formula in the set, and any goal formula in the
We now consider some properties of goal change. Let Σ con- set whose priority is at least as high as ψ is equal to ψ.
sist of the encoding axioms, the axioms deﬁning lists, and
Axioms 2.1–4.3. Our ﬁrst result is that the agents’ goals are Hp(ψ, α) =(def ∀ψ ∈ α.ψ ≤ ψ) ∧
always (simply) consistent.                                            (∀ψ ∈ α.ψ ≤ ψ ⊃ ψ = ψ).
Theorem 5.1
                                                        For this theorem, we need an assumption about the belief
         Σ |= ∀agt,s.¬Goal(agt, FALSE ,s).            change framework. Namely, it must be the case that request
                                                      actions are not “belief producing”. More precisely, if a situ-
                                                            
  As we have discussed, it should be the case that if an agent ation s is accessible after a request action was executed in
                                                      situation s,thens came about by executing the same request
believes a goal ψ is impossible to achieve then the agent               
should drop the goal. For this theorem, we assume that ψ action in a situation s accessible from s. In other words, suc-
is an achievement goal, i.e., of the form eventually ψ for cessor situations are not dropped from the B relation after a
some goal formula ψ. The theorem states that if an agent request action is executed.
believes that ψ is impossible to achieve, then the agent does
not have the goal Ev(ψ). We need to give a deﬁnition for Ev Axiom 5.4
                                                               
to be used both inside the Bel operator and the Goal opera- B(agt,s , do(REQUEST(reqr , agt,ψ),s)) ⊃
                                                                                                
tor. Since belief formulae take a situation as an argument and ∃s .s = do(REQUEST(reqr , agt,ψ),s) ∧ B(agt,s,s).
goal formulae take a path as an argument, we need two deﬁ-
nitions in order to use them in the two contexts, therefore, we Theorem 5.5
overload the deﬁnition.
                                                        Σ ∪{Axiom   5.4}|= ∀agt,ψ,reqr ,s.
  In the belief context, Ev(ψ, s) takes a single situation ar- BCons(agt,ψ,do(REQUEST(reqr , agt,ψ),s)) ∧
                                  
gument. It holds if there exists a path (s ,s) in the future of Hp(ψ, ({ψ}∪reqs(agt,s))) ⊃
             
s such that ψ[s ,s] holds.                                      Goal(agt,ψ,do(REQUEST(reqr , agt,ψ),s)).
       (   ) =def ∃      ∧     ∧ [  ]
     Ev ψ, s    s ,s.s   s   s    s   ψ s ,s .        6   Future Work
  In the goal context, Ev(ψ, s, s) takes a path (a pair of sit- Another interaction between achievement goals and beliefs is
                                               
uations) as an argument. It holds if there is a situation s in that once an agent believes that an achievement goal has been
                        
the future of s such that ψ[s ,s] holds.              realized, it should drop that goal. We have not addressed this
                                                      yet, but it will not be difﬁcult to add it to our framework, as
              def                 
     Ev(ψ, s, s ) = ∃s .s   s ∧ s   s ∧ ψ[s ,s].      described in the following. In the context of belief change,
                                                      the agent may believe that a goal has been achieved but later
Note that we suppress the situation arguments of Ev when it change its mind. In this case, the agent should ﬁrst drop its
is passed as an argument to Bel or Goal.              achievement goal, but later readopt it after the mind change.
                                                      Therefore, we need to check whether it is the case that agent
Theorem 5.2                                           believes that an achievement goal ψ has been false continu-
       Σ |= ∀agt,ψ,s.Bel(agt, ¬Ev(ψ),s) ⊃             ously since the last request for ψ. If not ψ, should be dropped.
                        ¬Goal(agt, Ev(ψ),s).          This can be formalized in the situation calculus as follows.
                                                      We ﬁrst deﬁne a predicate Prev(a, s,s), which holds iff the
                                                      last occurrence of a in the history of s occurs just before sit-
  As a corollary, we have a result about belief contraction. If 
an agent has Ev(ψ) as a goal in s but after an action a occurs, uation s .
the agent believes ψ is impossible to achieve, then the agent   (    ) =def
                  ( )                                       Prev a, s ,s
drops the goal that Ev ψ .                                    ∃s.s = do(a, s) ∧ s   s ∧
                                                                  ∀s∗,a∗.s ≺ do(a∗,s∗)   s ⊃ a = a∗.
Corollary 5.3
                                                       Then, we say that ψ is live in situation s, if the agent believes
   Σ |= ∀agt,a,ψ,s.Goal(agt, Ev(ψ),s) ∧
                     (    ¬   ( )   (   )) ⊃          that ψ has been continuously false since that last request for
                  Bel agt, Ev  ψ , do a, s            ψ:
                       ¬Goal(agt, Ev(ψ), do(a, s)).
                                                       Live(ψ, s) =def
  We also have a result concerning the expansion of goals. If Bel(agt,
an agent gets a request for ψ, it will not necessarily adopt ψ (∃s, reqr .Prev(request(reqr , agt,ψ),s, Now) ∧
                                                                      ∗  ∗    ∗             ∗   
as a goal, for example, if it has a conﬂicting higher priority      ∀s ,s1.s   s    Now ∧ s    s1   s ⊃
                                                                                ∗  ∗
goal. But if ψ is the highest priority goal formula, and it is              ¬ψ[s1,s ]),
B-consistent, it should be adopted as a goal. We say that a   s).
goal formula ψ is highest priority among a ﬁnite set of goal

                                                IJCAI-07
                                                  2629