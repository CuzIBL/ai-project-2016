                        Minimizing a Makespan Under Uncertainty
    Jer´ omeˆ Fortin           Paweł Zielinski´           Didier Dubois              Hel´ ene` Fargier
      UPS, IRIT,          Institute of Mathematics,         UPS, IRIT,                 UPS, IRIT,
118 route de Narbonne,    University of Technology    118 route de Narbonne,     118 route de Narbonne,
31062 Toulouse, France    Wyb. Wyspianskiego´   27,   31062 Toulouse, France     31062 Toulouse, France
     fortin@irit.fr       50-370 Wrocław, Poland           dubois@irit.fr             fargier@irit.fr
                            pziel@im.pwr.wroc.pl

                    Abstract                          2   Preliminaries
    This paper reconsiders the most basic scheduling  An activity network is classically deﬁned as a set of activities
    problem, that of minimizing the makespan of a par- (or tasks) with given duration times, related to each other by
    tially ordered set of activities, in the context of means of precedence constraints. When there are no resource
    incomplete knowledge. After positioning this pa-  constraints, it can be represented by a directed, connected and
    per in the scope of temporal networks under uncer- acyclic graph. Of major concern, is to minimize the ending
    tainty, we provide a complete solution to the prob- time of the last task, also called the makespan of the network.
    lem of ﬁnding ﬂoats of activities, and of locating For each task, three quantities have practical importance for
    surely critical ones, as they are often isolated. The the management of the activity network: The earliest start-
                                                                             ( ; )
    minimal ﬂoat problem is NP-hard while the maxi-   ing time esti j of an activity i j is the date before which the
    mal ﬂoat problem is polynomial. New complexity    activity cannot be started without violation of a precedence
                                                                                                   ( ; )
    results and efﬁcient algorithms are provided for the constraint. The latest starting time lsti j of an activity i j is
    interval-valued makespan minimization problem.    the date after which the activity cannot be started without de-
                                                      laying the end of the project. The ﬂoat fi j of an activity ( i; j)
                                                      is the difference between the latest starting time lsti j and the
1  Introduction and Motivation                        earliest starting time esti j. An activity is critical if and only if
Temporal Constraint Networks (TCN) represent relations be- its ﬂoat is equal to zero.
tween dates of events and also allow to express constraints Now, activity durations (weights of the arcs) ( i; j) 2 A
                                                                                               = [   ; + ]
on the possible durations of activities from intervals of val- are only known to belong to time intervals Di j di j di j ,
ues [Dechter et al., 1991]. TCN have been extended to take   
                                                      di j 0. We deﬁne a conﬁguration as a precise instantiation
into account uncertainty of durations of some tasks in real- of the duration of each task ( i; j) 2 A. Ω denotes a conﬁgu-
istic applications. A distinction is made between so-called
                                                      ration, while di j( Ω) denotes the duration of activity ( i; j) in
contingent constraints (for example, when the duration of conﬁguration Ω. G( i; j) is the subgraph of G composed of
a task cannot be known before its execution) and control- nodes succeeding i and preceding j.
lable ones (for example a time interval to be chosen between Computing earliest starting dates is not a difﬁcult issue.
starting times of two tasks). The resulting network (Simple Here we solve four problems, stated in [Chanas et al., 2002]:
Temporal Network with Uncertainty) becomes a decision- 1) determining the widest intervals LST (bounds) of pos-
making problem under uncertainty, and notions of consis-                                kl
                                                      sible values of the latest starting times lstkl of a given ac-
tency must be reﬁned so as to ensure controllability, that is, ( ; ) 2                 = [    ; + ]
                                                      tivity k l  A, i.e. the interval LSTkl lstkl lstkl deﬁned
ensured consistency despite uncertainty [Morris et al., 2001;   =     ( Ω)     + =        ( Ω)
                                                      by lstkl minlstkl  and lstkl maxlstkl  ; the problem
Khatib et al., 2001]. As far as we know, the TCN community                     +
has extensively worked on the controllability of a network, of computing lstkl (resp. lstkl ) is denoted GLBLST (resp.
but the question of optimizing the total duration of set of tasks LUBLST); 2) determining the widest intervals Fkl of possible
                                                                                                 ( ; ) 2
described by a STPU has not been studied. Nevertheless, not values of ﬂoats (total ﬂoats) fkl of a given activity k l A,
                                                                       = [   ; + ]            =       ( Ω)
all solutions to an STPU are equally valuable, and solutions i.e. the interval Fkl fkl fkl bounded by fkl min fkl
                                                           + =       ( Ω)                          
minimizing the makespan are of obvious practical interest. and fkl max fkl . The problem of computing fkl (resp.
                                                       +
  This paper provides a full picture of the complexity of the fkl ) is denoted GLBF (resp. LUBF). In both problems min-
makespan minimization problem under interval-based uncer- imization and maximization are taken over all possible con-
tainty. It is shown that the only NP-hard problem is the one of ﬁgurations. The solutions to problems GLBLST, LUBLST,
ﬁnding the greatest lower bound of the ﬂoat, which is closely LUBF and GLBF come down to ﬁnding an extreme con-
related to asserting the possible criticality of a task. All other ﬁguration [Dubois et al., 2005] where such bounds are at-
problems turn out to be polynomial. The fact that the two tained. As there are 2n extreme conﬁgurations, it explains
problems of asserting if an arc is necessary critical or possibly the potentially exponential nature of the problem. GLBLST,
critical do not have the same complexity is rather unexpected. LUBLST and GLBF have recently been solved in [Chanasand Zielinski,´ 2002; Zielinski,´ 2005], and only GLBF is NP- In this table we give the complexity of the theoretically
hard. In this paper, we recall the solutions of these three prob- best known algorithm which computes the quantity of inter-
lems, and present the solution to the last one LUBF, thus pro- est. In particular, the path algorithm [Dubois et al., 2005]
viding a full picture of the makespan minimization problem which computes the GLB and LUB of ﬂoats and latest start-
under incomplete information.                         ing dates runs in O(( n+ m) j Pj ) time , where j Pj is the number
                                                      of path of the graph G. The real complexity thus depends of
3  Evaluating Necessary Criticality                   the topology of the network.
This section presents a new method which can decide if a
given task ( k; l) is necessary critical.             5   Conclusion
  First, under the assumption that the durations of the prede- This paper proposes a complete solution to the criticality
cessors of task ( k; l) are precisely known, we already know an analysis of a network of activities when durations of tasks
algorithm that asserts if ( k; l) is necessary critical. It consti- are ill-known. It is shown that moving from precise to impre-
tutes the basis for computing the LUB and GLB of the latest cise durations radically changes the complexity of the prob-
starting dates in polynomial time in [Zielinski,´ 2005]. We lem, ruining the traditional critical path method. Part of the
have extended these results and can provide a general algo- problem, pertaining to the GLB of the ﬂoat, becomes NP-
rithm which asserts if ( k; l) is necessary critical in a network hard, the other questions remaining polynomial, although not
G in polynomial time without any consideration of the dura- straightforwardly so. These complexity results shed light on
tions of tasks preceding ( k; l) .                    reasons why the more familiar stochastic counterparts to this
  Suppose that ( k; l) is necessary critical in the sub-network basic scheduling problem are so difﬁcult to handle, part of the
G( i; n) , then we proved that we can ﬁx the duration of tasks difﬁculty being already present in the interval analysis. The
preceding node i at their lower bounds, without changing the proposed algorithms can be of obvious relevance to practi-
necessary criticality of ( k; l) in G. On the contrary, if ( k; l) cal predictive project scheduling problems where durations
is not necessary critical in G( i; n) , then we proved that we of tasks are not known in advance. Clearly, due to the ba-
can ﬁx the duration of tasks preceding node i at their upper sic nature of the addressed problem, several lines of research
bounds. Applying this idea on networks G( i; n) for i from can be envisaged for future research. For instance one may
k down to 1, for each network, tasks preceding ( k; l) have assume that part of the tasks durations are controllable and
always precise duration in G( i; n) , and so we can easily assert additional constraints relating durations and starting or end-
the necessary criticality in polynomial time. The resulting ing times may be available. Then one obtains a makespan
algorithm requires O( mn) steps to assert if ( k; l) is necessary minimization problem in the more general setting of STPU’s.
critical in G.
                                                      References
4  Computing the Least Upper Bound on the
                                                      [Chanas and Zielinski,´ 2002] S. Chanas and P. Zielinski.´ The
   Floats                                                computational complexity of the criticality problems in a
To compute the LUB of the ﬂoats, we are going to increase network with interval activity times. EJOR, 136:541–550,
                      ( ; )       =        ( ; )
step by step the duration of k l from Dkl dkl until k l be- 2002.
                                     + £
comes necessary critical with a duration dkl f . We proved [           ]                             ´
             £                     ( ; )               Chanas et al., 2002 S. Chanas, D. Dubois, and P. Zielinski.
that the value f is the LUB of the ﬂoat of k l .         On the sure criticality of tasks in activity networks with
  If we assume that activities preceding ( k; l) have precise
              + =   +     +                              imprecise durations. IEEE Transactions on Systems, Man,
durations, then fkl lstkl estkl . So at each step of the com- and Cybernetics, 34:393–407, 2002.
putation, we can easily compute f + representing the ﬂoat of
                            i                         [                ]
( k; l) in network G( i; n) . After initialization of durations in Dechter et al., 1991 R. Dechter, I. Meiri, and J. Pearl. Tem-
the network by the algorithm which asserts if ( k; l) is nec- poral constraint networks. AI, 49:61–95, 1991.
essary critical, if ( k; l) is not necessary critical, we have to [Dubois et al., 2005] D. Dubois, H. Fargier, and J. Fortin.
                    ( ; )                     +
increase the duration of k l by the minimal non-null fi for Computational methods for determining the latest start-
i preceding k, then go back to the test of asserting necessary ing times and ﬂoats of tasks in interval-valued activity net-
criticality. When ( k; l) becomes necessary critical, we have works. J. of Intelligent Manufacturing, 2005. To appear.
      +                  ( ; )
found fkl . At each iteration, k l becomes necessary criti- [Khatib et al., 2001] L. Khatib, P. Morris, R. Morris, and
                            ( ; )
cal in at least one new network G i n , and so the resulting F. Rossi. Temporal constraint reasoning with preferences.
algorithm is polynomial and takes O( n3m) .              In IJCAI, pages 322–327, 2001.
  The following table summarizes the complexity of the dif-
                                                      [               ]
ferent problems of the PERT/CPM on intervals:          Morris et al., 2001 Paul Morris, Nicola Muscettola, and
                                                         Thierry Vidal. Dynamic control of plans with temporal
                                      ( +   )
  Earliest starting GLB     P        O n  m              uncertainty. In IJCAI, pages 494–502, 2001.
  date (all tasks) LUB      P        O( n + m)
  Latest starting GLB       P         O( mn)          [Zielinski,´ 2005] P. Zielinski.´ On computing the latest start-
  date (one task) LUB       P         O( mn)             ing times and ﬂoats of activities in a network with impre-
  Float (all tasks) GLB  NP-Hard   O(( n + m) j Pj )     cise durations. Fuzzy Sets and Systems, 150:53–76, 2005.
  Float (one task) LUB      P        O( n3m)