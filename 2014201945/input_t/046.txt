      Incremental Utility Elicitation with                      Minimax Regret Decision Criterion 

                          Tianhan Wang                                       Craig Boutilier 
                Department of Computer Science                     Department of Computer Science 
                       University of Toronto                              University of Toronto 
              Toronto, ON, M5S 3H5, CANADA                        Toronto, ON, M5S 3H5, CANADA 
                     tianhan@cs.toronto.edu                               cebly@cs.toronto.edu 


                        Abstract                               new decision criteria are needed. In addition, methods 
                                                               for the automatic generation of queries have been devel•
     Utility elicitation is a critical function of any au•
                                                               oped that reduce uncertainty or incompleteness in the util•
     tomated decision aid, allowing decisions to be tai•
                                                               ity function with minimal effort. Within Al, probabilistic 
     lored to the preferences of a specific user. How•
                                                               models of utility function uncertainty have been used [4; 
     ever, the size and complexity of utility functions 
                                                               2]. By assuming a density over possible utility functions, 
     often precludes full elicitation, requiring that de•
                                                               expectations over this density can be taken to determine the 
     cisions be made without full utility information. 
                                                               value of a decision; and standard Bayesian updating tech•
     Adopting the minimax regret criterion for decision 
                                                               niques can be used to account for the responses to queries. 
     making with incomplete utility information, we de•
                                                               A different perspective is taken in work on imprecisely spec•
     scribe and empirically compare several new pro•
                                                               ified multiattribute utility theory (ISMAUT) [8; 7] in which 
     cedures for incremental elicitation of utility func•
                                                               linear constraints on multiattribute utility functions are re•
     tions that attempt to reduce minimax regret with as 
                                                               fined, allowing the set of Pareto optimal decisions to be iden•
     few questions as possible. Specifically, using the 
                                                               tified; these constraints arc often refined until one action can 
     (continuous) space of standard gamble queries, we 
                                                               be proven optimal. Boutilier, Bacchus and Brafman [3] and 
     show that myopically optimal queries can be com•
                                                               Blythe [1] adopt a somewhat related perspective, also reason•
     puted effectively (in polynomial time) for several 
                                                               ing with linear constraints on utility functions. 
     different improvement criteria. One such criterion, 
     in particular, empirically outperforms the others we        In this work, we adopt a distribution-free model, work•
     examine considerably, and has provable improve•           ing with linear constraints on utility functions, much like 
     ment guarantees.                                          ISMAUT. Unlike ISMAUT, we allow for decisions to be 
                                                               made (or recommended) even when the incompleteness in 
                                                               utility knowledge prevents us from proving a decision is op•
1 Introduction                                                 timal. In such circumstances, we adopt the minimax regret 
As software for decision making under uncertainty becomes      decision criterion. We also propose and examine several 
increasingly common, the process of utility elicitation takes  methods for generating queries that reduce regret quickly, 
on added importance. Tailoring decisions to a specific user    in contrast to work on ISMAUT (where query generation 
requires knowledge of the user's utility function, information strategies have not been studied in depth). In this sense, 
that generally cannot be built into software in advance. In    our model more closely resembles probabilistic models [4; 
domains as varied as travel planning, product configuration,   2], which rely on the fact that decisions of good expected 
and resource allocation, to name but a few, assessing a user's quality can be made with uncertain utility information. Using 
utility function is an integral part of interactive decision mak• the minimax regret criterion, we generate decisions whose 
ing. Unfortunately, as is well-known among decision ana•       quality (difference from optimal) can be bounded in the face 
lysts, utility functions are unwieldy, complex, and difficult  of incomplete utility information. These bounds can be traded 
for users to articulate [5]. To mitigate these difficulties, ana• off against query cost or minimum error requirements to 
lysts have developed many techniques for easing the burden     guide the query process. 
of elicitation. For example, structuring of multiattribute util• The paper is organized as follows. We outline relevant 
ity functions reduces the number of parameters that need to be background in Section 2 and define the minimax regret crite•
assessed [6]; and the use of standard gamble queries and sen•  rion for decision making with incomplete utility information. 
sitivity analysis allows users to calibrate utilities more easily We show how decisions of minimax regret can be computed 
[5].                                                           using simple linear programs (LPs) if utility constraints are 
  More recently, emphasis has been placed on decision mak•     linear. We also discuss incremental elicitation, focusing on 
ing with incomplete utility information. The principle of      standard gamble queries (SGQs) [5], the responses to which 
maximum expected utility (MEU) cannot be used directly         impose one-dimensional, linear utility constraints that can be 
in such cases, since the utility function is unknown; thus     easily handled using LPs. Our key contribution is described 


DECISION THEORY                                                                                                       309  in Section 3, where we develop several myopic elicitation     over unknown utility values ui are linear. We use C U to 
 strategies. Assuming linear constraints in each utility dimen• denote the subspace of U satisfying C. 
 sion (an assumption consistent with the use of SGQs), we         If a system makes a decision d under such conditions of 
 show that the minimax regret improvement offered by any       incomplete utility information, some new decision criterion 
 response to a SGQ, as a function of the (continuous) query    must be adopted to rank decisions. Following [3], we adopt 
 parameter, is piecewise linear (PWL) and weakly monotonic     the minimax regret decision criterion.2 Define the optimal 
 (decreasing or increasing, depending on the response). This   decision d*u with respect to utility vector u to be 
 fact allows optimal queries under each query strategy to be 
 computed efficiently, in time linear in the number of utility 
 attributes, despite the fact that query space is continuous. We 
 present empirical results comparing the different strategies in If the utility function were known, du would be the correct 
 Section 4, demonstrating the effectiveness, in particular, of decision. The regret of decision di with respect to u is 
 the maximum expected improvement strategy. 

 2 Minimax Regret with Incomplete Utility                      i.e., the loss associated with executing di instead of acting 
     Information                                               optimally. Let C C U be the feasible utility set. Define the 
                                                               maximum regret of decision di with respect to C to be 
 We assume a system charged with making a decision on be-
 half of a user in a specific decision scenario. By a decision 
 scenario, we refer to a setting in which a fixed set of choices 
 (e.g., actions, policies, recommendations) are available to the and the decision d*c with minimax regret with respect to C: 
 system, and the (possibly stochastic) effects of these choices 
 are known. For example, the decisions could be courses of 
 medical treatment with known probabilities for specific out•
                                                               The (minimax) regret level of feasible utility set C is 
 comes [4]. The system's task is to take the optimal decision 
 with respect to the user's utility function over outcomes, or 
 some approximation thereof. The system may have little in•
 formation about the user's utility function, so to achieve this, If the only information we have about a user's utility function 
 it must find out enough information about this utility function is that it lies in the set C, then d*c is a reasonable decision. 
 to enable a good decision to be made. We assume that The      Specifically, without distributional information over the set 
 system has available to it a set of queries it can ask of the user of possible utility functions, choosing (or recommending) d*r 
 that provide such information. We make these concepts more    minimizes the worst case loss with respect to possible real•
 precise below.                                                izations of the utility function (e.g., if the true u were chosen 
                                                               by an adversary). 
 2.1 The Minimax Criterion                                       If C is defined by a set C of linear constraints, then d*c 
                                                               as well as MMR(C) can be computed using a set of linear 
 Formally, a decision scenario consists of a finite set of possi•
                                                               programs [3]. We can compute the pairwise max regret, for 
 ble decisions D, a finite set of n possible outcomes (or states) 
                                                               any pair of decisions di and dj, 
 5, and a distribution function Prd e A(S), for each d 6 D1 
 The term Prd(s) denotes the probability of outcome s be•
 ing realized if the system takes decision d. A utility function 
 u : S —> [0,1] associates utility u(s) with each outcome      using an LP (i.e., maximizing a linear function of the un•

 s. We often view u as a n-dimensional vector u whose ith      known outcome utilities subject to C). Solving 0(\D\2) such 
 component Ui is simply u(s{). We assume that utilities are    LPs, one for each ordered pair of actions, allows us to iden•

 normalized in the range [0,1] for convenience. The expected   tify the decision d*c that achieves minimax regret and to de•
 utility of decision d with respect to utility function u is:  termine the minimax regret level MMR(C). 

                                                               2.2 Incremental Elicitation 
                                                               Given partial knowledge of a utility function in the form of 
                                                               constraint set C, the optimal decision d*  may have an unac•
 Note that EU(d,u) is linear in u. The optimal decision d*                                           c
                                                               ceptable level in regret. In such a case, a user could be queried 
 w.r.t. u is that with maximum expected utility (MEU). 
                                                               in order to reduce this level of uncertainty, thus generally im•
   In general the utility function u will not be known with cer•
                                                               proving decision quality.
 tainty at the start of the elicitation process, nor at its end. As                   3 
 in ISMAUT [8; 7], we model this uncertainty by assuming a 
 set of linear constraints C over the set of possibly utility func•

 tions U = [0, l]n. More precisely, we assume that constraints 

    'The extension of our elicitation methods to a set of possible 
 decision scenarios is straightforward. 


310                                                                                                  DECISION THEORY    A common type of query is a standard gamble w.r.t. out•     soning, myopic approximations tend to be used frequently in 
come .si, where the user is asked if she prefers Si to a gam•  practice [5; 4]. 
ble in which the best outcome sT occurs with probability / 
and the worst s± occurs with probability 1 - / [6]. We will    3 Myopic Elicitation Strategies 
designate this query qi(l) and focus our attention on such 
                                                               In this section we describe three myopic strategies for query 
standard gamble queries or SGQs.4 Given a response yes 
                                                               selection under the minimax regret criterion. Throughout this 
to query qi(/), the constraint ut > I can be imposed on the 
user's utility function, thus (in general) refining our knowl• section we make the following assumptions: 
edge; similarly, a no response corresponds to the constraint   (a) The initial constraints have the form of upper and lower 
ui < I. A response to any standard gamble query imposes            bounds in each utility dimension (these may be trivial 
a one-dimensional (i.e., axis parallel) linear constraint on the   bounds, 0, 1). 
utility set. Thus if our initial constraint set C is linear, comput•
                                                               (b) SGQs are asked, assuming some known best and worst 
ing the minimax optimal decision after a sequence of SGQs 
                                                                   outcome. These ensure that each constraint set (after any 
can be accomplished using the LP method above. Further•
                                                                   query) has the same form as the initial set (i.e., a hyper-
more, if C consists of a set of bounds on utility values in each 
                                                                   rectangle). We denote by uh  and lb  the current bounds 
dimension—i.e., C forms a hyper-rectangle within [0, l] —                                     l       i
                                                       n           on the utility U  of outcome . 
then after any sequence of SGQs, the feasible utility set re•                     i            it
tains this form.                                               (c) For simplicity, we assume a threshold r is used to imple•
   The interactive decision making context we consider is one      ment termination; that is, when the predicted improve•
in which queries are asked repeatedly until the minimax re•        ment of a query falls below T, we terminate the process. 
gret level falls to some acceptable value. At that point the   We discuss the impact of relaxing these assumptions later. 
"optimal" decision, that with minimax regret given the cur•
rent constraints, is recommended. Termination can be based     3.1 Characterization of Regret Reduction 
on simple thresholding, or can take into account the cost of   Query selection is complicated by the fact that, in general, 
a query (which can be weighed against the predicted im•        there are n types of SGQs that can be asked—one per out•
provement in decision quality).5 Generally, queries will be 
                                                               come sx—and a continuous set of instances of each type i— 
asked that offer the greatest predicted improvement in deci•
sion quality. 
   Both query selection and termination rely critically on the 
way in which "predicted improvement in decision quality" 
is defined for a query. For example, when asking a query 

qi{l) with respect to current constraint set C, we obtain two 
constraint sets Cno and Cyes.,respectively, given responses, 
no and yes. We might then define the improvement in de•
cision quality associated with the query as some function of 

MMR(Cno) and MMR(Cyes). Such a method of evaluating 
queries is myopic: the query is evaluated in isolation, without 
consideration of its impact on the value or choice of future 
queries. 
   It is important to note that optimal query choice is inher•
ently nonmyopic—in general, a sequence of several queries 
may offer much more value than the aggregate myopic values 
of the component queries. Unfortunately, nonmyopic meth•
ods require some form of lookahead, and thus often impose 
severe computational costs on the process of query selec•
tion. For this reason, we focus on the development of several 
myopic query selection strategies in the next section. This 
is analogous to the use of myopic methods for the approx•
imation of value of information in cases where uncertainty 
is quantified probabilistically; while the computation of true 
value of information requires some form of sequential rea-

   4Other types of queries could be considered, though we rely on 
the special nature of SGQs in some of our results. SGQs are used 
widely in decision analysis [5], and have been the main query type 
studied in recent Bayesian elicitation schemes [4; 2]. 
   5Of course, elicitation can continue until a zero-regret (i.e., opti•
mal) decision is identified: this occurs whenever C C Rd for some 
decision d, the region of utility space for which d is optimal. The 
regions Rd are convex polytopes within U. 


DECISION THEORY                                                                                                       311  Figure 1: Structure of various functions in dimension i, as a function of/: (a) The PMR for d\ (w.r.t. d1, d2, d3) are shown; as is 
 MR(d,C,,i,l) the max (thin solid line0of pairwise max regret functions. MRno (thick solid upper line) is obtained by replacing the PMR 
 line d2 — d\ (with negative slope) by the constant line, and again taking the max. (b) MMRn„ (dashed line) is the min of the MRno functions 
 for each decision; (c) Intersection of MMRno and MMRyes gives maximin improvement in MMR. 

 to max regret in dimensions other than i is constant, while 
 the contribution to regret in dimension i given Ui — I is lin•
 ear in /, with coefficient It follows that 
                                          is a PWL convex 
 function of/, since it is the max of these pairwise regret func•
 tions (see Figure 1(a)).                                      At each stage, the query qi(l) is asked whose minimum im•
                                                               provement with respect to the current constraint set is max•
   Now define the 
                                                               imum. The process stops when no query has minimum im•
 max regret of d after obtaining a negative response to query 
                                                               provement greater than threshold r. 
       (Note that this differs from which is de•
 fined by assuming . _ „ is To compute the optimal MMI query point, we find the 
 also a PWL convex function, obtained from the set of lin•     optimal query point in each dimension i, and ask the SGQ 
 ear PMR-functions that make up as follows:                    corresponding to the dimension with greatest MMI. The 
 we replace any linear components with negative slope by the   PWL representation of the functions MMRyesi(C,i,l) and 
 constant line Intuitively, if the regret of d                 MMRno(C,i, I) described above allows the optimal point in 
                                                               each dimension to be computed readily. The point / that of•
 w.r.t. d' after learning Ui = I decreases with /, then simply 
 learning that cannot reduce pairwise max regret, since        fers MMI in dimension i can be determined by computing the 
 this weaker constraint does not rule out the maximum regret   intersection of the two functions: since one is nondecreas•
 at (see Figure 1(a) for this intuitive flattening of the      ing and the other nonincreasing, the maximum point of the 
                                                               function must lie at the intersec•
 regret line for d2 - d1). This ensures that is 
 also nondecreasing in /, as illustrated in Figure 1(a).       tion. Note that the intersection must exist since each has the 
                                                               same maximum value MMR(C) (see Figure 1(c)).       Finally, 
   Finally, note that, by definition of minimax regret,                                                         6
                                                               the value of the improvement in regret is the difference be•
                                          The minimum of 
                                                               tween the original minimax regret level and this value. 
 a collection of PWL, convex, nondecreasing functions is also 
                                                                 Computation of the intersection of these functions is 
 PWL and nondecreasing (though not necessarily convex) (see 
                                                               straightforward, requiring only the computation of the inter•
 Figure 1(b)). 
                                                               section of the linear segments whose bounds overlap. As 
Note that this proof sketch shows how to construct a finite 
                                                               such, this can be accomplished in linear time in the maximum 
representation of the function as a finite col•
                                                               number of segments in either function. The number of seg•
lection of linear functions and inflection points. By entirely 
                                                               ments in these functions is (very loosely) bounded by ? 
analogous reasoning, we also have: 
                                                               Since we must compute the optimizing point for each util•
                                                               ity dimension, the complexity of this algorithm is 
                                                               The algorithm thus scales linearly in the number of outcomes 
                                                               and quadratically with the number of decisions. 

3.2 Maximin Improvement                                        3.3 Average and Expected Improvement 
                                                               One difficulty with the MMI criterion for query selection is 
One goal of any query strategy is to determine utility informa•
                                                               that, due to its worst-case nature, we can often find situations 
tion that reduces regret as quickly as possible. Unfortunately, 
                                                               in which no query offers positive (minimum) improvement 
for any given the exact reduction in regret can•
                                                               (we will see evidence of this in the next section), despite the 
not typically be predicted in advance, since it differs depend•

ing on whether a yes or no response is obtained. The max-         6If the intersection occurs where both functions are "flat," any 
imin improvement (MMl) query strategy myopically selects       query point in the intersection can be used. 
queries with the best worst-case response. More precisely,        7In practice, the number of segments appears to grow sublinearly 
let C be our current constraint set. We define the minimum     in the number of decisions \D\. 


312                                                                                                  DECISION THEORY fact that the current regret level is positive. This occurs when 
                                                                                                   Predicted MMR by MEI 
at least one of the responses for every query offers no im•                                        Actual MMR by MEI 
provement, thus stalling the query process. Intuitively, just                                      True Regret by MEI 

because one response to a query ql(l) offers no improvement                                        Actual MMR by Random Queries 
is no reason not to ask the query: the opposite response may                                       True Regret by Random Queries 

still offer immediate improvement.8 This suggests an alterna•
tive criterion called maximum average improvement (MAI): 
SGQs are ranked according to the average improvement of•
fered by both positive and negative responses. 
   Computing the optimal query point according to MAI can 
also exploit the PWL nature of the functions 

and MMRno(C, i, /). As with MMI, we compute the optimal 
query point I in each dimension i independently. It is not hard 
to see that the point of maximum average improvement must 
occur at an inflection point of one of the two functions. Thus, 
each dimension can be optimized in time linear in the number 
of segments in the two functions. 
   The MAI criterion is not subject to stalling in the sense that 
MMI is: if MMR(C) is positive, then there exists some query 
with positive MAI (this will follow from a result discussed     Figure 2: Performance of MEI on three-good problems (40 runs). 
below). However, it is subject to a different form of stalling: 
it may well be the case that the query qi(l) with MAI occurs 
at one of the boundary points . In such a case, only 
one (consistent) response is possible, imposing no additional  Proposition 1 If MMR{C) > 0, then there exists some query1 
constraints on the utility function. As such, the constraint   qt(l) with positive expected improvement; and at least one 
set C will remain unchanged, meaning that the same query       response to the MEl-optimal query reduces minimax regret. 
remains MAl-optimal at the next stage. 
   This second type of stalling can be prevented. Suppose 
that a query qi(l) is optimal, where We know that 
                                          (i.e., a yes offers    The MEI criterion could be adopted using other distri•
                                                               butional assumptions, though the optimization required by 
greater improvement at the point ubl)\ but since cannot 
exceed ubi, the probability of receiving a yes response is     query selection could become more complicated. It is worth 
zero, so the yes-improvement cannot be realized. We can thus   noting that the manner in which we use distributional in•
make the query qi(l) appear to be less desirable by accounting formation is consistent with the worst-case perspective im•
for the odds of receiving a specific response. The maximum     posed by the minimax criterion. With some distribution 
expected improvement (MEI) criterion does just this. We de•    over utility functions, we could adopt the perspective of [4; 
fine the expected improvement of a query:                      2], and make decisions by taking expectations with respect 
                                                               to this distribution. However, even in this case, minimax re•
                                                               gret allows one to offer guarantees on decision quality that a 
                                                               Bayesian approach does not address. The MEI criterion ex•
                                                               ploits distributional information only to guide the querying 
 At each stage, we ask the query with maximum El. 
                                                               process, hoping to reach a point more quickly where accept•
   Computation of expected improvement requires some dis•      able guarantees can be provided; the distribution is not used 
tribution over responses. For simplicity, we assume a uni•     to evaluate decisions per se. 
form distribution over utility functions and noise-free re•
sponses: thus, (with While other prior distributions will generally require a dif•
the negative probability defined similarly). This assumption   ferent approach to the optimization problem for query selec•
also allows for the ready computation of the MEl-optimal       tion, it is interesting to observe that queries associated with a 
query. Again, we optimize each dimension separately. The       mixture of uniform distributions can be determined in exactly 
optimization in dimension i can be effected by doing sep•      the same manner. The derivation of the optimal query given 
arate optimizations in the regions defined by the union of     such a mixture is straightforward, and these models have the 
the inflection points in the functions and desirable property (like uniform priors) that they are closed 
                 We defer the details, but note that the func• under update by query responses. Thus, if our prior beliefs 
tion being optimized within each region is a simple quadratic  can be approximated well using a mixture of uniforms with 
function of/ that can be solved analytically. Thus the compu•  a small number of components, MEI-querying can be used 
tational complexity of this criterion is similar to that of MMI directly as described here, without distribution-specific opti•
and MAI. Fortunately, MEI is not subject to stalling:          mization. It is important to note, however, that, even if the 
                                                               approximate priors are used, the decision quality of the MEI 

   8Note that, since MMI is myopic, even a nonimproving response strategy is unaffected—only the number of queries required 
may offer information that can be exploited in the future.     may be adversely impacted. 


DECISION THEORY                                                                                                       313 