               Assertion Application in Theorem Proving and Proof Planning 

                         Quoc Bao Vo1, Christoph Benzmiiller1 and Serge Autexier2 
                  XFR Informatik, Universitat des Saarlandes, 66041 Saarbriicken, Germany 
                                        {bao|chris}@ags. uni - sb. de 

                                   2DFKI GmbH, 66123 Saarbriicken, Germany 
                                               autexier@dfki.de 


   Our work addresses assertion retrieval and application in theorem tive in this project to rebuild the system on top of the proof 
proving systems or proof planning systems for classical first-order representation framework in [1; 2]. We furthermore employ 
logic. We propose a distributed mediator M between a mathemat• OMEGA'S agent-based search mechanism OANTS [4] for a 
ical knowledge base KB and a theorem proving system TP which   distributed modeling of our framework and we motivate an 
is independent of the particular proof and knowledge representation application of the approach in a project aiming at a tutorial 
formats of TP and KB and which applies generalized resolution in dialogue system for mathematics. 
order to analyze the logical consequences of arbitrary assertions for 
a proof context at hand. We discuss the connection to proof planning 2 Assertion Application via Generalized 
and motivate an application in a project aiming at a tutorial dialogue Resolution 
system for mathematics. This paper is a short version of [9]. 
                                                               Depending on the proof context there may be several ways in 
1 Proof planning at the assertion level                        which an assertion can be used. For instance, the assertion 
Due to Huang [6], the notion of assertion comprises mathe•
matical knowledge from a mathematical knowledge base KB 
such as axioms, definitions, and theorems. Huang argues that 
an assertion-based representation, i.e. assertion level, is just 
the right level for machine generated proofs to be transformed 
                                                                 Traditional theorem provers or proof planners that operate 
into before being presented to (human) users. In this paper we 
                                                               on calculus level can only achieve such conclusions after a 
argue further that the assertion level can also serve as one of 
                                                               number of proof steps to eliminate the quantifiers and other 
those levels of granularity on which knowledge-based proof 
                                                               connectives such as implication and conjunction. We propose 
planning should be based [7]. 
                                                               an algorithm Assertion Application based on a generalized 
   We are convinced that by planning directly on the asser•
                                                               form of resolution in order to achieve such conclusions in one 
tion level it will be possible to overcome at least some of the 
                                                               step for arbitrary assertions and proof contexts at hand. The 
identified limitations and problems of proof planning as dis•
                                                               algorithm, which is described in [9], is based on: 
cussed in [3; 5] — in particular, those, that are caused by an 
unfortunate intertwining of proof planning and calculus level    1. The representation of formulas as signed formula trees 
theorem proving. The perspective we therefore motivate is to        (SFT); see also [1; 2]. This way we achieve access to 
consider the assertion level as a well chosen borderline be•        the literals of the formulas without breaking them apart. 
tween proof planning and machine oriented methods. De•           2. The lifting of the resolution idea to directly operate on 
termining the logical consequences of assertions in a proof         complementary and unifiable literals in SFTs instead of 
context is the task of machine oriented methods (in our case        working on (unintuitive) normal forms. 
generalized resolution). The tasks on top of this level — for 
                                                                 3. The exhaustive application of (2) to the SFTs generated 
instance, an domain dependent containment of the initial as•
                                                                    for the assertion and the formulas of the proof context. 
sertions to be considered, the heuristic selection of the most 
promising among the computed logical consequences, the in•     3 Modeling Assertion Agents 
troduction, constraining and handling of meta-variables, etc. 
— belong to the scope of domain specific proof planning.       In our implementation of mediator M we model assertion ap•
   In summary, instead of reconstructing natural deduction     plication in form of distributed search processes employing 
(ND) proofs to obtain assertion level proofs as suggested by   the OANTS approach [4]. This agent based formalism is the 
Huang, we propose to directly plan for proofs at the assertion driving force behind distributed proof search in OMEGA. 
level. This should improve the quality of the resulted proof     The general application scenario we have in mind is a the•
plans and also facilitate better user interaction.             orem prover TP that is connected to an independent math•
   The development of our ideas revolves around the math•      ematical knowledge base KB. TP is focusing a proof task r 
ematical assistant system OMEGA [8] and the current initia•    consisting of the formula TP has to prove, viz. the theorem H, 


POSTER PAPERS                                                                                                       1343  and a set of assumptions it can use to prove H. TP can deter• tem to be capable of (i) stepwise-interactive and/or (ii) auto•
mine the relevant parts, i.e. the related theories from KB     mated proof construction at a human oriented level of granu•
 and hand them over to our assertion module M. The task of M   larity for the proof exercise at hand using exactly the mathe•
 is to compute with respect to proof task r all possible logical matical information specified in the (a) tutor model or (b) user 
consequences of the available assertions taken from Th.        model. The proofs constructed for (a) reflect what we want 
   We propose to create for each assertion one associated      to teach and the proofs for (b) what the system expects the 
instance of a generic assertion agent The generic              user to be capable of. For interactive tutorial dialog the sup•
assertion agent is based on our algorithm AssertionAppli-      port for a stepwise proof construction with the mathematical 
cation. Note that this algorithm only depends on the SFT of    assistant system is of course important, while fully automati•
the focused assertion and a further set of SFTs for the proof  cally generated proofs are needed to be able to also give away 
context, and both are specified as parameters of AssertionAp-  complete solutions or to initially generate a discourse struc•
plication. Each assertion agent instance computes and          ture for the dialog on the chosen exercise. We want to stress 
suggest the logical consequences of for proof task r to our    that the user model may be updated also during an exercise, 
module M which passes them further to TP.                      hence the set of relevant assertions may dynamically change 
   Depending on the size of KB there could be too many ap•     during an interactive session. 
plicable assertions passed to M and also too many ways an        It is easy to motivate the design of our assertion application 
assertion can be applied. One possibility is to restrict the   module for this scenario. Its capabilities for assertion applica•
search space by imposing prerequisites for assertion retrieval. tion for a dynamically varying set of assertions are crucial for 
For instance, a proof planner may employ its domain specific   the project. It is also essential that reasoning is facilitated at a 
meta knowledge to formulate and pass respective context sen•   human oriented level of granularity, since we do not want the 
sitive syntactical filter criteria to the mediator for an efficient user to puzzle around with the peculiarities of, for instance, 
preselection by syntactic means.                               logical derivations in sequent or natural deduction calculus. 
   Proof planning, however, has developed more sophisti•
cated ways to guide and constrain possible the possible in•    5 Conclusion 
stantiations and applications of assertions. The investigation Mediating mathematical knowledge between (web-based) 
on how these techniques can optimally be employed on top       mathematical knowledge bases, mathematical reasoning sys•
of our assertion application module M are further work.        tems and human users is a mathematical knowledge manage•
                                                               ment task of increasing importance. We sketched a flexible 
4 An application: The DIALOG project                           and distributed solution for the subtasks of suggesting the 
                                                               logical consequences of assertions at an intuitive reasoning 
Our approach to assertion application is motivated by an ap•   level. 
plication in the DIALOG project as part of the Collaborative 
Research Center on Resource adaptive cognitive processes       References 
at Saarland University. The goal of this research project is   ll] S. Autexier. A proof-planning framework with explicit abstrac•
(i) to empirically investigate flexible dialogue management       tions based on indexed formulas. ENTCS, 58(2), 2001. 
strategies in complex mathematical tutoring dialogues, and     [2] S. Autexier. Hierarchical Contextual Reasoning. PhD Thesis, 
(ii) to develop an experimental prototype system gradually         Saarland University, forthcoming. 
embodying the empirical findings. The experimental system      [3] C. Benzmiiller, A. Meier, E. Melis, M. Pollet, and V. Sorgc. 
will engage in a dialogue in natural language (and perhaps        Proof planning: A fresh start? In Proc. of the IJCAR 200 J 
other modes of communication) and help a student to under•         Workshop: Future Directions in Automated Reasoning, Siena, 
stand and produce mathematical proofs. It is important that       Italy, 2001. 
such a system is supported by a human oriented mathematical    [4] C. Benzmiiller and V. Sorgc. OANTS - an open approach 
proof development environment and the OMEGA system with           at combining interactive and automated theorem proving. In 
its advanced proof presentation and proof planning facilities     M. Kerber and M. Kohlhase, editors, Symbolic Computation 
is a suitable answer to this requirement.                         and Automated Reasoning, A.K.Pcters, 2000. 
   The overall scenario for DIALOG is: A student user is first [5] A. Bundy. A critique of proof planning. In A. C. Kakas and 
                                                                  F. Sadri, editors, Computational Logic. Logic Programming 
taking an interactive course on some mathematical domain 
                                                                  and Beyond, LNCS 2408, Springer, 2002. 
(e.g., naive set theory) within a web-based learning environ•
                                                               [6] X. Huang. Reconstructing proofs at the assertion level, 
ment. When finishing some sections the student is asked by        newblock In A. Bundy, editor, Proc. CADE-12, LNAI 814, 
the system to test his learning progress by actively applying     Springer, 1994. 
the studied lesson material by performing an interactive proof [7] E. Melis and J. Siekmann. Knowledge-based proof planning. 
exercise. Since the learning environment is equipped with         Articial Intelligence Journal, 115(1):65~105, 1999. 
user monitoring and modeling facilities a user model is main•  [8] J. Siekmann et al. Proof development with OMEGA. In 
tained and dynamically updated containing information on          A. Voronkov, editor, Proc. CADE-18, LNAI 2392, Springer, 
the axioms, definitions, and theorems (hence the assertions)      2002. 
the student has studied so far. Also a tutor model is available [9] Q. B. Vo, C. Benzmiiller, and S. Autexier. An approach to as•
for each exercise containing information on the mathematical      sertion application via generalized resolution. Seki Report SR-
material that should be employed and tested by it.                03-01, Saarland University, February 2003. http://www.ags. 
   In this scenario we expect the mathematical assistant sys•     uni-sb.de/"omega/pub/poetscript/SR-03 - 01. ps. gz 


1344                                                                                                   POSTER PAPERS 