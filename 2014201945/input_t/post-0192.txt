                   Automation      Intelligence    for the  Smart   Environment

       G. Michael  Youngblood,   Edwin   O. Heierman,   Lawrence   B. Holder, and  Diane  J. Cook
                           Department  of Computer   Science and Engineering
                                  The University of Texas at Arlington
                                       Arlington, TX  76019-0015
                            {youngbld,heierman,holder,cook}@cse.uta.edu

                    Abstract                          are highly periodic (occur at predictable intervals), the exact
                                                      timings do not need to be encoded and the resulting pattern
    Scaling AI algorithms to large problems requires
                                                      yields even greater compression value.
    that these algorithms work together to harness their
    respective strengths. We introduce a method of au- 2.2 Predicting Activities Using ALZ
    tomatically constructing HHMMs using the output
    of a sequential data-mining algorithm and sequen- To predict inhabitant activities, we borrow ideas from text
    tial prediction algorithm. We present the theory  compression. By predicting inhabitant actions, the home
    of this technique and demonstrate results using the can automate or improve upon anticipated events that inhabi-
    MavHome  intelligent environment.                 tants would normally perform in the home. Our Active LeZi
                                                      (ALZ) algorithm [Gopalratnam and Cook, 2005] approaches
                                                      this problem from an information-theoretic standpoint. ALZ
1  Introduction                                       incrementally parses the input sequence into phrases and, as
An important component of an intelligent environment is to a result, gradually changes the order of the corresponding
anticipate actions of a human inhabitant and then automate Markov model that is used to predict the next symbol in the
them. The decision of which action to execute must be cor- sequence. Frequency of symbols is stored along with phrase
rect in order to avoid creating excess work for humans in the information in a trie, and information from multiple context
form of correcting wrong automated actions and performing sizes are combined to provide the probability for each poten-
manual actions.                                       tial symbol as being the next one to occur. In our experiments,
  We examine the problem of learning human inhabitant be- ALZ proved to be a very accurate sequential predictor. How-
havioral models in the MavHome intelligent environment and ever, accuracy is further improved when the task is restricted
using this to automate the environment. An event in the by ED to only perform predictions when the current activity
environment is described by the time of the event, the de- is likely to be part of a frequently-occurring pattern.
vice/sensor zone, the device/sensor number, the new value of
the device or sensor, the source of the vent (e.g., sensor net- 2.3 Decision Making Using ProPHeT
work, powerline controller), and the inhabitant initiating the Work in decision-making under uncertainty has popularized
event (if known).                                     the use of Hierarchical Hidden Markov Models and Partially
                                                      Observable Markov Decision Processes. Recently, there have
2  Solution  Strategy                                 been many published hierarchical extensions that allow for
To automate the environment, we collect observations of the partitioning of large domains into a tree of manageable
manual inhabitant activities and interactions with the environ- POMDPs [Pineau et al., 2001; Theocharous et al., 2001]. Al-
ment. We then mine sequential patterns from this data using though the Hierarchical POMDP is appropriate for an intel-
the ED sequence mining algorithm. Finally, a hierarchical ligent environment domain, current approaches generally re-
Markov model is created using low-level state information quire a priori construction of the HPOMDP. Given the large
and high-level sequential patterns, and is used to learn an ac- size of our domain, we need to seed our model with structure
tion policy for the environment.                      automatically derived from observed inhabitant activity data.
                                                        Unlike other approaches to creating a hierarchical model,
2.1  Mining Sequential Patterns Using ED              our decision learner, ProPHeT, actually automates model cre-
Our data mining algorithm, ED, mines sequential patterns ation by using the ED-mined sequences to represent the ab-
from observed activities. Data is processed incrementally stract nodes in the higher levels of the hierarchy. Lowest-level
and sequential patterns are mined according to their ability states correspond to an environment state representation to-
to compress the data using the Minimum Description Length gether with an ALZ-supplied prediction of the next inhabitant
principle. Periodicity (daily, every other day, weekly occur- action. To learn an automation strategy, the agent explores
rence) of episodes is detected using autocorrelation and in- the effects of its decisions over time and uses this experi-
cluded in the episode description. If the instances of a pattern ence within a reinforcement learning framework to form con-trol policies which optimize the expected future reward. The 54% on test data. When automation decisions were made us-
current version of MavHome receives negative reinforcement ing ALZ alone, interactions were reduced by 9.7% on aver-
when the inhabitant immediately reverses an automation de- age. Next, ED processed the data and found 3 episodes to
cision (e.g., turns the light back off) or an automation decision use as abstract nodes in the HPOMDP, as shown in Figure 2.
contradicts user-supplied safety and comfort constraints (e.g., The HHMM model with no abstract nodes reduced interac-
do not let the temperature exceed 100 degrees).       tions by 38.3%, and the combined-learning system (ProPHeT
                                                      bootstraped using ED and ALZ) was able to reduce interac-
3  Environments                                       tions by 76%, as shown in Figure 3.
All of the algorithms described here are implemented in
MavHome  and are being used to automate two environments,
shown in Figure 1. The MavLab environment contains work
areas, cubicles, a break area, a lounge, and a conference
room. MavLab is automated using 54 X-10 controllers and
the current state is determined using light, temperature, hu-
midity, motion, and door/seat status sensors. The MavPad
is an on-campus apartment hosting a full-time student oc-
cupant. MavPad is automated using 25 controllers and pro-
vides sensing for light, temperature, humidity, leak detection,
vent position, smoke detection, CO detection, motion, and
door/window/seat status sensors.


                                                                  Figure 3: Interaction reduction.

                                                        Experimentation in the MavPad using real inhabitant data
                                                      has yielded similar results. In this case, ALZ alone reduced
                                                      interactions from 18 to 17 events, the HPOMDP with no
Figure 1: The MavLab (left) and MavPad (right) environ- abstract nodes reduced interactions by 33.3% to 12 events,
ments.                                                while the bootstrapped HPOMDP reduced interactions by
                                                      72.2% to 5 events.
                                                        In this research we have shown that learning algorithms can
4  Case  Study                                        successfully automate an intelligent environment. We see that
                                                      synergy between these algorithms can improve performance,
As an illustration of these techniques, we have evaluated a as ED-produced abstractions in the hierarchy coupled with
week in an inhabitantâ€™s life with the goal of reducing the man- a prediction produced by ALZ improved automation perfor-
ual interactions in the MavLab. The data was generated from mance for ProPHeT. A full system deployment in the MavPad
a virtual inhabitant based on captured data from the MavLab is currently being conducted.
and was restricted to just motion and lighting interactions
which account for an average of 1400 events per day. We
trained ALZ and ED on real data and then repeated a typi- References
cal week in our ResiSim simulator to determine if the system [Gopalratnam and Cook, 2005] K Gopalratnam and D J
could automate the lights throughout the day in real-time. Cook. Online sequential prediction via incremental pars-
                                                         ing: The Active LeZi algorithm. IEEE Intelligent Systems,
                                                         2005.
                                                      [Pineau et al., 2001] J. Pineau, N. Roy, and S. Thrun. A Hi-
                                                         erarchical Approach to POMDP Planning and Execution,
                                                         2001. Workshop on Hierarchy and Memory in Reinforce-
                                                         ment Learning (ICML).
                                                      [Theocharous et al., 2001] G. Theocharous, K. Rohani-
                                                         manesh, and S. Mahadevan. Learning Hierarchical Par-
                                                         tially Observable Markov Decision Processes for Robot
Figure 2: ProPHeT generated HHMM with production nodes
                                                         Navigation, 2001. IEEE Conference on Robotics and Au-
abstracted.
                                                         tomation.
  ALZ processed the data and converged to 99.99% accuracy
after 10 iterations through the training data, and accuracy was