   Compiling Control Knowledge into Preconditions for Planning in the Situation 
                                                      Calculus 

                                                  Alfredo Gabaldon 
                                          Department of Computer Science 
                                                University of Toronto 
                                               alfredo@cs.toronto.edu 


                        Abstract                               nonMarkovian action theories in the situation calculus, as re•
                                                               cently introduced in [Gabaldon, 2002], in a similar way as 
     A promising technique used in some planning sys•          [Lin and Reiter, 1994] treat qualification state constraints. In 
     tems to improve their performance is the use of           these nonMarkovian action theories, the effects and precon•
     domain dependent search control knowledge. We             ditions of actions are not assumed to depend solely on the 
     present a procedure for compiling search control          current situation, but on any past situation. This nonMarko•
     knowledge, expressed declaratively in a logic, into       vian property of the theories allows an easier incorporation of 
     the preconditions of the plan actions (operators).        dynamic constraints into database specifications, a more nat•
     We do this within the framework of the situation          ural and concise axiomatization of nonMarkovian operations 
     calculus by introducing a transformation of non-          like rollback in transaction systems and other domains with 
     Markovian action theories into classical Markovian        nonMarkovian properties. In this paper, we are concerned 
     situation calculus theories.                              with another problem where these theories are useful: incor•
                                                               porating search control knowledge by treating it as dynamic, 
                                                               qualification state constraints. Dynamic in the sense that they 
1 Introduction                                                 may refer to the current and any past situation, as opposed 
                                                               to static state constraints which refer only to the current state. 
One of the strategies used in planning to mitigate the com•
                                                               Moreover, they are understood as qualification constraints be•
plexity of the general problem is to employ some form of 
                                                               cause they pose further restrictions on the "executability" of 
domain specific knowledge to assist the search for a plan. 
                                                               actions. (We do not consider the use of these constraints for 
For instance, Hierarchical Task Network (HTN) planning 
                                                               expressing ramifications, i.e. indirect effects of actions.) 
systems [Sacerdoti, 1974; Wilkins, 1988; Erol et al, 1996] 
use domain specific procedural knowledge in the form of          Furthermore, we present a transformation from nonMarko•
task decomposition methods. The forward-chaining planners      vian action theories into Markovian ones. This transforma•
TLPlan [Bacchus and Kabanza, 2000], TALPlanner [Kvarn-         tion takes an action theory with nonMarkovian axioms and 
strom and Doherty, 2000] and the SAT based planner SAT-        by applying regression steps and introducing additional flu•
Plan [Kautz and Selman, 1998] use domain knowledge in          ents and their corresponding successor state axioms, produces 
the form of declarative constraints expressed in a logical lan• a classical Markovian theory as introduced by [Reiter, 1991 J. 
guage. This strategy has been shown experimentally to yield    We then show how this transformation can be used for com•
remarkable improvements in performance. Both TLPlan and        piling search control knowledge into normal action precondi•
TALPlanner use control constraints expressed in the form of    tions. This nonMarkovian to Markovian transformation pro•
temporal logic formulas. These formulas are used to elim•      cedure is of independent interest. Toward the end we extend 
inate plan prefixes which will lead to a suboptimal plan or    this approach for theories with explicit time and close with a 
cannot be extended into a complete plan at all.                discussion. 
   Most practical planning systems use STRIPS, ADL or ex•      2 Formal Preliminaries 
tensions of these to describe actions and their effects. How•
ever, the first formal specification of the classical planning In this section we give an overview of the situation calculus 
problem, due to [Green, 1969], was postulated in the lan•      and the main definitions necessary for action theories without 
guage of the situation calculus [McCarthy, 1963]. The sit•     the Markov assumption. 
uation calculus has proven to be a very powerful formalism 
and has been employed in the formalization of many differ•     2.1 The Situation Calculus 
ent aspects of dynamical systems (see e.g. [Reiter, 2001]).    The situation calculus is a first order logic language with 
In this paper, we use the situation calculus as our formal     three basic components: actions, situations, and fluents. Ac•
framework and consider how to incorporate search control       tions are responsible for all the changes in the world. Situa•
into action theories. Specifically, we show that control for•  tions are sequences of actions which represent possible his•
mulas with a certain syntactic form can be incorporated into   tories of the world. Fluents are properties of the world that 


REASONING ABOUT ACTIONS AND CHANGE                                                                                  1061  change from situation to situation as a result of the execu•    The set of formulas strictly bounded by is similarly de•
tion of actions. Formally, the language has three sorts: ac-   fined by requiring in item (1) above that all situation terms of 

 tiony situation and fluent. In addition to variables of these W be subterms of in item (2) that W be strictly bounded 
sorts, the language includes functions such as move            by a subterm of and W" by a subterm of rr; and in item (3) 
to represent actions, a constant So and a function do\         that W\, W2 be strictly bounded by subterms of 
 for situations such as and predicates for                     Example 1 Past temporal logic connectives can be expressed 
 representing fluents such as atLoccition\ . The               in the situation calculus with strictly bounded formulas as fol•
initial situation, or empty history, is denoted by the constant lows: 
So- Non-empty histories are built by means of the function 
do. For a complete description see [Pirri and Reiter, 1999; 
Reiter,2001]. 
   A situation calculus axiomatization of a domain, includes 
the following set of axioms: 


                                                               NonMarkovian basic action theories differ from those which 
                                                               include the Markov assumption in that preconditions and ef•
                                                               fects of actions may depend on any past situation, not only on 
                                                               the current one. 
                                                                 Hence the rhs, of action precondition 
                                                               axioms in a nonMarkovian basic action theory are formulas 
                                                               bounded by situation term s which do not mention predicate 
                                                               Poss and may refer to past situations. Similarly, the rhs, 
                                                                                    of successor state axioms are formulas 
  4. Axioms describing the initial situation of the world: a 
                                                               strictly bounded by .s. 
     finite set of sentences whose only situation term is the 
     constant So.                                              2.3 Regression 
   A set of these axioms, together with a set of domain inde•  For basic action theories with the Markov assumption, [Pirri 
pendent foundational axioms is called a (Markovian) basic      and Reiter, 1999] define a provenly correct regression mech•
action theory.                                                 anism that takes a situation calculus sentence and, under cer•
                                                               tain restrictions on the form of this sentence, transforms it 
2.2 A nonMarkovian Situation Calculus 
                                                               into an equivalent sentence whose only situation term is 5(>. 
For a basic action theory without the Markov assumption, we    This allows proving sentences without appealing to the foun•
need some definitions. These are based on those in [Gabal-     dational axioms which include a second order axiom. This 
don, 2002].                                                    regression operator was generalized for nonMarkovian theo•
   Wc will use the following abbreviations in the definitions  ries in [Gabaldon, 2002]. 
to follow:                                                       In a nutshell, the regression operator, denoted by 
                                                                   takes a sentence and recursively replaces each flu•
                                                               ent atom by its definition according to its 
                                                               successor state axiom, i.e. by Atoms 
where stands for either and variable .s appears in             Poss are similarly replaced by their defini•
                then we may write W and                        tions given by the action precondition axioms. Regression 
                 instead.                                      recursively replaces these atoms until all the situation terms 
                                                               are reduced to So- For lack of space we refer the reader to 
Definition 1 (Bounded Formulas) For let be 
                                                               [Pirri and Reiter, 1999; Reiter, 2001; Gabaldon, 2002] for the 
a term rooted at The formulas of 
                                                               formal details. 
        bounded by o are the smallest set of formulas such 
                                                                 In the transformation operator we introduce later, we 
that: 
                                                               will use a one-step version of the regression operator: 
  1. If W is an atom whose situation terms are all rooted at   TV stands for the regression of a sentence 
       then W is bounded by                                    W bounded by that results in a sentence 
  2. If W, W" are formulas bounded by situation terms          bounded by o. 
     rooted at s and , respectively, then 
       W and W are formulas bounded                            3 Control Knowledge and the Qualification 
     by where is rooted at s and W                                 Problem 
  3. If Wi,W2 are formulas bounded by situation terms          As mentioned earlier, the use of search control knowledge 
     rooted at then and where has proven to be a promising recourse for improving the per•
       is of sort action or object, are formulas bounded by    formance of planning systems. Both TLPlan [Bacchus and 


1062                                                                       REASONING ABOUT ACTIONS AND CHANGE  Kabanza, 2000] and TALPlanner [Kvarnstrom and Doherty, 
 2000] use declarative control knowledge in the form of tem•
 poral logic and have shown substantial computational im•
 provement. 
   Since our goal is to compile search control into precon•
 ditions, we express control knowledge in terms of the past, 
 not the future as it is done in TLPlan and TALPlanner (this     Suppose that the action precondition axiom for 
 is further discussed in the last section). However, declarative                    driving a truck to a location loc 
 search control knowledge is typically expressed in a future   is: 
 temporal logic and we believe that obtaining preconditions 
 from knowledge in that form is an important problem. In the 
 last section we comment on how we are approaching this. 
   From the point of view of logical theories of action, such as We can add the control formula as a new con•
 the situation calculus axiomatizations we discuss in this pa• junct in the rhs after simply replacing $ with 
 per, taking control knowledge into account is closely related 
 to the classical qualification problem [McCarthy, 1977]. This 
 is the problem of determining all the conditions that need to 
 be satisfied for an action to be executable and control knowl•
 edge is effectively a set of additional constraints on the cxe-
 cutability of actions, i.e. on what actions can be considered 
 part of an executable plan. 
   Lin & Reiter [1994] have considered the qualification prob•
 lem for situation calculus basic action theories with state con• In the next section, we introduce an operator which takes a ba•
 straints, which are formulas of the form uniform in           sic action theory with such nonMarkovian axioms, and trans•
 cS. Their solution is to add the qualifications to the precondi• forms it into one with Markovian ones. 
 tion axiom of each action type: 
                                                               4 Transforming a nonMarkovian Theory into 
                                                                   Markovian 
 where R1 [Q(do(A After adding the qualifi•                    In order simplify the presentation, let us first make some sim•
 cations to the precondition axioms, one can discard the con•  plifying assumptions on the form and the nesting of formulas 
 straints if two conditions are satisfied: all the state constraints on which we define the transformation. 
 hold initially, i.e. Q(So) holds for each Q\ and the domain     Formally, in reference to item (2) of Definition 1, we will 
closure assumption on actions is included in the theory.       assume that formulas are of the forms: 
   Control formulas are similar to state constraints in that they 
pose additional qualifications on actions, but they are more 
 general since they may quantify over past situations.                                                                (2) 
   In the nonMarkovian situation calculus, successor state ax•
 ioms and action precondition axioms can refer to past situa•                                                         (3) 
 tions in addition to the current situation. This permits con•
trol knowledge to be incorporated into action precondition     where all (if any) free variables of W2 are among the free 
 axioms in the same way Lin & Reiter do. Formally, if C(s)     variables of the full formula. Other combinations of quanti•
 is a formula bounded by .s representing some piece of con•    fiers and logical connectives reduce to these two cases. The 
trol knowledge, we take this into account by adding it as an   restriction on the free variables of W2 does make the transfor•
additional precondition for actions:                           mation simpler. We treat the general case in the full version 
                                                               of this paper. Next, we restrict the nesting of formulas in the 
                                                        (1) 
                                                               following way. By definition, W2 must itself be of the form 
Precondition axioms in nonMarkovian action theories allow                      where W' is bounded by s" and \Y" by s. 
situation terms rooted at s such as do to appear               We will restrict W-i by requiring it to be of the form W', 
 in their rhs, so we can add C(do(A directly without           i.e. without the conjunct W". 
modification. By including the domain closure assumption on      Notice however that, even with this restrictions, arbitrary 
actions, we are then guaranteed that a situation is executable nesting of the past temporal logic abbreviations (Example 1) 
only if it satisfies the constraints.                          is still expressible. 
                                                                 The transformation performs a combination of regression 
Example 2 (Logistics domain constraint) Consider a con•
                                                               and of replacement of formulas by new fluents: 
straint from a logistics domain, which involves vehicles de•
livering packages to locations, saying that a truck must re•
main in a location if there is a package at that location and 
it's never been in the truck (so it hasn't just been delivered 
and needs to be moved):                                       ingforms: 


REASONING ABOUT ACTIONS AND CHANGE                                                                                  1063                                                                  The result of is similar. Then the constraint be•
                                                               comes: 


                                                               Finally, we add the constraint to action precondition axioms: 


                                                               Example 4 (Closed form solution for a fluent) Consider a 
                                                               fluent F(x, s) and its closed form solution [Reiter, 2001]: 


                                                                 Clearly, the rhs of the above sentence is formed by 
                                                               F and two formulas which are almost of the form (2). 
                                                               The difference is in the immediately after the existen•
                                                               tial quantifiers on situations s1,s2, which would need to be 
                                                               strict to fit form (2), and the subformulas of the form 
                                                                                       The latter will be simplified away. 
                                                               Further, it is easy to modify the transformation on (2) to 
   Now, we can apply the transformation to a nonMarkovian      handle the In general, all we need to do is replace 
action theory whose action precondition axioms have as an                 with However, in this ex•
additional condition a constraint C(s), and obtain a Marko-    ample the one step regression won't be necessary. 
vian theory that enforces the constraint. This produces a        Applying the transformation to the subformula 
theory with precondition axioms of the form: 

                                                               results in a predicate with successor state ax•
Theorem 2 Let C(s) be a control knowledge formula 
                                                               iom (after simplifying) 
bounded by s and let be a nonMarkovian basic action 
theory whose precondition axioms have the form (1) and in•
                                                              The transformation of subformula 
cludes domain closure axioms for actions. Then, 

Example 3 Consider again the logistics domain control for•
mula from Example 2. Let and stand for premise and 
consequence, respectively. Both formulas are of form (2).     results in a predicate . with successor state ax•
The premise stands for:                                       iom (after simplifying) 

                                                                 Noticeably, this successor state axiom for is al•
                                                              most identical to the canonical form successor state axiom for 
                                                                      which is 
P1 
f< 
                                                                 Finally, after applying the transformation to subformulas 
                                                                     of the closed form formula (4), we obtain the follow•
                                                              ing equivalent sentence: 


                                                                 The transformation comes close to producing a canoni•
                                                              cal Markovian successor state axiom. It does not because 
                                                              the closed form solution formula uses information about the 
                                                              value of F in the initial situation. 


1064                                                                      REASONING ABOUT ACTIONS AND CHANGE 5 Constraints with explicit time                               operator introduces into a theory the additional fluents and 
In this section, we extend our approach to search con•         axioms needed for keeping track of the relevant past infor•
trol knowledge with explicit time. In the temporal sit•        mation. We then showed how this operator can be used for 
uation calculus [Reiter, 2001], actions have an additional     compiling TLPlan style search control knowledge into action 
temporal argument denoting the time of occurrence, e.g.        preconditions in the situation calculus. 
drive(truck,loc,3.2) for driving a truck to a location           In the TLPlan system, control knowledge is expressed 
loc at time 3.2. There are also some additional axioms:        in terms of linear (future) temporal logic, that is, temporal 
                                                               modalities next, always in the future, until, and sometime in 
                                                               the future are used. Every time a new operator is added to 
                                                               the plan prefix being considered, a control formula is pro•
                                                               gressed through it. If the formula is progressed into false, 
                                                               the plan prefix is pruned since a plan with this prefix will 
                                                               violate the constraint. Although it is easy to write situation 
                                                               calculus formulas corresponding to future temporal logic, re•
                                                               gression cannot be used on them. However, we argue that if 
                                                               instead of progression, as in TLPlan, we evaluate the control 
                                                               formulas against plan prefixes, it is reasonable to use a logic 
                                                               that refers to past situations instead of future situations. In•
                                                               deed, all the reasoning used by a planning system to decide if 
                                                               a partial plan should be discarded or not must be done relative 
                                                               to the properties of the partial plan itself. Furthermore, some 
                                                               future temporal formulas are satisfied by all plan prefixes (e.g. 
                                                               "sometime in the future where is not unsatisfiable) and 
   For a formula of the form (5), , yields a predicate         are not useful for search control. Thus it seems to us that 
           with a successor state axiom:                       restricting control formulas to refer exclusively to the past is 
                                                               appropriate. 
                                                        (7)      Moreover, using past temporal logic is semantically 
                                                               cleaner for the following reason. The semantics of future tem•
and, The initial                                               poral logic is defined in terms of infinite sequences of states. 
database would include                                         However, plans are finite sequences of actions and thus pro•
   For a formula of the form (6), the successor state axiom for duce a finite sequence of states. In order to deal with this tech•
                                                               nical difficulty, TLPlan makes the assumption that the world 
                                                               never changes after the plan is completely executed and there•
                                                        (8)    fore the last state infinitely repeats. This assumption is rea•
                                                               sonable under another assumption typically made in classical 
                                                               planning: that the agent executing the plan is the only agent 
with . The that changes the world, so when this agent terminates execut•
initial database would include                                 ing its plan, the world remains unchanged. This assumption is 
   The statement of the following theorem, which establishes   unnecessary if using past temporal logic or bounded situation 
the correctness of the transformation, requires adding the con• calculus formulas. 
junct to formulas (5) and (6):                                   Nevertheless, it would be convenient to be able to handle 
                                                               control knowledge expressed in future temporal logic. We 
                                                               are currently working on developing a procedure that would 
                                                               allow us to take a future temporal logic control formula, such 
Similarly for formula (6).                                     as this Briefcase domain one: 

                                                               and produce a bounded situation calculus formula: 

6 Discussion and conclusion 

We have shown that incorporating control knowledge as addi•    that a plan prefix must satisfy. In turn, we can then apply the 
tional preconditions in nonMarkovian action theories is triv•  procedure introduced in this paper to compile these formulas 
ial when this knowledge is in the form of bounded formu•       into the preconditions of actions. 
las (which include encodings of Past temporal logic modali•      Bacchus & Kabanza [1998] have also extended their sys•
ties). We then introduced an operator for transforming non•    tem for planning with temporally extended goals, which are 
Markovian basic action theories into Markovian ones. This      conditions on sequences of states and not only on the final 

   1Thc variable t is a fresh new variable so there is no effect on the state as in classical planning. They use a first-order exten•
meaning of the formulas.                                       sion of the Metric Interval Temporal Logic (MITL) [Alur et 


REASONING ABOUT ACTIONS AND CHANGE                                                                                  1065 