                                Opponent Modeling in Scrabble

                                    Mark Richards and Eyal Amir
                                     Computer Science Department
                               University of Illinois at Urbana-Champaign
                                     { mdrichar,eyal } @cs.uiuc.edu

                    Abstract
    Computers have already eclipsed the level of hu-
    man play in competitive Scrabble, but there re-
    mains room for improvement. In particular, there
    is much to be gained by incorporating information
    about the opponent’s tiles into the decision-making
    process. In this work, we quantify the value of
    knowing what letters the opponent has. We use
    observations from previous plays to predict what
    tiles our opponent may hold and then use this infor-
    mation to guide our play. Our model of the oppo-
    nent, based on Bayes’ theorem, sacriﬁces accuracy
    for simplicity and ease of computation. But even
    with this simpliﬁed model, we show signiﬁcant im-
    provement in play over an existing Scrabble pro-
    gram. These empirical results suggest that this sim-
    ple approximation may serve as a suitable substi- Figure 1: A sample Scrabble game. The shaded premium squares
                                                      on the board double or triple the value of single letter or a whole
    tute for the intractable partially observable Markov word. Note the frequent use of obscure words.
    decision process. Although this work focuses on
    computer-vs-computer Scrabble play, the tools de-
    veloped can be of great use in training humans to sive and theoretically powerful, solving them is intractable
    play against other humans.                        for problems containing more than a few states.
                                                        At the beginning of a Scrabble game, an opposing player
                                                      can hold any of more than four million different racks. Al-
1  Introduction                                       though the number of possibilities decreases as letters are
Scrabble is a popular crosswords game played by millions drawn from the bag, solving Scrabble directly with a formal
of people worldwide. Competitors make plays by forming model like POMDPs does not seem to be a viable option.
words on a 15 x 15 grid (see Figure 1), abiding by constraints Scrabble’s inherent partial observability invites compari-
similar to those found in crossword puzzles. Each player has son with games like poker and bridge. Signiﬁcant progress
a rack of seven letter tiles that are randomly drawn from a bag has been made in managing the hidden information in
that initially contains 100 tiles. Achieving a high score re- those games and in creating computer agents that can com-
quires a delicate balance between maximizing one’s score on pete with intermediate-level human players [Billings et al.,
the present turn and managing one’s rack in order to achieve 2002][Ginsberg, 1999]. In Scrabble, championship-level
high-scoring plays in the future.                     play is already dominated by computer agents [Sheppard,
  Because opponents’ tiles are hidden and because tiles 2002]. Although computers can already play better than hu-
are drawn randomly from the bag on each turn, Scrab-  mans, Scrabble is not a solved game. Even the best exist-
ble is a stochastic partially observable game [Russell and ing computer Scrabble agents can improve their play by in-
Norvig, 2003]. This feature distinguishes Scrabble from corporating knowledge about the unseen letters on the op-
games like chess and go, where both players can make de- ponent’s rack into their decision-making processes. Improve-
cisions based on full knowledge of the state of the game. ments in the handling of hidden information in Scrabble could
Stochastic games of imperfect information can be modeled shed insight into more strategically complex partially observ-
formally by partially observable Markov decision processes able games such as poker. Furthermore, advanced computer
(POMDPs)  [Littman, 1996]. While POMDPs are expres-   Scrabble agents are of great beneﬁt to expert human Scrabble

                                                IJCAI-07
                                                  1482players. Humans rely on computer Scrabble programs to im- that is adjacent to an existing word. New tiles placed on a
prove their play by analyzing previous games and identifying single turn must all be played in one row or one column.
where suboptimal decisions were made.                   Players score points for all new words formed on each turn.
  One of the strategies that has been successfully used in The score for each word is determined by adding up the to-
poker-playing programs is opponent modeling—trying to tal points for the individual tiles; premium squares distributed
identify what cards the opponents have and how they might throughout the board can double or triple the value of an in-
play, based on observations of previous plays. [Billings et al., dividual tile or the whole word.
2002] In this work, we propose an opponent modeling strat- As long as letters remain in the bag, players replenish their
egy for Scrabble.                                     rack to seven tiles after each turn. A Scrabble game normally
  First, we run simulations in which one of the players is ends when the bag is empty and one player has used all of
given full knowledge of his opponent’s rack. These results his tiles. The game can also end if neither player can make a
show how much potential beneﬁt there could be in attempting legal move, but in practice this rarely happens.
to make such inferences. Then we attempt to achieve some When a player manages to use all seven of his letters in a
fraction of that potential improvement by creating a simple single turn, the play is called a bingo and scores a 50-point
model of our opponent based on Bayes’ theorem [Bolstad, bonus. While novice players rarely, if ever, play a bingo, ex-
2004].                                                perts might average two or more per game. Since experts usu-
  Our computer agent makes inferences about what tiles ally score in the 400-500 point range, the bonus for a bingo is
the opponent may have based on observations from pre- highly signiﬁcant.
vious plays. While our agent relies heavily on multi-ply
simulations—as other popular computer Scrabble programs 2.1 Basic Strategy
do—we use these inferences to bias the contents of our op-
ponent’s rack during simulation towards those letters which Human Scrabble players must exert considerable effort to
we believe he is more likely to have. Our model sacriﬁces develop an extensive vocabulary—including knowledge of
accuracy for simplicity. But even with this simple model, many obscure words. Since computer agents can easily be
we show empirical results that suggest this strategy is sig- programmed to “know” all the legal words and can quickly
niﬁcantly better than other common approaches for computer generate all possible plays for any rack and board conﬁgu-
play that make no attempt to deduce the opponent’s letters. ration, they already have a signiﬁcant advantage over human
This strategy may be a suitable substitute for the computa- players.
tionally intractable partially observable Markov decision pro- A large vocabulary and the ability to recognize high-
cess.                                                 scoring opportunities are necessary but not sufﬁcient for high-
  The structure of the paper is as follows. Section 2 gives an level play. Simply making the highest-scoring legal play on
overview of Scrabble, including a review of the rules and ba- each turn is not an optimal strategy. Using this greedy ap-
sic strategy. Section 3 discusses previous work on Scrabble- proach frequently causes a player to retain tiles that are nat-
playing artiﬁcial intelligence. In Section 4, we present an urally more difﬁcult to play, eventually leading to awkward
algorithm which makes inferences about the opponent’s tiles. racks like <UHHWVVY>. With such a challenging rack,
Experimental results are discussed in Section 5. Finally, pos- even the highest-scoring move is not likely to be very good.
sibilities for future work are presented in Section 6.  More experienced players are willing to sacriﬁce a few
                                                      points on the current turn in order to play off an awkward
                                                      letter or to retain for future turns sets of letters that combine
2  Scrabble Overview                                  well with each other. Maintaining a good mix of consonants
Alfred M. Butts invented Scrabble during the 1930s. He used and vowels and avoiding duplicate letters (which reduce ﬂex-
letter frequency counts from newspaper crossword puzzles to ibility) are common goals of rack balance strategies. Perhaps
help determine the distribution of tiles and their relative point most importantly, expert Scrabble players try to manage their
values. Of the 100 letters in the standard Scrabble game, there racks so as to maximize the potential for bingo opportuni-
are 9-12 tiles for common vowels like A, E, and I, but only ties. [Edley and Williams, 2001]. In general, the concept of
one tile each for less common letters like Q, X, and Z1. rack balance causes a player to evaluate the merits of a move
  Point values for the individual letters range from one point based on how many points it scores on the current turn and
for the vowels to 10 points for the Q and Z. There are two on the estimated value of the letters that remain on the rack
blank tiles that act as “wild cards”; they can be substituted (called the leave).
for any other letter. The blanks do not have an intrinsic point Defensive tactics are also important. A player does not
value but are extremely valuable because of the ﬂexibility want to make moves that will create high-scoring opportuni-
they add to a player’s rack.                          ties for the opponent. Furthermore, if the board conﬁguration
  The ﬁrst player combines two or more of his letters into a and opponent’s rack are such that the opponent could make
word and places it on the board with one letter touching the a high-scoring move on his next turn, a player might want to
center square. Thereafter, players alternate placing words on consider moves that will block that opportunity, even if the
the board, and each new word must have at least one letter blocking play does not score as well on the current turn as
                                                      some other available alternatives. Also, if one player man-
  1Variants of Scrabble have been developed for many different ages to establish a large lead early in the game, it may be in
languages. Here we restrict our focus to the original English version. his best interest to keep the board as closed as possible, For

                                                IJCAI-07
                                                  1483example, he might try to cut off areas of the board where a lot lexicon exclusively. Our belief is that while speciﬁc param-
of bingos could be played.                            eters may need to be tuned for the various lists, the general
  It should be noted that luck plays a signiﬁcant role in the models and strategies are applicable to any of the commonly
outcome of a Scrabble game. Sometimes the random drawing used word sets.
of letters overwhelmingly favors one player, and not even the
best strategy could compensate for the imbalance. In a game Challenges and Blufﬁng
like poker, a timely bluff can lead to a big win for a player Finally, we ignore the “challenge” rule. Normally, when a
with a lousy hand. But in Scrabble, a bad rack can be down- competitor makes a play, his opponent has the option of chal-
right crippling. Of course, over the course of many games, lenging the legality of the newly played word(s). In this case,
the luck of the draw evens out and the most skilled player can both players look up the word in whatever dictionary has been
expect to win more games.                             agreed upon for the game, and the loser of the challenge for-
                                                      feits a turn. Some players will intentionally make a “phoney,”
2.2  Scope of Study                                   hoping that their opponents will be unfamiliar with the word
The  primary goal of this work  is to improve upon    and will challenge it. This kind of blufﬁng tactic must be
championship-caliber Scrabble computer programs by ad- reckoned with in human tournament play. In this work, we
dressing the elements of uncertainty inherent in the game. We focus on computer-vs-computer play. Our agent’s knowledge
assume that our opponent is also a computer. Not all aspects base contains all of the legal words, and we assume that our
of the game are relevant to the present work. We are restrict- opponent has the same information. We therefore ignore the
ing our focus in the following ways.                  aspect of challenges.
Number of Players
                                                      3   Previous Work
We assume a two-player game. Ofﬁcial rules allow for up to
four players, but tournament matches (and even most casual While computers are indisputably the most proﬁcient Scrab-
games) involve only two competitors. As mentioned previ- ble players, it is not generally known which Scrabble-playing
ously, there is already a great deal of luck involved in drawing program is the best. Brian Sheppard’s Maven program deci-
“good” tiles; having more than two players only exacerbates sively defeated human World Champion Ben Logan in a 1998
the problem because each competitor takes even fewer turns exhibition match. Since that time, the National Scrabble As-
and therefore has fewer opportunities to overcome bad luck sociation has used Maven to annotate championship games.
with skill.                                           Maven’s architecture is outlined in [Sheppard, 2002]. The
                                                      program divides the game into three phases: the endgame, the
Timing Constraints
                                                      pre-endgame, and the midgame. The endgame starts when
Tournament Scrabble is played under time constraints, of- the last tile is drawn. Maven uses B*-search [Berliner, 1979]
ten 25 minutes per player per game. Point deductions are to tackle this phase and is supposedly nearly optimal. Lit-
assessed for time taken in excess of the limit. Since our tle information is available about the tactics used in the pre-
Scrabble-playing code is developmental in nature, we do not endgame phase, but the goal of that module is to achieve a
impose rigid timing restrictions. However, for practical pur- favorable endgame situation.
poses, the computation allowed to each agent is limited in a The majority of the game is played under the guidance of
way that keeps the running time for a game to about what it the midgame module. On its turn, Maven generates all possi-
would be in a tournament setting: 40–60 minutes.      ble legal moves and ranks them according to their immediate
Endgame                                               value (points scored on this turn) and on the potential of the
Once the bag of letters has been exhausted, a player may de- leave. The values used to rank the leaves are computed ofﬂine
duce exactly the opponent’s rack, simply by observing the let- through extensive simulation. For example, the value of the
ters on the board and on his own rack. Expert Scrabble play- leave QU is determined by measuring the difference in future
ers do this kind of tile counting routinely. When the bag is scoring between a player with that leave and his opponent,
empty, Scrabble becomes a game of perfect information, and and averaging that value over thousands of games in which it
strategy changes. The focus of this work is decision-making is encountered.
under uncertainty, so we ignore the facets of endgame strat- Once all legal moves have been generated and ranked ac-
egy, which have been studied elsewhere [Sheppard, 2002]. cording to the static evaluation function, Maven uses simula-
                                                      tions to evaluate the merit of those moves with respect to the
Lexicon                                               current board conﬁguration and the remaining unseen tiles.
The set of permissible words has a signiﬁcant impact on how Since it is not uncommon to have several hundred legal plays
Scrabble is played. Words which are hyphenated or which oc- to choose from on each turn, deep search is not tractable.
cur exclusively as proper nouns or abbreviations are always Sheppard suggests that deep search may not be necessary for
illegal. But inclusion of certain slang, colloquial, archaic, excellent play. Since expert players use an average of 3–4
and/or obscure words varies from one “ofﬁcial” word list to tiles each turn, complete turnover of a rack can be expected
another. These differences can change how some letters are every two to four turns. Simulations beyond that level are of
evaluated. For example, if the word QI is allowed, the Q is questionable value, especially if the bag still contains many
likely considered an asset; otherwise it is a signiﬁcant liabil- letters. Maven generally uses two- to four-ply searches in its
ity. In this study, we use the TWL06 (Tournament Word List) simulations.

                                                IJCAI-07
                                                  1484  After the publication of [Sheppard, 2002], rights to Maven possible moves that the opponent could make using the rack
were purchased by Hasbro, and it is now distributed with that that he actually has (instead of randomly assigning tiles from
company’s Scrabble software product. Since its commercial- the set of letters that we have not seen). The opponent in these
ization, additional details about its strategies and algorithms tests was Quackle’s Strong Player, which also uses simula-
have not been publicly available.                     tions but makes no assumptions about our letters. The results
  Jim Homan’s CrossWise is another commercial software are summarized in Table 1 and Figure 2. There is high vari-
package that can be conﬁgured to play Scrabble. In 1990 and ability in the ﬁnal scores for the games, with extreme wins
1991, CrossWise won the computer Scrabble competition at and losses for both players. This underscores the role that
the Computer Olympiad. (In subsequent Olympiad competi- luck plays in the outcome of a Scrabble game. It is clear,
tions, Scrabble has not been contested.) The algorithmic de- however, that the Full Knowledge Player has a great advan-
tails of CrossWise are not readily accessible. Unfortunately, tage, scoring 37 more points per game on average. The dif-
Maven and Crosswise have not been pitted against each other ference is highly statistically signiﬁcant (p<10−5 using ran-
in an ofﬁcial competition, so it is not known which program dom permutation tests [Ramsey and Schafer, 2002].)
is superior. Based on publicly available information, Maven Knowing the contents of our opponent’s rack allows us to
would probably have the edge. Homan claims that CrossWise play more aggressively in some situations, because we can be
generated over US $3 million in sales, which shows that there certain that our opponent does not have a high-scoring coun-
is a great demand for powerful Scrabble computer programs. termove. It allows us to avoid plays that would set him up
  In March 2006, Jason Katz-Brown and John O’Laughlin for a bingo on his next turn. And it gives us an opportunity
released Quackle, an open source crossword game program2. to block spots on the board that would be lucrative to him
Quackle’s computer agent has the same basic architecture as on his next turn, given his current rack. In real-world play,
Maven. It uses a static evaluation function to rank the list we cannot know for certain what letters our opponent holds–
of candidate moves and then makes a ﬁnal decision based on unless the bag is empty–but the results of these hypothetical
the results of simulations using a small subset of the most full knowledge simulations give an upper bound on what we
promising candidate moves. During the simulations, Quackle can expect to gain by trying to make some inferences about
must select one or more potential moves for the opponent. this hidden information.
Since Quackle does not know what letters its opponent holds,
it randomly selects a rack of letters from the set of tiles that
it has not seen (i.e. all letters that are not currently on its own
rack and have not already been placed on the board). Quackle
ignores the fact that not all possible racks are equally likely
for the opponent.
  In the next section we show how we can use the opponent’s
most recent play to bias our selection of his tiles during sim-
ulation towards racks which we believe are more likely to oc-
cur. Estimating the probability that our opponent holds cer-
tain tiles requires us to create a model of his decision-making
process. Opponent modeling has been shown to be proﬁtable
in other partially observable games, such as poker [Billings
et al., 2002]. We suspect that opponent modeling in Scrab-
ble would be somewhat easier than in poker. Many different
styles of play can be played proﬁtably in poker, and expert
                                                      Figure 2: Point differential over 127 games between Quackle’s
players are known to change their strategies drastically during Strong Player and an agent with full knowledge of its opponent’s
a single match. Among expert Scrabble players– computers tiles. Each bar shows the result of one game. Negative values in-
and humans– there is much less variation in strategy. We ex- dicate games in which the Full Knowledge agent lost. The wide
pect this fact to lead to simpler opponent models in Scrabble. variability in the outcomes is a result of the luck inherent in drawing
                                                      letters from the bag.
4  Modeling the Opponent’s Rack and Play
   Selection
                                                                          Full Knowledge  Quackle
A reasonable question to ask is, “how much would it help     Wins               87           61
me if I could see my opponent’s rack?” To help answer this   Mean Score        438           401
question, we conducted experiments in which we allowed       Biggest Win       295           136
our player to have full knowledge of the opponent’s letters.
During the simulation phase of the decision-making process,
when evaluating the possible responses our opponent could Table 1: Summary of results for 127 games between Quackle’s
make to one of our available moves, we generate all of the Strong Player and an agent with full knowledge of its opponent’s
                                                      tiles.
  2To avoid legal issues, Quackle does not ofﬁcially have anything
to do with Scrabble. References to Quackle in this work denote During simulation, our model of the opponent consists of
version 0.91.                                         two parts. First, we construct a probability distribution over

                                                IJCAI-07
                                                  1485the possible racks that the opponent may have. Second, we his leave was not ?L (<8D MILlION 72>).
must model the decision-making process that our opponent Suppose his leave was NV. With IIMNNOV, he could have
would go through to select a move, given his rack and the played <8G VINO (IMN) 14>. While this would have
conﬁguration of the board. Obviously, these two components scored two fewer points than IMINO, it has a much better
are closely related: the letters left on the opponent’s rack be- leave (IMN instead of NV) and would likely have been pre-
fore replenishing from the bag are a direct result of the move ferred. In general, we can consider each of the possible leaves
he chose to play on his last turn.                    that an opponent may have had (based on the set of tiles we
  While we do not know exactly what tiles our opponent has, have not seen), reconstruct what his full rack would have been
we can make some inferences based on his most recent move. in each case, generate the legal moves he could have made
Consider the game situation shown in Figure 3. Our oppo- with that rack, and then use that information to estimate the
nent, playing ﬁrst, held ?IIMNOO and played <8E IMINO likelihood of that leave. Using Bayes’ theorem
       >3
(?O) 16  . We can observe only the letters he played—                        P (play | leave)P (leave)
IMINO—and the letters on our own rack GLORRTU, leaving      P (leave | play)=
                                                                                    P (play)
88 letters which we have not seen: 86 in the bag and two on
his rack. When the opponent draws ﬁve letters to replenish The term P (leave) is the prior probability of a particular
his rack, each of the tiles in the bag is equally likely to be leave. It is the probability of a particular combination of let-
drawn. But assuming that the two letters left on his rack can ters being randomly drawn from the set of all unseen (by us)
also be viewed as being randomly and uniformly drawn from letters. This is the implicit assumption that Quackle makes
the 88 letters that we have not seen would be a gross oversim- about the opponent’s leave. The prior probability for a partic-
pliﬁcation. Of the 372 possible two-letter pairs for the oppo- ular draw D from a bag B is
                                                                                       
                                                                                       Bα
                                                                     P (leave)=   α∈D Dα
                                                                                    |B|
                                                                                    |D|

                                                        where α is a distinct letter, Bα is the number of α-tiles in
                                                      B, Dα  is the number of α-tiles in D, and |B| and |D| are
                                                      respectively the size of the bag and size of the draw.
                                                        We will be interested in computing probabilities for all of
                                                      the possible leaves; we can therefore take advantage of the
                                                      fact that
                                                                        
                                                              P (play)=     P (play | leave)P (leave)
                                                                       leave
                                                        The P (play | leave) term is our model of the opponent’s
                                                      decision-making process. If we are given to know the letters
                                                      that comprise the leave, then we can combine those letters
                                                      with the tiles that we observed our opponent play to recon-
                                                      struct the full rack that our opponent had when he played that
                                                      move. After generating all possible legal plays for that rack
                                                      on the actual board position, we must estimate the probability
Figure 3: The state of the board after observing the opponent play
IMINO with a leave of ?O. The active player holds GLORRTU. Be- that our opponent would have chosen to make that particular
tween the two letters left on the opponent’s rack and the letters left play. We are assuming that our opponent is a computer, so it
in the bag, there are 88 unseen tiles.                might be reasonable to believe that our opponent also makes
                                                      his decisions based on the results of some simulations. Un-
nent’s leave (??, ?A,. . . ,?Z,AA,AB,. . . ,AZ,. . . ,YZ), some are fortunately, simulating our opponent’s simulations would not
considerably more probable, given the most recent play. Sup- be practical from a computational standpoint. Instead, we
pose our opponent’s leave is ?H. That would mean that he naively assume that the opponent chooses the highest-ranked
held ?HIIMNO before he played. If he had held that rack, play according to the same static move evaluation function
he could have played <8D HOMINId 80>, a bingo which   that we use. In other words, we assume that our opponent
would have earned him 64 more points than what he actually would make the same move that we would make if we were in
played. Were our opponent a human, we would have to ac- his position and did not do any simulations. This model of our
count for the possibility that he does not know this word or opponent’s decision process is admittedly overly-simplistic.
that he simply failed to recognize the opportunity to play it. However, it is likely to capture the opponent’s behavior in
But since our opponent is a computer, we feel conﬁdent that many important situations. For example, one of the things
he would not have made this oversight and conclude that his we are most interested in is whether our opponent can play a
leave after IMINO was not ?H. Likewise, we can assume that bingo (or would be able to play a bingo if we made a particu-
                                                      lar move). If a bingo move is possible, it is very likely to be
  3The word IMINO was played on row 8, column E for 16 points, the highest-ranking move according to our static move eval-
leaving letters ?O on the player’s rack.              uator anyway. A key advantage of modeling the opponent’s

                                                IJCAI-07
                                                  1486