      FastSLAM 2.0: An Improved Particle Filtering Algorithm for Simultaneous 
                       Localization and Mapping that Provably Converges 

         Michael Montemerlo and Sebastian Thrun Daphne Roller and Ben Wegbreit 
                   School of Computer Science Computer Science Department 
                   Carnegie Mellon University Stanford University 
                       Pittsburgh, PA 15213 Stanford, CA 94305-9010 
             mmde@cs.cmu.edu, thrun@csxmu.edu koller@cs.stanford.edu, ben@wegbreit.com 

                         Abstract                              correlations among those submaps, hence are quadratic but 
                                                               with a much reduced constant factor [1; 7; 22; 25]. Others re•
   In [15], Montemerlo et al. proposed an algorithm called     strict the update exclusively to local maps [12], hence operate 
   FastSLAM as an efficient and robust solution to the simul•
                                                               in constant time (assuming known data association). 
   taneous localization and mapping problem. This paper de•
                                                                 A second group of researchers has developed techniques 
   scribes a modified version of FastSLAM that overcomes 
                                                               that represent maps through potential functions between ad•
   important deficiencies of the original algorithm. We prove 
                                                              jacent landmarks, similar to Markov random fields. The re•
   convergence of this new algorithm for linear SLAM prob•
                                                               sulting representations require memory linear in the number of 
   lems and provide real-world experimental results that il•
                                                               landmarks [19; 23]. Under appropriate approximations, such 
   lustrate an order of magnitude improvement in accuracy 
                                                               techniques have been shown to provide constant time updat•
   over the original FastSLAM algorithm. 
                                                               ing (again for known data association). Unfortunately, no con•
                                                               vergence proof exists for any of these extensions of the EKF, 
1 Introduction                                                 even for the generic case of linear SLAM. Furthermore, if land•
Simultaneous localization and mapping (SLAM) is a highly       marks are ambiguous, all of these approaches have to perform 
active research area in robotics and AI. The SLAM problem      search to find appropriate data association hypotheses, adding 
arises when a moving vehicle (e.g. a mobile robot, submarine,  a logarithmic factor to their update complexity. 
or drone) simultaneously estimates a map of its environment      The FastSLAM algorithm, proposed in [15] as an efficient 
and its pose relative to that map. In the absence of global po• approach to SLAM based on particle filtering [6], does not fall 
sition information, the vehicle's pose estimate will become in• into either of the categories above. FastSLAM takes advan•
creasingly inaccurate, as will its map. Since maps may con•   tage of an important characteristic of the SLAM problem (with 
tain thousands of entities, acquiring large, accurate maps is known data association): landmark estimates are conditionally 
a challenging statistical estimation problem, especially when  independent given the robot's path [17]. FastSLAM uses a par•
performed in real-time.                                       ticle filter to sample over robot paths. Each particle possesses 
   Most present-day research on SLAM originates from a sem•    N low-dimensional EKFs, one for each of the N landmarks. 
inal paper by Smith and Cheeseman [21], which proposed the    This representation requires O(NM) memory, where M is the 
use of the extended Kalman filter (EKF) for solving SLAM.      number of particles in the particle filter. Updating this filter 
This paper is based on the insights that errors in the map and requires 0(M log N) time, with or without knowledge of the 
pose errors are naturally correlated, and that the covariance ma• data associations. However, the number of particles M needed 
trix maintained by the EKF expresses such correlations. New-   for convergence is unknown and has been suspected to be ex•
mann [18] recently proved that the EKF converges for linear   ponential in the size of the map, in the worst-case. 
SLAM problems, where the motion model and observation            This paper proposes an improved version of the FastSLAM 
model are linear functions with Gaussian noise (see below).    algorithm. The modification is conceptually simple: When 
   Unfortunately, EKF covariance matrices are quadratic in the proposing a new robot pose—an essential step in FastSLAM*s 
size of the map, and updating them requires time quadratic in particle filter—our proposal distribution relies not only on the 
the number of landmarks N. This quadratic complexity has       motion estimate (as is the case in FastSLAM), but also on the 
long been recognized to be a major obstacle in scaling SLAM    most recent sensor measurement. Such an approach is less 
algorithms to maps with more than a few hundred features. It  wasteful with its samples than the original FastSLAM algo•
also limits the applicability of SLAM algorithms to problems  rithm, especially in situations where the noise in motion is high 
with ambiguous landmarks, which induces a data association    relative to the measurement noise. 
problem [2; 22]. Today's most robust algorithms for SLAM         To obtain a suitable proposal distribution, our algorithm lin•
with unknown data association maintain multiple hypotheses    earizes the motion and the measurement model in the same 
(tracks), which increase their computational complexity.      manner as the EKF. As a result, the proposal distribution can be 
   Consequently, there has been a flurry on research on more  calculated in closed form. This extension parallels prior work 
efficient SLAM techniques (see e.g., [11]). One group of      by Doucet and colleagues, who proposed a similar modifica•
researchers has developed techniques that recursively divide  tion for general particle filters [6] and Markov Chain Monte 
maps into submaps, thereby confining most computation to      Carlo techniques for neural networks [4]. It is similar to the 
small regions. Some of these approaches still maintain global arc reversal technique proposed for particle filters applied to 


ROBOTICS                                                                                                           1151  Bayes networks [10], and it is similar to recent work by van  of each other (hence the product over n). In practice, of course, 
 der Merwe [24], who uses an unscented filtering step [9] for  one does not know the vehicle's path. Nevertheless, the inde•
 generating proposal distributions that accommodate the mea•   pendence makes it possible to factor the posterior into a term 
 surement.                                                     that estimates the probability of each path, and TV terms that 
   While this modification is conceptually simple, it has impor• estimate the position of the landmarks, conditioned on each 
 tant ramifications. A key contribution of this paper is a conver• (hypothetical) path. 
 gence proof for linear SLAM problems using a single particle.   FastSLAM samples the path using a particle filter. Each 
 The resulting algorithm requires constant updating time. To   particle has attached its own map, consisting of N extended 
 our knowledge, the best previous SLAM algorithm for which     Kalman filters. Formally, the th particle contains a 
 convergence was shown requires quadratic update time. Fur•    path along with N Gaussian landmark estimates, de•
 thermore, we observe experimentally that our new FastSLAM 
                                                               scribed by the mean and covariance 
 algorithm, even with a single particle, yields significantly more 
 accurate results on a challenging real-world benchmark [7]                                                            (5) 
 than the previous version of the algorithm. These findings are 
 of significance, as many mobile robot systems are plagued by 
 control noise, but possess relatively accurate sensors. More•   We briefly review the key equations of the regular Fast•
 over, they contradict a common belief that maintaining the en• SLAM algorithm, and refer the reader to [15]. Each update 
 tire covariance matrix is required for convergence [5].       in FastSLAM begins with sampling new poses based on the 
                                                               most recent motion command 
 2 Simultaneous Localization and Mapping 
                                                                                                                       (6) 
 SLAM addresses the problem of simultaneously recovering a 
 map and a vehicle pose from sensor data. The map contains     Note that this proposal distribution only uses the motion com•
 N features (landmarks) and shall be denoted                   mand ut, but ignores the measurement 
                                                                 Next, FastSLAM updates the estimate of the observed land•
 The path of the vehicle will be denoted where 
                                                               mark^), according to the following posterior. This posterior 
  is a time index and st is the pose of the vehicle at time t. takes the measurement into consideration: 
   Most state-of-the-art SLAM algorithms calculate (or ap•
 proximate) variants of the following posterior distribution: 

                                                         (1) 
 where . is a sequence of measurements (e.g., 
 range and bearing to nearby landmarks), and 
 is a sequence of robot controls (e.g., velocities for robot   Here is a constant. This posterior is the normalized product 
 wheels). (As usual, we assume without loss of generality that of two Gaussians as indicated. However, if is non-linear, the 
 only a single landmark is observed at each time The vari•     product will not be Gaussian in general. To make the result 
 ables are data association variables — each                   Gaussian, FastSLAM employs the standard EKF "trick" [13]: 
    specifies the identity of the landmark observed at time    g is approximated by a linear function (see below). Under this 
 Initially, we assume is known; we relax this assumption be•   approximation, (7) is equivalent to the measurement update 
 low.                                                          equation familiar from the EKF literature [13]. 
   To calculate the posterior (1), the vehicle is given a proba• In a final step, FastSLAM corrects for the fact that the pose 
 bilistic motion model, in the form of the conditional probability sample has been generated without consideration of the 
 distribution This distribution describes how a                most recent measurement. It does so by resampling the parti•
 control asserted in the time interval affects the             cles [20]. The probability for the th particle to be sampled 
 resulting pose. Additionally, the vehicle is given a probabilis•
 tic measurement model, denoted describing (with replacement) is given by the following variable 
 how measurements evolve from state. In accordance to the      commonly referred to as importance factor: 
 rich SLAM literature, we will model both models by nonlinear 
 functions with independent Gaussian noise: 
                                                         (2) 
                                                         (3) 
                                                               As shown in [15], the resampling operation can be imple•
Here g and //. are nonlinear functions, and and 6  are Gaus•
                                                 t             mented in 0(M log N) time using trees, where M is the num•
sian noise variables with covariance > and , respectively. 
                                                               ber of samples and N the number of landmarks in the map. 
3 FastSLAM                                                     However, the number of particles M needed for convergence 
                                                               remains an open question. 
FastSLAM [15] is based on the important observation [17] that    FastSLAM has been extended to SLAM with unknown data 
the posterior can be factored                                  associations [14]. If the data association is unknown, each par•
                                                               ticle in FastSLAM makes its own local data association de•
                                                          (4) cision by maximizing the measurement likelihood. The 
                                                               formula tor finding the most likely data association maximizes 
This factorization is exact and universal in SLAM problems.   the resulting importance weight: 
It states that if one (hypothetically) knew the path of the vehi•
cle, the landmark positions could be estimated independently                                                           (8) 


1152                                                                                                         ROBOTICS Here makes the dependence of the factor on the                                             denotes the predicted measure-
variable explicit. A key characteristic of FastSLAM is that                            the predicted robot pose, and 
each particle makes its own local data association. In contrast, 
EKF techniques must commit to a single data association hy•          the predicted landmark location. The matrices and 
pothesis for the entire filter. Results in [14] show empirically      the Jacobians (first derivatives) of with respect to 
that this difference renders FastSLAM significantly more ro•  and s, respectively: 
bust to noise than EKF-style algorithms. 
                                                                                                                      (11) 

4 FastSLAM 2.0                                                                                                        (12) 
Our new FastSLAM algorithm is based on an obvious ineffi•     Under this EKF-style approximation, the proposal distribution 
ciency arising from the proposal distribution of regular Fast• (9) is Gaussian with the following parameters: 
SLAM. In regular FastSLAM, the pose is sampled in ac•
cordance to the prediction arising from the motion command                                                            (13) 
    as specified in (6). It does not consider the measurement 
   acquired at time instead, the measurement is incorporated                                                          (14) 
through resampling. This approach is particularly troublesome 
if the noise in the vehicle motion is large relative to the mea•
surement noise. In such situations, sampled poses will mostly 
fall into areas of low measurement likelihood, and will subse•                                                        (15) 
quently be terminated in the resampling phase with high proba• 4.2 Updating The Observed Landmark Estimate 
bility. Unfortunately, many real-world robot systems are char• The updating step remains the same as in FastSLAM (see (7)). 
acterized by relatively high motion noise. As illustrated in the As stated in the previous section, is linearized to retain Gaus-
experimental results section of this paper, the waste incurred sianity of the posterior. This leads to the following update 
by this inefficient sampling scheme can be significant.       equations, whose derivation is equivalent to that of the stan•
                                                              dard EKF measurement update [13]: 
4.1 Sampling The Pose 
FastSLAM 2.0 implements a single new idea: Poses are sam•
pled under consideration of both the motion and the mea•
surement This is formally denoted by the following sam•
pling distribution, which now takes the measurement into 
consideration: 
                                                              4.3 The Importance Weights 
                                                         (9)  Resampling is necessary even in our new version of Fast•
                                                              SLAM, since the particles generated do not yet match the de•
In comparison to (6), incorporating the measurement 
                                                              sired posterior. The culprit is the normalizer in (10), 
only makes sense if we incorporate our current estimate       which may be different for different particles m. This normal•
of the observed landmark—obtained from the variables          izer is the inverse of the probability of the measurement under 
                          (which are included of the condi•   the th particle: To 
tioning variables above). So in essence, the difference to Fast• account for this mismatch, our algorithm resamples in propor•
SLAM is that the measurement is incorporated. However,        tion to the following importance factor: 
this change has important ramifications. 
  The proposal distribution (9) can be reformulated as follows: 


                                                              This expression can once again be approximated as a Gaus•
                                                              sian by linearizing The mean of this Gaussian is and its 
                                                              covariance is 
 That is, the proposal distribution is the product of two fac•
tors: the familiar next state distribution and                                                                        (19) 
the probability of the measurement Calculating the latter 
                                                              4.4 Unknown Data Associations 
involves an integration over possible landmark locations 
  Unfortunately, sampling directly from this distribution is im• The approach for handling data association is similar to the one 
possible in the general case; it does not even possess a closed in regular FastSLAM: Again, we select the data association 
form. Luckily, a closed form solution can be attained if g is that maximizes the probability of the measurement for the 
approximated by a linear function (h may remain non-linear!): m-th particle: 


ROBOTICS                                                                                                           1153  At first glance, one may be tempted to substitute wt[m] for   5 Convergence 
 the probability on the right-hand side, as in regular Fast-   A key result in this paper is the fact that our new version of 
 SLAM. However, does not consider the sampled pose             FastSLAM converges tor M=1 particle, for a restricted class 
                                                               of linear Gaussian problems (the same for which KFs con•
      whereas the expression here does. This leads to a slightly verge [5; 18]). Specifically, our result applies to SLAM prob•
 different probability, which is calculated as follows.        lems characterized by the following linear form: 
                                                                                                                      (23) 
                                                                                                                      (24) 
                                                               Linear SLAM can be thought of as a robot operating in a Carte•
                                                               sian space equipped with a noise-free compass, and sensors 
                                                               that measure distances to features along the coordinate axes. 
 Linearization of g leads to a Gaussian over zt with mean      The following theorem, whose proof can be found in the ap•
                 and covariance Both are functions of          pendix, states the convergence of our new FastSLAM variant: 
 the data association variable                                   Theorem. For linear SLAM, FastSLAM with A/=l parti•
                                                               cles converges in expectation to the correct map if all features 
 4.5 Feature Management                                        are observed infi nitely often, and if the location of one feature 
                                                               is known in advance. 
 Finally, in cases with unknown data associations, features have 
 to be created dynamically. As is common for SLAM algo•          This theorem parallels a similar result previously published 
 rithms [5], our approach creates new features when the mea•   for the Kalman filter [5; 18]. However, this result applies to 
 surement probability in (20) is below a threshold. However,  the Kalman filter, whose update requires time quadratic in the 
 real-world data with frequent outliers will generate spurious number of landmarks N. With A/=l, the resampling step 
 landmarks using this rule. Following [5], our approach re•   becomes obsolete and each update takes constant time. To 
 moves such spurious landmarks by keeping track of their pos• our knowledge, our result is the first convergence result for 
 terior probability of existence. Our mechanism analyzes mea• a constant-time SLAM algorithm. It even holds if all features 
 surement to the presence and absence of features. Observing a are arranged in a large loop, a situation often thought of as the 
 landmark provides positive evidence for its existence, whereas worst case for SLAM problems [8]. 
not observing it when falls within the robot's perceptual 
range provides negative evidence. The posterior probability   6 Experimental Results 
of landmark existence is accumulated by the following Bayes 
filter, whose log-odds form is familiar from the literature on Systematic experiments showed that FastSLAM 2.0 provides 
occupancy grid maps [16]:                                     excellent results with surprisingly few particles, including 
                                                              M= 1. Most of our experiments were carried out using a 
                                                              benchmark data set collected with an outdoor vehicle in Victo•
                                                       (22)   ria Park, Sydney [7]. The vehicle path is 3.5km long, and the 
                                                              map is 320 meters wide. The vehicle is equipped with differ•
                                                              ential GPS that is used for evaluation only. Fig. la shows the 
Here are the log-odds of the physical existence of land•      map of the terrain, along with the path obtained by raw odome-
mark in map andis the prob•                                   try (which is very poor, the average RMS error is 93.6 meters). 
abilistic evidence provided by a measurement. Under appro•    This data set is presently the most popular benchmark in the 
priate definition of the latter, this rule provides for a simple SLAM research community [3]. 
evidence counting rule. If the log odds drops below a prede•     Figs, lb&c show the result of applying FastSLAM with 
fined threshold, the corresponding landmark is removed from   M=l particle to the data set, without (Fig. lb) and with 
the map. This mechanism enables particles to free themselves  (Fig. lc) the feature management approach described in Sec•
of spurious features.                                         tion 4.5. In both cases, the estimated vehicle path is shown 


1154                                                                                                        ROBOTICS                                                                         efficient use of the particles, particularly in situations in which 
                                                                        the motion noise is high in relation to the measurement noise. 
                                                                           A main contribution of this paper is a convergence proof for 
                                                                        FastSLAM with a single particle. This proof is an improve•
                                                                        ment over previous formal results, which applied to algorithms 
                                                                        much less efficient than the current one. In fact, this result is a 
                                                                        first convergence result for a constant time SLAM algorithm. 
                                                                           The theoretical finding is complemented by experimental re•
                                                                        sults using a standard benchmark data set. The new algorithm 
                                                                        is found to outperform the previous FastSLAM algorithm and 
                                                                        the EKF approach to SLAM by a large margin. In fact, a single 
                                                                        particle suffices to generate an accurate map of a challenging 
                                                                        benchmark data set. Despite this surprising result, the use of 
                                                                        multiple particles is clearly warranted in situations with am•
                                                                        biguous data association. We believe that our results illustrate 
                                                                        that SLAM can be solved robustly by algorithms that are sig•
                                                                        nificantly more efficient than EKF-based algorithms. 
                                                                        8 Acknowledgments 
                                                                        This work was supported by DARPA's MARS and MARS2020 
                                                                        program. Daphne Koller was supported by the Office of Naval 
                                                                        Research, Young Investigator (PECASE) grant N00014-99-1-
                                                                        0464. We thank the Hertz Foundation for their support of 
                                                                        Michael Montemerlo's graduate research. 
Figure 2: RMS map error for regular FastSLAM (dashed line) versus 
FastSLAM 2.0 (solid line) on (a) the Victoria Park data (b) simulated   References 
data. FastSLAM 2.0's results even with a single particle are excellent. [ l ] T. Bailey. Mobile Robot Localisation and Mapping in Extensive 
as a solid line, and the GPS information is shown as a dashed                 Outdoor Environments. PhD thesis, Univ. of Sydney, 2002. 
                                                                        f2) Y. Bar-Shalom and T. E. Fortmann. Tracking and Data Associ•
line. Results of the same accuracy were previously achieved 
                                                                              ation. Academic Press, 1988. 
only with 0{N   ) EKF-style methods [7] and with FastSLAM 
               2                                                        [3] SLAM summer school 2002 
using A/=5(J particles. The feature management rule reduces                   http://www.cas.kth.se/SLAM/ 
the number of landmarks in the map from 768 (Fig. lb) to 343            [4] N. de Freitas, M. Niranjan, A. Gee, and A. Doucet. Sequential 
(Fig. lc).                                                                    montc carlo methods to train neural network models. Neural 
   Fig. 2 plots the RMS error of the vehicle position esti•                   Computation, 12(4), 2000. 
mate as function of the number of particles for the Victoria            [5] G. Dissanayakc, P. Newman, S. Clark, H.F. Durrant-Whytc, and 
data set (panel a) and for synthetic simulation data (panel b)                M. Csorba. A solution to the simultaneous localisation and map 
taken from [15]. While our new algorithm does approximately                   building (SLAM) problem. IEEE Trans. Robotics and Automa•
                                                                              tion, 2001. 
equally well for any number of particles, regular FastSLAM 
                                                                        [6] A. Doucet, J.F.G. de Freitas, and N.J. Gordon, editors. Sequen•
performs poorly for very small particle sets. We suspect that 
                                                                              tial Monte Carlo Methods In Practice. Springer, 2001. 
the poor performance of regular FastSLAM is due to the fact             [7] J. Guivant and E. Nebot. Optimization of the simultaneous lo•
that the vehicle possesses relatively inaccurate odometry (see                calization and map building algorithm for real time implemen•
Fig. la), yet uses a low-noise range finder for landmark detec•               tation. Trans, of Robotics and Automation, 2001. 
tion (a common configuration in outdoor robotics), leading to           [8] J.-S. Gutmann and K. Konolige. Incremental mapping of large 
the generation of many particles of low likelihood.                           cyclic environments. Proc. CIRA, 2000. 
   The small number of examples needed to obtain state-of-              [9] S. J. Julier and J. K. Uhlmann. A new extension of the Kalman 
the-art estimation translates to unprecedented efficiency of the              fi Iter to nonlinear systems. Proc. AeroSense, 1997. 
                                                                        [10] K. Kanazawa, D. Roller, and S.J. Russell. Stochastic simulation 
new filter. The following table shows the results required to 
                                                                              algorithms for dynamic probabilistic networks. UAI-95. 
process the Victoria Park data set on a 1GHz Pentium PC: 
                                                                        [11] Notes ICRA Workshop Concurrent Mapping and Localization 
        [~EKF I 7,807 sec I                                                  for Autonomous Mobile Robots, 2002 
         regular FastSLAM, M=50 particles 315 sec                       [12] J.J. Leonard and H.J.S. Feder. A computationally efficient 
        I FastSLAM 2.0, M=1 particle | 54 sec |                               method for large-scale concurrent mapping and localization. 
In comparison, the data acquisition required 1,550 seconds.                   Proc.JRSS, 1999. 
Thus, while EKFs cannot be run in real-time, our new algo•              [13] P. May beck. Stochastic Models, Estimation, and Control, Vol•
rithm requires less than 4% of the vehicle's trajectory time.                 ume I. Academic Press, 1979. 
                                                                        [14] M. Montcmcrlo and S. Thrun. Simultaneous localization 
7 Discussion                                                                  and mapping with unknown data association using FastSLAM. 
                                                                             Proc. ICRA, 2003, to appear 
This paper describes a modified FastSLAM algorithm that                 [15] M. Montemerlo, S. Thrun, D. Roller, and B. Wegbreit. Fast•
is uniformly superior to the FastSLAM algorithms proposed                     SLAM: A factored solution to the simultaneous localization and 
in [15]. The new FastSLAM algorithm utilizes a different pro•                mapping problem. Proc. AAA1, 2002. 
posal distribution which incorporates the most recent measure•          [16] H. P. Moravec. Sensor fusion in certainty grids for mobile 
ment in the pose prediction process. In doing so, it makes more               robots. Al Magazine, 9(2), 1988. 


ROBOTICS                                                                                                                             1155 