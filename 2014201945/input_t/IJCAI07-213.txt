                          Adaptation of Organizational Models for
                    Multi-Agent Systems based on Max Flow Networks

                                          Mark Hoogendoorn
                   Vrije Universiteit Amsterdam, Department of Artiﬁcial Intelligence
                      De Boelelaan 1081a, 1081 HV Amsterdam, The Netherlands
                          mhoogen@cs.vu.nl      http://www.cs.vu.nl/˜mhoogen

                    Abstract                          requires much more buyer and seller agents. Such an event
                                                      requires adaptation of the current organizational model to the
    Organizational models within multi-agent systems  new usage level, otherwise the system would no longer func-
    literature are of a static nature. Depending upon cir- tion correctly due to overload.
    cumstances adaptation of the organizational model   The aim of this paper is to introduce a method for capac-
    can be essential to ensure a continuous success-  ity management of organizations by dynamically adapting an
    ful function of the system. This paper presents an organizational model based on the environmental ﬂuctuation.
    approach based on max ﬂow networks to dynami-     For this purpose, the AGR framework is adopted. AGR has
    cally adapt organizational models to environmen-  been chosen because the framework is closely related to graph
    tal ﬂuctuation. First, a formal mapping between   representations. Furthermore, extensions of the framework
    a well-known organizational modeling framework    with capacities for each of the elements within the organiza-
    and max ﬂow networks is presented. Having such    tional model are introduced. The method itself is based on
    a mapping maintains the insightful structure of an graph theory, and more speciﬁcally, on max ﬂow networks.
    organizational model whereas specifying efﬁcient  Specifying methods for adaptation in max ﬂow networks has
    adaptation algorithms based on max ﬂow networks   the advantage of efﬁcient algorithms being available to per-
    can be done as well. Thereafter two adaptation    form calculations on the network. The method can be in-
    mechanisms based on max ﬂow networks are in-      corporated into an agent maintaining such an organizational
    troduced each being appropriate for different envi- model, attributing the agent with the capabilities to properly
    ronmental characteristics.                        adapt the organizational model. This paper however only
                                                      deals with evaluating the effectiveness of the method itself.
1  Introduction                                         The paper is organized as follows: Section 2 introduces
With the need for more complex software, arose the need max ﬂow networks and the terminology associated with it.
for a higher abstraction level than the concept agent. As Thereafter, Section 3 discusses the existing modeling frame-
a result, organization modeling is becoming a practiced work for organizations and extends it with capacity elements.
stage within multi-agent system design (see e.g.[Ciancarini Section 4 presents a mapping between the extended organi-
and Wooldridge, 2001] and [Boissier et al., 2005]). The zational modeling framework and max ﬂow networks. Static
organizational model poses various constraints on agents analysis methods for analyzing the current functioning of the
populating the organization. Frameworks have been intro- organizational model are presented in Section 5 whereas Sec-
duced for representing such an organizational model e.g. tion 6 expresses adaptation rules that can be used when the
AGR  (Agent/Group/Role) [Ferber and Gutknecht, 1998], analysis shows an improper functioning. Section 7 presents
                                                      simulation results of these adaptation mechanisms, and ﬁ-
GAIA [Zambonelli et al., 2001] and MOISE [Hannoun et al.,
2000].                                                nally, Section 8 is a discussion.
  A common problem encountered with the current orga-
nizational modeling frameworks is their static nature. The 2 Max Flow Networks
frameworks do not support the organizational model itself This Section provides a brief introduction to max ﬂow net-
to be dynamic in that it changes based on e.g. the environ- works within graph theory. Max ﬂow theory (see e.g. [Ford
ment. Especially when a multi-agent system participates in and Fulkerson, 1956]) is a very well known part of graph the-
a dynamic and unpredictable environment, an organizational ory, appreciated because of its practical applicability. A max
model might become obsolete, making dynamic adaptation ﬂow network is deﬁned as follows.
of the model essential. Imagine a design for a negotiation Let G=(V,E) be a directed graph with a set of nodes V and a
system on the Internet, in which buyer and seller agents are set of edges E. Within V two special nodes are distinguished,
present. The organizational model speciﬁes the number of namely the source s ∈ V and the sink t ∈ V. The source has an
buyers and seller that should be present, based on a certain indegree of 0 and the sink an outdegree of 0. Furthermore, let
expected input for the system. Suddenly, an increase in usage c: E → R+ be a capacity function for the edges. A network

                                                IJCAI-07
                                                  1321                                           +
is then deﬁned as N = (V,E,s,t,c).Nowletf: E → R0 denote It is expressed as O=S,Rep,whereS is a set of group struc-
the ﬂow value under the following conditions:         tures. Rep is a representative graph specifying interactions
  f(x,y) ≤ c(x,y) for all (x,y) ∈ E                   between role of different groups (later referred to as group
  fin(v) = fout(v) for all v ∈ V-{s,t}                links): Rep:S×R×S×R,e.g.Rep(Sa,r1,Sb,r2)wherer1∈Sa
Where fin(v) and fout(v), respectively the inﬂow and the out- and r2∈Sb,andSa,Sb∈S. A contraint is that a single agent is
ﬂow of a node v, are deﬁned as follows:              playing both role r1 and role r2
  fin(v) =     f(x,v) with (x,v) ∈ E
         x∈V                                         3.2  Agent/Group/Role Extensions
  fout(v) = y∈V f(v,y) with (v,y) ∈ E
For the source s and the sink t the following thus holds: In addition to the AGR approach, it is assumed that in the
  fin(s) = fout(t) =0                                 speciﬁcation of roles a certain capacity is present. This ca-
The ﬂow value throughout the network is now deﬁned as fol- pacity places a requirement on what an agent to be allocated
lows:                                                 to the role within the organization should be able to handle
  | |                                                 computationally per time unit (universal for the whole orga-
  f := fout(s) where fout(s)=fin(t)                                                        →  R+
The max ﬂow is the maximum among all ﬂows, and the max nization). This capacity is denoted by RC: R . In addi-
                                                      tion, a capacity can also be set for role links: CC: R × R →
ﬂow problem is to ﬁnd such a ﬂow. Several algorithms have R+                 ×   →  R+
been published which can ﬁnd such a ﬂow, in 1956 Ford and and group links: SC: R R     .
Fulkerson [Ford and Fulkerson, 1956] were the ﬁrst to pub- One crucial aspect is however still missing, namely the in-
lish such an algorithm where ﬁnding a minimal cut for the teraction with the environment. AGR is mainly based on in-
graph was proven to be equal to the max ﬂow. Later efﬁ- teraction between roles, whereas the emphasis of this paper
ciency improvements have been proposed, see e.g. [Edmunds is to adapt to environmental ﬂuctuations. Therefore, it is as-
and Karp, 1972].                                      sumed that the environment causes a certain pressure upon
  To enable a formal mapping between the organizational the organization. Such pressure is expressed as the amount of
modeling framework and max ﬂow network, node capacities processing needed by the organization to deal with the pres-
should be expressible. Specifying capacities for nodes can be sure, it can be seen as the demand of the environment upon
incorporated into the classical max ﬂow network as follows: the system. In the organizational model this is represented
               +                                      by adding an entity called the environment (ein) and having
let cnode :V→ R  denote the capacity of such a node. Now
                                                      links from the environment to the roles receiving that stress
split up the node v with capacity cnode(v) into two nodes: v1
                                                      directly: (ein,ri) which has a particular value at a certain time
and v2 where node v1 inherits all incoming nodes of v whereas         +
                                                      point: Ein:R→  R  . At different points in time the amount
v2 inherits all outgoing edges. Finally, draw an edge (v1,v2)
with the following capacity value:                    of pressure can differ, requiring different processing capabil-
                                                      ities. Furthermore, besides receiving pressure from the en-
  c(v1,v2) = cnode(v)
                                                      vironment, most roles are assumed to perform actions in the
                                                      environment (eout) as well, affecting the environment: (ri,
3  Multi-Agent Organizational Framework                                                     +
                                                      eout) which again has a value: Eout:R→ R . Assumed is
   and Extensions                                     that a correctly functioning multi-agent organization affects
In this Section, the AGR approach is introduced. AGR is the environment to the exact same amount as the environment
used because the representation of the organizational model- affects the organization.
ing framework is closest to graph theory. As the purpose of
this paper is to investigate adaptations in the capacity of an 4 Mapping the Organizational Framework to
organizational model, AGR is extended with elements speci- Max Flow Networks
fying such capacity.                                  A mapping between the extended AGR model and the max
3.1  Agent/Group/Role approach                        ﬂow networks as introduced in Section 2 is presented. The
                                                      translation algorithm of the extended AGR model to a max
As a basis for representing a multi-agent organization the ﬂow network can be described as follows:
AGR approach introduced by Ferber and Gutknecht [Ferber
                                                        • For each role ri∈O create a node vi
and Gutknecht, 1998] is used. In the approach, as the name
already suggests, three main elements are used: (1) the agent • For each role link G(ri,rj) create an edge (vi,vj)
which is only speciﬁed as an active communicating entity • For each role link with capacity CC(ri,rj) set the capac-
which plays roles within groups; (2) the group deﬁned as  ity of the edge (vi,vj) to that value: c(vi,vj)=CC(ri,rj)
atomic sets of agent behavior, and (3) the role which is an
                                                        • For each group link (ri,rj)whereri∈Sa,rj∈Sb and
abstract representation of an agent function, service or iden-
                                                          Sa=Sb create an edge (vi,vj)
tiﬁcation within a group. More formally on an abstracter
                                                        •
level, Ferber and Gutknecht deﬁne a group structure as a tu- For each group link with capacity SC(ri,rj)set
ple S=R,G,L. In the deﬁnition, R is a set of role identiﬁers the capacity of the edge (vi,vj) to that value:
whereas G is an interaction graph specifying the valid inter- c(vi,vj)=SC(ri,rj)
actions between two roles (later referred to as role links): • For each role with capacity RC(ri) set the capacity of
G:R×R→L,whereL    is the interaction language. The orga-  the node vi to that value: cnode(vi)=RC(ri), reduce the
nizational structure is deﬁned as the set of group structures graph to a classical max ﬂow graph using the method
expressing the design of a multi-agent organization scheme. presented in Section 2

                                                IJCAI-07
                                                  1322  • Add a node s to represent the environment ein and add a is translated into a max ﬂow problem. Remember the nota-
    node t to represent the environment eout          tion for the ﬂow: |f| := fout(s) where fout(s)=fin(t).Nowlet
  • For each (ein,ri) with capacity Ein(ri) create an edge the maximum ﬂow be noted as follows:
                                                        | |
    (s, vi). Set the capacity c(s, vi)=Ein(ri)           f max(N) := fout,max(s) where fout,max(s)=fin,max(t)
  •                                                   The requirements posed for the organizational model can be
    For each (ri,ein) with capacity Eout(ri) create an edge translated into requirements on the ﬂow. Requirements re-
    (vi, t). Set the capacity c(vi,t)=Eout(ri)        garding the amount of pressure can be translated to a max
                                                      ﬂow requirement of the form
                               80    60     50
                            s     R2     R2    R1                ≥
        G1                         1      2      1      fout,max(s) r
        50                           40    100
   R1 60R2    60                                      where r is the requirement. Using the max ﬂow problem
        40                                      60
                  80                                  algorithms from e.g. [Ford and Fulkerson, 1956],[Edmunds
                                      90    100
                      e in
   100                            R3212  R3    R1     and Karp, 1972] it can be determined whether the organi-
       G2
                  80  e out                           zation can theoretically fulﬁll the requirements. Note that
        60                         50     60
   R3 90R4    70
        50                                            non-fulﬁllment of the requirements guarantees that the or-
                                      70
                                            80  t
                                  R412   R4           ganization will never be able to meet the requirements when
    (a) AGR Representation   (b) Max Flow equivalent  complying to the design speciﬁcation.

        Figure 1: Example organizational model        5.2  Analysis of the Organizational Model based on
                                                           Observed Values
Figure 1(a) shows an example AGR organization. In the ﬁg- Besides performing an analysis at design time, an analysis
ure, the big ovals denote groups, whereas the smaller ovals at runtime can also be performed. It can be the case that
denote the roles. Capacities of roles are depicted as a box the environment in which the multi-agent system is partici-
with a number specifying the capacity. Furthermore, inter- pating is highly dynamic and hard to predict, causing an un-
actions between roles within a group or between a role and known amount of pressure for the organization. Therefore,
the environment are depicted by arrows, including a label the requirement r posed for the system is dynamic. The re-
specifying the capacity. Finally, capacities for interactions quirement can however be observed: observing the amount
between groups are speciﬁed by dashed lines, including a of pressure received by the multi-agent system. In case this
capacity number depicted in italics. Figure 1(b) shows the exceeds the maximum ﬂow in the network equivalent, the or-
accompanying max ﬂow network using the previously pre- ganizational model is incorrect. Note that it is still possible
sented translation algorithm (including the translation of node that the multi-agent system is functioning correctly, since the
capacity to a classical max ﬂow network) with a max ﬂow of agents allocated to the roles within the organizational model
50.                                                   might have a higher capacity than required. The model how-
                                                      ever should always be updated to make sure that the system
5  Analyzing an Organizational Model using            continues to function correctly. It could for example be that
   the Max Flow Equivalent                            an agent can handle the pressure for a while, but after a cer-
Now that an equivalent max ﬂow network can be derived from tain duration suffers a burn out. Methods for updating such a
the extended form of an AGR organizational model, this Sec- model are presented in the next section.
tion shows in what way the max ﬂow network can aid in the
analysis of the organizational model. Such an analysis can 6 Adaptation of an Organizational Model
be performed in two ways: (1) checking whether the current using the Max Flow equivalent
organizational model can meet the expected environmental
conditions (i.e. an analysis beforehand), and (2) checking at As shown in the previous Section, when participating in a
runtime whether the organizational model can meet the actual highly dynamic environment the organizational model some-
environmental conditions.                             times needs to be changed in order to handle the environ-
                                                      mental ﬂuctuations appropriately. This Section proposes two
5.1  Analysis of the Organizational Model based on    methods to perform such a change, each working under spe-
     Expected Values                                  ciﬁc circumstances. These methods only concern extending
Creating an organizational model is done having certain re- the capacity as the aim of this paper is to adapt the organi-
quirements in mind. In this paper organizational requirements zational model in such a way that the environment can be
in the form of organizational capacities are considered. Re- handled, which does not include decreasing the capacity.
quirements on capacities are in the form of pressure from the
environment (i.e. the organization should be able to handle 6.1 Adapting the Bottlenecks
x requests of a certain type). For checking whether such a The ﬁrst method for improving the network equivalent of
requirement can theoretically be met by a multi-agent orga- the organizational model involves ﬁnding the path which re-
nization, the max ﬂow equivalent can be used, enabling the quires a minimum additional capacity, and adding capacity to
usage of tools and algorithms from graph theory. To this end the bottleneck within the path. In other words, pinpointing
an organizational model, including capacities for the various the bottleneck within the organization and improving it. Let
organization elements as introduced in the previous section, P=s−→ ... −→ t denote a path from the source s to the sink

                                                IJCAI-07
                                                  1323t in the network. In the explanation of the method, capaci-   Where  {(vx,vi1)|(vx,vi1)∈E} is the set of incom-
ties of edges are assumed to be natural numbers, however this ing edges of vi1 and {(vi2,vy)|v(i2,vy)∈E} the set
can easily be extended to rational numbers. Given that the    of outgoing edges of vi2. In other words, take the
environment has imposed requirement r, and the parameter η    node which has a maximal connection with other
which represents the safety margin to be taken:               nodes. Thereafter, return to 1.
  • calculate the current max ﬂow of the network |f|max(N) The intuition behind the algorithm is to ﬁnd the nodes and
  • if |f|max(N) < (η × r):                           edges representing the role of which a copy would improve
                                                      the max ﬂow most. If no increase is possible, take the nodes
     1. n=1
                                                      and edges representing the role which is most connected
     2. try  ﬁnding   a   path  P   of   the  form
                  +1          0       +1              within the organization to maximize the chances that an ad-
        P=s−→        ... xi −→  yi −→    t where n
              {              }                        dition of a role after the copy will result in an increase of the
        edges  (x1,y1),...,(xn,yn) do not have sufﬁcient max ﬂow.
        capacity to add a ﬂow of 1 to the path. In case such
        a path cannot be found: n=n+1
     3. set the capacity for all the edges (xi,yi)intheset 7 Evaluation of the Different Methods for
        {(x1,y1),...,(xn,yn)} to c(xi,yi)=c(xi,yi)+1      Improving an Organizational Model
                         | |      <  η ×
     4. if the new max ﬂow f max(N) (   r) then con-  In order to characterize the methods presented in the previ-
        tinue at point 2, else the algorithm ends     ous Section, this section presents an evaluation method, and
The speciﬁcation of the algorithm draws inspiration from the compares the results of the different methods using different
algorithms proposed for ﬁnding the max ﬂow through a net- settings. First, a cost model is presented expressing the cost
work. These algorithms work with ﬁnding paths from source function used for evaluation. Thereafter, the different meth-
to sink that can be increased with a ﬂow of 1. Finding a path ods are evaluated based on the cost model and several envi-
which can almost be increased and extending the capacity ronmental settings.
therefore results in an immediate increase in the max ﬂow
of the network.                                       7.1  Cost Model
6.2  Adding Organizational Elements                   Each element within the organizational model has a certain
                                                      cost attached to it. The cost for role and group links is ex-
The capacity required for allocation of an agent to a certain                    +
                                                      pressed as costlink:R× R → R and deﬁned as follows:
role is of course limited; agents with very high capacities           CC(x,y)
might be too expensive. Therefore, an algorithm for adding costlink(x,y) = e α where (x,y)∈(G∪Rep)
roles and the accompanying role and group links to an orga- In other words, cost for links increase exponentially (a com-
nization is presented here. The algorithm as presented above monly used type of cost function), where the parameter α
                                                      can be varied. The same holds for the cost of a node
is therefore adapted to cope with addition of organizational        +
elements as well. The extension states the following: in case costrole:R→ R which is thus deﬁned as follows:
                                                                    RC(r)
the max ﬂow of the network can no longer be increased as costrole(r) = e 0.5α where r∈R
a further increase of the max ﬂow would necessarily require The factor 0.5 is arbitrarily set in the cost function because
exceeding of the maximum capacity set (i.e. the current ca- typically interaction capacity costs are lower than agent ca-
pacity c(xi,yi) exceeds the maximum capacity cmax(xi,yi)): pacity costs. In order to punish an organizational model not
 1. For each two nodes vi1,vi2 and set of edges of the form being able to meet the environmental pressure, a penalty is
                                                                               ×   → R+
    (vx,vi1)wherex∈Vand(vx,vi1)∈E, (vi1,vi2), and     introduced of the form p: N r     ,wherer  is the en-
    (vi2,vy)wherey∈Vand(vi2,vy)∈E representing a role vironmental requirement. The penalty function is deﬁned as
    ri and its role and group links:                  follows:
                                                                β ×    | |
    If at least one of the elements has reached the max- p(N, r) =  (r - f max(N))
    imum  capacity: calculate the increase of the max The parameter β speciﬁes the penalty for each requirement
    ﬂow in case the nodes and edges were to be doubled unit not fulﬁlled. The network N represents the multi-agent
    (i.e. Nnew=N∪{vi1,2,vi2,2,(vx,vi1,2), (vi1,2,vi2,2), organization. Finally, the overall cost for the organizational
    (vi2,2,vy)}): |f|max(Nnew)-|f|max(N)              model is deﬁned as follows:   
                                                        costtotal =   p(N,  r)  +           costrole(r) +
      • If the highest increase exceeds 0, in other words the                        r∈R
        network can be improved by copying a single role, (x,y)∈G∪Rep costlink(x,y)
        copy the two nodes and edges having the highest
        value.                                        7.2  Evaluation
      • Otherwise, copy the two nodes vi1,vi2 and ac- An implementation in Java has been created of the two al-
        companying edges (vx,vi1)wherevx∈Vand         gorithms for reorganization, and the translation procedure of
        (vx,vi1)∈E, (vi1,vi2), and (vi2,vy)wherevy∈V  an organizational model to the accompanying network. In
        and (vi2,vy)∈E which maximize the following:  order to evaluate the performance of the two algorithms the
        min      (|{(vx,vi1)|(vx,vi1)∈E}|,            example organizational model shown in Figure 1 is used. As
        |{(vi2,vy)|v(i2,vy)∈E}|)                      a benchmark, no adaptation of the organizational model is

                                                IJCAI-07
                                                  1324  400                                400                                400
                               σ=0                             σ= 0 , max =                       σ= 0 , max =
                               σ=5                             σ= 5 , max =                       σ= 5 , max =
                               σ=20                            σ= 20 , max                        σ= 20 , max
  350                                350                                350


  300                                300                                300


  250                                250                                250


  200                                200                                200
  average  cost                      average  cost                     average  cost
  150                                150                                150


  100                                100                                100


   50                                50                                 50


   0                                  0                                  0
     0.8 0.9 1   1.1 1.2 1.3 1.4 1.5    0.8 0.9 1   1.1 1.2 1.3 1.4 1.5    0.8 0.9 1   1.1 1.2 1.3 1.4 1.5
                  η                                  η                                  η
            (a) bottleneck             (b) role addition, max capacity=90 (c) role addition, max capacity=60

                           Figure 2: Bottleneck and role addition algorithm performance

                                                       β     σ    No    No     Optimal  Role ad- Role ad-
used. Using the implementation, simulation runs are per-          adap- adap-  Bottle-  dition   dition
formed with an environmental pressure causing a require-          tation tation neck    max=90   max=60
ment r based on a normal distribution f(x;μ,σ).Onestep            max   max
                                                                  ﬂow μ ﬂow
within such a simulation entails: (1) generating the environ-           2μ
mental requirement r based on the normal distribution; (2) 200 0  34    199    34       34       34
calculating the current max ﬂow of the network: |f|max(N); 200 5  370   199    42       42       75.6
                                                       200   20   1518  210    129      141      116
                        total
(3) calculating the cost cost , and (4) updating the net- 5  0    34    199    34(η≤1.2) 34(η=≤1.2) 34(η=≤1.2)
work for the next step, using one of the improvement meth- 5 5    42    199    35(η=1.0) 35(η=1.0) 37(η=0.9)
ods. Each step is performed 100 times, and each simula- 5    20   71    210    35(η=0.8) 37(η=0.7) 69(η=0.5)
tion is performed 10 times, generating from a different seed
each time. After the steps have been performed, the aver- Table 1: Average costs of the organizational model resulting
age of the costtotal per step is calculated. In order to eval- from the different algorithms, penalty is set to either 5 or 200
uate the different methods, two settings for the cost model
have been used: relatively high penalty cost compared to capacity has been set to 90 whereas in Figure 2(c) 60 is used.
agent/communication cost (e.g. a critical domain such as In the case of no environmental ﬂuctuation, Figure 2(b) shows
incident management), and relatively low penalty cost com- a similar shape as the bottleneck algorithm, whereas Fig-
pared to agent/communication cost (a non-critical domain). ure 2(c) shows a large increase above a value of η=1.2. This
Furthermore, the environment setting μ is by default set to is the result of roles being copied due to the low setting of
the initial max ﬂow (in this case 50), whereas the ﬂuctuation the maximum capacity. Each role in the network has already
σ has been set to different values: σ={0,5,20}.       reached the maximum capacity, resulting in a need for a copy,
                                                      which causes a severe overcapacity. In case of little environ-
Relatively High Penalty Cost
                                                      mental ﬂuctuation, the setting 90 for the maximum capacity is
The results of an organization in which penalty costs are rel- better since no large increase for capacity is required, whereas
atively high compared to labor cost are presented here. This with high environmental ﬂuctuation 60 is best since larger ca-
                             α
reﬂects in the cost model in which is set to 80, meaning an pacity increases are required.
                                            β
initial cost of 34 for the whole organization, whereas is set Finally, the top part of Table 1 (the rows where β=200)
to 200, a penalty cost signiﬁcantly higher than the initial cost shows the comparison between the different methods, given
of the whole organization.                            optimal parameter settings. As can be seen, no adaptation is
  First, the bottleneck algorithm is used. Figure 2(a) shows always worse compared to the other algorithms, even when an
the results for different setting given environmental ﬂuctua- overcapacity is initially present. Furthermore, in case of small
    σ            η
tion  and varying value (the algorithm parameter speci- environmental ﬂuctuation adding capacity to the current roles
fying how much to update the capacity). As can be seen, is best (despite the exponential cost function) whereas for
with no environmental ﬂuctuation, the costs stay stable for the larger ﬂuctuation, adding roles immediately is the best option
     η
lower  values whereas they slightly increase for the higher due to the exponential cost function.
settings, as the capacities are even increased when the current
max ﬂow is identical to the requirement r. For small envi- Relatively Low Penalty Cost
ronmental ﬂuctuation (σ=5) an η value of 1.2 gives the best Table 1 also shows the result when the penalty is set to a rel-
results, which is also the case for large environmental ﬂuc- atively low value (the rows where β=5). Still the algorithms
tuation. In both cases, having a higher η value results in the are better than no adaptation, however the value for η needs
capacity being too high (i.e. costs too high) whereas a lower to be set to a lower value as having too much capacity is rela-
η value increases the amount of penalties.            tively expensive compared to the penalty for not meeting the
  Figure 2(b) and (c) show the results of the bottleneck al- requirements. Therefore, the role addition algorithm with a
gorithm extended with role addition. In Figure 2(b) the max maximum capacity 60 performs worse than the one with 90.

                                                IJCAI-07
                                                  1325