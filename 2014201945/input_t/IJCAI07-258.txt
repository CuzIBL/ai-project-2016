    Case-Based Techniques Used for Dialogue Understanding and Planning in a
                                Human-Robot Dialogue System
                                           Karolina Eliasson
                                          Linkoping¨ University
                           Department of Computer and Information Science
                                         SE - 581 83 Linkoping¨
                                            karel@ida.liu.se

                    Abstract                          planning in a human-robot dialogue system is presented. This
                                                      approach has been developed through the work on an ex-
    We describe an approach to the use of case-based  perimental dialogue system called CEDERIC, which is an
    techniques for natural language understanding and abbreviation for Case-base Enabled Dialogue Extension for
    for action planning in a system for dialogue be-  Robotic Interaction Control.
    tween a human and a robot, which in our case is a   The machine learning algorithm selected is case-based rea-
    UAV (unmanned aerial vehicle). A single case base soning (CBR) [Aamodt and Plaza, 1994]. CBR is chosen
    and case-based reasoning engine is used both for  partly because it mimics human learning [Schank, 1982] and
    understanding and for planning actions by the UAV. partly because it learns through its entire lifetime, unlike
    This approach has been developed through the      many other machine learning algorithms that only learn dur-
    work on an experimental dialogue system, called   ing an initial learning phase. CBR is used in our approach to
    CEDERIC. Dialogue experiments where a number      interpret utterances from the operator and messages from the
    of users have solved tasks by dialogue with this sys- robot, and to ﬁnd suitable responses to them, hence the dia-
    tem showed very adequate success rates, while at  logue system learns from experience and adapts to its current
    the same time they indicated a few weak points in operator’s use of language and the domain at hand. Further
    the system that could then easily be corrected.   more, CEDERIC uses case-based planning (CBP) [Spalazzi,
                                                      2001] to make effective use of the experiences gained and
1  Introduction                                       combine it in different ways and in various contexts to solve
                                                      new, unseen problems.
Artiﬁcial intelligence has always been associated with natural
language understanding, generation, and dialogue. However,
traditional dialogue systems do not incorporate any learning 2 An Overview of CEDERIC
abilities and very few memory abilities. The memories used CEDERIC is developed within the WITAS project whose
are often dedicated only to discourse modeling. Instead of goal is to develop an autonomous unmanned aerial vehi-
learning, most systems rely on a repertoire of manually writ- cle (UAV) system that is able to make rational decisions
ten phrases that are used to mimic intelligence and react cor- about the continued operation of the aircraft, based on var-
rectly on the user’s input. There are two major disadvantages ious sources of knowledge including pre-stored geographi-
with this design:                                     cal knowledge, knowledge obtained from vision sensors, and
  • It is very difﬁcult to anticipate all the different phrases knowledge communicated to it by data link [Doherty et al.,
    the user may use to communicate with the system. This 2000]. The UAV used in the project is a Yamaha RMAX heli-
    approach requires substantial knowledge of dialogue copter which can be controlled by high level voice commands
    system development and domain knowledge and it is te- or by written commands.
    dious and time consuming.                           In a dialogue with such a robot, the dialogue manager must
                                                      be able both to interpret the utterance from the operator, re-
  •
    The dialogue system can not adapt to a new situation ceive additional information to be able to react correctly to
    nor function well together with a learning artiﬁcial intel- the utterance, compute data internally, and send commands
    ligence back end system that evolves over time.   to the agent and results to the operator. To do this, it has to
The ﬁrst item can partly be solved by using Wizard-of-Oz distinguish between dialogue acts, physical acts, and internal
techniques. On the other hand, Wizard-of-Oz tests are time acts. A dialogue act can be to ask a clarifying question to the
consuming and it is difﬁcult to know if the entire spectrum of operator, a physical act can be to ask the agent to perform a
phrases is covered. Further more, even if the system is well high-level command such as land, and an internal act can
written and covers the current aspects of use, it is still static be to look up information in a database. These acts must be
and can not adapt to a new situation.                 executed in a correct order to solve the problem at hand. If
  In this article, an approach to use machine learning tech- the information is not sufﬁcient for the dialogue manager to
niques for natural language understanding and for action complete the task then it has to ask for complementary infor-

                                                IJCAI-07
                                                  1600   Operator: Show me the front facade of the main     off before executing the command is found automatically by
             building.                                the system using CBP.
   CEDERIC: I am taking off.                            The command Fly  to  the red   car is not previously
   CEDERIC: Is this view ok?                          stored in the case base, but the rather similar command Fly
   Operator: Climb ﬁve meters.                        to  the  hospital   is stored. However, the solution to
   CEDERIC: OK I have ascended ﬁve meters.            the latter command does not solve the problem of the former
   Operator: Fly to the red car.                      command because a vehicle and a building are not dealt with
   CEDERIC: OK I am starting to ﬂy now.               uniformly. By using information from the command What
   CEDERIC: I am at the car now.                      is  the  position   of  the  red car, which is stored
   Operator: Now please go to the school.             in the case base, a plan for solving the original command can
   CEDERIC: I have several schools to choose between. be found using CBP.
             Which one do you mean?                     The fourth operator command in the dialogue is an exam-
   Operator: The red one.                             ple where CBR is used but CBP is not. The command Now
   CEDERIC: OK I am starting to ﬂy now.               please   go  to the  school   is not previously stored
   CEDERIC: I am at the red school now.               in the case base but the similar command Fly to the
                                                      hospital   is. By using similarity measures and adaptation
                                                      techniques the solution of the latter command can be trans-
  Figure 1: An example dialog performed by CEDERIC.   formed to solve the former command. This command also
                                                      exempliﬁes the use of sub-dialogue and anaphoric references.

mation from the operator. In such a case a discourse model is 2.2 System Architecture
needed to, e.g., resolve anaphoric references and to manage The CEDERIC architecture is shown in Figure 2. The dia-
sub-dialogue.
  The various kinds of acts that are needed to perform a dia- SGUI
logue are stored as plans in CEDERIC. For example, for the
user utterance fly to the hospital, a plan can be to    Speech Recognition
look up the position of the hospital, make sure that the heli-                       CEDERIC
copter is in the air, create a command to be sent to the robot
                                                        Graphical Interface
that commands it to ﬂy to the position of the hospital, wait
for the robot to announce that it has reached the position and                                 Lexicon

ﬁnally report to the operator that the robot has reached its Speech Generator
destination.                                                                                   Case Base

2.1  A Dialogue Example                                                  Case-Base Manager

Because of CBR, the operator is free to use synonyms in the Robotic Control                 Domain Knowledge
utterances and words can be added or deleted without reduc-       System
ing the performance of the system, hence the operator does
not have to learn and remember exact formulations.         Robot                             Discourse Model

  Planning adds the functionality to combine cases to solve or
new, unseen problems, hence the information already known
to the system can be used in new, creative ways. Planning also Simulator
makes CEDERIC understand implicit commands and solve
problems on its own. For example it is very useful when the
system realizes some of the preconditions for performing a      Figure 2: Architecture of CEDERIC.
command from the operator, are missing. Using planning,
CEDERIC can automatically perform some actions to be in a
state that satisﬁes the preconditions.                logue manager is connected to a Speech and Graphics User
  Figure 1 gives an implemented and working example dia- Interface (SGUI). SGUI contains a map of the area where the
logue between an operator and CEDERIC. It is nontrivial in UAV is situated and functionality for the operator to choose to
several aspects and illustrates the beneﬁts of the CBR/CBP use either speech or text for the input to the dialogue system.
                                                      The system Nuance1 is used as the speech recognizer, and the
approach. The ﬁrst command from the operator activates a            2               3
case in the case base that moves the on-board camera in the systems Festival and BrightSpeech are used for speech gen-
right direction to be able to view the front facade of the men- eration. Nuance and BrightSpeech are commercial products.
tioned building. As the helicopter is still on the ground at CEDERIC is also connected to the robotic control system of
the start of the dialogue, this command can not be directly the actual helicopter or to a simulator that simulates the robot
performed, hence the system has to search all its knowledge and the environment.
and experiences to solve the problem and fulﬁll the precondi- 1http://www.nuance.com/
tions of being in a position where the front facade of the main 2http://www.cstr.ed.ac.uk/projects/festival/
building can be viewed in the camera. The solution of taking 3http://www.brightspeech.com/

                                                IJCAI-07
                                                  1601  CEDERIC consists of a lexicon,acase base, domain    3.1  Dialogue Case
knowledge,adiscourse module and a case-base manager.  A dialogue case contains the plan for solving a particular kind
  The lexicon is used to classify the words in the user ut- of problem. It consists of three parts:
terance according to some predetermined word classes. The
classiﬁed utterance is matched against cases in the case base • A Problem Part that describes what problem the case is
by the case-base manager. The discourse module is respon- solving. The problem is usually described by the words
sible for maintaining a discourse model of the dialogue in in the input phrase used by the operator.
order to be able to interpret the operator’s sentences. The • A Discourse Part that describes how the discourse
discourse model helps the system to interpret references that model should be updated according to the problem.
may refer to sentences earlier in the dialogue, to keep track of •
different ongoing dialogues, and to decide if it is a good mo- A Plan Part containing a plan that solves the problem.
ment to send a phrase to the operator or not. The domain  The plan consists of references to act cases that them-
knowledge contains an ontology of the world as the robot  selves are cases in the case base.
knows it and a categorization of the world items. The purpose
                                                      3.2  Act Case
is twofold. It serves as a world representation which gives
CEDERIC knowledge about which buildings there are in the An act case is either a dialogue act, a speech act or an internal
known world, what kinds of buildings they are, where they act. Arranged in plans, they build up the functionality of the
are located, and their attributes such as color and facade ma- dialogue manager.
terial. It also gives CEDERIC fundamental knowledge about Act cases consist of the following parts:
categorization, e.g., which items can be called buildings in • A Problem Part that describes which preconditions that
the dialogue and which can not.                           have to be met to be able to execute the act case, and the
  Regardless of whether a speech recognizer is used or not, effects of the act case.
a sentence from the operator arrives to CEDERIC in plain
                                                        •
text format. It is classiﬁed and processed in the CBR engine. A Solution Part containing a solution to the problem as
CEDERIC returns either a new phrase in text format to be  a higher order function and the parameter values used
sent to the speech generator, or a request to the robotic control when the solution was executed.
system.                                               The preconditions and the effects of an act case are used for
                                                      planning and validation purposes. To be able to construct a
3  The Case Base                                      plan in advance that probably will hold when executed, some
The actual dialogues are saved in the case base. The initial knowledge of each act is necessary. The precondition part
functionality is hand crafted, but more functionality is added holds information of what has to be known before the act can
automatically when the system is used. There are two basic be executed, and the effect part holds information of what
case structures in the case base: dialogue cases and act cases. result the act can produce. The effects may then serve as pre-
Figure 3 shows an example of a dialogue case for the utter- conditions for other acts further on in the plan. Each act may
ance Fly to  the hospital   and an example of the ﬁrst produce several different types of results depending on cir-
act case in the plan.                                 cumstances that are only known at execution time, therefore
                                                      the effects part must contain information about each possi-

      Dialogue Case Example                           ble result type so that the planner can take different possible
                                                      outcomes into account.
          Fly-to-plan                                   The solution function constructs the actual result, such as
          Problem                                     a message to be sent to the helicopter control system, or per-
        fly-command: fly
        to-word: to                                   forms some internal computations.
        article-word: the
        building: hospital

                                 Act Case Example     4   Case-Base Manager
         Discourse

        Save "fly to the         Get-reference-id     The case-base manager is the engine of CEDERIC. It man-
        hospital"
        on the discourse.                             ages different ongoing dialogues and executes the best ﬁtting
                                  Problem             act case. If there are open and ongoing dialogues, the new
                                 Preconds: A unique 
         Act Cases
                                 reference id         input is ﬁrst seen as a continuation of one of the open dia-
       get-reference-id
                                 Effects: A position 
       get-building-position                          logues. If it does not ﬁt as a continuation, it is seen as the
       altitude-question
       altitude-response           Solution           start of a new dialogue, and a suitable, similar dialogue case
       altitude-result           A function that  gets is searched for, and the plan is executed. The dialogue han-
       fly-to-position           the position given
       report-flight-result      the id               dling allows dialogue topic switches, where the operator may
                                                      start a new dialogue before ending an old one, or return to an
                                                      old dialogue, without confusing the system.
Figure 3: An example of a dialogue case and a close up on 4.1 Syntactic Categorization of Words
the ﬁrst act case in the plan.
                                                      The utterance from the operator enters the system as a sen-
                                                      tence in text format. Each word in the utterance are cate-

                                                IJCAI-07
                                                  1602            gorized using a lexicon. An entry may for example look as how much the sequences differ in length. A low value on the
            follows, in the KM4 notation [Clark and Porter, 2004]: uncovering function is prioritized.
            (school   has                                           When the cases are ranked in order of priority, the case with
              (instance-of    (building))                         the highest priority is chosen unless it does not have lower
              (plural   (schools))                                similarity value than a threshold. In that case, no similar case
              (weight   (2)))                                     was found.
                                                                    If a similar case is found, the plan is validated before exe-
            where school is modeled to be an instance of the category cution. In the validation phase, the preconditions of each act
            building. It also has the attribute plural which is set case are checked. They can be fulﬁlled by words from the
            to schools, and a weight which is set to 2. The weight is input phrase or by effects from previously checked acts in the
            used in the similarity function and is an indication of how im- plan.
            portant the word is for the comprehension of an utterance. A
            word may be ambiguous and belong to several different cat- 5 Planning
            egories depending on the semantics of the utterance. In that
            case, the word is categorized with all the matching categories, Planning is used in two different phases in CEDERIC:
            and the similarity function decides which meaning to use. A • When there is a plan fault in the plan validation process
            word that is not present in the lexicon obtains the category of the most similar dialogue case, i.e., when the precon-
            no category.                                              ditions of the act cases in the plan are not met.
                                                                    • When there is a plan fault in the execution of a plan.
            4.2  Case Retrieval
                                                                  The same replanning routine, based on case-based planning
            In the retrieval phase, the utterance is compared with the (CBP) methods, is used in both cases. In CBP, different plans
            problem part of each dialogue case, and a similarity value are combined to form a new plan that can serve as a solution
            is computed. The cases are then priority-ordered using the to a new problem. In CEDERIC, two plans can be combined
            similarity value. The similarity value is based on how well to form a new plan, where one of the original plans works
            each word in the utterance matches the words in the problem as the foundation on which the new plan is constructed. The
            formulation and the weight of each word according to the lex- preconditions and effects in the act cases are used in the re-
            icon. The case retrieval phase is only executed if the input planning process to make sure the newly constructed plan is
            utterance is a start of a new dialogue, i.e., there are no old or valid. Figure 4 shows a schematic illustration of a planning
            ongoing dialogues where the utterance ﬁts as a continuation. problem and its solution. When a plan fault is encountered,
              To be more speciﬁc, the similarity value for each dia-
            logue case is computed using the following formula, where
            wc means the sequence of words in the problem part of the
            case and wi means the sequence of words in the input from
            the operator:                                                               Plan fault

              Similarity = points(wc,wi) − uncovering(wc,wi)
                                                                        Append to construct new plan Fetch repair candidate plans
            where
                              points(wc,wi)=


                                                                                   Select best repair plan
                       class − value(wx,wy) × word − weight(wy)

            wx∈wc wy ∈wi
                                    ⎧
                                       3
                                    ⎨⎪    if the words are equal
                                       2  if the words are          Figure 4: A schematic view of replanning in CEDERIC.
             class − value(wx,wy)=
                                    ⎩⎪    classiﬁcation similar
                                       0  otherwise               the effects of the previous act cases in the plan, or the results
                                                                  if it was an execution plan fault, are sent to the replanning
              Two words, w1 and w2, are classiﬁcation similar if either
                                                                  routine together with the rest of the plan, i.e., the plan where
            w1 is equal to the classiﬁcation of w2, the classiﬁcation of
                                                                  the act case that caused the fault is the ﬁrst item. Other plans
            w1 is equal to w2, or the classiﬁcation of w1 is equal to the
                                                                  in the case base are searched to ﬁnd a plan or part of a plan
            classiﬁcation of w2.
                                                                  that is valid to execute given the preconditions and results al-
              When two cases have the same similarity-value they are
                                                                  ready obtained. All such repair candidate plans are examined
            subprioritized using the uncovering function which indicates
                                                                  to ﬁnd a plan sequence that can be merged with the original
              4The language KM (the Knowledge Machine) is a frame-based plan to create a new valid plan, that is, to ﬁnd a plan sequence
            knowledge representation language used in CEDERIC both for rep- to execute that can produce the information needed to be able
            resenting the case base, the lexicon, the domain knowledge, and the to execute the item that caused the plan fault. If several such
            discourse model.                                      plans are found, the shortest one is chosen.

                                                            IJCAI-07
                                                              1603  If no valid plan is found, the ﬁrst act in the original plan different problems. Using only CBR, the system could solve
is removed and the algorithm tries again to ﬁnd new, partly at least another 30 similar but not identical problems. Using
matching plans to be used to repair the original plan, but this CBP, the system could solve 8 additional problems that could
time the goal it to be able to satisfy the preconditions of the not be solved with CBR techniques only.
next act case in turn in the original plan. In this manner, parts
of the original plan are replaced by parts of another plan. The 7.1 User Tests
newly found plan sequence is then linked back to the origi- CEDERIC has been tested in user tests, together with the
nal plan. Together with the already checked or executed act SGUI user interface and simulator. In one test, ﬁve persons
cases, the newly created plan consists of a sequence from the without previous experience of CEDERIC were used. A sim-
foundation plan, a sequence from a repair candidate plan, and ple scenario including ﬁve missions and a model of the world
then again a sequence from the foundation plan. If it was im- where the helicopter is situated was given to each test person
possible to link back to the original plan, the planning routine before the test began. The missions were described in such a
halts with a failure message. In this way, the goal of the plan- manner that they did not reveal the actual phrases that should
ning routine is exchanged during the planning attempts and be used to solve them. The goals of the missions were for
the routine explores more ways of solving the problem. example to move the helicopter to a given position indicated
  The revised plan may again obtain a plan fault when exe- by a building or to move it to a certain altitude.
cuted, and it is then repaired using the same replanning rou- A reference test was also performed where ﬁve persons,
tine, but the system has to make sure it does not repair the plan different from the ones that tested the original system, were
with a solution that has been tested and failed previously. To testing a stripped baseline version of CEDERIC. The test pro-
avoid such cycles, the new plan is compared with the execu- cedure, including the order in which the missions was per-
tion history, and the new plan has to be unique in some sense formed, was identical to the test procedure used in the test
to be a promising repair plan.                        of CEDERIC. In the baseline version, the similarity function
                                                      only accepted utterances where the word categories, the order
6  Case Retention                                     of the words in the utterance, and the length of the utterance
When a new problem is not identical to the problem part of were identical to the matching case. The new experience was
the plan case that was used for solving it, or the plan was not not saved in the case base and the planning algorithm was
identical with the plan of the similar case, and the execution removed. To be able to use the same test scenario, some ad-
of the problem was successful, the problem and solution are ditional cases that in the original version demanded planning
saved as a new case in the case base. The new cases increase (e.g. sub-dialogue due to the need of clarifying questions)
the case base and the new experiences can be used to solve had to be added to the case base.
other problems in the future. A new problem and solution Every test person that tested CEDERIC completed the mis-
can differ from the cases used to solve it if one or more of the sions successfully. No one out of the ﬁve test persons that
following has happened:                               tested the baseline system succeeded with mission 4. The re-
                                                      sults of the tests are shown in Figure 5. The large difference
  • One or more of the words in the input are not identical to

    the words in the problem part of the dialogue case. They 27,5
    are only classiﬁcation similar.                      25
                                                        22,5
  • One or more of the words in the input are added or   20
                                                        17,5
                                                                                             Baseline System
    deleted from the words in the dialogue case, but the 15
                                                                                             CEDERIC
    plans are identical to each other.                  12,5
                                                         10
  • The plan has been replanned in the plan check phase. 7,5
                                                         5
  • The plan has been replanned in the plan execution phase. 2,5
                                                         0
In those cases, a new plan case with corresponding act cases Mission 1 Mission 2 Mission 3 Mission 4 Mission 5
are created and stored in the case base.
                                                      Figure 5: The result of the user test where the y-axis is the
7  Tests and Results                                  average number of turns used to complete each mission.
Using CBR, it is possible to solve similar problems as the
ones described in the case base, by adapting the solution to between the number of turns needed to complete each of the
the most similar problem stored in the case base. This ap- ﬁve missions using CEDERIC compared to the number of
proach is mainly used in CEDERIC to understand and react turns needed to complete (or fail due to the test person giving
correctly to utterances where some of the words in the utter- up trying) the missions using the baseline system indicates
ance are missing, where additional words are added, or where that CBR and CBP signiﬁcantly improves the usability of a
some of the words are exchanged to synonyms that may be dialogue system.
unfamiliar to the system. In those cases where CBR methods The suggested formulations, that was not understood by
alone fail, CBP is used to combine experiences from several CEDERIC at the time of testing, was easily implemented af-
different cases to ﬁnd a solution to a new problem.   ter the entire test for all test persons were performed. Hence,
  In a test performed manually, the performance of the sys- the system could be improved using the dialogue collected
tem has been tested with a case base that initially contained 22 from the tests.

                                                IJCAI-07
                                                  1604