                      Exploiting Independence in a Decentralised and
                              Incremental Approach of Diagnosis

                 Marie-Odile Cordier                                Alban Grastien∗
             University of Rennes1 / Irisa                      National ICT Australia
                   Rennes – France                               Canberra – Australia
                    cordier@irisa.fr                         alban.grastien@nicta.com.au

                    Abstract                            A problem, which is far less considered, is the size of
                                                      the diagnosis itself. However, it can also be a problem, es-
    It is well-known that the size of the model is    pecially when dealing with a long-lasting ﬂow of uncertain
    a bottleneck when using model-based approaches    observations as remarked in [Lamperti and Zanella, 2003].
    to diagnose complex systems. To answer this       We deﬁne in this paper two independence properties (state-
    problem, decentralised/distributed approaches have independence and transition-independence)andshowthat
    been proposed. Another problem, which is far less they make it possible to get a decentralised representation of
    considered, is the size of the diagnosis itself. How- the diagnosis without any loss of information. When the di-
    ever, it can be huge enough, especially in the case agnosis is performed on a long-lasting temporal window, the
    of on-line monitoring and when dealing with un-   transition independence property, which expresses the con-
    certain observations. We deﬁne two independence   currence between subsystems, has little chance of being satis-
    properties (state and transition-independence) and ﬁed. The idea then is to slice the diagnosis period into smaller
    show their relevance to get a tractable represen- periods and to compute the diagnosis in an incremental way.
    tation of diagnosis in the context of both decen- The problem which appears is that the slicing generally re-
    tralised and incremental approaches. To illustrate moves the state-independence property. The solution we ﬁ-
    the impact of these properties on the diagnosis size, nally propose is to enrich the representation with an abstract
    experimental results on a toy example are given.  description of the diagnosis trajectories and show that it al-
                                                      lows us to keep the beneﬁts of the transition-independence
1  Introduction                                       based decentralised representation.
                                                        After preliminaries in Section 2, two independence prop-
We are concerned with the diagnosis of discrete-event sys- erties (state and transition-independence) on automata are
tems [Cassandras and Lafortune, 1999] where the system be- deﬁned in Section 3. In Section 4, the decentralised ap-
haviour is modeled by automata. This domain is very active proach is proposed and the decisive role played by the state-
since the seminal work by [Sampath et al., 1996].Itsaimisto independence property in the diagnosis computation is high-
ﬁnd what happened to the system from existing observations. lighted. Then it is shown how to take advantage of the
A classical formal way of representing the diagnosis prob- transition-independence property to get an efﬁcient represen-
lem is to express it as the synchronised product of the system tation of the diagnoses. The incremental computation and the
model automaton and an observation automaton. This formal use of an abstract representation is considered in Section 5.
deﬁnition hides the real problem which is to ensure an efﬁ- To illustrate the impact of our proposal on the diagnosis size,
cient computation of the diagnosis when both the system is experimental results on a toy example are given in Section 6.
complex and the observations possibly uncertain.
  It is now well-known that the size of the system model
is a bottleneck when using model-based approaches to di- 2 Preliminaries
agnose complex systems. To answer this problem, decen- We suppose in this paper that the behavioural models are de-
tralised/distributed approaches have been proposed [Pencol´e scribed by automata. We thus begin by giving some deﬁni-
and Cordier, 2005; Lamperti and Zanella, 2003; Benveniste tions concerning automata (see [Cassandras and Lafortune,
et al., 2005; Jiroveanu and Bo¨el, 2005]. Instead of being ex- 1999]). Then, we recall the diagnosis deﬁnitions and state
plicitly given, the system model is described through its com- some hypotheses.
ponent models in a decentralised way. The global diagnosis
is computed by merging local diagnoses in order to take into 2.1 Automata, synchronisation and restriction
account the synchronisation events which express the depen-                 (Q, E, T, I, F )   Q
dency relation which may exist between the components. An automaton is a tuple           where   is the set
                                                      of states, E the set of events, T the set of transitions (q, l, q)
  ∗This work was mainly made when the author was Ph.D student with l ⊆ E,andI and F the sets of initial and ﬁnal states.
at University of Rennes1/Irisa, Rennes, France.       For each state q ∈ Q, (q, ∅,q) ∈ T .

                                                IJCAI-07
                                                   292  A trajectory is a path in the automaton joining an initial tem is represented by an automaton. t0 corresponds to the
state to a ﬁnal state. The set of trajectories of an automaton starting time and tn to the ending time of diagnosis. More de-
A is denoted Traj(A). In the following, we consider trim tails can be found for instance in [Pencol´e and Cordier, 2005].
automata. The trim operation transforms an automaton by Deﬁnition 1 (Model).
removing the states that do not belong to any trajectory. The model of the system, denoted Mod, is an automaton.
Example: Let us consider the ﬁrst trim automaton in Fig-
ure 1. The initial states are represented by an arrow with no The model of the system describes its behaviour and the
origin state, and the ﬁnal states by a double circle. Then, trajectories of Mod represent the evolutions of the system.
                                                                           Mod
 {a1}  {a2,c1} {c3}  ∅                                The set of initial states I is the set of possible states at
1 −→ 3  −→   3 −→  4 −→ 4 is a trajectory.
                                                      t0. We suppose as usual that F Mod = QMod (all the states
                      a2,c1                           of the system may be ﬁnal). The set of observable events is
                                                               Mod     Mod
                      a       c         a             denoted E    ⊆  E    .
                  1    1   3   2   561                         Obs
    A1                                                  Let us turn to observations which can be uncertain and are
                  2          c     4                  represented by an automaton, where the transition labels are
                      c       3
                      2                                                 EMod
                                                      observable events of Obs .
            c        b1       c
        1   1   3       5   2   6                 Deﬁnition 2 (Observation automaton).
                                             A2       The observation automaton, denoted Obs, is an automaton
                          
          b2     2        4                           describing the observations possibly emitted by the system
                    c2                                during the period [t0,tn].
                                 b1       c2
                       a2,c1 33     35      56       The diagnosis of a discrete-event system can be seen as the
                   31                     a          computation of all the trajectories of the model that are con-
              a1          b2                1         sistent with the observations sent by the system during the
                   a1,b2                                 [t0,tn]
 A1 ⊗ A2   11               32                66      period      . The automaton deﬁned as the synchronisation
                                  c2                  of the model and the observations represents all these trajec-
              b                           a1
               2   12   a1          54      64     tories.
                                                      Deﬁnition 3 (Diagnosis).
                                                                           Δ
    Figure 1: Two automata and their synchronisation  The diagnosis, denoted , is a trim automaton such that
                                                      Δ=Mod    ⊗ Obs.

  The synchronisation operation on two automata A1 and 3  Independence properties
A2 builds the trim automaton where all the trajectories of
both automata which cannot be synchronised according to In this section, we present two independence properties that
the synchronisation events (i.e E1 ∩ E2) are removed. For- enable a decentralised (compact yet sufﬁcient) representation
mally, given two automata A1 =(Q1,E1,T1,I1,F1) and    of the diagnosis presented in the next section.
A2 =(Q2,E2,T2,I2,F2),thesynchronisation   of A1 and     Let us ﬁrst deﬁne the state-independence property which
                                                                                           A
A2, denoted A1 ⊗ A2, is the trim automaton A = Trim(A ) concerns the decomposition of an automaton into two au-
                                                          A1     A2
with A =(Q1 ×Q2,E1  ∪E2,T  ,I1 ×I2,F1 ×F2) such that: tomata   and   .
                                       
T  =  {((q1,q2),l,(q1,q2)) |∃l1,l2 :(q1,l1,q1) ∈ T1∧  Deﬁnition 4 (Decomposition of A).
       
(q2,l2,q2) ∈ T2 ∧ (l1 ∩ (E1 ∩ E2)=l2 ∩ (E1 ∩ E2)) ∧   Two automata A1 and A2 are said to be a decomposition of
l = l1 ∪ l2}.WhenE1 ∩ E2 = ∅ (no synchronising events), an automaton A iff A =(A1 ⊗ A2)[I] where I are the initial
the synchronisation results in the concurrent behavior of A1 states of A.
   A                        A     A                          
and  2, often called the shufﬂe of 1 and 2. The number of Let A = A1 ⊗ A2. Note that we do not require that A =
states of the shufﬂe is the product of the number of states of A,butthatA is a super-automaton (i.e an automaton that
A     A
 1 and  2 and no trajectory is removed.               contains all the trajectories of A and possibly more). The
Example: Figure 1 gives an example of synchronisation. The reason is that, when decomposing A into A1 and A2, the links
                        c
synchronising events are the i events.                existing between the initial states of A1 and A2 can be lost.
                                                 I                                                 
  The restriction operation of an automaton removes from We thus have Q ⊆ Q , I ⊆ I ,andF ⊆ F where A  =
all the initial states which are not in the speciﬁed set of states. (Q,E,T,I,F) and A =(Q, E, T, I, F ).
Due to the trim operation, all the states and transitions which The state-independence property is a property of a decom-
                                   Q                                                         
are no longer accessible are removed from . Formally, given position A1 and A2 which ensures that A = A .
an automaton A =(Q, E, T, I, F ),therestriction of A by the
        I        A[I]                   (A)        Deﬁnition 5 (State-independence decomposition wrt A).
states of , denoted   , is the automaton Trim  with                A     A
A =(Q, E, T, I ∩ I,F).                              Two automata  1 and  2 are said to be a state-independent
                                                      decomposition wrt A iff A = A1 ⊗ A2.
2.2  Diagnosis                                        Property 1:IfA1  and A2 have both a unique initial state,
Let us recall now the deﬁnitions used in the domain of and if they are a decomposition of A,thenA1 and A2 are a
discrete-event systems diagnosis where the model of the sys- state-independent decomposition wrt A.

                                                IJCAI-07
                                                   293  Let us turn now to the transition-independence property                 local diagnosis
                                                      {Mod1,...,Modn}                    {Δs  ,...,Δs }
which states that two (or more) automata do not have any                                     1       n
transition labeled with common synchronisation events.  synchronisation                    merging
Deﬁnition 6 (Transition-independence).
A1 =(Q1,E1,T1,I1,F1)    and A2 =(Q2,E2,T2,I2,F2)                            diagnosis
                                                            Mod                               Δ
are transition-independent (TI) iff every label l on a transition
of T1 or T2 is such that l ∩ (E1 ∩ E2)=∅.
                                                       Figure 2: Principle of the decentralised diagnosis approach
  Two transition-independent automata are concurrent au-
tomata and their synchronisation is equivalent to a shufﬂe op-
eration (see Section 2). Moreover, we have :            It is clear that, rather than directly merging all the subsys-
               A      A
Property 2:Let  1 and  2 be two transition-independent tems diagnoses together, it is possible to compute the global
                                       A
automata and state-independent automata wrt . The states diagnosis by successive synchronisation operations. Let s1
                              A
(resp. initial states, ﬁnal states) of correspond exactly to and s2 be two disjoint subsystems (possibly being compo-
the Cartesian product of the states (resp. initial states, ﬁnal nents) and let s12 = s1  s2 be the subsystem that contains
states) of A1 and A2.
                                                      exactly s1 and s2. The subsystem diagnosis Δs12 can be com-

                                                      puted as Δs12 =Δs1 ⊗ Δs2 . The diagnosis of the system is

4  Improving diagnosis representation in a            equivalently obtained by replacing Δs1 ⊗ Δs2 by Δs12 .We
                                                          Δ=Δ       ⊗ Δ   ⊗ ...⊗ Δ
   decentralised approach                             have       s12   s3         sn .
In this section, we ﬁrst highlight the role of state-   Algorithm 1 computes the system diagnosis by starting
independence property when computing diagnoses in a de- from the component local diagnoses and merging them until
centralised way. We propose then an efﬁcient diagnosis rep- ExitLoopCondition is satisﬁed. In this case, ExitLoopCondi-
resentation based on transition-independence property. tion checks that all pairs of diagnoses have been merged.
4.1  The decentralised approach and the role of       Algorithm 1 Computing diagnoses in a decentralised way
     state-independence
                                                        input: local diagnoses {Δs1 ,...,Δsn }

The global model of a real-world system is too large to dΔ={Δs1   ,...,Δsn }
be explicitly built. To answer this problem, decentralised / while ¬ ExitLoopCondition do

distributed approaches have been proposed [Lamperti and   Choose Δs1 , Δs2 ∈ dΔ
Zanella, 2003; Pencol´e and Cordier, 2005; Benveniste et al., s = s1  s2

2005; Jiroveanu and Bo¨el, 2005]. In this article, we consider Δs =Δs1 ⊗ Δs2

the decentralised approach of [Pencol´e and Cordier, 2005]. dΔ=(dΔ  \{Δs1 , Δs2 }) ∪{Δs}
  The idea (see Figure 2) is to describe the system behaviour end while
in a decomposed way by the set of its subsystems mod-   return: dΔ
els. The so-called decentralised model is thus dMod =
{Mod1,...,Modn}  where Modi is the behavioural model of
the subsystem (possibly a component) si. The decentralised 4.2 An efﬁcient diagnosis representation based on
model is designed as a decomposition of the global model   transition-independence
Mod. It is generally assumed that the global model has a The diagnosis Δ built with a decentralised approach is equal
unique initial state and that the subsystems models also have a to the synchronisation Mod ⊗ Obs. It can be expected Obs
unique initial state. They are thus a state-independent decom- sufﬁciently contraints the behaviours of the system to signif-
position wrt Mod and the global model can thus be retrieved,                   Δ
               =       ⊗ ...⊗                         icantly reduce the size of the compared to Mod.However
if needed, by Mod Mod1        Modn.                   Δ  can still be large, especially because merging concurrent
  The observations Obs can be decentralised as follows:
d    =  {    ,...,    }                               diagnoses corresponds to computing the shufﬂe of these diag-
 Obs     Obs1     Obsn  such that Obsi contains the ob- noses. It is why we propose to avoid these expensive shufﬂes
servations from the subsystem si and such that: Obs =
    ⊗  ...⊗                                           by representing the system diagnosis as a set of transition-
Obs1        Obsn.                                     independent subsystem diagnoses.
  Given the local subsystem model Modi and the local sub-
system observations Obsi, it is possible to compute the lo- Deﬁnition 7 (Decentralised diagnosis).
                                                                            dΔ
cal diagnosis Δs = Modi ⊗ Obsi. These diagnoses rep-  A decentralised diagnosis is a set of subsystem diagnoses
              i                                       {Δ   ,...,Δ  }         Δ
resent the local subsystem behaviours that are consistent s1     sk  such that si is the diagnosis of the sub-
                                                            s  {s ,...,s }                         Γ
with the local observations. It was shown in [Pencol´eand system i, 1   k  is a partition of the system , and
                                                      ∀i, j ∈{1,...,k} i = j ⇒  Δ      Δ
Cordier, 2005] that the set of local diagnoses is a decom-            ,           si and  sj are transition-
position of Δ. As they all have a unique initial state, it independent.
is also a state-independent decomposition of Δ.Itisthen As seen before, a  decentralised diagnosis dΔ=
                                                      {Δ   ,...,Δ  }
possible to directly compute the global diagnosis of the sys- s1 sk   is a  state-independent decomposition
tem by synchronizing the subsystem diagnoses as follows: of the global diagnosis. We get an economical represen-

Δ=Δs1    ⊗ ...⊗ Δsn . This synchronisation operation of tation of the global diagnosis which can be computed, if
subsystem diagnoses is often also called a merging operation. needed, by synchronising all the subsystem diagnoses, by

                                                IJCAI-07
                                                   294Δ=Δ     ⊗ ...⊗ Δ
      s1        sk , which, due to Property 2, corresponds subsystem diagnoses similar to Section 4. However, con-
to a shufﬂe operation. Its ﬁnal states can be obtained by a trary to Section 4, the unique initial state hypothesis can no

simple Cartesian product on the ﬁnal states of all Δsi (see longer be made and thus the state-independence decomposi-
Property 2).                                          tion property can no longer be considered as satisﬁed.
                                                            Ii
  Algorithm 1 can be used to compute the decentralised di- Let be the set of initial states on the system for the tem-
                                                                  Wi        Ii
agnosis from the local (component) diagnoses by changing poral window .Given  , the set of initial states of a sub-
                                                            s                      Ii   s          Ii ↓ s
ExitLoopCondition into ∀Δs , Δs ∈ dΔ,  Δs  and Δs     system  is called the projection of on and denoted .
                         1   2           1       2                    (Ii ↓ s) × (Ii ↓ s) ⊇ Ii ↓ (s  s)
are transition-independent. Until all pairs of diagnoses are Let us remark that                      .Al-
transition-independent, the algorithm chooses two transition- gorithm 1 can be modiﬁed as presented in Algorithm 2 to
                                                                  dΔi
dependent diagnoses and merges them.                  compute a set    of transition-independent subsystems di-
                                                      agnoses.
  An important point to remark is the decisive role of the
state-independence property of the decomposition which, Algorithm 2 Computing transition-independent diagnoses in
combined to the transition-independence property, allows us case of non state-independence
to get an efﬁcient representation of the system diagnosis. The
                                                        input: local diagnoses {Δs1 ,...,Δsn } + the set of initial
state-independence property comes directly from the unique    i
                                                        states I
initial state property of the system and subsystems models.
                                                        dΔ={Δs1   ,...,Δsn }

                                                        while ∃s1,s2   :Δs1    and Δs2  are not transition-
5  Improving diagnosis representation in a              independent. do
                                                          s = s1  s2
   decentralised and incremental approach                                   i
                                                          Δs =(Δs1  ⊗ Δs2 )[I ↓ s]
In this section, we propose to build the diagnosis on succes-
                                                          dΔ=(dΔ    \{Δs1 , Δs2 }) ∪{Δs}
sive temporal windows, to beneﬁt from the short duration end while
independences. We then show that the state-independence return: dΔ
is generally no longer satisﬁed, and present in the last part
the abstraction operation that enables us to deal with state- Let us now consider the transition-independent diagnoses
dependent subsystems.                                      i                                i
                                                      of dΔ and more precisely their ﬁnal states FΔ . The prob-
                                                                                             sj
                                                      lem is that, due to the loss of the state-independence property,
5.1  Incremental diagnosis                              i
                                                      F  is only a subset of FΔi × ...× FΔi . Let us illustrate the
In the previous section, we assumed that the diagnosis was                 s1         sk
                                                      problem on an example (Figure 3).
computed on a unique period. This means that the obser-
vation automaton represents the observations emitted dur-
ing [t0,tn]. The problem of this approach is that long pe-
riods transition-independent behaviours are infrequent, be-                            OF
cause each component eventually interacts with most of its         f    OF 
neighbours. Thus, all the local diagnoses will eventually be        1
merged in a huge global diagnosis. For this reason, it can be OO
interesting to divide the diagnosis period into temporal win-       f2  FO
dows as presented in [Pencol´e and Cordier, 2005], to beneﬁt                           O     F 
from short duration independent behaviours.
  Let us consider that the diagnosis Δi−1 of [t0,ti−1] was
built and that the set of ﬁnal states of this diagnosis is
 i−1                         i                        Figure 3: Example of loss of information in a naive decen-
FΔ  . Given the observations Obs of the temporal window tralised representation of the incremental diagnosis
[ti−1,ti], it is possible to compute the diagnosis of this tem-
               Δi =(     − ⊗    i)[F i−1]        −
poral window by:     Mod     Obs   Δ    where Mod     Example  Figure 3 deals with the diagnosis of two compo-
is the system model Mod where all the states are considered nents which can be either in a Ok state or a F aulty state.
as initial states. The trajectories consistent with the observa-
                 [t ,t ]                  Δ           The ﬁgure presents a two-windows diagnosis, each in a box.
tions for the period 0 i (i.e the trajectories of i if this During the ﬁrst window (Figure 3, left), one of the two com-
automaton were built) can be retrieved by the concatenation
                   Δ                      Δi          ponents failed but it is not possible to determine which com-
of the trajectories from i−1 and the trajectories of . It can ponent did. The initial states of each component at the be-
also be proved that the ﬁnal states of Δi are the ﬁnal states of
 i                                                    ginning of the second window are obtained by projecting the
Δ . It is thus possible to incrementally add the observations                              O     F
  [t ,t ]                                             ﬁnal states of the ﬁrst window and they are and for one
of i  i+1 and compute the diagnosis.                  component and O and F  for the other one. Nothing hap-
                                                      pened during the second window. Since the local diagnoses
5.2  Loss of the state-independence property          are transition-independent, the algorithm proposes the two lo-
Our goal is to use a decentralised computation based on a de- cal diagnoses (top and bottom in Figure 3, right) but it can be
centralised model and to represent the diagnosis of the tempo- seen that the links between the initial states were lost during
            i
ral window W =[ti−1,ti] by a set of transition-independent the projection. The decomposition of the global diagnosis is

                                                IJCAI-07
                                                   295not state-independent. We have F 2 ⊂{O, F}×{O,F}.   Algorithm 3 Computation of the abstract decentralised diag-
To get the exact ﬁnal states F 2, one solution would be to syn- nosis adΔi
chronise the local diagnoses in conjunction with the restric- input: local transition-independent diagnoses dΔi =
tion operation on the set of ﬁnal states of the ﬁrst window as {Δi ,...,Δi }  Ii
                                                           s1      sk +theset   of initial states
argument, which we want to avoid.                       adΔi =  {aΔi  |∃Δi  ∈ dΔi : aΔi =     (Δi )}
                                                                   sj     sj          sj  Abst   sj
                                                        while ∃aΔi ,aΔi  ∈ adΔi         aΔi      aΔi
5.3  TI + abstract representation                                s1    s2       such that  s1 and   s2 are
                                                                                 i      i   i
                        i                               not state-independent wrt (aΔ ⊗ aΔ )[I ↓ s1  s2] do
To obtain the ﬁnal states F we propose, instead of merg-                         s1     s2
                               dΔi                        s = s1  s2
ing the state-dependent diagnoses of , to merge their ab- aΔi  =(aΔi   ⊗ aΔi )[Ii ↓ s]
stract representations, which is much more efﬁcient. We thus s      s1     s2
                                                          adΔi =(adΔi  \{aΔi   ,aΔi }) ∪{aΔi }
propose to enrich the set of transition-independent diagnoses                s1   s2        s
with the abstract representation of the state- and transition- end while
                                                               adΔ
independent diagnoses.                                  return:
The information required relies on the initial and ﬁnal states
only. Thus, we deﬁne an abstraction that keeps only the in- 6.1 System
formation that there exists a trajectory between an initial state The system to diagnose is a network of 14 interconnected
and a ﬁnal state.                                     components as presented in Figure 4.
Deﬁnition 8 (Abstraction).                                            2   4  6   8  10  12
Let A =(Q, E, T, I, F ) be a trim automaton. The abstrac-
tion of A, denoted Abst(A), is the (trim) automaton A =           1                       14
(I ∪ F, {e},T,I,F) where T  = {(q, {e},q) |∃traj =                 3   5  7   9  11  13
   l1     ln                            
q0 −→ ...−→  qn ∈ Traj(A) ∧ q0 = q ∧ qn = q }.
The following two properties can be easily proved.               Figure 4: Topology of the network
Property 3:LetA1  and A2 be two transition-independent
                  (A ) ⊗    (A )=     (A  ⊗ A  )
automata. Then, Abst 1  Abst  2    Abst  1    2 .       Each component has the same behaviour: when a fault oc-
Property 4:LetA1  and A2 be two transition-independent
                                                      curs, it reboots, sends a IRebooti observation and forces its
automata and let I be a set of states. Then, (Abst(A1) ⊗
   (A  ))[I]=    ((A  ⊗ A )[I])                       neighbours to reboot by sending them a reboot! message. A
Abst  2      Abst   1    2    .                       component can also be asked to reboot by one of its neigh-
  It is now possible to merge the abstract representations of bours. In this case, it enters into a waiting state W before
the state-dependent, transition-independent diagnoses as pre- rebooting and sends the IRebooti observation. In this state,
sented in Algorithm 3 until getting a set of state- and transi- it can be asked to reboot by another component (and sends
tion independent diagnoses. This result is called the abstract then the IRebooti observation). When the reboot is ﬁnished,
                                   i
decentralised diagnosis, and denoted adΔ . Given the prop- the component sends the observation IAmBacki and reen-
erties 3 and 4, we have the following result:         ters the state O.
                                                        The model is presented in Figure 5. The reboot! message
Proposition 1.
                     i                           i    indicates that reboot is sent to all the neighbours, and the re-
The set of ﬁnal states F is the set of ﬁnal states of adΔ ,
                                                      boot? message indicates that a neighbour has sent the reboot
i.e ΠΔ∈adΔi FΔ.
                                                      message to the component. So, for example, on component 1,
Let us deﬁne an extended decentralised diagnosis as follows : there are three transitions from state O to state W correspond-
Deﬁnition 9 (Extended decentralised diagnosis).       ingtoareboot?  message received respectively from one of
An extended decentralised diagnosis on Wi is a pair   its three neighbours 2, 3 and 14. They are respectively la-
(dΔi,adΔi) such that                                  beled by {reboot2→1, IReboot1}, {reboot3→1, IReboot1} and
                                                      {reboot14→1,IReboot1}.
  • dΔi is the decentralised diagnosis of the system on Wi,
  • adΔi is the abstract decentralised diagnosis on Wi.                      fault,reboot!,IReboot
                                  dΔi
  The transition-independent diagnoses provide the set               O       end,IAmBack    F
of trajectories during the temporal window Wi and the ab-      reboot?,
stract representation of state- and transition-independent di- IReboot     end,IAmBack
agnoses adΔi provides the set of ﬁnal states of the temporal                                reboot?
window Wi. It is thus a safe representation of the diagno-           W                      R
        i                                                                 start-reboot
sis on W . It can be used as shown in 5.1 to compute the
diagnosis on the whole period in an incremental way.               reboot?, IReboot         reboot?
6  Experiments                                                    Figure 5: Model of a component
We present the experimental results on a simpliﬁed case in-
spired by a real application on telecommunication networks. Let us remark that the decentralised modeling contains ex-

                                                IJCAI-07
                                                   296