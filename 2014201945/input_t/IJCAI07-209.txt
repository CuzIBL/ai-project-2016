                    Complexity of Pure Equilibria in Bayesian Games

             Georg Gottlob                 Gianluigi Greco                  Toni Mancini
         Computing Laboratory            Dip. di Matematica       Dip. di Informatica e Sistemistica
           Oxford University           Universit`a della Calabria Universit`a di Roma “La Sapienza”
         OX1 3QD Oxford, UK              I-87030 Rende, Italy            I-00198 Roma, Italy
    georg.gottlob@comlab.ox.ac.uk       ggreco@mat.unical.it          tmancini@dis.uniroma1.it

                    Abstract                          this is not true in the important case in which strategies are
                                                      forced to be pure [Gottlob et al., 2003]. In case of random-
    In this paper we make a comprehensive study of    ized strategies, the problem of computing an equilibrium was
    the complexity of the problem of deciding the ex- recently shown to be PPAD-complete, even for two-player
    istence of equilibria in strategic games with incom- games [Chen and Deng, 2006]; and, further results have been
    plete information, in case of pure strategies. In par- established for strategic games under various restrictions (cf.,
    ticular, we show that this is NP-complete in gen- e.g., [Gilboa and Zemel, 1989; Megiddo and Papadimitriou,
    eral Bayesian Games in Standard Normal Form,      1991; Papadimitriou, 1994b; Conitzer and Sandholm, 2003;
    and that it becomes PP-hard (and, in ﬁxed-precision Daskalakis and Papadimitriou, 2005]).
    scenarios, PP-complete), when the game is repre-
    sented succinctly in General Normal Form. Suit-     On the other hand, in this paper we consider games with
    able restrictions in case of graphical games that incomplete information (aka Bayesian Games) that have been
                                                                                        [             ]
    make the problem tractable are also discussed.    speciﬁcally introduced in the literature Harsanyi, 1968 to
                                                      account for uncertainties in the knowledge that the single
                                                      players have about the games and their counterparts. Indeed,
1  Introduction                                       in these games players’ payoff depends not only on the ac-
Game theory has a very general scope, encompassing ques- tions of the other players but also on their own private type,
tions that are basic to all of the social sciences, and offer- for which a probability distribution is a priori known.
ing insights into any economic, political, or social situation The equilibrium concept relevant for this kind of games is
that involves multiple players that have different goals and that of Bayesian Equilibrium, in which each player plays a
preferences. In its generality, game theory may be deﬁned as best response to the other players in expectation over their
the study of mathematical models of conﬂict and cooperation private types. The complexity of deciding the existence of
between intelligent rational decision-makers, cf., e.g., [My- a Bayesian Equilibrium in case of pure strategies (short:
erson, 1997]. Not surprisingly, in Artiﬁcial Intelligence the ∃PBE problem) has been recently investigated by Conitzer
framework of game theory has been immediately recognized and Sandholm [2003], who proved its NP-hardness for sym-
to be very appealing, being the means for an artiﬁcial agent metric two-players games, in the case where, for each player,
to act with rationality and intelligence when interacting with the utility function and the probability distribution over other
others. Additionally, game theory demonstrated its effective- players’ types are represented extensively as tables (called
ness in the recent results on algorithms for load balancing and Standard Normal Form (SNF) in Section 2). Moreover,
routing in large networks and the Internet, where it has been tractable classes of Bayesian Games have also been singled
extensively used for distributing the logic of the decision pro- out in [Singh et al., 2004], where an efﬁcient algorithm is
cesses among many nodes (cf., e.g., [Feldmann et al., 2003]). provided for ﬁnding approximate equilibria when the utility
  The most well known form of games studied in the litera- function of each player depends only on the actions and re-
ture is that of strategic games. In this context, the main solu- alized types of some neighbor players (cf. Graphical Normal
tion concept is that of equilibrium (called Nash equilibrium Form (GNF)), and when the kind of interaction formed by the
in games with complete information [Nash, 1951]). Equi- neighborhood relation is a tree.
libria model scenarios in which no player can improve his However, a complete picture of the complexity of Bayesian
utility by unilaterally changing his strategy, or equivalently, Games is still missing in the literature, both for pure and ran-
such that the strategy chosen by any player is the best re- domized strategies. As an example, it is not known what
sponse to the strategies chosen by the others. Any strategy happens if, unlike [Conitzer and Sandholm, 2003], the utility
which is not a best response indicates that the correspond- functions and the probability distributions are not explicitly
ing player is not acting rationally, because he could improve represented as tables (cf. General Normal Form (GenNF));
his utility by choosing a different one. Although the exis- and it has been left open in [Singh et al., 2004] if the tractabil-
tence of equilibria in strategic games is guaranteed, when the ity result holds for larger classes of games in GNF, e.g.,
so called randomized strategies are allowed (cf. Section 2), for games whose players interactions have tree-like structure.

                                                IJCAI-07
                                                  1294The aim of this paper is precisely to shed lights on these as- the action-proﬁle, and it is denoted by aˆ. As a consequence
pects, by focusing on the case of pure strategies. Our contri- of this choice, each player i receives a payoff of ui(aˆ).
butions are as follows:                                 These games are also called games with complete infor-
 £  In Section 3 we show that the result of Conitzer and mation, because players have all perfect information about
                                                                              [             ]
    Sandholm is tight, since ∃PBE is NP-complete, even if the game. Bayesian games Harsanyi, 1968 have been in-
    only one among the utility function and the probability troduced to account for situations in which such assumption
    distribution is represented as a table, for each player in cannot be made, since there may be information which is un-
    the game.                                         certain, or unobservable by some players. This uncertainty
                                                      is modelled by introducing unknown parameters, the types of
 £  We study ∃PBE on the class of games in GenNF, and the different players, into the utility functions.
    we show that the need of dealing with incomplete infor-
    mation has a strong impact on the intrinsic complexity of Deﬁnition 1 (Bayesian Game [Harsanyi, 1968]). A
                                                                    G
    the games. Indeed, we show that the problem is PP-hard, Bayesian Game consists of a set of players N and, for each
                                                             ∈
    which is quite surprisingly given that deciding the exis- player i N:
                                             [
    tence of a Pure Nash equilibrium is NP-complete Gott- • A set of possible actions Ai;
    lob et al., 2003].
                                                        • A set of possible types Ti;
 £  We continue the analysis of ∃PBE on games in GenNF,
                                                        • A probability function p : T → Δ(×   ∈ −{ } T ),
    under the assumption that the utility functions and the                    i    i        ×j N  i   j
    probability distributions range over real numbers with a assigning a probability distribution over j∈N−{i} Tj
    ﬁxed-precision. In this scenario, we prove that the prob- to each possible type of player i. We write pi(·|ti) to
    lem is, in fact, complete for the class PP.           denote the belief that player i has over the types of the
                                                                                      ∈
 £  Given that it is not generally known how efﬁcient heuris- other players when he has type ti Ti;
                                                        •                     ×        ×  ×        →
    tics can be devised for problems hard for PP, it appears An utility function ui : i∈N Ai i∈N Ti     ,
    crucial to identify tractable classes of games. In Sec- that describes the payoff of player i as a function of the
    tion 4, we face this problem and we show that ∃PBE    actions of all players and their types (including i’s). 2
    is feasible in polynomial time not only on classes of                           ·|
    acyclic games, but also on games of bounded hypertree Although probability functions pi( ti) can be given sepa-
    width [Gottlob et al., 2002] which is one of the broadest rately for each player×i, a common assumption is that a prior
    known generalizations of hypergraph acyclicity.   joint distribution P ( i∈N Ti) over all the type proﬁles (i.e.,
                                                      N-tuples t) exists, and is common knowledge among all play-
                                                      ers. Under this assumption, the single functions pi(·|ti) can
2  Games of Incomplete Information                    be built by the single players according to the Bayes’ Rule.
Preliminaries. Given sets S and R,aS-tuple with com-  Indeed, as for the reasonability of this assumption (called the
ponents in R is a total function from S to R.AS-tuple is consistent beliefs assumption), it can be proven that every
denoted by a bold-face lowercase letter, e.g., t.SetR can be Bayesian Game with ﬁnite type set can be transformed into
either a set of atomic values or a set of functions. Given a an equivalent game with consistent beliefs.
S-tuple t andanelements ∈ S (resp. a set S ⊆ S), we de- A Bayesian Game behaves as follows:
note by t[s] (resp. t[S]) the value of the s-component of tuple
t (resp. the tuple obtained by taking only t’s s-components, 1. At the beginning, each player i “gets revealed” his re-
                                                          alized type tˆ ∈ T by an external entity (usually called
with s ∈ S). By  t− (resp. t ) instead, we denote the                i   i
                   s       −S                             “Nature”). Under the consistent beliefs assumption, we
(S −{s})-tuple (resp. the (S − S)-tuple) obtained by t by
        t                      t                          can think that the realized types for all players are drawn
removing ’s s-component (resp. all ’s s-components, with  from the joint prior distribution P (·).
s ∈ S). Furthermore, given a S-tuple t,anelements ∈ S,
                                                          Each player i knows only his realized type tˆ , and does
andanelementr   ∈  R, we denote by ts→r the tuple ob-                                           i
tained from t by replacing its s-component with r (i.e., the not know the realized types of the other players (this
S-tuple t such that, for each i ∈ S −{s}, t[i]=t[i],and realizes the incompleteness of information discussed so
                                                        far). The N-tuple of realized types of all players is called
t [s]=r), and by t; tx, x ∈ S the (S ∪{x})-tuple t such
                                                                                              tˆ
that, t [s]=t[s], ∀s ∈ S,andt [x]=tx.                     the realized type-proﬁle, and it is denoted by .
  Finally, for a set S, we denote by Δ(S) the set of all prob- 2. According to their realized types, each player i simulta-
ability distributions over elements in S, i.e., the set of real- neously chooses an action, in his set A . The tuple of
                   →                                                                        i
valued functions τ : S [0, 1] such that s∈S τ(s)=1.       actions chosen by all players is called the action-proﬁle,
                                                          and it is denoted by aˆ.
Bayesian Games.  A strategic game G consists of a set of
players N and, for each player i ∈ N, of a set of possible 3. As a consequence of this choice, and depending on the
actions A and an utility function u : × ∈ A →,that       realized type-proﬁle, each player i receives a payoff of
        i                    i    i N  i                       ˆ
describes the payoff of player i as a function of his own and ui(aˆ, t). We observe that, for the players to be able to
other players’ actions. The behavior of a strategic game is evaluate their actual payoffs, information about the real-
as follows: each player i simultaneously chooses an action in ized types of the other players must be observable after
his set Ai. The tuple of actions chosen by all players is called the games terminates. Indeed, since this information is

                                                IJCAI-07
                                                  1295    hidden when actions have to be decided, what the play- not depend on t[j] and a[j]. Players in N − Xi −{i}
    ers can evaluate is their expected payoff, according to are called the neighbors of player i, and denoted by
    the probability distribution P (·) on types.          Neigh(i). The representation is similar to SNF, but ta-
                                                                                 ·
  Given a Bayesian Game G and a player i ∈ N,arandom-     bles for utility functions ui( ) may have a reduced num-
                                                          ber of columns. In particular, for each player i, column
ized strategy for i is a probability function σi : Ti → Δ(Ai),
                                                          relative to actions and types of players in set Xi can be
i.e., a total function assigning, to each type in Ti, a probability
distribution over the set of actions available to player i.We omitted.
write σi(·|ti) to denote the probability distribution over Ai General Normal Form (GenNF): This is the most compact
when the type of player i is ti ∈ Ti. Hence, σi(ai|ti) is the representation for a game, since P (t) and ui(a, t),i ∈
probability with which player i will choose action ai ∈ Ai N can be given by (succinctly encoded) functions that
in case his realized is ti.Arandomized strategy proﬁle is can be computed in polynomial-time in the size of their
a N-tuple σ of randomized strategies, one for each player. input (such form is a generalization of that deﬁned
In this paper we are interested in pure strategy proﬁles, i.e., in [Gottlob et al., 2003] for games with complete infor-
strategy proﬁles σ such that, for each player i ∈ N,thestrat- mation). We also assume that a polynomial-time com-
                                                                                           N
egy for player i, σ[i]=σi(·) assigns, to each type ti ∈ Ti, putable function Neigh(·):N → 2  that, for each
a single action in Ai (and not a probability distribution over player, returns his neighbors, is part of the representa-
the actions). We write σi(ti) to denote the action ai ∈ Ai tion. We will see that such function is very useful in
chosen by player i when his type is ti. A pure strategy can case the interaction among players is restricted (cf. Sec-
be equivalently regarded as a randomized strategy where all tion 4). It can be observed that games in SNF and GNF
probability distributions (one for each type ti ∈ Ti) assign 1 are trivially in GenNF (as for the former, the function
to action σi(ti), and 0 to the others.                    Neigh(·) would return the set N −{i} for any player
                                                            ∈
Deﬁnition 2. A Pure Bayesian Equilibrium (PBE) is a strat- i  N).
egy proﬁle σ, with each σi(·)=σ[i] being a pure strategy
for player i ∈ N, such that, for every type t ∈ T :   3   Intractability results
                   X                i   i
                              −i         −i           In this section, we face the complexity of deciding whether
  σi(ti) ∈ argmax          pi(t |ti)ui(a, t ; ti) (1)
           ∈                                                                       ∃
          ai Ai                                       a Bayesian Game has a PBE (the PBE problem). We start
               t−i∈  ×
                         Tj
                   j∈N−{i}                            with the class of games in SNF.
where, to ease notation, we denoted by a the N-tuple such Theorem 1. ∃PBE for games in SNF is NP-complete. Hard-
              −i
that a[k]=σk(t  [k]) for k = i (i.e., the action expected to ness holds even for symmetric, two-players games, while
be played by player k according to strategy proﬁle σ when he membership holds even if only one among P (·) and the vari-
        t−i       a                              2
is of type [k]), and [i]=ai.                          ous ui(·) is given explicitly as a table.
  It is well known that, although every Bayesian Game has a Proof. (Hardness) Hardness follows from [Conitzer and
BE, it does not necessarily have a PBE.               Sandholm, 2003, Theorem 2], where the NP-complete Set
  It can be observed that games with complete information Covering problem is reduced to ∃PBE of a game in SNF with
are a particular case of Bayesian Games in which all play- only 2 players. Actually, the deﬁnition of a Bayesian Game
ers may assume only one type. All the deﬁnitions made given there is more restricted than ours, since the utility func-
for Bayesian Games (strategies, strategy proﬁles and equi- tion of player i does not depend on the realized types of the
libria) are generalizations of analogous notions for games other players.
with complete information. In particular, equilibria in games (Membership) We prove the membership in NP for the
with complete information are called (Pure) Nash Equilib- more general case of N unbounded and only one of the func-
ria [Nash, 1951].
                                                      tions among P (·) and ui(·) represented as a table. In this
                                                      case, the size of the input is exponential in the number of
Representing games. Games can be represented in differ-
                                                      players |N|. Problem ∃PBE can be solved by guessing a
ent ways. Below we brieﬂy review the most used ones:
                                                      strategy-proﬁle σ in polynomial time (it consists in guessing
Standard Normal Form (SNF): In games of this form (cf., an action for every pair player/type), and checking whether
    e.g. [Osborne and Rubinstein, 1994]),sets N and   σ is a PBE. The latter task can be performed in polynomial
    Ai,Ti,i ∈  N  are represented explicitly, P (t) and time in the size of the input, since, for each player and for
    ui(a, t), ∀i ∈ N are represented by tables of|N|+1and each type, formula (1) in Deﬁnition 2 can be evaluated in time
     | |                        | |          |  |×
    2 N +1columns, having   i∈N  Ti and  i∈N ( Ti     polynomial in the size of the table encoding P (·) (which, in
    |Ai|) tuples, respectively. This form is also known as turn, is smaller than that encoding ui(·)).
    Strategic Form (cf., e.g., [Myerson, 1997]).
                                                        By using the same line of reasoning as in the proof above,
Graphical Normal Form (GNF): This form is suitable to we get a similar result for games in GNF.
    represent games in which the utility function of each        ∃
    player depends only on the actions chosen and realized Theorem 2. PBE for games in GNF is NP-complete.
    types of a subset of the other players (cf., e.g., [Kearns Let us now turn to games in GenNF. We next show that
    et al., 2001; Vickrey and Koller, 2002]). For each player ∃PBE is hard for the class PP (aka majority-P) of languages
    i,letXi be the set of players j such that ui(t, a) does that can be decided by a nondeterministic Turing machine

                                                IJCAI-07
                                                  1296in polynomial time where the acceptance condition is that a payoff that he would obtain by unilaterally changing his ac-
majority (more than half) of computation paths accept (cf., tion into pass).
e.g., [Papadimitriou, 1994a]). This class contains NP and is (if)-part. As for the other direction, if MAJ-SAT(ϕ)is
contained in PSPACE.                                  false, eval would play pass, which guarantees him higher
Theorem  3. ∃PBE for games in GenNF with unbounded    utility, but in this case, it can be observed that the structure
number of players is PP-hard. The result holds also for games of the utility functions for players R and S prevents them
in which players can assume just two types.           from reaching an equilibrium.
Proof. We reduce the canonical PP-complete MAJ-SAT
                                                        The reader may now wonder whether the problem is, in
problem (cf., e.g., [Papadimitriou, 1994a])to∃PBE. Given
                                                      fact, complete for PP. While this might appears at a ﬁrst sight
a propositional formula over variables as input, MAJ-
                     ϕ     n                          very natural, the formal proof has to take care of the fact that
SAT(ϕ) is true iff more than half of its possible assignments
                                                      both P (·) and u (·) (for each i ∈ N) are real-valued func-
satisﬁes it.                                                        i
                                                      tions. Hence, to prove the membership result, we next restrict
  Let V be the set of variables of formula ϕ. We build a
              G                                       ourselves to real values with ﬁxed-precision, i.e., we assume
Bayesian Game   that has a PBE iff MAJ-SAT(ϕ)istrue.  that all the values of interest for the game comes as multiples
The game has a set of players      ∪{    }∪{     },                 −
                  n+3        N = V   eval    R, S     of a value  =10 c, for some ﬁxed natural number c.
with the following characteristics:
                                                                                           ∃
  • Players in V (corresponding to the variables of formula Theorem 4. In the ﬁxed-precision setting, PBE for games
                                                      in GenNF with unbounded number of players is PP-complete.
    ϕ) may assume one of two types {true, false}, have only
    one available action nop, and utility functions which
    evaluate always to 0.                             Proof. (Sketch.) Assume, wlog, that all such functions range
  • eval (“evaluator”) may assume only one type, but has in the domain of reals in [0, 1]. Then, we can regard all
    two available actions: count and pass. His utility func- the functions in the game as ranging in the integer domain
    tion ueval(·) is deﬁned as follows:               [0, 1/]. We can now build a NP Turing Machine Mep (“ep”
                                                      stands for “expected payoff”) that, given as input i ∈ N, t ∈
              8               (                                                                       i
                                                      Ti, ai ∈ Ai, σ−i, and a boolean accept, behaves as follows:
              <>                 t−{      }|                        −                     −
                 a             if   eval,R,S = ϕ :1   guesses a tuple t i and then performs p (t i|t ) · u (a, t) ≤
         a t    if [eval]=count:                                                       i     i   i
    ueval( , )=                otherwise: 0                2                       a    t
              :>                                      (1/) additional branches (with and deﬁned as in for-
                otherwise: 1/2                        mula (1)), accepting (resp. rejecting) on all of them if accept
                                                      is true (resp. false). Such machine will have
  • Players R and S may assume only one type, and have                X
                                                                                 −i
    two available actions a1 and a2. Their utility func-                      pi(t |ti) · ui(a, t)
    tions u (·) and u (·) are such that they evaluate to          t−i∈ ×
          R         S                                                       Tj
                                                                      ∈ −{ }
    0ifaeval =  count, while, in the other cases (where              j N  i
    aeval = pass) they are deﬁned as follows (independently
    on the types and actions of players in V ):       computation paths, all accepting or all rejecting, depending
                                                      on the value for accept. Build now a second Turing Machine
                           8                             that, given σ, behaves as follows: for each triple ,
                           >                          M                                          (i, ti,ai)
                           >(0, 1) if (aR,aS)=(a1,a1)    ∈      ∈       ∈     −{σ   }
                           <>                         (i   N,ti    Ti,ai   Ai      [i] ) makes two branches,
                             (1, 0) if (aR,aS)=(a1,a2) on one invoking M (i, t , σ[i], σ− , true) and on the other
    (uR(aR,aS),uS (aR,aS)) =                                           ep  i        i
                           >(1, 0) if (a ,a )=(a2,a1)            σ
                           :>        R  S             Mep(i, ti,ai, −i, false). Such machine will have a number
                             (0, 1) if (aR,aS)=(a2,a2) of accepting paths lower than that of rejecting ones if and only
                                                      if σ is not a PBE. Machine M clearly operates in NP.
    The idea behind such choice for uR and uS is that, if
    a    = count both a1 or a2 are always best-responses
     eval                                               Finally, we conclude this section by observing that the
    for players R and S; on the other hand, if aeval = pass,
    their utility functions prevent the existence of a PBE. number of players plays a crucial role in the PP-hardness
                                                      above.
  • P (·) ∈ Δ(×  ∈  ∪{   }∪{  } T ) is uniform: since
                 i V  eval R,S   i                                ∃
    |T   | = |T | = |T | =1and |T | =2for each v ∈ V , Theorem 5.  PBE for games in GenNF is NP-complete, if
      eval    R      S          v                                        | |
    this means that, for each type-proﬁle t, P (t)=1/2n. the number of players N is bounded by a constant.
We now show that MAJ-SAT(ϕ)istrueiffG has a PBE.
  (only if)-part. If MAJ-SAT(ϕ) is true, we observe that any Proof. (Hardness) The hardness follows from Theorem 1.
strategy-proﬁle σ such that σ[eval]=count is a PBE. In fact, (Membership) Problem ∃PBE can be solved by guessing a
that strategy is an equilibrium for players in V ∪{R, S} since strategy-proﬁle σ in polynomial time (it consists in guessing
their expected payoff cannot be different from 0. Moreover, an action for every pair player/type), and checking whether σ
action count is a best-response for player eval, that achieves isaPBE.Incaseof|N| bounded by a constant, formula (1)
an expected payoff of 1/2n · #ϕ>1/2 (with #ϕ>2n−1     clearly shows that such task can be performed in polynomial
being the number of models of formula ϕ and 1/2 being the time.

                                                IJCAI-07
                                                  1297                                                                                     
                                                                                               
                                                        4. For each p ∈ V , (    e) ∩ (    χ(p )) ⊆ χ(p),
4  Tractability results                                                T    e∈λ(p)     p ∈Tp
In order to look for tractable cases of the ∃PBE problem, where Tp is the set of nodes in the subtree rooted at p.
we might think of issuing some suitable restrictions on the                       |   |
                                                        The width of HD is maxp∈VT λ(p) . The hypertree-width
games. For instance, one may think about restrictions on the hw(H) of an hyper-graph H is the minimum width over all
maximum number of neighbors of each player, on the max- its hypertree decompositions.                  2
imum number of types of each player, and on the kinds of To prove our main tractability result, we will exploit a
interaction among players.                            transformation from a Bayesian Game into a game with com-
  Results in Section 3 show that, exploiting only one of the plete information, and show that it preserves important struc-
restrictions above is not enough: requiring the size of the tural properties of the game. The transformation is called the
neighborhood, or the maximum number of types for each type-agent representation of a Bayesian Game, as it was orig-
player to be bounded by a constant does not lead to tractabil- inally discussed in [Harsanyi, 1968]. In the type-agent repre-
                                [                 ]
ity (cf., respectively, Theorem 1 and Gottlob et al., 2003 sentation there is a player (called, to avoid confusion, type-
for the more restricted case of games with complete informa-
                                                      agent) for every possible pair (i, ti), with i ∈ N and ti ∈ Ti.
tion, i.e., games in which players can assume only one type). The set of actions available to each type-agent (i, t ) is ex-
On the other hand, it is possible to show that, by combining                                      i
                                                      actly the set Ai of actions available to player i. The idea is
orthogonal, but weaker restrictions, we can obtain somewhat that type-agent (i, t ) is responsible for selecting the action
appealing tractable cases. To this end, we will exploit the            i
                                                      that player i would use in the original Bayesian Game if ti is
concepts of intricacy, hyper-graph and hypertree-width of a his realized type. Hence, an action proﬁle for the new game
     [               ]
game Gottlob et al., 2003 below, and we show that the prob- is a tuple a having a component a[(i, t )] for each type-agent
lem ∃PBE becomes polynomial in case of games G having                                 i
                                                      (i, ti). Also the utility functions of each type-agent (i, ti)
bounded intricacy (or, equivalently, the small neighborhood are derived from that of player i, being deﬁned as the condi-
property), bounded number of types, and whose associated tionally expected utility to player i given that t is his real-
hypergraph H(G) has bounded hypertree-width.                                                  i
                                                      ized type. Formally, the utility function for type-agent (i, ti),
  Deﬁnitions of intricacy and hyper-graph have been pro-    a
                                                      v(i,ti)( ), is as follows:
posed for games with complete information only, but we                 X                 “         ”
show that they can be used, without modiﬁcation, also in the                      −i         −i
                                                         v(  )(a)=            p (t |t ) u a , t ; t  (3)
context of Bayesian Games. Formally, given a game G,the   i,ti                 i     i  i        i
                                                                   t−i∈ ×
                                                                            Tj
intricacy of G, i(G),isdeﬁnedas                                        ∈ −{ }
                    „                  «                              j N  i
                     |Neigh(j)|×log |A |                                                
          i(G)=max                   j          (2)   where, to ease notation, we denoted by a the N-tuple having
                j∈N        log ||G||                  a[(j, t[j])] as its j-component a[j],forallj ∈ N.
where ||G|| is the size of the representation of G.     BEs of the original game are in one-to-one correspondence
  AgameG    that has bounded intricacy, i.e., for which with Nash Equilibria of the new game with complete infor-
i(G) ≤ k for a ﬁxed constant k, also enjoys the so-called mation.
                                             ∈
small neighborhood property: for each player j  N,    Theorem  6. ∃PBE  is feasible in polynomial time for the
|        |∈O       || ||   |  |
Neigh(j)       (log G  / log Aj ). It can be observed class of games having bounded hypertree-width, bounded in-
that while bounded neighborhood implies bounded intricacy, tricacy, and bounded number of types, even with unbounded
the reverse does in general not hold. Hence, bounding intri- number of players.
cacy could be a suitable restriction for those games in which
bounding the number of neighbors is too severe.       Proof. We exploit the transformation of the Bayesian Game
                                                                   
  Moreover, given a game G, the hyper-graph H(G)=     G into a game G with complete information described above.
(V,E) of G has players as vertices, i.e., V = N,andsetof We remind the PBEs of G are in one-to-one correspondence
                                                                              G G                  | |
hyper-edges deﬁned as E = {{j ∪ Neigh(j)}|j ∈ N}.For  with Pure Nash Equilibria of . has a set N of i∈N Ti
agameG, its associated hypergraph encodes the structural in- type-agents (i, ti) (with ti ∈ Ti), each one having utility
                                                                   ·
teractions among the players. In many cases, these interaction function v(i,ti)( ) deﬁned as in (3).
are not too intricate, and the notion of hypertree-width helps Since, in the Bayesian Game G,playeri has only set
                                                                                         ·       ·
in singling out these scenarios.                      Neigh(i) as neighbors, functions v(i,t )( ) and ui( ) do not
                                                                                       i               −
Deﬁnition 3 ([Gottlob et al., 2002]). Given a hypergraph depend on actions and types of players in set Xi = N
                                                      Neigh(i) −{i}. Hence,  a can be regarded as a tuple in
H =(VH  ,EH ), a hypertree decomposition of H is a hyper-               | |
                                                       × ×             Tj                           t−i
tree HD =  T,χ,λ  for H,whereT  =(VT  ,ET ) is a tree, Ai     j∈Neigh(i) Aj . Moreover, by splitting tuple
and  and  are labelling functions that associate to each ver- −i    −i      −i          −i      −i
   χ     λ                                            into t   ( ); t , pi(t |ti)=pi(t    ( ), t |ti) can
     ∈                ⊆            ⊆                        Neigh i Xi                  Neigh i Xi
tex p  VT two sets χ(p) VH and λ(p)  EH  . Moreover,                  −i            −i  −i
                                                      be rewritten as pi(t ( )|ti) · pi(t |t ( ),ti). Hence,
HD  satisﬁes all the following conditions:                            Neigh i       Xi  Neigh i
                                                       (  ) ·
                       ∈                      ∈       v i,ti ( ) becomes:
 1. For each hyper-edge h EH of H, there exists p VT                         0                    1
    s.t. h ⊆ χ(p);
                    ∈                {  ∈     |  ∈             X             B X                  C  `  ´
 2. For each vertex v VH of H,theset  p    VT  v                     −i      B         −i −i      C    
                                                       (  ) a       t      | B        t  |t       C   a t
        }                                             v i,ti ( )= pi( Neigh(i) ti) pi( X  Neigh(i),ti) ui ,
    χ(p) induces a (connected) subtree of T ;                               @          i         A
                                                        t−i    ∈ ×            t−i ∈ ×
                                                             ( )      Tj             Tj
             ∈         ⊆                                 Neigh i ∈  ( )        Xi ∈
 3. For each p VT , χ(p)   e∈λ(p) e;                          j Neigh i          j Xi

                                                IJCAI-07
                                                  1298