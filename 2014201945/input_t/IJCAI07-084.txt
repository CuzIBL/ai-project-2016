                   Diagnosability Testing with        Satisﬁability Algorithms

                                  Jussi Rintanen and Alban Grastien
                     National ICT Australia Ltd and Australian National University
                                           Canberra, Australia


                    Abstract                            The structure of the paper is as follows. In Section 2 we
                                                      present the transition system framework and formally deﬁne
    We show how testing whether a system is diagnos-  when a system is diagnosable. Section 3 contains the main
    able can be reduced to the satisﬁability problem and contribution of the work, an encoding of the diagnosabil-
    how satisﬁability algorithms yield a very efﬁcient ity problem as a formula in the classical propositional logic.
    approach to testing diagnosability.               In Section 4 we show how these formulae can be used to
    Diagnosability is the question whether it is always demonstrate that a system indeed is diagnosable, as opposed
    possible to know whether a given system has ex-   to showing that it is not. Section 5 contains a demonstra-
    hibited a failure behavior. This is a basic question tion of the scalability of the approach to transition systems
    that underlies diagnosis, and it is also closely re- with very large state spaces, and Sections 6 and 7 conclude
    lated to more general questions about the possibil- the paper by discussing related work and pointing out future
    ity to know given facts about system behavior.    research directions.
    The work combines the twin plant construct of
    Jiang et al., which is the basis of diagnosability 2  Preliminaries
    testing of systems with an enumerative represen-  We deﬁne transition systems following Sampath et al. [1995].
    tation, and SAT-based techniques to AI planning
    which form a very promising approach to ﬁnding    Deﬁnition 2.1 (Transition systems) A transition system is a
    paths in very large transition graphs.            tuple T = X, Σo, Σu, Σf ,δ,s0 where
                                                        • X  is a set of states,
1  Introduction                                         • Σo is a set of observable events,
Faults in dynamic systems can be diagnosed by observing a • Σu is a set of unobservable events,
sequence of events taking place in the system and inferring • Σf is a set of failure events,
the occurrence of unobservable failure events [Sampath et al.,
                                                        • δ ⊆ X × (Σo ∪ Σu ∪ Σf ) × X is the transition relation,
1995]. A main question arising in this setting is whether it is
                                                        • s  ∈ X
always possible to infer that a failure has occurred. A sys- 0   is an initial state.
tem that has this property is diagnosable. The diagnosability
                                                        The transition system is initially in the state s0,andan
question for transition systems with a graph representation
                                                      event sequence e0,...,en−1 takes the system through a se-
can be solved in polynomial time [Jiang et al., 2001].
                                                      quence s0,s1,...,sn of states such that (si,ei,si+1) ∈ δ for
  Many systems exhibit regularities best captured by repre-
                                                      all i ∈{0,...,n− 1}. Note that a state si and an event ei do
senting them in terms of state variables, which also makes it not necessarily determine the successor state si+1 uniquely.
possible to represent systems with very large state spaces suc- Let T = X, Σo, Σu, Σf ,δ,s0 be a transition system. We
cinctly without representing each state explicitly. The num- say that e0,...,en−1 is a sequence of events in T if there
ber of states of a succinctly represented system may be ex- are states s1,...,sn such that (si,ei,si+1) ∈ δ for all i ∈
ponential in the size of its representation, which makes the {0,...,n− 1}.
diagnosability problem PSPACE-complete [Rintanen, 2007]. The state sequence nor the unobservable or the failure
The diagnosability problem is similar to other PSPACE- events can be observed. In deciding whether a failure has
complete problems like AI planning and LTL model-checking occurred only the sequence of observable events is available.
in that it reduces to ﬁnding paths in a graph. An efﬁ-  Let σ ∈ (Σo ∪ Σu ∪ Σf )∗ be a sequence of events. We
cient approach to solving AI planning and model-checking deﬁne its projection π(σ) to observable events recursively as
problems is to reduce them to the satisﬁability problem of follows.
the classical propositional logic [Kautz and Selman, 1996;           π()=
Biere et al., 1999]. This suggests a similar approach to diag-     π(eσ)=π(σ)      if e ∈ Σo
nosability testing, which is what we pursue in this work.          π(eσ)=eπ(σ)      if e ∈ Σo

                                                IJCAI-07
                                                   532  Sampath et al. [1995] give a deﬁnition of diagnosability An event e ∈ Σo ∪ Σu ∪ Σf is described by a set of pairs
which we adapt to our notation.                       φ, c which indicate that the event can be associated with
                                                      changes c in states that satisfy the condition φ. More for-
                                                      mally, an event e ∈ Σo ∪ Σu ∪ Σf is possible in any state s
Deﬁnition 2.2 (Diagnosability) A transition system T =
                                                      such that s |= φ for some φ, c∈δ(e).Whene takes place
X, Σo, Σu, Σf ,δ,s0 is diagnosable if there is d such that for
                                                      in s, one of the pairs φ, c∈δ(e) satisfying s |= φ is chosen
any sequence σ of events in T that ends in a failure event and
                                                    and the effect of the event is that the literals in c become true.
for all sequences σ1 = σσ and σ2 in T such that |π(σ )|≥d
                                                        Let s be a state and c a consistent set of literals. Then deﬁne
and π(σ1)=π(σ2), σ2 includes a failure event.                          
                                                      the successor state s = succ(s, c) of s with respect to c by
                                                           
  Hence a system is diagnosable if and only if there are no 1. s (a)=1for all a ∈ A such that a ∈ c,
two inﬁnite event sequences which have the same observable 2. s(a)=0for all a ∈ A such that ¬a ∈ c,and
events and one of them contains a failure event and the other 3. s(a)=s(a) for all a ∈ A that do not occur in c.
one not. In other words, every inﬁnite continuation of an
event sequence with a failure is distinguishable from every A succinct transition system can be mapped to a transition
inﬁnite event sequence without a failure.             system as follows.
  The constant d is called the delay. Not all failures can be
                                                                      T  = A, Σ , Σ , Σ ,δ,s 
detected immediately after they have taken place, and the de- Deﬁnition 2.4 Let o  u   f   0  be a succinct
                                                                                                    T  =
lay expresses how many further events have to be observed transition system. Then deﬁne the transition system
                                                      R(T )   R(T )=X,  Σ , Σ , Σ ,δ,s 
before being certain that a failure has taken place.       by             o   u  f     0 where
                                                        1. X is the set of all valuations of A and
                                                           
2.1  Succinct System Representation                     2. δ = {(s, e, succ(s, c)) ∈ X × (Σo ∪ Σu ∪ Σf ) × X|
The structure of many systems is highly regular and it may be φ, c∈δ(e),s|= φ}.
more practical to represent states in terms of state variables
and the relations corresponding to events in terms of changes 2.2 Simultaneous Events
to the values of the state variables. This often makes it possi- An important factor of efﬁcient SAT-based planning [Kautz
ble to represent very large systems compactly.        and Selman, 1996] is the notion of parallel or partially or-
  The set of states of a system consists of all the valuations dered plans. This means that several independent actions can
of the state variables in a ﬁnite set A. In this paper we restrict be taken simultaneously, and it has the advantage that it is un-
to two-valued (Boolean) state variables. Hence a state s : necessary to consider all n! total orderings of n independent
A →{0,  1} is a total function from the state variables to the events as their mutual ordering does not matter.
constants 1 (true) and 0 (false). A literal is a state variable or Dependence is deﬁned through the notion of interference.
its negation, and the set of all literals is L = A∪{¬a|a ∈ A}. The pairs φ1,c1 and φ2,c2 interfere if there is a ∈ A that
The language L over A consists of all formulae that can be occurs positively/negatively in c1 and negatively/positively
formed from A and the connectives ∨ and ¬.Weusethe    in φ2 or in c2, or positively/negatively in c2 and nega-
standard deﬁnitions of further connectives φ ∧ ψ ≡¬(¬φ ∨ tively/positively in φ1.
¬ψ), φ→ψ  ≡¬φ  ∨ ψ and φ ↔ ψ ≡ (φ→ψ)   ∧ (ψ →φ).        Events e1,...,en can take place simultaneously with o1 ∈
                                                      δ(e ),...,o ∈  δ(e )  o     o
  The main design decision for succinct transition systems is 1 n       n if  and   do not interfere for any
                                                      {o, o}⊆{o ,...,o }         o = o
how to represent transition relations. It would be possible to   1     n  such that    .
use arbitrary propositional formulae which is a powerful and We will consider diagnosability testing with sequences
                                                      E  ,...,E                         E
general representation, but as our intention is to utilize inde- 1 n of (possibly empty) sets i of event occur-
                                                                                     E
pendence of events for obtaining more efﬁcient diagnosability rences such that all members of i are mutually non-
                                                                                           s   s
testing, we have decided to use a more restricted representa- interfering. We deﬁne the successor state of with re-
                                                                   E
tion that makes it possible to deﬁne what does it mean that spect to a set of non-interfering event occurrences by
                                                      s =    (s,        c)
two or more events take place simultaneously.             succ     φ,c∈E .
                                                        Let σ ∈ (2Σo∪Σu∪Σf )∗ be a sequence of sets of events. Its
                                                      projection π(σ) to observable events is deﬁned as follows.
Deﬁnition 2.3 (Succinct transition systems) A succinct
transition system is a tuple A, Σo, Σu, Σf ,δ,s0 where              π()=
                                                                    π(Eσ)=(E      ∩ Σo)π(σ)
  • A is a ﬁnite set of state variables,
                                                        For a succinct transition system we say that E0,...,En−1
  • Σo is a set of observable events,
                                                      is a sequence of parallel events in T if there are states
  • Σu is a set of unobservable events,               s0,...,sn such that for all i ∈{0,...,n − 1} si+1 =
                                                      succ(si,E) for some E = {o1,...,ok} such that there are
  • Σf is a set of failure events,
                                                      o1  ∈ δ(e1),...,ok ∈  δ(ek) where Ei =  {e1,...,ek}
                       L×2L                               o     o                       h ∈{1,...,k}
  • δ :Σo ∪ Σu ∪ Σf → 2     assigns each event a set of and h and j do not interfere for any          and
                                                      j ∈{1,...,k}\{h}
    pairs φ, c, and                                                  .
                                                        Diagnosability of succinct transition systems with simul-
  • s0 is an initial state (a valuation of A).        taneous events is deﬁned analogously to Deﬁnition 2.2. The

                                                IJCAI-07
                                                   533length |(E1,...,En)| of sequences of sets of parallel events Propositional variables with a hat aˆ represent event occur-
                 n
is deﬁned as the sum i=1 |Ei| of the cardinalities of the sets. rences and values of state variables in the second event se-
A small technical difference is caused by the fact that projec- quence that does not contain failure events. The propositional
                                                               t
tion π(E1,...,En) for sequences of parallel events always variables e describe the occurrence of observable events si-
results in a sequence of the same length n (often with empty multaneously in both event sequences.
event sets.) It can be shown that the deﬁnitions are equivalent Next we describe T (t, t +1)for a given t. When an event
by interpreting a set of parallel events as any total ordering of occurs, the event must be possible in the current state and it
the events.                                           has some effects.
                                                               t   t
                                                              eo →φ for every o = φ, c∈δ(e)
                                                               t       t+1
3  Diagnosability as a Satisﬁability Problem                  eo →  l∈c l  for every o = φ, c∈δ(e)
Jiang et al. [2001] have shown how the diagnosability test can The value of a state variable changes only if there is a rea-
be reduced to ﬁnding a path in a graph. Their test is based on son for the change.
                                                                                            
making the deﬁnition of diagnosability (Deﬁnition 2.2) ﬁnite      t     t+1     t          t
                                                                (a ∧¬a    )→   e1  ∨···∨e
by constructing a product transition system, sometimes called                    o1        kok
the twin plant, in which states are pairs (s, sˆ) of states of the
                                                      for all a ∈ A where o1 = φ1,c1,...,ok = φk,ck are
original transition system, and events represent unobservable
                                                      all event occurrences with ¬a ∈ ci and e1,...,ek are the
events in one or both of the components of these state pairs,
                                                      respective events with oi ∈ δ(ei). For the change from false
or observable events shared by both components. If in this
                                                      to true the formulae are deﬁned similarly by interchanging a
system there is an event sequence from (s0,s0) to some (s, sˆ)
                                                      and ¬a.
which includes a failure event in the ﬁrst component but not in
                                                        An event can occur in only one way, and two events cannot
the second, and there is a non-empty event sequence back to
                                                      be simultaneous if they interfere.
(s, sˆ) with no failures in the second component, then a pair of
                                                          t    t                                
inﬁnite event sequences witnessing non-diagnosability exists. ¬(eo ∧ eo ) for all e ∈ Σo ∪ Σu ∪ Σf and {o, o }⊆δ(e)
                                                                                
This reformulation of Deﬁnition 2.2 reduces inﬁnite event se-      such that o = o
                                                          t    t           
quences to cycles in a graph.                          ¬(eo ∧ eo ) for all {e, e }∈Σo ∪ Σu ∪ Σf and o ∈ δ(e)
                                                                                           
  This diagnosability test can be formulated as a satisﬁabil-      and o ∈ δ(e ) such that o and o interfere
ity problem in the classical propositional logic, similarly to The above formulae describe one step of an event se-
other path ﬁnding problems in AI planning [Kautz and Sel- quence. We need to represent two event sequences, so we
man, 1996]. We construct a formula for which the satisﬁable have a copy of all of the above formulae in which all propo-
valuations correspond to pairs [(s0,...,sn), (ˆs0,...,sˆn)] of       at    et                    aˆt   eˆt
                   s   =ˆs                            sitional variables and o have been replaced by and o
state sequences with 0     0 that correspond to pairs respectively. The second sequence is restricted to events in
[(E ,...,E   ), (Eˆ ,...,Eˆ )]
   0      n−1    0      n−1   of event sequences such Σo ∪ Σu. This is the key idea in the diagnosability test which
                       ˆ      ˆ
that π(E0,...,En−1)=π(E0,...,En−1)  and of which one  makes it possible to identify two sequences of events that
contains a failure event and the other does not, and which have the same observable events and only the ﬁrst of which
loop back to (si, sˆi),thatis,sn = si and sˆn =ˆsi for some contains a failure event.
i ∈{0,...,n−  1}. The formula for a given event sequence The formulae that connect the two event sequences require
length is satisﬁable if and only if it is not possible to detect that observable events take place in both sequences whenever
the occurrence of a failure event.                    they take place.
                                                                   
  The encoding of state and event sequences is similar to         (       et ) ↔ et    e ∈ Σ
                                                                   o∈δ(e) o      for all   o
the encoding of planning in the propositional logic [Kautz        (       eˆt ) ↔ et   e ∈ Σ
and Selman, 1996]. That the projections of both sequences           o∈δ(e) o      for all   o
to observable events coincide is guaranteed by forcing each To avoid trivial cycles we require that at every time point
observable event to take place in both sequences simultane- at least one event takes place.
ously. Essentially, each observable event is a joint event of                           
                                                                 et ∨             et ∨          eˆt
both sequences.                                                                    o             o
                                                             e∈Σ
  Next we deﬁne the formula for diagnosability testing of       o    e∈Σu∪Σf ,o∈δ(e)  e∈Σu,o∈δ(e)
                         T  =   A, Σ , Σ , Σ ,δ,s 
a succinct transition system        o   u  f    0 .     The conjunction of all the above formulae for a given t is
                          t
The events at each time point are described by a formula denoted by T (t, t +1). A formula for the initial state s0 is
T (t, t +1)               t                                         
         parameterized with . The propositional variables               0    0
                                    t                       I0  =     ({a ∧ aˆ |a ∈ A, s0(a)=1}
occurring in the formula, with superscripts referring to dif-              0    0
ferent times points, are the following.                             ∧  {¬a  ∧¬aˆ |a ∈ A, s0(a)=0}).
  • at and aˆt for all a ∈ A and t ∈{0,...,n}.          We deﬁne a formula that ﬁnds a pair of inﬁnite executions
                                                      (in the form of a cycle) with the same observable events and
  • et       e ∈ Σ  ∪ Σ  ∪ Σ       o ∈ δ(e)    t ∈
     o for all     o    u    f and         and        a failure in one execution but not in the other.
    {0,...,n− 1}.                                          T
                                                         Φn   =   I0 ∧T(0, 1) ∧···∧T(n  − 1,n)∧
     t                                                            n−1      
  • eˆ      e ∈ Σo ∪ Σu o ∈ δ(e)  t ∈{0,...,n−  1}                                   t
     o for all        ,        and                .                                 eo∧
                                                                  t=0  e∈Σf  o∈δ(e)
  • et      e ∈ Σ     t ∈{0,...,n− 1}                               n−1         n     m     n     m
      for all    o and               .                              m=0(  a∈A ((a ↔  a ) ∧ (ˆa ↔ aˆ )))

                                                IJCAI-07
                                                   534                         n =9
                                                      of parallel events in T such that π(σ)=π(ˆσ) and σ con-
                                                      tains a failure event and σˆ does not. Let s0,s1,s2,... and
                                                      sˆ0, sˆ1, sˆ2,...be the corresponding state sequences.
                                                        Since T has only a ﬁnite number of states, there are some
Figure 1: Parameter n in the diagnosability test with several m and n such that m<nand sn = sm and sˆn =ˆsm
potential cycle lengths                               and Σf ∩ Ek  = ∅ for some k ∈{0,...,n  − 1}.Now
                                                      (E ,...,E    )                       (Eˆ ,...,Eˆ  )
                         m =3,n=9                       0       n−1 contains a failure event and 0   n−1
                                                      does not, and the sequences satisfy the requirements in the
                                                      right hand side of the equivalence in Lemma 3.1 except for
                                                      condition 3, which can be satisﬁed by deleting those Ei and
                                                       ˆ              ˆ
  Figure 2: Parameters m and n in the diagnosability test Ei for which Ei ∪ Ei = ∅.
                                                        For the implication from right to left assume that the right
                                                      hand side of Lemma 3.1 holds. Now the two sequences
The possible cycles represented by ΦT are illustrated in Fig-             ˆ      ˆ
                               n                      (E0,...,En−1)  and (E0,...,En−1) yield the inﬁnite se-
ure 1. The parameter n controls the number of states in the
                                                      quences σ =  E0,...,En−1,Em,...,En−1,...   and σˆ =
sequence, and the last state must equal one of the preceding Eˆ ,...,Eˆ , Eˆ ,...,Eˆ ,... π(σ)=π(ˆσ)
states so that a cycle is formed.                       0      n−1  m       n−1    with            so that
                                                      σ contains a failure event and σˆ does not. Hence T is not di-
  The diagnosability question can also be formalized with a                                            
ﬁxed starting point m for the cycle (Figure 2.)       agnosable.
       T
     Φm,n   =   I0 ∧T(0, 1) ∧···∧T(n − 1,n)∧            Search for the proof of non-diagnosability with formulae
                n−1      
                                  et ∧                ΦT  leads to a one-dimensional search problem for the value
                t=0   e∈Σf  o∈δ(e) o                   n
                        n    m      n    m               n         ΦT
                 a∈A ((a ↔  a  ) ∧ (ˆa ↔ aˆ ))        of  , and with m,n the problem is two-dimensional. The
                                                      standard solution method in the one-dimensional case is to
                          T                                                T       T
  We show that the formulae Φn perform the diagnosability test the satisﬁability of Φ1 ,thenΦ2 and so on, until a satisﬁ-
                      T
test correctly. Proofs for Φm,n are analogous.        able formula is found. There are also parallelized algorithms
                                                      that may ﬁnd a satisﬁable formula much faster than this se-
Lemma 3.1  Let T =  A, Σo, Σu, Σf ,δ,s0 be a succinct quential method [Rintanen et al., 2006].
transition system and n a positive integer. The formula
 T
Φn  is satisﬁable if and only if there are sequences σ = 4 Showing Diagnosability
                       ˆ      ˆ
(E0,...,En−1) and σˆ =(E0,...,En−1) of parallel events For a system that is actually diagnosable, the formulae in the
in T such that                                        previous section are not very practical for showing diagnos-
 1. (E0 ∪···∪En−1)  ∩ Σf = ∅,                        ability because there is no simple way to guarantee that the
                                                               n
    (Eˆ ∪···∪Eˆ    ) ∩ Σ = ∅                          parameter  is high enough so that all reachable states with
 2.   0         n−1     f    ,                        a failure event have been covered. The most obvious upper
         ˆ                                                     n
 3. Ei ∪ Ei = ∅ for all i ∈{0,...,n− 1},             bound for  is the cardinality of the set of all states, which is
                                                                               q
    π(σ)=π(ˆσ)                                        often impractically high: for state variables one would be
 4.            , and                                  forced to consider n =22q. Solutions to this problem have
 5. there are executions s0,...,sn of σ and sˆ0,...,sˆn of σˆ been proposed [Sheeran et al., 2000] but they work for spe-
    in T such that s0 =ˆs0 and sm = sn and sˆm =ˆsn for ciﬁc types of transition systems only or they step outside the
    some m ∈{0,...,n−   1}.                           SAT framework [McMillan, 2003].
                                                        However, in many cases it is not necessary to include a
Proof: Sketch: Proof of the equivalence from left to right
                                           T          complete reachability test. It may be sufﬁcient to use a for-
is a demonstration that a valuation that satisﬁes Φn can be ρ
         σ σˆ             s ,...,s    sˆ ,...,sˆ      mula   which gives an upper bound to the set of state pairs
mapped to ,  and executions 0    n and 0      n that  (s, sˆ) in the twin plant that could be reached by event se-
satisfy the required properties.                                                       ˆ      ˆ
                                                      quences σ =(E0,...,Ek)  and σˆ =(E0,...,Ek) such that
  Proof from right to left is by constructing a valuation of all      ˆ         ˆ
                       T                              π(σ)=π(ˆσ)     (E0 ∪···∪Ek)  ∩ Σf =  ∅
propositional variables in Φn based on σ, σˆ and the execu-       and                       .
tions s0,...,sn and sˆ0,...,sˆn, and then showing that each It may be possible to show that for no state pair satisfying
           T                                          ρ
conjunct of Φn is satisﬁed by that valuation.          there is an event sequence starting with a failure event in
                                                      the ﬁrst component and another event sequence without fail-
                                                      ure events starting in the second component if both sequences
                                       T  ΦT          must have the same observable events. This can be tested by
Theorem 3.2 For a succinct transition system , n is sat- using the following formula with increasing values of n.
isﬁable for some n ≥ 1 if and only if T is not diagnosable.                                
                                                         T,ρ                                            0
                                                       Ψ   = ρ ∧T(0, 1) ∧···∧T(n  − 1,n) ∧            eo
Proof: Sketch: We show that T is not diagnosable iff for some n                              e∈Σf ,o∈δ(e)
n the right hand side of the equivalence in Lemma 3.1 holds. The formula is satisﬁable iff after a failure in the ﬁrst com-
  Assume that T is not diagnosable. Hence there are inﬁnite ponent of the twin plant (but not in the second) an event se-
                                     ˆ   ˆ  ˆ
sequences σ =(E0,E1,E2,...) and σˆ =(E0, E1, E2,...)  quence of length n with the same observable events in both

                                                IJCAI-07
                                                   535components can take place. Hence, if the formula is unsatis- Cnval          vars   clauses     runtime
                                                                                                  0.01
ﬁable, the behavior after a failure necessarily differs from the 40 3 F   31683    427136    0.01 0.01
behavior without a failure, and the system is diagnosable.                                        0.33
                                                          40    4    T    41764    568154    0.35 0.38
  The incompleteness of this test is caused by the approx-                                        0.01
imate nature of ρ:ifρ represents too many unreachable     60    3    F    47523    640736    0.01 0.01
                                                                                                  1.54
states of the twin plant, then it may appear that distinguish- 60 4  T    62644    852274    1.94 2.35
ing between behavior with and without failure is not possible.                                    0.01
                                                          80    3    F    63363    854336    0.01 0.01
Hence the unsatisﬁability of the formula is a sufﬁcient but not                                   1.75
                                                          80    4    T    83524   1136394    1.93 2.08
a necessary condition for diagnosability.                                                         0.01
  A complete positive and negative test for diagnosability is 100 3  F    79203   1067936    0.01 0.01
                                     ΦT                                                           3.15
now obtained by testing the satisﬁability of n for increas- 100 4    T   104404   1420514    3.48 3.82
                                             T,ρ                                                  0.03
ing n interleaved with testing the satisﬁability of Ψn for
                                                        120    3    F    95043   1281536    0.03 0.03
increasing n and increasingly strong upper approximations ρ                                       5.26
                                                         120    4    T   125284   1704634    5.55 5.83
of the reachable state pairs in the twin plant.                                                   0.03
  There are alternative ways how the formulae ρ for ap-  140    3    F   110883   1495136    0.03 0.03
                                                                                                  7.32
proximating reachability in the twin plant could be derived. 140 4   T   146164   1988754    7.78 8.22
One approach is by polynomial time algorithms for comput-                                         0.03
                                                         160    3    F   126723   1708736    0.03 0.04
ing sets V of 2-literal clauses that are true in all reachable                                    9.90
states [Rintanen, 1998]. If a state in the twin plant does 160  4    T   167044   2272874   10.8111.69
                                                                                                 0.06
not satisfy ρ = V it is unreachable from the initial state. 180 3    F   142563   1922336    0.06 0.06
                                            ρ                                                    12.22
Other approaches to deriving tighter upper bounds could  180    4    T   187924   2556994   13.4514.57
be based on techniques for knowledge compilation [Selman                                          0.01
                                                         200    3    F   158403   2135936    0.01 0.01
and Kautz, 1996] and OBDDs [Bryant, 1992] or DNNF [Dar-                                          18.56
wiche, 2001].                                            200    4    T   208804   2841114   20.4822.90

5  Experiments                                        Table 1: Runtimes for diagnosability testing. The number of
                                                      components is C and the path length is n.
The algorithm of Jiang et al. [2001] is impractical because it
relies on the explicit enumeration of all pairs of states. For a
                                                 2
transition system with n states, the twin plant consists of n mula and computed 95 per cent conﬁdence intervals for the
states. Starting from n = 10000 the size of the twin plant is mean by using a standard boot-strapping method. These are
too high for practically running their algorithm.     shown in the last column of Table 1 next to the runtime.
  We demonstrate the much better scalability of our approach Unsurprisingly, there appears to be an exponential growth
(Section 3) by using a system that consists of m identical in- in the runtimes, but for our system non-diagnosability can be
terconnected components. Each component has 6 states. The detected rather easily for systems with 160 or 200 compo-
number of states of the whole system with C components
           C                                          nents and an astronomic number of states. The propositional
is therefore 6 . There are some dependencies between the formulae are big, with one or two hundred thousand proposi-
states of neighboring components which means that not all tional variables and one or two million clauses, but efﬁcient
6C state combinations are actually possible. The twin plant
                                         2C           SAT solvers can utilize the regularity of the transition sys-
in the diagnosability test has a quadratic number 6 of states, tems to ﬁnd the cyclic path in the twin plant efﬁciently. For
which becomes infeasible for explicit state enumeration start- systems in which the components are more complicated or
ing from about C =8components.                        in which the cycles witnessing non-diagnosability are longer,
  Each component has 22 events of which 4 are observable. the approach probably does not scale quite as far.
We tested the diagnosability of a faulty event in one com-
ponent. To obtain bigger and bigger problems we increased
the number of components. The parameter n for proving 6   Related Work
non-diagnosability was 4 irrespective of C, meaning that the Another approach to ﬁnding paths in graphs compactly rep-
shortest path with a cycle has length 4.              resented in terms of state variables is based on ordered bi-
  Statistics on formulae representing the diagnosability prob- nary decision diagrams (OBDDs) [Bryant, 1992]. OBDDs
lem are given in Table 1. The formulae for n =3are unsat- were very popular in computer-aided veriﬁcation, especially
isﬁable and for n =4they are satisﬁable. After the ﬁrst model-checking [Burch et al., 1994], until the introduction
two columns for C and n we give the value of the formula of SAT based techniques [Biere et al., 1999] following their
(whether it is satisﬁable or not), the number of propositional success in AI planning [Kautz and Selman, 1996].Themain
variables and clauses in the formula, and ﬁnally the time it disadvantage of OBDDs is their fast growth when the number
took a SAT solver to test satisﬁability.              of state variables increases. Their main advantages are gen-
  The experiments were run with a 1.73 GHz Pentium 4 com- erality and ﬂexibility. For instance, it is easy to detect that an
puter and the Siege SAT solver (version 4) [Ryan, 2003]. OBDD represents all reachable states, which is more difﬁcult
Since Siege is a randomizing SAT solver and the runtimes forSATasdiscussedinSection4.
vary across different runs, we ran it 10 times with each for- Cimatti et al. [2003] have expressed a narrow diagnosabil-

                                                IJCAI-07
                                                   536