              A Lattice-based Approach to Computing Warranted Beliefs
                          in Skeptical Argumentation Frameworks∗

                        Carlos Ivan´ Chesnevar˜      Guillermo Ricardo Simari
             Dept. of Computer Science and Eng. – Universidad Nacional del Sur – 8000 Bah´ıa Blanca, ARGENTINA
                 Tel. +54-291-459-5135 – Fax +54-291-459-5136 – Email: {cic,grs}@cs.uns.edu.ar


                    Abstract                          we will use an abstract argumentation framework (following
                                                      Dung’s seminal approach to abstract argumentation [Dung,
    This paper introduces a novel approach to model   1995]) enriched with the notion of dialectical constraint.
    warrant computation in a skeptical abstract argu-
    mentation framework. We show that such search     Deﬁnition 1 [Dung, 1995] An argumentation framework Φ is
    space can be deﬁned as a lattice, and illustrate how a pair Args, R, where Args is a ﬁnite set of arguments and R is
    the so-called dialectical constraints can play a role a binary relation R ⊆ Args × Args. The notation (A, B) ∈ R (or
    for guiding the efﬁcient computation of warranted equivalently A R B) means that A attacks B.
    arguments.
                                                        A dialectical constraint imposes a restriction characteriz-
                                                      ing when a given argument sequence λ is valid in a frame-
1  Introduction and Motivations                       work Φ. An argumentation theory is deﬁned by combining
Abstract argumentation frameworks have played a major role an argumentation framework with a particular set of dialecti-
as a way of understanding argument-based inference, result- cal constraints. Formally:
ing in different argument-based semantics. In order to com-
                                                      Deﬁnition 2 Let Φ=Args, R be an argumentation framework.
pute such semantics, efﬁcient argument-based proof proce-               C               Φ             C :
dures are required for determining when a given argument A A dialectical constraint in the context of is any function
                                                      LinesΦ →{True,False}, where LinesΦ denotes the set of all
is warranted. This involves the analysis of a potentially large
                                                      possible sequences of arguments [A0, A1, A2,...,Ak] in Φ where
search space of candidate arguments related to A by means of for any pair of arguments Ai, Ai+1 it holds that Ai+1 R Ai.
an attack relationship.
  This paper presents a novel approach to model such search
                                                      Deﬁnition 3 An argumentation theory T (or just a theory T )is
space for warrant computation in a skeptical abstract argu- a pair (Φ, DC), where Φ is an argumentation framework, and
mentation framework. We show that the above search space DC = {C1, C2,...,Ck} is a ﬁnite (possibly empty) set of di-
can be deﬁned as a lattice, and illustrate how some constraints alectical constraints.
(called dialectical constraints) can play a role for guiding the       =(ΦDC)                      DC
efﬁcient computation of warranted arguments. The rest of Given a theory T   ,    , the intended role of is
                                                                              [                         ]
this paper is structured as follows. Section 2 presents the ba- to avoid fallacious reasoning Hamblin, 1970; Rescher, 1977
sic ideas of an abstract argumentation framework with dialec- by imposing appropriate constraints on argumentation lines
tical constraints. Section 3 shows how so-called dialectical to be considered rationally acceptable. It must be noted that
trees can be used to analyze the search space for computing a full formalization for dialectical constraints is outside the
warrants, representing it as a lattice. In Section 4 we analyze scope of this work. We do not claim to be able to identify
different criteria which can lead to compute warrant more ef- every one of such constraints either, as they may vary from
                                                      one particular argumentation framework to another; that is
ﬁciently on the basis of this lattice characterization. Finally,   DC
in Sections 5 and 6 we discuss some related work and present the reason why is included as a parameter in T .
the main conclusions that have been obtained.           Argument games provide a useful form to characterize
                                                      proof procedures for skeptical semantics in argumentation.1
2  An Abstract Argumentation Framework                Such games model defeasible reasoning as a dispute be-
   with Dialectical Constraints                       tween two parties (Proponent and Opponent of a claim), who
In this paper we are concerned with the study of warrant exchange arguments and counterarguments, generating dia-
computation in argumentation systems, with focus on skep- logues. A proposition Q is provably justiﬁed on the basis
tical semantics for argumentation. As a basis for our analysis of a set of arguments if its proponent has a winning strategy
                                                      for an argument supporting Q, i.e., every counterargument
  ∗This paper is based on a preliminary workshop paper from the (defeater) advanced by the Opponent can be ultimately de-
same authors (“An Abstract Model For Computing Warrant in Skep- feated by the Proponent. Dialogues in such argument games
tical Argumentation Frameworks”, Proc. of the 11th NMR 2006
Workshop, Windermere, UK, June 2006).                    1See an in-depth discussion in [Prakken, 2005].


                                                IJCAI-07
                                                   280have been given different names (dialogue lines, argumenta-    We will say that λ is exhaustive if there is no acceptable argumenta-
                                                                                                                    
                                                               tion line λ in T such that | λ | < | λ |, and for some k, λ = λ  k
tion lines, dispute lines, etc.). The set of all possible dialogues           
can also be suitably deﬁned as a tree structure (called dialec- (i.e., there is no λ that extends λ in T ). Non-exhaustive argumen-
tical tree or argument tree).2 In the next subsection we extend tation lines will be referred to as partial argumentation lines.
such deﬁnitions in the context of an argumentation theory.
                                                               Example 4  Consider the theory T presented in Ex. 1. Then λ1,
2.1   Argumentation Line. Bundle set
                                                               λ2 and λ3 are exhaustive argumentation lines whereas λ1 2 is a
                                                                                                               
Deﬁnition 4  Let T  =(Φ,   DC)   be an argumentation theory.  partial argumentation line. In the case of the theory T in Ex. 2,
An  argumentation line λ in T is any ﬁnite sequence of argu-   the argumentation line λ2 extends λ1. Argumentation line λ2 is ex-
                                                                                                               
ments  [A0, A1, ..., An]  in LinesΦ.  A subsequence  λ   =    haustive, as it cannot be further extended on the basis of T with the
[A0, A1, A2,...,Ak], k ≤  n, will be called an initial argumen- dialectical constraint introduced in Ex. 3.
tation segment (or just initial segment)inλ of length k, denoted
                                                                We will distinguish the set S =  {λ1,λ2,...,λk}   of all
λ k. When k<nwe say that   λ is a proper initial segment in λ.
   We will say that λ is rooted in A0, writing | λ | = s to denote argumentation lines rooted in the same initial argument and
that λ has s arguments. We will also write LinesA to denote the set with the property of not containing lines that are initial sub-
of all argumentation lines rooted in A in the theory T .      sequences of other lines in the set.

                                                                                                      {              }
Example 1   Consider a theory T =(Φ,  DC), with  DC   =  ∅,   Deﬁnition 7  Given a theory T , a set S = λ1, λ2, ..., λn of
                                                              argumentation lines rooted in a given argument A, denoted SA,is
where the set Args is {A0, A1, A2, A3, A4 }, and assume that
                                                               a bundle set wrt T iff there is no λi,λj ∈ SA such that λi extends
the following relationships hold: A1 defeats A0, A2 defeats A0,
                                                               λj .
A3  defeats A0, A4 defeats A1. Three different argumentation lines
rooted in A0 can be obtained, namely λ1 = [A0, A1, A4], λ2 =
[A0, A1, A2], and λ3 = [A0, A3]. In particular, λ1 2 = [A0, A1] Example 5 Consider the theory T =(Φ, DC)  from Ex. 1, and
                                                                                                           = {         }
is an initial argumentation segment in λ1.                     the argumentation lines λ1, λ2, and λ3. Then SA0 λ1,λ2,λ3
                                                               is a bundle set of argumentation lines wrt T .
                              
Example 2   Consider a theory T =(Φ, DC)  where the set Args
is {A0, A1 }, and assume that the following relationships hold: A0 2.2 Dialectical Trees
defeats A1, and A1 defeats A0. An inﬁnite number of argumen-
                                                               A bundle set SA  is a set of argumentation lines rooted in a
tation lines rooted in A0 can be obtained (e.g., λ1 = [A0], λ2 =
                                                               given argument A. Such set can be thought of as a tree struc-
[A0, A1], λ3 = [A0, A1, A0], λ4 = [A0, A1, A0, A1], etc.).
                                                              ture, where every line corresponds to a branch in the tree.
                                                              Formally:
Remark 1    Note that from Def. 4, given an argumentation line [A0,
A   A       A ]                 [A  A        A    ]    0 ≤
  1,  2,..., n  every subsequence i,  i+1,... i+k  with       Deﬁnition 8  Let T be a theory, and let A be an argument in T ,
i, i+k ≤ n is also an argumentation line. In particular, every initial
                                                               and let SA = {λ1, λ2, ..., λn} be a bundle set of argumentation
argumentation segment is also an argumentation line.          lines rooted in A. Then, the dialectical tree rooted in A based on
   Intuitively, an argumentation line λ is acceptable iff it sat- SA, denoted TA, is a tree structure deﬁned as follows:
                                                                               T     A
isﬁes every dialectical constraint of the theory it belongs to. 1) The root node of A is ;
                                                              2) Let F ={tail(λ), for every λ ∈ SA}, and H={head(λ), for every
Formally:                                                             4
                                                               λ ∈ F }. If H = ∅ then TA has no subtrees. Otherwise, if H =
                                                               {B1,...,Bk}, then for every Bi ∈ H, we deﬁne getBundle(Bi)=
Deﬁnition 5  An argumentation line λ is acceptable wrt T =
                                                               {λ ∈ F  | head(λ)=Bi}. We put   TBi as an immediate subtree
(Φ, DC)  iff Ci(λ)=True, for every Ci in DC.
                                                              of A, where TBi is a dialectical tree based on getBundle(Bi).We
                                                               will write Tree to denote the family of all possible dialectical trees
   In what follows, we will assume that the notion of accept-              A
                                                              based on A. We will represent as TreeT the family of all possible
ability imposed by dialectical constraints is such that if λ is dialectical trees in the theory T .
acceptable wrt a theory T =(Φ, DC), then any subsequence
of λ is also acceptable.
                                                               Example 6  Consider the theory T =(Φ, DC) from Ex. 1. In that
                                                                                   =  {         }
Example 3   Consider the theory T in Ex. 2, and assume that   theory it holds that SA0  λ1,λ2,λ3   is a bundle set. Fig. 1(a)
                                                         3                                    T
DC={C1}, with   C1 = {repetition of arguments is not allowed }. shows an associated dialectical tree A0 .
                                                   
Then λ1 and λ2 are acceptable argumentation lines in T ,butλ3    Clearly, Deﬁnition 8 induces an equivalence relation on the
and λ4 are not.
                                                               set of all TreeA . Formally:

                                                          
Deﬁnition 6  Let T be an argumentation theory, and let λ and λ
                                                              Deﬁnition 9 Let T be a theory, and let TreeA be the set of all
be two acceptable argumentation lines in T . We will say that λ ex- possible dialectical trees rooted in an argument A in T . We will
                                                                                                         
tends λ in T iff λ = λ  k, for some k<| λ | (i.e., λ extends λ iff   TA                T           TA ≡τ  T
                                                             say that    is equivalent to A, denoted       A  ifftheyare
λ is a proper initial argumentation segment of λ ).            obtained from the same bundle set SA.

   2For in-depth discussion see [Prakken and Vreeswijk, 2002].    4The functions head(·) and tail(·) have the usual meaning in list
   3
    Note that this corresponds to a function C1(λ) = Trueiff there processing, returning the ﬁrst element in a list and the list formed by
is no Ai, Aj in λ such that Ai =Aj , and Falseotherwise.       all elements except the ﬁrst, respectively.


                                                        IJCAI-07
                                                          281                                                      Deﬁnition 12 A dialectical tree TA will be called exhaustive iff it
                                                      is constructed from the set SA of all possible exhaustive argumen-
                                                      tation lines rooted in A, otherwise TA will be called partial.
                                                        The exhaustive dialectical tree for any argument A can be
                                                      proven to be unique.
                                                      Proposition 3 Let T be a theory, and let A be an argument in T .
                                                      Then there exists a unique exhaustive dialectical tree TA in T (up to
                                                      an equivalence wrt ≡τ as given in Def. 9)
                                                        Acceptable dialectical trees allow to determine whether the
                                                      root node of the tree is to be accepted (ultimately undefeated)
                                                      or rejected (ultimately defeated). A marking function pro-
                                                      vides a deﬁnition of such acceptance criterion. Formally:
                              T                       Deﬁnition 13 Let T be a theory. A marking criterion for T is a
Figure 1: (a)Exhaustive dialectical tree A0 for Ex. 6; (b)resulting :    →{D   U}                 (T )=U
tree after applying and-or marking (Def.14);(c)–(d) two other ex- function Mark TreeT , . We will write Mark i
                                                      (resp. Mark(Ti)=D) to denote that the root node of Ti is marked
haustive dialectical trees belonging to the equivalence class TA
                                               0      as U-node (resp. D-node).
                                                      Several marking criteria can be deﬁned for capturing skep-
                   A
  Given an argument  , there is a one-to-one correspon- tical semantics for argumentation. A particular criterion
dence between a bundle set SA of argumentation lines rooted (which we will later use in our analysis for strategies for com-
  A
in   and the corresponding equivalence class of dialectical puting warrant) is the and-or marking of a dialectical tree,
trees that share the same bundle set as their origin (as speci- which corresponds to Dung’s grounded semantics [Dung,
ﬁed in Def. 8). Each member of an equivalence class repre- 1995].
sents a different way in which a tree could be built. Each par-
                                                                                      T
ticular computational method used to generate the dialectical Deﬁnition 14 Let T be a theory, and let A be a dialectical tree.
                                                      The and-or marking of TA is deﬁned as follows:
tree from the bundle set will produce a particular member of T                    (T )=U
the equivalence class.                                1) If A has no subtrees, then Mark A .
                                                      2) If TA has subtrees T1, ..., Tk then a) Mark(TA)=U iff
                                                      Mark(Ti)=D, for all i =1...k.b)Mark(TA)=D      iff ∃
Deﬁnition 10 Let T be an argumentative theory, and let SA be a Ti such that Mark(Ti)=U, for some i =1...k.
bundle set of argumentation lines rooted in an argument A of T .We
                                                                                       T
deﬁne the mapping T : ℘(LinesA) \ {∅} → TreeA as T(SA)=def Proposition 4 Let T be a theory, and let A be a dialectical tree.
TA, where TreeA is the quotient set of TreeA by ≡τ , and TA denotes The and-or marking deﬁned in Def. 14 assigns the same mark to all
                                                                  T
the equivalence class of TA.                          the members of A.
                                                      Deﬁnition 15 Let T be an argumentative theory and Mark a
Proposition 1 For any argument A in an argumentative theory T , marking criterion for T . An argument A is a warranted argument
          T          5
the mapping is a bijection.                           (or just a warrant)inT iff the exhaustive dialectical tree TA is such
                                                      that Mark(TA)=U.
  As the mapping T is a bijection, we can also deﬁne the
                      −1
                                                      Example 7  Consider the exhaustive dialectical tree TA0 in Ex. 6
inverse mapping S =def T . In what follows, we will use
                                                      shown in Fig. 1(a). Fig. 1(b) shows the corresponding marking by
indistinctly a set notation (a bundle set of argumentation lines             A           T
                  A                                   applying Def. 14, showing that 0 –the root of A0 – is an ultimately
rooted in an argument )oratree notation (a dialectical tree                    (T )=D           A
        A                      S     T                defeated argument, i.e., Mark A0  . Hence  0 is not a
rooted in ), as the former mappings and allow us to go warranted argument. Fig. 1(c)–(d) shows two marked dialectical
from any of these notations to the other.
                                                      trees belonging to the same equivalence class TA0 .

Proposition 2 Let T be a theory, and TA a dialectical tree in T . 3 Warrant Computation via Dialectical Trees
                        T   T           A
Then it holds that any subtree A of A, rooted in , is also a Our main concern is to model warrant computation in skepti-
dialectical tree wrt T .
                                                      cal argumentation frameworks, and in such a case tree struc-
2.3  Acceptable dialectical trees                     tures lend themselves naturally to implementation. In fact,
                                                      some implementations of skeptical argumentation systems
                                          T
Deﬁnition 11 Let T be a theory. A dialectical tree A in T is (e.g., DeLP [Garc´ıa and Simari, 2004]) rely on tree structures
acceptable iff every argumentation line in the associated bundle set (such as dialectical trees) which can be computed by perform-
S(TA) is acceptable. We will distinguish the subset ATreeA (resp.
                                                      ing backward chaining at two levels. On the one hand, ar-
ATreeT ) of all acceptable dialectical trees in TreeA (resp. TreeT ).
                                                      guments are computed by backward chaining from a query
  As acceptable dialectical trees are a subclass of dialectical (goal) using a logic programming approach (e.g., SLD reso-
trees, all the properties previously shown apply also to them. lution). On the other hand, dialectical trees can be computed
In the sequel, we will just write “dialectical trees” to refer to by recursively analyzing defeaters for a given argument, de-
acceptable dialectical trees, unless stated otherwise. featers for those defeaters, and so on. In particular, in more
                                                      complex and general settings (such as admissibility seman-
  5Proofs not included for space reasons.             tics) dialectical proof procedures have been developed [Dung


                                                IJCAI-07
                                                   282et al., 2006] using a similar strategy to compute warranted
belief.
  In our abstract model the process of building an arbitrary

dialectical tree TA0 can be thought of as a computation start-
ing from an initial tree (consisting of a single node) and
evolving into more complex trees by adding new arguments
(nodes) stepwise. Elementary steps in this computation can
be related via a precedence relationship “” among trees:
                                      
Deﬁnition 16 Let T be a theory, and let TA, TA be acceptable
dialectical trees rooted in an argument A. We deﬁne a relationship
                                             
⊆TreeA   × TreeA . We will write TA  TA whenever TA can
be obtained from TA by extending some argumentation line λ in TA
                                                 
by exactly one argument. As usual, we write TATA iff TA = TA
                             
or TATA. We will also write TA∗TA iff there exists a (possibly
                                              
empty) sequence T1, T2,...,Tk s.t. TA = T1 ...Tk = TA.

  Every dialectical tree Ti can be seen as a ‘snapshot’ of the
status of a disputation between two parties (proponent and op-
ponent), and the relationship “” allows to capture all possi-
ble evolutions of a given disputation.6 In particular, note that
for any argumentative theory T , given an argument A the
         (        )
ordered set TreeA , ∗ is a poset, where the least element is
A  and the greatest element is the exhaustive dialectical tree
TA. From Def. 16 the notion of exhaustive dialectical tree
can be recast as follows: A dialectical tree Ti is exhaustive iff
there is no Tj = Ti such that Ti  Tj.
  We are now concerned with the following question: can
we enumerate all possible ways of computing the exhaustive
dialectical tree TA rooted in a given initial argument A? The
answer is yes. In fact, as we will see in the next deﬁnitions,
we can provide a lattice characterization for the space of all
possible dialectical trees rooted in a given argument A on
the basis of join of dialectical trees (∨) (resulting in a new Figure 2: Lattice for all possible dialectical trees rooted in an argu-
                                                      ment A0 (Example 8) (top) and search space for computing dialec-
tree corresponding to the ‘union” of T1 and T2) and meet of
                                                      tical trees rooted in A (bottom)
dialectical trees (∧) (resulting in a new tree corresponding to
the “intersection” of T1 and T2). Formally:
                                                      Example 8  Consider the theory T from Ex. 1, and the exhaustive
Deﬁnition 17 Let T be an argumentative theory, and let T1 and dialectical tree rooted in A0 shown in Ex. 6. The complete lattice
T2 be dialectical trees rooted in A. We deﬁne the meet and join of associated with A0 is shown in Fig. 2.
T1 and T2, (written T1 ∧T2 and T1 ∨T2) as follows:
• λ is an argumentation line in T1 ∧T2 iff λ = λ1 k = λ2 k, for
                                              
some k>0 such that λ1 ∈T1 and λ2 ∈T2 and there is no λ that 4 Computing Warrant Efﬁciently
extends λ satisfying this situation.
• λ is an argumentation line in T1 ∨T2 iff 1) λ ∈T1 and there is We have shown that given an argumentative theory T , for any
                                                            A                   (        ∨ ∧)
no λ ∈T2 such that λ extends λ,or2)λ ∈T2 and there is no argument in T there is a lattice ATreeA, , whose bot-
              
λ ∈T1 such that λ extends λ.                          tom element is a dialectical tree with a single node (the ar-
                                                      gument A  itself) and whose top element is the exhaustive
  For any argumentation theory T the set of all possible ac- dialectical tree TA. In that lattice, whenever Tk = Ti∨Tj it is
                                         A∈
ceptable dialectical trees rooted in an argument T can the case that TiTk and TjTk.
be conceptualized as a lattice. Formally:               In Fig. 2(top) corresponding to Example 8 we can see
Lemma 1  Let A   be an argument in a theory T , and let that for dialectical trees T2 and T3, it holds that Mark(T2)
(ATreeA, ∗) be the associated poset. Then (ATreeA, ∨, ∧) is a = Mark(T3) = D (assuming that Mark is deﬁned as in
lattice.                                    ⊥         Def. 14). Clearly, it is the case that any tree Ti where T2Ti
  Given the lattice (ATreeA, ∨, ∧), we will write TA to de-
                                                      or T3Ti satisﬁes that Mark(Ti)=D. In other words,
note the bottom element of the lattice (i.e., the dialectical tree
                                                     whichever is the way the tree T2 (or T3) evolves into a new
involving only A as root node) and TA to denote the top el-
                                                      tree in (ATreeA , ∨, ∧) it turns out that the associated mark-
ement of the lattice ( the exhaustive dialectical tree).           0
                 i.e.,                                ing remains unchanged. We formalize that situation as fol-
  6
   Note however that Ti Tj does not imply that one party has lows:
advanced some argument in Ti and the other party has replied in Tj .
Thus our framework provides a setup to deﬁne unique- and multi- Deﬁnition 18 Let T be an argumentation theory, and let TA be
                                                                                     
move protocols as deﬁned by Prakken [Prakken, 2005].  a dialectical tree, such that for every TA evolving from TA (i.e.,


                                                IJCAI-07
                                                   283                                    
TA∗TA) it holds that Mark(TA)=Mark(TA). Then TA is a dialectical tree. For skeptical argumentation semantics, infer-
settled dialectical tree in T .                       ence engines like DeLP [Garc´ıa and Simari, 2004] use depth-
Now we have a natural, alternative way of characterizing war- ﬁrst search to generate dialectical trees for queries and de-
rant.                                                 termine if a given literal is warranted. Such search can be
                                                      improved by applying α − β pruning, so that not every node
Proposition 5 Let T be a theory, and let A be an argument in T .
    A                        (T )=U         T         (argument) is computed. In other words, depth-ﬁrst search
Then  is a warrant wrt T iff Mark A   , where A is a  naturally favors the computation of settled dialectical trees.
settled dialectical tree.
  Clearly, computing settled dialectical trees is less expen- Example 10 Consider the marked dialectical trees in Fig. 1(right)

sive than computing exhaustive dialectical trees, as fewer belonging to the same equivalence class TA0 (Ex. 7). Then depth-
nodes (arguments) are involved in the former case. Follow- ﬁrst computation using α−β pruning will perform better on the tree
ing Hunter’s approach [Hunter, 2004], in what follows we in Fig. 1(d) than on the tree in Fig. 1(c), as in the ﬁrst case, only two
will formalize the cost of computing a dialectical tree as a nodes need to be explored to obtain the ﬁnal marking of the tree (A0
       cost :     →                   [          ]    and A3), whereas in the second case four nodes (A0, A1, A3 and
function     TreeT     . As explained in Hunter, 2004 , A
several issues can be considered when computing such cost. 4) need to be traversed.
                                               cost
For simplicity, in our formalization we will assume that The natural question that arises next is how to compute
is linearly related to the number of nodes in a dialectical tree, minimally settled trees. Given a theory T =(Φ, DC),it
        cost(T)   ∗      (T)           0
such that      = C  Nodes   , where C>  is a constant turns out that the set of dialectical constraints DC can help
        (·)
and Nodes  stands for the number of nodes in a tree.  to provide a way of approximating such minimally settled
  The next deﬁnition reﬁnes the class of settled dialectical trees, based on the fact that in depth-ﬁrst search the order
trees by distinguishing those trees involving as few arguments in which branches are generated is important: should shorter
as possible in order to determine whether the root of the tree branches be computed before longer ones, then the resulting
is ultimately a warranted argument according to the marking search space can be proven to be smaller on an average search
procedure. From the many possible minimally settled dialec- tree [Chesnevar˜ et al., 2005]. Usually heuristics are required
tical trees rooted in a given argument A, a dialectical tree T
                                                     to anticipate which branches are likely to be shorter than the
is optimally settled if  ∃T that is less expensive than T. average. Constraints in DC can help provide such kind of
                                                      heuristics. In this setting, heuristics for efﬁcient computation
Deﬁnition 19 A dialectical tree T is a minimally settled dialec-
                   T T         T                   of dialectical trees can be understood as functions which im-
tical tree iff there is no such that is a settled dialec- prove the associated dialectical proof procedure by tending to
tical tree. A dialectical tree T is an optimally settled dialectical
tree iff T is minimally settled, and for any other settled tree T , approximate optimally settled trees.
              
cost(T) ≤ cost(T ).                                   Example 11  In DeLP the set DC includes as a constraint that
                                                      arguments advanced by the proponent (resp. opponent) should not
Example 9 Consider the theory T from Ex. 1, and the complete be contradictory in any argumentation line. The following heuris-
     (        ∨ ∧)                      T     T
lattice ATreeA0 , , shown in Fig. 2 (top). Then 2 and 3 are tics [Chesnevar˜ et al., 2005] can be shown to favor the computation
minimally settled dialectical trees.                  of shorter argumentation lines when applying depth-ﬁrst search in
                                                      the context of DeLP: if the current argument A0 is a leaf node in
            A         A
  Let Settled , Minimal  and OptimalA be the sets of  a dialectical tree T, and has different candidate defeaters A1, A2,
all settled, minimally settled and optimally settled dialecti- ..., Ak, then the Ai which shares as many literals as possible with
                       A
cal trees for an argument , resp. Clearly, it holds that A0 should be chosen when performing the depth-ﬁrst computation
         ⊆            ⊆          ⊆                      T
OptimalA    MinimalA    SettledA   ATreeA. The sets   of A0 . Thus, while depth-ﬁrst computation of dialectical trees fa-
SettledA, MinimalA and OptimalA can be identiﬁed in any vors naturally the construction of minimally settled dialectical trees,
lattice (ATreeA, ∨, ∧), as shown in Fig. 2 (bottom). The bor- by applying this heuristics an approximation to optimally settled di-
derline on top of the lattice denotes all possible minimally alectical trees is obtained.
settled dialectical trees T1,...,Tk rooted in A. Some of such
trees in that set may be optimal. Any dialectical tree that 4.2 Relevance in Dialectical Trees
evolves from settled dialectical trees T1,...,Tk will be also a In [Prakken, 2001] the notion of relevance was introduced
settled dialectical tree. In particular, the exhaustive dialectical in the context of argument games and the characterization of
tree is also settled.                                 protocols for liberal disputes. According to [Prakken, 2001],
                                                      a move is relevant in a dispute D iff it changes the disputa-
4.1  Dialectical Constraints (Revisited)              tional status of D’s initial move.7 In our context, dialectical
                                                      trees correspond to such disputes. In the setting presented
As we have analyzed previously, the lattice associated with [        ]
            A                                         in Prakken, 2001 , moves are performed by both parties in-
any argument  accounts for the whole search space for de- volved in a dispute (Proponent and Opponent).
tecting if A is warranted. To do so it is not necessary to
                                          A             Interestingly, there is a clear relation between minimally
compute the exhaustive dialectical tree rooted in ; rather, settled dialectical trees and this notion of relevance, as the
it sufﬁces to focus search on settled dialectical trees, as they notion of extending an argumentation line by one argument
involve less nodes and are consequently more efﬁcient. When (as introduced in Def. 16) can be recast as performing a move.
determining whether a conclusion is warranted, argument-
based inference engines are supposed to compute a sequence 7The notion of relevance as well as some interesting properties
of dialectical trees T1, T2, ..., Tk such that Tk is a settled were further studied and reﬁned [Prakken, 2005].


                                                IJCAI-07
                                                   284