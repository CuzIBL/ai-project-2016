                       Consistent, Convergent, and Constant-Time SLAM" 


                                           J. Leonard and P. Newman 


                        Abstract                                 This paper examines the SLAM problem using submaps. 
                                                               While there has been a considerable amount of work in 
     This paper presents a new efficient algorithm for si•     SLAM along these lines, no previous method satisfies each 
     multaneous localization and mapping (SLAM), us•           of the three criteria of (1) provable consistency, (2) spatial 
     ing multiple overlapping submaps, each built with         convergence, and (3) constant-time updates. For example, 
     respect to a local frame of reference defined by one      Julier and Uhlmann [20011 provide a consistent, constant-
     of the features in the submap. The global posi•           time algorithm for large-scale SLAM, based on split covari-
     tion of each submap is estimated using informa•           ance intersection, but this method does not achieve "tight" 
     tion from other submaps in an efficient, provably         convergence to the error bounds that would be obtained 
     consistent manner. For situations where the mobile        with a full covariance solution. Methods such as the com•
     robot is able to make repeated visits to all regions of   pressed filter [Guivant and Nebot, 2001 J, the constrained lo•
     the environment, the method achieves convergence          cal submap filter [Williams et al, 2002], and sequential map 
     to a near-optimal result with time complexity             joining [Tardos et al, 20021 are provably consistent and con•
     while maintaining consistent error bounds. Simula•        vergent, but are where is the number of the fea•
     tion results demonstrate the ability of the technique     tures in the environment. Other techniques such as decoupled 
     to converge to errors that are only slightly greater      stochastic mapping (DSM) (Leonard and Feder, 20001 and 
     than the full solution, while maintaining consis•         SEIF's [Thrun et al, 2002] achieve 0(1) performance, but 
     tency.                                                    make approximations that require empirical testing to verify 
                                                               state estimation consistency. The Atlas framework for large-
                                                               scale SLAM [Bosse et al, 2003] achieves constant-time per•
1 Introduction                                                 formance during the motion of the robot, enabling closing of 
                                                               large loops, but does not compute state estimates with respect 
The capability of simultaneous localization and mapping 
                                                               to a single global reference frame. 
(SLAM) is considered vital for the creation of long-lived 
autonomous mobile agents. Because of the difficulties en•        The FastSLAM technique stands out in the literature as 
countered by SLAM algorithms when applied to larger envi•      perhaps the only published technique which has been suc•
ronments, the "map scaling" problem has been identified as     cessfully posed for the general nonlinear SLAM problem 
one of the key issues for research in this area. In this pa•   with computational effort The performance of 
per, we adopt the feature-based, state-space formulation of    FastSLAM, however, depends linearly on a "parameter (the 
SLAM [Smith et al, 19871. Recent related work in SLAM in•      number of particles), whose scaling with environmental size 
cludes submap decomposition methods [Leonard and Feder,        is still poorly understood [Thrun et al, 2002]". 
2000; Guivant and Nebot, 2001; Julier and Uhlmann, 2001;         This paper considers SLAM with known data association. 
Williams et al, 2002; Tard6s et al, 2002], FastSLAM iMon-      This is a major assumption, but it enables us to focus on the 
temerlo et al, 2002], sparse extended information filters      underlying structure of SLAM state estimation with submaps 
(SElF's) [Thrun et al, 2002], scan-matching [Gutmann and       for the linear Gaussian case. Other research has shown the 
Konolige, 1999; Thrun, 2001; Hahnel et al 2002] and topo•      ability to perform feature detection and measurement associ•
logical approaches [Kuipers and Beeson, 2002; Choset and       ation using techniques such as random sample consensus and 
Nagatani,2001].                                                Joint Compatibility Testing [Neira and Tardos, 2001 ]. 
                                                                 In this paper, we demonstrate how the three criteria of 
   *This research has been funded in part by NSF Career Award 
                                                               consistency, convergence, and constant-time updates can be 
BES-9733040, the MIT Sea Grant College Program under grant 
NA86RG0074, and the Office of Naval Research under grant       achieved with multiple, locally referenced submaps. The key 
N00014-97-0202.                                                idea is to decouple the estimate of a map's global location 
                                                               from any of the state estimates within the map. This ''inside-
   tP. Newman is at the Robotics Research Group, University of 
Oxford and J. Leonard is at the Department of Ocean Engineering at out" decomposition strategy succeeds because state estimates 
MIT, email: pnewman@robots.ox.ac.ukjleonard@mit.edu            from one map are never mixed with state estimates from other 


ROBOTICS                                                                                                            1143  maps. This enables us to guarantee the consistency of the     id. Each map has associated with it a Map Root entity i 
 state estimates for the linear Gaussian case.                 and a Map Location vector The Map Location vec•
   The structure of this paper is as follows. After reviewing  tor describes the pose of a map's local coordinate frame in 
 the full (single map) SLAM problem in Section 2, we define    the global frame G. The local coordinate frame of a map is 
 our terminology in Section 3. Section 4 summarizes the new    coincident with one of the entities in the local map; this en•
 SLAM algorithm and Section 5 discusses its consistency and    tity is referred to as the Map Root. In other words, the Map 
 convergence properties. Section 6 describes the performance   Root lies at the origin of the local map, and it is the entity to 
 of the algorithm using simulations and Section 7 provides a   which all other entities in a map are referenced. If an entity 
 concluding discussion.                                        is the Map Root, then by definition its location vector will be 
                                                                        and its global location vector given by — the 

 2 SLAM within a single map                                    location of the map in global coordinates.l We use the pre-
 Let us assume that there are features in the environment,     superscript notation to denote that all entities in map 
 and that they are static. The global frame, designated by G,  are referenced to where is the root entity of the map. 
 is a unique, immutable coordinate-frame that is defined at the  The notation is summarized as: 
 beginning of a mission. The true state at time is designated 
 by , where rep•
 resent the location of the vehicle, and                       Using this notation we can write the transformation from 
represents the locations of the environmental features. We     to in map m with root entity . We simplify 
assume that the vehicle moves from time to time in notation by dropping the right superscript when describing a 
response to a known control input, u(k), that is corrupted by  transformation with respect to the map root: 
noise. designate the set of all control inputs from 
time 0 through time designate the set of sensor mea•
surements obtained at time designate the set of all            The term is the pose of an entity in the local frame 
measurements obtained from time 0 through time For each 
                                                               of the map (which has its Map Root as entity 
measurement there is a corresponding assign•
                                                                 We can manipulate location vectors using the binary trans•
ment index The value of if measurement 
                                                               formation operator and the unary operator where 
originates from feature designate the set of all as•
signment indices from time 0 through time Assuming that 
the associations are known, the objective is to compute recur•
sively the probability distribution for the location of the robot 
and the features, with reference to the global reference frame Using the notation described above, we can describe the rela•
G, given the measurements, control inputs, and assignments:    tionship between entities in any given map. Consider the case 
                                                               of map referenced to feature denoted Taking two 
                                                        (1) 
                                                               entities and from ve can express the transformation 
For the Linear-Gaussian (LG) SLAM problem, the Kalman          from to k as 
filter provides the optimal estimate of this pdf, which is de•
scribed by its mean and co-
variance The properties of single-map LG SLAM so•
lution are well-known LDissanayake et al, 2001 ]. 
                                                                                                                      (2) 
3 Machinery for SLAM using multiple maps 
                                                               where the last step uses the simplification in notation de•
We now proceed to define several terms and basic operations    scribed above. 
that will facilitate description of the new method. A location   We define root-shifting to be the operation, S, that 
vector is a parameterization of both position and orientation  changes the root of a map from After this operation 
of one coordinate-frame, with respect to another, In 712       all location vectors in a map will be referenced to rather 
this is represented as a translation by followed by a ro•      than This operation is is simply an extension of 
tation These three parameters are encapsulated in the 3        Equation 2 to act on all entities in the map: 
vector 
  An entity is a parameterization of a vehicle or landmark.                                                            (3) 
Each entity is labelled with a unique positive integer — this 
is referred to as the entity's ID. We can attach a coordinate 
                                                                                                                       (4) 
frame to any entity i and describe it using a location vector 
in another coordinate frame. The vector should be under•
stood to be a parameterization of a transformation from to 
                                                                  In the SLAM literature, the term "base reference" [Tardos et a/., 
    The uncertainty in this transformation is represented by 
                                                               2002] is a synonym for our term Map Root. Note that in the general 
                                                               case with orientation, a single point feature will be insufficient to 
  A map is a collection of entities all described with respect define a reference frame. In 2-D, two points will be required and in 
to a local coordinate frame. Each map has a unique integer     3-D three points will be required. 


1144                                                                                                          ROBOTICS                                                                bound of vehicle location and not feature locations — any 
                                                               feature that is observed from a position inside the map region 
                                                               will be added to the local map. The estimated location of the 
                                                               vehicle is used to deduce which map(s) the vehicle is in, and 
                                                               when to make transitions. When the vehicle travels more than 
                                                                    from the center, the vehicle is considered to have left the 
                                                               current map. The parameter is a hysteresis term, to prevent 
                                                               excessive map switching. In the simulation results below, we 
                                                               use (An alternative to circular map re•
                                                               gions is the use of convex hulls, but this makes no difference 
                                                               to the fundamental performance of the algorithm.) 
                                                                 We assume that the density of discernible features in a local 
                                                               area is bounded. This provides a bound on the number of 
                                                               features that can belong to a map. 
                                                                 When a vehicle leaves a map, we must determine which 
                                                               map (if any) the vehicle has transitioned to. A list of possible 
                                                               candidates is drawn up from a look up table indexed by quan•
                                                               tized vehicle locations. If more than one candidate exists, we 
                                                               choose the map with the lowest ID, i.e., the oldest map. If no 
    Figure 1: Flow chart for each cycle of the algorithm.      candidates are found, then a new map is created at the cur•
                                                               rent location (a distance from the center of the previous 
                                                               map). All of these operations can be performed in constant 
   The global location of a feature j in a local map is time. 
computed by simple composition of the local location vector 
and the already globally referenced Map Location vector:       4.3 Map Location estimation 
                                                               Map Location estimation is the procedure by which global es•
                                                        (5)    timates for feature locations in each local map are improved, 
                                                               resulting in global convergence. This procedure is described 
4 The constant-time SLAM algorithm                             as follows: 
                                                                 1. Select a map p, to improve which is currently referenced 
Figure 1 illustrates the processing steps that are performed 
                                                                    to the root entity i. 
by the algorithm. The four key elements are (1) SLAM pro•
cessing within local maps, (2) Map management (performing        2. Create a set, containing the ID's of all nearby maps 
transitions between maps and creating new maps), (3) Map            including p — the map to be improved. 
Location estimation (determining the best global location es•    3. For each create a setof ID's of 
timate for a submap), and (4) Computation of global state           features that are present in both maps. 
estimates for all features in a map. Each of these processes 
                                                                 4. For the frame    attached to feature calculate 
are described in detail below.                                                    ;
                                                                    its globally referenced location and uncertainty 
4.1 SLAM within local maps                                                 using the location estimate of feature within 
At any one time, there is a single active map. For each map         map q and its current location estimate. 
   we compute a partial solution,                                5. Pick the map and entity ID such that: 
where designates the local map state, and 
and represent subsets of the measurements, associ•
ations, and control inputs, respectively. Each measure•          6. then stop. The map p cannot be 
ment is used in only a single map. (This is vital for               improved 
ensuring consistency of the global Map Location estima•
                                                                 7. Root Shift map p to reference all entities in 
tion process.) Each map m contains an estimated mean 
                                                                    map p to a coordinate frame attached to entity 
                                and covariance cor•
responding to selected vehicle locations (for time steps when 
map m is the active map), and only a subset of the features. 
These estimates are the same as the location vectors             For constant-time operation. Map Location estimation is 
and associated uncertainty for the features in the local       performed only when the vehicle transitions from one map to 
map.                                                           another. Alternatively, the procedure can be performed peri•
                                                               odically (or at the end of the mission) to all maps. Multiple 
4.2 Map management                                             iterations result in global convergence to a near-optimal solu•
In our scheme, each map has a center, which is defined as the  tion, but the computation complexity is no longer O(l). 
vehicle location at the time of the creation of a map. About     The work presented in this paper differs from that proposed 
this center is defined a region of radius This defines a       in [Leonard and Feder, 2000] on the following counts: 


ROBOTICS                                                                                                            1145    • No vehicle information is carried between maps upon       5 Consistency and convergence 
     map transitions 
                                                               We begin by defining the term consistency with regard to an 
   • The SLAM scheme adopted within each map need not          estimate of an r.vat time k given all information 
     be based on a Kalman filter.                              up until time Defining the estimated error vector 
   • Mapped entities are represented in local coordinate                     and the estimate covariance as we write 
     frames — one frame per map. In contrast, the DSM          the condition of consistency as: 
     approach used multiple maps but all registered in one 
     global coordinate frame.                                                                                         (12) 
                                                                                                                      (13) 
4.4 Obtaining global location estimates for map 
      features                                                 To show that the global location estimates produced by Equa•
Given an independent, consistent estimate of the location of   tion 6 are consistent, we rely on the following three proper•
a submap p (with root i) with respect to the global frame, G,  ties: (1) local map state estimates (obtained from the 
we can produce a consistent global estimate of the location    local SLAM solution are 
of any feature j in map p by composition of map and feature    consistent, (2) global state estimates tor Map Locations 
 locations:                                                    are consistent, and (3) the composition of these two pieces of 
                                                               information — local state estimates within a map and global 
                                                        (6)    information concerning the location of the map — is consis•
   This estimate is consistent because and are inde•           tent. 
pendent, is "internal" to the map and"external"                  The consistency of local maps follows directly from the 
to the map.                                                    properties of the Kalman filter which in the linear gaussian 
                                                               case is the optimal Bayesian estimator. Clearly, choosing to 
   The existence of a "shared" feature. s, between two maps 
                                                               use a possibly inconsistent estimator such as the EKF in a 
p and q allows the location estimate , of map p, (with root 
                                                               nonlinear scenario will invalidate these claims. However, the 
feature s), to be replaced with where                          LG case allows statements to be made regarding the underly•
                                                        (7)    ing properties of the CTS algorithm. In a non-linear imple•
                                                               mentation, the consistency of the LG case can be matched to 
and the root of map q is any feature id in map q. Equation     an arbitrary degree by using Monte-Carlo estimators in each 
7 should be interpreted as finding an alternative expression   sub-map. Regardless of local estimation techniques, the CTS 
for the global location of a shared feature s using quantities algorithm preserves its constant time property. 
associated with map q instead of p. As map p has a root at the   Local maps have three differences from the full solution 
shared feature s this expression is by definition an alternative (a) their base reference (root) is defined by one of the fea•
expression for the map location. The minimization step of the  tures in the map, (b) relocation is periodically performed to 
algorithm is concerned with finding the best choice of shared  re-initialize the local map when the vehicle transitions back 
feature s.                                                     into it, and (c) the base reference of the local map is peri•
   In the limit each map becomes internally fully correlated   odically shifted from one feature in the local map to another 
and the "min" operation will have no further effect so that for (Root Shifting). None of these three differences result in a 
any feature j                                                  loss of consistency for the local SLAM solution. 
                                                                 The global Map Location estimate for a given map, 
                                                        (8) 
                                                               m, is consistent because it is created via the composition of 
where • is any choice of root. In other words no root-shifting transformations derived from other local maps, and each local 
and replace operation can be found that improves the global    map is independent of other local maps. The composition 
uncertainty of feature j. For the linear case                  of transformations from different local maps is a consistent 
                                                               operation (for the linear case). 
                                                        (9) 
                                                                 Finally, the composition of the local map state estimates 
The maps are rooted on features and so as then                 performed in Equation 6 is a consistent operation, because 
                                                                   and are independent of one another. 
                                                       (10) 
                                                                 While the location estimates for different maps are corre•
and so                                                         lated with one another, and this correlation is not computed 
                                                               by the algorithm, the method in none-the-less consistent be•
                                                      (11) 
                                                               cause this correlation is never needed. We never fuse Map 
which is true for all choices of p and q. Therefore the glob•  Location estimates estimates, but rather, perform wholesale 
ally referenced feature location uncertainty is the same       replacement. The algorithm keeps track of the best estimate 
independent of choice of map (•). The value of this limiting   for the global location of the root entity of a given map. A 
value is clearly given by the smallest possible uncertainty in guiding principle of this algorithm is that estimated quantities 
Map Location which is the uncertainty of the first feature ini• that are "external" to a map never effect an internal quantity. 
tialized in the first map iDissanayake et ai, 2001 ]. This point Due to the relocation step for map transitions, the infor•
is considered further in section 5.                            mation from dead-reckoning measurements for the time step 


1146                                                                                                          ROBOTICS proceeding the map transition is effectively "lost". This in•        "point" vehicle that moves in the plane with process 
formation, however, does not affect absolute convergence but   noise Q of 0.05 or 0.01 (Monte-Carlo) m/sec standard devia•
only the rate of convergence. Because relocation is a con•     tion in both and and measurement noise R of 0.2 m/scc 
sistent operation [Knight, 20021, each partial solution retains standard deviation in both and Features are visible if 
all the properties of a Kalman filter SLAM solution fDis-      they are within 23 meters of the vehicle location. One visible 
sanayake et al, 2001], and hence is provably consistent and    feature is selected at random each time step to generate the 
convergent. Because each map is local with its base refer•     observations. Results are presented for three different scenar•
ence as one of the features in the map, in the limit the uncer• ios: 
tainty for each local map converges to zero [Dissanayake et 
                                                                 1. a simulation involving six cycles through an environ•
al, 2001 ]. This implies that, in the limit, in any local map uti•
                                                                    ment in which eight maps are created (to illustrate basic 
lizing only a subset of the relationship between features 
                                                                    error convergence behavior), 
becomes perfectly known as A consequence of this 
is that the covariance of the transformation between any two     2. Monte-Carlo analysis of 200 independent trials of a mis•
features, i and j, in any given map tends to zero as                sion involving ten cycles through an environment in 
Hence, for local maps in which the base reference (root) is a       which twelve submaps are created (for empirical con•
feature in the local map, the covariance of any feature tends       sistency verification), and 
to zero. The key driver for convergence is the behavior in the 
                                                                 3. results off-line map adjustment for a mission involving 
first submap — submap 1. To illustrate this, consider a robot 
                                                                    a single cycle through an environment in which eighteen 
which moves swiftly outside submap 1 and spends the rest of 
                                                                    maps are created, 
its mission driving just outside submap 1 's borders. Eventu•
ally the maps bordering submap 1 become completely known,      6.1 Comparison with the full covariance solution 
including most of the features which appear in submap 1. The 
global uncertainty of any feature in the bordering submaps     Figure 2 show the vehicle path for a mission in which eight 
can never be less than the global uncertainty in the location  maps are created. Figure 3 shows the vehicle error as a func•
of submap 1. Hence, in this scenario, the root shifting mech•  tion of time as a function of time and active map ID. Spikes in 
anism can never decrease the global uncertainty of features in the vehicle error estimate occur at each map transition when 
submap 1 (nothing has lower global uncertainty). However       relocation (consistent re-initialization of the vehicle pose) is 
as soon as submap 1 is re-entered and begins to be refined,    performed. This is particularly obvious towards the end of 
the global uncertainties of maps sharing features with map     the experiment when the features are well known and subse•
1 can be reduced by root-shifting. Hence it is the precision   quent observations swiftly bring the vehicle covariance down 
of the first submap built (submap 1) that drives the ultimate  following relocation. Figure 4 shows the difference between 
performance of the entire system. In addition it is the preci• the new method and the full solution in the determinant of er•
sion of the first feature mapped within it that drives ultimate ror covariance for the feature marginals in each map, demon•
performance of submap 1.                                       strating the tight convergence of the method to near-optimal 
  Thus in the limit, the lower bound achieved in submap 1 is   estimates, while never going below the minimum permissible 
"inherited" by all other submaps. There are two differences    error bounds. 
between what occurs in submap 1 in comparison to a full co-
variance solution that couples estimates for all features in a 6.2 Monte-Carlo consistency testing 
single map: (a) submap 1 has fewer features in it, and (b)     For the purposes of consistency testing, two relative states 
not all of the observations of features that are contained in  were logged in the active submap: (1) the difference between 
submap 1 are processed in the submap 1 solution. We be•        the first feature in the state vector and the vehicle, and (2) 
lieve that consideration (a), the fact that submap 1 has fewer the difference between the first and second features in the 
features in it, is what is sacrificed in this approach. Even if state vector. These two states are stored in a single vector 
some measurements are ignored in submap 1 (vs. the full            with covariance formed from the active map (with id 
solution), in the limit as both maps will converge                 This relative vector can be compared to the 'true' relative 
to a well-defined lower bound. With enough additional time     relationships declared by the simulator producing the noise 
the submap 1 solution can "catch up" to the full solution.     corrupted measurements. The difference between these vec•
However, the fact that the full solution has more features     tors is the error vector . The vector calculated for each 
enables in it cannot be compensated for, and hence the full    map m will in general involve different features (by definition 
solution achieves a slightly tighter bound. This in effect is  as each map contains a subset of the set of all features with 
the "cost" of computing multiple partial solutions and subse•  only some features in common). However each estimated 
quently combining them, rather than computing one full solu•   component of should be consistent, hence any sequence 
tion. Our simulations have shown that this result is extremely                                            where M is the 
small (as shown below in Figure 3).                            total number of maps built, should also be consistent. Figure 
                                                               6.2 illustrates the results obtained from Monte-Carlo exper•
6 Results                                                      iments of the CTS algorithm. The parameters used in the 
                                                               simulation of sensor data and its subsequent processing are 
This section analyzes the behavior of the technique presented  given in Table 6,2. All the plots are concerned with the statis•
using simulations analysis. The simulations consider an        tical properties of . The first plot of Figure 6.2 shows the 


ROBOTICS                                                                                                            1147 