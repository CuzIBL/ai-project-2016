           Advantages of a Transformational Grammar                                tory, there are many more situations of this kind. One can 
                        for Question Answering                                     ask 
                                                                                   (6) In what zone/planning area/ census tract/ etc., is parcel 
                                                                                   5 located? 
                            Fred J. Damerau 
                            IBM Corporation                                         For each of these questions, the underlying structure has a 
                Thomas J. Watson Research Center                                   top level verb of "LOCATED", where the translator would 
                    Yorktown Heights, New York                                     prefer "ZONE" or "PLANNING AREA" etc. Again, one 
                                                                                   could make the LOCATED function sensitive to its argu•
      A number of researchers in artificial intelligence, for                      ments, or insert the appropriate equations into the translator, 
example, Woods(1975, p.88 ff. ), have asserted that trans•                         but the complexity of either solution is much greater than 
formational grammars are not a satisfactory basis on which to                      before. 
construct natural language understanding systems, primarily 
because of efficiency considerations. The evidence for such                              Transformational grammars customarily have two sets of 
a claim is by no means strong, Petrick(1976), and it can be                        rules, cyclic rules, which apply successively to each level of 
argued that transfer of new theoretical insights into a lan•                       embedding, and postcyclic rules, which apply globally to the 
guage understanding system based on transformational gram•                         entire sentence. Our grammar has an additional set of rules, 
mar is facilitated, Plath( 1973). This note shows that a trans•                    called string transformations, Plath (1974), which apply to 
formational parser can also simplify problems of relating                          strings of lexical trees. The transformational parsing pro•
canonical representations of queries to data base representa•                      gram calls each of these sets of rules separately. Since the 
tions.                                                                             parser is basically a tree processor, it can be applied, via an 
                                                                                   additional set of rules, to underlying structures like those for 
      Consider a data base consisting of a set of company                           (5) and (6), and modify the structures in such a way that the 
names each with an associated list of employees. A natural                         semantic interpreter can produce correct code without data 
question for such a data base is M How many people does                            base specific modifications. In the case of (5), the output of 
company Y employ?" Our grammar produces an underlying                              the new processing phase, called the precycle, is a structure 
tree structure whose bracketted terminal string is something                       like (3) instead of a structure like (1), with a data identifica•
like (I), from which a Knuth-style semantic interpreter prod•                      tion of "EMPLOYEE" rather than "GROSS". At the cost of 
uces a LISP form like (2).                                                         an additional call to the transformational parser, we have 
                                                                                   insulated both the semantic interpreter and the data base 
(1) (EMPLOY (company Y) ((how many) person XI)). 
                                                                                   functions from the organization of the data base, confining 
(2) (SIZEOF(SETX 'XI '(TESTFCT XI (EMPLOY Y 
                                                                                   the necessary modifications to a single table of rules. We 
1977)))) 
                                                                                   have not yet found a class of structural changes we wished to 
TESTFCT would trigger extraction of names from the data                            make because of the data base which required more than one 
base, SETX would create a set of these names, and SIZEOF                           rule. Therefore, the cost of writing new rules has been much 
would determine the cardinality of that set. So far, this is                       less than the cost of generating new programs for these spe•
simple enough and no difficulty arises. The first query sys•                       cial cases would have been. 
tem we constructed had a small data base of business statis•
tics of large corporations, Plath(1973), Petrick(1973). Con•                             While I am sure other system developers are able to 
sider in this context a question like "What were GE's 1970                         solve this general problem, as they must in order to proceed 
earnings?". The underlying structure was something like (3),                       in their work, we have nonetheless been pleased to note that 
where the semantic interpreter produced a LISP form of                             our decision to use a transformational approach on linguistic 
roughly (4).                                                                       grounds has had additional benefits on practical grounds. 

(3) (EQUAL (the X5 (GROSS GE X5 1970)) (some 
amount XI) ).                                                                      References: 
(4) (SETX 'XI '(FORATLEAST 1 'X7 (SETX X5 
                                                                                   Petrick, Stanley R. 1973. Semantic Interpretation in the 
(TESTFCT X5 (GROSS GE 1970)) (EQUAL X7 XI)))) 
                                                                                   REQUEST System. IBM Research Report RC 4457, IBM 
FORATLEAST implements the default quantifier, and                                  Corp., Yorktown His., NY. 
TESTFCT finds GE's gross income. This data base also 
                                                                                   Petrick, Stanley R. 1976. On Natural Language Based Com•
contained the total, number of employees for each company. 
                                                                                   puter Systems. IBM Journal of Research and Development, 
If we were to ask                                                                  vol. 20, No. 4, pp. 314-325. July, 1976. 
 (5) How many employees does GE have?                                              Plath, Warren J. 1973. Transformational Grammar and 
the system would produce an underlying structure related to                        Transformational Parsing in the REQUEST System. IBM 
 (1), leading to a retrieval program like (2). Unfortunately,                      Research Report RC 4396, IBM Corp., Yorktown Hts., NY. 
we need a retrieval program like (4), with "EMPLOYEE"                              Plath, Warren J. 1974. String Transformations in the RE•
substituted for "GROSS". We could of course modify the                             QUEST System. American Journal of Computational Lin•
SIZEOF function to be sensitive to the data field it dominates                     guistics, Microfiche 8, 1974. 
and return the set rather than the cardinality of the set in 
appropriate cases, but this is aesthetically unattractive                          Woods, William A. 1975. Comment on a paper by Petrick, in 
(although this is in fact what we did in our very first system).                   Directions in Artificial Intelligence, R. Grishman, ed., New 
                                                                                   York University, New York, 1975. 
We could also modify our translation equations and semantic 
interpreter so as to be sensitive to this situation. While this 
might be satisfactory in one or two cases, the number of 
special cases can become very large. 

      In our present application, which is an English query 
system for the planning files of a small city near our labora•
                                                         Natural Language-10: Damerau 
                                                                               192. 