    Multi-Dimensional Bid Improvement Algorithm for Simultaneous Auctions

                                   Teddy Candale    and  Sandip Sen
                                        University of Tulsa, USA
                                        {tdi,sandip}@utulsa.edu


                    Abstract                          according to its true preferences and the auctioneer incurs the
                                                      computational cost of optimal bundle allocation based on bids
    Bidding for multi-items in simultaneous auctions  submitted. The winner determination problem for combina-
    raises challenging problems. In multi-auction set- torial auction is NP-Hard. This complexity may discourage
    tings, the determination of optimal bids by potential certain sellers. Besides, an individual may not ﬁnd all desired
    buyers requires combinatorial calculations. While items in the same combinatorial auction.
    an optimal bidding strategy is known when bidding
    in sequential auctions, only suboptimal strategies  In a multi-auction setting, multiple single-item auctions are
    are available when bidding for items being sold   held concurrently or sequentially. A potential bidder needs to
    in simultaneous auctions. We investigate a multi- estimate closing prices of such auctions to compute optimal
    dimensional bid improvement scheme, motivated     bids. In contrast to combinatorial auctions, in multi-auction
    by optimization techniques, to derive optimal bids settings, a bidder incurs the computational cost of calculating
    for item bundles in simultaneous auctions. Given a optimal bids given its valuation for items and the expected
    vector of initial bids, the proposed scheme system- closing prices. As in a single-auction setting, auctioneer in
    atically improves bids for each item. Such multi- each of these multiple, independent auctions have a straight-
    dimensional improvements result in locally optimal forward computational task of selecting a winner from bids
    bid vectors. Globally optimal bid vectors are guar- submitted to a single auction.
    anteed in the limit for inﬁnite restarts. For ease of In multi-auction settings, auctions can be sequential or si-
    presentation we use two-item scenarios to explain multaneous. Sequential auctions close at a predetermined
    the working of the algorithm. Experimental results known order. A bidder can bid in the auction that will close
    show polynomial complexity of variants of this al- next and then wait for the outcome before computing its next
    gorithm under different types of bidder valuations bid. Optimal bidding policies have been developed for se-
    for item bundles.                                 quential auctions [Stone et al., 2003; Greenwald and Boyan,
                                                      2004; 2005]. Simultaneous auctions, however, run concur-
                                                      rently and bidders do not know in advance their precise clos-
1  Introduction                                       ing times. Bids to be submitted to all auctions have to be com-
Auction theory has received signiﬁcant attention from agent puted at the same time. Developing efﬁcient optimal policies
researchers following the development of electronic auctions for simultaneous auctions is an open research problem.
on the Internet. Numerous sites like eBay, uBid offer differ- We propose a novel bidding algorithm for simultaneous
ent types of auctions to facilitate the trading of goods. Also auctions motivated by optimization techniques. We sequen-
sites like eMediator implements a large variety of combinato- tially improve components of the current bid vector to maxi-
rial auctions and exchanges [Sandholm, 2000]. Researchers mize the bidder’s expected utility given the closing price dis-
are interested both in designing auctions with desirable prop- tributions of the auctions. We reason with continuous closing
erties [Parkes, 2001; Sen et al., 2005] and developing auto- price distributions which allows us to address a more general
mated agents to represent interests of human users [Green- setting and enables the application of powerful methods tai-
wald and Stone, 2001; Greenwald and Boyan, 2004; 2005; lored for continuous spaces. Our technique can be adapted
Stone et al., 2003; Stone and Greenwald, 2005].       to ﬁnd optimal bids given discrete closing price distributions.
  The problem of computing optimal bids is complex when We graphically illustrate the working of our bid improvement
bidding for multiple items. The valuation function of a poten- scheme. We then experimentally evaluate variants of our al-
tial buyer expresses the maximum amount it is willing to pay gorithm for different problem sizes and under substitutable,
to acquire each bundle of items. Two settings are generally complementary, and unrelated item preferences. Our main
studied: combinatorial auction and multi-auction.Acombi- theoretical result is that our proposed bidding scheme is op-
natorial auction offers multiple items. Bidders can submit the timal given inﬁnite number of random restarts. Experimental
amount they are willing to pay to get bundles. In strategy- results demonstrate that effective approximations to optimal
proof combinatorial auction settings, a rational bidder bids results can be produced in polynomial time.

                                                IJCAI-07
                                                  12152  Related work                                       tion is modeled by the probability distribution Fi of the clos-
Combinatorial auctions can be designed to provide desirable ing prices of the item being offered in that particular auction.
social outcomes [Parkes, 2001; Sandholm, 2002].However, We assume these distributions to be continuous, independent,
                                                                           [
it is not feasible to have a combinational auction which offers and known by the bidder Greenwald and Boyan, 2004; 2003;
                                                                                              ]
all items an individual may desire. This may be due to new Stone et al., 2003; Stone and Greenwald, 2005 . In practice
needs that no seller has foreseen. Besides, items which are approximate price distributions can be learned from observ-
not directly related are unlikely to be found in the same auc- ing electronic markets. When an auction closes, a closing
                                                      price pi ∈ [pi, pi] is drawn from the distribution Fi. The bid-
tion. For example, a car company which wants to design a car                          b
with an on-board computer is unlikely to ﬁnd pieces needed der gets the item if it has placed a bid i greater than or equal
                                                      to the closing price, i.e., if pi ≤ bi, and the winning payment
to build the engine in the auction it can ﬁnd components to                   p
build the on-board computer.                          is equal to the closing price i. All auctions run in parallel
                                                      and their closing times are not known by the bidder. The bid-
  Stone, Greenwald, and fellow researchers investigated the
                                                      der place bids represented by B =(b1, ..., bN ) ∈Bwhere
bundle bidding problem for multi-auctions in the context
                                                      B is the bid domain for all auctions. Replacing a bid is not
of the Trading Agent Competition (TAC) [Greenwald and
                                                      allowed in this model.
Boyan, 2004; 2003; Stone et al., 2003; Stone and Green-
                                                        Once all the auctions close, the bidder can compute its util-
wald, 2005]. They assign valuations to individual items that
                                                      ity α(B, P) where P =(p1, ..., pN ) represents the closing
correspond to expected marginal utilities of the items. The
                                                      prices of all auctions. The set of acquired items Iac(B, P) is
marginal utility of an item i is the extra-proﬁt generated by
                                                      calculated as
the acquisition of i at zero price, and corresponds to the
amount one is willing to pay for an item calculated as the ex-   Iac(B, P)={i  ∈Is.t. pi ≤ bi}
tra beneﬁt of getting it. Stone et al. approximated it by price
                                                      and the corresponding utility received by the bidder is
sampling for sequential auctions since the exact calculation is                          
of exponential complexity [Stone et al., 2003].              α(B, P)=ϑ(Iac(B, P))   −          pi.
  Though Stone et al. presented the marginal utility based
                                                                                      i∈Iac(B, P)
bidding scheme, MU, in the context of sequential auctions,
they used it for simultaneous auctions [Stone et al., 2003]. The expected utility is then α¯(B)=EP [α(B, P)] which can
Greenwald and Boyan [Greenwald and Boyan, 2004] showed be calculated as speciﬁed in Proposition 1:
    MU
that    is optimal for sequential auctions but can be sub- Proposition 1 (Expected utility)
optimal for simultaneous auctions. Greenwald and Boyan              ⎧           ⎛              ⎞     ⎫
proposed a variant of MU, expected marginal utility bidding        ⎨                                ⎬
                                                      α¯(B)=               F (b ) ⎝   (1 − F (b ))⎠ ϑ(I)
(EVMU), for bidding in simultaneous auctions where the bid-         ⎩       i i             j  j       ⎭
der ﬁrst computes an optimal set of items to bid for. It is the  I⊆I    i∈I         j/∈I
                                                                   N  
bundle with the best proﬁt assuming actual closing prices in           bi
future auctions are equal to the expected closing prices. Af-    −        pi fi(pi) dpi,
ter determining the optimal bundle, the bidder bids expected       i=1 pi
marginal utility for each item in the bundle. Greenwald and
                                                                                  
Boyan proved that this method is optimal when prices are                           bi
                                                      where Fi(bi)=Pr{pi  ≤ bi} =    fi(pi) dpi and fi is the
deterministic [Greenwald and Boyan, 2004]. This method,                            pi
                                                            F                                         B∗
however, is still suboptimal in general. A downside of each pdf of i. Our research objective is to ﬁnd a bid vector
                                                      which maximizes the expected utility α¯: B∗ = argmax α¯(B).
of these methods is their exponential computational complex-                                  B∈B
ity as calculating the marginal utility of one item required the
knowledge of the expected proﬁt generated by the acquisition 4 Multi-Dimensional Bid Improvement
of each possible bundle.
  Byde et al. [Byde et al., 2002] present a heuristic approach Our proposal uses an optimization technique to ﬁnd opti-
to bidding in sequential and simultaneous auctions. Their ap- mal bids for sequential auctions. Assume that the bidder
                                                                                              B
proach does not have any theoretical guarantees of expected has decided by some means to bid the vector . Is it pos-
                                                                                 B
utility and cannot be implemented as presented in the paper sible to do better than bidding , i.e., is there a bid vector
                                                      B         α¯(B) > α¯(B)           B
as necessary heuristics are not included.                such that             ? Assuming   is sub-optimal,
                                                      there is at least one item whose bid can be improved, i.e.,
                                                      there exist i and δi such that α¯(B) < α¯((bi + δi) ∨ B−i)
3  Multi-auction Model                                                                          
                                                      where B−i =(b1, ..., bi−1,bi+1, ..., bN ) and bi ∨ B−i =
                                                                    
We consider multiple sealed-bid auctions offering items from (b1, ..., bi−1,bi,bi+1, ..., bN ). By repeating this process,
the set I. A valuation function ϑ expresses the bidder’s pref- we can realize the best improvement possible for the item
erences for bundles or subsets of items from the set I, i.e., i, which is equivalent to maximizing the function bi →
the bidder is willing to pay up to ϑ(I) for a bundle of items α¯(bi ∨ B−i). The following formalizes the idea.
I ⊆I           i
     . Each item is available only in the single-item single- Deﬁnition 1 (Optimal bid for item i) βi(B−i) is the opti-
          a
unit auction i. We do not specify the particular auction type mal bid for item i given bids for item j = i is ﬁxed:
but make the exogenous price assumption: the bids of our βi(B−i)= argmax α¯(bi ∨ B−i).
bidder do not inﬂuence the auction closing prices. An auc-      bi∈[pi, pi]

                                                IJCAI-07
                                                  1216Proposition 2 (Optimal bid for item i)                as N-sequential improvement. In the bid domain B, the sin-
                                                   gle improvement can be regarded as going from B to the
βi(B−i)=                 Fj(bj)  (1 − Fl(bl))ϑ(I)     hyper-surface bi = β(B−i) by moving parallel to the bi-axes.
              I ⊆I  j ∈ I      l/∈I                   The process is stopped when no further improvement can be
              i ∈ I j = i
                                                   made. We refer to this sequential bid-improvement process
             −          Fj (bj)     (1 − Fl(bl))ϑ(J)  as a Multi-Dimensional Bid Improvement (MDBI) scheme.
                J ⊆I j∈J       l/∈ J                    Figures 1, 2, and 3 provide a visual description of the above
                i/∈ J          l = i                 discussion. Each ﬁgure represents the bid domain B where
                                                      N  =2and hence we draw the two hyper-surfaces. We
Sketch of proof                                       chose uniform probability distributions to represent the clos-
Space constraints preclude the presentation of the full ing price distributions as a result of which the hyper-surfaces
                                                      are lines. Arrows give the direction to follow to improve the
proof. We note, however, that  βi(B−i) is such that
∂α¯                                                   expected utility in the zones delimited by the hyper-surfaces.
   (β (B  ) ∨ B  )=0                      α¯ : b →
∂b   i  −i     −i    . Besides, let consider i i      Paths leading to local maxima are drawn as dashed lines with
  i                                                   arrows representing the direction to follow.
α¯(bi ∨ B−i). We can show that
                                                        Figures 1, 2, and 3 allow us to present some conclusions.
                  
              0 < α¯i(bi) if βi(B−i) >bi              For all types of item valuations, it is preferable to bid the in-
                   
              0=¯αi(bi)  if βi(B−i)=bi                dividual valuation of an item when bidding only for this item.
                                                                          β
              0 > α¯i(bi) if βi(B−i) <bi              For substitutable items, i is decreasing and the maximum
                                                      value taken by βi is βi(pi)=vi where vi = ϑ({i}),and
                         d α¯i ∂α¯                   the bidder should always bid less than its individual valuation
               where α¯i =    =
                          d bi  ∂bi                   for each item when bidding for a bundle. On the contrary,
                                                                            β
Consequently,                                         for complementary items, i is increasing and the minimum
                                                      value taken by βi is βi(pi)=vi, and the bid for an item
 α¯i is increasing when βi(B−i) >bi.                  should always be more than the individual valuation for that
 α¯i is decreasing when βi(B−i) <bi.                  item when bidding for an item bundle.
                                                        In the examples presented in these ﬁgures, we have unique
 bi = βi(B−i) is the unique local maximum, and thus
                                                      optima. Given the nature of the closing price distributions,
    the unique global maximum.
                                                      however, the N hyper-surfaces may have several intersections
                                                     resulting in as many local optima. Consequently, we can only
                                                      guarantee reaching a local maxima using the N-sequential
                                                      MDBI process. This problem can be circumvented by restart-
                                                      ing the improvement process, e.g., by choosing a random bid
4.1  Best bid hyper-surfaces                          vector, when no further improvement is possible. Assuming
The equation bi = β(B−i) deﬁnes a hyper-surface in the N- an inﬁnite number of restarts, this method will discover the
dimension space B1. This hyper-surface divides B into two optimal bid vector. As this is not feasible in practice, only a
zones: one zone where, given a point B, bi has to be in- ﬁnite number of restarts can be considered.
creased to increase α¯, and the other zone where bi has to be We observe that for non-related items, and irrespective of
decreased to improve α¯. Hence, the ith component of the the number of items, there exists a unique optimum. Indeed,
gradient is always directed to the hyper-surface bi = β(B−i) in that case, βi(bi)=vi. Consequently, the N hyper-surfaces
and is equal to zero on the surface. An intersection of the N are orthogonal (see Figure 3) and therefore have a unique
                                                                 ˆ                                     ∗
hyper-surfaces, one for each item, deﬁnes a bid vector whose intersection B =(v1, ..., vN ) which corresponds to B .
gradient is equal to zero (when this intersection is inside the Starting from any bid vector, we will arrive at this solution
bid domain). This point, though a potential candidate, is not using the MDBI scheme. As a result, the MDBI process will
necessarily a local maximum since a gradient equal to zero output the optimal bid vector irrespective of of initial bids
does not guarantee the existence of a local optimum. Optimal when items are non-related.
bids can be found at the intersection of the N hyper-surfaces
either inside the bid domain or at the boundary of the bid do- 4.2 Bidding Algorithm
main. The optimum can then be discovered by sequentially
moving from one hyper-surface to another until no further We now describe the steps of our bid improvement algorithm
improvements can be made.                             in more detail. An initial bid vector B0 is chosen. Let Bt
  We now outline our bid selection scheme. An initial bid be the bid after t iterations. Bt+1 is obtained by improving
vector B is chosen. Then, we repeatedly improve the N com- sequentially bids for each of the N items in Bt, keeping the
ponents of the bid vector B in any predetermined order. Im- bids for other items constant. The process is stopped when
                                                      ||B   − B  || <ε      ε
proving the bid for item i involves replacing bi by βi(B−i): t+1 t    where  is a user-chosen positive constant
                                                          ||·||
B  ←  βi(B−i) ∨ B−i. We will refer to this improvement and    is any vectorial norm. To improve a bid, we need to
as single improvement and the sequence of N improvements calculate βi. Though the formula presented in Proposition 2
                                                      requires exponential computation, it is possible to approxi-
  1
   bi = β(B−i) is a curve when N =2, a surface when N =3. mate βi in polynomial time via price sampling. Algorithm 1

                                                IJCAI-07
                                                  1217                                                      presents the pseudo-code to approximate βi. Algorithm 2
                                       b =β(b )
    1                                  1  1 2
   β (p )                               =β( )         presents the pseudo-code for the MDBI algorithm.
    1 1                                b2 2 b1

                                                      Algorithm 1 Approximation of βi(B−i) by price sampling

      v2                                                β ←  0
                                                        for k =1..K do
                                                          P ←  generatePriceSamples( F1, ..., FN )     
                    B                                     β ←  β+  ϑ (Iac(pi ∨ B−i,P)) − ϑ Iac(pi ∨ B−i,P)
                                                        end for
                                                               β
          grad0
                                                        return K


                                      1               Algorithm 2 MDBI
                              v1     β(p )
  ]                                  2  2               B ←  initializeBids()
Figure 1: Hyper-surfaces when N =2, closing price distri- // Improvement loop.
butions are uniform, and items are substitutable.       repeat
                                                          B = B
                                          =β( )           for i =1..N do
                                         b1 1 b2
                                          =β( )             b ←  β      (i, B ,F,ϑ,K)
                                         b2 2 b1             i    approx    −i
                                                          end for
                                                        until ||B − B|| <ε
                                                        return B
             grad0
                                                                                                 β (B  )
                         B                              The computational complexity of approximating i −i ,
                                                      βapprox(i, B−i,F,ϑ,K), is linear given the number of sam-
                                                      ples, K. More precisely, it is equal to θ(K) additions, θ(K)
                                                                            θ(K)
   v2                                                 valuation calculations and price sample generations. In
                                                      MDBI, each N-sequential improvement requires N approx-
                                                      imations of βi(B−i). The number of N-sequential improve-
                                                      ment depends on the number of iterations of the improvement
                                                      loop, C(ε, N).Wehave(C(ε, N)   ∗ N) N-sequential im-
                                                                    C(ε, N)
                v1                                    provement and         calculations of norms. Generally,
                                                      vectorial norms can be computed in linear time given the di-
Figure 2: Hyper-surfaces when N =2, closing price distri- mension of the space (N in our case). Thus, the complexity
butions are uniform, and items are complementary.     of MDBI is O(KNC(ε, N))    additions, O(KNC(ε, N))
                                                      valuation calculations and O(KNC(ε, N)) price sample
                                          =β( )                               C(ε, N)
                                         b1 1 b2      generations. The value of       is difﬁcult to judge a
                                          =β( )
   p                                     b2 2 b1
   2                                                  priori but experimental results presented in the next section
                                                      show that C(ε, N) increases only very gradually with N
                                                      and thus the computational complexity of MDBI is approx-
                                                      imately linear. This, in particular, is a signiﬁcant improve-
                                                      ment over current schemes [Greenwald and Boyan, 2004;
                                                      Stone et al., 2003] which have exponential complexity.

   v2
                                                      5   Experimental results
                      B                               We ran experiments with the following objectives: to show
                                                      that our algorithm performs well when probability distribu-
                                                      tions are discrete2, both in terms of the quality of the solution
                                                      provided and the time efﬁciency3. We compare variants of

                   v              p                      2
                   1              1                      Our study was made assuming continuous distributions. In real-
                                                      life environments, agents are likely to use discrete probability distri-
Figure 3: Hyper-surfaces when N =2, closing price distri- butions.
                                                         3
butions are uniform, and items are non-related.          Though we provide formal analysis of the complexity of our
                                                      algorithm, the expression of MDBI complexity contains a function
                                                      (C(ε, N)) whose value is unknown. The goal of our experiments is
                                                      to see whether C(ε, N) scales minimally with N.

                                                IJCAI-07
                                                  1218our algorithms with an exhaustive search or brute force algo- For each run, distributions for the four auctions are chosen
rithm (BF) that provides optimal results at high search costs. randomly.
The BF approach consists of calculating the expected proﬁt
generated by each possible bid combinations and then bid- 5.2 Quality of solutions provided by algorithms
ding the best combination. BF is optimal, but its complexity To compare our algorithms, we display the cumulative aver-
is exponential. We now present three variants of our MDBI age proﬁt generated by the bidders using each strategy in Ta-
algorithm that we have experimented with:             ble 1. Algorithms are ordered by the net utility obtained. Hor-
Random Start Bid Improver (RSMDBI):  RSMDBI starts    izontal lines in the table groups the algorithms into blocks.
    with a randomly chosen bid vector and does not use Performance of algorithms in the same block are statistically
    restarts.                                         indistinguishable according to the Wilcoxon test.
                                                        We highlight the following observations:
Random Start Bid Improver With Restart (RSMDBIWRn):
    RSMDBIWRn    starts with a randomly chosen bid vector 1. VSMDBI performs similar to RSMDBI except for RVI
    and restarts the hill-climbing process n − 1 times and valuations where performances are worse.
    outputs the bid vector with the highest expected utility. 2. With a small number of random restarts our algorithm
Valuation Start Bid Improver (VSMDBI): VSMDBI             always has performance similar to BF which is asymp-
                                                          totically optimal.
    starts with the bid Bϑ1 =(v1, ..., vN ) and does not
    use restarts.                                       3. RSMDBIWRn   with n =5, 10 has better performances
                                                          than RSMDBI except for non-related items where per-
5.1  Experimental settings                                formances are equal. As we have observed before,
In the ﬁrst set of experiments, we used the above-mentioned restarts are unnecessary for non-related items.
variants of the MDBI algorithm in an environment containing 4. Every algorithm is optimal when items are non-related.
four single-item single-unit auctions and the focus is on eval-
                                                                                 B  1
uating their success in ﬁnding optimal solutions, as checked Remark 1 shows that choosing ϑ as a starting point is a
by the BF scheme, under different valuation functions. Sub- good heuristic for some but not all cases. Remark 2 shows
sequently we present results with larger number of items that with reasonable number of restarts (5 in our experiments)
where the focus is on studying the time efﬁciency and scale- the optimal bid vector is always found. Since RSMDBI is,
up properties of the algorithms. All closing prices are drawn in general, not optimal (Remark 3), we can say that the bid
from discrete closing price distributions. A simulation con- domain has, in general, some local maxima and/or ridges.
sists of one bidder with the knowledge of all closing price dis- However, since few restarts permit to ﬁnd optimal bids, the
                                                      number of local maxima and ridges is not very high. Con-
tributions. This bidder can place one bid in all four auctions at         n                             n
each iteration. At the end of each iteration, the bidder knows sequently, RSMDBIWR with reasonably small values of
which items it won and the payment it has to make for those can be considered as an approximately optimal method. From
items. At the end of each simulation, the average proﬁt of the Remark 4, we ﬁnd that almost every algorithm is optimal for
bidder is calculated. A run of our experiment consists of four NRI. Though this result is not that signiﬁcant as we know
simulations, one for each of the bidders RSMDBI, RSMD- the optimal bid vector in that case, it conﬁrms our previous
BIWRn with n=5 or 10, VSMDBI, BF. For a run, bidders in analysis which claimed that the optimal bids are found by the
each simulation share the same valuation function. We gen- MDBI algorithm after the ﬁrst N-sequential improvement ir-
erate four kinds of valuation functions: (a) SI, where items respective of the initial bid vector.
are substitutable, (b) CI, where items are complementary, (c) 5.3 Time efﬁciency and scale up properties
NRI, where items are non-related, and (d) RVI, where valua-
tions for bundles are random. Considering three set of items To evaluate the run time of our algorithm for larger problems,
I, J, K such that J ∪ K = I and J ∩ K = ∅.Itemsare    we run experiments as described in the last section but by
substitutable if ϑ(I) ≤ ϑ(J)+ϑ(K) for all such item sets. changing the number of items from 4 to 15 to evaluate the
                       ϑ(I) ≥ ϑ(J)+ϑ(K)               values of C(ε, N). Those experiments were similar to the
Items are complementary if               for all such                                            C(ε, N)
item sets. Items are non-related if ϑ(I)=ϑ(J)+ϑ(K) for previous ones except that we output the values of
all such item sets. If no one of the above conditions are sat- and average them. We highlight the following observations:
isﬁed for all item sets, we consider the items to have random 1. Except for NRI, the number of N-sequential improve-
valuation. Valuation for single-item bundle is drawn from the ments (C(ε, N)) increases very slowly. The largest
range [0, 100], i.e., ϑ({i}) ∈ [0, 100] ∀i ∈I. In each run, range is [2, 4].
the same auctions are repeated in each simulation, i.e., the 2. The number of N-sequential improvements is always
same closing price distributions are utilized for each simula- better for VSMDBI.
tion. We have eight predeﬁned probability distributions. Four C(ε, N)=1                  C(ε, N)=2
of them produce price ranges from 10 to 90 and four of them 3.          forVSMDBIand                  for
from 60 to 140 with discrete values in increments of 10. For RSMDBI when items are non-related.
each range, one distribution is uniform (UP), one outputs the We can conclude that C(ε, N) is almost constant. Conse-
highest prices with higher probability (HP), one outputs the quently, the computational complexity of our algorithms is
lowest prices with higher probability (LP), and one outputs almost linear given the number of items and hence has desir-
price in the middle of the range with higher probability (MP). able time efﬁciency and scale up properties. The third remark

                                                IJCAI-07
                                                  1219