 From Logic Programming Semantics to the Consistency of Syntactical Treatments 
                                           of Knowledge and Belief 

                                                  Thomas Bolander 
                                     Informatics and Mathematical Modelling 
                                          Technical University of Denmark 
                                                    tb@imm.dtu.dk 


                        Abstract                               This formula has no counterpart in the classical modal op•

                                                               erator approach, since if A'i and K2 were modal operators, 
     This paper concerns formal theories for reasoning         we would not be able to apply them directly to the variable x 
     about the knowledge and belief of agents. It has          (modal operators only apply to well-formed formulas). Thus 
     seemed attractive to researchers in artificial intelli•   the predicate approach gives us more expressive power and 
     gence to formalise these propositional attitudes as       the ability of agents to refer to the totality of their own and 
     predicates of first-order predicate logic. This al•       others beliefs, which is important in meta-reasoning. 
     lows the agents to express stronger introspective           Unfortunately, the predicate approach easily becomes in•
     beliefs and engage in stronger meta-rcasoning than        consistent, since the added expressive power allows the 
     in the classical modal operator approach. Results         agents to express self-referential beliefs that in some cases 
     by Montague [1963] and Thomason [1980] show,              turn out to be paradoxical. This was proved by Montague 
     however, that the predicate approach is prone to in•      [1963] and Thomason [1980]. They prove that certain axiom 
     consistency. More recent results by des Rivieres          schemes describing natural properties of knowledge and be•
     & Levesque [1988] and Morreau & Kraus [1998]              lief are inconsistent with formal arithmetic. Their results are 
     show that we can maintain the predicate approach if       reviewed in Section 3. Des Rivieres & Levesque [1988] and 
     we make suitable restrictions to our set of epistemic     Morreau & Kraus [1998] have shown there to be a way out of 
     axioms. Their results are proved by careful transla•      these inconsistency results: to suitably restrict the set of sen•
     tions from corresponding modal formalisms. In the         tences that we instantiate our axiom schemes of knowledge 
     present paper we show that their results fit nicely       and belief with. These results are reviewed in Section 3 as 
     into the framework of logic programming seman•            well. 
     tics, in that we show their results to be corollar•
                                                                 In this paper we will show that the results of des Rivieres, 
     ies of well-known results in this field. This does 
                                                               Levesque, Morreau and Kraus can be reduced to well-known 
     not only allow us to demonstrate a close connec•
                                                               results in logic programming semantics. This is carried out 
     tion between consistency problems in the syntactic 
                                                               in Section 4. In Section 5 we give a strengthening of their 
     treatment of propositional attitudes and problems in 
                                                               results, using again the connection to logic programming se•
     semantics for logic programs, but it also allows us 
                                                               mantics. 
     to strengthen the results of des Rivieres & Levesque 
     [1988] and Morreau & Kraus [1998].                        2 Terminology and Notation 
                                                               We will be using theories of first-order predicate logic to for•
 1 Introduction                                                malise propositional attitudes of agents. To prove the consis•
The approach most often used in constructing formal theo•      tency of these first-order theories, we use results from logic 
 ries for reasoning about multiagent systems is to formalise   programming semantics. Below we introduce the kinds of 
the agents' beliefs and knowledge through modal opera•         logic programs and first-order languages we will be consider•
tors. An alternative approach is to formalise these proposi•   ing. 
tional attitudes as predicates of a first-order predicate logic. 
This has several advantages, which have been widely dis•       2.1 Logic Programs 
cussed in the literature [Davies, 1990; Attardi and Simi, 1995; All logic programs considered in this paper will be proposi•

Carlucci Aiello et al.y 1995; McCarthy, 1997; Grant et a/.,    tional. Thus, an atom is simply a propositional letter, and 
2000]. Most importantly, it allows us to quantify over the     a literal is either a propositional letter p or its negation -p. 
propositional objects of knowledge and belief as for instance  We take the symbols true and false to be among our propo•
 in "agent 1 believes that everything known by agent 2 is also sitional letters with the obvious intended interpretation. A 
known by agent 1", formalised by                               clause is a formula of propositional logic on the form 


KNOWLEDGE REPRESENTATION                                                                                             443  where H is an atom, and all Li are literals. A preposi­          The intended interpretation of a formula is that 
 tional program (or simply a program) is a (possibly infinite)    is known" or 'V 's believed". We assume all first-order 
 set of clauses. Herbrand models of programs are defined in    languages L to contain the language of Peano arithmetic. 
 the usual way. We require that all models assign the truth-   Throughout the paper, by formal arithmetic we mean Robin­
 value true to the propositional letter true and false to false. son's arithmetic, though any other standard formalisation of 
   Given a program P, comp(P) denotes its Clark comple­        arithmetic could have been used in its place. We identify first-
 tion. Since we work only with propositional programs, the     order languages L with their sets of sentences. By a sentence 
 Clark completion is particularly simple. The Clark comple­    in L we understand a closed formula, that is, a formula with­
 tion of P is the following set of equivalences in infinitary  out any occurrences of free variables. The set of ground terms 
 propositional logic: for each atom A in P,                    of L is denoted Tcrms(L). 
                                                                 To avoid confusion between formulas of propositional pro­
   • if A does not appear as head of any clause in P, then 
                                                               grams and formulas of first-order languages we will use Latin 
     A <~> false comp(P). 
                                                               letters for the former and Greek letters for the latter. 
   • otherwise we have comp(P), where 
                       is the set of clauses in P with head    2.3 Regular Formulas and RPQ Formulas 
     A.                                                        Wc now define the sets of first-order sentences which we in­
   Let P be a propositional program. The dependency graph      tend to prove that our axiom schemes of knowledge and belief 
of P is the directed graph with signed edges defined as fol­   can consistently be instantiated with. 
 lows. The nodes of the graph are the atoms (propositional     Definition 1. Let L be a first-order language. The set of reg•
letters) occurring in P excluding the special atoms true and   ular formulas ofL is the least set satisfying: 
false. There is a positive edge from A to B, denoted by         (i) Any atomic formula of is a regular formula. 
 (A, B, -f), if and only if there is a clause Ln 
                                                               (ii)are regular formulas and x is a variable, then 
in P such that LL -■= B for some . If Lt — -*B 
then there is a negative edge from A to B, denoted (A, B,-).                  and : • are regular formulas. 
We say that A depends on B, denoted by A < B, if there is a    (iii) If is a regular formula then is a regular for•
proper path from A to B in the graph. We say that A depends        mula. 
negatively on B, denoted by if there is a path from              Our definition differs slightly from the one given by Mor-
A to B containing at least one negative edge. A program P is   reau and Kraus [1998]. Instead of using a parametrised cod­
called locally stratified if the relation in the dependency    ing, they have an (n + l)-place predicate symbol for 
graph of P is well-founded. 
                                                               each n, such that instead of writing ,... ,.rn)n), 
                                                               whereare the free variables of they would 
2.2 First-Order Languages                                      be writing where is then a stan­
We use L to range over languages of first-order predicate      dard (non-parametrised) Godel coding. To simplify matters, 
logic. We take the connectives of first-order logic to be ->, A we have chosen to take care of the free variables by using 
and When using in formulas, these formu­                       a parametrised coding rather than by introducing infinitely 
las are simply abbreviations of formulas containing only ->, A many predicate symbols of different arities. 
and We require all languages L to contain the one-place          As an example of a regular formula we have, for a suitable 
predicate symbols T and P. P will be used as a predicate       choice of L, 
that picks out a set of (codes of) formulas in L. T will, de­
pending on the context, be used to express one of our syntac­
tic attitudes belief or knowledge. By L - {T} we denote the    expressing that the agent knows Mike's telephone number. If 
language L with the predicate symbol T removed. We will        we have more than one agent, we can of course introduce a 

assume that all considered languages contain a parametrised    predicate symbol Ti for each agent i. In that case the follow­
coding. By a parametrised coding in L we understand an         ing sentence also becomes regular: 
injective map r_1 from the formulas of L into the terms of L 
satisfying: 
  (i) For any formula in L, the term has the same free 
     variables as (but f is not itself a variable).            expressing that agent 1 believes agent 2 to have correct beliefs 
 (ii) For any formula in L and any term r which is free        about the departure time of the train. As an example of a non-
     for x in ~ is term obtained by substitut­                 regular formula we have 
     ing T for all free occurrences of x in 
(iii) The coding is well-founded, that is, there is no infinite 
                                                               expressing that the user believes that the system only utters 
     sequence of formulassuch that                       is 
                                                 - n           what it believes to be the case. It is non-regular because 
     a term in for all 
                                                               System is applied directly to a variable and not to the code of 
We refer to [Feferman, 1984] for the construction of a         a formula. To allow expressing beliefs such as this one, Mor-
parametrised coding. Feferman's coding does not satisfy (ii),  reau and Kraus [1998] extended the set of regular formulas to 
but a simple variant of it will. is called the code of         a more inclusive class called the RPQ formulas. 


444                                                                                   KNOWLEDGE REPRESENTATION  Definition 2. Let L be a first-order language. The set of RPQ Theorem 5 (Morreau and Kraus |1998|). Theorem 4 still 
 formulas of L is the least set satisfying:                    holds when we replace "regular sentences " with "RPQ sen­
                                                               tences ". 
   (i) Any atomic formula of is an RPQ formula. 
                                                                  Theorem 4 is proved in Ides Rivieres and Levesque, 1988] 
  (ii)are RPQ formulas and x is a variable, then 
                                                               by a careful translation from a corresponding first-order 
                 and are RPQ formulas.                         modal logic. Theorem 5 is proved in [Morreau and Kraus, 
 (iii) If ψ is an RPQ formula then is an RPQ formula.           1998] by a similar translation from a corresponding second-
                                                               order modal logic. In the following section we give proofs 
 (iv) If ψ is any formula in L, then is an RPQ                 of their results taking a completely different route. We show 
     formula.                                                  that the problems can be reduced to problems of consistency 
   This definition also differs from the one given by Morreau  of particular logic programs. 
 and Kraus [1998]. It defines a slightly more inclusive set of    Instead of working directly with the axiom schemes Al-
 formulas, and at the same time it is simpler, since it avoids A6, we will most of the time be working with the truth 
 Morreau and Kraus' use of two distinct collections of vari­   scheme which is the following axiom scheme: 
 ables. 
   By regular sentence we understand a closed regular for­
 mula, and by RPQ sentence a closed RPQ formula. 
                                                               This is often sufficient since, as the following lemma shows, 
                                                               instances of axiom schemes A1-A6 are logical consequences 
 3 Review of Previous Results                                  of corresponding instances of the truth scheme. To prove that 
 Consider the following axiom schemes in a first-order lan­    the axiom schemes A1-A6 instantiated over a set of sentences 
 guage L:                                                      S are consistent, it thus suffices to prove the consistency of 
                                                               the truth schema instantiated over that same set. 
 Al. 
                                                               Lemma 6. Let L be a first-order language, and let S be a set 
 A2.                                                           of sentences in L satisfying: 
 A3. 
                                                                 if and are in S then are in S. 
 A4. is a theorem in formal arithmetic. 
                                                               Let M be a model of L in which holds for all 
 A5.                                                              in S. Then all of AI-A 6 hold in M for all 
 A6. 
                                                               Proof That Al holds in M when ψ is in S is a trivial con­
 As already mentioned, is intended to denote either            sequence of the fact that holds in M. To 
 'ψ is known" or is believed". Thus, for instance, the first   see that A2 holds in M, we first note that if is in S then 
 axiom scheme expresses that everything known (believed) is                      is in S as well, by assumption on S. This 
 true. It seems reasonable to characterise knowledge by the ax­ sentence is an abbreviation of so we get that 
 iom schemes A1-A4 and belief by A2-A6. But the following      the following instance of the truth schema holds in M: 
 theorem shows that this is not always possible. 
 Theorem 3 (Montague |1963|, Thomason [1980]). Let L 
 be a first-order language. Formal arithmetic extended with    Using this together with the fact that Al holds in M, we get 

 any of the following sets of axioms is inconsistent.          that T{rT(ψ) -> ψ) holds in M. That is, A2 holds in M. 
  (a) The axiom schemes of knowledge, AT A4, instantiated      A3-A6 are proved to hold in M in a similar manner. 
      over the sentences of L. 
                                                               4 From LP Semantics to Consistent 
  (b) The axiom schemes of belief, A2-A6, instantiated over 
      the sentences of L.                                           Treatments of Knowledge and Belief 
   The inconsistency of (a) is Montague's result, and the in­  The results of this paper are based on the following lemma. 
 consistency of (b) is Thomason's result. A way out of these   Lemma 7 (Przymusinski [19871, Sato [1990]). /f a pro­
 inconsistency results is to restrict the set of sentences that we gram P is locally stratified then c:omp(P) has a Herbrand 
 instantiate A1-A6 with. This strategy gives us the following  model. 
 positive results. 
                                                                  Our formulation is taken from [Sato, 1990]. It should be 
 Theorem 4 (des Rivieres and Levesque [19881). Let L be a      noted that Sato is not considering infinite programs in his pa­
first-order language. Formal arithmetic extended with any of   per, but his proof carries over without modification to this 
 the following sets of axioms is consistent.                   more general framework. This is because Sato is consider­
  (a) The axiom schemes of knowledge, A1-A4, instantiated      ing the set of ground instances of non-propositional programs 
                                                               rather than these programs themselves. The set of ground in­
      over the regular sentences of L. 
                                                               stances of a finite non-propositional program is in general an 
  (b) The axiom schemes of belief A2-A6, instantiated over     infinite propositional program, that is, the kind of logic pro­
      the regular sentences of L.                              gram we are considering in this paper. 


 KNOWLEDGE REPRESENTATION                                                                                             445 Definition 8. Let L be a first-order language, and let S be 
a set of sentences in L. We define an infinite program PL,S 
as follows. For every sentence in L, the program PL,S 
contains a propositional atom denoted The clauses of 

PL,S are given by: 
                                                              Edges of the first type are called , edges of the second 
                                                              type are called edges of the third type are called 
                                                              edges and edges of the last type T-edges. 
                                                                 We have to prove that is locally stratified. Actually, 
                                                              we will be proving something slightly stronger. We will prove 
   The relation between models of the program P       and 
                                                  L,S         that the relation in the dependency graph of is well-
models of the first-order language L is given by the following 
                                                              founded. That is, we will prove that there does not exist any 
lemma. 
                                                              path of infinite length in the graph. Assume the opposite, that 
Lemma 9. Let L and S be as above, /f comp has a               is, assume the existence of an infinite path 
Herbrand model M then L has a Herbrand model N satisfy­
                                                              Claim, o contains infinitely many T-edges. 
ing: 
                                                              Proof of claim. Assume the opposite. Then there will be 
  (i) For every sentence in L,                                an infinite subpath of containing no T-edges. Thus all 
                                                       (1)    edges on o' must be But note that for any 
                                                              such edge, the start node will have higher syntactic complex­
 (ii)                                                         ity than the end node. Thus, along the syntactic complexity 
                                                              will be strictly decreasing, which contradicts being infinite. 
Proof Assume M is a model of COHIP(PL.?). comp (PL,S) 
is the following set of equivalences:                         This proves the claim. 
                                                              With every formula   in L we now associate a natural num­
                                                       (2)                        p
                                                              ber , called the T-degree of The T-degree is defined 
                                                       (3)    recursively by 
                                                       (4) 
                                                       (5) 

Let N be the following Herbrand model of L:                      • , other­
                         is an atom and .                          wise. 
(i) is proved by induction on the syntactic complexity of If  The well-foundedness of the parametrised coding ensures that 
                                                              d is well-defined. By the above claim, contains an infinite 
ψ is an atom then (1) holds by definition of N. To prove (1) 
                                                              number of T-edges. Let t be the end node of such an edge. 
for sentences of the form we simply                           Then ψ is regular. Let be the infinite subpath of having 
use (2), (3) and (4), respectively. For the case of the proof ψ as its start node. Then every node on must be a regular 
is:                                                           formula (c.f. the definition of a regular formula). This implies 
                                                              that every edge on is 
                                                               (i) either a 
where the first equivalence is by (3) and the third is by induc­ (ii) or of type does not con­
tion hypothesis. The two remaining cases are proved simi­          tain T(x) as a subformula. 
larly. Thus (i) holds. Furthermore, using (i) and (5), we get Item (ii) follows from that fact that when x is a variable then 
for all                                                       T(x) is not a regular formula, and therefore no formula hav­
                                                              ing T(x) as a subformula can be regular either. Now note 
                                                              that on any edge of type (i) or (ii), the T-degree of the end 
and thus proving (ii). □ node will be less than or equal to the T-degree of the start 
Lemma 10. Let L be a first-order language and let R be the    node. Thus the T-degree will be monotonically decreasing 
set of regular sentences in L. The propositional program PL,R along a' and must therefore be constant from some point. But 
is locally stratified.                                        then from this point it can not contain any T-edges, since the 
                                                              T-degree of the end node of such an edge is always one less 
Proof To simplify matters we will throughout this proof be    than the T-degree of the start node. This contradicts the claim 
identifying every propositional letter with the correspond­   above. 
ing first-order sentence in L. It should always be clear from 
the context whether is used to denote the first-order sen­    Lemma 11. Let L be a first-order language and let S be a 
tence or the corresponding propositional letter. Thus, by the set of sentences in L. If PL,S locally stratified then any 
                                                              Herbrand model of. can be expanded into a Herbrand 
identification, the nodes of the dependency grapl of PL,R are 
all sentences in L. The edges are:                            model of L in which holds for all in S. 


446                                                                                   KNOWLEDGE REPRESENTATION Proof. Let M denote a Herbrand model of L - {T}. Let P         5 Strengthening the Results 
be the program extended with the following clauses: 
                                                               We now strengthen the results obtained above. We want to 
          true, if is an atom in                               define a set of formulas more inclusive than the RPQ formulas 
         false, if is an atom in                               that the truth scheme can safely be instantiated 
                                                               with. For this we need a couple of new definitions. 
 PL,S is assumed to be locally stratified, and since P has 
the same dependency graph as then P must be lo­                Definition 14. Let L be a first-order language and let ψ be a 
cally stratified as well. Therefore comp(P) has a Herbrand    formula in L. The set of formulas occurring in ψ is defined 
model M', by Lemma 7. Finally, Lemma 9 gives us the exis­      as the least set containing and satisfying: 
tence of a Herbrand model N of L in which the equivalences       •If a subformula of a formulaoccuring in then 
              hold for all in S. To see that ,V expands M             is occuring in 
we just have to note that if is an atom in L - {T} then 
                                                                 • is occurring inthen is occurring in 
                                                               Assume is a formula occurring in , The occurrence is said 
and                                                            to be negative if occurs in a formula a where occurs in 
                                                                . Otherwise the occurrence is called positive. An occurence 
                                                               of in is said to be protected if occurs in a formula a 
where the last implications are by (i) in Lemma 9. 
                                                               where occurs in 
Theorem 12. Let L be a first-order language and let U be a       Thus, for instance, occurs in formulas such as A 
theory in L - {T} containing formal arithmetic. If U has a         and but not in ) when A = 
Herbrand model then U extended with any of the following       T. has positive occurrence in but negative 
sets of axioms has a Herbrand model.                           occurrence in 
  (i) The axiom scheme instantiated over the 
                                                               Definition 15. Let L be a first-order language. A formula 
     regular sentences of L. 
                                                                 in L is said to be weakly RPQ if for any variable x, the 
 (ii) The axiom schemes of knowledge, A1-A4, instantiated     formula T(x) only occurs positively or protected in 
     over the regular sentences of L. 
                                                                 Note that in an RPQ formula, every occurrence of T(x) for 
(iii) The axiom schemes of belief A2-A6, instantiated over     some variable x is protected, so every RPQ formula is also 
     the regular sentences of L.                               weakly RPQ. Thus the set of RPQ formulas is a subset of 
Proof Assume U has a Herbrand model M. Let R denote            the set of weakly RPQ formulas. It is furthermore a proper 
                                                               subset, since among the weakly RPQ formulas we have e.g. 
the set of regular sentences in L. By Lemma 10, PL,R is 
locally stratified. So by Lemma 11, M can be expanded into                               which is not RPQ. The previously 
a Herbrand model N in which holds for all                      obtained results can be extended to the weakly RPQ formulas. 
regular This proves (i). (ii) and (iii) then immediately       Theorem 16. Let L be a first-order language and let U be 
follow, using Lemma 6. □ a theory in If U has a Herbrand model, then U 
                                                               extended with the axiom scheme 
Theorem 4 is an immediate consequence of Theorem 12, 
when taking U to be formal arithmetic. The machinery we 
have introduced can also be applied to prove Theorem 5. It is 
an immediate consequence of the following corollary to The­    instantiated over the set of weakly RPQ sentences has a Her­
orem 12.                                                       brand model. 
Corollary 13. Theorem 12 still holds when we replace "reg•
                                                               Proof Let S denote the set of weakly RPQ formulas. Us­
ular sentences" with "RPQ sentences". Furthermore, the ex•
                                                               ing Lemma 11, it suffices to prove that P  is locally strat­
tension of V in the Herbrand model constructed will be the                                             L,S
                                                               ified. As in the proof of Corollary 13, we can consider the 
set of codes of regular sentences. 
                                                               modified program QL,S instead. To obtain a contradiction, 
Proof Let S denote the set of RPQ sentences of L. Modify       assume QL,S is not locally stratified. Then in the depen­
the program by removing every clause of the form               dency graph of is not well-founded, that is, there must 
                                                               exist an infinite path containing infinitely many negative 
                                                               edges. As in the proof of Lemma 10, we get that must con­
where r is not the code of any regular sentence. Call the new  tain infinitely many T-edges. Let be the end node of such 
program QL,S- It is easy to see that QL,S is locally strat­    an edge. Then is weakly RPQ. Let be the infinite sub-
ified, using the argument given in the proof of Lemma 10.      path of having this node as its start node. Then every node 
Lemma 11 still holds when we use QL,S instead of PL,s so       on must be weakly RPQ. As noted in the proof of Lemma 
any Herbrand model of U can be expanded into a model of        10, if every edge on is 
L in which holds for all RPQ sentences. This 
                                                                (i) either a 
proves (i) in Theorem 12 with "regular sentences" replaced 
by "RPQ sentences", (ii) and (iii) then follows from Lemma     (ii) or of type where a(x) does not con­
6. D tain T(x) as a subformula, 


KNOWLEDGE REPRESENTATION                                                                                             447 