                                           Inverse Circumscription 

                                                      Hubie Chen 
                                          Department of Computer Science 
                                                  Cornell University 
                                               Ithaca, NY 14853, USA 
                                                hubes@cs.cornell.edu 


                        Abstract                               inverse or identification problems is valuable for a vari­
                                                               ety of reasons, as articulated in [Dechter and Pearl, 1992; 
     Inverse (or identification) problems involve decid­       Kavvadias and Sideri, 1998]. First, certain restricted forms 
     ing whether or not an explicitly given set of data        of propositional formulas, such as Horn formulas, facilitate 
     points have an implicit description, for instance,        efficient reasoning. Hence, the ability to decide when an ex­
     in the form of a constraint network. Such prob­           plicitly given set of models can be represented in such a re­
     lems provide insight into the relationships among         stricted form, is desirable. Second, model-based represen­
     various representations of knowledge, which may           tations of information have been proposed as a viable alter­
     have differing computational properties. This pa­         native to formula-based representations [Kautz et a/., 1995; 
     per formalizes and studies the inverse circumscrip•       Khardon and Roth, 1996]; inverse problems address the rel­
     tion problem, which (roughly speaking) is to de­          ative expressibility of these two types of representations. 
     cide, given a set of models, if there exists a formula    Third, discovering structure in empirical data is a crucial 
     whose circumscription describes the input set.            component of scientific activity, and so understanding when 
                                                               structure discovery is computationally feasible sheds light on 
                                                               the nature of such activity. 
1 Introduction 
                                                                 In this paper, we further investigate the relationship be­
The relationship between implicit and explicit descriptions    tween implicit and explicit descriptions of data by consid­
of information is a central theme in knowledge representa­     ering the complexity of inverse circumscription, an analog 
tion and reasoning. For example, the core reasoning task of    of the inverse satisfiability problem for circumscription. Cir­
propositional satisfiability is to decide, given a propositional cumscription is a well-studied non-monotonic reasoning for­
formula, whether or not the explicit set of models described   malism intended to embody common sense, and provides an 
implicitly by the formula is non-empty.                        alternative semantics for propositional formulas [McCarthy, 
   Recently, Kavvadias and Sideri [1998] studied a comple­     1980]. Intuitively, the models of the circumscription of a for­
mentary task, which they called inverse satisfiability, given  mula are those models of the original formula which make as 
a set of models, is there a propositional formula with exactly few "assumptions" as necessary. The inverse circumscription 
the given set as its satisfying assignments? Without any re­   problem addresses the expressiveness of circumscription: this 
strictions on the class of formulas considered, the question is problem involves deciding, roughly speaking, if a set of mod­
trivial, since for a given set of models M, it is always possible els can be described by a circumscribed formula (over some 
to create a formula in disjunctive normal form (DNF) captur­   constraint language). Studying the complexity of this prob­
ing exactly M. Kavvadias and Sideri consider this question     lem is natural not only for the aforementioned reasons, but 
with respect to the class of formulas expressible by a pre-    also because circumscribed formulas are more space-efficient 
specified constraint language - a set of relations which can   than uncircumscribed formulas: knowledge can be repre­
be used to express constraints. Their intriguing main result   sented more succinctly with the former than with the latter, 
is that the complexity of the inverse satisfiability problem re­ in a sense made precise in [Cadoli et a/., 1997]. 
flects exactly that of the classical satisfiability problem: for a There are at least two generalizations of the inverse satis­
fixed constraint language, inverse satisfiability is intractable if fiability problem to the context of circumscription. One gen­
and only if satisfiability is intractable! For instance, INVERSE eralization is the problem of deciding, given a set of models, 
3-SAT is intractable, as 3-SAT is intractable; but, INVERSE    whether or not there exists a circumscribed formula (over a 
2-SAT is tractable, as 2-SAT is tractable.                     specified constraint language) with exactly the input set as its 
  The inverse satisfiability problem is akin to the identifica- models. A second generalization is the problem of deciding, 
tion problems studied by Dechter and Pearl [1992], which       given a set of models, whether or not there exists a formula 
involve deciding whether or not explicitly given relational    such that all models of the input set are models of the circum­
data in the form of tuples has an implicit description as a    scribed formula - in other words, the problem is to decide the 
constraint network with particular features. Studying such     existence of an approximating formula whose circumscribed 


KNOWLEDGE REPRESENTATION                                                                                              449  models covers the input set of models. We note that the tight­  We next introduce the notion of a 5-formula, which is a 
 ness of the approximating formula is not what is at stake. In propositional formula built using the relations of a constraint 
 our formulation of this problem, it is possible to efficiently language S as "templates." 
 compute a candidate formula such that if there is any for­
 mula covering the input set of models, then also covers       Definition 2.2 A constraint language S is a finite set of log•
 the input set and has fewer models than , (that is, the model ical relations (which may contain relations of different ar-
 set of is a subset of the model set of                        ities).' The maximum arity of S is the maximum over the 
   As we will show, the complexity of the first generaliza­    arities of the relations in S. 
 tion, for almost all constraint languages, can be characterized An 5-formula over variable set V is a set of constraints 
 fairly easily using previous results. Consequently, the focus (over V) where the logical relation of each constraint is in 5. 
 of this paper is on the complexity of the second generaliza­    An 5-formula with constants over variable set V is a set of 
 tion, which we call the inverse circumscription problem. Our  constraints with constants (over V) where the logical relation 
 main result is a dichotomy theorem in the complexity of in­   of each constraint is in S. 
 verse circumscription, which states that for all constraint lan­
                                                                 We move on to describe the set of models associated with 
 guages, inverse circumscription is either in P, or is co-NP-
                                                               a formula. Intuitively, a model of a formula is an assignment 
 complete. 
                                                               to the variable set which obeys all constraints. 
   Complexity dichotomy theorems arc important because 
 they demonstrate a full understanding of the complexity of    Definition 2.3 Let be an S-formula (possibly with con•
 a problem, with respect to a particular form of problem re­   stants) over variable set V. 
 striction (in our case, a restriction on the constraint language). An assignment to is a function When W 
The first dichotomy theorem was obtained by Schaefer, who      is a subset of V, f \w denotes the restriction off to W; and, 
 showed that the propositional satisfiability problem over a 
                                                                                         denotes the extension of f where 
 fixed constraint language is either in P, or is NP-complcte. 
The non-trivial tractable cases of satisfiability given by this                                . , , for all 
result are 2-SAT, HORN SAT, and XOR-SAT (where each              The assignment f satisfies a constraint ..., x^) of 
constraint is a linear equation in the field with two elements). if the tuple is in R. 
Since Schaefcr's result, many other dichotomy theorems have      The assignment f satisfies //" it satisfies all constraints 
been established [Creignou et al, 2001 J.                      in in this case, it is said to be a satisfying assignment or 
   Kirousis and Kolaitis [2001a] very recently established a   model of* 
dichotomy theorem in the complexity of model checking for        Define Models to be the set containing all models of 
circumscription. The model checking problem is to decide,        For a fixed 5, the problem of deciding whether or not an in­
given an assignment and a formula, whether or not the assign­  put 5-formula has a satisfying assignment is in NP, since in 
ment is a model of the circumscribed formula. Their theorem    non-deterministic polynomial time, a satisfying assignment 
states that, for any constraint language, the model checking   can be guessed and verified. The following example demon­
problem is either in P or is co-NP-complete. Interestingly,    strates that there is an S for which this satisfiability problem 
we show that (for any constraint language) the complexity      is equivalent to that for 3-SAT, and hence NP-complete. 
of inverse circumscription is exactly the complexity of this 
model checking problem, giving a correspondence analogous 
to that between the complexity of inverse satisfiability and 
the complexity of satisfiability. In fact, to establish hardness 
of inverse circumscription, we will reduce from the model 
                                                               3-SATformula can be efficiently converted into a S3-formula 
checking problem.                                              with exactly the same set of satisfying assignments, and vice-
                                                               versa. For example, the 3-SAT formula 
2 Preliminaries 

In this section, we present the definitions and notation that 
                                                               is equivalent to the 
will be used throughout the paper. We first introduce the no­
tation of a constraint; constraints will be the building blocks 
of the propositional formulas we consider. 
                                                                 We generalize the definition of S  in Example 2.4 as fol­
Definition 2.1/4 subset of (for some is called                                                   3
                                                               lows. 
a logical relation, and is said to have arity k. 
  A constraint over variable set V is a logical relation R     Definition 2.5 Let be the set of relations 
paired with a list of variableswhere k is the                                           where and 
arity of R, and is written                                                 is the tuple with 1 in the first i coordinates, and 
  A constraint with constants over variable set V is a logical 0 in the remaining k - i coordinates. 
relation R and a list of variables or constants y\,..., y^ € 
             where k is the arity of R, and is written             Throughout this paper, we assume that all logical relations and 
                                                               constraint languages are non-empty. 


450                                                                                    KNOWLEDGE REPRESENTATION    Having defined the notion of a model of a formula, we now             is dual Horn, S is affine. The constraint language S is non-
define what it means for a model to be minimal. The circum­              Schaefer if it is not Schaefer. 
scription of a formula is considered to have, as its models, the 
minimal models of the original formula [McCarthy, 19801.                 3 Related Work 
We consider minimality with respect to a subset P of the vari­
able set: a model is minimal if there is no model "below" it             This section reviews relevant work done previously; through­
in a comparison based on the variables in P.                             out, S is used to denote a constraint language. We first men­
                                                                         tion the seminal work of Schaefer, who proved a complex­
Definition 2.6 Let be an S-formula (possibly with con-                   ity dichotomy theorem on the satisfiability problem for S-
stants) over variable set V, and let P be a subset of V. Let <           formulas. 
denote the standard total ordering onwhere 0 < 1. 
   Suppose that and,are both                                             Definition 3.1 The SAT(S) decision problem. 
assignments over the same variable set V. We write a —p B                   Input: An S-formula 
if for all . We write if for all                                            Question: Is satisjiable? 
                          We writeand it is                                 The SATQ(S) decision problem is identical, except the in•
not the ease that We write if neither                                    put S-formula can have constants. 
nor holds. When the set P is equal to V (the entire 
                                                                            In other words, the SAT(S) problem is to decide, for a 
domain of we sometimes omit it when writing the 
                                                                         given S-formula , if the set Models is non-empty. Re­
above relations. 
                                                                         markably, Schaefer proved that for any constraint language 
   We say that is a minimal satisfying assignment (or min­               S, SAT(S) is either in P or is NP-complete; in addition, he 
imal model) of with respect to P if is a model of : and,                 gave a precise description of which constraint languages yield 
for all modelsimplies                                                    a tractable satisfiability problem, and which do not. 
   Define MinModels to be the set containing all mini•
mal models of with respect to P.                                         Theorem 3.2 [Schaefer, 1978] Let S be a constraint lan•
                                                                         guage. 
   We now introduce some terminology that can be used to 
                                                                            If S is 0-valid, l-valid, or Schaefer, then SAT(S) is in P; 
describe constraint languages; this terminology will prove 
                                                                         otherwise, SAT(5) is NP-complete. 
to be quite wieldy in describing many of the complexity di­
                                                                            If S is Schaefer, then is in P; otherwise, SAT                (S) 
chotomy theorems presented in the next section. As usual, we                                                                            C
                                                                         is NP-complete. 
define a CNF-SAT formula over variable set V to be a con­
junction of clauses, where each clause is the disjunction of                Kavvadias and Sideri [1998] studied the "inverse satisfia­
literals from V. (A literal from variable set V is either a vari­        bility problem" (denoted here by INVERSE SATC(S)). In the 
able u V itself, or the negation of a variable Literals of               "standard" satisfiability problem the goal is to decide, given a 
the former type are called positive, whereas those of the latter         formula, whether or not there exists a satisfying assignment. 
type are called negative.) An assignment / : V —> {0,1}                  In the "inverse" problem, the given input is a set of assign•
satisfies a CNF-SAT formula if every clause of contains                  ments, and the goal is to determine whether or not there ex­
a literal evaluating to true under /.                                    ists a formula with exactly the given assignments as its set of 
Definition 2.7 A Injunctive formula is a CNF-SAT formula                 satisfying assignments. 
where each clause contains exactly two literals.                         Definition 3.3 The INVERSE SATc(S) decision problem. 
   A (dual) Horn formula is a CNF-SAT formula where each                    Input: Set A of assignments over the same variable set V. 
clause contains at most one positive (negative) literal.                    Question: Is there an S'formula with constants such that 
   An affine formula is a conjunction of equations of the form           A = Models 
                      where the xi are variables and {0,1} 
is a constant. (The symbol < denotes the logical "exclusive                 A dichotomy theorem was established by Kavvadias and 
or/')                                                                    Sideri, which shows that the inverse satisfiability problem is 
                                                                         always in P, or is CO-NP-complete. Intriguingly, the com­
Definition 2.8 Let R, be a logical relation of arity n, and S 
                                                                         plexity of the inverse problem reflects exactly the complexity 
be a constraint language. 
                                                                         of the satisfiability problem: is intractable if and 
   The relation R is 0-valid if it contains the all-zeroes tuple 
                                                                         only if INVERSE SATC(S) is intractable! 
(0,..., 0) of arity n, and is 1-valid if it contains the all-ones 
tuple (1,..., 1) ofarity n.                                              Theorem 3.4 [Kavvadias and Sideri, 1998] Let S be a con•
   The relation R is bijunctive (Horn, dual Horn, affine) if             straint language. 
there exists a bijunctive (respectively Horn, dual Horn, affine)            If S is Schaefer, then INVERSE SATc(S) is in P; other•
formula overwith the same set of satisfying as•                          wise, INVERSE is co-NP-complete. 
signments as the -formula 
                                                                            We now formalize the model checking problem for cir­
   The constraint language S is 0-valid (l-valid, bijunctive, 
                                                                         cumscription, which was called "minimal satisfiability" in 
Horn, dual Horn, affine) if every relation contained in S is 
                                                                         [Kirousis and Kolaitis, 2001a]. 
0-valid (respectively l-valid, bijunctive, Horn, dual Horn, 
affine).                                                                 Definition 3.5 The MlN SAT(S) decision problem. 
   The constraint language S is Schaefer if at least one of the             Input: An S-formula over variable set V, an assignment 
following four conditions hold: S is bijunctive, S is Horn, S                              satisfying and a subset P ofV. 


KNOWLEDGE REPRESENTATION                                                                                                                 451    Question: Is the assignment a minimal model of with           IfS is non-Schaefer, then INVERSE EXACT MlN SATC(5) 
 respect to P?                                                 is CO-NP-complete. 
   The MlN SATc(S) decision problem is identical, except 
                                                                 For non-Schaefer constraint languages 5, hardness of 
 the input S-formula can have constants. 
                                                               INVERSE EXACT can be shown by first es­

   The MlN SAT(S) problem is in CO-NP, as deciding            tablishing the hardness of INVERSE EXACT MIN SATC(53) 
 whether or not a is a minimal model of a formula amounts     by reduction from INVERSE , and then re­

to verifying - for all assignments - that if is a model,      ducing from INVERSE EXACT MIN SATC(53) to 
then is not strictly below in the ordering Cadoli INVERSE EXACT MIN , using a technique in 
 [1992] showed that this problem is CO-NP-complete in gen­     [Kavvadias and Sideri, 1998]. For Schaefer constraint 
eral, and also identified some tractable cases. More recently, languages 5, the existence of an output polynomial time 
the following full dichotomy theorem was proved concerning    algorithm for computing minimal models of a 5-formula 
the complexity of MlN SAT(5).                                 implies the tractability of INVERSE EXACT MIN SATC(5); 
                                                              see iKavvadias et al. , 2000] for such algorithms in the case 
Theorem 3.6 [Kirousis and Kolaitis, 2001a, Theorem 4.2]
                                                        2     of constraint languages S that are bijunctive or Horn. 
   Let 5 be a constraint language. 
                                                                 For the remainder of this paper, we focus on the 
   If S is Schaefer, then MlN SAT   (5) is in P; otherwise, 
                                  C                           INVERSE MIN SAT(S) decision problem. Given an input set 
MlN SATc(5) is CO-NP-complete. 
                                                              A of this problem, it is possible to efficiently compute a "can­
   If S is 0-valid or Schaefer, then MlN SAT(S) is in P; oth•
                                                              didate formula" having the property that if there is any for­
erwise, MlN SAT(S) is CO-NP-complete. 
                                                              mula containing A in its set of minimal models, then the can­
                                                              didate formula is such a formula. That is, the candidate for­
4 The Inverse Circumscription Problem                         mula serves to witness that "yes" is the answer to the decision 
The inverse satisfiability problem (defined formally in the   question of Definition 4.1 - so long as some formula does. 
previous section) is to decide, given a set of assignments, 
                                                              Definition 4.3 Suppose that S is a constraint language and 
whether or not there is a formula with precisely the given 
                                                              that A is a set of assignments over the same variable set V. 
input set as its models. The inverse circumscription problem, 
                                                              Define the candidate 5-formula for A to be the set containing 
denoted by INVERSE MlN S AT(5), is similar in that the input 
                                                              all constraints (over V and with relation in S) that are satis•
is also a set of assignments and the task is to decide whether 
                                                              fied by every assignment in A. Similarly, define the candidate 
or not there is a formula describing the input set. However, in 
                                                              5-formula for A with constants to be the set containing all 
the inverse circumscription problem, the question is whether 
                                                              constraints with constants (over V and with relation in S) 
there exists a formula such that all of the given assignments 
                                                              that are satisfied by every assignment in A. 
are minimal models of . 
                                                              Lemma 4.4 Suppose that 5 is a constraint language and 
Definition 4.1 The INVERSE MlN SAT(S) decision prob•
                                                              that A is a set of assignments over a variable set V. Let 
lem. 
                                                              P be a subset of V, and let be the candidate S-formula 
   Input: Set A of assignments over the same variable set V, 
                                                              (with constants) for A. There exists an S-formula (with con•
and a subset P of V. 
                                                              stants) such that MinModels(if and only if 
   Question: Is there an S-formula (f) such that A 
                                                              A MinModels 
MinModels 
   The INVERSE MlN SATC{S) decision problem is identi•           For a fixed constraint language 5, the candidate 5-
cal, except the question is to decide if there is an S-formula formula for a set of assignments A can be computed in 
with constants satisfying the stated condition.               polynomial time (measured with respect to the size of the 
  As mentioned in the introduction, there is a natural variant representation of A). By the key property of the candidate 
of the INVERSE MIN SATC(5) problem which has an iden­         formula (Lemma 4.4), it follows that INVERSE MIN SAT(S) 
tical description, except the symbol is replaced with an      is in CO-NP: an assignment which is not included in 
= symbol in the "question." Let us denote this variant by     A, satisfies the 5-candidate formula of A, and is strictly 
                                                              below an assignment in A (with respect to , serves as 
INVERSE EXACT MIN SATC(5). We have the following re­
sults concerning this question.                               a succinct and efficiently checkable proof that A is a "no" 
                                                              instance of INVERSE MIN SAT(5). (By similar reasoning, 
Theorem 4.2 Let S be a constraint language.                   INVERSE and INVERSE EXACT MIN SATC(S) 
  If S is bijunctive or Horn, then                            can be shown to be in CO-NP, as discussed in IKavvadias and 

INVERSE EXACT MIN SATC(5) is in P.                            Sideri, 1998].) 
                                                                Whenever the model checking problem MIN SAT(5) is 
   2Wc note that the notation of [Kirousis and Kolaitis, 2001a] in P, the inverse problem INVERSE MIN SAT(5) will be in 
is different from ours. In particular, their decision problem 
                                                              P. This is because deciding whether or not an input set A 
MIN SAT(S) involves checking, given an assignment and formula, 
if the assignment is minimal with respect to all variables. It is eas­ to the INVERSE MIN SAT(5) problem is a "yes" instance 
ily verified that our definition of MlN S ATc (5) is equivalent to their amounts to verifying that every assignment in A is a min­
(P; Q; Z) - MlN S AT(5), and that our definition of MlN S AT(5) is imal model of the candidate formula for A\ clearly, this 
equivalent to their - MlN SAT(5). The theorem is stated       can be done in polynomial time when MlN SAT(5) is in 
here with respect to our notation.                            P. To prove a full dichotomy theorem on the complexity of 


452                                                                                   KNOWLEDGE REPRESENTATION INVERSE MIN SAT(S), it remains to describe the complex­        strong, as the hardness of inverse circumscription is estab­
ity of INVERSE MIN SAT(S') for the constraint languages S      lished by reduction from model checking for circumscription 
such that MIN SAT(S) is not in P.                              -just as the hardness of inverse satisfiability is established by 
                                                               reduction from satisfiability [Kavvadias and Sideri, 19981. 
5 Dichotomy Theorem                                              It would be of great interest to investigate further the re­
                                                               lationship between "inverse" problems (mapping an explicit 
In this section, we describe completely the complexity pro-    description to an implicit description) and more classical "for­
tile of the "inverse circumscription problem." In partic­      ward" problems (mapping an implicit description to an ex­
ular, we show that for those constraint languages S such       plicit description). A concrete goal for future work is to 
that MIN SAT(S) is co-NP-hard, INVERSE MIN SAT(S)              study inverse problems for other non-monotonic reasoning 
is also CO-NP-hard (and similarly for MIN SATc(S) and          formalisms. 
INVERSE MIN SATC(S)). 
   Our first step is to prove hardness of the 
INVERSE MIN SAT(5) problem for 9-SAT formulas,                 Acknowledgements. The author wishes to thank Bart Sel-
where the circumscription is performed with respect to all     man for useful discussions and suggestions, and Joe Halpern 
of the variables. This initial hardness result is then used to for his advice on the preparation of the final version of this 
establish the hardness of INVERSE MIN SAT(S) for other         paper. 
constraint languages S. 
                                                               A Proof Sketch of Theorem 5.1 
Theorem 5.1 The problem INVERSE MlN SAT(59) is 
CO-NP-hard, even with the restriction that the subset P must   Definition A.l Let A be a set of assignments over the vari•
be equal to the entire variable set.                           able set V. For , we say that an assignment b : V 
                                                               {(), 1} is k-compatible with A if for every size k subset W of 
   The proof of this theorem is sketched in Appendix A; the 
                                                               V, there exists an assignment a A such that 
hardness result claimed by the theorem is achieved by re­
duction from the MlN SAT(S) problem. The hardness of           Lemma A.2 Let S be a constraint language with maximum 
INVERSE MIN SAT(S9) can then be leveraged to establish         arity k, and let A be a set of assignments over the variable set 
the hardness of INVERSE MlN SATC(£), for the remaining         V. Suppose that is the candidate S-formula for A (with 
constraint languages S.                                               , If b is r-compatible with A for all r = 1,..., fc, then 
                                                               b satisfies Moreover, the converse holds if 
Theorem 5.2 Let S be a constraint language. If S is non-
Schaefer, then INVERSE MlN SATC(S) is CO-NP-hard.              Definition A.3 Let S be a constraint language. For r 1, 
   Then, constants can be "removed" in such a way that         an r-pattern of an S-formula over V is a pair (W, T) such 
allows the hardness of INVERSE MIN SAT(S) to be estab­         that —► {0,1} is an assignment 
lished, based on the hardness of INVERSE MIN SATC(S).          to the variables of W, and for all clauses 
                                                                  if T is defined on the variables R(x1........,xk (that is, 
Theorem 5.3 Let S be a constraint language. If S is neither                       , then T satisfies 
0-valid nor Schaefer, then INVERSE MlN SAT(S) is CO-NP-
hard.                                                            In other words, an r-pattern for a formula is a subset W 
                                                               of the variable set of of size r along with an assignment to 
   Collecting together the theorems of this section as well as W which does not falsify any clause of 
the discussion at the end of Section 4, we have the following    Before giving the proof, we introduce the following nota­
dichotomy theorem.                                             tion. A vector x of length k is an ordered list of variables 
Theorem 5.4 Let S be a constraint language.                    (x1,..., Xk). If is a bit vector and f 
  IfS is Schaefer, then INVERSE MlN SATc(S) is in P; oth•      is a vector of length fc, we let ^ j denote the function map­
                                                               ping x  to b  for all ,..., fc. If and 
erwise, INVERSE MIN SATC(S) is co-NP-complete.                       t     i
  If S is 0-valid or Schaefer, then INVERSE MlN SAT(S) is      v : are assignments with disjoint domains (that 
in P; otherwise, INVERSE MlN SAT(S) is CO-NP-complete.         is, by we denote the function with do­
                                                               main equal to on V\, and equal to v on When 
                                                               z is a vector of variables and / is an assignment defined on 
6 Conclusions and Future Work                                  the variables of we let denote the restriction of / to the 
In this paper, we formalized and studied inverse circumscrip•  variables of For a positive integer fc, we let denote the 
tion. We established a full dichotomy theorem in the com­      set {1,.. .,fc}. 
plexity of this problem (Theorem 5.4). A fascinating phe­      Proof. By [Kirousis and Kolaitis, 2001a, Theorem 3.8], the 
nomenon is that the complexity of inverse circumscription      version of MlN where the variable set P is promised 
reflects exactly the complexity of model checking for circum­  to be the entire variable set is CO-NP-complete. To prove 
scription (Theorem 3.6). This correspondence in complex­       hardness of INVERSEwe give a reduction 

ity parallels the intimate relationship between the complexity from this version of ,. In particular, given a S3-
of inverse satisfiability (Theorem 3.4) and that of satisfiabil­ formula , and an assignment a satisfying , we create a set 
ity (Theorem 3.2). The resemblance between the results on      of assignments A over a variable set X such that there is an 

circumscription and those on propositional logic seems quite   S9 formula with A MinModels if and only if a is 


KNOWLEDGE REPRESENTATION                                                                                             453 