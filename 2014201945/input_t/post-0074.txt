                             A  Covering    Problem     for Hypercubes

                      Jor¨ g Hoffmann                         Sebastian  Kupferschmid
            Max-Planck-Institut  fur¨ Informatik     Universitat¨ Freiburg, Institut fur¨ Informatik
                  Saarbruck¨ en, Germany                         Freiburg, Germany
                hoffmann@mpi-sb.mpg.de                  kupfersc@informatik.uni-freiburg.de

                    Abstract                          following. A QCOVER instance is a constraint problem with
                                                      n variables xd. The query hypercube speciﬁes a region in-
    We introduce a new NP-complete problem asking     side which the solution must lie, the evidence cubes spec-
    if a “query” hypercube is (not) covered by a set of ify regions inside which the solution must not lie. A hyper-
    other “evidence” hypercubes. This comes down to   cube corresponds to a conjunction of inequalities of the form
    a form of constraint reasoning asking for the satis- c < [≤, >, ≥] xd. So the complement of a hypercube (of
    ﬁability of a CNF formula where the logical atoms an evidence hypercube) corresponds to a disjunction of such
    are inequalities over single variables, with possibly inequalities, and the overall problem is a conjunction of dis-
    inﬁnite variable domains. We empirically inves-   junctive constraints. Vice versa, any conjunction of such dis-
    tigate the location of the phase transition regions junctive constraints can be expressed as hypercubes (if a dis-
    in two random distributions of problem instances. junctive constraint does not mention a variable xd, then the
    We introduce a solution method that iteratively con- interval in dimension d is the whole variable domain).
    structs a representation of the non-covered part of
    the query cube. In particular, the method is not  Proposition 1 QCOVER  is NP-complete.
    based on backtracking. Our experiments show that
    the method is, in a signiﬁcant range of instances,  We  empirically explore two random distributions of
    superior to the backtracking method that results  QCOVER   instances. The ﬁrst one, which we call Random
    from translation to SAT, and application of a state- QCOVER, chooses the end points for all intervals uniformly
                                                                  m
    of-the-art DP-based SAT solver.                   from a set of possible values. The second one, which we
                                                      call Random 3-QCOVER, is similar to the ﬁxed clause-length
    This paper is an extended abstract. More details can model for generating random 3SAT instances [Mitchell et al.,
                                     [
    be found in the long version of the paper Hoffmann 1992]. It always selects the query cube to be the cross-product
                         ]
    and Kupferschmid, 2005 .                          of the (whole) variable domains, and, in the evidence cubes,
                                                      assigns the whole variable domains to all but 3 randomly cho-
  We introduce a new NP-complete problem asking if there
                                                      sen dimensions. For both distributions, we investigate the lo-
is a point in a given n-dimensional “query” hypercube that is
                                                      cation of the phase transition regions. As it turns out, Random
not covered by – contained in the union of – a set of other n-
                                                      3-QCOVER   shows a typical phase transition behaviour while
dimensional “evidence” hypercubes. An n-dimensional hy-
                                                      Random  QCOVER   shows no such behaviour, see Figure 1.
percube is a cross product of n intervals. Intervals in our con-
                                   l <    x <    u       1                       1
text are deﬁned as statements of the form [≤] [≤]        0.9                    0.9
where “x” is a variable, “l” and “u” are members of x’s do-  0.8                0.8
                                              1          0.7                    0.7
main, and “<” is a total order deﬁned over this domain.  0.6                    0.6
                                                         0.5                    0.5

                                                         0.4                    0.4

Deﬁnition 1 Let QCOVER  denote the following problem:    0.3                    0.3
Given an n-dimensional hypercube Q, and a set E of n-    0.2                    0.2
                                                         0.1                    0.1

                                                         0                       0
dimensional hypercubes, is there a point in Q that is not con-  0  2000  4000  6000  8000  10000  12000  0  50  100  150  200  250  300
                                                                 (a)                    (b)
tained in SE∈E E?
  Covering problems of this kind arise, e.g., in the context Figure 1: Typical plot of the proportion of unsatisﬁable in-
of regression planning with numeric state variables [Koehler, stances against k for (a) Random QCOVER and (b) Random
1998]. More generally, QCOVER is a form of constraint rea- 3-QCOVER.
soning asking for the satisﬁability of a CNF formula where
the logical atoms are inequalities over single variables, with By 50% point, we denote the number k of evidence cubes
possibly inﬁnite variable domains. The correspondence is the at which our random instances have (empirically) equal prob-
                                                      ability of being satisﬁable or unsatisﬁable. The 50% point
  1By square parentheses “symb1 [symb2]” we denote alternative depends on n and m. We use instances from the 50% points
possibilities, i.e. that symb2 can be substituted for symb1. to evaluate different solution methods.  Today, in most cases the empirically most efﬁcient solution should be noted that cube elimination produces a representa-
methods for satisﬁability problems are backtracking meth- tion of all satisfying assignments in the satisﬁable cases.
ods. Such methods are depth-ﬁrst searches that split, in each
search node, the search space along the possible values of a
variable. A polynomial propagation of constraints is used to  100
determine conﬂicts early on in the search tree, and analysis  10
of conﬂicts is used to prune unnecessary branches. Meth-     1
ods of this kind have proved successful for solving constraint  0.1
satisfaction problems. In particular, the modern descendants  0.01
of the Davis Putnam procedure still constitute the state-of-
                                                          FLOAT
the-art in determining the solvability of propositional CNF  10000
                                                               2000
                                                                 500                         6
                                                              m                          5
formulas. In our work, we have implemented a backtracking          125               4
                                                                     25          3
                                                                             2       n
method for QCOVER  by plugging a straightforward transla-                 1
tion to SAT into Chaff [Moskewicz et al., 2001].2 To contrast              (a)
this method, we have also developed an algorithm, named

cube elimination, that, instead of backtracking over possible  100000
variable values, iteratively constructs a representation of the  10000
                                                            1000
non-covered part of the query cube. See Figure 2.           100
                                                             10
                                                             1
procedure cube elimination(Q, E)                            0.1
Q := {Q}
for all E ∈ E do
   0
  Q := ∅                                                  FLOAT
       0                                                     10000
  for all Q ∈ Q do                                             2000
     0   0             0                                         500                         6
                                                              m                          5
    Q := Q ∪ minimal cover(Q \ E)                                  125               4
                                                                     25          3
  endfor                                                                     2       n
       0                                                                  1
  Q := Q
  if Q = ∅ then answer “unsatisﬁable”, return ∅ endif                      (b)
endfor                                                Figure 3: Search space size quotient Chaff vs. cube elimi-
answer “satisﬁable”, return Q                         nation in Random QCOVER, averaged over (a) all instances,
              Figure 2: Cube elimination.             (b) only unsatisﬁable instances. The z-axis is log-scaled, the
                                                      plain z = 1 is included for orientation.
  The algorithm maintains a set Q of hypercubes that ini- In the Random 3-QCOVER distribution, we found back-
tially contains only the query cube itself. Then iteratively all tracking to be generally superior to cube elimination. For
evidence cubes E are “eliminated” by subtracting them from lack of space, we ommit the details. In spirit, cube elimina-
all cubes Q in Q. The result Q \ E of such a subtraction is tion is somewhat similar to the “bucket elimination” frame-
not necessarily a hypercube; we represent it as a set of hyper- work deﬁned by Rina Dechter [1999]. The cube elimination
cubes, computed by the minimal cover procedure. The latter algorithm is easiest to understand, and was originally moti-
is a simple for-loop over all dimensions, returning a set of vated by, viewing the satisﬁability problem we consider as a
hypercubes that covers exactly Q \ E, and that is minimal in geometrical problem. This opens up the question if geomet-
the sense that there is no smaller set of hypercubes covering rical interpretations of other satisﬁability problems can lead
exactly Q \ E (the worst-case size of the set is 2n). to interesting new methods for these problems.
  In SAT, where all variables are boolean and have only two
possible values, cube elimination comes down to transform- References
ing the CNF into a DNF. This seems a hopeless approach, [Dechter, 1999] R. Dechter. Bucket elimination: A unifying
but, for our Random QCOVER distribution, our experiments framework for reasoning. AI, 113:41–85, 1999.
show that cube elimination is often superior to the backtrack-
                                                      [                             ]
ing method implemented by Chaff. Figure 3 shows our re- Hoffmann and Kupferschmid, 2005 J. Hoffmann   and
sults for the Random QCOVER distribution, in terms of (nr. S. Kupferschmid. A  covering problem  for  hy-
of search decisions made by Chaff) divided by (total nr. of percubes. TR 218, Universitat¨ Freiburg, 2005. At
cubes generated by cube elimination). Clearly, cube elimina- ftp://ftp.informatik.uni-freiburg.de/documents/reports/rep
tion becomes superior as the value of m increases. This is ort218/ report00218.ps.gz.
particularly true in the unsatisﬁable instances where the cube [Koehler, 1998] J. Koehler. Planning under resource con-
elimination search space is, in the largest instances, around straints. In Proc. ECAI-98, pages 489–493.
5 orders of magnitude smaller than that of backtracking. It [Mitchell et al., 1992] D. Mitchell, B. Selman, and H.
                                                         Levesque. Hard and easy distributions of SAT problems.
  2The translation implements the multiple-valued variable for In Proc. AAAI-92, pages 459–465.
each dimension by a set of boolean variables a that cover (only) [Moskewicz et al., 2001] M. Moskewicz, C. Madigan,
the relevant case distinctions in that dimension. Binary exclusion
                     0
clauses of the form ¬a ∨ ¬a ensure that, by unit propagation, only Y. Zhao, L. Zhang, and S. Malik. Chaff: Engineering an
one variable a can be set to 1 at a time.                efﬁcient SAT solver. In Proc. DAC’01.