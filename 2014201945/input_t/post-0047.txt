         A rule language for modelling and monitoring social expectations in
                                        multi-agent systems

                                          Stephen Craneﬁeld
                        Department of Information Science, University of Otago
                                   PO Box 56, Dunedin, New Zealand
                                  scraneﬁeld@infoscience.otago.ac.nz


                    Abstract                            • φx  denotes a formula φ in which variable x is free
                                                          (i.e. not bound by ∀ or ↓).
    This paper proposes a rule language for deﬁning
    social expectations based on a metric interval tem- • a and d are terms, possibly containing variables, that
    poral logic with past and future modalities and a     denote (respectively) absolute points in time and dura-
    current-time binding operator. An algorithm for       tions (e.g. using the language proposed by Verdicchio
    run-time monitoring compliance of rules in this lan-  and Colombetti [2004]).
    guage based on formula progression is also out-     • u is a unit selector on the ↓ binding operator, referring to
    lined.                                                the desired granularity of time (e.g. year or minute)for
                                                          binding x to the current time (with default value now).
1  Introduction                                       We constrain the use of variables within interval bounds b:
                                                      any such variables must be bound by an enclosing ↓ operator.
The study of electronic institutions—explicit declarative                                 +       −
models of the rules governing particular open systems of au- In this logic, the temporal operators X and X mean
                                                      “in the next state” and “in the previous state” respectively.
tonomous agents—has gained much recent attention [Cortes,´ +
2004]. There has been a signiﬁcant amount of research on φ UI ψ asserts that φ will remain true from the current state
statically verifying properties of institutions as well as in- for some (possibly empty) sequence of consecutive future
terpreting institutions to manage or guide agent interaction. states, followed by a state that is within the time interval I
                                                                           −      −
However, there has been little attention paid to mechanisms and for which ψ holds. X and UI are deﬁned similarly, but
for run-time compliance checking, i.e. monitoring events in in the past direction.
a running agent system, determining the future expectations The bounds of intervals can be speciﬁed either relatively
of agents’ behaviour according to norms of the institution, or absolutely—a preﬁx of “+”or“−” indicates a relative time
                                                                            −
and checking if these are fulﬁlled or violated. This paper fo- value. When qualifying U , the interval bounds are written
                                                 ±
cuses on this issue by presenting (i) a logic named hyMITL in the reverse order from usual, e.g. [−2 hours, −3 hours].
                ±
that combines CTL [Verdicchio and Colombetti, 2003] with A and E are temporal path quantiﬁers. They assert that
Metric Interval Temporal Logic (MITL) [Alur et al., 1996],as the formula that follows the operator applies to all, or respec-
well as features of hybrid logics [Blackburn et al., 2001],and tively at least one, of the possible sequences of states passing
                    ±
(ii) a subset of hyMITL that provides a rule language for through the current state.
deﬁning social expectations. We have implemented an algo- The ↓ operator is based on the “binder” operator used in
rithm for monitoring social expectations encoded in this lan- hybrid logics [Blackburn et al., 2001]. It binds a variable to a
guage, based on the technique of formula progression from term denoting the current date/time, possibly ‘rounded down’
the planning system TLPlan [Bacchus and Kabanza, 1998]. to a particular degree of precision, e.g. to the start of the cur-
                                                      rent year, month or day, depending on the unit indicated by
                       ±
2  Syntax of hyMITL                                   the superscript u.
The syntax of hyMITL± is deﬁned as follows:             We use the usual derived operators of ﬁrst order predicate
                                                      logic, as well as the standard abbreviations for existential
                                  +      −                                                         +
    φ ::= p |¬φ  | φ ∧ φ |∀x.φx | X φ | X φ |         and universal quantiﬁcation over states in a path: FI φ ≡
             +       −                                     +        +        +
          φ   φ | φ   φ |   φ |  φ |↓ux.φ   | I       true UI φ and GI φ ≡¬FI ¬φ, with similar deﬁnitions for
           UI      UI     A    E          x            −       −
                                                      FI and GI . We deﬁne future and past “weak until” opera-
    I ::= (−∞,+∞) | [b, b] | [b, b) | (b, b] | (b, b)
                                                      tors in the following way:
    b ::= a | +d | −d                                              +            +         +
                                                                φ W[l,u]ψ ≡↓t.(G[t,u]φ ∨ φ U[l,u]ψ)
where                                                 with similar deﬁnitions for intervals with open bounds and
                                                           −
  • p is an atomic formula from a ﬁrst order language L. for W .   +
AG   (Done(c, make payment(c, p, amount, prod num)) ∧ [t, t +1 week) →
       ↓week w.((¬ −        ( ,          ( ,        , w)) → +              ( ,          ( ,        , w)))
                 F[−0, w]Done p send report c prod num     F(+0, w+1 week)Done p send report c prod num
                 +
               W[+0, w+52 weeks]
               Done(c, cancel order(c, p, prod num)))

                         Figure 1: A rule expressing the terms of service offered by agent p

3  The Rule Language                                  the progression step as it is performed in the current state—
                           ±                          before a new state is created by a new event occurrence, and
We identify a subset of hyMITL that is suitable for encod-
                                                      therefore before formula progression can be done (this needs
ing social expectations in a form that can be used in run-time
                                                      the time difference between the old and new state as an input).
compliance testing: the set of all formulae of the following
form:
                  +                                   5Conclusion
               AG   ∀1≤i≤nxi.(φ → ψ)
                                                      This paper has deﬁned a rule language for deﬁning social ex-
for n≥0,whereφ and ψ are linear-time formulae (i.e. they do pectations based on a metric interval temporal logic and has
not contain A or E), the free variables of φ and ψ are precisely outlined an algorithm that can be used at run time in a multi-
the quantiﬁed variables {x1,...,xn}, φ and ψ do not contain agent system to monitor when expectations are generated, ful-
any occurrences of ∀, and any occurrence of ∃ must be of a ﬁlled and violated. A prototype implementation of the com-
certain restricted form that is equivalent to TLPlan’s bounded pliance testing algorithm has been implemented using SWI
existential quantiﬁcation [Bacchus and Kabanza, 1998]. Prolog. Most of the features described here have been imple-
  Figure 1 shows an example rule encoding a service offer mented, although currently the system is not connected to an
by an agent p that can provide weekly reports on a particu- agent—it uses a static database of states and their facts—and
lar market for an annual fee. This rule states that once pay- integers are used to represent times.
ment of the required amount is made by the potential client c The semantics for hyMITL±, the algorithms used, a dis-
within the validity period of the offer (one week), the service- cussion of related work and future extensions to this work,
providing agent is committed to sending a report to the client and acknowledgements can be found in the full version of
once a week for 52 weeks or until the client cancels the order. this paper [Craneﬁeld, 2005].
4  The Compliance Monitoring Process                  References
Rules in our language are intended to be used in the following [Alur et al., 1996] R. Alur, T. Feder, and T. A. Henzinger.
compliance-testing process:                              The beneﬁts of relaxing punctuality. Journal of the ACM,
                                                         43(1):116–146, 1996.
    Given a current state and the history of all prior
                                                      [Bacchus and Kabanza, 1998] F. Bacchus and F. Kabanza.
    states and their associated times, for each rule,
                                                         Planning for temporally extended goals. Annals of Mathe-
    match the left hand side against the current state
                                                         matics and Artiﬁcial Intelligence, 22(1-2):5–27, 1998.
    and history, resulting in a set of instances of the
    right hand side. Add these instances to the set of [Blackburn et al., 2001] P. Blackburn, M. de Rijke, and
    current expectations, then check all expectations to Y. Venema. Modal Logic, chapter 7, pages 436–447. Cam-
    see which are fulﬁlled or violated. Any expecta-     bridge University Press, 2001.
    tions that cannot yet be evaluated because they in- [Cortes,´ 2004] U. Cortes.´ Electronic institutions and agents.
    volve future states are ‘progressed’ to the next state AgentLink News, 15:14–15, September 2004.
    when it is created by an event observation.       [Craneﬁeld, 2005] S. Craneﬁeld. A  rule language for
  The progression of unfulﬁlled expectations from one state modelling and monitoring social expectations in multi-
to the next uses a modiﬁed version of the progression algo- agent systems. Discussion Paper 2005/01, Depart-
rithm of Bacchus and Kabanza [1998]. This algorithm gen- ment of Information Science, University of Otago,
erates a formula expressing what needs to be true in the new 2005. http://www.otago.ac.nz/informationscience/pubs/
state if the input expectation was required to be true in the papers/papers/dp2005-01.pdf.
previous state, but was not yet able to be evaluated there. [Verdicchio and Colombetti, 2003] M. Verdicchio and
  Once new expectations have been computed by matching   M. Colombetti. A logical model of social commitment for
the rules to the current state and history, each formula in the agent communication. In Proc. of AAMAS 2003, pages
combined set of old and new expectations is partially evalu- 528–535. ACM Press, 2003.
ated, resulting in true or false if the truth of the formula can
                                                      [Verdicchio and Colombetti, 2004] M. Verdicchio and
be determined yet, and otherwise returning a formula equiva-
                                                         M. Colombetti. Dealing with time in content language
lent to the original one (given the facts in the history states),
                                                         expressions. In Proc. of the AAMAS 2004 Workshop on
but modiﬁed where possible to make progression and future
                                                         Agent Communication, pages 90–104, 2004.
evaluation easier. This partial evaluation is separated out from