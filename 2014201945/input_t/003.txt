    Query rewriting and answering under constraints in data integration systems 

                      Andrea Call Domenico Lembo Riccardo Rosati 
                                Dipartimento di Informatica e Sistemistica 
                                    Universita di Roma "La Sapienza" 
                                   Via Salaria 113,1-00198 Roma, Italy 
                            {cali,lembo, rosati}@dis.uniromal.it 

                     Abstract                          may return incorrect answers to the user iFagin et al., 2003; 
                                                       Call et al, 2002]. 
     In this paper we address the problem of query an•   Another significant issue is that the sources may not pro•
     swering and rewriting in global-as-view data inte• vide exactly the data that satisfy the corresponding portion of 
     gration systems, when key and inclusion dependen• the global schema; in particular, they may provide either a 
     cies are expressed on the global integration schema. subset or a superset of the data satisfying the mentioned por•
     In the case of sound views, we provide sound and  tion, and the mapping is to be considered sound or complete 
     complete rewriting techniques for a maximal class respectively. Mappings that are both sound and complete are 
     of constraints for which decidability holds. Then, called exact. 
     we introduce a semantics which is able to cope with In this paper, we restrict our analysis to the GAV approach, 
     violations of constraints, and present a sound and which is the most used in the context of data integration. In 
     complete rewriting technique for the same dec id- particular, we study a relational data integration framework in 
     able class of constraints. Finally, we consider the which key dependencies (KDs) and inclusion dependencies 
     decision problem of query answering and give de•  (IDs) are expressed on the global schema, and the mapping 
     cidability and complexity results.                is considered sound. The main contributions of this paper are 
                                                       the following: 
 1 Introduction                                          1. After showing that query answering in the general case 
 The task of a data integration system is to combine data resid• in undecidable, we provide a sound and complete query 
 ing at different sources, providing the user with a unified view rewriting technique first for the case of IDs alone, and 
of them, called global schema. User queries are formulated then for the case of KDs together with the maximal class 
over the global schema, and the system suitably queries the of IDs for which the problem is decidable, called non-
 sources, providing an answer to the user, who is not obliged to key-conflicting IDs, or simply NKCIDs (Section 3). 
have any information about the sources. The problem of data 2. Since it is likely that data retrieved at different, au•
 integration is a crucial issue in many application domains, tonomous sources violate the KDs, we introduce a novel 
e.g., re-engineering legacy systems, data warehousing, data semantics that is a "relaxation" of the sound semantics, 
mining, data exchange.                                     and that allows minimal repairs of the data (Section 4). 
   A central aspect of query processing is the specification of We then present a sound and complete query rewriting 
the relationship between the global schema and the sources; technique in the case where KDs and NKCIDs are ex•
such a specification is given in the form of a so-called map• pressed on the global schema (Section 5). 
ping. There are basically two approaches for specifying the 3. Finally, we present decidability and complexity results 
mapping. The first approach, called global-as-view (GAV),  of the (decision) problem of query answering in the dif•
requires that a view over the sources is associated with ev• ferent cases (Section 6). 
ery element of the global schema. Conversely, the second 
approach, called local-as-view (LAV), requires the sources to 2 Formal framework for data integration 
be defined as views over the global schema [Lenzerini, 2002; 
Duschka and Levy, 1997].                               In this section we define a logical framework for data integra•
  The global schema is a representation of the domain of in• tion, based on the relational model with integrity constraints. 
terest of the data integration system: integrity constraints are Syntax We consider to have an infinite, fixed alphabet T of 
expressed on such a schema to enhance its expressiveness, constants (also called values) representing real world objects, 
thus improving its capability of representing the real world. and will take into account only databases having T as domain. 
  Since sources are in general autonomous, the data pro• We adopt the so-called unique name assumption, i.e., we as•
vided by the sources are likely not to satisfy the constraints sume that different constants denote different objects. 
on the global schema. Integrity constraints have to be taken Formally, a data integration system I is a triple (G, S, M), 
into account during query processing; otherwise, the system where: 


16                                                                               Al AND DATA INTEGRATION   1. G is the global schema expressed in the relational        mally, given a source database P for I = (G,S, M), the 
     model with integrity constraints. In particular, G =      semantics of I wrt P, denoted sern(l,D), is a set of global 
                                                               databases for I, where a global database B is in sem(l,V) 
                                                               if: 


     assume, without loss of generality, that the attributes in 
     A are the first n attributes of r. Moreover, we assume 
     that at most one KD is specified for each relation. 
  2. S is the source schema, constituted by the schemas of 
     the various sources that are part of the data integration 
     system. We assume that the sources are relational, and 
     that integrity constraints expressed on S are satisfied 
     data at the sources. Hence, we do not take such con­
     straints into account in our framework. 
  3. M is the mapping between the global and the source          By simply evaluating each view over the source database 
     schema. In our framework the mapping is defined in the    P, we obtain a global database, called retrieved global 
                                                               database ret (l,d), that actually satisfies the sound mapping 
     a view, i.e., a query, over the sources. We indicate the  (but that is not necessarily consistent with G). 
     mapping as a set of assertions of the form (r, V), where r 
     is a relation and V is the associated view over the source 
     schema. We assume that the language used to express 
     queries in the mapping is positive Datalog [Abiteboul et 
     al, 1995], over the alphabet of the relation symbols in 
     S. A Datalog query (or program) q of arity n is a col-      In this paper, we address the query answering problem, that 
                                                               is the problem of computing the set ans(q,l,D). To this 
                                                               aim, we make use of query rewriting techniques, i.e., we ex­
                                                               ploit the mapping M to reformulate the query q into another 


   Finally, a query over the global schema q is a formula that 
is intended to extract a set of tuples of elements of T. The 
language used to express queries over G is union of conjunc•
tive queries (UCQ) [Abiteboul et al, 1995], i.e., a Datalog 
program such that each rule head uses the same predicate of 
the same arity, and only relation symbols of G occur in each 
rule bodv. 


                                                                 The source schema So consists of the schemas of three 
                                                               sources comprising the relation s1 of arity 4, and the rela­
   In order to specify the semantics of a data integration sys­ tions s2 and ,s3, both of arity 3. Finally, the mapping M0 is 
tem I, we start by considering a source database for I, i.e.,  defined by the two assertions 
a database P for the source schema S. Based on P, we now 
specify which is the information content of the global schema 
G. We call global database for I any database for G. For-


Al AND DATA INTEGRATION                                                                                                17                                                                  Below we define the algorithm ID-rewrite to compute the 
                                                               perfect rewriting of a union of conjunctive queries Q. Infor­
                                                               mally, the algorithm computes the closure of the set of con­
                                                               junctive queries Q with respect to the following two rules: 


 3 Query rewriting 
 In this section we present algorithms for computing the per­
 fect rewriting of a UCQ query in GAV integration systems 
 with KDs and IDs. We first study the case in which only IDs 
 are expressed on the global schema, then we deal with the 
 simultaneous presence of both IDs and KDs. 

 Query rewriting under IDs only We start by studying 
 query rewriting when only IDs are expressed on the global 
 schema. To this aim, we need some preliminary definitions. 
   Given a conjunctive query q, we say that a variable A" is 
 unbound in q if it occurs only once in q, otherwise we say 
 that X is bound in q. Notice that variables occurring in the 
 head of the query are necessarily bound, since each of them 
 must also occur in the query body. A bound term is either a 
 bound variable or a constant. 


                                                                 Termination of the algorithm is immediately implied by the 
                                                               fact that the number of conjunctions that can be generated by 
                                                               the algorithm is finite, since the maximum length of a gen­
   Roughly speaking, an inclusion / is applicable to an atom 
                                                               erated conjunction is equal to the maximum length of a con­
g if the relation symbol of g corresponds to the symbol in the 
                                                               junction in the body of the initial query (Q, and the number of 
 right-hand side of / and if all the attributes for which bound 
                                                               different atoms that can be generated by the algorithm is fi­
 terms appear in g are propagated by the inclusion 1. When I 
                                                               nite, since the alphabet of relation symbols used is finite (and 
 is applicable to g, gr(g, I) denotes the atom obtained from g 
                                                               corresponds to the relation symbols occurring in Q and in 
 by using / as a rewriting rule whose direction is right-to-left. 


18                                                                                          Al AND DATA INTEGRATION Query rewriting under KDs and IDs Now we address the 
problem of query rewriting in the case where KDs and IDs are 
defined on the global schema. Unfortunately, KDs and IDs 
interact reciprocally so that the (decision) problem of query 
answering in this setting becomes undecidable. The follow­       We now go back to query rewriting. In the case of a NKC 
ing theorem is a consequence of a similar property proved in   data integration system, we can apply the same technique de­
[Call et ai, 2003] in the context of a single database.        veloped for IDs alone, provided that we take into account the 
                                                               KDs with suitable rules. Indeed, observe that if ret(I, V) vi-

                                                               with regard to this issue, we first introduce a unary global re­
                                                               lation val: the idea is that val stores all values occurring in 


   Undecidability of calculating the certain answers to a query 
immediately implies undecidability of calculating the perfect 
rewriting [Call et a/., 20031. The problem of query answering 
becomes decidable if we restrict the IDs to be in a particular 
class, so that they do not interact with KDs. 


                                                               4 Semantics for inconsistent data sources 
                                                               In the sound semantics, violations of IDs are treated "auto-
                                                               matically"because of the nature of the semantics; instead, the 


                                                                 We call maximal w.r.t. (J, V) a global database B for 
                                                               I consistent with G, such that there exists no global 
                                                               database B' consistent with G such that B' >>(I,D) 
                                                               B. Based on this notion, we define the loosely-
                                                               sound semantics sera/ as follows: semi(I,D) = 
                                                               {B | B is consistent with G and B is maximal w.r.t. (I, V)}. 

                                                               Finally, we denote with ans1{q,I,D) the set of answers to 
                                                               queries under the loosely-sound semantics. 


Al AND DATA INTEGRATION                                                                                                19                                                                6 Summary of complexity results 
                                                               Strictly-sound semantics. Query answering is undecidable 
                                                               even if we allow a slightly more general class of IDs than the 
                                                               NKCIDs; let us define a 1-key-conflicting (1KC) data inte-


                                                               Theorem 6.1 The problem of query answering in 1KC inte•
                                                               gration systems, under the strictly-sound semantics, is unde-
                                                               cidable. 
                                                                  In the strictly-sound semantics, the complexity of the deci­
                                                               sion problem of query answering is immediately derived from 
                                                               the rewriting of Section 3. 
                                                               Theorem 6.2 The problem of query answering in NKC in•
                                                               tegration systems, under the strictly-sound semantics, is in 
                                                               PTIME in data complexity. 

 5 Query rewriting in loosely-sound semantics 
 We now address the problem of computing answers to a query 
 under the loosely-sound semantics. Specifically, we present   incide, it is easy to see that the above properties of query 
 a rewriting technique to compute answers to queries posed to  answering under the strictly-sound semantics can be easily 
 NKC systems under the loosely-sound semantics.                generalized. 
                                                               Theorem 6.3 The problem of query answering in 1KC inte•
                                                               gration systems, under the loosely-sound semantics, is unde•
                                                               cidable. 
                                                                 We now characterize the problem of query answering un­
                                                               der the loosely-sound semantics in NKC systems. 
                                                               Theorem 6.4 The problem of query answering in NKC inte•
                                                               gration systems, under the loosely-sound semantics, is coNP-
                                                               complete in data complexity. 
                                                                 Proof (sketch). Membership in coNP follows from Theo­
                                                               rem 5.1, and from the fact that query answering in Datalog-
                                                               is coNP-complete in data complexity, while coNP-hardness 
                                                               can be easily proved by a reduction of the 3-COLORABILITY 
                                                               problem to our problem. □ 
                                                                 The summary of the results we have obtained is reported 
                                                               in the table in Figure 1, which presents the complexity of 
                                                               query answering for both the strictly-sound and the loosely-
                                                               sound semantics. Each row corresponds to a different class 
                                                               of dependencies (specified in the first two columns), while 
                                                               each cell of the table reports data complexity and combined 

                                                               complexity1 of query answering for UCQs: for each decid-
                                                               able case, the complexity of the problem is complete w.r.t. the 
                                                               class reported. In the second column of the table, FK stands 
                                                               for "foreign key dependencies" (a well-known class of IDs) 
                                                               while GEN stands for "general IDs". We have marked with 

                                                               results or to results immediately implied by known results. 

                                                                  1The results for combined complexity, which we cannot present 
                                                               in detail due to space limitations, hold under the assumption that the 
                                                               mapping is expressed in terms of UCQs. 


20                                                                                          Al AND DATA INTEGRATION 