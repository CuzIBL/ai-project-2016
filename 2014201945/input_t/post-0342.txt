     An   Inductive    Database    for  Mining    Temporal     Patterns   in  Event   Sequences

                     Alexandre   Vautier, Marie-Odile  Cordier   and Rene´ Quiniou
              Irisa - DREAM   Project Campus   de Beaulieu 35042  RENNES    Cedex,  France
                    {Alexandre.Vautier,Marie-Odile.Cordier,Rene.Quiniou}@irisa.fr


1  Introduction
Data mining aims at discovering previously unknown and po-    [−1,2]
                                                                /   /*
tentially useful information from large collections of data. C1 : A B B
                                                            [−2,1] [1,4]
The discovered knowledge, in the form of patterns, is ex-
tracted without any extra information about data. A pattern
is a representation of a concept (rules describing properties
of data, clusters in databases, etc.) that generalizes some data Figure 1: A chronicle C1 of size 3: intervals labeling edges
in a database.                                        represent bounds on the distance between event times as
  Imielinski and Mannila [Imielinski and Mannila, 1996] −2 ≤ tB − tA ≤ 1. Right, 6 instances of C1 in a sequence l1.
designed a data mining formalization framework named in-
ductive database (IDB). The main goal of IDBs is to man-
age knowledge discovery applications just as database man- of symbols with gaps. Parallel and serial notions can also be
agement systems successfully manage business applications. expressed in chronicles. In addition, they can state numerical
IDBs contain patterns in addition to data. The data mining constraints on delay between events.
process is modeled as an interactive process in which users Time can be also represented by a special numerical at-
can query data as well as patterns. IDBs represent also a good tribute. For instance, Yoshida [Yoshida et al., 2000] extracts
way to take advantage of the efﬁciency of database algorithms frequent itemsets containing a temporal feature. Their algo-
by using jointly data mining and database algorithms. rithm extracts “delta-patterns” that are ordered lists of item-
  Some IDBs implementations [Lee and De Raedt, 2003] use sets with time intervals between two successive itemsets (as
sequences of symbols as data and complex sequences of sym-
                                                                       [17,19]/ [5,12]/
bols as patterns (sequences with gaps). In many problems one for instance: {b} / {a,c} / {b,c} ) which specify the
often needs to discover patterns which are more sophisticated numerical temporal constraints between the itemsets. How-
than a simple sequence of symbols. To this end, we propose ever, interval bounds of delta-patterns are always positive
to extend IDB patterns by adding numerical constraints. In whereas interval bounds of chronicles can be negative.
this proposal, the data are event sequences and the patterns Our goal is to discover chronicles that are frequent in some
are chronicles. A chronicle is composed of events and numer- event sequences and infrequent in other ones. For instance,
ical temporal constraints, in the form of numerical intervals,
                                                      let l2 and l3 be the event sequences of ﬁgure 2. A complex
on delays between their occurrences. Figure 1 illustrates a
                                                      query such that freq(C, l2) ≥ 3 ∧ freq(C, l3) ≤ 1 asks for
chronicle  and an event sequence l .
        C1                    1                       the set of chronicles that are frequent in l2 and infrequent in
  A chronicle is recognized in an event sequence as follows: l3 according respectively to thresholds 3 and 1. Chronicles
a set oi of events of the sequence l1 instantiates the chroni- CS and CG (ﬁg. 2) satisfy this query because both cover three
cle C1 if every event of C1 is instantiated by an event of oi instances in l2 and only one in l3.
respecting type and temporal constraints. A set oi is called a
chronicle instance of C1. For example, the event sequence l1
has six instances of the chronicle : l    .                               [0,3]/        [2,3]/
                            C1 |IC1 ( 1)| = 6                      CG = A    B , CS = A    B
2  Time   in data mining
Several solutions have been proposed to tackle the problem
                                                                    Instances of C or C in l :
of time integration in data mining. Some pattern extraction                     S    G   2
                                                          {((A, 2), (B, 5)), ((A, 6), (B, 8)), ((A, 9), (B, 12))}
techniques use symbol ordering as a model of time. For in-
                                                            Instance of C or C in l : {((A, 7), (B, 10))}
stance, Winepi and Minepi [Mannila et al., 1997] extract pat-          S    G    3
terns represented by serial or parallel sequences of symbols. Figure 2: Chronicles search under frequency constraints
SeqLog [Lee and De Raedt, 2003] extracts ordered sequences  Furthermore, we introduce a generality relation between Kramer, 2001]. It computes the bounds of the version space
chronicles: a chronicle C is more general than a chronicle C0 from a conjunction of constraints. Query (1) is rewritten in
(noted C v C0) if there is a match between C and C0 such that such a way as to use Mitchell’s algorithm:
every event of C is matched to an event of C0 and the temporal
                                                 0    Qu(P, N, T ) =            C v B             C 6v B
constraints of C contains the corresponding constraint in C .           _                 ^           
                                                                          Q                 Q
Thus, we can note that CG v CS (ﬁg. 2) and that there is no         B∈Fmc  (P,T )     B∈Fmc  (N,T )
solution chronicle more speciﬁc than CS or more general than                                          (2)
                                                               Q                  Q
C .                                                   where Fmc  (E, T ) =    Fmc   (l, Tl).
 G                                                                       Sl∈E
                                                        For each chronicle from FmcQ(P, T ), the version space of
3  Frequency   of chronicles in a sequence            a conjunction of constraints is computed by Mitchell’s algo-
                                                      rithm. The union of these version spaces gives the solutions
The most used interest measure for patterns mining is based
                                                      set to query (2). One of the main interests of this method is
on frequency. The use of a generality relation makes chron-
                                                      that it needs to compute only once the Fmcs in each sequence.
icle search based on frequency easier, but only on the con-
dition that constraints on frequency satisfy monotonicity or
anti-monotonicity properties. Let C be more general than C0. 5 Conclusion
The threshold constraints on frequency satisfy one of these We have presented an original method that extracts temporal
properties if the frequency of C is equal or greater than the information in the form of patterns named chronicles. These
frequency of C0 in an event sequence. To ensure these proper- patterns use numerical temporal constraints on events. Fur-
ties for some frequency measure, we introduce a recognition thermore, they provide a way to express sequentiality and
criterion Q that speciﬁes how instances of some chronicle are parallelism between events and they generalize temporal pat-
selected in a sequence and consequently how the frequency terns used by Mannila and De Raedt [Mannila et al., 1997;
of this chronicle is computed.                        Lee and De Raedt, 2003], among others. Chronicles are ex-
  Some recognition criteria have been deﬁned in the liter- tracted by querying an IDB that contains event sequences
ature. The minimal occurrences criterion [Mannila et al., and chronicles. The user sets the minimum or maximum fre-
1997] selects all the shortest instances of an episode (a quency thresholds of searched chronicles in event sequences.
partially ordered collection of events occurring together). Our contribution introduces the notion of recognition cri-
The earliest distinct instances criterion, Qe&d [Dousson and terion that generalizes the speciﬁcation of pattern frequency
Duong, 1999], selects all the instances such that two instances computation on temporal data. Furthermore, we use a gen-
of a same chronicle have no common events and occur as erality relation on chronicles that enables us to adapt version
early as possible in the event sequence according to a total space algorithms to manage numerical temporal constraints.
                        Qe&d
order on instances. Let freq (C1, l1) be the frequency of These algorithms require the prior computation of frequent
C1 computed on the event sequence l1 (ﬁg. 1). The recog- and maximal chronicles for each event sequence used in the
nition criterion Qe&d recognizes the set of instances E = query. This computation is performed by a data mining tool
                            Qe&d
{o1, o3, o6} and the value of freq (C1, l1) = |E| = 3. that we have adapted to the task. Our approach can compute
                                                      the complete and correct set of solutions.
4  Queries  on  event sequences
                                                      References
Let P and N be two sets of event sequences and T be a set of
                                                      [                       ]
frequency thresholds. Every event sequence l has a threshold De Raedt and Kramer, 2001 L. De Raedt and S. Kramer.
                                                         The levelwise version space algorithm and its application
Tl. If l is an element of P (resp. N) then Tl is a minimum
(resp. maximum) frequency threshold. Our goal is to extract to molecular fragment ﬁnding. In Proc. of IJCAI, 2001.
some phenomenon in the form of chronicles. These are fre- [Dousson and Duong, 1999] C. Dousson and T. Vu Duong.
quent in at least one event sequence of P and infrequent in Discovering chronicles with numerical time constraints
every event sequence of N. A query has the general form: from alarm logs for monitoring dynamic systems. In Proc.
                                                         of IJCAI 1999, pages 620–626, 1999.
                               Q
      Qu(P, N, T ) = ∃l ∈ P, freq (C, l) ≥ Tl ∧
                                                     [Imielinski and Mannila, 1996] T. Imielinski and H. Man-
                                Q               (1)
                    ∀l ∈ N, freq (C, l) < Tl             nila. A database perspective on knowledge discovery.
                                                        Communications of the ACM, 39:58–64, 1996.
  The computation of frequent and maximally speciﬁc
             Q                                        [Lee and De Raedt, 2003] S. D. Lee and L. De Raedt.
chronicles, Fmc (l, Tl), in an event sequence l according to a Database Support for Data Mining Applications, volume
threshold Tl is performed by the levelwise algorithm of FACE 2682 of LNCS, chapter Constraint Based Mining of First
[                      ]
Dousson and Duong, 1999 that we have adapted to the task. Order Sequences in SeqLog. Springer-Verlag, 2003.
The method consists in computing all the Fmcs from the dif-
ferent event sequences separately (with FACE), memorizing [Mannila et al., 1997] H. Mannila, H. Toivonen, and
them, and merging them to get the solutions of the query: A. Inkeri Verkamo. Discovery of frequent episodes in
this method is efﬁcient if we consider a set of queries that use event sequences. Data Mining and KD, 1(3), 1997.
the same sets T and (P ∪ N). We use Mitchell’s algorithm to [Yoshida et al., 2000] M. Yoshida, T. Iizuka, H. Shiohara,
merge these Fmcs. This algorithm is extensively used to com- and M. Ishiguro. Mining sequential patterns including
pute the version spaces of symbol sequences [De Raedt and time intervals. In Data Mining and KD, 2000.