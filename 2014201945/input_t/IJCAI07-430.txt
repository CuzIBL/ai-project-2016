                 Trust based Recommender System for the Semantic Web

                           Punam Bedi, Harmeet Kaur, Sudeep Marwaha
              Department of Computer Science, University of Delhi, Delhi -110007, India
                       pbedi@cs.du.ac.in, hkaur@cs.du.ac.in, sudeep@iasri.res.in

                    Abstract                          preferences and filtering the set of possible options to a
                                                      more manageable subset. Collaborative filtering is the most
    This paper proposes the design of a recommender
                                                      common technique used by the recommender systems, in
    system that uses knowledge stored in the form of
                                                      which the products are suggested to the user on the basis of
    ontologies. The interactions amongst the peer
                                                      users or items similarity [Herlocker et al., 2000; Karypis,
    agents for generating recommendations are based
                                                      2001]. However, such recommender systems ignore the
    on the trust network that exists between them. Rec- social elements of decision-making and advice seeking, and
    ommendations about a product given by  peer
                                                      hence the system model does not match the mental model of
    agents are in the form of Intuitionistic Fuzzy Sets
                                                      the user [Bonhard et al., 2006]. The user does not know
    specified using degree of membership, non mem-
                                                      about the taste of the people that form the basis to suggest
    bership and uncertainty. In literature, the recom-
                                                      products. This acts as a hindrance to trust the recommenda-
    mender systems use databases to generate recom-
                                                      tions of the system.
    mendations. The presented design uses ontologies,   [Sinha et al., 2001] have shown that given a choice be-
    a knowledge representation technique for creating
                                                      tween recommendations from  friends and recommender
    annotated content for Semantic Web. Seeing the
                                                      systems, in terms of quality and usefulness, friends’ recom-
    potential and popularity of ontologies among re-
                                                      mendations are preferred even though the recommendations
    searchers, we believe that ontologies will be build
                                                      given by the recommender systems have high novelty fac-
    and maintained in numerous knowledge domains
                                                      tor. Friends are seen as more qualified to make good and
    for the Semantic Web and future applications. The useful recommendations as compared to recommender sys-
    presented recommender system uses temporal on-
                                                      tems. Also, the empirical studies by [Ziegler et al., 2004]
    tologies that absorb the effect of changes in the on-
                                                      have shown that the correlation exists between trust and user
    tologies due to the dynamic nature of domains, in
                                                      similarity when the community’s trust network is bound to
    addition to the benefits of ontologies. A case study
                                                      some specific application. In light of these studies, it can be
    of tourism recommender system is chosen to gen-
                                                      said that the computational trust models can act as appropri-
    erate the recommendations for the selection of des- ate means to supplement [Donovan et al., 2005] or replace
    tination, travel agents and the flight schedule. A
                                                      [Ziegler et al., 2004] current collaborative filtering ap-
    comparison of the generated recommendations
                                                      proaches used by the recommender systems.
    with the manual recommendations by peers estab-
                                                        To overcome the limitations of existing recommender
    lishes the validity of the presented recommender
                                                      systems, we have proposed a trust based recommender sys-
    system.
                                                      tem for the Semantic Web. The proposed recommender sys-
                                                      tem runs on the server with the knowledge distributed over
1  Introduction                                       the network in the form of ontologies. An individual inter-
In our daily life, even to decide upon simple things like acts with the recommender system through an agent. The
which place to visit, which movie to watch, which book to agents of the application domain form a “web of trust”
read, which restaurant to eat at, we depend upon our ac- [Guha et al., 2004] and use this web of trust to generate the
quaintances, reviews in the newspapers, magazines, and recommendations. In the proposed model, the recommenda-
general surveys, etc to help find interesting products or serv- tions are taken from the trustworthy agents only and the data
ices. This support from the society provides a shortcut to as well as the methods used to generate the recommenda-
select a good alternative as otherwise the cost and effort tions are with agents, making the recommendation process
required is usually not deemed to be worth the trouble. transparent to the user.
  In this age of technology, the Recommender Systems    [Massa et al., 2004; Ziegler et al., 2004] have proposed
(RS) have come to the rescue of the users and create a tech- recommender systems that use trust to recommend products.
nological proxy for this. Recommender Systems use the In their work, trust values are computed in addition to simi-
opinion of members of a community to help individuals larity measures between the agents. In our work, similarity
identify the information most likely to be interesting to them between the agents gets absorbed into trust through the
or relevant to their needs. This is done by drawing on user process of trust update.


                                                IJCAI-07
                                                  2677  The presented design uses ontologies, a knowledge repre- tween two versions, we use the slot versioning to capture the
sentation technique for creating annotated content for Se- change. In slot versioning, only the version of changed
mantic Web. Seeing the potential and popularity of ontolo- property is created and inserted above the existing latest
gies among researchers, we believe that ontologies will be version in the same OWL file. When the class name or the
built and maintained in numerous knowledge domains for intrinsic attribute of the class has changed then we use the
Semantic Web and future applications. The proposed archi- frame versioning and the whole is inserted above the exist-
tecture also enables the same agent to give recommenda- ing version in the same OWL file.
tions on more than one subject domain. The knowledge be-
ing put as ontology on a separate tier, allows the flexibility 3 Trust based Recommender System for Se-
of using more than one ontology to give recommendations
on different domains or to use more than one domain to    mantic Web
generate recommendations on a single complex problem. The framework of the recommender system shown in Fig. 1
The presented recommender system uses temporal ontolo- uses temporal ontologies. It depicts the relationships be-
gies that absorb the effect of changes in the ontologies due tween the agents and the ontologies. There can be m agents
to the dynamic nature of the domains.                 in the application domain that interact with each other form-
  In the literature not much work has been done regarding ing a social network of agents based on trust, referred to as
the utilization of fuzziness and uncertainty in the recom- “web of trust”. Every agent has its personal temporal ontol-
mendation process, even though these are inherent in it. In ogy which is populated using one or more of the n domain
the proposed model we have used Intuitionistic Fuzzy Sets temporal ontologies. It is not necessary that every agent
(IFS) [Atanassov, 1999] that have degree of membership,
non-membership and uncertainty to capture the fuzziness              Agent1          Web service
and uncertainty.                                           Personal Tem-               Domain Temporal

  The organization of the paper is as follows. In section 2, poral Ontology1              Ontology1
knowledge representation using temporal ontologies is dis-
cussed. Section 3 presents our trust based recommender                 Trust
system for the Semantic Web. In section 4, formation of                              Web service
                                                                  Agent2
“web of trust” is described. A case study of tourism recom-                            Domain Temporal
                                                        Personal Tem-
mender system is presented in section 5 and finally section 6                             Ontology2
concludes the paper.                                    poral Ontology2
                                                                   Trust

2   Knowledge Representation in Temporal                           Agent3
    Ontologies                                            Personal Tem-              Web service
                                                          poral Ontology3
Ontology is a conceptualization of a domain into a human                               Domain Temporal
understandable, but machine readable format consisting of           Trust                Ontology n
entities, attributes, relationships and axioms [Middleton et
                                                                          Agent m
al., 2002]. The degree of specification of the conceptualiza-
                                                              Personal Tempo-
tion, which underlies the language used by a particular                                  Internet
                                                              ral Ontology m
knowledge base, varies in dependence of the purposes. An
ontological commitment is thus a partial semantic account Fig.1. Trust based Recommender System for Semantic Web
of the intended conceptualization.                    interact with every agent or domain temporal ontology
  The OWL, Web Ontology Language is a language for de- available in the application domain.
fining and instantiating Web Ontologies. In OWL ontology, The domain specific temporal ontology provides the part
concepts are arranged in hierarchical format with each con- of a specific version of the ontology or requisite version of
cept represented by a node in the hierarchy. An OWL class ontology or a full temporal ontology as per the need of the
having various properties and relationships with the other requesting agent. Extraction of the sub or full ontology from
classes represents each node. The temporal ontologies are the temporal ontology is taken care by the web service that
implemented in OWL ontologies with the introduction of is also used as an intermediate layer for handling the inter-
new attributes to classes and properties for marking time- actions between the agent community over the web and do-
stamp and their validity.                             main temporal ontology. In this paper, we are limiting our
  Relating it with the frames and slots, a class in ontology self to the OWL temporal ontology but the framework poses
is based on the frame and its properties are slots of the no restriction for the use of temporal ontologies written in
frames. The relationships among different classes or frames other languages. The web service layer also provides an
are established by referencing related classes or instances of abstraction layer that isolates the domain temporal ontolo-
classes in slots or properties. The temporal ontologies are gies from the agent community. This abstraction allows the
obtained through frame and slot versioning [Bedi et al., ontology engineers to create, develop, and update the ontol-
1993; Noy et al., 2004]. When the value of a property of a ogy separately and then seamlessly integrate them with the
class has changed or name of the property has changed be- agent applications [Bedi et al., 2005]. The use of temporal


                                                IJCAI-07
                                                  2678ontologies in this respect is very useful as it allows the mentioned below. However, there is no prioritization
agents in recommender system to extract knowledge from    among the values of an attribute as recommender agent
different versions of the same ontology dynamically, taking has no idea about the user preference of one value over
care of the changes occurring in them. The agents can con- the other.
tinue to work intelligently by using older compatible version In this paper, we are trying to have a system similar to the
and yet use new version for the concepts that are added af- social recommendation process and hence we are not re-
terwards but compatible with the existing ones. This archi- stricting to the preference list or uncertain list for the user
tecture also provides a great scalability to scale up recom- taste. As in real life, to recommend a product to someone
mender system developed for one domain to many domains. known to us, we do take into consideration the taste of the
  Using the personal ontology, a recommender agent gen- person. But if we feel that a particular product may be of
erates personalized recommendations for the user agent. In interest to the other person as the product has a general ap-
the personal ontology, an agent maintains the profile of the peal or if the reviews for a product in the newspaper, maga-
acquaintances, requisite part retrieved from the domain zines, etc. are good, then we do recommend that product. In
temporal ontology and degree of trust on the acquaintances such cases, if the user likes the product that actually does
which is computed and updated as shown in section 4.  not conform to his/her explicitly mentioned taste, then the
  Two types of interactions / encounters are possible be- user agent gives a feedback as a binary value, yes or no, to
tween the agents: intentional and unintentional [Bedietal., the recommender agent(s) who recommended that particular
2006]. When an agent intends to find interesting products product. The recommender agent on getting a positive feed-
for itself and explicitly seeks recommendations, the interac- back from the user agent adds the attribute values of the
tions are termed as intentional encounters. The agents in the product to the uncertain list for that user. The user agent
application domain through “web of trust” exchange infor- does not rate the product in the feedback; as a result it is not
mation about the products known to them during their idle possible for the recommender agent to adjust it in the pref-
time. Such interactions are referred to as the unintentional erence list. This also helps to overcome the cold start prob-
encounters. The unintentional encounters help to spread lem generally faced by the recommender systems.
information similar to “word of mouth”.
  An agent can act both as a recommender as well as user Generating IFS for the products
agent. During the intentional encounters, one agent acts as a A recommender can recommend products known to it.
user agent and those known to it act as recommenders. The The recommender agent comes to know about the product
following sections describe how the recommendations are either through usage or through unintentional encounters.
generated as recommender and how the user agent aggre- During the unintentional encounters, an agent exchanges the
gates the recommendations to generate the list of interesting information about only those products that it has used and is
products for itself.
                                                      satisfied with.
3.1 Generating recommendations                          An agent stores only the names of the products known to
                                                      it in the personal domain ontology. When an agent has to
The recommender agents accumulate the information during generate recommendations for other agent, it retrieves
the unintentional encounters that after personalization, is knowledge about known products from the appropriate ver-
passed as a recommendation to the user agent during the sion of the domain temporal ontology.
intentional encounters. Every recommendation corresponds Let the products be represented by n attributes (a1,a2,…,
to a product and is in the form of IFS. The IFS recommen- an). A product P is suggested to the user agent A, along with
dation of a product has a degree of membership (satisfac- the IFS generated for it as shown below:
tion), degree of non-membership (dissatisfaction) and de- 1. The degree of membership of product P, μP is computed
gree of uncertainty (hesitation) signifying the relevance of using the preference list PA,as:
the product for the user. To personalize the recommenda-  1.1 For every attribute ai (i=1,…,n)dothefollow-
tions according to the taste of the user agent A, the recom-  ing:
mender agent maintains the following lists in its profile:    1.1.1  Let avi1,avi2,…,avi(mi) be the attribute
  ∞ Preference list: The preference list, PA consists of the         values of P for the attribute ai.Searchfor
   information in terms of the attributes of the products            these values in the sublist of attribute ai of
   liked by the human user connected to A. For example,              PA.
   in case of movie recommender system, the attributes        1.1.2  If avij (j = 1, 2, …, mi) figures in the list
   can be directors, actors, actresses, etc. There are sepa-         then compute the rank ravij as the position
                                                                     of av in the a sublist, else rav is 0.
   rate sub-lists in PA corresponding to every attribute of              ij      i             ij
   the product. The order of the values in the respective at- 1.1.3  Finally,
                                                                   ( da ∗ ( rav + rav + ... + rav ) +
   tribute list, signify their priority in the respective sub-        1    11    12        1(m1)
                                                                    da ∗ ( rav + rav + ... + rav ) + ... +
   lists.                                                             2     21   22        2(m2)
  ∞                                                                 da ∗ ( rav + rav + ... + rav ))
   Uncertain list: This list UA consists of the same type of μ  =     n     n1   n2        n(mn)      (1)
                                                              P                +   +    +
    information as that of the preference list, but the data                  t t t 2 ... t n
    about the taste of A is acquired via the feedback process


                                                IJCAI-07
                                                  2679       where   dai (i = 1, 2, …, n) represents the degree  DoI = DoT()R ∗{μ ()R −ν ()R ∗π ()R }∗ Rank ()R ∩
                                                              i       1   i 1   i 1     1      i 1     (4)
               of significance that the user associates    DoT(R )∗{}μ ()R −ν ()R ∗π (R ) ∗ Rank (R ) ∩....∩
                       th                                       2    i 2   i 2   i  2      i 2
               with the i attribute,                          ()∗{}()μ ()−ν ()∗π  ()∗
                                                           DoT Rk    i Rk  i Rk  i Rk  Ranki Rk
               ti (i = 1, 2, …, n) represents the total num-
                                              th          where,
               ber of values that are present in the i at-
                                                          DoI (A)isdegreeofimportanceofP   as computed by
               tribute’s sublists of P .                     i                            i
                                A                         A,
2. The degree of uncertainty of product P, π is computed
                                       P                  ∩  is the fuzzy intersection operator,
    using the uncertainty list UA,as:                            th
                                              th          Rj is the j recommender,
    2.1 Let there be ui (i=1,2,…,n) entriesinthei at-
                                                          μi(X) is the degree of membership of Pi according to X,
        tribute’s sublists in UA.
                                                          i(X) is the degree of non-membership of Pi according
    2.2 Let ki be the attribute values of P for attribute ai to X,
        that are present among u entries.
                            i                             π (X) is degree of uncertainty or hesitation of P accord-
   2.3  Compute the degree of uncertainty of the product   i                                      i
                                                          ing to X,
        Pas:
                                                            ∈
               (da ∗ k + da ∗ k + ... + da ∗ k )          X   {Rj | j = 1, …, k},
        π   =    1   1    2  2       n   n     (2)
          p             +    +   +                        DoT(Rj) is the degree of trust of the A on Rj,
                     u1   u2  ...  un
                                                          Ranki(Rj) is the normalized position of Pi in the rec-
       where, dai (i=1,2,…,n)issameasinstep1.1.3.
                                                          ommendation list of Rj,
3. The degree of non-membership of product P, P is com-  k is the total number of recommenders who have rec-
   pute as follows:
                                                          ommended Pi.
   ν   =      μ    π                           (3)
     p    1 -   p -  p                                2.  Compute the threshold, TDOI for degree of importance
                                                          as
Final recommendation list generation                                      π
  After matching the products with the preference list and  TDOI = μ –  *                            (5)
uncertain list, the degree of membership, non-membership  where,
and uncertainty is available with the recommender agent for μ,  and π are degree of membership, non membership
all the products that it knows. If a product, P has both μP and and uncertainty, respectively that the user agent expects
πP as zero, then the product is not considered further unless from the interesting products.
and until the recommender feels that the product has general 3. For all the distinct products, Pi of step 1
appeal or the reviews for it are good. The recommender      if DOIi < 0 or TDOI < DOIi then
provides the degree of uncertainty for the IFS of such prod-
                                                                 Pi is recommended to the human user corre-
ucts that signify the extent to which the recommender is not    sponding to the user agent
sure about his/her decision to suggest that product to the
                                                          The DOIi is negative for those products that do not con-
user. The degree of membership is zero for such products  form to the user taste exactly. They have been recom-
and the third parameter is computed using eq. (3). The fol- mended as they have mass appeal or it has matched
lowing method is used to generate the final list of the prod- only the uncertain list and not the preference list.
ucts that are to be recommended to the user agent along with
IFS that is computed for them:                        4. Initializing and Updating Degree of Trust
1. The products having membership as zero and uncer-
   tainty as non-zero are followed by the products with   on the recommenders
   non-zero degree of membership.                     4.1  Trust Initialization
2. Within the products with membership as zero and un-
                                                      When a new agent comes up in the system or the system
   certainty as non-zero, order the products in ascending
                                                      starts from the scratch, then the agents have to initialize the
   order on degree of uncertainty.
                                                      trust values for some of the other agents in the application
3. Within the products with non-zero degree of member-
                                                      domain to form its acquaintance set. If an agent is known to
   ship, order the products in ascending order on degree of
                                                      the other agent (i.e., the corresponding humans know each
   membership.
                                                      other), then the human associated with the agent can initial-
3.2 Aggregation of recommendation    lists after in-  ize the degree of trust according to the personal dealings
                                                      with the person. However, the system also allows an agent
    tentional encounters by the user agent            to initialize degree of trust on an agent X, on the basis of the
The user agent A, computes the degree of importance of the experiences of the other agents with X, i.e., to what extent
products using the recommendation lists. The products are the other agents in the application domain have received
then suggested to human user using the following method: good recommendations from X. The degree of trust is then
1. First identify the distinct products from the lists and regularly updated on the basis of the personal experience of
   then compute the degree of importance (DoI) of every the agent with X.
   product (Pi)asfollows:                               The new agent Y, asks for the experience of other agents’
                                                      w.r.t. X. Let q agents return their experience values as the


                                                IJCAI-07
                                                  2680number of good recommendations received to the total  tion, The Arts, Recreation, and Economics. Except for
number of the recommendations received from X. Let jth Housing and Crime criteria, higher score is better. The des-
agent gives the experience as ej. Then the degree of trust on tination ontology is developed using Protégé 2000 with con-
X is as following:                                    tinent, country, state and city classes in the hierarchy and

                      q                               then extended to temporal ontology using frame and slot

                     ∑e  j                            versioning. The ontology contains 329 cities of USA as in-
                      j =1                     (6)
            DoT(X ) =                                 dividuals of class city but it can be populated with the indi-
                       q                              viduals of the countries, states and cities of the world.
where, DoT(X) is degree of trust as computed by Y on X. The travel agents use flight schedule temporal ontology to
  If q is large, then basically we are interested in finding recommend flight information to the user agent. The flight
what is experience of the majority of the agents for which class has five properties: Airline rating, Fare, Time taken to
experiences can be clustered and then degree of trust be reach destination, Ticket class and Availability of tickets
computed [Kaur et al., 2005].                         according to traveling plan, on the basis of which the tour
                                                      plan is recommended. Presently, we have populated indi-
4.2 Updating Trust                                    viduals of classes in the ontology manually but it can be
The degree of trust on a recommender is updated on the integrated with the flight reservation systems for creating
basis of the distance between degree of importance of the individuals dynamically.
product as it is there in the aggregated list of the user agent
                                                      5.2  Experiment
(A) and the recommendation list of the recommender (R).
The difference of opinion between the user and the recom- The system starts with five agents, each of which can act as
mender is computed as follows:                        user or recommender agent, and five travel agents that can
         ()D   + D   +  ... + D                       recommend flights for the specified destinations. The re-
    d =      1     2            P              (7)
                     p                                commenders suggest destinations and the travel agents to
where,                                                the user agent. The destinations are suggested using destina-
                                                      tion temporal ontology. The recommenders suggest travel
   Di ={μi(R) – i(R) * πi(R)} – {μ –  * π},
                                                      agents on the basis of trust on travel agents. The architecture
    μ, , π;andμ(R),  (R), π (R) are as defined in the sec-
               i    i    i                            of the system enables the recommenders to compute the
   tion 3.2,                                          trust on the travel agents for the first time and then update it
   p is the total number of products in the recommendation with the growing experience about them. The stored trust is
     list of R.                                       then used to generate the recommendations about travel
Depending upon whether the difference between its aggre- agents. After selection of the destination and the travel
gated list and the recommendations is below its acceptable agents, the user agent seeks recommendations about the
threshold dt or not, the user agent updates the degree of flight schedule for the selected destination(s) from the se-
trust, DoT(R) on recommender as follows:              lected travel agent(s). The selected travel agent(s) uses the
  DoT(R) = DoT(R) + (dt –d)                     (8)   flight schedule temporal ontology to recommend flight
In our model, hence trust increases for those who give good schedule to the user agent.
recommendations and vice-versa.                         For manual recommendations, two forms are designed:
                                                      one for selecting a destination and the other for flight
5. Case Study                                         schedule to be filled by known travel agents. Twenty five
A case study of tourism recommender system is chosen to known persons staying in USA were selected as recom-
generate the recommendations for the selection of destina- menders. Five trusted travel agents were selected to provide
tion, travel agents and the flight schedule. The generated traveling schedule on the basis of five attributes considered
recommendations are compared with the manual recom-   in designing flight ontology. The travel agents then sug-
mendations provided by peers. The experiment is conducted gested flights for the selected destination.
to recommend cities of United States of America to the per- The recommendations for destination were taken against
sons living in India, who want to visit USA for tourism pur- ten preference lists corresponding to ten different users. The
pose.                                                 persons who require these recommendations are of different
                                                      age groups and different income groups, so their preferences
5.1 Setup                                             are different. In case of manual recommendations, for every
In this experiment, the dataset for developing the destination preference list, five recommenders suggest five destinations
temporal ontology is taken from the Places Rated Almanac, and every recommender suggest destinations for two prefer-
by Richard Boyer and David Savageau, copyrighted and  ence lists. In system generated recommendations, all five
published by Rand McNally. The data set rates 329 cities of agents suggest five destinations each for ten preferences.
USA on the nine criteria viz. Climate & Terrain, Housing, The results of the comparison of the system generated rec-
Health Care & Environment, Crime, Transportation, Educa- ommendations against the manual recommendations are
                                                      showninFig.2.


                                                IJCAI-07
                                                  2681