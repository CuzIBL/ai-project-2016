       EQL-Lite: Effective First-Order Query Processing in Description Logics∗

Diego Calvanese1, Giuseppe De Giacomo2, Domenico Lembo2, Maurizio Lenzerini2, Riccardo Rosati2
             1 Faculty of Computer Science                2 Dipartimento di Informatica e Sistemistica
           Free University of Bolzano/Bozen                    Universit`a di Roma “La Sapienza”
                 Piazza Domenicani 3                                   Via Salaria 113
                I-39100 Bolzano, Italy                              I-00198 Roma, Italy
            calvanese@inf.unibz.it                            lastname@dis.uniroma1.it

                      Abstract                          difﬁcult than in databases. For example, while ﬁrst-order
                                                        logic (FOL) is the basis of any query language (e.g., rela-
      Querying Description Logic knowledge bases has    tional algebra and SQL) for relational databases [1], it is well-
      received great attention in the last years. In such known that answering FOL queries posed to DL knowledge
      a problem, the need of coping with incomplete in- bases is undecidable1. More precisely, to the best of our
      formation is the distinguishing feature with respect knowledge, the most expressive class of queries that go be-
      to querying databases. Due to this feature, we    yond instance checking, and for which decidability of query
      have to deal with two conﬂicting needs: on the    answering has been proved in DLs, is the class of union
      one hand, we would like to query the knowledge    of conjunctive queries (UCQ) [7; 16]. This restriction on
      base with sophisticated mechanisms provided by    the query language may constitute a serious limitation to
      full ﬁrst-order logic (FOL); on the other hand, the the adoption of DLs technology in information management
      presence of incomplete information makes query    tasks, such as those required in Semantic Web applications.
      answering a much more difﬁcult task than in data-   The open-world semantics of DLs, while being essential
      bases. In this paper we advocate the use of a     for representing incomplete information, may complicate the
      nonmonotonic epistemic FOL query language as      task of interpreting the answers by the users, or may call for
      a means for expressing sophisticated queries over the need of reasoning about the incompleteness of the knowl-
      Description Logic knowledge bases. We show that   edge base. For example, knowing that there are no parents
      through a controlled use of the epistemic operator, with only female children, one might become interested in
      resulting in the language called EQL-Lite,weare   asking for all parents whose known children are all female.
      able to formulate full FOL queries over Descrip-  Note that querying mechanisms such as the one mentioned in
      tion Logic knowledge bases, while keeping compu-  the example go beyond FOL.
      tational complexity of query answering under con-   To summarize, due to the need of coping with incomplete
      trol. In particular, we show that EQL-Lite queries information in DL knowledge bases, two conﬂicting require-
      over DL-Lite knowledge bases are FOL reducible    ments arise in querying: on the one hand, we would like to
      (i.e., compilable into SQL) and hence can be an-  query the knowledge base with powerful mechanisms that are
      swered in LOGSPACE  through standard database     able to reason about incompleteness, and on the other hand
      technologies.                                     we aim at query languages that are both close in expressive
                                                        power to FOL, and decidable (and, possibly, tractable).
  1  Introduction                                         This paper presents the following contributions. We deﬁne
                                                        a query language for DL knowledge bases, called EQL (see
  Querying Description Logic (DL) knowledge bases has re- Section 2), based on a variant of the well-known ﬁrst-order
  ceived great attention in the last years. Indeed, the deﬁni- modal logic of knowledge/belief [14; 17; 15]. The language
  tion of suitable query languages, and the design of query an- incorporates a minimal knowledge operator K, which is used
  swering algorithms is arguably one of the crucial issues in to formalize the epistemic state of the knowledge base. Infor-
  applying DLs to ontology management and to the Semantic mally, the formula Kφ is read as “φ is known to hold (by the
  Web [9].                                              knowledge base)”. Using this operator, we are able to pose
    Answering queries in DLs must take into account the open- queries that reason about the incompleteness of information
  world semantics of such logics, and is therefore much more represented by the knowledge base. For instance, a user can
    ∗                                                   express queries that are able to incorporate closed-world rea-
     This research has been partially supported by FET project soning on demand.
  TONES (Thinking ONtologiES), funded by the EU under contract
                                                          We show (see Section 3) that through a controlled use
  number FP6-7603, by project HYPER, funded by IBM through            K
  a Shared University Research (SUR) Award grant, and by MIUR of the operator , resulting in the language called EQL-
  FIRB 2005 project “Tecnologie Orientate alla Conoscenza per Ag-
  gregazioni di Imprese in Internet” (TOCAI.IT).           1Indeed, query answering can be reduced to validity in FOL.

                                                  IJCAI-07
                                                     274Lite(Q), we are able to formulate queries that are interest- and roles/relations (i.e., binary/n-ary predicates) and the con-
ing both from the expressive power point of view, and from stants introduced above (i.e., the standard names correspond-
the computational complexity perspective. Queries in EQL- ing to Δ). In EQL, the modal operator is used to formalize
Lite(Q) have atoms that are expressed using a speciﬁc query the epistemic state of the DL KB, according to the minimal
language Q, called embedded query language, and enjoy the knowledge semantics (see later). Informally, the formula Kφ
property that they can be evaluated essentially with the same should be read as “φ is known to hold (by the KB)”.
data complexity (i.e., measured wrt the size of the ABox only) In the following, we use c to denote a constant, c to denote
as queries expressed in Q.                            a tuple of constants, x to denote a variable, x to denote a tuple
                                      Q                                                               x
  We investigate the properties of EQL-Lite( )forseveral of variables, and φ, ψ to denote arbitrary formulas, and ψc to
interesting cases, characterizing the data complexity of query denote a formula where each x is replaced by c.
answering (see Section 4). In particular, we consider the A world is a FOL interpretation over Δ.Anepistemic in-
following cases: SHIQ with simple concept and role ex-                  E,w         E
                          DLR                         terpretation is a pair ,where   is a (possibly inﬁnite)
pressions as embedded queries,  with embedded unions  set of worlds, and w is a world in E. We inductively deﬁne
of conjunctive queries, PTIME-complete DLs such as Horn- when a sentence (i.e., a closed formula) φ is true in an inter-
SHIQ   or EL, with simple concept and role expressions as     E,w             w     E         E,w |= φ
                                 ALC                  pretation    (or, is true in and ), written     ,as
embedded queries, basic DLs such as   with epistemic  follows:
concepts as embedded queries, and highly tractable DLs, such
as those of the DL-Lite family, with embedded unions of con- E,w |= c1 = c2 iff c1 = c2
junctive queries. For the latter case, we show that answering E,w |= P (c) iff w |= P (c)
EQL-Lite(UCQ) is in LOGSPACE, and, notably, can be re-  E,w  |= φ1 ∧ φ2 iff E,w  |= φ1 and E,w |= φ2
duced to evaluating FOL queries over the ABox, when con- E,w |= ¬φ      iff E,w  |= φ
                                                                                     x
sidered as a database. It follows that query processing in this E,w |= ∃x.ψ iff E,w |= ψc for some constant c
setting can be done through standard database technologies. E,w |= Kψ   iff E,w |= ψ for every w ∈ E
  Finally, we brieﬂy discuss (see Section 5) the use of EQL-
Lite(Q) for introducing the notion of integrity constraints in
                                                        Formulas without occurrences of K are said to be objec-
DL KBs.
                                                      tive, since they talk about what is true. Observe that to check
                                                      whether E,w |= φ,whereφ is an objective formula, we have
2  Epistemic query language                           to look at w but not at E: we only need the FOL interpre-
                                                      tation w. All assertions in the DL KB are indeed objective
In this paper we consider queries over a Description Logic
                                                      sentences. Instead, formulas where each occurrence of pred-
(DL) knowledge base [4]. We don’t focus on any particu-
                                                      icates and of the equality is in the scope of the K operator
lar DL. We simply assume that, through the DL, we are able
                                                      are said to be subjective, since they talk about what is known
to express our knowledge in terms of atomic concepts, i.e.,
                                                      to be true. Observe that, for a subjective sentence φ,inor-
unary predicates, and atomic roles/relations, i.e., binary/n-
                                                      der to establish whether E,w |= φ we do not have to look
ary predicates. General concepts and roles/relations are built
                                                      at w but only at E. We use such formulas to query what
through the constructs allowed in the DL, and we assume
                                                      the KB knows. In other words, through subjective sentences
that such constructs are expressible in FOL. As usual, a DL
                                                      we do not query information about the world represented by
knowledge base (KB) is formed by a set of assertions, typi-
                                                      the KB; instead, we query the epistemic state of the KB it-
cally divided into a TBox, expressing intensional knowledge,
                                                      self. Obviously there are formulas that are neither objective
and an ABox, expressing extensional knowledge. We assume
                                                      nor subjective. For example ∃x.P (x) is an objective sen-
again that such assertions can be expressed as FOL sentences
                                                      tence, K(∃x.P (x)∧¬KP (x)) is a subjective sentence, while
(i.e., closed FOL formulas). In other words, DL KBs can be
                                                      ∃x.P (x) ∧¬KP  (x) is neither objective nor subjective.
seen as FOL theories (of speciﬁc forms). Observe that most
DLs fulﬁll such assumptions: the only notable exceptions are In our setting, among the various epistemic interpretations,
those that include some form of second-order constructs such we are interested in speciﬁc ones that represent the mini-
as transitive closure or ﬁxpoints [4].                mal epistemic state of the DL KB, i.e., the state in which
                                                      the KB has minimal knowledge. Namely: let Σ beaDL
  As usual, when talking about query answering, w.l.o.g.,                         Mod(Σ)
we interpret DL KBs on interpretations sharing the same KB (TBox and ABox), and let       be the set of all
                      Δ                               FOL-interpretations that are models of Σ.ThenaΣ-EQL-
inﬁnite countable domain , and we assume that our lan-                                      E,w
guage includes an inﬁnitely countable set of disjoint con- interpretation is an epistemic interpretation for which
                              Δ                       E =  Mod(Σ). A sentence φ is EQL-logically implied by Σ,
stants corresponding to elements of , also known as stan-   Σ  |=  φ           Σ                  E,w
          [  ]                                        written   EQL  ,ifforevery -EQL-interpretation  we
dard names 15 . This allows us to blur the distinction be- E,w  |= φ
tween such constants (which are syntactic objects) and the el- have . Observe that for objective formulas such a
        Δ                                             deﬁnition becomes the standard one, namely w |= φ for all
ements of  that they denote (which are semantical objects). w ∈ Mod(Σ)      Σ |= φ
  As a query language, we make use of a variant of the well-     , denoted by     .
known ﬁrst-order modal logic of knowledge/belief [14; 17; It is worth mentioning some of the most characterizing
15; 12], here called EQL. The language EQL is a ﬁrst-order properties of EQL.
modal language with equality and with a single modal op-
erator K, constructed from concepts (i.e., unary predicates) Proposition 1 For every DL KB Σ and every EQL-sentence

                                                IJCAI-07
                                                   275φ we have:                                            of PARENT  contains pairs of elements of the form (john,x)
               Σ |=EQL Kφ ⊃ φ                         or (paul,x) and the interpretation of Female contains the ele-
               Σ |=EQL Kφ ⊃ KKφ                       ment x.
               Σ |=EQL ¬Kφ ⊃ K¬Kφ                       Suppose now that we want to know who are the known
These are the standard S5 axioms of modal logic. The ﬁrst males that are not known to be parents of a female. This can
                                                                                          q
one expresses that “what is known is true” (knowledge is ac- be expressed by the following EQL-query 2:
curate), and the latter two express that the KB has “complete q2[x]=KMale(x) ∧¬K(∃y.PARENT(x, y) ∧ Female(y))
knowledge on what is known and not known”.
                                                      It is immediate to verify that the certain answers to q2 over
Proposition 2 For every DL KB Σ and every EQL-sentence Σ    john    paul
φ                                                       are     and     , since they are the only known males
 we have that:                                        that are not in the answer to the query ∃y.PARENT(x, y) ∧
                                                      Female(y)
           Σ |=EQL Kφ  or  Σ |=EQL ¬Kφ                         .
                                                        Suppose now that we want to know who are the single chil-
The above proposition tells us that for any sentence φ the KB
                                                      dren according to what is known, i.e., the known children who
logically implies either that the sentence is known or that the
                                                      have no known sibling. This can be expressed by the follow-
sentence is not known, i.e., we have complete information on
                                                      ing EQL-query q3:
what the KB knows. Notably, this is a consequence of the
minimal knowledge semantics that we are adopting.           q3[x]=∃y.(KPARENT(y,x))    ∧
                                                                       ∀z (KPARENT(y,z))  →  z = x
Proposition 3 For every DL KB Σ and every objective EQL-                 .
       φ
sentence we have:                                     It is immediate to verify that the certain answers to q3 over Σ
                                                         paul    jane
              Σ |= φ iff Σ |=EQL Kφ                   are    and    .
              Σ |= φ iff Σ |=EQL ¬Kφ
                                                        Notice that, in an EQL-query, we can apply a form of
  The above proposition relates knowledge to FOL logi- closed world reasoning: for example, in query q2 above,
cal implication, and is again a consequence of the minimal the evaluation of ¬K(∃y.PARENT(x, y)∧Female(y)) corre-
knowledge semantics. It allows us to give a very concrete in- sponds to the evaluation of ¬∃y.PARENT(x, y) ∧ Female(y)
                                         φ
terpretation to knowledge for objective sentences: is known under the closed world assumption.
iff it is logically implied, otherwise it is not known.
  We are now ready to deﬁne EQL-queries: An EQL-query 3   EQL-Lite(Q)
is simply an EQL-formula, possibly an open one.
  Let q be an EQL-query with free variables x,wherethe We introduce now the query language EQL-Lite(Q). Such
arity of x is n ≥ 0, and is called the arity of q. We sometimes a language is a particularly well-behaved fragment of EQL,
use the notation q[x] to make the free variables x explicit. and is parameterized with respect to an embedded query
                                  x                           Q
Also we use the notation q[c] to denote q (i.e., the formula language , which again is a subset of EQL. Informally,
                                  c                           Q
obtained from q by substituting each free occurrence of the EQL-Lite( ) is the FOL query language with equality whose
                                                                                          K        
variable xi in x with the constant ci in c, where obviously x atoms are epistemic formulas of the form where is a
                                                              Q                      Q
and c must have the same arity). Since we are dealing with all query of . Formally, an EQL-Lite( ) query is a possibly
the models of the KB, as usual, query answering should return open EQL-formula built according to the following syntax:
those tuples of constants that make the query true in every  ψ ::= K | x1 = x2 | ψ1 ∧ ψ2 |¬ψ |∃x.ψ,
model of the KB: the so-called certain answers. Formally, the
                                                                                                  Q
certain answers to a query q[x] over a KB Σ are the set where is a query in the embedded query language .We
                                                      call epistemic atoms the formulas K occurring in an EQL-
     ans(q, Σ) = {c ∈ Δ ×···×Δ | Σ |=   q[c]}
                                      EQL             Lite(Q) query.
Example 4 Consider the DL KB Σ constituted by the fol-  Observe that in EQL-Lite(Q) we do not allow the K op-
lowing TBox T and ABox A:                             erator to occur outside of the epistemic atoms K. Indeed,
                                                                                 K
 T   =  { Male  ¬Female  }                            allowing for occurrences of the outside such atoms does
                                                                                                      Q
 A   =  { Female(mary), Female(ann), Female(jane),    not actually increase the expressive power of EQL-Lite( ),
          Male(bob), Male(john), Male(paul),          as the following proposition shows.
          PARENT(bob,  mary), PARENT(bob, ann),       Proposition 5 Let EQL-Lite(Q)+ be the extension of EQL-
          PARENT(john, paul), PARENT(mary, jane) }    Lite(Q) obtained by adding to the abstract syntax for EQL-
                                                      Lite(Q) formulas the rule ψ ::= Kψ. Then, for each query
Suppose we want to know the set of males that do not have fe- q ∈ EQL-Lite(Q)+, there exists a query q ∈ EQL-Lite(Q)
male children. This corresponds to the following FOL query    E,w  |= ∀x q[x] ≡ q[x]
q                                                     such that         .          , for every epistemic inter-
 1:                                                   pretation E,w.
  q [x]=Male(x)   ∧¬∃y  PARENT(x, y) ∧ Female(y)
   1                   .                              In fact, an EQL-Lite(Q)+ query q can be reduced to an equiv-
                                                                             
It is easy to verify that the set of certain answers to q1 over Σ alent EQL-Lite(Q) query q in linear time by simply push-
is empty. In particular, neither john nor paul are certain an- ing inward the K operator, stopping in front of the epistemic
swers to the above query, since (due to the open-world seman- atoms, and simplifying KKψ to Kψ and K¬Kψ to ¬Kψ
tics of DLs) there are models of Σ in which the interpretation whenever possible.

                                                IJCAI-07
                                                   276  EQL-Lite(Q) queries enjoy a very interesting computa- stant not appearing in Σ, still getting a tuple in ans(, Σ).
tional property: one can decouple the reasoning needed for Thus, ans(, Σ) would be inﬁnite.
answering the epistemic atoms from the reasoning needed for Obviously it is of interest ﬁnding simple syntactic condi-
answering the whole query. Formally, let Σ be a DL KB, tions that guarantee range-restrictedness. Here we give just a
and q[x] be an EQL-Lite(Q) query over Σ, whose epistemic trivial one, which is however quite practical in several cases.

atoms are K1,...,Km. We denote by qFOL [x] the FOL Assume that we can introduce a new concept Adom in the
query obtained from q by replacing each epistemic atom Ki DL KB Σ and assert for each constant c occurring in Σ the

by a new predicate RKi whose arity is the number of free ABox assertion Adom(c). Moreover, let’s require that all
variables in i. Also we denote by Iq,Σ the FOL interpre- queries in Q must be of the form Adom(x) ∧ [x],wherex =

tation for the predicates RKi deﬁned as follows: (i)thein- (x1,...,xn) and Adom(x)=Adom(x1) ∧···∧Adom(xn).
terpretation domain is ΔIq,Σ =Δ;(ii) the extension of the Then trivially all queries in Q are Σ-range-restricted.
         R      RIq,Σ = ans( , Σ)                      Now, if we consider EQL-Lite(Q) queries that are both do-
predicates Ki is K         i   . Finally, we denote
                    i                                 main independent and Σ-range-restricted, then we can effec-
by eval(q [x], Iq,Σ)={c ∈ Δ×···×Δ |Iq,Σ |= q [c]}
        FOL                                  FOL      tively use the theorem above to compute the certain answers.
the result of evaluating q over Iq,Σ.
                    FOL                               Moreover we can give a computational complexity character-
Theorem 6 Let Σ be a DL KB, q an EQL-Lite(Q) query over ization of query answering for EQL-Lite(Q) queries.
Σ     q       I
 , and FOL and q,Σ the FOL query and the FOL interpreta- Let Q be an embedded query language, DL aDL,and
                     ans(q, Σ) = eval(q , I  )
tion deﬁned above. Then              FOL  q,Σ .       CQ,DL  the data complexity (i.e., the complexity measured in
The theorem above tells us that, in order to compute the cer- the size of the ABox only) of query answering for Σ-range-
                                                                                                    2
tain answers of an EQL-Lite(Q) query q, we can compute the restricted queries of Q over KBs Σ expressed in DL. We
certain answers of queries i of the embedded query language know that evaluating a domain independent FOL query over
Q occurring in the epistemic atoms of q, and then evaluate the a given FOL interpretation is LOGSPACE in data complex-
query q as a FOL query, where we consider such certain an- ity [1], and, by our assumptions, computing whether a tuple
swers as the extensions of the epistemic atoms.       of constants is in the relation corresponding to the extension
  The theorem above suggests a procedure to compute cer- of an epistemic atom, can be done in CQ,DL in data com-
tain answers in EQL-Lite(Q). However, for such a procedure plexity. Hence, we immediately derive the following result on
to be effective, we need to address two issues: (i) the exten- the data complexity of answering domain independent and Σ-
                                                                             Q
sion of the predicates RKi in the FOL interpretation Iq,Σ range-restricted EQL-Lite( ) queries, where we denote with
                                                        C2
needs to be ﬁnite, otherwise Iq,Σ would be inﬁnite and the C1 the class of languages recognized by a C1-Turing Ma-
           q                              Δ                                  C
evaluation of FOL impossible in practice; (ii)since itself is chine that uses an oracle in 2.
inﬁnite, the evaluation of q must not directly deal with Δ.
                      FOL                             Theorem 8  Let Σ beaKBexpressedintheDLDL,
  We start by looking at the second issue ﬁrst. Such an is- and q a domain independent and Σ-range-restricted EQL-
sue has a long tradition in relational databases where indeed Lite(Q) query over Σ. Then, answering q over Σ is in
one allows only for FOL queries that are “domain indepen-       CQ,DL
dent” [1]. In our context, a FOL query q is domain inde- LOGSPACE     with respect to data complexity, where
                                         I      I     CQ,DL  is the data complexity of answering Σ-range-
pendent if for each pair of FOL interpretations 1 and 2,               Q          Σ           DL
respectively over domains ΔI1 ⊆ Δ and ΔI2 ⊆  Δ,for    restricted queries of over KBs expressed in .
     RI1   = RI2                      R                                  q        q
which  K      K for all atomic relations Ki ,wehave Example 9 Queries  2  and   3  in  Example  4  are
         i       i                                            (Q)                Q
that eval(q, I1)=eval(q, I2). We say that an EQL-Lite(Q) EQL-Lite  queries, where  is the language of con-
     q                                         q      junctive queries (in fact, for q3, Q is the language of atomic
query is domain independent if its corresponding query FOL
is so. Domain independent FOL queries correspond to rela- queries). It is easy to verify that both such queries are
tional algebra queries (i.e., SQL queries) and several syntactic domain independent, and that both are Σ-range-restricted
sufﬁcient conditions have been devised in order to guarantee for the KB Σ given in Example 4. In fact q2 and q3 are
domain independence, see e.g., [1]. Such syntactic conditions Σ-range-restricted for KBs Σ expressed (in practice) in any
can be directly translated into syntactic conditions on EQL- standard DL (indeed, the set ans(PARENT(x, y), Σ) may
Lite(Q) queries.                                      never be inﬁnite).
  As for the other issue, let Σ be a DL KB and  a query
of the embedded query language Q. We say that  is Σ-
range-restricted if ans(, Σ) is a ﬁnite set of tuples. By ex- 4 Case studies
tension, an EQL-Lite(Q) query is Σ-range-restricted if each We discuss now several notable applications of the above re-
of its epistemic atoms involves a Σ-range-restricted query. In sults on EQL-Lite(Q) for speciﬁc combinations of the DL
fact, the following proposition holds.                used to express the KB and of the embedded query language
Proposition 7 Let Σ be a DL KB and  a Σ-range-restricted Q. Below, we implicitly refer to domain independent EQL-
query in the embedded query language Q.Thenans(, Σ) ⊆ Lite(Q) queries only.
adom(Σ) ×···×adom(Σ)          adom(Σ)
                       .where         is the set of all  2
constants explicitly appearing in Σ.                     As usual, when we speak about complexity of query answering,
                                                      we actually mean the complexity of the associated recognition prob-
Indeed, if a constant not appearing in Σ occurs in ans(, Σ), lem: i.e., checking whether a tuple of constants is in the answer to a
then one can substitute such a constant with any other con- query [1].

                                                IJCAI-07
                                                   277SHIQ   KBs and queries with embedded concept and      DL-Lite KBs and queries with embedded unions of con-
role expressions. We consider the case in which KBs are junctive queries. Finally, we study the case in which KBs
speciﬁed in the expressive DL SHIQ [11] (or equivalently, are speciﬁed using DLs of the DL-Lite family [5; 6] and
DLR  [7]), and the embedded query language Q is that of Σ- the embedded query language Q for EQL-Lite(Q) queries is
range restricted SHIQ concept and role expressions. Note again that of UCQs.
that this case is very signiﬁcant in practice since it captures The DL-Lite family [5; 6] is a family of DLs speciﬁcally
in particular the form of queries supported by the Racer and tailored to deal with large amounts of data (i.e., ABoxes).
Pellet systems [10; 18]. Indeed, such queries are conjunc- While the expressive power of the DLs in the DL-Lite fam-
tive queries over SHIQ concept and role expressions, in ily is carefully controlled to admit tractable query answering,
which, however, the existential quantiﬁcation ranges over the such DLs are expressive enough to capture the main notions
named individuals in the ABox only. Now it turns out that (though not all, obviously) of both ontologies, and of con-
such queries correspond to conjunctions of Σ-range-restricted ceptual modeling formalisms used in databases and software
SHIQ  concept and role expressions preﬁxed by the K oper- engineering (i.e., ER and UML class diagrams). Below, for
ator. Since instance checking in SHIQ is coNP-complete simplicity, we denote by DL-Lite any DL that is a member of
with respect to data complexity [13], by Theorem 8 we get the DL-Lite family.
that in this case answering such queries, as well as every Answering UCQs in DL-Lite is in LOGSPACE with respect
                               NP                                     4
EQL-Lite(Q) query, is in LOGSPACE with respect to data to data complexity . Moreover, as a result of the tightly con-
complexity.                                           trolled expressive capabilities, we get the following.
                                                      Proposition 10 Let Σ be a DL-Lite KB, and let  be a UCQ
                                                          Σ          Σ
DLR  KBs and queries with embedded unions of conjunc- over  . Then, is -range-restricted.
tive queries. We consider the case in which KBs are again As a consequence of Theorem 8 and of membership in
speciﬁed in an expressive DL like DLR or ALCQI,andthe LOGSPACE   of the problem of answering UCQs over DL-
embedded query language is that of Σ-range-restricted unions Lite KBs, we get that moving from UCQs to EQL-Lite(UCQ)
of conjunctive queries (UCQs), i.e., we consider queries does not change the data complexity of the query answering
expressed in EQL-Lite(UCQ). Notice that the language of problem.
UCQs is currently the most expressive subset of FOL for
                                                      Theorem 11  Answering   domain   independent  EQL-
which query answering over KBs in an expressive DL, such
as DLR, is known to be decidable [7], and in fact coNP- Lite(UCQ) queries in DL-Lite is in LOGSPACE  with
complete with respect to data complexity [16]3.Fromthis respect to data complexity.
characterization, and by applying again Theorem 8, we get In fact we can reﬁne such a result by resorting to the no-
that answering Σ-range-restricted EQL-Lite(UCQ) queries tion of FOL-reducibility [6]. Intuitively, FOL-reducibility
                                  NP
over DLR  KBs is again in LOGSPACE    with respect to means that query answering can be reduced to evaluating
data complexity.                                      FOL queries over a ﬁnite FOL interpretation corresponding
                                                      to the ABox (which we assume contains assertions involv-
                                                      ing only atomic concepts and roles/relations) of a DL KB.
PTIME-complete DLs for KBs and queries.    Next we    All members of the DL-Lite family enjoy FOL-reducibility
consider the case in which KBs are speciﬁed in a PTIME- of UCQs [6]. We now show that FOL-reducibility holds also
complete DL, such as Horn-SHIQ [13] or EL [3],andthe  for domain independent EQL-Lite(UCQ) queries. Given an
embedded query language Q is that of Σ-range-restricted ABox A involving membership assertions on atomic con-
     SHIQ         EL
Horn-       (resp., ) concepts and role expressions. In cepts and roles only, we deﬁne the interpretation IA as fol-
this case, from Theorem 8, we get that answering Σ-range- lows:
restricted EQL-Lite(Q) queries is in PTIME (and, in fact   I
                                                        – a A = a for each constant a,
PTIME-complete) with respect to data complexity.            I
                                                        – A  A = {a | A(a) ∈A}for each atomic concept A,and
                                                            I
                                                        – P  A = {(a1,a2) | P (a1,a2) ∈A}for each atomic role
Epistemic embedded query languages.  In all the cases     P .
above the embedded query language consists of objective for- Then, answering queries in a query language L (contained
mulas. However, this does not need to be the case in general. in EQL) over a KB expressed in a DL DL is FOL-reducible
Let us, for example, consider KBs consisting of ABoxes ex- if for every query q ∈Land every TBox T expressed in
pressed in the basic DL ALC and embedded queries consist- DL, there exists a FOL query rdc(q) such that for every
                                ALCK          ALC
ing of concepts and roles expressed in [8], i.e.,     ABox  A,wehavethatans(q,  (T , A)) = eval(rdc(q), IA).
extended with the K operator. Then, since instance checking Observe that FOL-reducibility is a very meaningful property
in ALCK concept and roles in ALC ABoxes can be done in from a practical point of view. Indeed, in all such cases in
PSPACE [8], by Theorem 8 we get that, in this case, answer- which query answering can be reduced to evaluation of a do-
ing EQL-Lite(Q) queries is in PSPACE as well.         main independent FOL query, then such a query can be ex-
                                                      pressed in relational algebra, i.e., in SQL. Therefore, query
  3We have considered here DLR and ALCQI  rather than
SHIQ, since the data complexity for answering UCQs containing 4It is easy to see that all results for CQs in [5; 6] can be immedi-
transitive roles is still open.                       ately extended to UCQs.

                                                IJCAI-07
                                                   278