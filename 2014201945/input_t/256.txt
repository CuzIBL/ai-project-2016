          Comparison of Different Grid Abstractions for Pathfinding on Maps 

      Yngvi Bjornsson, Markus Enzenberger, Robert Holte, Jonathan Schaeffer and Peter Yap 
                           Department of Computing Science, University of Alberta, 
                                         Edmonton AB, Canada T6G 2E8 
                            {yngvi, emarkus, holte, Jonathan, petery}@cs.ualberta.ca 


                        Abstract 

     Pathfinding on a map is a fundamental problem 
     in many applications, including robotics and com•
     puter games. Typically a grid is superimposed over 
     the map where each cell in the grid forms a unique 
     state. A state-space-based search algorithm, such 
     as A* or IDA*, is then used for finding the optimal 
     (shortest) path. In this paper we analyze the search 
     behavior of both A* and IDA* using different grid 
     representations, providing various new insights via 
     analytical and empirical results. 

                                                                        Figure 1: Different grid representations 
1 Introduction 
Commercial games are a multi-billion-dollar industry and 
still growing. In the past better graphics have been one of   depth of the solution. On the other hand, the search com•
the main driving forces of sales; however, this is no longer  plexity of IDA* is where b is the effective branching 
true and good graphics alone is not sufficient to fuel sales. factor (in this analyses we exclude the effect of the heuristic 
Instead consumers are increasingly looking for a more real•   estimate). The choice of a grid representation affects not only 
istic gaming experience. For many type of games, especially   the branching factor b, but also the solution depth D. This 
real-time-strategy (RTS) and role-playing games (RPG), real•  poses the question: which grid representation is the most ef•
istic real-time pathfinding is one of the fundamental hurdles ficient? 
to overcome. In many state-of-the-art games a grid is typi•     As for the branching factor, there is no need to explore 
cally superimposed over the map and an algorithm such as      again the cell that the search just departed from, thus the ef•
A* or IDA* is used to find a path in the abstract grid space. fective branching factor of IDA* is at least one less than the 
  In this paper we compare four different grid topologies for number of adjacent cells. However, for hexes, texes and oc-
abstraction: tiles, octiles, hexes, and texes. Tiles are squares tiles we can further reduce the branching factor by observing 
where movement is restricted to the four cardinal compass     that none of the neighbors shared with the previously visited 
directions (N, E, S, W). Octiles are also squares but allow ad• cell need to he expanded. For example, in Figure 1 the shaded 
ditional diagonal moves (NE, SE, SW, NW). A hex grid con•     cells need not be expanded at node curr given that it was last 
sists of hexagons with six degrees of movement. One prob•     entered via node last. Intuitively, because of unit-cost terrain, 
lem with a hex grid is that it cannot be implemented as effec• the cost of reaching these neighboring cells from curr is nec•
tively as a square-based grid (an important consideration in  essarily greater than if they were instead visited directly from 
computer games). Thus we introduce texes, a square-based      last. The effective branching factor of hexes and texes is thus 
representation of a hexagonal grid. The four different grid   only 3, same as for tiles, whereas for octiles the asymptotic 
structures are depicted in Figure 1.                          branching factor is 4.2 (3 for horizontal/vertical moves and 
                                                              5 for diagonal movcs)[l]. Surprisingly, this observation has 
2 Analytical Comparison                                       been overlooked in previous studies. 
In this section we analyse the search complexity of IDA* for    As for the search depth D, it can be mathematically shown 
each of the different grid topologies discussed above. In our that given the same distance from a start to a goal, if a tile grid 
analysis we assume unit-cost edge weights (as is customary).  searches to a depth D then a hex grid searches only to a depth 
  The asymptotic search complexity of A* on a grid is         0.81D and an octile grid to a depth The analytical 

0(D2) independent of grid representation, where D is the      result is summarized in Table 1. 


  POSTER PAPERS                                                                                                      1511                 Table 1: Summary of Grids                                Table 2: Summary of A* Experiments 
   Grid    Adj.    Branch.  Average       Complexity 
   Type   Nodes    Factor    Depth      A* IDA* 
   Hex      6        3       0.8 ID 

   Tex      6        3       0.8ID    0{D2) 0(2.43D) 
  Octile     8      4.2      0.7ID    0(D2) 0(2.77D) 
   Tile     4        3       1.00D             O(3.00D) 
                                                              categories that octile grids expand fewer nodes on average 
                                                              than the alternative grid structures. 
3 Testing Framework                                             Identical experiments were conducted for IDA*. Because 
                                                              of its exponential growth rate, normal IDA* performed poorly 
The above analytical study gives us a good idea of the merits on the larger maps, often unable to find a path even after 
of the different grid representations, at least when used with expanding millions of nodes. Instead we used a memory-
IDA*. However, for A* it does not provide much insight.       enhanced variant of IDA* for our evaluation (a simplified ver•
An empirical study of these algorithms is thus important, es• sion of the transposition table enhancement described in [2]). 
pecially given that no comparison study exists on their be•   The result is summarized in Table 3. When comparing this 
havior when pathfinding on a map. A problem with previous     result with the A* result we notice that IDA* expands many 
work is that different studies use disparate testing environ• more nodes on average (because it needs to revisit nodes on 
ments making individual results hard to compare. Also, the    each iteration). However, despite expanding more nodes, the 
"random" maps typically used are not necessarily representa•  overall run-time for IDA* was considerably less than A*\s 
tive of maps one would encounter in practice.                 for both empty and random maps (less work per-node). Also 
  To address both of the above mentioned problems we de•      of interest is that tiles clearly work better than the other grid 
veloped a generic framework for testing state-space based     topologies when used in conjunction with enhanced IDA*. 
search algorithms. This framework consists of three lay•      The data also shows a big performance difference between 
ers, allowing implementation of each layer independently of   random and game maps. On game maps IDA* searches an 
the others. The bottom layer abstracts away the details of    order of magnitude more nodes than on random maps, result•
the grid topology, the middle layer consists of a state-space- ing in A* being the preferred algorithm for these game maps 
based search algorithm, whereas the top layer provides facil• (even when considering run-time). 
ities for automatic testing, collection of statistics, and tools 
for importing game maps. The plan is to make this software 
public to encourage more realistic and uniform test-beds for 
pathfinding research. 
  In this framework, we implemented both A* and IDA* in 
the middle-layer, and tile-, octile-, and tex-representations of 
maps in the bottom layer (there is no need to include hex grids 
because tex grids have the same search properties while al•
lowing a more efficient implementation).                      5 Conclusions 
                                                              Analytical results show that normal IDA* performs best on 
4 Empirical Comparison                                        tex (or hex) grid abstraction. Unfortunately, normal IDA* is 
                                                              impractical for larger maps, including realistic game maps. 
We used the aforementioned test environment to empirically 
                                                              In practice, A* performs best on octile grids and memory-
evaluate A* and IDA* using different grid structures. The 
                                                              enhanced IDA* on tile grids. This result is based on maps 
following map categories were used: obstacle-free maps (J5), 
                                                              typical of computer games in terms of size and level of detail. 
maps with randomly placed obstacles (7?), and maps ex•
                                                              For IDA* and A* we use the fact that only a subset of neigh•
tracted from the popular computer game Baldur's Gate II by 
                                                              boring nodes need to be visited, an often overlooked fact. The 
BioWare (B). For each category 120 maps were used, ranging 
                                                              result also shows that one must be careful when carrying in•
in size from approximately 50 x 50 to 300 x 300. For each 
                                                              sights gained from random maps over to "realistic" maps. 
map 400 randomly chosen start/goal states were searched. 
  The result of the A* experiment is summarized in Table      Acknowledgments 
2. Each entry shows the average number of nodes expanded      This research was supported by grants from NSERC, iCORE, 
over 48,000 searches (400 trials x 120 maps) as well as the   and IRIS. 
standard error. The heuristic used for each grid representation 
is perfect given that no obstacles are present (e.g. Manhattan References 
distance for tiles). We can see that the exact graph repre•
sentation does not make a big difference for A*. However,     [1] P. Yap. Grid-based Pathfinding. Lecture Notes in Artifi•
any improvement is beneficial because multiple units are typ•   cial Intelligence, vol 2338,44-55, 2002. 
ically traversing a game world simultaneously, each requiring [2] A. Reinefeld and T. Marsland Enhanced Iterative-
a path be found in a matter of milliseconds. For example, we    Deepening Search. IEEE Transactions on Pattern Analysis 
can state with a high statistical significance for all three map and Machine Intelligence (PAMI), vol 16, 701-710, 1994. 


  1512                                                                                                  POSTER PAPERS 