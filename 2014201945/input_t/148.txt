       A New Look at the Semantics and Optimization Methods of CP-Networks 

                        Ronen I. Brafman                                   Yannis Dimopoulos 
                   Dept. of Computer Science                           Dept. of Computer Science 
                      Ben-Gurion University                                University of Cyprus 
                     Beer-Sheva 84105, Israel                             Nicosia 1678, Cyprus 
                  brafman@cs.bgu.ac.il                                 yannis@cs.ucy.ac.cy 


                        Abstract                               of the variable associated with this node depends on the vari•
                                                               ables associated with the parents of this node. 
     Preference elicitation is a serious bottleneck in 
                                                                 Cyclic CP-nets emerge naturally when there is a set of in•
     many decision support applications and agent spec•
                                                               terdependent variables, none of which is more important than 
     ification tasks. CP-nets were designed to make the 
                                                               the other. For example, [Domshlak et al, 2001 ] note that such 
     preference elicitation process simpler and more in•
                                                               dependency can emerge naturally among web-page compo•
     tuitive for lay users by graphically structuring a 
                                                               nents in their web-personalization tool. Cyclic CP-network 
     set of Ceteris Paribus (CP) preference statements -
                                                               raise some conceptual and computational problems to which 
     preference statements most people find natural and 
                                                               we still do not have satisfactory answers. Even worse, accord•
     intuitive. In various contexts, CP-nets with an un•
                                                               ing to the standard semantics of CP-nets, most cyclic CP-nets 
     derlying cyclic structure emerge naturally. Often, 
                                                               are inconsistent. For example, in [Domshlak and Brafman, 
     they are inconsistent according to the current se•
                                                               2002], it was shown that the preference ordering induced by 
     mantics, and the user is required to revise them. In 
                                                               any simple cycle (i.e, a cycle that does not contain smaller cy•
     this paper we show how optimization queries can 
                                                               cles) with more than two nodes is inconsistent. That is, there 
     be meaningfully answered in many "inconsistent" 
                                                               will be at least two outcomes, o\ and o2, such that one can 
     networks without troubling the user with requests 
                                                               show that o1 is strictly preferred to o  and o  is strictly pre•
     for revisions. We also describe a method for focus•                                           2      2
                                                               ferred to o\. In addition, whereas for acyclic networks one 
     ing users' revision process when revisions are truly 
                                                               can determine the most preferred outcome in linear time even 
     needed. In the process, we provide a formal seman•
                                                               in the face of evidential constraints (i.e., constraints that fix 
     tics that justifies our approach and we introduce 
                                                               the value of certain variables), no corresponding algorithm is 
     new techniques for computing optimal outcomes. 
                                                               known for networks that contain cycles. 
                                                                 The fact that many cyclic networks arc inconsistent raises 
1 Introduction                                                 a serious practical concern. When a user specifies an incon•
Ceteris Paribus (CP) preference statements are among the       sistent cyclic network, we must ask him to revise his network. 
most natural and most intuitive preference statements that     To do so, we need to provide information that will help him 
people make. Thus, it is not surprising that they have drawn   obtain a consistent network. In this paper we make two prac•
the attention of many researchers in philosophy and AI (e.g.,  tical contributions aimed at improving this process. First, we 
[Doyle and Wellman, 1994; Hanson, 1996]). CP statements        show that various optimization queries can be answered nat•
indicate a preference for one value over another in the con•   urally even when the network is "inconsistent" according to 
text of a fixed background. For example, the statement "I      the standard semantics. In such cases, no additional burden 
prefer an apple pie to a chocolate cake as a dessert, ceteris  is placed on the user. Second, when revision is required, we 
paribus" expresses the fact that given two identical contexts  show how the notion of a partial model, studied in the area of 
- i.e., meals - that differ only in their dessert, the one contain• logic programming, can be used to identify those aspects of a 
ing an apple pie is preferred to the one containing a chocolate model that require revision. 
cake. Finer distinctions can be made using conditional CP        While pursuing our more practical goals we make a num•
statements. For example: "I prefer red wine over white wine    ber of technical and semantic contributions. First, we pro•
if the main course is beef." In this case, the preference for  vide a more flexible semantics for CP-nets that is identical 
red wine to white wine is restricted to comparisons between    with the current semantics on those networks the latter con•
identical meals in which the main course is beef.              siders consistent. This semantics justifies our approach for 
   CP-nets iBoutilier et al, 1999] are a graphical tool for rep• generating optimal outcomes given networks that are incon•
resenting and for structuring a set of CP statements. A CP-    sistent under the standard semantics. Second, we show how 
network consists of a graph describing the preferential depen• to answer optimization queries using various approaches that 
dency relationship between different domain variables. Each    include reduction to SAT, and reduction to logic programs. 
node is annotated by a conditional preference table (CPT) that This extends current methods which are restricted to acyclic 
describes how the user's preference over the different values  nets, and helps us define the notion of a partial outcome. 


QUALITATIVE REASONING                                                                                                1033    The paper is structured as follows: In Section 2 we pro•    any assignment z In our PC example, the user may 
 vide the necessary background on ceteris paribus preference   assess operating system to be independent of other features 
 statements and CP-nets. In Sections 3 and 4 we take a closer  given processor type. That is, it always prefers LINUX given 
 look at the notion of consistency in CP-nets and the problem  an AMD processor and Windows98 given an Intel processor 
 that cyclic networks introduce, we suggest a natural defini•  (e.g., because he believes Windows98 is optimized for the 
tion of a preferred model as one that cannot be improved, and  Intel processor, whereas LINUX is otherwise better). Condi•
explain how the problem of the existence of such models can    tional preferential independence is a standard notion in multi-
be reduced into a CSP problem. In Section 5 we discuss an      attribute utility theory [Keeney and Raiffa, 1976]. 
alternative translation into nonmonotonic logic programs and   2.2 CP-nets 
some of its implications, and in Section 6 we conclude. The 
full version of this paper is available from the authors' web  CP-nets were introduced in [Boutilier et al., 1999J as a tool 
site. It contains proofs, an optimization method based on cut• for compactly and intuitively representing qualitative pref•
set conditioning, a discussion of constrained optimization and erence relations. This graphical model exploits conditional 
other inference tasks, and a comparison with logic programs    preferential independence in structuring a decision maker's 
with ordered disjunction fBrewka et ai, 2002].1                preferences under ceteris paribus (all else being equal) se•
                                                               mantics. CP-net is the first model based on the notions of 
2 CP-Nets                                                      purely qualitative preferential independence, and bears a sur•
                                                               face similarity to Bayesian nets [Pearl, 1988]. However, the 
We start with a review of ceteris paribus preference state•    nature of the relationship between nodes within a CP-net is 
ments and preferential independence, followed by the defini•   generally quite weak compared with the probabilistic rela•
tion of CP-nets.                                               tions in Bayes nets. 

                                                                 During preference elicitation, for each variable Ar in the 
2.1 Ceteris Paribus Preference Statements                      variable set V, the decision maker is asked to specify a set of 
A preference relation is a total pre-order (a ranking) over a  parent variables (Ar) that can affect her preferences over 
set of outcomes. Given two outcomes we write                   the values of A'. That is, given a particular value assignment 
if is at least as preferred as and we write if o is            to (A"), the decision maker should be able to determine a 
strictly more preferred than                                   preference order over the domain of X (denoted as P(A")), 
   The types of outcomes we are concerned with consist of      all other things being equal. 
possible assignments to some set of variables. More formally,    The above information is used to create the graph of the 
we assume some given set of variables                          CP-net in which each node X has as its immediate 
with corresponding domains . The set of                        predecessors. Given this structural information, the decision 
possible outcomes is then For exam•                            maker is asked to explicitly specify her preferences over the 
ple, in the context of the problem of configuring a personal   values of X for each instantiation of (A"). This conditional 
computer (PC), the variables may be processor type, screen 
size, operating system etc., where screen size has the domain 
                  operating system has the domain 
Windows98, WindowsXP , etc. Each assignment to the set of 
variables specifies an outcome - a particular PC configura•
tion. Thus, a preference ordering over these outcomes speci•
fies a ranking over possible PC configurations. 
  The number of possible outcomes is exponential in 
while the set of possible total orders on them is doubly ex•
ponential in Therefore, explicit specification and represen•
tation of a ranking are not realistic. We must find implicit 
means of describing this preference relation. The notion of 
conditional preferential independence plays a key role in such 
representations. Intuitively, X and Y are conditionally pref•
erentially independent given Z (where X, Y,Z are disjoint 
subsets of V) if for every fixed assignment to Z, the ranking 
of X values is independent of the value of Y. Formally, let 
X, Y and Z be a partition of V and let z P(Z). X and Y 
are conditionally preferentially independent given z iff, for 
                 we have that 


X and Y are conditionally preferentially independent given       As an example, consider the network in Figure 1(a), in 
Z if they are conditionally preferentially independent given   which all variables are boolean. This network has three vari•
                                                               ables, A,B, and C. The preferences over A and B are un•

   1A note on notation. Due to the difficulty of using the logical conditional, whereas the preferences for C's values depend 
negation operator, in drawing packages, we use two alternative on the values of A and B. In Figure 1(b), we see the pref•
notations: instead of and instead of                          erence order induced by this CP-network. For every pair of 


1034                                                                                         QUALITATIVE REASONING                                                                                     Figure 2: A Simple 4-Cycle CP-network. 

                                                                            is obtained from via a single improving flip. Natu•
                                                                         rally, these definitions are with respect to some CP-network, 
                                                                         which we take to be fixed by the appropriate context. 

                                                                         Theorem 1 is valid iff there is an improving flipping 
                                                                         sequence from 

 Figure 1: A CP-net and its corresponding preferential order. An immediate consequence is the following: 

                                                                         Consequence 1 is valid iff there is an improving flip•
 outcomes we have that is valid iff there is a path                      ping sequence from to hut no improving flipping sequence 
 from i in this graph.                                                   from 

3 The Weak Preference Semantics                                          Another interesting theorem relates the standard, stronger se•
                                                                         mantics, and our semantics. 
 According to the standard semantics, the preferences ex•
 pressed in the CPT of a CP-net are strict preferences. We               Theorem 2 Let G be a CP-network that is consistent accord•
suggest viewing them as weak preferences using pre-orders                ing to the standard semantics. Then, G satisfies 
 instead of strict orders. As we show, this leads to a semantics         cording to our semantics iff G satisfies according to 
that is only slightly weaker than the standard semantics. In             the standard semantics. 
fact, it leads to identical orderings on CP-nets that are con•
sistent according to the standard semantics. More formally,                 This theorem shows that our semantics is a direct extension 
                                                                         of the standard semantics. To understand it better, we will 
                                                                         soon take a look at networks that are inconsistent according 
                                                                         to the standard semantics. 
                                                                            Finally, we define the notion of optimality in the context of 
                                                                         a CP-network. There are two possible definitions: An out•
                                                                         come is said to be strongly optimal iff there is no other 
                                                                         outcome such that holds. An outcome o is said 
                                                                         to be weakly optimal iff there is no other outcome o' such that 
                                                                                  holds. Thus, in the first case, o is either strictly bet•
                                                                         ter than any other outcome or incomparable. In the second 
                                                                         case, there may be other outcomes that are as preferred as o, 
                                                                         but no outcome that is strictly preferred over o. In networks 
                                                                         that are consistent according to the standard semantics, there 
                                                                         is a unique best outcome that is strictly better than any other 
valid, no strict preference would be valid. This is because the          outcome. However, when we move beyond this class of net•
preference relation in which all outcomes are equally desir•             works, we can have more than one optimal outcome, and it 
able is a model for every CP-network according to the above              can be either strongly or weakly optimal. The latter class is 
semantics. Thus, all CP-nets are "consistent" according to               computationally more challenging to identify, and so we con•
our semantics.                                                           centrate on strongly optimal outcomes. 
   The above semantics can be related to a more syntactic no•
tion of a proof of preference, or a flipping sequence [Boutilier         4 Optimality in Cyclic Networks 
et al., 1999]. Let o be an outcome, and suppose that o as•
signs to X some value that the user ranks lower than in                  The semantics of CP-nets allows for cycles. But only the 
parental context c satisfied in o. Then, we can improve o by             consistency of acyclic CP-nets is guaranteed according to the 
flipping the value of X from to An improving flipping                    standard semantics [Boutilier et al, 1999]. Moreover, such 
sequence is a sequence of outcomes such that                             networks have a unique optimal outcome. This remains true 
                                                                         even if we introduce evidential constraints, i.e., constraints 
     In the standard semantics we have                                   that fix the value of some variables. 


QUALITATIVE REASONING                                                                                                                  1035    Cyclic networks often induce an inconsistent (i.e., cyclic) 
 preference order according to the standard semantics. For ex•
 ample, consider the network in Figure 2 which contains a cy•
 cle of size 4, called a simple cycle in [Domshlak and Braf-
 man, 2002]. The web-personalization applications described 
 in [Domshlak et al., 2001] naturally gives rise to such cyclic 
 structures. There, variables correspond to articles, ads, and 
 other content element in an online newspaper. The value of 
 each variable indicates whether it is currently displayed or 
 not. The CP-net captures the preferences of the editor regard•
 ing the presentation of different elements on the user's cur•
 rent screen. These preferences together with user-generated 
 content constraints lead to a personalized view that takes into 
 account the user's interests and the editor's expertise on pre•
ferred combinations of news items. For example, in the CP-
net in Figure 2, A could be a review of a new Toyota 4x4 
vehicle, B a test-drive of a new BMW series 7 car, C a story 
about a recent Man. United match, and D a story about Man. 
City's recent success. Suppose that Man. United is sponsored 
by Toyota, and Man. City by BMW, and the editor would pre•
fer not to display stories about competing teams and/or com•
panies in the same screen. This is expressed in the CP-net in 
Figure 2 by stipulating that if A is present then B should not, 
if A is not present then B should be present, etc. 
   In [Domshlak and Brafman, 2002] it is shown that such a          Figure 3: Outcome Space for the 4-Cycle Network. 
network is not consistent, i.e., there is no total order of the set 
of outcomes that satisfies all the preferences embodied in this 
network. It is easy to see why this is so when we examine 
Figure 3 which describes the relationships among different 
possible outcomes. The nodes in that figure correspond to 
outcomes and the edges correspond to legal improving (sin•
gle) flips. For example, consider the outcome a2b2c\d2 in the 
lower left-hand side of Figure 3. Given that A is assigned a2, 
we can see from the B's CPT that 61 is a more preferred value 
for B. Thus, there is an edge from a2b2cld2 to a2blcld2. 
                                                                 Figure 4: Ordered Outcome Classes for 4-Cycle Network 
   We can see that Figure 3 contains cycles, making it impos•
sible to totally order its elements consistently. However, it 
is also apparent that it contains two elements, alb2cld2 and   consist of the variables in the CP-network. hor every entry 
a2blc2dl that, in some sense, can be viewed as optimal ele•    in the CP Table of every variable we add the constraint 
ments, as well as two elements, alblcldl and a2b2c2d2, that            , where , denotes the context (i.e., the assignment to 
in some sense can be viewed as the worst elements.             the parents of and is the preferred value of 
   Indeed, according to our semantics, this network induces      As an example, for the CP-network in Figure 1 we obtain 
three classes of outcomes described in Figure 4. The out•      the following propositional formula. 
comes within each class are either equally preferred or in•
comparable, and there is a strict preference between outcomes 
belonging to different classes. An important consequence of    In the case of Figure 2, we get the formula 
this is that there are clear candidates for the set of optimal 
outcomes: the two outcomes in the top class. 
   We can see that our semantics is more lenient, allowing for 
specifications that, in some sense, are cyclic. If the cycle con•
tains all outcomes, then all outcomes are equally preferred.   Lemma 1 o is a strongly optimal outcome for CP-net iff it 
This specification is not informative, and the user needs to   satisfies the above CSP 
be informed of this fact. However, the example above shows 
that the cycle may contain some, but not all of the outcomes.    The above algorithm does not work when we have weakly 
Whereas the standard semantics will dismiss this CP-network    optimal outcomes, i.e., when we have a set of outcomes that 
as inconsistent, our semantics is more tolerant, and can use   are equally preferred, but cannot be strictly improved. Fig•
this CP-net to determine an optimal outcome.                   ures 5 and 6 show an example of a network giving rise to 
  We now turn to the computation of an optimal outcome         such a case and the relation over the outcome space it induces. 
via a simple reduction to a CSP problem (or a SAT problem      From now on, our treatment centers on strongly optimal out•
when the variables are binary). The variables in our reduction comes only, to which we simply refer as optimal outcomes. 


1036                                                                                          QUALITATIVE REASONING                                                                NP-complete, but many problems can be solved efficiently in 
                                                               practice by state-of-the art systems such as smodels iSurja-
                                                               nen and Niemela, 2001] and DLV iDell'Armi etal, 2001]. 
                                                                 An alternative semantics for normal logic programs is the 
                                                               partial stable model semantics [Sacca and Zaniolo, 1990]. 
                                                               This is a three-valued semantics, where each atom may as•
                                                               sume the values: true, false or undefined. Given a three-
                                                               valued assignment S of Atoms(P), we say that S is a partial 
                                                               model of P if for each \ every rule with head A 
                                                               contains at least one literal B in its body, such that 
  Figure 5: A Network Without a Strongly Optimal Outcome       The reduct Ps of P w.r.t. a partial model S is defined as the 
                                                               program that is obtained from P after deleting (i) every rule 
                                                               of P that has a negated atom not with (ii) every 
      [a1b1dd1    a1b1c2d1    a1b2c1d1   a1b2c2d1 I            rule where an undefined atom occurs (iii) every negated atom 
       a2b1c1d1   a2b1c2d1    a2b2c1d1   a2b2c2d1 |            from the bodv of the remaining rules. A partial model S such 
                                                               that is called a founded model of P. A maxi•
                             t                                 mal founded model is called partial stable model of P. It is 
                                                               not hard to see that every program has a partial stable model. 
      Ia1b1c1d2   a1b1c2d2    a1b2c1d2   a1b2c2d2 
       a2b1c1d2   a2b1c2d2    a2b2c1d2   a2b2c2d2 J 

     Figure 6: Outcome Classes for Network in Figure 5 

   Lemma 1 implies that the problem of finding a single op•
 timal outcome is in NP. When the CP-network is acyclic, an 
 optimal outcome can be found in linear time [Boutilier et a/., 
 19991. Our result indicates a linear time solution for simple-  The intuition behind a founded model is similar to that be•
 cycle nets, too, if the variables are binary, because the result• hind a stable model, except that we are willing to ignore cer•
 ing CSP is an instance of 2-SAT LAspvall et a/., 1979].       tain variables and the rules that they participate in. A partial 
                                                               stable model is one where we try to ignore as few variables 
 5 Logic Programs and Partial Consistency                      (w.r.t. set inclusion) as we can. 
 We start with some background on the semantics of logic       5.2 Translating CP-nets into Logic Programs 
 programs, followed by a reduction of CP-net optimization to   In this section we translate CP-nets into nonmonotonic logic 
 logic programs. Then, using the notion of a partial stable    programs, showing a one-to-one correspondence between the 
 model of a logic program, we can define a corresponding no•   net's optimal outcomes and the stable models of the corre•
 tion for a CP-net that captures those variables for which we  sponding logic program. 
 have some reasonable candidate for an optimal value. 


 or value assignment on the atoms of Atorns(P). We denote 
 by the set of atoms of 5 that are assigned the value true, 
 and S~ the set of atoms that are assigned the value false. The 
                                                               Theorem 3 is a strongly optimal outcome for a CP-net iff 
 reduct P  of a logic program P w.r.t. an assignment S is the 
         s                                                     it is a stable model of its corresponding logic program. 
 logic program obtained from P after deleting (i) every rule 
 of P that has a negated atom with (ii) every                    Note that only the most preferred values of each prefer•
 negated atom from the body of the remaining rules.            ence statement participate in the translation of a CP-network 
   The resulting program does not contain negated atoms, and   into a logic program. Furthermore, the not operator appears 
 is called a definite logic program. Let (P) denote the de•    only in the choice rules set, a feature that seems to indicate 
ductive closure of a definite logic program P, which coin•     a rather weak link between CP-networks and nonmonotonic 
 cides with its minimal model. A stable model LGelfond and     logic programs. However, in the long version of the paper 
Lifschitz, 1988] of a logic program P is an assignment 5,      we show that in the case of CP-networks with constraints, 
 such that A normal logic program may have                     the not operator plays a more central role in the translation 
none, one or several stable models. The problem of decid•      and the relation between CP-networks and logic programs is 
ing whether a normal logic program has a stable model is       stronger than it may appear here. 


QUALITATIVE REASONING                                                                                               1037 