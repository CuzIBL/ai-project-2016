                    Efﬁcient   Distributed    “Hormone”       Graph    Gradients.

                                    Esben  Hallundbæk    Østergaard
                     Maersk  Mc-Kinney   Moller Institute for Production Technology
                                    University of Southern Denmark
                                           esben@mip.sdu.dk


                                                       a)        b)        c)        d)       e)
                    Abstract                                         3                   5

                                                                     2  3      1         4  3
    Several researchers have attempted extract the prin-
                                                                     1  4      2         3  2
    ciples behind hormone gradients found in biologi-
    cal system, and apply them to control physically               3 0  1      3  2    2 2  1
    manifested distributed systems. This paper presents            2 1  2    1 2  1    3 2  1
    an efﬁcient implementation of a graph-based ver-
    sion of hormone gradient mechanisms. The algo-             Figure 1: A few simple graph gradients
    rithm is based on hop-counting of the topological
    distance between any given vertex and the hormone
    emitting vertex, and can deal with dynamic changes width ﬁrst graph traversal algorithm (starting at the gray ver-
    to the topology of the system. Performance of     tex) has been applied to assign a value to each vertex, where
    the described algorithm is documented through a   the value corresponds to the recursion depth. The result is
    number of experiments. The algorithm was de-      that each vertex holds its distance to the gray vertex. In c)
    veloped for use in self-reconﬁgurable robotics, but a similar algorithm is run, where a limit has been imposed
    might very well be useful for many other appli-   on the recursion depth. The value assigned to vertices is the
    cations. The use of the algorithm to provide a    limit minus the recursion depth, resulting in the held value de-
    common  coordinate system for a collection of self- creasing the further we get away from the gray module. This
    reconﬁgurable robot modules is described, that pro- can be regarded as an abstract implementation of a hormone
    vides pose relative to the emitting module for all gradient emitted from the gray vertex. The hormone gradient
    modules affected by the hormone.                  is emitted with a given strength that deﬁnes the depth of the
                                                      recursion (the maximum topological distance) and thus the
                                                      number of affected vertices. The c) approach also allows us
1  Introduction                                       to have several emitting vertices, as shown in d) where two
                                                      vertices are emitting a gradient, one with strength 3, and one
Hormone gradients have a central role in the coordination
                                                      with strength 5. In d) the graph algorithm is designed such
of growth and self-repair in biological multicellular systems.
                                                      that once a vertex has been assigned a value, only higher val-
Several researchers have attempted to use these same mech-
                                                      ues can be assigned to that vertex.
anisms to control physically manifested distributed systems,
                                                        To illustrate how this can be used as a gradient, in e) arrows
by using some abstraction over the perceived functioning of
                                                      point to the edge leading to the vertex with highest value.
biological hormone gradients. This paper presents an efﬁcient
                                                      We see that if we start at any vertex in the graph and follow
implementation of a graph-based version of hormone gradi-
                                                      the arrows, we end up at one of the emitting vertices. Also
ent mechanisms, based on hop-counting and spanning a tree
                                                      we see that the vertex with a higher emission strength has a
over the topology, that can deal with dynamic changes to the
                                                      larger basin of attraction than the vertex with lower emission
topology of the system. The paper will also describe how the
                                                      strength.
algorithm can be used to relay a common coordinate system
for modules in a self-reconﬁgurable robot. Even though the
focus was on self-reconﬁgurable robots during development, 3 Agent-Based Hormone   Gradients
the algorithm is believed to have much wider applicability. The previous section brieﬂy described how traditional graph
                                                      traversal algorithms can produce a loose analogy to biologi-
2  Graph-Based    Hormone    Gradients                cal hormone gradients. However, in a physically distributed
                                                      system we cannot directly use graph traversal algorithms.
As a ﬁrst approximation, simple gradients are fairly easy to This paper presents a distributed algorithm, providing in-
implement. Figure 1 illustration a) shows a graph represent- formation on topological distance in communication net-
ing a system of 11 vertices, with 11 edges. In b) a simple works with dynamic changing topologies. Consider an agent                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢ Source
                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


for each vertex in the graph, where agents asynchronously ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢


                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢


                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢
                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


and without any global knowledge, efﬁciently realizes such ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢


                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢
                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


graph hormone gradient information.                     ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢


                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢


                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢


                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢


                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢
                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


3.1  Related Work                                       ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢


                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢
                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢                 Edge


                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢
                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


Hormone gradients have been studied by biologists and have ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢               removed


                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢
                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 




been found to be a key player in coordinating and controlling ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢
                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢


                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢
                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


growth in plants and animals. Mainhardt and Gierers’ [Mein- ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢


                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢


                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢
                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


hardt, 1993] [Meinhardt and Gierer, 2000] work on how hor- ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢


                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 


                                                        ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢
                                                         ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ ¡ 
mone gradients control the forming of the tentacles of the ¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢¡¢
Hydra animal describes how hormones are responsible for al-
most all aspects of shaping the animals body. Other relevant
work includes Nishimura’s [Nishimura and Sasai, 2004] work Figure 2: Illustration of a case where continuous broadcast-
on chemo-taxis on cells in solutions with chemical gradients. style graph gradients is problematic. Assume a gradient
  Several researchers have extracted and abstracted these source in the upper part of the illustrated graph, emitting
mechanisms for use in the multi-robot domain. Amorphous a decrementing gradient (type c) from ﬁgure 1) with high
computing [Abelson et al., 2000][Nagpal, 1999][Nagpal et enough intensity to cover the graph. When the edge is re-
al., 2003] is one example of research relying heavily on sim- moved, we would like gradient information to disappear from
ulated hormone gradients, and many more examples exist, the amputated part of the graph. However, depending on
including work on cell division in artiﬁcial evolution [Hotz, the exact implementation of the broadcast-style approach, the
2004], and in self-reconﬁgurable robotics, such as Bojinov, gradient hop-count number might instead drift (slowly) to-
Casal and Hogg’s scents [Bojinov et al., 2000].       wards inﬁnity or zero. The problem is, that when one vertex
  All the implementations of digital hormone gradients in has timed out, it might receive an new gradient message from
the distributed robotics literature rely on continuous broad- one of its neighbors, keeping the gradient “alive”.
casting of a hop-count number. When an agent receives a
message with a hop count number, it remembers this number 3. In the event of changes to the topology of the network,
and starts emitting a message with an incremented or decre- the algorithm creates a new DAG using an iterative
mented hop count number, at regular intervals. A timer keeps method.
track on when the last message matching the stored hop count
number was received. If too long time has expired, the stored From a functional point of view, the algorithm presented in
hop count number is erased, and the agents stop sending mes- this paper is an improved version of the algorithm presented
sages.                                                by Gafni and Bersekas, with two additional features;
  As a ﬁrst approximation, this continuous broadcasting ap- 4. From a given vertex, the length of any directed path to
proach works ﬁne. However, there are two main problems    the destination is equal to the shortest undirected path to
with this approach:                                       the destination.
  • Frequent emission of messages, even if there is no  5. Each vertex knows its topological distance from the des-
    change to the topology of the agents.                 tination.
  • Continuous broadcast style approaches can fail to deal 4.1 Deﬁnitions
    adequately with dramatic changes to the topology.
                                                      The algorithm described below works on a graph, to create a
  The ﬁrst point has to do with efﬁciency in terms of power loose analogy to chemical/hormone gradients. The algorithm
consumption and processing power. The second point, illus- is completely distributed, and is able to deal with frequently
trated in ﬁgure 2, is more serious.                   changing topology, while at the same time using very little
  For these two reasons, it is desirable to develop a better communication. Consider an agent for each vertex v in the
algorithm.                                            graph G = (V, E). Agents have a number of ports, through
                                                      which they can communicate to other agents. The algorithm
4  Features  of the Algorithm                         uses two features per agent. Agents can emit a hormone with


The algorithm described in this paper is an extension of E. strength s and sense the intensity i of the hormone. Both s
                                                                £
Gafni and D. Bertsekas’ work described in the paper “Dis- and i are in , the set of natural numbers. We require agents
tributed Algorithms for Generating Loopfree Routes in Net- to know which of their ports are connected to other agents,
works with Frequently Changing Topology” [Gafni and Bert- and which are not. Given this, a digital hormone gradient can
sekas, 1981]. Their algorithm has a number of properties that be deﬁned as a four-tuple, {G, I, S, P }, where:
makes it interesting for the purpose of this paper:     • G  = (V, E) is a graph, where vertices are elements of
 1. The algorithm is distributed and works on unknown     the conﬁguration, and edges are physical connections
    communication topologies.                             between the elements.
 2. Their algorithm spans a directed acyclic graph (DAG) • I : V →  £ is the hormone intensity (concentration)
    over the network topology, where all directed paths lead mapping, so that i = I(v) is the hormone intensity for
    to the destination.                                   vertex v.  • S : V → £ is the hormone emission strength mapping,  —disconnectEvent(n)—
    where s = S(v) is the strength s with which vertex v ∈ if n = f then
    V emits the hormone.                                    f := −1;


                                                         end
             £
  • P : (V ×   ) →  ({} S V ) is the port function. The —updateGradient()—
    port function holds information for the state of each of if s > i then
    the agent’s ports, so that P (v, n) is the state of the agent i := s; f := −1;
    for vertex v’s n’th port. The symbol  is used to specify foreach n ∈ {0..j − 1} do
    a port that is not connected, such that ∀n ∈ £ : ∀v ∈      m[n] := P ROP AGAT E;
    V : ∀v0 ∈ P (v, n), {v, v0} ∈ E ⇔ P (v, n) ∈ V          end
                                            .            else if s < i ∧ f = −1 then
                                                            foreach n ∈ {0..j − 1} do
  The four-tuple {G, I, S, P } describes the global state of   if pn 6=  then
the hormone gradient, but we are aiming at a distributed           sendDeleteMessage(n,i-1);
algorithm with only local information. For any given ver-      end
tex v ∈ V , the local gradient state information available is  m[n] := NONE;
i = I(v), s = S(v) and for each of the j ports, pn = P (v, n) end
where 0 ≤ n <  j. Besides this information, the algorithm   i := 0;
requires agents to remember their parent in the spanning tree else if t > 0 then
                                                 £          t   t
−1 ≤ f < j      −1                           t ∈              := − 1;
           (using   for no parent), a timer/counter         if t = 0 then
and an array for storing information on which ports to send    foreach n ∈ {0..j − 1} do
messages to, m[n] ∈ {NONE, P ROP AGAT  E}.                         if n 6= f then
  The algorithm basically works by maintaining local infor-           m[n] := P ROP AGAT E;
mation on the spanning tree, such that the variable f always       end
                                                               end
points to the port from which the gradient is ﬂowing. The   end
timer/counter is used to adjust the relative speeds of propa- else
gating gradient and deleting the gradient. Without this ad- foreach n ∈ {0..j − 1} do
justment continuous propagation and deletion of the gradient   if pn 6=  ∧ m[n] = P ROP AGAT E ∧ i > 1 then
in local cyclic areas of the graph might arise, causing much       sendPropagateMessage(n,i-1); t := 0;
communication and slow hormone deletion. However, this         end
adjustment introduces a parameter that is the number of time   m[n] := NONE;
                                                            end
steps to delay propagate messages when spreading the gradi- end
ent. Lower values cause the algorithm to be faster but more
                                                         —propagateMessageRecievedEvent(n 0, i0)—
unstable.                                                   0
                                                         if i > i then
                                                                 0      0
  The algorithm for each agent, implementing the desired    i := i ; f := n ; t := 3;// This constant (3) deﬁnes the
graph-based hormone gradient behavior, is given below. Note delay before propagating the gradient, to allow delete
that neither global communication nor synchronization be-   messages to “catch up”.
                                                               0
tween agents is assumed.                                 else if i < i − 1 then
                                                                0
  The —initialize— function resets the variables of the     m[n ] := P ROP AGAT E;
agent. —emitGradeint—  is used to set the hormone emis-  end
sion strength of the agent. Setting to zero clears the gradient. —deleteMessageRecievedEvent(n 0, i0)—
                                                            0
—updateGradient—   holds the central functionality such as if i ≥ i then
sending messages, and should be called at regular time inter- f := −1;
                                                         else
vals. The frequency at which it is called determines the hor-   0
mone propagation speed in the system. The four event func-  m[n ] := P ROP AGAT E;
                                                         end
tions —connectEvent—,  —disconnectEvent—,  —prop-
agateMessageRecievedEvent—  and —deleteMessageRe-
cievedEvent— are very light-weight and can be called in 4.2 Tests of the Algorithm
some interrupt routine whenever the corresponding event is
                                                      The algorithm was implemented and tested on graphs with
detected.
                                                      varying sizes and numbers of loops, shown in ﬁgure 3. To
   —initialize()—                                     test the robustness of the algorithm, the different activation
   i := 0; s := 0; f := 0; t := 0;
                                                      schemes described in [Butler et al., 2002], D0,D1 and D∞,
   foreach n ∈ {0..j − 1} do
                                                      were used for the agents. In D0, agents are activated in a
      m[n] := NONE;
   end                                                ﬁxed order each time step, in D1 the agents activation order
                                                      is permuted for each time step, and in D∞ a random agent
   —emitGradient(s 0)—
        0                                             is picked and activated n times each time step, where n is
   s := s ;                                           the number of agents. Figure 4 shows the number of mes-
   —connectEvent(n)—                                  sages passed as a function of the number of modules for three
   m[n] := P ROP AGAT E;                              different graph types, using the D∞ activation scheme. The    String graph Single cycle graph Fully connected grid         Scalability of the hormone gradient algorithm for 100 runs
                                                            3000

                                                            2500       Single cycle graph
                                                                      Fully connected grid
                                                            2000

                                                            1500
Figure 3: The three graph types used to test performance of
the distributed hormone algorithm. The gray vertex is the   1000


source of the gradient.                                   Total  number of messages
                                                            500

                                                             0
data shows that the algorithm has good performance, in that   0    100  200  300  400  500  600  700  800
the number of messages passed is linearly proportional to the          Number of vertices (agents)
                                                              Hormone gradient spreading time for each of the three graph types
number of edges in the graphs, and that the number of time  3500
steps used to propagate the hormone is proportional to the
                                                                      String graph
                                                            3000
diameter of the graph.                                            Single−cycle graph
                                                                  Fully connected grid
  A different set of experiments were performed for counting  2500
the number of messages used to remove the gradient again,
by setting the emission strength of the emitting agent to zero.  2000

These results are shown in ﬁgure 5. The results show that the  1500
number of messages generated for removing a hormone is
linearly proportional to the number of involved graph edges.  1000
                                                          Time−steps  to covered graph
Notice that removing the hormone is faster than covering the  500
graph, due to the delay on propagating the gradient.
                                                             0
                                                              0    100  200  300  400  500  600  700  800
5  Pose  Hormone    Gradients                                          Number of vertices (agents)

The previous section described the basic graph hormone gra- Figure 4: Top: Message count for covering a graph with the
dient algorithm. This section describes how the algorithm hormone gradient, for varying number of vertices. Results for
has been used for controlling two self-reconﬁgurable robot the string graph type is not shown, since they turned out to be
systems, shown in ﬁgure 6. Self-reconﬁgurable robot control the same as the results for the single-cycle graph. The vari-
is a good application test bed for this kind of hormone gra- ance is caused by using the D∞ activation scheme. Bottom:
dient algorithms, because of the constantly changing topol- The number of time steps it takes to fully cover the graph for
ogy in such a robot, and because of similarities between self- each of the three graph types and for varying graph sizes.


reconﬁgurable robots and multi-cellular organisms.
                                                                    £

5.1  Common   Pose for Self-Reconﬁgurable Robot         • S : V →  (  ×    ) is the hormone emission mapping,
     Modules                                              where s = S(v), s = hsi, spi is the emission strength
                                                          (si) and the emitted pose (sp) for vertex v.

The distributed hormone gradient algorithm described above         £
can be expanded slightly to be used for propagating pose • P : (V ×  ) → ({} S(V ×   )) is the port function.
(position and orientation) relative to the emitting vertex in The port function holds information for the state of each
a self-reconﬁgurable robot. Basically, the expanded algo- of agent’s ports, so that P (v, n) is the state of vertex v’s
                                                          n’th port. The symbol  is used to specify a port that is
rithm uses feed-forward kinematics in the generated directed                        £
                                                          not connected, such that ∀n ∈ : ∀v ∈ V : ∀hv0, p0i ∈
acyclic graph to compute the relative pose to the emitting ver-        0                           0
tex. To realize this, it is a requirement that the relative pose P (v, n) : {v, v } ∈ E ⇔ P (v, n) ∈ V . Here, p is the
                                                          relative orientation between the two connected elements,
between two connected vertices in the conﬁguration can be                           0
                                                          such that if pv0 is the pose of v and pv is the pose of v,
found. We let the space   be the space of relative poses in a        0
3D vector space.                                          then pv0 × p = pv.
  Then, a relative pose hormone is a four-tuple, {G, I, S, P} For any given module v ∈ V , the local gradient state infor-
where:                                                mation available is i = hin, ipi = I(v), s = hsi, spi = S(v)
                                                      and for each of the modules j connectors, pn = P (v, n) is
  • G =  (V, E) is a graph, where vertices are elements of       0  0
                                                      either  or hv , p i, for 0 ≤ n < j.
    the conﬁguration, and edges are physical connections
                                                        The principle is to do feed-forward kinematics in the di-
    between the elements.


                                                      rected acyclic graph generated by the graph hormone algo-
              £

  • I : V →  (  ×    ) is the hormone intensity (concen- rithm. As a consequence, each module affected by the hor-


    tration) mapping, so that i = I(v), i = hin, ipi, where mone knows its relative position and orientation to the hor-
        £

    in ∈  , ip ∈   is the hormone intensity in and relative mone source. It turns out that by exploiting that each module
    pose ip for vertex v.                             knows its relative position to the source, it is possible to re-                 Removing the hormone from the graph
      4500

      4000
             Single cycle graph
      3500  Fully connected grid

      3000

      2500

      2000


    Number  of messages  1500
      1000                                            Figure 6: Module for two self-reconﬁgurable robot systems.
      500                                             Left: The ATRON system. Right: The M-TRAN System.
       0
        0    100  200  300  400  500  600  700  800
                   Number of vertices
                   Time to remove the hormone
     900

     800       String graph
            Single cycle graph
     700
           Fully connected grid
     600

     500                                                             a)               b)               c)
     400                                              Figure 7: The three test conﬁgurations used in the synthetic
    Time  steps  300                                  tests. Here composed of 32 modules each.
     200

     100

      0                                               864 modules. The three designs differ in the number of loops
       0    100  200  300  400  500  600  700  800    in the topology, where a) has no loops, b) a single loop and c)
                     Number of vertices
                                                      has many loops.

Figure 5: Tests on removing the hormone from the graph by An experiment proceeds as follows:
setting the emission strength of the emitting vertex to zero, af-
                                                        1. A module in one end/corner is set to emit a hormone
ter the hormone has fully propagated. The two graphs show
                                                          gradient with an emission strength of 1000.
the number of messages generated and the time used for the
three graph families and for varying graph sizes. In the top 2. Data is collected on the number of messages used to
graph the string graph results were omitted since they are fully propagate the gradient, and on how many time
identical to the single cycle results. Notice that removing the steps it took.
hormone is faster than propagating the hormone, but pro- 3. Then the emission strength of the emitting module is set
duces more communication and has higher variance. This    to zero.
relationship can be adjusted by changing the propagation de-
lay.                                                    4. Similarly to step two, data is collected.
                                                        The algorithm was tested using the D0, D1 and D∞ activa-
                                                      tion schemes. Ten experiments were performed for each com-
move the delay for propagate messages by adding an extra bination of conﬁguration and activation scheme, and mean
condition for the case of receiving a propagate message. The and variance were computed. The correctness of the pose in-
implementation details of the pose hormone gradient algo- formation is easily veriﬁed by placing the emitting module
rithm has been omitted due to space constraints.      such that the emitted pose is identical to the pose in the sim-
                                                      ulator. In this case, the relative pose hormone for any module
6  Implementation    and  Experiments                 should be identical with its pose in the simulator (provided
The pose hormone algorithm has been implemented and   appropriate scaling). Figure 8 shows the average number of
tested on simulations of the ATRON system, ﬁgure 6, left, messages, and ﬁgure 9 the communication load per connec-
and on the M-TRAN system, ﬁgure 6, right.             tor, using the D1 activation scheme. For deleting the hormone
  Both the ATRON and the M-TRAN modules are composed  gradient, the number of messages passed by any connected
of two parts, where the parts are connected by an actuated connector was constant two.
joint. The algorithm is implemented, such that each part of Besides these simple tests, the algorithm was used a lot
the modules corresponds to a vertex in the graph. The fol- during work on control of the two self-reconﬁgurable robot
lowing will describe some experiments done on the pose hor- systems, to produce a common coordinate frame of reference
mone algorithm on the simulated M-TRAN robots.        for locally cooperating groups of modules.
6.1  M-TRAN,   Message  Count                         7   Discussion  & Conclusion
Three test conﬁguration designs are shown in ﬁgure 7. Each This paper describes an efﬁcient algorithm for realizing an
conﬁguration comes in a form with 4, 32, 108, 256, 500 and abstract implementation of hormone gradients. Hormone gra-