 Completing Description Logic Knowledge Bases using Formal Concept Analysis∗

              Franz Baader,1   Bernhard Ganter,1    Barıs¸ Sertkaya,1 and Ulrike Sattler2
                    1TU Dresden, Germany and     2The University of Manchester, UK


                    Abstract                          concerned with a different quality dimension: completeness.
                                                      We provide a basis for formally well-founded techniques and
    We propose an approach for extending both the ter- tools that support the ontology engineer in checking whether
    minological and the assertional part of a Descrip- an ontology contains all the relevant information about the
    tion Logic knowledge base by using information    application domain, and to extend the ontology appropriately
    provided by the knowledge base and by a domain    if this is not the case.
    expert. The use of techniques from Formal Con-      A DL knowledge base (nowadays often called ontology)
    cept Analysis ensures that, on the one hand, the  usually consists of two parts, the terminological part (TBox),
    interaction with the expert is kept to a minimum, which deﬁnes concepts and also states additional constraints
    and, on the other hand, we can show that the ex-  (so-called general concept inclusions, GCIs) on the interpre-
    tended knowledge base is complete in a certain,   tation of these concepts, and the assertional part (ABox),
    well-deﬁned sense.                                which describes individuals and their relationship to each
                                                      other and to concepts. Given an application domain and a DL
1  Introduction                                       knowledge base (KB) describing it, we can ask whether the
                                                      KB contains all the relevant information1 about the domain:
Description Logics (DLs) [Baader et al., 2003] are a suc-
                                                        •
cessful family of logic-based knowledge representation for- Are all the relevant constraints that hold between con-
malisms, which can be used to represent the conceptual    cepts in the domain captured by the TBox?
knowledge of an application domain in a structured and for- • Are all the relevant individuals existing in the domain
mally well-understood way. They are employed in vari-     represented in the ABox?
ous application domains, such as natural language process-
ing, conﬁguration, databases, and bio-medical ontologies, but As an example, consider the OWL ontology for human pro-
their most notable success so far is due to the fact that DLs tein phosphatases that has been described and used in [Wol-
provide the logical underpinning of OWL, the standard ontol- stencroft et al., 2005]. This ontology was developed based
ogy language for the semantic web [Horrocks et al., 2003]. on information from peer-reviewed publications. The human
As a consequence of this standardization, several ontology protein phosphatase family has been well characterised exper-
editors support OWL [Knublauch et al., 2004; Oberle et al., imentally, and detailed knowledge about different classes of
2004; Kalyanpur et al., 2006a], and ontologies written in such proteins is available. This knowledge is represented in
OWL are employed in more and more applications. As the the terminological part of the ontology. Moreover, a large set
size of these ontologies grows, tools that support improving of human phosphatases has been identiﬁed and documented
their quality become more important. The tools available un- by expert biologists. These are described as individuals in the
til now use DL reasoning to detect inconsistencies and to infer assertional part of the ontology. One can now ask whether the
consequences, i.e., implicit knowledge that can be deduced information about protein phosphatases contained in this on-
from the explicitly represented knowledge. There are also tology is complete. Are all the relationships that hold among
promising approaches that allow to pinpoint the reasons for the introduced classes of phosphatases captured by the con-
inconsistencies and for certain consequences, and that help straints in the TBox, or are there relationships that hold in the
the ontology engineer to resolve inconsistencies and to re- domain, but do not follow from the TBox? Are all possible
move unwanted consequences [Schlobach and Cornet, 2003; kinds of human protein phosphatases represented by individ-
Kalyanpur et al., 2006b]. These approaches address the qual- uals in the ABox, or are there phosphatases that have not yet
ity dimension of soundness of an ontology, both within it- been included in the ontology or even not yet been identiﬁed?
self (consistency) and w.r.t. the intended application domain Such questions cannot be answered by an automated tool
(no unwanted consequences). In the present paper, we are alone. Clearly, to check whether a given relationship between

  ∗Supported by DFG (GRK 334/3) and the EU (IST-2005-7603 1The notion of “relevant information” must, of course, be formal-
FET project TONES and NoE 507505 Semantic Mining).    ized appropriately for this problem to be addressed algorithmically.

                                                IJCAI-07
                                                   230concepts—which does not follow from the TBox—holds in ing the exploration process.
the domain, one needs to ask a domain expert, and the same In the next section, we introduce our variant of FCA that
is true for questions regarding the existence of individuals not can deal with partial contexts, and describe an attribute ex-
described in the ABox. The rˆole of the automated tool is to ploration procedure that works with partial contexts. In Sec-
ensure that the expert is asked as few questions as possible; tion 3, we show how a DL knowledge base gives rise to a
in particular, she should not be asked trivial questions, i.e., partial context, deﬁne the notion of a completion of a knowl-
questions that could actually be answered based on the rep- edge base w.r.t. a ﬁxed model, and show that the attribute
resented knowledge. In the above example, answering a non- exploration algorithm developed in the previous section can
trivial question regarding human protein phosphatases may be used to complete a knowledge base. In Section 4 we de-
require the biologist to study the relevant literature, query scribe ongoing and future work. This paper is accompanied
existing protein databases, or even to carry out new exper- by a technical report [Baader et al., 2006] containing more
iments. Thus, the expert may be prompted to acquire new details and in particular full proofs of our results.
biological knowledge.
  Attribute exploration is an approach developed in Formal 2 Exploring Partial Contexts
                      [                   ]
Concept Analysis (FCA) Ganter and Wille, 1999 that can In this section, we extend the classical approach to Formal
be used to acquire knowledge about an application domain Concept Analysis (FCA), as described in detail in [Ganter
by querying an expert. One of the earliest applications of this and Wille, 1999], to the case of individuals (called objects
                     [         ]
approach is described in Wille, 1982 , where the domain is in FCA) that have only a partial description in the sense that,
lattice theory, and the goal of the exploration process is to for some properties (called attributes in FCA), it is not known
ﬁnd, on the one hand, all valid relationships between prop- whether they are satisﬁed by the individual or not. The con-
erties of lattices (like being distributive), and, on the other nection between this approach and the classical approach is
hand, to ﬁnd counterexamples to all the relationships that do explained in [Baader et al., 2006]. In the following, we as-
not hold. To answer a query whether a certain relationship sume that we have a ﬁnite set M of attributes and a (possibly
holds, the lattice theory expert must either conﬁrm the rela- inﬁnite) set of objects.
tionship (by using results from the literature or carrying out a
new proof for this fact), or give a counterexample (again, by Deﬁnition 2.1 A partial object description (pod) is a tuple
either ﬁnding one in the literature or constructing a new one). (A, S) where A, S ⊆ M are such that A ∩ S = ∅.Wecall
                                                                                           A ∪ S =  M
  Although this sounds very similar to what is needed in our such a pod a full object description (fod) if .A
context, we cannot directly use this approach. The main rea- set of pods is called a partial context and a set of fods a full
son is the open-world semantics of description logic knowl- context.
edge bases. Consider an individual i from an ABox A and Intuitively, the pod (A, S) says that the object it describes
a concept C occurring in a TBox T . If we cannot deduce satisﬁes all attributes from A and does not satisfy any attribute
from the TBox T and A that i is an instance of C,thenwe from S. For the attributes not contained in A ∪ S, nothing is
do not assume that i does not belong to C. Instead, we only known w.r.t. this object. A partial context can be extended by
accept this as a consequence if T and A imply that i is an either adding new pods or by extending existing pods.
         ¬C
instance of . Thus, our knowledge about the relationships                           (A,S)
between individuals and concepts is incomplete: if T and A Deﬁnition 2.2 We say that the pod extends the pod
                                                      (A, S), and write this as (A, S) ≤ (A,S),ifA ⊆ A and
imply neither C(i) nor ¬C(i), then we do not know the re-                                       
                i    C                                S ⊆ S . Similarly, we say that the partial context K extends
lationship between and . In contrast, classical FCA and               K                K≤K
attribute exploration assume that the knowledge about indi- the partial context , and write this as , if every pod
                                                      in K is extended by some pod in K.IfK is a full context and
viduals is complete: the basic datastructure is that of a formal K≤K K                 K    (A, S)
context, i.e., a crosstable between individuals and properties. ,then is called a realizer of .If is a fod
                                                          (A, S) ≤ (A, S)                   (A, S)
A cross says that the property holds, and the absence of a and          , then we also say that   realizes
                                                      (A, S)
cross is interpreted as saying that the property does not hold. .
  There has been some work on how to extend FCA and at- Next, we introduce the notion of an implication between
tribute exploration from complete knowledge to the case of attributes which formalizes the informal notion “relationship
partial knowledge [Obiedkov, 2002; Burmeister and Holzer, between properties” used in the introduction.
2005]. However, this work is based on assumptions that are Deﬁnition 2.3 An implication is of the form L → R where
different from ours. In particular, it assumes that the expert L, R ⊆ M. This implication is refuted by the pod (A, S) if
cannot answer all queries and, as a consequence, the knowl- L ⊆ A and R ∩ S = ∅.Itisrefuted by the partial context
edge obtained after the exploration process may still be in- K if it is refuted by at least one element of K.Thesetof
complete and the relationships between concepts that are pro- implications that are not refuted by a given partial context K
duced in the end fall into two categories: relationships that are is denoted by Imp(K). The set of all fods that do not refute a
valid no matter how the incomplete part of the knowledge is given set of implications L is denoted by Mod(L).
completed, and relationships that are valid only in some com-
                                                                            L         P  ⊆ M
pletions of the incomplete part of the knowledge. In contrast, Forasetofimplications and a set ,theimplica-
                                                                    P              L           L(P )
our intention is to complete the KB, i.e., in the end we want tional closure of with respect to , denoted by ,isthe
                                                                   Q    M
to have complete knowledge about these relationships. What smallest subset of such that
may be incomplete is the description of individuals used dur- • P ⊆ Q,and

                                                IJCAI-07
                                                   231  • L →  R ∈Land  L ⊆ Q imply R ⊆ Q.                    How can we ﬁnd—and let the expert decide—all unde-
AsetP  ⊆ M  is called L-closed if L(P )=P .           cided implications without considering all implications? The
                                                      following proposition motivates why it is sufﬁcient to con-
Deﬁnition 2.4 The implication L → R is said to follow from
                                                      sider implications whose left-hand sides are L-closed.
asetJ  of implications if R ⊆J(L). The set of implica-
tions J is called complete for a set of implications L if every Proposition 2.8 Let L be a set of implications and L → R
implication in L follows from J . It is called sound for L if an implication. Then, L → R follows from L iff L(L) → R
every implication that follows from J is contained in L.Aset follows from L.
             J                                   L
of implications is called a base for a set of implications Concerning right-hand sides, Proposition 2.5 says that the
                             L
if it is both sound and complete for , and no strict subset of largest right-hand side R such that L → R is not refuted
J
  satisﬁes this property.                             by K is R = K(L). Putting these two observations together,
  The following is a trivial fact regarding the connection be- we only need to consider implications of the form L →K(L)
tween partial contexts and the implications they do not refute, where L is L-closed. In order to enumerate all left-hand sides,
but it will turn out to be crucial for our attribute exploration we can thus use the well-known approach from FCA for enu-
algorithm.                                            merating closed sets in the lectic order [Ganter and Wille,
Proposition 2.5 For a given set P ⊆ M and a partial con- 1999].
   K  K(P ):=M    \  {S  | (A, S) ∈K,P  ⊆ A}
text ,                                        is the  Deﬁnition 2.9 Assume that M =  {m1,...,mn}   and ﬁx
largest subset of M such that P →K(P ) is not refuted by K. some linear order m1 <m2 < ···mn on M.Thelectic
                                                           <                       m  ∈  M     A, B ⊆  M
Attribute exploration with partial contexts           order  is deﬁned as follows: for i   and
The classical attribute exploration algorithm of FCA assumes we deﬁne
that there is a domain expert that can answer questions re- A<i B iﬀ mi ∈ B \ A and
garding the validity of implications in the application do-      A ∩{m1,...,mi−1}  = B ∩{m1,...,mi−1}.
main. Accordingly, our approach requires an expert that
can decide whether an implication is refuted in the applica- The order < is the union of the orders <i.
tion domain or not. In contrast to existing work on extend- Obviously, < extends the strict subset order, and thus ∅ is the
ing FCA to the case of partial knowledge [Obiedkov, 2002; smallest and M the largest set w.r.t. <.
Burmeister and Holzer, 2005],wedonot assume that the ex-
                                                                                              L        L
pert has only partial knowledge and thus cannot answer all Proposition 2.10 Given a set of implications and an -
                                                               A   M         L                   A
implication questions.                                closed set      , the next -closed set following in the
                                                                  L((A ∩{m   ,...,m   }) ∪{m  })      j
  To be more precise, we consider the following setting. We lectic order is 1      j−1       j  where  is
                                                                      A<   L((A ∩{m   ,...,m   }) ∪{m  }
are given an initial (possibly empty) partial context K,anini- maximal such that j   1      j−1       j .
tially empty set of implications L, and a full context K that If an implication is added because the expert has stated that
is a realizer of K. The expert answers implication questions it holds in K, then we can extend the current context K by
“L →  R?” w.r.t. the full context K. More precisely, if the closing the ﬁrst component of every pod in K w.r.t. the new
answer is “yes,” then K does not refute L → R.Theim-  set of implications L. In fact, L⊆Imp(K) makes sure that
        L →  R               L
plication      is then added to . Otherwise, the expert the extended context is still realized by K. To allow for this
                       K
extends the current context such that the extended context and possible other ways of extending the partial context, the
      L →  R             K
refutes       and still has as a realizer. Consequently, formulation of the algorithm just says that, in case an implica-
                                   K, K, L
the following invariant will be satisﬁed by :         tion is added, the partial context can also be extended. When-
                 K≤K⊆Mod(L).                          ever an implication is not accepted by the expert, K will be
Our aim is to enrich K and L such that eventually L is not extended to a context that refutes the implication and still has
                                                      K
only sound, but also complete for Imp(K),andK refutes all as a realizer.
other implications (i.e., all the implications refuted by K). As Based on these considerations, our attribute exploration al-
                                                      gorithm for partial contexts is described in Algorithm 1. It
in the classical case, we want to do this by asking as few as             K           M
possible questions to the expert.                     takes a partial context 0 and a set of attributes to be
                                                      explored, and interacts with an expert who has information
                L                        K
Deﬁnition 2.6 Let be a set of implications and a partial about a full context K that realizes K0. It goes through the set
                                         K     L
context. An implication is called undecided w.r.t. and if of implications over M in the lectic order of their left hand
                   L                K
it neither follows from nor is refuted by .Itisdecided sides and, in case they are undecided in the current partial
    K     L                       K     L
w.r.t. and  if it is not undecided w.r.t. and .       context, asks the expert to decide them. In case an implica-
In principle, our attribute exploration algorithm tries to de- tion holds in K, (a less redundant version of) it is added to
cide each undecided implications by either adding it to L or the implication base. Otherwise, the partial context is extend
extending K such that it refutes the implication. If all impli- with a counterexample from K provided by the expert.
cations are decided, then our goal is achieved.         The following theorem states that this algorithm always
Proposition 2.7 Assume that K≤K⊆Mod(L)   and that all terminates, and in which sense it is correct. In Section 4,
implications are decided w.r.t. K and L.ThenL is complete we will brieﬂy remark on its complexity.
for Imp(K) and K refutes all implications not belonging to Theorem 2.11 Let M be a ﬁnite set of attributes, and K and
Imp(K).                                               K0 respectively a full and a partial context over the attributes

                                                IJCAI-07
                                                   232Algorithm 1 Attribute exploration for partial contexts    Name of constructor    Syntax    Semantics
                                                                                              I   I
 1: Input: M = {m1,...,mn}, K0      {attribute set and    negation                 ¬C       Δ  \ C
                                                                                             I    I
               partial context, realized by full context K} conjunction          C  
 D     C  ∩ D
                                                                                             I     I
 2: K := K0                  {initialize partial context} general concept inclusion C  D  C   ⊆ D
   L := ∅             {                          }
 3:                    initial empty set of implications  concept assertion       C(a)      aI ∈ CI
 4: P := ∅             {lectically smallest L-closed set}                                   I  I    I
                                                          role assertion          r(a, b) (a ,b ) ∈ r
 5: while P = M do
 6:  Compute K(P  )
                                                      Table 1: Conjunction, negation, GCIs, and ABox assertions.
 7:  if P = K(P ) then {P →K(P ) is undecided}
 8:    Ask the expert if P →K(P ) is refuted by K
 9:    if no then {P →K(P ) not refuted}              ABox. The semantics of concept descriptions, TBoxes, and
                                                                                                  I I
10:       K := K where K is a partial context such that ABoxes is given in terms of an interpretation I =(Δ , · ),
                                                              I                                  I
            K≤K   ≤ K{optionally extend        K}    where Δ   (the domain) is a non-empty set, and · (the in-
11:       L := L∪{P  →K(P   ) \ P }                   terpretation function) maps each concept name A ∈ NC to a
                                                         AI  ⊆ ΔI                r ∈ N
12:       Pnew := L((P ∩{m1,...,mj−1}) ∪{mj})         set         , each role name     R to a binary relation
                                                       I     I    I
            for the max. j that satisﬁes              r  ⊆ Δ   × Δ  , and each individual name a ∈ NI to an el-
                                                             I    I
            P<j  L((P ∩{m1,...,mj−1})  ∪{mj})         ement a  ∈ Δ . Concept descriptions C are also interpreted
                                                              I     I
13:    else {P →K(P  ) refuted}                       as sets C ⊆ Δ  , which are deﬁned inductively, as seen in
                             
14:       Get a partial context K from the expert such that the semantics column of Table 1 for the constructors conjunc-
          K≤K   ≤ K and P →K(P  ) is refuted by K   tion and negation. An interpretation I is a model of the TBox
                
15:       K := K                                      T (the ABox A) if it satisﬁes all its GCIs (assertions) in the
                                                                                                       I
16:       Pnew := P                 {P not changed}   sense shown in the semantics column of the table. In case
17:    end if                                         is a model of both T and A, it is also called a model of the
18:  else {trivial implication}                       knowledge base (T , A). If there is such a model, we call the
19:    Pnew := L((P ∩{m1,...,mj−1})  ∪{mj})           KB consistent.
          for the max. j that satisﬁes                  Given a KB (T , A), concept descriptions C, D,andanin-
          P<j  L((P ∩{m1,...,mj−1})  ∪{mj})           dividual name a, the inference problems subsumption and in-
20:  end if                                           stance are deﬁned as follows: C is subsumed by D w.r.t. T
                                                                   I     I
21:  P  := Pnew                                       (C T  D)ifC   ⊆ D  holds for all models I of T ;anda is
                                                                                                  I     I
22: end while                                         an instance of C w.r.t. T and A (T , A|= C(a))ifa ∈ C
                                                      holds for all models of (T , A). For most DLs, these problems
                                                      are decidable, and there exist highly optimized DL reasoners
in M such that K0 ≤ K. Then Algorithm 1 terminates and, such as FaCT, RACER, and Pellet that can solve these prob-
upon termination, it outputs a partial context K and a set of lems for very expressive DLs on large practical KBs.
implications L such that                                As mentioned above, our approach for completing DL
 1. L is a base for Imp(K), and                       knowledge bases applies to arbitary DLs, provided that the
                                                      description language allows at least for conjunction and nega-
 2. K refutes every implication that is refuted by K. tion, the TBox formalism allows for GCIs, the ABox formal-
                                                      ism allows for concept assertions, and the subsumption and
3  Completing DL Knowledge Bases                      the instance problem are decidable.
In order to represent knowledge about an application domain DLs and partial contexts
using Description Logics (DLs) (see [Baader et al., 2003] for Let (T , A) be a consistent DL knowledge base, and M be
more details and references), one usually ﬁrst deﬁnes the rele- a ﬁnite set of concept descriptions. An individual name a
vant concepts of this domain, and then describes relationships occurring in A gives rise to the partial object description
between concepts and between individuals and concepts in pod T ,A(a, M):=(A, S) where
the knowledge base. To construct concepts, one starts with a
                                                                A := {C ∈ M |T, A|=  C(a)}
set NC of concept names (unary predicates) and a set NR of                                  and
role names (binary predicates), and builds complex concept      S := {C ∈ M |T, A|=  ¬C(a)},
descriptions out of them by using the concept constructors
                                                      and the whole ABox induces the partial context
provided by the particular description language being used.
               N
In addition, a set I of individual names is used to refer to KT ,A(M):={pod T ,A(a, M) | a an individual name in A}.
domain elements. In this paper, we do not ﬁx a speciﬁc set of
constructors since our results apply to arbitrary DLs as long Note that pod T ,A(a, M) is indeed a pod since (T , A) was
as they allow for the constructors conjunction and negation assumed to be consistent. Similarly, any element d ∈ ΔI
(see the upper part of Table 1). A TBox is a ﬁnite set of gen- of an interpretation I gives rise to the full object description
eral concept inclusions (GCIs), and an ABox is a ﬁnite set of fod I(d, M):=(A, S) where
concept and role assertions (see the lower part of Table 1).
A knowledge base (KB) consists of a TBox together with an A := {C ∈ M | d ∈ CI }, S := {C ∈ M | d ∈ (¬C)I },

                                                IJCAI-07
                                                   233and the whole interpretation induces the full context way. If the answer is “yes,” then the expert is asked to extend
                                                      the current ABox (by adding appropriate assertions on either
          K (M):={fod    (d, M) | d ∈ ΔI }.
           I            I                             old or new individual names) such that the extended ABox
                                                            L →  R     I
Proposition 3.1 Let (T , A), (T , A) be DL KBs such that refutes and   is still a model of this ABox. Because
T⊆T   and A⊆A,   M  a set of concept descriptions, and of Proposition 3.3, before actually asking the expert whether
                                                    the implication L → R is refuted by I, we can ﬁrst check
I a model of (T , A ).ThenKT ,A(M) ≤KT   ,A (M) ≤
                                                      whether 
L 
R  already follows from the current TBox. If
KI (M).
                                                      this is the case, then we know that L → R cannot be refuted
Next, we straightforwardly transfer the notion of refutation of by I. This completion algorithm for DL knowledge bases is
an implication from partial (full) contexts to knowledge bases described in more detail in Algorithm 2.
(interpretations).
Deﬁnition 3.2 The implication L → R over the attributes Algorithm 2 Completion of DL knowledge bases
M                             (T , A)
   is refuted by the knowledge base  if it is refuted by 1: Input: M = {m1,...,mn}, (T0, A0) {attribute set and
KT ,A(M), and it is refuted by the interpretation I if it is re-              knowledge base, with model I}
       K  (M)                               I
futed by I    . If an implication is not refuted by ,then 2: T := T0, A := A0
                  I                      L → R
we say that it holds in . In addition, we say that fol- 3: L := ∅           {initial empty set of implications}
         T   
L    
R        
L     
R
lows from  if     T   ,where    and    respectively  4: P := ∅     {lectically smallest L-closed subset of M}
                            C          D
stand for the conjunctions C∈L and D∈R   .             5: while P = M do
                                                                    K    (P )
Obviously, the implication L → R holds in I iff (
L)I ⊆ 6:  Compute  T ,A
                                                             P  = K   (P )    {
(
R)I . As an immediate consequence of this fact, we obtain: 7: if T ,A   then  check whether the implication
                                                            follows from T}
                 T              I             T
Proposition 3.3 Let be a TBox and be a model of .If    8:     if 
P T 
KT ,A(P ) then
L → R            T               I
       follows from , then it holds in .               9:       L := L∪{P   →KT  ,A(P ) \ P }
                                                                P   := L((P ∩{m   ,...,m   }) ∪{m  })
Completion of DL KBs: formal deﬁnition and algorithm  10:        new             1      j−1       j
                                                                  for the max. j that satisﬁes
We are now ready to deﬁne what we mean by a completion of         P<   L((P ∩{m   ,...,m   }) ∪{m  })
a DL knowledge base. Intuitively, the knowledge base is sup-          j          1      j−1       j
                                          M           11:     else
posed to describe an intended model. For a ﬁxed set of “in-                P →K      (P )           I
teresting” concepts, the knowledge base is complete if it con- 12: Ask expert if  T ,A   is refuted by .
                                                      13:       if no then {
P 
KT ,A(P ) is satisﬁed in I}
tains all the relevant knowledge about implications between       L := L∪{P   →K     (P ) \ P }
these concepts. To be more precise, if an implication holds 14:                   T ,A
                                                      15:         Pnew := L((P ∩{m1,...,mj−1})  ∪{mj})
in the intended interpretation, then it should follow from the                 j
TBox, and if it does not hold in the intended interpretation,       for the max. that satisﬁes
                                                                    P<j  L((P ∩{m1,...,mj−1})   ∪{mj})
then the ABox should contain a counterexample. Based on           T := T∪{
P    
(K     (P ) \ P )}
the notions introduced above, this is formalized as follows. 16:                     T ,A
                                                      17:       else
                                                                               
Deﬁnition 3.4 Let (T , A) be a consistent DL knowledge 18:        Get an ABox A from the expert such that
base, M a ﬁnite set of concept descriptions, and I a model          A⊆A,   I is a model of A,and
  (T , A)      (T , A) M                        M                                             
of      .Then        is   -complete (or complete if                 P →KT   ,A(P ) is refuted by A
                                                                         
is clear from the context) w.r.t. I if the following three state- 19: A := A             {extend the ABox}
                                  L →  R     M
ments are equivalent for all implications over :      20:         Pnew := P               {P  not changed}
 1. L →  R holds in I;                                21:       end if
                                                      22:     end if
 2. L →  R follows from T ;
                                                      23:   else
    L →  R               (T , A)
 3.        is not refuted by  .                       24:     Pnew := L((P ∩{m1,...,mj−1}) ∪{mj})
                                                                           j
Let (T0, A0) be a DL knowledge base and I a model of            for the max. that satisﬁes
                                                                P<   L((P ∩{m   ,...,m   }) ∪{m  })
(T0, A0).Then(T , A) is a completion of (T0, A0) if it is           j          1      j−1       j
complete and extends (T0, A0), i.e., T0 ⊆T and A0 ⊆A. 25:   end if
                                                      26:   P := Pnew
  An adaptation of the attribute exploration algorithm for 27: end while
partial contexts presented above can be used to compute a
completion of a given knowledge base (T0, A0) w.r.t. a ﬁxed
                                                        Note that Algorithm 2 applied to T0, A0,M with the un-
model I of this knowledge base. It is assumed that the expert
                                                      derlying model I of (T0, A0) is an instance of Algorithm 1
has or can obtain enough information about this model to be
                                                      applied to the partial context KT ,A (M) with the underly-
able to answer questions of the form “Is L → R refuted by                         0  0
                                                      ing full context KI (M) as realizer. This shows that Theo-
I?”. If the answer is “no,” then L → R holds according to
                                                      rem 2.11 applies also to Algorithm 2, which implies:
the expert’s opinion, and is thus added to the implication base
computed by the algorithm. In addition, the GCI 
L 
R Theorem 3.5 Let (T0, A0) be a consistent knowledge base,
is added to the TBox. Since L → R is not refuted by I,the M a ﬁnite set of concept descriptions, and I a model of
interpretation I is still a model of the new TBox obtained this (T0, A0), and let (T , A) be the knowledge base computed by

                                                IJCAI-07
                                                   234