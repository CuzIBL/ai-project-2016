                  Detecting Stochastically Scheduled Activities in Video               ∗
Massimiliano Albanese1        Vincenzo Moscato2          Antonio Picariello2       V.S. Subrahmanian1

                                            Octavian Udrea1
                    1University of Maryland Institute for Advanced Computer Studies,
                                  {albanese,vs,udrea@umiacs.umd.edu}
                              2Universit`a di Napoli Federico II, Napoli, Italy,
                                       {vmoscato,picus}@unina.it

                     Abstract                            In this paper, we provide fast algorithms to answer two
                                                       kinds of queries. The ﬁrst type of query tries to ﬁnd min-
     The ability to automatically detect activities in imal (i.e. the shortest possible) clips of video that contain a
     video is of increasing importance in applications given event with a probability exceeding a speciﬁed threshold
     such as bank security, airport tarmac security, bag- — we call these Threshold Activity Queries. The second type
     gage area security and building site surveillance. of query takes a portion of a video (the part seen thus far) and
     We present a stochastic activity model composed   a set of activities, and tries to ﬁnd the activity in the set that
     of atomic actions which are directly observable   most likely has occurred in the video (we call these Activity
     through image understanding primitives. We focus  Recognition Queries).
     on answering two types of questions: (i) what are   The key contributions of this paper are the following. We
     the minimal sub-videos in which a given action is ﬁrst introduce (in Section 2) a simple stochastic automata
     identiﬁed with probability above a certain thresh- representation of complex activities based on atomic actions
     old and (ii) for a given video, can we decide which which are recognizable by an image understanding primitive
     activity from a given set most likely occurred? We such as those in [Elgammal et al., 2000; Bevilacqua, 2003;
     provide the MPS algorithm for the ﬁrst problem,   2002; Cavallaro et al., 2005; 2000; Makarov, 1996].Ex-
     as well as two different algorithms (naiveMPA and amples of actions we have implemented in our system us-
     MPA) to solve the second. Our experimental re-    ing computer vision algorithms include person and object
     sults on a dataset consisting of staged bank robbery identiﬁcation, identiﬁcation of people entering and exiting
     videos (described in [Vu et al., 2003]) show that rooms and motion tracking. Our ﬁrst major contribution
     our algorithms are both fast and provide high qual- (in Section 3) is the MPS algorithm to answer threshold
     ity results when compared to human reviewers.     queries. Our second major contribution (Section 4) are the
                                                       naiveMP A  and MPA   algorithms to solve activity recog-
                                                       nition queries. We evaluate these algorithms theoretically as
 1  Introduction                                       well as experimentally (in Section 5) on a third party dataset
                                                       consisting of staged bank robbery videos [Vu et al., 2003]
 There has been a tremendous amount of work in low-level and provide evidence that the algorithms are both efﬁcient
 computer vision video processing algorithms for detection of and yield high-quality results.
 various types of elementary events or actions such as a person
 entering or leaving a room or unloading a package. However,
 there is much less work on how such low level detection algo- 2 Stochastic Activities
 rithms can be utilized in high-level recognition of activities in In this section, we provide a simple framework to represent
 video. High level activities can include transactions at a bank high level activities on top of low level image processing
 automatic teller machine (ATM), robberies at an ATM, un- primitives. This framework is a simple version of HMMs -
 loading an aircraft, moving bags from a secure baggage zone we don’t claim it is new. The novel part of this paper starts
 at an airport to the truck that transports it to the plane, etc. from the next section onwards.
   In this paper, we focus on such high level activities (and We assume the existence of a ﬁnite set A of “action” sym-
 provide a simple ATM example to motivate our work). High bols; we assume that each such atomic action can be detected
 level activities consist of a set of simple actions that are de- by an image understanding method1. For the purposes of this
 tectable using video image processing algorithms, together paper, we will assume that action symbols are propositional,
 with some temporal requirements.                      though there is no loss of generality in this assumption.

   ∗Authors listed in alphabetical order. This work was partly sup- 1Although some of the image understanding methods cited in
 ported by AFOSR grants FA95500610405 and FA95500510298, this paper return a numeric value between 0 and 1, this can be readily
 ARO grant DAAD190310202 and by the Joint Institute for Knowl- transformed into a method that returns either “yes” or “no” based on
 edge Discovery.                                       a ﬁxed threshold.

                                                 IJCAI-07
                                                   1802Deﬁnition 1 (Stochastic activity) A stochastic activity is a which a given video segment [s, e] satisﬁes an activity speci-
labeled graph (V,E,ρ) where:                          ﬁcation.
 1. V is a ﬁnite set of action symbols;               Deﬁnition 2 (Probabilistic satisfaction) Let v =[s, e] be a
 2. E is a subset of (V × V );                        video segment and let (V,E,ρ) be a stochastic activity. Let
 3. ρ is a function that associates, with each v of out-degree  : v → 2V                       v
                                                                be a labeling of the video segment .Wesay
    1 or more, a probability distribution on {(v, v )|(v, v ) ∈ v (V,E,ρ)               p
                                                     that  satisﬁes       with probability iff there exists a
    E}, i.e. for all v ∈ V ,  ρ((v, v )) = 1.         sequence of framesf1 ≤ ... ≤ fn ∈ [s, e] and a sequence of
                       (v,v)∈E
                                                      activity symbols u1,...,un such that:
 4. {v ∈ V |  ∃ v ∈ Vs.t.(v, v) ∈ E} = ∅. This states
                                                       (i) ∀i ∈ [1,n]ui ∈ (fi).
    that there exists at least one end symbol in the activity   i ∈ [1,n− 1] u          u    [f ,f  ]
    deﬁnition.                                         (ii) For all         , i+1 follows i in i i+1 w.r.t.
    {v ∈ V |  ∃ v ∈ Vs.t.(v,v) ∈ E} = ∅                and (V,E,ρ).
 5.                                     . This states     {w  ∈ V |(w, u ) ∈ E} = ∅    {w  ∈ V )|(u ,w) ∈
    that there exists at least one start symbol in the activity (iii)  1           and            n
                                                          E}  = ∅.
    deﬁnition.                                              n−1
                                                      (iv) Πi=1 ρ((ui,ui+1)) ≥ p.
For v ∈ V , we denote by pb(v) the maximum product of prob-
abilities on any paths between v and an end node.     One problem with the above deﬁnition is that an activity con-
                                                      sisting of very few action symbols will in most cases yield
  Figure 1(a) shows a small example of a stochastic activ- a higher probability than an activity with a hundred times as
ity associated with transactions at an Automatic Teller Ma- many actions. In cases when we want to decide which activity
chine (ATM). In this ﬁgure, we have assumed that edges from a given set most likely occurs in a video, we need to nor-
without a label have probability 1. For example, consider malize the probability w.r.t. to the activity deﬁnition. We say
the node withdraw-cash. There are two edges starting at that a video [s, e] satisﬁes an activity (V,E,ρ) w.r.t. label-
this node - one to withdraw-card labeled with a probabil- ing  with relative probability p∗ iff [s, e] satisﬁes (V,E,ρ)
ity of 0.9 and one to insert-checks with probability 0.1. This             ∗     p−pmin
                                                      with probability p and p =        ,wherepmin,pmax
means that there is a 90% probability of transitioning to the                  pmax−pmin
                                                      are the lowest and respectively highest probabilities labeling
withdraw-card state after executing withdraw-cash and a
                                                      a path from a start node2 to an end node3 in (V,E,ρ).
10% probability of transitioning to insert-checks after exe-
cuting withdraw-cash. For the purposes of this paper, this Example 3 Consider the labeling in Example 1 and the
example is somewhat simpliﬁed (e.g., we avoided talking stochastic activity in Figure 1. Then the video satisﬁes the
about receipts generated by ATMs, etc.). Each of the actions action with probability 0.056. For this example, pmin =0
in this stochastic activity can be easily detected by either an (since we can have an arbitrarily large sequence of activities
image processing algorithm (e.g. detect-person would check repeating the action symbols withdraw − cash, insert −
if a person is present in the image) or a sensor (e.g. to detect checks) and pmax =0.63. Then the video whose labeling
if insert-card holds). It is also important to note that in this is given in Example 1 satisﬁes the activity in Figure 1 with a
framework, it is possible to execute withdraw-cash, then ex- relative probability of approximately 0.089.
ecute insert-checks, and then again execute withdraw-cash
                                                      Proposition 1 Let v =[s, e] be a video segment, and let  be
— informally speaking, the probability of this sequence oc-
                                                      its labeling. Let (V,E,ρ) be a stochastic activity such that
curring would be 0.1 × 0.2=0.02. Similarly, Figure 1(b)
                                                      v satisﬁes (V,E,ρ) with probability p. Then for all videos
describes an attempted robbery at an ATM.             v                    v ⊆  v    ∀f ∈ [s, e] (f)=
                     v                                 with labeling such that      and
  A labeling of a video is a mapping that takes a video (f), v satisﬁes (V,E,ρ) with probability p.
frame f as input, and returns a set of action symbols as output.
                                                      Deﬁnition 3 A stochastic activity query (SAQ) is a four-tuple
Example 1 The following is a labeling of a 500-frame  (v, , (V,E,ρ),p) where v is a video,  is a labeling of the
video w.r.t. to the stochastic activity presented in Fig- video, (V,E,ρ) is a stochastic activity, and p is a threshold
ure 1(a):   (5, {detect − person}), (26, {present −
card}), (45, {insert −  card}), (213, {withdraw  −    probability.
                                                        A sequence [s, e] is an answer to the above SAQ iff [s, e]
cash}), (320, {insert − checks}), (431, {withdraw −          (V,E,ρ)               p
card}), (496, {¬detect − person})                     satisﬁes       with probability and there is no strict sub-
                              .                       set [s,e] ⊂ [s, e] which satisﬁes (V,E,ρ) with probability p.
                     a                a
  We say that an action follows an action in segment  Intuitively, we are looking for the smallest subvideos that
[s, e] ⊆ v                             (V,E,ρ)
        w.r.t. labeling and activity deﬁnition  iff:  satisfy an activity deﬁnition with probability above a given
  a  ∈ (s) a ∈ (e)    (a, a) ∈ E   ∀a ∈{b  ∈
(i)       ,          and           ; (ii)             threshold p. We will now deﬁne the most probable subvideo
V |(a, b) ∈ E}−{a}   ∀fs.t.s≤  f ≤ e a ∈ (f)
                   and               ,         .      and most probable activity problems more formally.
Example 2 Consider the labeling in Example 1. In the  The Most Probable Subvideo (MPS) Problem.  The most
subvideo [45, 320], action withdraw − cash follows action probable subvideo problem can now be deﬁned as follows:
insert − card. However, action insert − checks does not given a stochastic activity query (v, , (V,E,ρ),p),ﬁndthe
follow action insert − card.                          set of all answers to the query.
Intuitively, a labeling of video v speciﬁes which actions are 2A node of indegree 0.
detected in a given video. We now deﬁne the probability with 3A node of outdegree 0.

                                                IJCAI-07
                                                  1803      detect-  present-           withdraw-  withdraw-
                        insert-card 0.7  0.9
      person    card               cash       card
                                                       detect- present-        detect- withdraw- cash-
                                                                      insert-card   0.8      0.9
                                                       person   card          assailant cash    transfer
                                   0.1 0.2 0.8
                                                                                           0.05
                             0.3                                                        0.1
                                              ~detect-
                                              person
                                   insert-                                             ~detect- ~detect-
                                                                                  0.15
                                   checks                                               person  assailant
                (a) ATM regular operation                         (b) ATM attempted robbery

                                  Figure 1: ATM stochastic activity examples

The Most Probable Activity (MPA) Problem.  In many      The MPS algorithm maintains a set C of triples (f,p,a)
practical cases – airport security, ATM monitoring, etc., the that correspond to partially detected activities. f represents
system users are interested in monitoring a list of speciﬁc the frame when a start symbol in (V,E,ρ) is detected; this
activities. The goal is to identify the activity (or activities) is later used to determine the subvideos that should go in the
that most likely occur in a given portion of the surveillance answer. p represents the product of probabilities on the path
video. The most likely activity problem can be deﬁned as from the start symbol up to the action symbol a – the last sym-
follows: given a video v, its labeling , a set of activity def- bol detected up to the current frame. The algorithm works
initions A = {(V1,E1,ρ1),...,(Vn,En,ρn)},ﬁndtheset    by changing the state represented by C – intuitively, consist-
 
A ⊆  A such that the following hold: (i) Let pm = max({p ∈ ing of all paths through the activity deﬁnition for which we
[0, 1]|∃Ai =(Vi,Ei,ρi) ∈ As.t.vsatisﬁes Ai with relative may reach an end node with probability above the threshold.
                                 
probability p}).Then∀(Vi,Ei,ρi) ∈ A , (Vi,Ei,ρi) satisfy Triples are removed from C when it is evident that the current
                                                 
v with relative probability pm; (ii)  ∃(Vj,Ej ,ρj) ∈ A − A , path will result in a probability lower than pt (lines 12–13).
s.t. v satisﬁes (Vj ,Ej,ρj) with relative probability pm. When all frames of the video have been analyzed, the mini-
                                                      mality condition in Deﬁnition 3 is enforced on lines 24–31 by
3  Threshold Queries                                  removing redundant subvideos.
                                                        Consider the labeling in Example 1 and the activity deﬁni-
                         MPS
The most probable subvideo (  ) algorithm tries to ﬁnd tion in Figure 1(a) and assume that pt =0.01. At frame 5,
all answers to a stochastic activity query (v, , (V,E,ρ),p) the MPS algorithm will add the triple (5, 1, detect − person)
and is shown in Figure 2.                             to C (line 18). At frame 26, this triple will be replaced by
                                                      (5, 1,present − card). Immediately after frame 213,we
Algorithm MPS                                              C =  {(5, 0.7,withdraw− cash)}
Input: Query (v, , (V, E, ρ),pt),wherev =[s, e].     have                               . The process con-
Output: The set of subvideos representing the answer to the input query and the probabilities with tinues until frame 496, after which the condition on line 19
which the activity is satisﬁed.
Notation: C is a set of triples (f, p, a),wheref is a frame in v, p ∈ [0, 1] and a ∈ V is an becomes true and (5, 0.056, ¬detect − person) causes the
activity symbol.                                      subvideo [5, 496] to be added to the answer R on line 20.
1. R ←∅;                                              Theorem 1 (MPS correctness) Algorithm MPS     termi-
2. C ←∅;
                   
3. Vs ←{a ∈ V |  ∃a ∈ V s.t. (a ,a) ∈ E};            nates and for an input query (v, , (V,E,ρ),pt) it returns the
                     
4. Ve ←{a ∈ V |  ∃a ∈ V s.t. (a, a ) ∈ E};           set of answers R to the query – i.e.:
5. for fi = s to e do
6. for every (f, p, a) ∈ C do                           •∀[s, e] ∈ R, [s, e] is an answer to (v, , (V,E,ρ),pt) as
7.  D ← (fi) ∩{b ∈ V |(a, b) ∈ E};
8.  if D = ∅ then                                        per Deﬁnition 3.
9.   C ← C −{(f, p, a)};
                                                       •  ∃[s, e] s.t. [s, e] is an answer to (v, , (V,E,ρ),pt) and
10. for a ∈ D do
            
11.  if p · ρ(a, a ) ≥ pt then                            [s, e] ∈ R.
                        
12.   T ←{(f ,p ,b) ∈ C|f = f ∧ a = b};
13.   C ← C − T ∪                                     Theorem 2 (MPS complexity) Algorithm MPS   for input
       {(f, max(max      (p),p· ρ(a, a)),a)}                                            2
                 (f,p,a)∈T           ;             query (v, , (V,E,ρ),pt) runs in time O(|v| ·|V |).
14.  endif
15. endfor                                              Note that MPS makes only one pass through the video,
16. endfor
17. for every a ∈ Vs ∩ (fi) do                       which allows it to process a video as it comes in frame by
18. C ← C ∪{(fi, 1,a)};                               frame. MPS is therefore well suited for scenarios (such as
19. for every (f, p, a) ∈ C s.t. a ∈ Ve do
20. R ← R ∪{([f, fi],p)};                             surveillance) in which a video is analyzed while playing.
21. C ← C −{(f, p, a)};
22. endfor
23.endfor                                             4   Activity recognition queries
24.for ([f1,f2],p) ∈ R do
         
25. for ([f1,f2],p ) ∈ R −{([f1,f2],p)} do            In this section, we present two methods to answer activity
     [f  ,f ] ⊂ [f ,f ]
26. if 1 2   1 2 then                                 recognition queries where:
27.  R ← R −{([f1,f2],p)};
       ([f  ,f ]=[f ,f ]) ∧ (p >p)
28. else if 1 2 1 2        then                         • v is a video with labeling .
29.  R ← R −{([f1,f2],p)};                              • A  = {(V ,E  ,ρ ),...,(V ,E ,ρ )}
30. endfor                                                        1   1  1       n   n  n  is a ﬁnite set of
31.endfor                                                 activities.
32.return R;
                                                        One way to ﬁnd the set of activities (Vi,Ei,ρi) satisﬁed by
                                                      v with the maximum relative probability among all activities
      Figure 2: An algorithm for the MPS problem      in A is to use the MPS algorithm presented earlier as follows:

                                                IJCAI-07
                                                  1804                                                      Algorithm MPA
 1. Start with pt =1.                                 Input: Video v with labeling , set of activities A.
 2. If pt has not changed since the previous iteration, return Output: (Vi,Ei,ρi) ∈ A that is satisﬁed by v with the highest probability p and
                                                      ∀j ∈ [1,n],j = i, (Vj ,Ej ,ρj ) is either not satisﬁes by v or is satisﬁed with probability
                                                       
    the last set of activities obtained at step 3.    p <p.
 3. Run MPS  and record all activities satisﬁed with relative Notes: C is a vector of sets, each C[i] has the same structure as C for the MPS algorithm. By
                                                                   p−pi
                                                                      min      i    i
                    pt                                notation, fi(p)=    ,wherep ,p   are the maximum and respectively
    probability at least .                                       pi  −pi       max  min
                                                                  max  min
 4. If there is more than one activity in the previous set, then minimum probabilities for a path in (Vi,Ei,ρi).
    set pt to the average between its current and previous
                                                      1. for i =1to n do
    value and go to step 2. Otherwise if only one activity is 2. m[i] ← 0;
    obtained at step 3, return it.                    3. C[i] ←∅;
                                                      4. endfor
 5. If there is no activity in the previously computed set, set 5. for every frame fj in v do
                                                              i =1 n
    pt to half its previous value and go to step 2.   6. for every to do
                                                      7.  for every (f, p, a) ∈ C[i] do
                                                      8.   D ← (fj ) ∩{b ∈ Vi|(a, b) ∈ Ei};
  For reasons of space, we omit a detailed algorithmic de- 9. if D = ∅ then
          naiveMP A                                   10.    C[i] ← C[i] −{(f, p, a)};
scription of         . The algorithm’s main issue is the      
                                                      11.  for a ∈ D do
                                                                      
binary search, which can run for many iterations, each taking 12. p ← p · ρi(a, a );
       2                                                            
O(n ·|v| ·|V |)                                       13.    if fi(p · pb(a )) >max(m[1],...,m[n]) then
              steps. Our experiments show that the algo-                        
                                                      14.     T ←{(f ,p ,b) ∈ C|f = f ∧ a = b};
                                                                                                 
rithm is particularly slow when there is more than one activity 15. C[i] ← C[i] − T ∪{(f, max(max(f,p,b)∈T (p),p ),a )};
to be returned.                                       16.    endif
                                                      17.  endfor
Example 4 Consider the  set of activities depicted in 18. endfor
                                                      19. for every a ∈{x ∈ Vi|  ∃ y ∈ Vi s.t. (y, x) ∈ Ei}∩(fj ) do
Figure 1  and the following labeling: (5, {detect −   20.  C[i] ← C[i] ∪{(fj , 1,a)};
person}), (26, {present −   card}), (45, {insert −    21. for every (f, p, a) ∈ C[i] s.t.
                                                             a ∈{x ∈ Vi|  ∃y ∈ Vi s.t. (x, y) ∈ Ei} do
card}), (213, {withdraw −   cash}), (320, {insert −   22.  C[i] ← C[i] −{(f, p, a)};
checks}), (344, {detect − assailant}), (431, {withdraw − 23. m[i] ← max(m[i],fi(p));
                                                      24. endfor
card}), (446, {withdraw −  cash}), (496, {¬detect −   25. endfor
person}), (500, {¬detect − person})                   26.endfor
                                .                     27.return {(Ai,m[i])|m[i]=max(m[1],...,m[n])};
  naiveMP A  will determine that T = ∅ until pt =0.0625.
At this point, subvideo [5, 496] satisﬁes the activity depicted
in Figure 1(a) with relative probability 0.089 >pt, whereas Figure 3: An algorithm for the activity recognition problem
the subvideo [30, 500] satisﬁes the activity in Figure 1(b) with
relative probability of 0.044 <pt, hence the former will be
returned.
                                                      an portion of an image is a person) and implementing mo-
  The activity recognition problem problem can be more ef- tion tracking primitives – this in turn leads to the ability to
ﬁciently solved by maintaining state in a similar fashion to detect atomic actions (e.g., a person entering a room). The
MPS   for each of the activities in the set A. The algorithm is library implements algorithms described in [Elgammal et al.,
shown in Figure 3.                                    2000; Bevilacqua, 2003; 2002; Cavallaro et al., 2005; 2000;
  MPA   maintains an array C[1] ...C[n] of sets, in which Makarov, 1996]. Labeling data obtained from video process-
C[i] holds the current state for activity (Vi,Ei,ρi) in a sim- ing was stored in a MySQL DBMS. All experiments were
ilar way to the C set used by MPS. m[i] holds the maxi- run on a Pentium Centrino at 1.5 Mhz, with 1.5GB of RAM,
mum relative probability with which A[i] has been satisﬁed running Windows XP Professional.
thus far. Pruning occurs when a triple (f,p,a) in C[i] de-
notes a path that cannot be completed with relative probabil- Our experiments were performed over a dataset of 7 video
ity greater than m[i] (line 13). As MPS, MPA makes only sequences of approximately 15-30 seconds, depicting both
one pass through the video, thus permitting incremental com- regular bank operations and (staged) attempted robberies; the
putation.                                             dataset is a superset of that described in [Vu et al., 2003].
                                                      We developed ﬁve activity deﬁnitions with the following no-
                                     MPA
Theorem 3 (MPA correctness) Algorithm     terminates  tation: (a1) depicts regular customer-employee interaction;
and returns the correct answer – i.e. the set of activities (a2) describes a non-employee that enters the vault room (the
{A }                v
  i  that is satisﬁed by with the highest relative probability “safe”); (a3) describes a bank robbery attempt; (a4) describes
                   A
among all activities in .                             a successful bank robbery – in which the assailant(s) enter the
Theorem 4 (MPA complexity) Algorithm MPA runs it time bank, then enter the safe by holding an employee hostage and
    2
O(|v| · maxi∈[1,n](|Vi|) · n).                        then escape; (a5) describes an employee accessing the safe on
                                                      behalf of a customer.
5  Experiments and Implementation                       In the ﬁrst set of experiments we measured the running
Our prototype implementation of the MPS, naiveMP A and time of MPS for activity deﬁnitions (a1)-(a4). We imple-
MPA   consists of approximately 1000 lines of Java code. In mented two version of the algorithm: CA refers to the orig-
addition, we implemented an image processing library of ap- inal algorithm in Figure 2; we found that in many scenarios
proximately 25,000 lines of Java code. The library operates (such as activities at an ATM), we can improve efﬁciency by
on video frames, identifying blobs (corresponding to objects assuming activities cannot be interleaved – which lead to the
in the video), information about such objects (e.g., whether version denoted by CNA. The running times for labeling

                                                IJCAI-07
                                                  1805                                                                        Frame recall and precision

                       MPS running time
                                                        120.00%

      1600
           a1 CA
           a1 CNA                                       100.00%
      1400                                                                                   Frame precision - CA
           a2 CA                                                                             Frame recall - CA
           a2 CNA                                                                            Frame precision - CNA
      1200                                                                                   Frame recall CNA
           a3 CA                                        80.00%
           a3 CNA
      1000 a4 CA
           a4 CNA
                                                        60.00%
      800                                              [%]
     Time  [ms]

      600                                               40.00%

      400

                                                        20.00%
      200


       0                                                0.00%
        0     10203040506070                                0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
                                                                          Threshold
                       Labeling size [no. actions]
                  (a) MPS running time                         (b) MPS frame precision and recall

                                     Figure 4: MPS experimental results

size between 2 and 60 actions are shown in Figure 4(a)4.The In the third set of experiments, we analyzed the perfor-
activity deﬁnitions (a1)-(a4) are satisﬁed when the labeling mance and answer quality for naiveMP A and MPA.The
size reaches 30, leading to a visible increase in running time; following sets of activities were used: S1 = {a5}, S2 =
as expected, CNA is more efﬁcient than the original CA ver- {a3,a5}, S3 = {a3,a4,a5} and S4 = {a2,a3,a4,a5}.The
sion. We have also observed that running times are dependent running times are shown in Figure 5. naiveMP A is espe-
on the complexity of an activity deﬁnition.           cially inefﬁcient until the labeling satisﬁes one of the activi-
                                                      ties – this is due to the large number of iterations taken until
                                                      the threshold is close enough to 0. Running times for the
                  MPA and naiveMPA running times
                                                      two algorithms are comparable for labeling sizes greater than
   7000
                                      naiveMPA - S1   30, although naiveMP A is always less efﬁcient than MPA.
                                      naiveMPA - S2
   6000                               naiveMPA - S3   The graph shows running time is generally proportional to the
                                      naiveMPA - S4
                                      MPA - S1        number of actions in the labeling.
   5000                               MPA - S2
                                      MPA - S3
                                      MPA - S4
   4000                                               6   Related work and Conclusions


   Time [ms] Time 3000                                Model-based anomaly recognition techniques provide an a
                                                      priori deﬁnition of an anomalous activity and then detect new
   2000
                                                      anomalous activities [Hongeng and Nevatia, 2001]. [Zhong et
   1000                                               al., 2004; Stauffer and Grimson, 2000] deﬁne models of reg-

     0                                                ular activities and bags of event n-grams to detect abnormal-
      0    10203040506070                                                                         [
                     Labeling size [no actions]       ities. Context-free grammars have also been studied Ivanov
                                                      and Bobick, 2000; Vu et al., 2003; Nevatia et al., 2003;
                                                      Narayanan, 1997]. Oliver et al. [Oliver et al., 2002] de-
             Figure 5: MPA running time
                                                      scribed an approach based on coupled HMMs for learning
                                                      and recognizing human interactions. Dynamic Bayesian net-
  In the second set of experiments, we measure the precision works – which can be viewed as a generalization of HMMs
and recall of MPSw.r.t. a set of 4 human annotators. The av- –, can be used for tracking and recognizing multi-agent ac-
erage among the annotations from the four subjects was con- tivities [Hamid et al., 2003]. Data-based methods detect ac-
sidered the ground truth when measuring both precision and tivities based on extracted features; Cuntoor and Chellappa
recall. The results are shown in Figure 4(b). We notice that [Cuntoor and Chellappa, 2006] proposed a characterization
precision is always very high and generally constant, while of events based on anti-eigenvalues, which are sensitive to
recall has a rather surprising variation pattern – namely, recall changes. Parameswaran and Chellappa [Parameswaran and
is monotonic with the threshold. The explanation for the ap- Chellappa, 2003] computed view invariant representations for
parently anomalous behavior comes from the fact that for low human actions in both 2D and 3D.
thresholds, the number of candidate subvideos is relatively Ontologies have been recently used in different contexts for
high, hence the minimality condition causes fewer frames to video surveillance. Chen et al [Chen et al., 2004] use ontolo-
appear in the answer. The monotonic behavior pattern stops gies for analyzing social interaction in nursing homes; Ha-
when the threshold becomes high enough (.4 in this case). keem et al use ontologies for classiﬁcation of meeting videos
                                                      [Hakeem and Shah, 2004].Georisetal[Georis et al., 2004]
  4This does not include the running time of library methods that use ontologies to recognize activities in a bank monitoring
generate the labeling.                                setting. As a result of the Video Event Challenge Workshops

                                                IJCAI-07
                                                  1806