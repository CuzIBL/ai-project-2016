                  An Experience on Reputation Models Interoperability
                                based on a Functional Ontology
                    Laurent Vercouter       Sara J. Casare, Jaime S. Sichman, Anarosa A. F. Brandao˜
          Ecole´ N.S. des Mines de Saint-Etienne´          University of S˜ao Paulo, Brazil
                     158 cours Fauriel                Av. Prof. Luciano Gualberto, 158 - trav. 3
         F-42023 Saint-Etienne´  Cedex 02, France          05508-900 S˜ao Paulo SP Brazil
                Laurent.Vercouter@emse.fr             {sara.casare, jaime.sichman}@poli.usp.br,
                                                             anarosabrandao@gmail.com
                    Abstract                          2   Background
                                                      This section ﬁrst states the current heterogeneity of reputa-
    Interaction between heterogeneous agents can raise tion models and then presents the tools that were used as a
    some problems since agents may not use the same   background of this work: the ART testbed and the functional
    models and concepts. Therefore, the use of some   ontology of reputation.
    mechanisms to achieve interoperability between
    models allows agents to interact. In this paper we 2.1 Heterogeneity of Reputation Models
    consider the case of reputation models by describ- Multi-agent systems arised new kind of chalenges for devel-
    ing an experience of using several existing tech- opers due to their speciﬁc and original features as, for in-
    nologies to allow agents to interoperate when they stance, the openness of the system, the decentralized man-
    use reputation notions/values during interactions. agement of tasks and the autonomy of agents. These fea-
    For this purpose, we have implemented agents on   tures taken together imply that some agents, potentially im-
    the ART testbed and we make them use a functional plemented by different developers, can enter or leave dynam-
    ontology of reputation which was developed to al- ically the system, and that these agents may be involved in
    low the interoperability among reputation models. collective tasks and will cooperate with other agents that rely
                                                      on them. Furthermore, since agents are considered as au-
                                                      tonomous entities, we cannot assume that there is a way to
                                                      control their internal behavior. These features are interest-
1  Introduction                                       ing to obtain ﬂexible and adaptive systems but they also cre-
                                                      ate new risks about the reliability and the robustness of the
In open multi-agent systems, it is often a problem to achieve system. The risk that an agent does not behave well (inten-
agents’ interoperability. Agents may be heterogeneous and tionnally or not) is increased. This bad behavior can cause
it is not trivial to establish interactions and cooperations be- the failure of some tasks performed by the agent but also of
tween agents that use different models. We have to provide collective tasks in which it is involved.
means by which agents can understand each other and trans- Solutions to this problem have been proposed by using
late part of their models into the model of other agents (and trust models. The main idea of this approach is to endow
vice versa).                                          agents with a model of other agents that allows them to de-
  In this paper we will focus on the speciﬁc case of reputation cide if they can trust these other agents or not. Such trust
models. The work presented here describes an experience of decision is very important because it is an essential condition
using several existing technologies to allow agents to interop- to the formation of agents’ cooperation. The trust decision
erate when interacting using the notions from their reputation process has been the subject of several propositions from dif-
models. We implemented agents on the ART testbed [Ful- ferent researchers. Most of them use the concept of reputa-
lam et al., 2005] that provides an infrastructure for the ex- tion as the basis of a decision. Reputation is a subject that
perimentation of reputation models. Then, we used the func- has been studied in several works [Castelfranchi and Falcone,
tional ontology of reputation [Casare and Sichman, 2005b] to 1998; Sabater and Sierra, 2001; Conte and Paolucci, 2002;
allow agents to describe their own reputation model for exter- Abdulrahman, 2004; Muller and Vercouter, 2005] with dif-
nal purposes and a query language over OWL [Bechhofer et ferent approaches but also with different semantics attached
al., 2004], called nRQL, for agent interactions.      to the reputation concept. The word “reputation” does not
  The next section presents the background of this work and have exactly the same meaning depending on the approach.
describes brieﬂy the used tools (the ART testbed and the func- Some authors consider that an agent has only one associ-
tional ontology). Section 3 details our proposition by explain- ated reputation value that is globally maintained by the sys-
ing how an agent can use the ontology to interoperate with tem [Zacharia et al., 1999], whereas others think that two
others. At last, section 4 shows the implementation of this agents can have a different opinion about the reputation of
work on ART.                                          an agent [Sabater and Sierra, 2001; Abdulrahman, 2004;

                                                IJCAI-07
                                                   617Muller and Vercouter, 2005]. Moreover, some works consider provider but this time, the information that is bought is
that reputation should be relative to a given context [Castel- not an opinion about a painting but the reputation of an-
franchi and Falcone, 1998], to the sources used to build  other agent (a target) for a given era. This reputation
it [McKnight and Chervany, 2001], to the nature of its tar- represents the estimated accuracy of the target in its eval-
get [McKnight and Chervany, 2001], to the facet of the agent uation of paintings of the given era.
              [
that is evaluated Sabater and Sierra, 2001; Wang and Vas- 6. At last, each agent calculates a value for the paintings of
          ]
sileva, 2003 , and so on.                                 its clients and receives money for this evaluation. The
  These different approaches result in a wide semantic het- game is played during several iterations. At the next it-
erogeneity of reputation models. Two different reputation eration, the amount of clients affected at an agent at step
models do not represent exactly the same things, and some- (1) depends on the accuracy of its evaluation in the pre-
times they even use the same word for different concepts. vious iteration.
These differences lead to some incompatibility among reputa-
tion models. Agents using different reputation models cannot More details about the ART testbed can be found in [Ful-
interact since their notions about one another reputation are lam et al., 2005]. During most of this game, the incompati-
not understood each other. This is a heavy constraint over the bility of trust models is not important because they are used
system because it imposes that every agent use the same repu- locally by their agents’ decision process. However, the case
tation model. In order to drop this constraint we must provide of reputation transaction is particular because it is the only
a way to bring interoperability between the models.   moment where agents have to exchange information coming
                                                      from their trust models. Here, interoperability is required as
2.2  The ART testbed                                  an agent must be able to formulate a query about reputation
One of the consequence of the wide diversity of reputation values that must be understood by the receiver of the message.
models and of their heterogeneity is that it is very difﬁcult to This one must also be able to answer and to send the required
compare and to evaluate them. Each model focuses on the values in a format that is understood by the ﬁrst agent. In
representation of some speciﬁc concepts that may be differ- the current version of the ART testbed, interoperability is ob-
ent from those of other models. The context and the kind tained by asking the developpers of each agent to provide a
of the target application is also sometimes different. These way to map their trust model into a very simple common rep-
difﬁculties have been stated by the community during the utation model. This simple model deﬁnes that: (i) an agent
international workshop about trust in agent societies at AA- associates with each of its acquaintances a single value named
MAS’04 [tru, 2004] and it has been decided to create a work- “Reputation weight”; (ii) this reputation weight is a value in
ing group named ART (Agent Reputation and Trust) which the domain [0:1].
goal is the development of a testbed for the experimentation
and comparison of trust models.                       2.3  The functional ontology of reputation
  A ﬁrst version of the ART testbed has been developed and The diversity of domains that are interested in trust and rep-
used for a competition between trust models during the AA- utation implies a wide and confusing heterogeneity of con-
MAS’06 conference. This ﬁrst version provides a simulation cepts and deﬁnitions. This diversity is also found in the trust
engine on which several agents, using different trust models, models used in multi-agent systems as they are often inspired
are running. The simulation consists in a game where the by social or economic sciences. In order to allow the inter-
agents have to decide to trust or not other agents. This game operability of trust models, Casare and Sichman [Casare and
is an art appraisal game in which agents are required to eval- Sichman, 2005b] proposed a functional ontology of reputa-
uate the value of paintings. The game can be summarized as tion. This ontology aims at identifying and organizing the
follows:                                              concepts and relations involved in trust models. The authors
                                                      have studied the main models in multi-agent systems in or-
 1. The ART simulation server gives to each agent a given
                                                      der to identify the important concepts that may appear in a
    number of clients.
                                                      trust model. Then they deﬁned a functional ontology that sub-
 2. Each client gives to its agent the description of a paint- sumes the main reputation models.
    ing. The client expects that the agent evaluates the paint- This ontology includes concepts for different aspects of a
    ing and gives back to him an accurate value.      reputation model. It both represents reputation as a process
 3. A painting is mainly characterized by an era. Accord- (using concepts to describe the procedures, the actors, the
    ing to this era, an agent is more or less accurate in its data, ...) and as a product (using concepts to structure the
    evaluations.                                      description of a reputation product). For instance, there exists
                                                      concepts to represent different reputation natures - according
 4. Each agent can ask other agents to help it in its evalua- to the entity (agent, event, location, etc.) that is evaluated;
    tion of a painting if it thinks that these other agents are different reputation types - according to the way it has been
    more accurate than itself for the corresponding era. This computed; different information sources to build reputation;
    exchange of information is called an opinion transac- etc.
    tion and to get this evaluation the requester pays a ﬁxed An implementation of such ontology was described using
    amount of money to the provider.                  the OWL language [Bechhofer et al., 2004]. The authors
 5. Agents also interact by the way of reputation transac- claim that the functional ontology of reputation could be used
    tions. The information requester gives money to the for interoperability as it is possible to map a reputation model

                                                IJCAI-07
                                                   618into concepts of the ontology. Thus, an agent can map its own These concepts are used to build an external description
reputation model into these concepts and can understand the of a reputation model. This external description contains in-
reputation models of others if they are also mapped. The next stances of these concepts.
section describes how we propose to achieve this.
                                                      3.2  Deﬁning mapping between reputation models
3  Using the ontology for the interoperability             and the functional ontology
   of reputation models                               As shown in [Casare and Sichman, 2005a], it is possible to
                                                      map reputation concepts between different models using the
Reputation building is a learning process that needs several functional reputation ontology as an intermediary. The fol-
experiences with the evaluated agents to calculate relevant lowing example illustrates how it should be done using two
values. Thus, it is often suggested that agents should interact reputation models: Cognitive Reputation Model [Conte and
in order to get more information and to accelerate the con- Paolucci, 2002] and Regret Model [Sabater and Sierra, 2001].
vergence of the learning process. The lack of interoperability The Cognitive Reputation Model adopted the term “Im-
between reputation models is then a problem because it pre- age” in order to represent an evaluation (telling whether an
vents any interaction between agents using different models. agent is good or bad) formed using information acquired by
  We propose to use the functional ontology as an intermedi- agent direct experience, while in the Regret model the term
ary between reputation models. Since the ontology subsumes “Direct Trust” refers to the evaluation of an agent behavior
most of the existing reputation models, we can assume that it that is built from a direct interaction between agents.
is possible to deﬁne a mapping between a reputation model By expressing these two concepts in terms of ontology ele-
and part of the ontology. Interoperability is then achievable ments, we have found that both of them are subsumed by the
if an agent selects in its own model some information to send same concept, named “Primary Reputation”, that represents
to another agent, maps it into ontology concepts and sends the reputation that is obtained from direct experiences with
the mapped information to the other agent that can convert it target.
according to its own model. In this section we ﬁrst identify So, suppose we have an agent using the Cognitive Reputa-
some interesting concepts of the ontology, then show how to tion Model that is asking another agent, that is using Regret
use them for agent interaction. At last, an agent architecture Model, some reputation information acquired by direct expe-
based on this approach is proposed.                   rience about a speciﬁc location, Rio de Janeiro. If both of
                                                      them are using the ontology as an intermediary, the second
3.1  Concepts used to describe a reputation model     one can provide its “Image” value for Rio de Janeiro while
The functional ontology proposed by Casare and Sich-  the ﬁrst one can understand it as corresponding to its “Direct
man [Casare and Sichman, 2005b] aims at covering a broad Trust” value.
knowledge about reputation. The concepts included in the on-
tology can describe several aspects about reputation but a few 3.3 Agent interaction about reputation
of them were useful for the mapping of a reputation model. Agents interact in order to exchange information. We say
For this purpose, we have identiﬁed the following concepts: that an agent interacts about reputation when the interac-
  • Reputation role used to specify the roles fulﬁlled by tion purpose is to receive information about the reputation
    some given agents during a reputation calculation pro- of someone or something, as shown in the above example.
    cess. The roles considered are the target who is eval- These interactions consist in a simple query/answer protocol,
    uated, the evaluator or the maintainer that calculates a as shown by ﬁgure 1. One agent, called the requester, sends
    reputation value, the transmitter that sends a reputation a query about some reputation information to another agent,
    value to another agent and the recipient that will use the called the provider. Then the provider answers by a message
    reputation value.                                 containing the required information.
  • Reputative entity used to address a given entity. There
    are three kinds of entities: agents, non-agents (as events, Requester                provider
    locations, ...), or skills (owned by agents). Each of
    these entities can be the target of a reputation.                 request(nRQL query)
  • Reputation type that distinguishes different reputations
    according to the way they where obtained. For instance,
                                                                      inform(nRQL answer)
    primary reputation is obtained from direct experiences
    with target, whereas secundary reputation is based on
    second hand information.
  • Reputation evaluation value and reputation ﬁnal         Figure 1: interaction about reputation protocol
    value containing the value of a reputation. An evalu-
    ation value is the result of a single evaluation process The interesting part is not on the protocol or on the format
    whereas a ﬁnal value is computed from several evalu- of the messages that we kept very simple, but on the content
    ation values and represents a global evaluation about a of each message. Since the agents may use different reputa-
    target.                                           tion models, the content of the messages must refer to con-

                                                IJCAI-07
                                                   619cepts of the ontology. In its current implementation, the on- 5. In this case, the reputation mapping module translates
tology has been written using OWL [Bechhofer et al., 2004]. the content of the message into concepts of the ontol-
The queries must then refer to this ontology using a query ogy and forwards the resulting query to the interaction
language for OWL. We decided to use nRQL [Haarslev et     module that sends it to other agents.
al., 2004] that is the query language of the Racer [RacerPro,
                                                        During translation, the reputation mapping module uses es-
2006] tool. This choice is motivated by the fact that Racer is
                                                      pecially the concepts describedinsection3.1. However,it
actually the leading tool for reasoning about ontologies and
                                                      can refer to other concepts of the ontology to formulate spe-
thus nRQL is close from becoming a standard de facto.Then
                                                      ciﬁc relations between concepts, for instance inside a query.
the content of a query is a string formatted as a query ex-
                                                      An example of this case is given in the next section.
pressed in nRQL and the answer is a string representing the
answer to this query as if it was treated by a Racer engine.
                                                      4   Experimentation in the ART testbed
3.4  An agent architecture for interoperability
                                                      We have implemented agents using the ontology for inter-
Agents must be able to formulate and understand queries and actions about reputation. For experimental validation of our
their answers in nRQL, using the concepts presented in sec- approach, we used the ART testbed as a deployment infras-
tion 3.1. Figure 2 shows an overview of a general agent archi- tructure for our agents. Firstly, we implemented agents that
tecture that allows this. The ﬁgure does not represent a full have the ability of interact about reputation using the ontol-
architecture but rather some elements that have to be added to ogy. Secondly, we modiﬁed the ART testbed to use the repu-
an existing architecture in order to interact about reputation. tation mapping facilities for monitoring purposes to facilitate
                                                      the use of ART as an experimentation tool.

     AGENT
              Functional                              4.1  Agents’ interactions in the ART testbed
              Ontology of
              Reputation
                                                      In the ﬁrst version of the ART testbed, the protocol used for
                                                      reputation transaction rely on a common reputation model.
     Reputation Reputation    Interaction Interaction with
      Model      Mapping       Module     other agents This common model is used by agents to represent externally
                 Module                               their own reputation model. Since the internal implementa-
                                                      tion of reputation models is free, this common model was
            Reputation                                deﬁned to solve the interoperability problem. Thus, the im-
            Reasoning
             Module     (this agent’s)                plementation of each agent must provide a mapping of the
                        other modules                 internal model into the common model. In order to remain
                                                      general enough, the common model is very simple: it as-
                                                      sociates with each couple (agent, painting era) a numerical
    control module control flow                       value between 0 and 1. Then, reputation transactions in ART
    data module  data flow                            consist of queries about a given couple (agent, painting era)
                                                      and an answer containing the numerical value associated with
Figure 2: General agent architecture for reputation interaction the provider’s model.
                                                        The problem with this common model is that it is too sim-
  This general architecture functions as follow:      ple. The mapping of complex internal reputation models into
                                                      a simplistic one results in a big loss of expressiveness and de-
 1. The interaction module receives a message. If the mes- tails. It is thus impossible to perform ﬁner agent interactions
    sage is about reputation, it is transmitted to the reputa- about reputation.
    tion mapping module.
                                                        Our proposition to use the functional ontology of reputa-
 2. The reputation mapping module analyzes the content of tion as a kind of shared reputation model for interaction has
    the message and transforms it to comply with the repu- been implemented in ART. We have modiﬁed the ART en-
    tation model of the agent. To do so, the reputation map- gine to allow the exchange of messages for reputation trans-
    ping module uses concepts of the functional ontology action and those contents are rough strings (instead of couples
    and the structure of the reputation model. It must also (agent, painting era) or numerical value). It is expected that
    know how to map information from the ontology into these strings were queries and answers written in nRQL. The
    concepts of the agent’s reputation model.         use of nRQL queries about the functional ontology allows an
                                                      agent to formulate a wide range of queries about reputation
 3. The translated message is forwarded to the reputation
                                                      models. To validate this new version of queries, we imple-
    reasoning module. This one can now understand it and
                                                      mented agents that use them in order to formulate the same
    handle it as it should. Reputation reasoning is out of the
                                                      kind of queries than the ones deﬁned in the ﬁrst version of
    scope of our work and it is not studied further here.
                                                      ART. This implementation was mainly a test of the relevance
 4. If the reputation reasoning module needs to interact with of the functional ontology to express such queries. The for-
    other agents, it formulates a message according to its malization of a query in Racer which result is the direct rep-
    own reputation model and sends it to the reputation map- utation of an agent called John for the evaluation of paintings
    ping module.                                      of the Impressionism era is the following:

                                                IJCAI-07
                                                   620(retrieve (?val)                                      4.2  Extending the monitoring facilities
    (and (?val ReputationWeight)                      The ART testbed has been designed to organize competitions
          (?rep DirectReputation)                     between agents using different reputation models in order to
          (?rep ?val  hasReputationValue)
          (?skill Impressionism)                      compare them, but it is also a tool used for experimentation
          (?skill ?target hasReputativeRole)          of a single reputation model. A researcher can thus imple-
          (?target ?rep hasReputation)                ment its own reputation model and evaluate it using the ART
          (John ?skill hasSkill)))                    testbed. But the ﬁrst version of the testbed only allows the
                                                      user of the testbed to state the global performance of its agents
  This query uses the relations between concepts to ﬁnd a (in terms of monetary earnings). It is not possible to fol-
given reputation value. The followed path is graphically rep- low precisely the behaviour and the evolution of a reputation
resented in the ﬁgure 3. As explained before, more concepts model.
than those identiﬁed in section 3.1 are used but only to repre- Our idea is to use the functional ontology, and the map-
sent relations. They are not used to request their values. ping implemented for interaction, to improve the monitoring
                                                      facilities of ART. When we use the ontology for agent-agent
                                                      interaction, it is a way to describe the values of reputation
                                                      concepts at a given time. We think that this approach can also
                             Individual     Impressionism
                              "John"                  be used for agent-human interaction. The ontology, written in
 Reputation
  Value                                               OWL, is a step towards understandability by an human user.
  "?"
                                  hasSkill            Then, if we restrain to the concepts identiﬁed in section 3.1
   hasReputationValue                       isA       to avoid ﬂooding the user with too much information, it can
                                                      be used to describe the state of a reputation model.
                                                        In order to display information according to the concepts of
 Direct hasReputation
                    Target hasReputativeRole Reputative
Reputation                                            the ontology, we modiﬁed two parts of the ART testbed: (i)
                    Role              Skill           The database used to store information about played games
                                                      has been modiﬁed to store the values of concepts of the on-
Figure 3: Query path using the ontology concepts and rela- tology; (ii) The graphical interfaces that read the database to
tions                                                 display information have been adapted to display these con-
                                                      cepts. A screenshot of the modiﬁed ART interfaces is shown
                                                      in ﬁgure 4.
  This query means that the requester asks an instance of
the ReputationValue class that is related to an instance of the
class DirectReputation, related to an instance of the Target-
Role class, related to an instance of ReputativeSkill. This in-
stance of ReputativeSkill should be a subclass of Impression-
ism (the era is represented by the way of an ”isA” relation)
and must be related to the instance of the Individual class that
is called John.
  With this query formulation, we show that our modiﬁca-
tions on the ART testbed still allow to express at least the
same interactions as in the ﬁrst version. Furthermore, it is
now possible to use an elaborated query language to perform
several other requests. The receiver of a query also uses the
same language to answer.
  The reputation mapping module of an agent links the
query to the agents’ internal reputation model. As shown   Figure 4: External display of the reputation model
in section 3.2, an agent using the Cognitive Reputation
Model [Conte and Paolucci, 2002] will interpret the seman- If the developer of the agent has implemented a correct
tics of this message as a query about the “Direct Trust” of mapping of its reputation model into the concepts of the on-
John. Then, it is able to answer this query with the corre- tology, it will now be possible to follow precisely its evo-
sponding value. If the receiver is using a different model, for lution during the game as it can be seen in ﬁgure 4. This
example the Regret model [Sabater and Sierra, 2001],thean- ﬁgure shows the reputation model of an agent called John.
swer can still be understood by the reputation mapping mod- The curves indicate the value of some reputation concepts at
ule. In this case, the term “Image” matches with the required given time steps. Here, the reputation displayed concerned
concept of the ontology and the received value will be con- two other agents named ”Ann” and ”Sue” about their evalu-
sidered as a direct trust value about John. It is also possible ation of paintings of the era ”era1”. The types of reputation
to formulate answers that express that the required concept is that are displayed are the direct reputation of John (the one
not known because it does not exist in the agent’s internal rep- built from its own experience with the targets) and the repu-
utation model. The use of nRQL allows this kind of “empty” tation propagated by Sue. The checkboxes at the right of the
answers.                                              ﬁgure permit a ﬁne selection of the concepts to display. In

                                                IJCAI-07
                                                   621