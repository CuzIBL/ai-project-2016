                          Planning    with   graded    ﬂuents   and  actions

              Marta  Cialdea,  Carla Limongelli,  Andrea   Orlandini, Valentina  Poggioni
                                Dipartimento Informatica  e Automazione
                                    Universita` degli Studi Roma Tre
                               Via  della Vasca Navale, 79 - 00146 Roma
                         {cialdea,limongel,orlandin,poggioni}@dia.uniroma3.it

                    Abstract                          plan applicability and correctness is veriﬁed by means of a
    This work can be seen as a ﬁrst approach to a new translation into a MIP (Mixed Integer Programming) prob-
    planning model that takes into account the possibil- lem and ﬁnally, if a solution of the MIP problem exists, a
    ity to express actions and ﬂuents with non-boolean complete instantiation is made and the solution plan is found.
    values. According to this model, a planning prob-
    lem is deﬁned using both graded (multi-valued) and 2  The  Planning  Language
    classical (boolean) ﬂuents. Moreover, actions that The planning language proposed in this paper is based on
    can have different application degrees can be de- standard PDDL. It provides two kinds of actions and ﬂuents,
    ﬁned. In this work a PDDL extension allowing to   representing both classical boolean ﬂuents and actions, and
    describe such new problems is proposed and a plan- graded ﬂuents and actions. Both actions and ﬂuents have an
    ning algorithm for such problems is presented.    additional argument denoting their “degree of truth”: in a ﬂu-
                                                      ent it means “how much” the predicate is true (0 means that
1  Introduction                                       it is false, 1 that it is true) and in an action it means “how
In the last years, extensions of the classical planning model much” the action is applied (0 means that it is not applied at
have been investigated, such as temporal models, conditional all, 1 means that it is applied with the maximum efﬁciency).
and contingent models, probabilistic models and other mixed The type of such terms is declared as a new type degree in
models (for example [Hoffmann, 2002; Petrick and Bacchus, the PDDL domain deﬁnition. If the ﬂuent is boolean then its
2002; Bonet and Geffner, 2003; Chien and al., 2000]). But, truth-value is a natural number in {0, 1} (as in the classical
to the best of our knowledge, a feature of the classical model model), otherwise, if the ﬂuent is graded, its truth-value is a
has never been modiﬁed: the use of boolean expressions to real number in [0, 1]. The difference between the two kinds
describe ﬂuents and actions in the domains. This is often too of ﬂuents is declared in the domain description. There are
restrictive in order to represent realistic domains because the different declaration sections for boolean and graded predi-
world is not black and white (i.e. true or false) but it has a cates.
lot of colors (i.e. intermediate truth-values, or “degrees of The additional parameter in an action denotes the degree of
truth”). A different approach to planning that takes into ac- application of the action. Again, the value of this parameter
count a numerical “state” associated to a ﬂuent is proposed in boolean actions belongs to {0, 1}, while it ranges in [0, 1]
in the probabilistic planning model, but, in this case, “num- in graded actions. Actions may also have other additional
bers” represent our knowledge or uncertainty about the state parameters referring to ﬂuent degrees. A speciﬁc section in
or the success of an action, while the real world is always action declaration allows one to associate ﬂuents to degree
two-valued.                                           parameters. Such variables maybe used both in preconditions
  This work can be seen as a ﬁrst approach to a new planning and effects: action preconditions may contain inequality con-
model that takes into account the possibility to express both straints over ﬂuent degrees and effects can be described by
actions and ﬂuents with non-boolean values. According to means of expressions that deﬁne the new “degree of truth” of
this model, a planning problem is deﬁned using both graded a ﬂuent as a linear combination of previous ﬂuent values and
(multi-valued) and classical (boolean) ﬂuents; moreover ac- the application degree of the action.
tions having different application degrees can be deﬁned (i.e. The choice to include the degrees among the action pa-
actions having adjustable intensity and that can affect ﬂuents rameters does not increase the complexity of the operators
proportionally to how much they are applied). In such a way, because, as explained in Section3, such parameters are not
also the efﬁciency of actions can be easily represented. instantiated during the solution search phase.
  The work deﬁnes an extension of the planning language The deﬁnition of a graded planning problem may contain
PDDL  that allows us to deﬁne planning domains and plan- an objective function, that is a linear function of the action
ning problems having graded ﬂuents and graded actions, and application degrees that must be minimized or maximized
a solving algorithm for such problems, where ﬁrst a candidate when looking for action degree values satisfying a given par-
plan with partially instantiated actions is constructed, then the tially instantiated plan. For example, it can be used in or-                                                      their values range on ﬁnite sets. Graded ﬂuents could be rep-
                                                      resented in PDDL 2.1 by means of numerical ﬂuents (func-
                                                      tions) but respecting some more restriction w.r.t. what is done
                                                      in this work. However, graded actions are not representable
                                                      at all.
                                                        At the moment we are working in two main directions.
                                                      First of all an algorithm for intelligent backtracking when
                                                      the MIP solver fails and an improvement of the backtracking
                                                      phase when the system constructor fails are under investiga-
                                                      tion. Moreover a set of graded domains and graded problems
                                                      is under construction in order to carry out a wide set of ex-
           Figure 1: The system architecture          periments. The second research direction is theoretical: an
                                                      extension of the algorithm to planning under uncertainty on
der to minimize the cost of the extracted candidate plan giv- the initial state is straightforward, introducing variables for
ing different operator costs. It is deﬁned in a new section ﬂuent degrees in the world construction. Moreover, we are in-
:objective  function(...)  in the problem description. vestigating the possibility of representing and treating vague
                                                      (fuzzy) ﬂuents, using intervals or sets to represent ﬂuent de-
3  System   Architecture                              grees.
The system takes in input a graded planning problem
(I, G, f, O) and if a solution exists it returns a graded solu- References
tion plan P , otherwise,if it terminates it returns a NoSolution [Baioletti et al., 2003] M. Baioletti, A. Milani, and V. Pog-
message. The system architecture is presented in Fig.1: it is gioni. Planning with fuzzy resources. In AI*IA 2003: Ad-
composed by three modules, the plan extractor, the system vances in Artiﬁcial Intelligence. In LNAI 2829, 336-348,
constructor, the MIP solver.                             2003.
  The plan extractor synthesizes a “candidate plan” P = [Bonet and Geffner, 2003] B. Bonet and H. Geffner. Faster
(A1(x1), A2(x2), . . . , Am(xm)) where actions are partially heuristic search algorithms for planning with uncertainty
instantiated, i.e. where all application and ﬂuent degrees are and full feedback. In Proc. of IJCAI 2003, 2003.
unbound but only the variables xi standing for the degree of
                                                      [                ]
application of Ai are in evidence. It implements a simple Chien and al., 2000 S. Chien and al. ASPEN: Automated
backward algorithm with heuristic functions that solves re- planning and scheduling for space mission operation. In
laxed problems. Then the system constructor computes the Proc. of SpaceOps 2000, Colorado (USA), 2000.
world evolution using these actions (the resulting states de- [Fox and Long, 2003] M. Fox and D. Long. PDDL2.1: An
pend on the action application degrees) and reduces the veri- extension to PDDL for expressing temporal planning do-
ﬁcation and full instantiation of the plan to a MIP problem; it mains. JAIR, 20:61–124, 2003.
builds the MIP problem corresponding to a candidate plan [Giunchiglia et al., 2004] E. Giunchiglia, J. Lee, V. Lifs-
and passes it to the MIP solver. During the system con-  chitz, McCain N., and H. Turner. Nonmonotonic causal
struction phase some conditions in the action preconditions theories. Artiﬁcial Intelligence, 153:49–104, 2004.
are directly checked and if they are not satisﬁed the mod-
ule fails and another candidate plan must be extracted. In [Haslum and Geffner, 2000] P. Haslum and H. Geffner.
this case the information about which action causes failure Heuristic planning with resources. In Proc. of ECAI-00,
is used and another candidate plan is constructed replanning 2000.
from this point. Finally the MIP solver computes a solu- [Hoffmann, 2002] J. Hoffmann. Extending FF to numerical
tion of the generated problem; if a solution exists it is a set state variables. In Proc. of ECAI 2002, 2002.
                        ~g = (g1, . . . , gm)
of real and/or integer values           and the plan  [Koehler, 1998] J. Koehler. Planning under resource con-
P =  (A1(g1), . . . , Am(gm))
                         is the graded solution plan of  straints. In Proc. of ECAI-98, 1998.
the given problem, otherwise a new candidate plan is ex-
tracted and a new MIP problem is generated.           [Lee and Lifschitz, 2003] J. Lee and V. Lifschitz. Describing
                                                         additive ﬂuents in action language c+. In Proc. of IJCAI
4  Conclusions   and  related works                      2003, 2003.
In this work a language and a model of planning with graded [Petrick and Bacchus, 2002] R.P.A. Petrick and F. Bacchus.
ﬂuents and actions are presented. A prototype of the system A knowledge-based approach to planning with incomplete
has been developed.                                      information and sensing. In Proc. of AIPS 2002, 2002.
  To the best of our knowledge this is the ﬁrst system able
to manage non boolean ﬂuents and actions. Recent works
have proposed languages [Fox and Long, 2003; Giunchiglia
et al., 2004; Lee and Lifschitz, 2003] and systems (for exam-
ple [Koehler, 1998; Baioletti et al., 2003; Hoffmann, 2002;
Haslum and Geffner, 2000]) that can handle numerical val-
ues. Degrees can be represented in PDDL 2.1, but only if