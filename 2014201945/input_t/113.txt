              Universal Voting Protocol Tweaks to Make Manipulation Hard* 

                                    Vincent Conitzer and Tuomas Sandholm 
                                             Carnegie Mellon University 
                                           Computer Science Department 
                                                 5000 Forbes Avenue 
                                             Pittsburgh, PA 15213, USA 
                                          {conitzer,sandholm} @cs.cmu.edu 

                        Abstract                               of goods or resources, etc. Voting is the most general prefer­
                                                               ence aggregation scheme, and has been used in several multi-
     Voting is a general method for preference aggrega­        agent decision making problems in AI, such as collaborative 
     tion in multiagent settings, but seminal results have     filtering (e.g. [Pennock et ai, 2000]) and planning among au­
     shown that all (nondictatorial) voting protocols are      tomated agents (e.g. lEphrati and Rosenschein, 1991; 19931). 
     manipulable. One could try to avoid manipula­                A key problem voting mechanisms are confronted with is 
     tion by using voting protocols where determining          that of manipulation by the voters. An agent is said to vole 
     a beneficial manipulation is hard computationally.        strategically when it does not rank the alternatives accord­
     A number of recent papers study the complexity            ing to its true preferences, but differently so as to manipulate 
     of manipulating existing protocols. This paper is         the outcome to be more favorable to the agent. For exam­
     the first work to take the next step of designing         ple, if an agent prefers Nader to Gore to Bush, but knows that 
     new protocols that are especially hard to manip•          Nader has too few other supporters to win, while Gore and 
     ulate. Rather than designing these new protocols          Bush are close to each other, the agent would be better off by 
     from scratch, we instead show how to tweak ex­            declaring Gore as its top candidate. Manipulation is an unde­
     isting protocols to make manipulation hard, while         sirable phenomenon. For one, because social choice schemes 
     leaving much of the original nature of the protocol       are tailored to aggregate preferences in a socially desirable 
     intact. The tweak studied consists of adding one          way, and if the agents reveal their preferences insincerely, a 
     elimination preround to the election. Surprisingly,       socially undesirable candidate may be chosen. 
     this extremely simple and universal tweak makes 
                                                                  A seminal negative result, the Gibbard-Satterthwaite theo•
     typical protocols hard to manipulate! The proto­
                                                               rem, shows that if there are three or more candidates, then in 
     cols become NP-hard, #P-hard, or PSPACE-hard 
                                                               any nondictatorial voting scheme, there are preferences un­
     to manipulate, depending on whether the sched­
                                                               der which an agent is better off voting strategically [Gibbard, 
     ule of the preround is determined before the votes 
                                                               1973; Satterthwaite, 1975]. (A voting scheme is called dicta­
     are collected, after the votes are collected, or the 
                                                               torial if one of the voters dictates the social choice no matter 
     scheduling and the vote collecting are interleaved, 
                                                               how the others vote). In automated group decision making 
     respectively. We prove general sufficient condi­
                                                               where the voters are software agents, the manipulability of 
     tions on the protocols for this tweak to introduce        protocols is even more problematic, for at least two reasons. 
     the hardness, and show that the most common vot­          First, the algorithms they use to decide how to vote must be 
     ing protocols satisfy those conditions. These are         coded explicitly. Given that the voting algorithm needs to be 
     the first results in voting settings where manipula­      designed only once (by an expert), and can be copied to large 
     tion is in a higher complexity class than NP (pre­        numbers of agents (even ones representing unsophisticated 
     suming PSPACE NP).                                        human voters), it is likely that rational strategic voting will in­
                                                               creasingly become an issue, unmuddied by irrationality, emo­
1    Introduction                                              tions, etc. Second, software agents have more computational 
                                                               power and are more likely to find effective manipulations. 
Often, a group of agents has to make a common decision, yet       We take the following tack toward avoiding manipulation: 
they have different preferences about which decision is made.  ensuring that finding a beneficial manipulation is so hard 
Thus, it is of central importance to be able to aggregate the  computationally that it is unlikely that voters will be able to 
preferences, that is, to make a socially desirable decision as to manipulate. So, unlike in most of computer science, here 
which candidate is chosen from a set of candidates. Such can­  high computational complexity is a desirable property. The 
didates could be potential presidents, joint plans, allocations harder it is to manipulate, the better. 
   "The material in this paper is based upon work supported by the Prior work on the complexity of manipulating elections 
National Science Foundation under CAREER Award IRI-9703122,    has focused on existing protocols iBartholdi et a/., 1989; 
Grant IIS-9800994, ITR IIS-0081246, and TTRIIS-0121678.        Bartholdi and Orlin, 1991; Conitzer and Sandholm, 2002a]. 


MULTIAGENT SYSTEMS                                                                                                    781  This paper is the first to take the next step of designing      The standard definitions of most voting protocols allow for 
 new protocols that are especially hard to manipulate. Rather  the possibility of ties between candidates, in which case a tie-
 than designing these protocols from scratch, we show how to   breaking rule is required to fully specify the protocol. All our 
 tweak existing protocols to make manipulation computation­    results hold for any tie-breaking rule, so we do not need to 
 ally much more difficult, while leaving much of the original  specify such rules here. 
 nature of the protocol intact, for the following reasons:       In this paper we apply our technique to the most common 
                                                               voting protocols (in these definitions, whenever points are de­
     Results on the computational complexity induced by a 
                                                               fined, the candidate with the most points wins): 
     tweak typically apply to a large family of protocols. 
                                                                    Plurality. A candidate receives 1 point for every voter 
     Many of the original protocol's nice theoretical proper­
                                                                    that ranks it first. (Thus, the voters effectively only vote 
     ties are preserved by the tweak. 
                                                                    for one candidate.) 
     In practice, it will be much easier to replace a currently 
                                                                    Borda. For each voter, a candidate receives m - 1 points 
     used protocol with a tweaked version of it, than with an 
                                                                    if it is the voter's top choice, m - 2 if it is the second 
     altogether new protocol. 
                                                                    choice,..., 0 if it is the last. 
   The type of tweak we study in this paper is the follow­
                                                                    Maximin. A candidate's score in a pairwise election is 
ing. All the candidates are paired in a preround; of each pair 
                                                                    the number of voters that prefer it over the opponent. A 
of candidates, only the winner of their pairwise election sur­
                                                                    candidate's number of points is the lowest score it gets 
vives. (The winner of the pairwise election between two can­
                                                                    in any pairwise election. 
didates is the candidate that is ranked above the other more 
often in the votes.) After the preround, the original protocol      Single Transferable Vote (STV). The winner determina­
is executed on the remaining candidates. The schedule of the        tion process proceeds in rounds. In each round, a candi­
preround (i.e., who faces who) can be determined before the         date's score is the number of voters that rank it highest 
votes are collected; after the votes are collected; or while the    among the remaining candidates, and the candidate with 
votes are collected (the processes are interleaved). We study       the lowest score drops out. The last remaining candidate 

these three cases in Sections 4, 5, and 6, respectively. l          wins. (A vote '"transfers" from its top remaining can­
                                                                   didate to the next highest remaining candidate when the 
2    Definitions                                                   former drops out.) 

2.1   Elections and voting protocols                           2.2   Preround 
An election consists of a set of candidates C\ a set of voters The tweaks we study in this paper all involve the addition of 
V\ and a protocol for deciding on a winner w € C given all     a preround. We will now define how this works. 
the voters' votes. (Here, a vote is a total ordering of the candi­
                                                               Definition 1 Given a protocol P, the new protocol obtained 
dates.) A deterministic protocol is a function from the set of 
all combinations of votes to C. (All our results hold even for by adding a preround to it proceeds as follows : 
unweighted voters, so in this paper this function will always    1. The candidates are paired. If there is an odd number of 
treat the voters symmetrically.) A randomized protocol is a        candidates, one candidate gets a bye. 
function from the set of all combinations of votes to proba­
                                                                2. In each pairing of two candidates, the candidate losing 
bility distributions over C. An interleaved protocol is a pro­
cedure for alternating between collecting parts of the voters'     the pairwise election between the two is eliminated. A 
votes (e.g. whether they prefer candidate a to candidate /;)       candidate with a bye is never eliminated. 
and drawing and publishing random variables (such as parts      3. On the remaining candidates, P is executed to produce 
of the schedule for an election), together with a function from    a winner. For this, the implicit votes over the remaining 
the set of all combinations of votes and random variables to       candidates are used. (For example, if a voter voted a y 
C. (Collecting only parts of the voters' preferences is also       b c d c, and b and c were eliminated, the voter's 
known as elicitation.)                                             implicit vote is ad e.) 

    The high complexity results obtained in this paper are depen­ The pairing of the candidates is also known as the schedule 
dent on the number of candidates growing. This places them in for the preround. If the schedule is decided and published be•
line with all the early results in this area [Bartholdi et al, 1989; fore the votes are collected, we have a deterministic preround 
Bartholdi and Orlin, 1991], but in contrast with more recent re­ {DP RE), and the resulting protocol is called DP RE + P. If 
sults [Conitzcr and Sandholm, 2002a] that show high complexity the schedule is drawn completely randomly after the votes are 
of manipulation with a constant number of candidates for some pro­ collected, we have a randomized preround (RPRE), and the 
tocols. Having high complexity of manipulation occur with a con­ resulting protocol is called RPRE + P. Finally, if the votes 
stant number of candidates already is certainly preferable to having are elicited incrementally, and this elicitation process is in•
it occur only with a growing number. On the other hand, unlike in 
                                                               terleaved with the scheduling-and-publishing process (which 
that paper, the results here hold even when the voters all have equal 
weight, and even when manipulation is attempted by an individual is again done randomly), as described in detail in Section 6, 
rather than a coalition, making the results in this paper stronger in we have an interleaved preround (IPRE), and the resulting 
that sense, so there is a tradeoff.                           protocol is called I PRE + P. 


782                                                                                             MULTIAGENT SYSTEMS 2.3   Manipulation                                             (i.e., a SAT instance), to construct in polynomial time a set 
We now define the computational problem of manipulation.       of votes over a candidate set containing at least 
Because all our hardness results hold even when the voters     where (L is the set of literals  
are unweighted, only a single voter is trying to manipulate,                       , where V is the set of variables used in 
and all the other voters' votes are known to the manipulator,    , with the following properties: 
we will only define this simple setting here. Any hardness          (Property la) If we remove, for each one of 
results in this simple setting immediately imply hardness in            and p would win an election under protocol P 
all more general settings.                                          against the remaining candidates if and only if for every 
Definition 2 (CONSTRUCTIVE-MANIPULATION)                            clause (where K is the set of clauses in , there 
 We are given a protocol P, a candidate set C, a preferred          is some I L such that ci has not been removed, and I 
candidate p, and a set of votes S corresponding to all the          occurs in k. This should hold even if a single arbitrary 
other voters* votes. The manipulator has yet to decide on           vote is added. 
its vote, and wants to make p win. Then the constructive            (Property lb) For any and are tied in 
manipulation question is:                                           their pairwise election after these votes. 
     (For deterministic protocols) Can the manipulator cast    Then CONSTRUCTIVE-MANIPULATION in DP RE + P is 
     its vote to make p win under                              NP-hard (and NP-complete if P is deterministic and can be 
     (For randomized protocols) Can the manipulator cast its   executed in polynomial time). 
     vote to make the probability of p winning under P at 
     least some given                                          Proof: Consider the following election under DPRE + P. 
                                                               Let the candidate set be the set of all candidates occurring 
     (For interleaved protocols) Given the initial random      in the votes constructed from (the "original candidates"), 
     choices (if any) by the protocol, is there a contingency  plus one dummy candidate for each of the original candidates 
     plan (based on the random decisions the protocol takes    besides those in C^. To each of the constructed votes, add 
     between eliciting parts of the votes) for the manipula•   all the dummy candidates at the bottom; let the resulting set 
     tor to answer the queries to make the probability of p    of votes be the set of the nonmanipulators' votes. A single 
     winning under P at least some given                       manipulator's vote is yet to be added. Let the schedule for 
                                                               the preround be as follows: for each and face 
3   Complexity of manipulating untweaked                       each other in the preround; and every other original candidate 
     protocols                                                 faces (and, because of the dummy candidates' position in the 
                                                               votes, defeats) a dummy candidate. Thus, the set of candi­
In this section, we briefly review the complexity of ma­       dates that make it through the preround consists of, for each 
nipulating voting protocols, as a benchmark for our re­            ", one of andand all the other original candi­
sults. CONSTRUCTIVE-MANIPULATION is in P for the 
Plurality, Borda, and Maximin voting protocols iBartholdi      dates. The manipulator's vote will decide the winner of every 
et al, 1989]. The only voting protocol for which                           match-up, because by property lb, all these pair-
CONSTRUCTIVE-MANIPULATION is known to be NP-                   wise elections are currently tied. Moreover, it is easy to see 
hard is the STV protocol [Bartholdi and Orlin, 1991 ].2        that the manipulator can decide the winner of each of these 
                                                               match-ups independently of how it decides the winners of the 
4   NP-hardness when scheduling precedes                       other match-ups. Thus, we can think of this as the manipu­
    voting                                                     lator giving the variables truth-values: v is set to true if 
                                                               survives, and to false if survives. By property la it then 
In this section, we examine the complexity induced by the      follows that wins if and only if the manipulator's assign­
preround when the voters know the schedule before they vote.   ment satisfies all the clauses, i.e. is a solution to the SAT 
4.1   A sufficient condition for NP-hardness                   instance. Hence there is a successful constructive manipu­
                                                               lation if and only if there is a solution to the SAT instance, 
We present a sufficient condition under which adding a pre­    and it follows that CONSTRUCTIVE-MANIPULATION in 
round with a preannounced schedule makes manipulation          DPRE 4 P is NP-hard. (It is also in NP if P is deterministic 
NP-hard. The condition can be thought of as an NP-hardness     and can be executed in polynomial time, because in this case, 
reduction template. If it is possible to reduce an arbitrary SAT given a vote for the manipulator, it can be verified in polyno­
instance to a set of votes satisfying certain properties under mial time whether this vote makes p win).  
the given voting protocol, that protocol—with a preround— 
is NP-hard to manipulate.                                      4.2   Examples 
Theorem 1 Given a voting protocol P, suppose that it is pos•   We now show how to apply Theorem 1 to the well-known 
sible, for any Boolean formula in conjunctive normal form      protocols we discussed, thus showing that each of these 
                                                               protocols—with a preround—is NP-hard to manipulate. 
   2CONSTRUCnVE-MANTPULATION is NP-hard also for the 
Second Order Copeland protocol [Bartholdi et a/., 1989], but the Theorem 2 There exists a reduction that satisfies properties 
hardness is driven solely by the tie-breaking rule.            la and lb of Theorem 1 under the Plurality protocol. 


MULTIAGENT SYSTEMS                                                                                                   783    When it does not matter for our proofs whether a given vote and any other c^ will be at least AM points behind p. Finally, 
 is we write                                                   from the last remaining two votes, any will gain 
 Proof: Given the formula , let the candidate set be the min-                         points on p. It follows that p wins if 
 ithally required candidates "' plus a set of candidates       and only if for every clause there is some with 
corresponding to the set of clauses K of , CK =                      such that c\ has not been removed. In both cases there 
    . Then, let the set of votes be as follows: votes is a "margin" of at least points, so a single additional 
 ranking the candidates for each                               vote will not change this. Thus, property la is satisfied. ■ 
 votes ranking the candidates  
         and for each votes ranking the candidates             Theorem 4 There exists a reduction that satisfies properties 
                                                               la and lb of Theorem 1 under the Maximin protocol 
                    Additionally, we require that these votes 
are such that after counting them, for each and Proof: Given the formula , let the candidate set be the min­
     are tied in their pairwise election, so that property lb is imally required candidates plus a set of candidates 
satisfied. (This is possible because the total number of votes corresponding to the set of clauses K of   
is even, and the majority of the votes do not yet have any re­

strictions on the order of the CL.) We now show property la 
is satisfied. We first observe that regardless of which of the 
candidates corresponding to literals are removed, p will get 
          votes. Now, if for some all the candidates 
ci with are removed, then Ck will get at least 
          votes and p will not win. On the other hand, if for 

each at least one candidate ct withremains,  
then each of the c* will get precisely votes. Because 
each remaining cj can get at most votes as well, p will 
win. In both cases there is a "margin" of at least 2, so a sin­ are such that after counting them, for each v e V, c+v and 
gle additional vote will not change this. Thus, property la is c-v are tied in their pairwise election, so that property lb is 
satisfied.                                                     satisfied. (This is possible because the total number of votes 
                                                               is even, and the majority of the votes do not yet have any 
Theorem 3 There exists a reduction that satisfies properties   restrictions on the order of the C/.) We now show property 
la and lb of Theorem 1 under the Borda protocol                la is satisfied. Regardless of which of the candidates corre­
                                                               sponding to literals are removed, p's worst score in a pairwise 
Proof: Given the formula , let the candidate set be the min­   election is against any of the c/c, namely 16 + 2. Any c^ 
imally required candidates plus a set of candi­                for which all the cl with / k have been removed will get its 

dates corresponding to the set of clauses K of CK =            worst pairwise election score against any of the CL, namely 
                   which we order in some arbitrary way        16 + 4. Finally, any other Ck will get its worst pairwise 
to get Let M be the total number of can­                       election score against one of the Q with / k, namely, 16 
didates this defines. Then, let the set of votes be as fol­    It follows that p wins if and only if for every clause k e K 
lows: for every , AM votes ranking the candidates              there is some / K such that cl has not been removed. In both 
                                                               cases there is a "margin" of at least 2, so a single additional 
                                                               vote will not change this. Thus, property la is satisfied. ■ 
(here, the slight abuse of notation means that / oc­
curs in the clause corresponding to c»;) AM votes ranking the  Theorem 5 There exists a reduction that satisfies properties 
candidates one vote                                            la and lb of Theorem 1 under the STV protocol 
                                 one vote  
                      and finally, A\K\M votes ranking the     Proof: We omit the proof due to limited space. ■ 
candidates and  
votes ranking the candidates                                   Theorem 6 In any of DPRE + Plurality, DP RE + 
Additionally, we require that these votes are such that after  Borda, DPRE + Maximin, and DPRE + STV3 , 
counting them, for each and are tied in their                  CONSTRUCTIVE-MANIPULATION is NP-complete. 
pairwise election, so that property lb is satisfied. (This is 
possible because the total number of votes is even, and the    Proof: NP-hardness is immediate from the previous theo­
majority of the votes do not yet have any restrictions on the  rems. The problem is in NP because these protocols can be 
order of the Q.) We now show property la is satisfied. It is 
                                                                  3The NP-completeness of manipulating DPRE + STV is, in 
easy to see that none of the Q can win, regardless of which of itself, not that interesting, because STV is already NP-hard to ma­
them are removed. Thus, we only need to consider the Ci and    nipulate without the preround as we discussed. Nevertheless, our 
p. The last votes will have no net effect on the rela­         method highlights a different aspect of the NP-hardness of manip­
tive scores of these candidates, so we need not consider these ulating DPRE + STV. We build on this reduction later to prove 
here. After the first M votes, any ck for which                PSPACE-hardness of manipulating STV with a preround when the 
all the ci with have been removed will be tied with p,         scheduling of the preround is interleaved with the vote clicitation. 


784                                                                                             MULTIAGENT SYSTEMS executed in polynomial time.                                   2c, it follows that p wins if and only if the preround pairing 
                                                               corresponds to a matching in B. Thus the probability of p 
   In the next sections, we will raise the bar and bring 
                                                               winning is , where ms is the number of matchings 
the problem of manipulating elections to higher complexity 
classes by abandoning the assumption that the schedule for     in B and e(2fc, 2fc + 1) is the number of different ways to pair 
the preround should be known in advance.                       2k of the 2k -f 1 candidates in the preround (which is straight-
                                                               forward to compute). Thus, evaluating p's chances of win­
5     P-hardness when voting precedes                          ning in this election is at least as hard as counting the num­
                                                               ber of matchings in an arbitrary B, which is P-hard. More­
     scheduling                                                over, because we can compute p's chances of winning solely 
In this section, we will examine the complexity induced by     on the basis of properties 2a, 2b, and 2c, and by property 
the preround when the schedule is drawn completely (uni­       2d, these properties are maintained for any single additional 
formly) randomly after all the votes have been collected.      vote, it follows that a manipulator cannot affect p's chances 
                                                               of winning. Thus, CONSTRUCTIVE-MANIPULATION in 
5.1   A sufficient condition for P-hardness                    this case simply comes down to computing p's chances of 
We present a sufficient condition for a voting protocol to be­ winning, which is P-hard as demonstrated. ■ 

come #P-hard4 to manipulate in this setting. Again, this con­
dition can be thought of as a reduction template. If it is possi­ 5.2 A broadly applicable reduction 
ble to reduce an arbitrary PERMANENT instance to a set of      In this subsection we present a single broadly applicable re­
votes satisfying certain properties under the given voting pro­ duction which will satisfy the precondistions of Theorem 7 
tocol, that protocol is P-hard to manipulate when a random­    for many voting protocols, including all of the protocols dis­
ized preround is added to it. (In the PERMANENT problem,       cussed in this paper, thus proving them #P-hard to manipulate 
we are given a bipartite graph B with the same number of       when the voting precedes the preround scheduling. 
vertices k in both parts, and are asked how many matchings 
there are. This problem is P-complete [Valiant, 1979].)        Definition 3 We label the following reduction R\. Given a 
                                                               bipartite graph B with the same number of vertices k in both 
Theorem 7 Given a voting protocol P, suppose that it is pos•   parts (labeled 1 to k in one part, k-\-lto2k in the other), we 
sible, for any bipartite graph B with the same number of ver•
                                                               construct the following set of 12k3 + 2k2 votes: 
tices k in both parts (labeled 1 to k in one part, k + 1 to 2k 
in the other), to construct in polynomial time a set of votes 

over the candidate set {c1,..., c2k, p} (where c1 corresponds 
to vertex i in B) with the following properties: 

     (Property 2a) If we remove k of the ci, p would win an 
     election under protocol P against the remaining c1 if and 
     only if the removed c1 are exactly all the ct with k +1 2K 
     i 2k; 

     (Property 2b) p loses its pairwise election against all c1 
     with k+1 i 2k; 

     (Property 2c) For any life and K: +1 j 2k, c2 

     defeats c3 in their pairwise election if and only if in B, 
     there(Property is an 2d) edge All between the previous vertices properties i and j. still hold with 
     any additional single vote. 
Then CONSTRUCTIVE-MANIPULATION in RPRE + P is 
#P-hard. 

Proof: Given the set of votes constructed on the basis of an ar­
bitrary B, let us compute the probability that p wins under the 
protocol RPRE + P with only these votes. In the preround, 
there are k matches and one bye. By property 2a, p will win 
the election if and only if the k candidates eliminated in this 
preround are precisely all the C* with k + 1 i 2k. By 
property 2b, p could not win a preround match against any of     We now have to show that this reduction satisfies the pre­
these, so p will win the election if and only if it gets the bye, conditions of Theorem 7. We start with the properties that are 

and each of the c3 with k+1 j 2k faces one of the cx with      protocol-independent. 
1 i k that defeats it in the preround. Then, by property 
                                                               Theorem 8 R\ satisfies properties 2b and 2c of Theorem 7 

   4 P is the class of problems where the task is to count the number (under any protocol P, because these properties are indepen•
of solutions to a problem in NP.                               dent of P), even with a single additional arbitrary vote. 


MULTIAGENT SYSTEMS 