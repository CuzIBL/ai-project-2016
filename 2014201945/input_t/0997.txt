    From knowledge-based programs to graded belief-based programs, part II:
                                         off-line reasoning
                       Noël Laverny                                 Jérôme Lang
                           IRIT                                         IRIT
                  Université Paul Sabatier                     Université Paul Sabatier
              31062 Toulouse Cedex, France                 31062 Toulouse Cedex, France
                      laverny@irit.fr                                lang@irit.fr

                    Abstract                          that answers, although not fully reliable, are normally cor-
                                                      rect. Each time A gets a direction conﬁrming (resp. contra-
    Belief-based programs generalize knowledge-       dicting) her current belief, this belief becomes stronger (resp.
    based programs [Fagin et al., 1995] by allowing   weaker). Now, the assumption that answers are normally cor-
    for incorrect beliefs, unreliable observations,   rect implies, for instance, that if A has already got 3 “right”
    and branching conditions that refer to implicit   and no “left” then the next answer is more likely to be “right”
    graded beliefs, such as in “while my belief about again than “left”: the plausibility of getting an observation
    the direction to the railway station is not strong depends on the current state.
    enough do ask   someone”.  We show  how  to         Coping with this issue results in a natural way in second-
    reason off-line about the possible executions of a order uncertainty when projecting a belief state by a BBP: in
    belief-based program, which calls for introducing our example, the agent is able to predict beforehand some-
    second-order uncertainty in the model.            thing like “after asking 5 pedestrians, normally I’ll have a
                                                      very ﬁrm belief about the direction to the station, although
                                                      I cannot totally exclude the possibility that I’ll have only a
1  Introduction                                       weak, or even a totally void belief”. Such a complex belief
Knowledge-based programs, or KBPs [Fagin et al., 1995] state is a belief state about (future) belief states, that is, a
are a powerful notion for expressing action policies in second-order belief state. Thus, the main concern of this pa-
which branching conditions refer to knowledge (an agent per is how to do a priori reasoning about the possible states of
acts according to what he knows), such as, typically, belief produced by executing the program: uncertainty about
              if Kϕ  then  π else π0                  which of these states of belief will result is itself represented
where K is an epistemic (usually S5) modality, and π, π0 as a ranking over states of belief.
are subprograms. However, branching conditions in KBPs  After recalling some background in Section 2, belief-based
cannot refer to possibly erroneous beliefs or to graded be- programs are introduced in Section 3. Section 4 deals with
lief, such as in “repeat ask to someone about the way to complex belief states and their progression by actions and
the railway station until my belief about the direction to programs. In Section 5 we show how to compute progres-
take is strong enough”. Recently, [Laverny and Lang, 2004] sion syntactically. Related work is discussed in Section 6.
made a ﬁrst step towards reasoning with belief-based pro-
grams (BBPs), where knowledge modalities of KBPs are re- 2 Background
placed by graded belief modalities, whose semantics relies In this Section we brieﬂy recall some notions from [Laverny
on belief states deﬁned as ranking functions, which can be and Lang, 2004]. Let P S be a ﬁnite set of propositional sym-
revised by observations and progressed by physical actions, bols. LP S is the (non-modal) propositional language gener-
which enables the agent to maintain his current belief state ated from P S, the usual connectives and the Boolean con-
about the world while executing a BBP. Note that BBPs ex- stants > and ⊥. S = 2P S is the set of states associated with
tend a restricted class of KBPs, in which (a) there is a single P S. Formulas of LP S are said objective. If ϕ ∈ LP S
agent, (b) the agent has perfect recall and (c) branching con- then Mod(ϕ) = {s ∈ S|s |= ϕ}. For A ⊆ S, F orm(A) is
ditions concern the agent’s knowledge about the present state the objective formula (unique up to logical equivalence) such
of the world.                                         that Mod(F orm(A)) = A.
  However, [Laverny and Lang, 2004] cannot deal with off- Belief states are identiﬁed with ordinal conditional func-
line reasoning about the effects of a belief-based program. tions (OCF) [Spohn, 1988]: a belief state is a function κ :
Assume for instance that agent A is looking for the way to S 7−→ N, where N = N∪{+∞}, such that mins∈S κ(s) = 0.
the railway station in a foreign town; her initial belief state is κ is lifted from S to LP S by κ(ϕ) = min {κ(s) | s |= ϕ},
void, and she follows a plan consisting in sequentially asking with the convention min(∅) = +∞ (we will use this conven-
to several pedestrians about the direction to follow, until she tion throughout the paper without recalling it). κ(s) can be
has acquired a sufﬁcient level of certainty. Assume moreover seen as the exceptionality degree of s. In particular, κ(s) = 0means that s is a normal state and κ(s) = +∞ that s is to- Bnϕn ∧ . . . ∧ B1ϕ1; without loss of generality we can as-
tally impossible. For any ϕ ∈ LP S, the belief state κϕ is sume ϕi |= ϕi+1, since B∞ϕ∞ ∧ Bnϕn ∧ . . . ∧ B1ϕ1 is
                 
                   0      if s |= ϕ                   equivalent to B∞ϕ∞ ∧ Bn(ϕ∞   ∧ ϕn) ∧ . . . ∧ B1(ϕ∞ ∧
deﬁned by κϕ(s) =                  . In particular, κ>
                   +∞     if s |= ¬ϕ                  ϕn ∧ . . . ∧ ϕ1). There is a one-to-one correspondance be-
                                                      tween belief states and satisﬁable PC formulas (modulo log-
is the void belief state: ∀s, κ>(s) = 0.
  Beliefs are expressed syntactically in a graded extension ical equivalence): for each κ, the PC formula G(κ) = Φκ
                                                      is deﬁned as B∞ϕ∞  ∧ Bnϕn  ∧ . . . ∧ B1ϕ1, where n =
KD45G  of KD45, whose language LP S is deﬁned as fol-                                                  ∗
lows:                                                 max{k <  ∞, ∃s such that κ(s) = k}, and for every i ∈ N ,
  (a) if ϕ ∈ LP S then B1ϕ, B2ϕ, . . . , B∞ϕ are in LP S; ϕi = F orm({s, κ(s) < i}). (Note that n is ﬁnite, because
  (b) if Φ and Ψ in LP S then ¬Φ, Φ ∨ Ψ, Φ ∧ Ψ in LP S. S is ﬁnite and min κ = 0.) For instance, let κ([a, b]) = 0,
                                                 1
  Note that LP S considers only subjective and ﬂat formulas . κ([a, ¬b]) = 1, κ([¬a, b]) = 3 and κ([¬a, ¬b]) = ∞, then
Formulas of LPS are denoted by capital Greek letters Φ, Ψ Φκ = B∞(a∨b)∧B3a∧B2a∧B1(a∧b) – which is equivalent
etc. while objective formulas are denoted by small Greek let- to B∞(a ∨ b) ∧ B3a ∧ B1b. Conversely, for each satisﬁable
ters ϕ, ψ etc. Biϕ intuitively means that the agent believes ϕ PC formula Ψ there is a belief state κΨ = H(Ψ) such that
with strength i. The larger i, the stronger the belief expressed G(H(Ψ)) ≡ Ψ. G(κ) represents all the agent believes in κ2.
by Bi, and B∞ is a knowledge (true belief) modality.  We will sometimes make the following slight abuse of nota-
  The truth of a formula of LPS in an belief state κ is deﬁned tion: when a PC formula Ψ is equivalent to a shorter (but not
                                                                  0
by:                                                   PC) formula Ψ , we write κΨ0 instead of κΨ. For instance, the
                                                                Ψ =  B  ϕ  > ∧ B > ∧ B r ∧ B r
  (a) for ϕ objective and i ∈ N, κ |= Biϕ iff κ(¬ϕ) > i; PC formula   ∞  ∞      3     2     1 is equivalent
  (b) κ |= Φ ∨ Ψ iff κ |= Φ or κ |= Ψ;                to B2r, therefore we write κB2r instead of κΨ.
  (b) κ |= Φ ∧ Ψ iff κ |= Φ and κ |= Ψ;
  (c) κ |= ¬Φ iff κ 6|= Φ.                            3   Belief-based programs
  Thus, κ |= Biϕ holds as soon as any countermodel of ϕ
is exceptional at least to the degree i, or, equivalently, that Belief-based programs (BBP) are built up from a set of ac-
all states such that κ(s) < i are models of ϕ. In particular, tions ACT and program constructors:
B1ϕ is satisﬁed when all normal states satisfy ϕ, and B∞ϕ is • the empty plan λ is a BBP;
satisﬁed when all possible states (to any degree) are models
                                                        •        α ∈ ACT  α
of ϕ.                                                     for any        ,  is a BBP;
                                                                   0                0
  An observation is a belief state κobs, representing all we • if π and π are BBPs then (π; π ) is a BBP;
observe when getting the observation. Observations can be
                                                        • if π  and  π0 are BBP   and  Φ   ∈   L   , then
incomplete and partially unreliable (see [Laverny and Lang,                                     PS
                                                          (if  Φ  then  π else   π0) and (while Φ  do  π)
2004] for examples). The agent revises her current belief state
                                                          are BBPs.
by an observation by combining both: the revision of κ by
κobs is undeﬁned when minS(κ + κobs) = ∞, and otherwise Thus, a BBP is a program whose branching conditions are
is the belief state deﬁned by                         doxastically interpretable: the agent can decide whether she
                                                      believes to a given degree that a formula is true (whereas she
 ∀s ∈ S, (κ ⊕ κobs)(s) = κ(s) + κobs(s) − min(κ + κobs)
                                      S               is generally unable to decide whether a given objective for-
                                                      mula is true in the actual world). For instance, the agent per-
In particular, κ> ⊕ κobs = κobs and (κ ⊕ κϕ) = κ(.|ϕ),
where κ(.|ϕ) is Spohn’s conditioning [Spohn, 1988].   forming the BPP
  A physical action α is a feedback-free action (that is, it
                                                           π =   while  ¬(B2r ∨ ¬B2¬r)   do ask;
possibly changes the state of the world but does not give any
                                                                 if  B2r then   goright else  goleft
feedback), deﬁned by a transition model consisting of a col-
                                       0
lection of belief states {κα(.|s), s ∈ S}. κα(s |s) is the ex- performs the sensing action ask until she has a belief
ceptionality degree of the outcome s0 when performing α in ﬁrm enough (namely of degree 2) about the way to follow
state s. The progression of a belief state κ0 by α is the belief (whether π is guaranteed to stop is a good question!).
state κ  α = κ(.|κ0, α) deﬁned (cf. [Boutilier, 1998]) by Progression and revision in [Laverny and Lang, 2004] are
                                      0         0     used for maintaining the agent’s current belief state while the
∀s ∈ S, (κ  α)(s) = κ(s|κ0, α) = min {κ(s ) + κα(s|s )}
                              s0∈S                    program is being executed. However, predicting the future
                                                      possible states resulting from the execution of a BBP before it
  A positive formula of LPS is a formula where no Bi  has started to be executed (off-line evaluation) cannot be done
appears in the scope of negation. A positive conjunctive in a satisfactory way. Consider π = ask; ask; ask; ask, con-
(PC) formula of LPS is a formula of the form B∞ϕ∞ ∧   sisting in asking in sequence to 4 pedestrians about the way
                                                      to the station. Assume that each occurrence of ask can send
  1This restriction is made for the sake of simplicity; it would be
possible to consider nested modalities, and then prove, as it is the 2This could be formalized by extending our language with
case in KD45, that each formula is equivalent to a ﬂat formula, but graded doxastic versions O1, . . . , O∞ of the only knowing modality
this issue has no relevance to the issues dealt with in this paper. (e.g. [Levesque and Lakemeyer, 2000]), Oiϕ meaning that all the
Likewise, combinations of objective and subjective formulas do not agent believes to the degree i is ϕ. Due to space limitations we must
play any role either for expressing belief-based programs. omit the details.back obs1 = κB1r or obs2 = κB1¬r, corresponding respec- Deﬁnition 2 Let OBS ⊆ BS be a ﬁnite set of possible ob-
tively to a pedestrian telling that the station is on the right servations (recall that observations are belief states). An ob-
(resp. left), taken with some limited reliability (for the sake servation model is a collection of functions
of simplicity we exclude “don’t know” answers). Then all
                                                                    κOBS(.|s, α) : OBS → N
we can predict is that after doing π the agent will be in one
                                            3         for every α ∈ ACTS and every s ∈ S, such that:
of the 5 belief states κB4r, κB4¬r, κB2r, κB2¬r, κ> . The
point now is that obs1 and obs2 cannot always be considered 1. for every α ∈ ACTS and every s ∈ S,
as likely as each other: for instance, we may wish to express         minobs∈OBS κOBS(obs|s, α) = 0
that accurate observations are more frequent than inaccurate 2. for every obs ∈ OBS, if obs(s) = ∞ then for every
ones. Therefore, observations should be ranked by their plau- α ∈ ACTS, κOBS(obs|s, α) = ∞.
sibility of occurrence given the current state and the sensing
                                                        κOBS(obs|s, α) is the exceptionality degree of getting ob-
action performed. Then, the projection of an initial belief servation obs as feedback when executing the sensing action
state by a program results in a second-order (or complex) be- α in state s. This deﬁnition ﬁrst appears in [Boutilier et al.,
lief state: in our example, one would expect to obtain that 1998], and is similar in spirit to correlation probabilities be-
after asking to two persons, then normally the agent is the be- tween states and observations in partially observable Markov
lief state κ or in the belief state κ , and exceptionally
         B2r                   B2¬r                   decision processes. Condition 1 expresses that there is always
                    κ
in the void belief state >. This issue is developed in next at least one normal observation; Condition 2 is a weak con-
Section.                                              sistency condition between states and observations (an obser-
                                                      vation totally excluding a state cannot occur in that state).
4  Complex belief states and progression
                                                      Example 2
4.1  Complex belief states
                                                      Let S = {r, ¬r}, obs1 = κB1r, obs2 = κB1¬r, and let
              B                               S
Deﬁnition 1 Let S be the set of all belief states on . A κ    (obs |r, ask) = 0 κ     (obs |r, ask) = 1
complex belief state (CBS) is an ordinal conditional func- OBS    1               OBS    2
                                                         κOBS(obs2|¬r, ask) = 0 κOBS(obs1|¬r, ask) = 1
tion µ on BS, i.e., a function µ : BS → N such that
                                                      (all other observations being impossible, i.e., for obs 6=
minκ∈BS µ(κ) = 0
                                                      obs1, obs2, κ(obs|s, α) = ∞; by convention we omit these
µ is a second-order belief state expressing the beliefs, before when specifying κ(.|s, α)). This means that accurate obser-
executing some given program π, about the (future) possible vations are the normal ones, whereas incorrect obervations
belief states resulting from its execution.           are 1-exceptional.
Example 1 Let S = {r, ¬r}.
                                                      Deﬁnition 3 Let κ be a belief state and α ∈ ACT . Given
                                                                    0                          S
                     r : 0                          obs ∈ OBS, the plausibility of obtaining obs after α in belief
              κ0 :            : µ(κ0) = 1
                    ¬r : 0                          state κ is deﬁned by
                                                          0
                                       
                    r : 0                             κOBS(obs|κ0, α) = min[κ0(s) + κOBS(obs|s, α)]
        µ  :  κ :            : µ(κ ) = 0                                  s∈S
               3    ¬r : 2       3     
                                                    The progression of κ by α  is the complex belief state
                                                                       0
                                                    prog(κ , α) = µ(.|κ , α) deﬁned by: for all κ ∈ B ,
                    r : 2                               0          0                        S
              κ4 :            : µ(κ4) = 0
                     ¬r : 0                                µ(κ|κ0, α)
is a CBS (by convention, for any belief state κ not mentioned = min{κOBS(obs|κ0, α) | obs ∈ OBS and κ = κ0 ⊕ obs}
we have µ(κ) = +∞); it intuitively represents a situation Thus, κ is all the more normal in the projected CBS
where the agent expects the resulting belief state to be either µ(.|κ0, α) as there exists a normal state s and a normal ob-
κ0, κ3 or κ4, these last two being normal results and κ0 being servation obs (given s) such that κ is the revision of κ0 by
                                                      obs                                      κ  ⊕ obs
exceptional. Note that κ0 = κ>, κ3 = κB2r and κ4 = κB2¬r. . Condition 2 in Deﬁnition 2 guarantees that 0 is
                                                      deﬁned whenever κOBS(obs|κ0, α) < ∞, which ensures that
  We deﬁne  µκ  as the (degenerated) CBS deﬁned by
                 0             0                      µ(.|κ0, α) is a CBS.
µκ(κ) = 0 and µκ(κ ) = ∞ for all κ 6= κ.
  Note that since, unlike S, BS is not ﬁnite, some CBSs can- Example 3 The ﬁgure on the left (resp. right) shows the pro-
not be ﬁnitely represented. We say that µ has a ﬁnite support gression of κ0 (resp. κ1) by ask.
iff only a ﬁnite number of belief states have a ﬁnite plau-
                                                                                            r : 0 
sibility, i.e., {κ ∈ BS|µ(κ) < ∞} is ﬁnite; in this case          r : 0
                                                            κ0 :                        κ1 :  ¬r : 1
we deﬁne nµ (or simply n where there is no ambiguity) as          ¬r : 0
max{i < ∞  | ∃κ such that µ(κ) = i}.
                                                          obs1        obs2             obs1        obs2
4.2  Progression by sensing actions
Consider a ﬁnite set ACT of sensing actions, that send feed-
                     S                                                                               
back to the agent, under the form of observations. Each sens- r : 0      r : 1         r : 0          r : 0
                                                    κ1 :          κ2 :           κ :           κ  :
ing action is deﬁned by a state-dependent plausibility assign- ¬r : 1   ¬r : 0    3    ¬r : 2    0   ¬r  : 0
ment on possible observations.
                                                       µ(κ1) = 0      µ(κ2) = 0   µ(κ3) = 0       µ(κ0) = 1
  3
   The notation κΦ has been introduced at the end of Section 2.                                              
               κ1  :  0                  κ3  : 0
 µ(.|κ0, ask) =           µ(.|κ1, ask) =              4.5  Two particular cases
               κ2  :  0                  κ0  : 1
                                                      An unobservable environment consists of a set of physical
4.3  Progression by physical actions                  actions only (ACTS = ∅).
                                                        A fully observable environment is somewhat harder to de-
In addition to sensing actions we consider a ﬁnite set ACT
                                                 P    ﬁne formally because of the separation between physical and
of physical, feedback-free actions4. In Section 2, the progres-
                                                      sensing actions, which prevents us to say that all actions send
sion of a belief state by a physical action was deﬁned as a
                                                      a full feedback. To cope with this, we assume that ACT
belief state. For the sake of homogeneity, we have now to                                               S
                                                      contains one action sense(x) for each propositional variable,
deﬁne it as a CBS: the progression µ(.|κ , α) of a belief state
                                 0                    which returns the truth value of x with full certainty, and we
κ by α ∈ ACT   is deﬁned by µ(.|κ , α) = µ , i.e.,
 0           P                 0       κ0α           require that in a program, any physical action α should be fol-
                       0   if κ = κ  α              lowed by all actions sense(x) – which means that after α and
         µ(κ|κ , α) =              0
              0         ∞   otherwise                 this sequence of sensing actions, the state is known with full
                                                      certainty. Any program of this kind is said to be admissible.
4.4  Progression by belief-based programs             The initial state is also required to be known with certainty.
The progression of a belief state κ by a BBP π is the complex Proposition 1
belief state µ(.|κ, π) deﬁned inductively by            1. in an unobservable environment, for any κ0 and any pro-
                                                          gram π for which µ(.|κ0, π) is deﬁned, there exists a be-
  • if π = λ then µ(.|κ, π) = µκ;
                                                          lief state κ such that µ(.|κ0, π) = µκ;
  • if π = α then µ(.|κ, π) is deﬁned in Section 4.3 if α ∈
                                                        2. in a fully observable environment, for any belief state
    ACTP  and in Section 4.2 if α ∈ ACTS;
                                                          κ0 and any admissible program π such that µ(.|κ0, π)
  • if π = (π1; π2) then                                  is deﬁned, µ(κ|κ , π) < ∞ implies that κ is a precise
       0                    00           0 00                            0
    µ(κ |κ, π) = min 00 (µ(κ |κ, π ) + µ(κ |κ , π ))
                   κ ∈BS         1            2           belief state, i.e., κ = κs for some s ∈ S.
  • if π = if Φ then π1 else π2 then
                 µ(κ0|κ, π ) if κ |= Φ
    µ(κ0|κ, π) =          1                           5   Progression: syntactical computation
                  µ(κ0|κ, π ) otherwise
                          2                           Applying progression as it is deﬁned above has a prohibitive
  • if π = while Φ do π0 then                         complexity, since it amounts at iterating over all belief states,
                    0    0
       0          µ(κ |κ, (π ; π)) if κ |= Φ          states, and observations. In this Section we give a more
    µ(κ |κ, π) =      0
                  µκ(κ )         otherwise            friendly, syntactical way of computing progression, based on
  If π contains no while construct then this deﬁnition is a compact representation of complex belief states.
well-founded (it can be proved that it results a SBS which So as to be able to reason about the resulting belief states,
moreover does not depend on the order in which the above we now introduce a new family of modalities P1, P2, . . . ,
rules are applied). This is not so with while constructs, P∞ in addition to B1, . . . , B∞. While the Bi modalities deal
since the (recursive) deﬁnition leads to a ﬁxpoint equation with uncertainty (about the current state), P1 , P2, . . . , P∞
whose solution, when deﬁned, is taken to be its least ﬁxpoint deal with second-order uncertainty, i.e., uncertainty about the
when the latter is a CBS, which is not necessarily the case: projected belief state (with respect to some program).
                                                        L2   is the language deﬁned by:
consider κ0 = κ> and π = while > do ask; applying the     P S
above deﬁnition leads to µ(κ|κ0, π) = ∞ for all κ, which is • if Φ is a formula of LP S then for all i, PiΦ is a formula
                                                              2
not a CBS. Moreover, when µ(.|κ0, π) is deﬁned, it does not of LP S;
necessarily have a ﬁnite support.                                   0               2            0      0
                                                        • if Θ and Θ are formulas of LP S then Θ ∧ Θ , Θ ∨ Θ
                                                                                2
Example 4                                                 and ¬Θ are formulas of LP S.
  • µ(.|κ>, (ask; ask)) = [κ3 : 0 ; κ4 : 0 ; κ0 : 1];
                                                      Like for Bi modalities, we need not consider nested Pi
  • µ(.|κ>, (ask; ask; ask; ask))                     modalities, neither heterogeneous combinations of Pi and Bi
                                                                                                      2
    = [κB4r : 0 ; κB4¬r : 0 ; κ3 : 1 ; κ4 : 1 ; κ0 : 2]; modalities (resp. objective formulas). Satisfaction of a LP S
                                                      formula by a CBS is deﬁned by
  • π1 = (ask; ask; if B2r ∨ B2¬r then  λ else  ask).
    Then µ(.|κ>, π1) = [κ3 : 0 ; κ4 : 0; κ1 : 1 ; κ2 : 1]; • µ |= PiΦ iff for all κ ∈ BS, κ |= ¬Φ implies µ(κ) > i;
                                                                    0                  0
  • π2 = while  ¬(B2r  ∨ B2¬r) do ask. Applying the     • µ |= Θ ∧ Θ iff µ |= Θ and µ |= Θ
    deﬁnition gives a ﬁxpoint equation whose solution is  (and similarly for the other connectives).
    µ(.|κ , π ) = [κ : 0 ; κ : 0] 5
        0  2      3     4    .                        Validity, satisﬁability and logical consequence are deﬁned in
                                                                             P Φ
  4Such a partition between purely sensing and purely physical ac- the usual way. Intuitively, 1 means that all belief states
tions is usual and does not induce a loss of generality. that do not satisfy Φ are exceptional at least to the degree i.
  5The question whether this program can run forever is similar to When reasoning about CBS, we are mainly concerned with
that of whether it is possible that a fair coin tossed repeatedly always inferring positive formulas – inferring negative formulas such
                                                                                                      2
turns up heads, and this is thus related to an OCF version of the law as ¬PiΦ is somewhat derivative. We deﬁne a positive LP S
of large numbers.                                     formula as follows:  • if Φ is a positive LP S formula and i ∈ N then PiΦ is a Example 2 (continued) Let Φ =  B1r.   We get
            2
    positive LP S formula;                            X1,Φ,ask =  {obs1}, X2,Φ,ask =  {obs1, obs2} and for
                           2                          all n > 2, Xn,Φ,ask = {obs1, obs2}. Proposition 3 gives
  • if Θ1 and Θ2 are positive LP S formulas then Θ1 ∧ Θ2
                           2                          P rog(Φ, ask) = P1(B1r  ⊗ B1r) ∧ P∞((B1r  ⊗ B1r) ∨
    and Θ1 ∨ Θ2 is a positive LP S formula.
                    2              2                  (B1r ⊗ B1¬r)) ≡ P1B2r ∧ P∞(B2r  ∨ B∞>)  ≡ P1B2r.
Moreover, a canonical LP S formula is a LP S formula of the
form Θ = P1Φ1 ∧ P2Φ2 ∧ . . . ∧ PnΦn ∧ P∞Φ∞, where Φ1,
                                 6                    The characterization for physical actions is much easier.
. . . , Φn, Φ∞ are positive LP S formulas .
                                            2
  Given a CBS µ with ﬁnite support, the canonical LP S for- Proposition 4 For any physical action α and any PC LP S
      +
mula G (µ) = Θµ associated with µ is deﬁned by        formula Φ, P rog(Φ, α) ≡ P∞G(κΦ  α).

       i=n                                          Moreover, G(κΦ  α) can be computed efﬁciently using
        ^      _                  _
  Θµ =    Pi      G(κ) ∧ P∞        G(κ)           Proposition 2 of [Laverny and Lang, 2004].
       i=1    µ(κ)<i            µ(κ)<∞                  Lastly, the progression of a positive conjunctive LP S for-
                                                                                     2
                                                      mula Φ by a BBP π is the canonical LP S formula P rog(Φ, π)
where n = nµ and G(κ) is the canonical LP S formula cor- deﬁned inductively as follows:
responding to κ (cf. Section 2).
Proposition 2 For any CBS µ with ﬁnite support and any  • P rog(Φ, λ) = P∞Φ;
                   2
positive conjunctive LP S formula Θ, µ |= Θ if and only if • P rog(Φ, α) is deﬁned at Deﬁnition 4 if α is an action;
Θµ  |= Θ, that is, Θµ is the strongest positive conjunctive • P rog(Φ, if Ψ then π else π )
 2                                                                            1       2
LP S formula satisﬁed by µ.                                   P rog(Φ, π ) if Φ |= Ψ
                                                          =             1
Example 1 (continued)                                          P rog(Φ, π2) otherwise
 Θµ   = P1(B2r ∨ B2¬r) ∧ P∞(B2r ∨ B2¬r ∨ B∞>)
                                                        • P rog(Φ, π1; π2) =
      ≡ P1(B2r ∨ B2¬r)
                                                              i=n
  We are now in position to give a syntactical characteriza-  ^      _
tion of progression.                                             Pi(      [P rog([P rog(Φ, π1)]u, π2)]v)
                                                              i=1  u+v=i+1
Deﬁnition 4 Let Φ be a positive conjunctive L formula
                                         P S                        ∧P∞([P rog([P rog(Φ, π1)]∞, π2)]∞)
and α be any action. The progression of Φ by α is the
          2                                                                       0
canonical LP S formula P rog(Φ, α) corresponding to the • P rog(Φ, while Ψ then  π ) =
CBS µ(.|κΦ, α), i.e.,                                       P rog(Φ, π0; π) if Φ |= Ψ
                     +                                       P rog(Φ, λ)    otherwise
      P rog(Φ, α) = G (µ(.|κΦ, α)) = Θµ(.|κΦ,α)
  We now show how the formula P rog(Φ, α) can be com- where
puted without ﬁrst generating the corresponding µ.                         2
                                                        1. for any canonical LP S formula Θ, [Θ]i is the strongest
Proposition 3                                             positive LP S formula Ψ (unique up to logical equiva-
Let α be a sensing action and Φ = B1ϕ1 ∧. . .∧Bpϕp ∧B∞ϕ   lence) such that Θ |= PiΨ .
a positive conjunctive LP S formula. We deﬁne:
                                                        2. for any positive conjunctive LP S formulas Φ1 and
                            N
  • for any obs ∈ OBS and i ∈ ,                           Φ2:   [P rog(Φ1 ∨ Φ2, π)]i =   [P rog(Φ1, π)]i ∨
    ψi,obs,α = F orm{s ∈ S | µOBS(obs|s, α) < i};         [P rog(Φ2, π)]i.
  • X     = {obs ∈ OBS  | (ϕ ∧ ψ     ) ∨ . . . ∨ (ϕ ∧
      i,Φ,α                 1   i,obs,α         i     Proposition 5 P rog(Φκ, π) = Θµ(.|κ,π)
    ψ1,obs,α) 6≡ ⊥};
                                                      Example 5
  • X∞,Φ,α = {obs ∈ OBS  | ϕ ∧ ψ∞,obs,α 6≡ ⊥};
                                                      Let π = (ask; ask; if B2r ∨ B2¬r then λ  else  ask)
                                                           0
  • n is the largest integer i such that Xi,Φ,α X∞,Φ,α. and π = (while ¬(B2r ∨ B2¬r) do  ask).
Then
                                                        • P rog(B∞>, ask) ≡ P∞(B1r  ∨ B1¬r)
                  i=n
                  ^       _                             • P rog(B  >, ask; ask) ≡ P (B r ∨ B ¬r).
      P rog(Φ, α) =  Pi(        Φ ⊗ Φobs)                        ∞                1  2     2
                  i=1  obs∈Xi,Φ,α                       • P rog(B∞>, π) ≡ P1(B2r∨B2¬r)∧P∞(B1r∨B1¬r)
                          _                                            0
                  ∧P∞(          Φ ⊗ Φobs)               • P rog(B∞>, π ) ≡ P∞(B2r  ∨ B2¬r)
                       obs∈X∞,Φ,α
where ⊗ is the syntactical revision operator (Proposition 1 6 Related work
of [Laverny and Lang, 2004]), which satisﬁes Φ ⊗ Φobs = Partially observable Markov decision processes
G(H(Φ)  ⊕ obs).                                       POMDPs are the dominant approach for acting under partial
  6                  2                   2            observability (including nondeterministic actions and unreli-
   Notice that canonical LP S formulas are positive LP S formulas
in which there is no disjunction at the level of the Pi modalities (but able observations). The relative plausibility of observations
disjunctions may appear in the scope of a Pi modality, and of course given states, as well as the notion of progressing a belief state
in the scope of a Bi modality too).                   by an action, has its natural counterparts in POMDPs. Now,