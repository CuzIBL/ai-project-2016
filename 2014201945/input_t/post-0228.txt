                               Kernels on Prolog Ground Terms
                                Andrea Passerini    and  Paolo Frasconi
                Dipartimento di Sistemi e Informatica, Universita` degli Studi di Firenze
                                     http://www.dsi.uniﬁ.it/neural/

                    Abstract                            • if s ∈ C and t ∈ C then K(s, t) = κ(s, t) where κ :
                                                          C × C 7→ IR is a valid kernel on constants;
    We describe a family of kernels over untyped and
    typed Prolog ground terms and show that they can    • else if s and t are compound terms and have differ-
    be applied for learning in structured domains, pre-   ent arities or functors, i.e. s = f(s1, . . . , sn) and
    senting experimental results in a QSPR task.          t = g(t1, . . . , tm), then
                                                                          K(s, t) = ι(f, g)           (1)
1  Introduction
                                                           where ι : F × F 7→ IR is a valid kernel on functors;
Starting from the seminal work of Haussler on convolution • else if s and t are compound terms and have the same
kernels [Haussler, 1999], several researchers have proposed
                                                          arity and functor, i.e. s = f(s1, . . . , sn) and t =
kernels on discrete data structures such as sequences, trees
                                                          f(t1, . . . , tn), then
and graphs (see [Gartner,¨ 2003] for a review). Recently, ker-
                                                                                      n
nels over complex individuals have been deﬁned using higher                          X
                                                                    K(s, t) = ι(f, f) + K(s , t )
order logic abstractions [Gartner¨ et al., 2004]. The family                                i i       (2)
of kernels developed in this paper originates from a special-                        i=1
ization to ﬁrst-order logic of such kernels, as it is designed
                                                        • in all other cases K(s, t) = 0.
to work on individuals represented as Prolog ground terms.
There are several reasons for such a specialization. Simplic- We call κ and ι atomic kernels as they operate on non-
ity: Prolog representations provide a simpler representational structured symbols. A special but useful case is the atomic
framework. Sufﬁciency: useful higher order structures such match kernel δ deﬁned as δ(x, z) = 1 if x = z and δ(x, z) =
as sets can be simulated in Prolog. Types can also be in- 0 if x 6= z.
troduced. In practice, Prolog based representations are suf- A ﬁner level of granularity in the deﬁnition of ground term
ﬁciently expressive for many application domains. Legacy: kernels can be gained from the use of typed terms. This extra
many inductive logic programming systems and knowledge ﬂexibility may be necessary to specify different kernel func-
bases are actually based on ﬁrst order logic and Prolog is a tions associated with constants of different type (e.g. numer-
well supported language. Extendibility: ﬁrst-order logic pro- ical vs. categorical). It may also be necessary in order to
grams have been extended to deal with uncertainty through specify different kernels associated to different arguments of
the use of probability resulting in models such as stochastic compound terms. Our approach for introducing types is sim-
and Bayesian logic programs (see [De Raedt and Kersting, ilar to that proposed in [Lakshman and Reddy, 1991]. We de-
2003] for a review); these extensions can be very interesting note by T the ranked set of type constructors. The type signa-
                                                                                                        0
in the context of machine learning.                   ture of a function of arity n has the form τ1×, . . . , ×τn 7→ τ
  We develop variants of the kernel on typed and untyped where n ≥ 0 is the number of arguments, τ1, . . . , τk ∈ T
terms. The present formulation allows us to obtain a relatively their types, and τ 0 ∈ T the type of the result. Functions of ar-
simple proof of positive deﬁniteness based on showing that ity 0 have signature ⊥ 7→ τ 0 and can be therefore interpreted
kernels over terms are a special case of convolution kernels as constants of type τ 0. The type signature of a predicate of
[Haussler, 1999]. We ﬁnally present experimental evidence arity n has the form τ1×, . . . , ×τn 7→ Ω where Ω ∈ T is the
of the usefulness of these kernels by learning the boiling point type of booleans. We write t : τ to assert that t is a term of
of alkanes from their chemical structure.             type τ. We denote by B the set of all typed ground terms,
2  Kernels on Prolog ground terms                     by C ⊂ B the set of all typed constants, and by F the set of
                                                      typed functors. Finally we introduce a (possibly empty) set
We begin with kernels on untyped terms. For a given program of distinguished type signatures D ⊂ T that can be useful to
P we denote by B the Herbrand universe of P (i.e. the set of specify ad-hoc kernel functions on certain compound terms.
all ground terms that can be formed from symbols in P ) by
C ⊂ B  the set of all constants, and by F the ranked set of Deﬁnition 2 (Kernels on typed terms). The kernel between
functors.                                             two typed terms t and s is deﬁned inductively as follows:

Deﬁnition 1 (Kernels on untyped terms). The kernel be-  • if s ∈ C, t ∈ C, s : τ, t : τ then K(s, t) = κτ (s, t)
tween two terms t and s is a function K : B × B 7→ IR     where κτ : C × C 7→ IR is a valid kernel on constants of
deﬁned inductively as follows:                            type τ;                                                                                           CH
  • else if s and t are compound terms that have the          CH    CH                       3
    same type but different arities, functors, or signatures,   3     3
                                                                                            C
    i.e. s = f(s1, . . . , sn) and t = g(t1, . . . , tm), f : CH C   C   CH
                      0                      0            3                 3
    σ1×, . . . , ×σn 7→ τ , g : τ1×, . . . , ×τm 7→ τ , then                         CH3   CH3  C

                                                              CH3   CH3
                   K(s, t) = ιτ 0 (f, g)        (3)                                        CH3 CH3  CH3

     where ιτ 0 : F × F 7→ IR is a valid kernel on functors
    that construct terms of type τ 0                      C(H,H,H,C(C(H,H,H),C(H,H,H),C(C(H,H,H),C(H,H,H),C(H,H,H))))
  • else if s and t are compound terms and have the same  Figure 1: Ground term representation of an Alkane.
    type, arity, and functor, i.e. s = f(s1, . . . , sn), t =
                                       0
    f(t1, . . . , tn), and f : τ1×, . . . , ×τn 7→ τ , then Fig. 1. We addressed this task using kernel ridge regression
              8             0
                 κτ1×,...,×τn7→τ (s, t)               [Shawe-Taylor and Cristianini, 2004] with the kernel K on
              >                       0
              <>    if (τ1×, . . . , ×τn 7→ τ ) ∈ D   untyped terms of Def. 1, a match kernel for functors (car-
      K(s, t) =            n
                          X                     (4)   bon atoms), and a null kernel for constants (hydrogen atoms).
              >  ι 0 (f, f) + K(s , t ) otherwise
              :> τ              i  i                  In this way the kernel measures the number of carbon atoms
                          i=1                         in corresponding positions. As an additional source of in-
  • in all other cases K(s, t) = 0.                   formation, we extracted the depths of the trees representing
                                                      the molecules, and summed their product to the term kernel,
  In the case of numerical constants, examples of use-
                                                      obtaining a more informed kernel K0. Finally, we employed
ful kernels include κ (x, z) = exp(−γ(x −  z)2) and
                  Real                                a Gaussian kernel on top of K and K0. Performance was
κ   (x, z) = min{x, z}.
 Real                                                 evaluated by a ten fold cross validation procedure, Hyperpa-
Theorem  1. The kernel functions on Prolog ground terms rameters (namely, the Gaussian width and the regularization
given in Deﬁnitions 1 and 2 are positive deﬁnite (pd). parameter), were chosen by a hold-out procedure on the train-
Proof sketch. Let us introduce the following decomposition ing set of the ﬁrst fold, and kept ﬁxed for the successive 10
structure (see [Shawe-Taylor and Cristianini, 2004]): R = fold cross validation procedure. When using kernel K we
h(X1, X2), R, (k1, k2)i with X1 = F (the set of functors), obtained an average mean square error of 4.6 Celsius degrees
                                                                  0
X2 = (F, IN, B)), and                                 while using K the error can be reduced to 3.8 degrees. These
                                                      results are comparable to those produced by the highly tuned
  R = {(f, (f, n, a), s) s.t. s is a term having functor f, networks developed in [Bianucci et al., 2000].
               tuple of arguments a, and f has arity n} Acknowledgements
Then it can be immediately veriﬁed that the kernel function We wish to thank Luc de Raedt for fruitful discussions. This
of Eq. 1 and 2 correspond to the direct sum decomposition research is supported by EU Grant APrIL II (contract n◦
kernel associated with the decomposition structure R if k1 = 508861) and by MIUR Grant 2003091149 002.
                                        0
ι and k2((f, n, a), (g, m, b)) = δ(f, g)δ(n, m)k (a, b) where
given a = (s1, . . . , sn) and b = (t1, . . . , tn)   References
                         n                            [Bianucci et al., 2000] A.M. Bianucci, A. Micheli, A. Sper-
                0       X
               k (a, b) =  K(si, ti).                    duti, and A. Starita. Application of cascade correlation
                        i=1                              networks for structures to chemistry. Appl. Intell., 12:117–
Since kernels are closed under direct sum, if K is pd then K0 146, 2000.
is also pd. The proof then follows from Haussler’s decompo- [De Raedt and Kersting, 2003] L. De Raedt and K. Kerst-
sition framework [Haussler, 1999] and by induction using as ing. Probabilistic logic learning. SIGKDD Explor. Newsl.,
base step the fact that κ is a valid kernel on constants. 5(1):31–48, 2003.
  The proof that kernels on typed terms (Def. 2) are pd is
                                                      [                ]
obtained similarly, replacing functor arities by type signatures Gartner¨ et al., 2004 T. Gartner,¨ J.W. Lloyd, and P.A. Flach.
in the decomposition structure.                         Kernels and distances for structured data. Machine Learn-
  Alternative forms of typed and untyped kernels can be ob- ing, 57(3):205–232, 2004.
tained by replacing sums with products in Eq. (2) and (4), [Gartner,¨ 2003] T. Gartner.¨ A survey of kernels for structured
while keeping the rest of the deﬁnitions unchanged. Since data. SIGKDD Explor. Newsl., 5(1):49–58, 2003.
kernels are closed under tensor product, positive deﬁniteness [Haussler, 1999] D. Haussler. Convolution kernels on dis-
can be proven using the same technique as in Theorem 1.  crete structures. Technical Report UCSC-CRL-99-10,
                                                         University of California, Santa Cruz, 1999.
3  Experimental evaluation
                                                      [Lakshman and Reddy, 1991] T.K. Lakshman  and  U.S.
The kernel has been tested on a quantitative structure-  Reddy. Typed prolog: A semantic reconstruction of the
property relationship (QSPR) prediction task, namely pre- Mycroft-O’Keefe type system. In Proc. of ISLP’91.
dicting the boiling point of alkanes given their chemical struc-
                                                      [Shawe-Taylor and Cristianini, 2004] J. Shawe-Taylor and
ture. Alkanes can be represented as ordered rooted trees us-
                                                         N. Cristianini. Kernel Methods for Pattern Analysis. Cam-
ing a very simple procedure [Bianucci et al., 2000], and trees
                                                         bridge University Press, 2004.
can be easily encoded as Prolog ground terms, as shown in