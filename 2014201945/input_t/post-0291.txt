            Corrective Explanation for Interactive Constraint Satisfaction                  ∗

                   Barry O’Sullivan, Barry O’Callaghan       and Eugene C. Freuder
                                  Cork Constraint Computation Centre
                   Department of Computer Science, University College Cork, Ireland
                  {b.osullivan|b.ocallaghan|e.freuder}@4c.ucc.ie


                    Abstract                            A corrective explanation for value recovery is useful when
                                                      the user would like to restore a value that was removed due
    Interactive tasks such as online conﬁguration can
                                                      to some previous decision(s). Such an explanation identiﬁes
    be modeled as constraint satisfaction problems.
                                                      modiﬁcations to the user’s decisions guaranteing that the de-
    These can be solved interactively by a user assign-
                                                      sired value is restored and can be selected consistently. A
    ing values to variables. Explanations for failure in
                                                      corrective explanation is minimal if no (proper) subset is it-
    constraint programming tend to focus on conﬂict.
                                                      self a corrective explanation. We deﬁne an optimal corrective
    However, what is often desirable is an explanation
                                                      explanation as one of minimum cardinality.
    that is corrective in the sense that it provides the ba-
    sis for moving forward in the problem-solving pro-
    cess. This paper deﬁnes this notion of corrective 2   Computing Corrective Explanations
    explanation and demonstrates that a greedy search Instead of using compilation methods [Amilhastre et al.,
    approach performs very well on a large real-world 2002] or standard model-based diagnosis techniques [Junker,
    conﬁguration problem.                             2004; Reiter, 1987], we advocate the use of a heuristic search
                                                      approach to ﬁnd corrective explanations. While heuristic
1  Introduction                                       search cannot guarantee that minimum length explanations
                                                      are found, near optimal explanations can often be found quite
To demonstrate the distinction between corrective explana- efﬁciently. We generate corrective explanations by returning
tions and more traditional conﬂict-based explanations, con- any differences between the assignments made by the user
sider the example in Figure 1.                        and the assignments in a solution found using carefully cho-
                                                      sen variable and value ordering heuristics. These heuristics
          {r,b}{{r,b}  {r, b}{r,b}   r,b}             attempt to maximize the number of user assignments in such
           v     v      v      v     v                a solution. The value ordering heuristic favors values chosen
            1     2      3      4     5               by the user during search, by selecting those ﬁrst whenever
                                                      possible, and uses standard heuristics for the remaining ones.
                                                      We partition the set of variables into a set of user-assigned
Figure 1: Example of corrective versus conﬂict-based explanations. variables and a set of unassigned variables. User-assigned
                                                      variables are considered ﬁrst, and within each subset of vari-
  This ﬁgure presents assignments of colors to variables in ables a particular variable ordering heuristic is used. The
a coloring problem. We have assigned colors to the ﬁrst 4 intuition here is that during search the user’s choices are al-
variables (highlighted in black), only two colors are available, ways considered ﬁrst, so they are more likely to participate in
and we are running a forward checking algorithm, so we have the solution used to generate an explanation.
encountered a domain wipeout on variable v5 at this point.
We will say that variables v3 and v4 form a “culprit set”. 3 Experiments
The assignments to those variables account for the wipeout. We ran a suite of experiments based on the Renault Megane
The variables v3 and v4 do not provide a corrective explana- Conﬁguration benchmark [Amilhastre et al., 2002]. The
tion because it is not possible by changing their instantiations problem consists of 101 variables, domain sizes vary from
alone to restore any choices to v5. {v1, v4} is a corrective ex- 2 to 43, and there are 113 non-binary constraints. The num-
planation of inconsistency, as alternative assignments can be ber of solutions to the problem is in excess of 1.4×1012. The
found for the these variables that enables the user to assign at solver we used in our experiments was based on generalized
least one more variable. Making v1 b(lue) and v4 r(ed) allows forward checking.
us to proceed to assign a value to v5, blue.            We studied three variable ordering heuristics for gener-
  ∗This work has received support from Enterprise Ireland (Grant ating corrective explanations using the approach described
SC/02/289) and Science Foundation Ireland (Grant 00/PI.1/C075). above: minimum ratio of domain over forward degree (also                       Average Cost - Megane Problem                     Average Cost - Megane Problem
       1e+09                                             1e+09
                                    1 Pass Min(dom/deg)                                1 Pass Min(dom/deg) 
                                1 Pass Max degree to user vars                     1 Pass Max degree to user vars 
       1e+08                          1 Pass Random      1e+08                           1 Pass Random 
                                     B&B Min(dom/deg)                                   B&B Min(dom/deg) 
                                 B&B Max degree to user vars                        B&B Max degree to user vars 
       1e+07                           B&B Random        1e+07                            B&B Random 

       1e+06                                             1e+06

      100000                                             100000
     Constraint  Checks                                 Constraint  Checks
       10000                                             10000

       1000                                               1000

        100                                               100
         10  20   30  40  50   60  70  80   90  100         10  20  30   40  50  60   70  80  90  100
                            Depth                                             Depth
         (a) Average cost of inconsistency explanations.   (b) Average cost of value recovery explanations.


                     Averaged Length - Megane Problem                  Averaged Length - Megane Problem
      18                                                 18
                  1 Pass Min(dom/deg)                               1 Pass Min(dom/deg) 
      16      1 Pass Max degree to user vars             16     1 Pass Max degree to user vars 
                    1 Pass Random                                     1 Pass Random 
                 10 Pass Min(dom/deg)                               10 Pass Min(dom/deg) 
      14     10 Pass Max degree to user vars             14     10 Pass Max degree to user vars 
                   10 Pass Random                                     10 Pass Random 
      12               Optimal                           12               Optimal 

      10                                                 10

       8                                                 8

       6                                                 6
     length  of explanation                             length  of explanation
       4                                                 4

       2                                                 2

       0                                                 0
       10   20  30   40  50   60  70   80  90   100       10  20   30  40   50  60   70  80   90  100
                           Depth                                             Depth
        (c) Average length of inconsistency explanations. (d) Average length of value recovery explanations.

                 Figure 2: Results for ﬁnding explanations for the Renault Megane Conﬁguration Benchmark.

referred to as minimum domain/degree), maximum degree to with an average optimal explanation length of 1.32 variables.
the user’s assigned variables and random. We used a random The average search effort required to ﬁnd a single explanation
value ordering, since it seemed to perform best overall. was 2,142 constraint checks. For the value recovery experi-
  Based on the variable and value ordering heuristics, we ment, minimum domain/degree found explanations of length
studied three different search techniques: 1) a branch-and- 8.22 and 7.16 for the one solution and best of 10 solutions, re-
bound search seeking to minimize explanation length; 2) a spectively. The average optimal length was 7.03. The search
greedy heuristic search for a solution that returns a single effort required to ﬁnd a single explanation was 1,354 checks.
explanation; 3) running multiple greedy heuristic searches
(10 in these experiments), providing multiple explanations, 4 Future Work and Conclusion
of which the one of minimum length was returned. The sim- The notion of corrective explanation is new in the domain
ulated user chose variables randomly and values lexicograph- of constraint satisfaction, where existing work on explana-
ically. We considered both the task of generating corrective tion is focused on conﬂict. Using a greedy search approach
explanations for inconsistency (over 800 conﬁguration ses- with good variable and value ordering heuristics seems an at-
sions), and corrective explanations for value recovery (over tractive option as it represents a good compromise between
100 sessions) in which the user chose to restore an inconsis- search cost and explanation length. Building upon the work
tent value with a probability of 0.1. We report averages at of Junker [Junker, 2004] we plan to explore the potential for
intervals of 10 variables.                            a preference-oriented relaxation-focused corrective explana-
  In Figure 2(a) and Figure 2(b) we see that minimum length tion algorithm.
explanations tend to be very expensive to compute using a
branch-and-bound search, thus not a viable option in an inter- References
active context. In Figure 2(c) and Figure 2(d) we plot average
                                                      [Amilhastre et al., 2002] J. Amilhastre, H. Fargier, and
explanation lengths. The greedy approaches, with the possi-
                                                         P. Marguis. Consistency restoration and explanations in
ble exception of that based on the random variable ordering,
                                                         dynamic CSPs – application to conﬁguration. Artiﬁcial
ﬁnd almost minimum length corrective explanations using a
                                                         Intelligence, 135:199–234, 2002.
fraction of the search cost of branch-and-bound.
  The best approach of those studied was based on minimum [Junker, 2004] U. Junker. QUICKXPLAIN: Preferred expla-
domain/degree. For the inconsistency explanations experi- nations and relaxations for over-constrained problems. In
ment the average length of the explanations found was 2.15 Proceedings AAAI-04,, pages 167 – 172, 2004.
variables, for the one solution version, and 1.60 variables [Reiter, 1987] R. Reiter. A theory of diagnosis from ﬁrst
when we proposed the best of 10 solutions. This compares principles. Artiﬁcial Intelligence, 32(1):57–95, 1987.