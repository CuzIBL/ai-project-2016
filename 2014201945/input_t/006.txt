         An Ontology-based Architecture for Cooperative Information Agents 

            Frederico L. G. Freitas                             Guilherme Bittencourt 
        Universidade Catolica de Santos                  Departamento de Automacao e Sistemas 
 R. Carvalho de Mendon9a, 144, Vila Mathias             Universidade Federal de Santa Catarina 
         11.070-906 Santos, SP, Brazil              Cx. Postal 476, 88.040-900, Florianopolis, Brazil 
               red@unisantos.brf                                     gb@das.ufsc.br 

                    Abstract                         extractors could increase the retrieval of useful pages, 
                                                     taking advantage of these relations. 
    In the Web, extractor agents process classes of    Aiming at task integration and cooperation, we 
    pages (like 'call for papers' pages, researchers' designed an architecture for cognitive multi-agent 
    pages, etc), neglecting the relevant fact that   systems that retrieve and classify pages from clusters of 
    some of them are interrelated forming clusters   information in the Web, extracting slots of data from it. 
    (e.g., science). We propose here an architecture Two design requirements are crucial. One is a Web 
    for cognitive multi-agent systems to retrieve and vision coupling a vision for contents (classes and 
    classify pages from these clusters, based on data attributes to be extracted) to a functional vision (the role 
    extraction. To enable cooperation, two design    of pages in information presentation, i.e., whether a page 
    requirements are crucial: (a) a Web vision       is a list, message, class instance or garbage). The other, 
    coupling a vision for contents (classes and      necessary to enable cooperation, consists of explicit 
    attributes to be extracted) to a functional vision knowledge representation in the form of ontologies, both 
    (the role of pages in information presentation); about the cluster's domain and agents' tasks. 
    (b) explicit representation of agents' knowledge 
    and abilities in the form of ontologies, both      Experiments held with two agents, that treated the 
    about the cluster's domain and agents' tasks.    classes of scientific events and articles, produced 
    Employing this Web vision and agents'            promising results, leading to two conclusions: (a) 
    cooperation can accelerate the retrieval of useful functional categorization can be profitable; (b) key 
    pages. We got encouraging results with two       requirements for success in Web CIG systems arc this 
    agents for the page classes of scientific events categorization and a detailed ontology of the cluster. 
    and articles. A comparison of results to similar   The article is organized as follows: Section 2 describes 
    systems comes up with two requirements for       the proposed Web vision. Section 3 introduces the 
    such systems: functional categorization and a    architecture, its components and many types of reuse 
    thoroughly detailed ontology of the cluster.     enabled. Section 4 outlines a case study: MASTER-Web 
                                                     (Multi-Agent System for Text Extraction, classification 
                                                     and Retrieval over the Web), applied to the Science 
1 Introduction                                       cluster, with the two agents cited above. The results on 
Although the terms "Web information agents" and      contents and functional classifications are also shown. 
"cooperative information gathering" (CIG) are in fashion, Section 5 compares MASTER-Web to similar systems. 
there arc scarce examples of Web systems endowed with Section 6 brings future work and conclusions. 
some sort of cooperation or integration among tasks 
related to text processing, viz classification, retrieval, 2 A Proposed Web Vision for CIG 
extraction and summarization. When defining the main 
                                                     Web extractors seek pages that are instances of pages' 
aspects of CIG [Oates et al 1994], information extraction 
                                                     classes (e.g., call for papers pages, researchers', etc). 
was mentioned as a key technology that addresses 
                                                     These pages share many common attributes (slots), like 
information acquisition in complex environments, 
                                                     date and place of a conference. Pages' classes outline a 
suggesting implicitly task integration for CIG. 
                                                     Web division by contents. The slots usually found in a 
  Indeed, there is room for cooperation, in particular for class are discriminant, once they help distinguish class 
extractor agents on the Web. These systems are being members. This fact supports the use of extraction in class 
designed to process classes of pages with similar    categorization. Researchers' pages, for instance, usually 
structuring and contents (e.g., call for papers, scientific contain typical data, such as projects, interest areas, etc. 
articles, ads, etc). However, the relevant fact that many Most links in classes' pages point to pages containing 
of these classes are interrelated forming clusters (e.g., data from a few other classes. A set of interrelated 
Science) has been neglected so far. Cooperation among 


 Al AND THE INTERNET                                                                                    37  classes and their relations gather a body of knowledge URL set from the queries is characterized by a wide 
 about a specific domain (e.g., science, tourism, etc). They variation of functional groups, containing many lists, 
 form a cluster of classes. In researchers' pages, e.g., we messages, content pages from its class and from others 
 often find links to papers, calls for papers and other agents' classes, and garbage. The retrieved URLs feeds a 
 classes from the scientific cluster.                 low priority queue of URLs to be processed. 
   Another view of the Web, based on the work of Pirolli An agent continuously accesses this queue and another 
 et alii [1996], focus on functionality, dividing pages by one, assigned with high priority, which stores URLs sent 
 the role played in linkage and information storage. We as recommendations by other agents of the MAS or taken 
 separate them into five functional groups: content pages from pages considered as lists. These links are considered 
 (class members), resource directories (lists of content as "hot hints", because they were found under a safer 
 pages, e.g., lists of researchers or scientific articles), context. Therefore, they arc expected to attain higher 
 messages about content pages, recommendations (pages precision. Cooperation pays off if these suggestions 
 that arc members of other classes) and garbage.      contain less garbage than search engine results do. 
   Joining these two visions, we can accurately identify An agent processes URLs by extracting data and 
 not only the information to be extracted from page   classifying the pages functionally and by contents. The 
 classes, but also instances of relations among classes in a extracted data and the results arc kept in a database 
cluster. Thus, it can improve the search of useful pages. together. A mediator facilitates database access to users 
                                                      or agents, from the system or external, offering simpler 
3 Proposed Architecture for CIG                       reduced non-normalized database views. 
                                                        When an agent joins the system, it announces itself and 
 We propose an architecture for cognitive multi-agent sends instances and rules to the other agents. This 
system (MAS) to retrieve and extract data from Web    knowledge will be employed by them on the recognition 
pages belonging to classes of a cluster. The core idea of of links or pages likely to belong to the page class 
employing a MAS resides on taking advantage from the processed by the sender agent. So, the agents update their 
relations among classes through agents' cooperation. The knowledge bases and send to the new agent, in return, 
architecture overview is illustrated in figure 1.    their own recognition instances and rules. When a link or 
                                                     page fires any other agent's recognition rule, the agent 
                                                     sends the link or page to that agent as a recommendation. 
                                                     3.1 Agents' tasks 
                                                     An agent performs the following steps for each URL. 
                                                     Figure 2 depicts an agent in detail. 


            Figure 1: Architecture overview. 
  Each agent, represented as a circle in the figure, 
recognizes, filters and classifies pages, extracting 
attributes (slots) from them. The pages are supposed to 
belong to the class of pages that the agent processes. For 
instance, CFP pages are processed by the CFP agent, and 
papers pages by an articles' agent, in the Science cluster.  Figure 2: An agent and its processing steps. 
The MAS is based on Distributed Problem Solving, 
where agents cooperate without overlapping functions. Validation. Non-html, non-http, inaccessible and pages 
  Each agent relies on a meta-robot that can be connected already stored in the database arc ruled out in this step. 
to multiple search engines - like AltaVista, Excite, etc. Preprocessing. Representation elements - such as 
The meta-robot queries the search engines with keywords contents with and without html tags, centroid, title, links 
that assure recall for the agent's page class (e.g., the and e-mails, among other elements - are generated from 
terms kcall for papers' and 'call for participation' for the each valid page applying IR techniques, like stop-lists, 
CFP agent). Due to the lack of precision, the resultant stemming and tagging. If necessary, shallow natural 


38                                                                                   Al AND THE INTERNET language representations can be used. The representation • Templates to extract slots (e.g. deadline of a CFP), to 
elements are passed to the agent's inference engine. recognize functional categories (such as garbage, messages, 
                                                     recommendations, etc), and to classify content pages (e.g. 
Functional classification. An agent deduces to what  conference or workshop CFP); 
functional group the page fits to, whether a list, message, 
                                                     • Auxiliary classes like dictionaries concepts (with 
garbage or class member dealt by the agent or by another. 
                                                     keywords and synonyms), agents and abilities, etc; 
   It is also here that links in a page arc suggested to 
                                                     • Functions to determine regions, extract, convert, format, 
other agents when any of their identification rules about 
                                                     check consistency and dismiss extracted data; 
the anchor or URL fires. For example, an anchor or URL 
                                                     • Complex and expressive cases specifying conditions, 
with the word "conference" is useful for a CFP agent. 
                                                     concepts and sets of slots whose presence or absence 
Suggestions may trigger scanning on directory structure 
                                                     characterize a content page class. An example below: 
prefixes, like /staff/ for a researchers' agent. These 
directories usually keeps plenty of content pages.    ([Articles-with-author-org-and-place] of Case 
                                                        (All-of-Concepts-Keywords TRUE) 
Extraction and contents classification. These two       (Absent-Concepts-in-the-Beginning [thesis] ) 
tasks arc quite correlated; Riloff [1994] has already   (Concepts-in-the-Beginning [abstract]) 
demonstrated the applicability of extraction for filtering. (Slots-in-the-Beginning [Author-Name] 
In our architecture, extraction assists classification, since [Organization-Name] [Location])) 
each agent manages many subclasses, e.g., the CFP agent This case detects articles. If, in the beginning of a 
treats conferences, workshops and journals. After    page, an author name, an organization and a country (or 
categorizing a page according to its semantic contents, US state) were extracted, terms similar to "abstract" were 
the remaining slots, which weren't discovered yet, arc found, but not terms related to the concept "thesis" (like 
searched and extracted. In case contradictions or strange "partial fulfillment"), a rule bound to this case is fired. 
facts appear during extraction, the functional class The attribute All-of-Concepts-Keywords determines 
assigned to the page can be modified. For instance, a whether all the slots have to appear in the page; if it was 
supposed CFP page is retracted to be a list or garbage, if false only one would be necessary. Next, a Class-
dates farther than a year are met in the top.        Recognizer instance (displayed below) and a rule 
   Using as many representation elements as required, creates an instance of the class associated with the case. 
each slot of data is extracted by a union of templates, 
cases and rules. When a slot is part of a predefined list, it ( [Part-Publication] of Class-Recognizer 
is gleaned by matching terms from the dictionaries (e.g. (Cases [Articles-with-author-org-and-place]) 
checking the presence of acronyms to find US states).   (Class [Part-Publication])) 
                                                       The agents first categorize pages into abstract classes 
3.2 Agents' knowledge                                (which can't have instances, as, in the example, Part-
                                                     Publication), to assign later the exact class the pages 
Ontologies play a central role in the architecture, serving 
                                                     fit to (e.g. Conference-Article). Cases, recognizers, 
not only as vocabulary in agent messages, but also 
                                                     concepts and rules are also applied on slot extraction and 
defining proper concepts, slots, instances, restrictions and 
                                                     search of links and URLs to be suggested to other agents. 
relations. The architecture encompasses five ontologies: 
                                                     Auxiliary ontologies. Comprise ontologies for NLP 
Cluster ontology. The main ontology ought to focus 
                                                     (like WordNet [Miller 1995]), time and places (with 
on the original domain of the cluster (e.g. Science), 
                                                     countries, states, etc), and other specific ontologies from 
aiming at a rich and comprehensive representation of its 
                                                     other subject areas, which can be helpful for an agent or 
classes, even if they don't appear in the cluster. There are 
                                                     domain (like bibliographic data, for the "articles" agent). 
some reasons for this. First, reuse possibilities by any 
                                                       Indeed, a knowledge-based approach is adequate to 
application dealing with the domain are enhanced. 
                                                     permit not only high-level intentional cooperation, but 
Moreover, it provides a suitable structure to extract slots. 
                                                     also massive reuse of code, search engines' services, DB 
To sum up, a detailed domain ontology assures 
                                                     definitions - once agents' tables arc the same (pages not 
performance in contents categorization (see section 5.1). 
                                                     recognized, dictionaries, search engines and their 
Web ontology. Classes here contain representations of queries), except the particular tablc where an agent stores 
the pages, chosen according to their adequacy in the its extracted data (for instance, CFPs to the CFP agent) -
required tasks. They comprise HTTP protocol data,    and knowledge. This latter is the most important reuse 
Information Retrieval (IR) page representations (such as and can happen in several ways. Ontologies can be 
terms and frequencies, contents with and without tags, downloaded from repositories, like Ontolingua. A cluster 
links, e-mails, etc), and Natural Language Processing ontology serves to all agents in a cluster, as well as most 
(NLP) representations, suitable for unstructured classes. knowledge from dictionaries and rules. Thus, a new agent 
                                                     is quickly built, needing only new rules and instances of 
CIG ontology. Operational knowledge classes (and     concepts, cases and templates, given that knowledge 
instances) for the tasks of functional categorization, acquisition has already been accomplished. 
contents classification and extraction. It includes: 


Al AND THE INTERNET                                                                                     39  4 Case Study: the Science domain                                      when many anchors contained terms related to events, or 
                                                                       when lots of time intervals in a page (e.g., 1-4 December) 
 A model of agent was developed in Java, and a mediator,               were present. Special care should be taken to lists, once 
 in Delphi and HTML. We utilized KQML for agents'                      false positives can queue bad links as "hot hints". 
 communication. Ontologies were written using Protege1. 

 Rules were specified in the inference engine Jess2. The 
 search engines AltaVista, NorthernLight and Goggle 
were queried for retrieval. NLP wasn't implemented yet. 
The data to be extracted was identified to support the 
classifications, but not extracted 
   We reused an ontology of science from the project 

(KA)2 [Benjamins et al, 1998], introducing many 
refinements. A key one was the creation of abstract 
classes grouping classes with common features, in order 
to improve classification. For example, class Scientific-
Event derived abstract subclasses Live-Sc-Event - with 
concrete subclasses Conference and Workshop - and Sc-
Publication-Event, with subclasses Journal and Magazine 
   Two agents from the Science cluster were developed: 
                                                                                         Tabic 1: Agents' performances. 
CFP Agent. Handles any CFP pages. Extraction 
                                                                          The lists increased substantially the retrieval of content 
templates for 21 slots were defined (e.g. Place, Deadline, 
                                                                       pages. The set of pages retrieved in the fourth test was 
Editor-in-Chief) from 8 scientific events subclasses (the 
                                                                       clearly more focused. Pages from other categories, like 
ones already cited plus Generic-Live-Sc-Event, Generic-
                                                                       lists, messages and recommendation to the fictitious 
Sc-Publication-Event and Special-Issues for Journal and 
                                                                       Organizations agent and Dividable-Publication agent 
Magazine), classified by 28 cases and templates. 
                                                                       (process Proceedings), were substituted by content pages 
Scientific articles agent. The search engines were                     in the form of frames. In the other tests, only one frame 
queried with terms that appear often in articles:                      appeared. In this test, the number of contents pages rose 
"abstract", "introduction", "related work", "conclusion",              between 13 and 22% (see Figure 3), due to frames pages. 
"discussion", and others. The agent is responsible for 10 
classes: workshop, conference, journal and magazine 
articles, book chapters and generic articles, as well as 
thesis, dissertations, technical and project reports. 8 slot 
templates, 16 cases and 36 templates were created. 
   Three tests were executed with each agent. The first 
two treated carpi obtained from the search engines' 
queries; one was applied for knowledge acquisition, to 
specify the cases, templates and rules, and the other, for 
blind test. The third test was made directly from the Web. 
4.1 Results 
Table 1 displays tests' results. In the table, recognition 
stands for an evaluation if the agent correctly identified 
member pages. Note that a fourth test was run with CFP 
agent, in which it benefited from lists of content pages. 
Lists of CFPs on a focused subject are usually maintained 
by researchers, departments and organizations. 

CFP Agent. More than 70% of content pages were                           Even the garbage patterns changed: instead of false 
conference CFPs, mostly recognized by the presence, in                 content pages, caused by search engines' lack of 
the top of the pages, of the concept CFP, and the slots                precision, garbage were graphical, initial pages of CFPs. 
initial date and location The few false content pages were             It is also remarkable that some scientific events found in 
very long and about communities of users (Linux, XML,                  lists were not discovered in the other tests. These facts 
etc), containing many of the slot triggering concepts. The             demonstrate that functional categorization, and, in 
agent failed to recognize CFPs with little data or not                 particular, the use of lists, pays off. 
using the jargon ("deadline", etc). Lists were detected                Scientific articles agent. Recognition errors 
                                                                       happened in articles with few data, data in the end, or 
      http://protcge.stanford.edu                                      with affiliations in unknown companies. An article must 
     2                                                                 have at least three of the slots Organization-Name 
      http://herzberg.ca.sandia.gov/Jess 


40                                                                                                                Al AND THE INTERNET Author-Name, Location, e-mail and Department. The    "student" 43% and the remaining 6 classes less than 27%, 
agent missed articles containing only the authors' names, lowering the average rate to around 50%. 
but this is normal in other similar systems like CiteSeer. Other drawbacks are the huge incidence in the class 
  Contents classification was based on information about "other", almost three times the sum of the other classes 
articles' publication, usually put in the top of papers. together, 65% of them wrong. This class severely 
More than half of the articles didn't bring this data. affected performance, since 90% of the mistakes of the 
                                                     tests came from it. Anyway, even if the classification was 
Cooperation. We executed one more test, in which the correct, the utility and costs of such system would be 
agents cooperated. The CFP agent asked the articles' questionable, since more than 73% of the pages would 
agent for anchors in top of papers containing concepts have to be categorized as "other". 
like "conference", "journal", etc. The articles' agent This deluge of garbage pages seems to stem from two 
transformed these requests into rules to suggest anchors facts: (a) The absence of functional categorization, and 
to the CFP agent. Although it worked and no suggestion (b) the role of ontologies was underestimated in WebKB, 
was wrong, only three anchors were sent.             since its ontology doesn't seem to be comprehensive 
  To prove the usefulness of cooperation, the CFP agent enough. On the contrary, MASTER-Wcb's ontology 
scanned anchors in Program Committees seeking for    incorporates classes not useful yet, such as projects and 
suggestions to a future "researchers" agent. No extraction products, because agents to process these classes can be 
technique (e.g. proper names) or dictionary was present, available in the future. Moreover, current agents apply 
only simple heuristics. The agent recommended 30     these definitions to manage their own classes. 
correct and 7 wrong anchors, a promising rate, given that 
                                                       On the other hand, the learning process may face 
researchers' pages are less structured and, therefore, problems on generalization with an ontology with many 
harder to be retrieved by search engines queries.    classes. Much more annotated pages would probably be 
                                                     needed as well. Therefore, any solution shall rely on 
5 Related Work and Discussion                        cooperation, with learning or inference agents. 
Many subject areas are involved with this project: 
information, retrieval, extraction, classification, multi- 5.2 CiteSeer and DEADLINER 
agents, information agents, NLP and ontologies, at least. These systems perform efficient retrieval, filtering and 
Instead of trying to review these areas, we will focus on extraction over the Web, exploiting statistical and 
comparing and discussing solutions similar to ours.  learning methods joined with a priori knowledge. 

5.1 WebKB                                            CiteSeer. One of the most accessed software in the 
                                                     search of scientific articles [Bollacker et al, 1999]. They 
This system [Craven et al, 1999] integrates extraction and are found monitoring mailing lists, newsgroups and 
classification as separate tasks, supported by machine publishers, or querying search engines with keywords 
learning. Pages from computer science departments' sites "papers", "publications" and "postscript". An article is 
in universities are classified against a domain ontology recognized by the existence of a reference section. 
previously defined, with classes and relations. The pages The system extracts bibliographic data from each 
were represented using IR techniques. Classification and article and from its reference section, which plays the 
extraction rules were learnt from annotated corpi.   role of the functional category of list, helping to locate 
  The decision of relying on machine learning depends other articles. The number of citations of an article by 
upon some issues. The first one is a comparison between others represents a measure of its relevance. Databases of 
the costs of annotating corpi against inspecting them for authors and journals, as well as complex techniques, are 
knowledge acquisition, as we did. ML brings gains such applied to identify co-references for authors and articles. 
as speed and adaptability. However, there are 
drawbacks, like readability and ontological engagement DEADLINER. This system [Kruger et al 2000] 
of the learned rules (which tends to be quite specific), searches the Web for scientific events. It scans 
difficulties to include a priori knowledge and to capture newsgroups and broadcast e-mails, and has its own meta-
some rules without adding lots of features, and even to robot. From each CFP, it extracts initial and final date, 
generalize through a huge number of features or classes. deadline, program committee, and affiliation of each 
  WebKB's ontology was composed of four basic        committee member, themes, events' name and country. 
classes: activities - with subclasses projects and courses - Extraction is carried out by a sequence of positional 
persons - student, faculty and staff -, departments and filters integrated using automatic learning. Extraction 
other. Relations among classes were defined, as in our performance achieves more than 70% for all the slots. 
project: project members, advisors, instructors, etc. For program committee extraction, the system benefits 
                                                     and updates CiteSeer's researchers' database. 
Discussion. The authors evaluated contents'            Recognition performance is similar to ours (more than 
classifications only by the false positives, reporting rates 95%), but its definition of event is more restrictive: all 
between 73 and 83 %, except for the classes "staff   the slots are required, except country, plus some 
member" and "other". Nonetheless, if false negatives submission information. MASTER-Web's CFP agent 
were computed, the class "other" reaches 93,6%, 


Al AND THE INTERNET                                                                                     41 