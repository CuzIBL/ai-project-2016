                 ODISET: On-line Distributed Session Tracing using Agents * 

                Salvador Mandujano (smv@itesm.mx)                Arturo Gal van (agalvan@itesm.mx) 

                                            Center for Intelligent Systems 
                          Instituto Tecnologico y de Estudios Superiores de Monterrey 
                                                  Monterrey, Mexico 

                        Abstract                               which a connection sequence stems. If some sort of anoma•
                                                               lous activity is observed from one of our users, it may be nec•
     When a security incident occurs it is sometimes           essary to trace the origin of the session in order to identify the 
     necessary to identify its causes for legal and            person behind it. In most cases, this is not easy to accomplish 
     cautionary purposes. In an attempt to hide the            [Yoda and Etoh, 2001]. 
     origin of her connection, a malicious user may              Within the domain of a LAN, it is rather straightforward to 
     have jumped from a source host h8 into a series           perform this tracing given that system administrators usually 
     of hosts h1 € H = {h1,h2,..., hn} before breaking         have access to all the hosts within their LAN. Unfortunately, 
     into final target ht. This connection sequence            not all sessions come from the inside. If a connection is re•
     describes a path that makes it difficult to find h8       ceived from the outside, we will have to contact the admin•
     given ht due, in part, to the prohibitive amount of 
                                                               istrator of a remote host hr in order to discover the identity 
     cooperation and synchronization that is required          of the user or the next link of the connection path or chain. 
     in practice by administrators. This paper describes       Our fellow administrator will have to look into her system 
     a distributed rule-based model that automates this        to realize that, perhaps, it has been compromised as well. It 
     tracing process on-line with a 0(\H\)) worst case 
                                                               is possible that the user we arc looking for is using hr as a 
     scenario. Autonomous agents collaborate on the            step-stone to reach our server. In that case, we will have to 
     tracing and detection of the origin of an interactive     contact some more system administrators within the country 
     connection using a loop unwinding technique and           and/or abroad [Cheswick and Bellovin, 1994] [Stoll, 1987]. 
     incorporating public key cryptography to create           This has obvious implications time and cost-wise. 
     ciphered channels that allow them for secure com•
                                                                 Once a system has been compromised, the perpetrator may 
     munication. To meet the challenges of minimum 
                                                               have left back-doors installed to facilitate future access to the 
     system workload and improved robustness, the 
                                                               system. Using interactive sessions, she may visit the system 
     prototype features lightweight design and imple•
                                                               again even when the software has been patched and her back-
     mentation as well as a dynamic port-allocation 
                                                               door remains untouched. It is not necessary for the user to be 
     scheme to prevent sniffing and denial of service 
                                                               logged on in order to be detected. Audit trail files can be used 
     attempts. We describe the proposed model and 
                                                               to do off-line tracing but this can be a tough task since audit 
     present the experimental results obtained with the 
                                                               logs may have been tampered with or deleted. 
     prototype system ODISET. 
                                                                 In the case of connections to web servers through HTTP 
                                                               and HTTPS, for instance, the hosts that compose the connec•
                                                               tion chain between client and server cannot be easily modi•
                                                               fied. Some components of the routing system would have to 
 1   Introduction                                              be modified in order to force the packets to follow a particular 
                                                               path. In the case of interactive sessions, however, applications 
 Unauthorized access to computer systems is increasing in 
                                                               such as telnet, login, rlogin and ssh allow a user 
 parallel with the growth of the Internet (iRapalus, 2002]). 
                                                               with suitable access permissions to connect from host to host 
For purposes of protection, accountability and liability, the 
                                                               back and forth creating loops at will to scramble her connec•
 need for connection back-tracing is a reality in the areas of 
                                                               tion path a little. This significantly complicates the structure 
cybernetic-law enforcement and computer security. The au•
                                                               of the chain and the amount of effort required to detect the 
thentication structure of our networks as well as their dis•
                                                               root host h  from where she is actually starting everything up. 
 tributed nature complicates the task of spotting the host from          8
                                                               In fact, the complexity of back-tracing a connection across a 
                                                               set H of n hosts maybe small for a small n and a small num•
   *This project was supported by the INSYS Computer Security 
                                                               ber of connection hops, but it rapidly increases as n becomes 
Research Grant (Cdtedra INSYS de lnvestigacidn en Seguridad In-
formdtica) of Instituto Tecnol6gico y de Estudios Superiores de larger due to the number of hosts that a chain may contain. 
Monterrey                                                        One of the challenges of intrusion detection is to accu-


 MULTIAGENT SYSTEMS                                                                                                   749  rately identify the main causes of an incident. The ultimate  tion chain. That is, an administrator can only see the terminal 
 goal is to catch intruders in real time and our objective is to number or the IP address/host-name of the immediate host 
 help intrusion detection systems do the part of session trac• from where the users are logging on. She is unable to tell, 
 ing on-line. There are some intrusion detection and intrusion however, whether that host is in fact hi (the machine from 
 response tools [Yoda and Eton, 2001] [Asaka et a/., 1999]     where the user is actually typing in commands). In order to 
 [Wang et al, 2001] that provide some sort of off-line con•    find out whether that is the root host or not, she will have to 
nection tracing that also performs data correlation with previ• contact the administrator of the remote system who, in turn, 
ously recorded user activity information.                      will have to perform a similar checking. 
   This paper proposes an on-line approach that makes use of     This job is cumbersome and requires time, communication, 
intelligent agents to identify the origin of a live session by and trust from the parties involved. For the case of a connec•
unwinding connection loops. Instead of using historical au•    tion that has been closed already, audit information will have 
dit trails, this model relies on evidence captured on operating to be examined in order to find the nodes of the chain that lead 
system tables that are continuously refreshed by the system.   to the origin of the connection. This off-line sort of tracing 
For this reason, it is not likely that these tables experience has an important flaw: it counts on the existence and integrity 
changes that go unnoticed. The communication structure of      of audit log files. For clean systems this would not be a prob•
the agents uses RSA public-key cryptography [Rivest et al,     lem but, for systems that have been compromised, and, in the 
 1979] [Schneier, 2001] to implement an encryption model       case of a connection chain created to perpetrate an attack this 
that protects all communications between agents. One of the    could probably be the case, these files could have been tam•
main issues of the multi-agent approach to automatic secu•     pered with during a previous break-in f Yoda and Etoh, 2001 ]. 
rity monitoring is the overhead imposed by this sort of tools  On the other hand, if a connection is still alive, i.e. there is a 
[Weiss, 1999] [Spafford and Zamboni, 2000]. Our prototype      flow of packets between source and destination, information 
system ODISET was built from a lightweight design that does    contained on system tables and network packets can be used 
not represent a performance threat, making it ideal for wide   to trace the user while she is on-line. That is, precisely, our 
deployment through an open source operating system. We         approach. 
present the design ideas behind the model, the tracing and 
communication techniques, the loop-unwinding method, as        3   Related Work 
well as some experimental results of the first release of the 
prototype.                                                     There are some projects that touch on the problem of con•
   The rest of this paper is organized as follows: Section 2   nection route tracing. One of them is the method proposed 
explains the problem of connection back-tracing. Section 3     in [Yoda and Etoh, 2001]. This model implements network 
discusses relevant related work in the area. Section 4 is a    traffic monitors that perform session tracing once a server has 
description of our solution approach and the implementation    been compromised. A system that computes deviations from 
issues of the prototype. Section 5 includes experimental re•   the traffic observed at two different hosts helps determine if 
sults and findings. Conclusions and future work are in section these hosts were used in the same connection chain. Since 
6 right before the listing of bibliography and references.     checking network traffic at a node involves huge amounts of 
                                                               data, multiple packet monitors permanently filter and record 
2   The Problem of Connection Back-tracing                     specific system activity to build their own logs. These files 
                                                               are analyzed by a data correlator to identify the hosts of a con•

Given a set of hosts H = {h1, h2,..., hn), with a user         nection chain. It is important to notice that this system deals 
could create a connection chain of m hops as follows: from     with the problem of deleted logs by creating its own records. 

host hi into from into from into  These records, however, may be the target of the same type 
and so on, until finally connecting to target host ' The of attack. 
problem of connection back-tracing is: given the set H, the      IDA (Intrusion Detection Agent system) [Asaka et al, 
target host and username connected to find the                 1999] is another system that detects the origin of an infor•
hosts that compose the connection chain and identify its root  mation exchange related to an incident. It is primarily an in•
host                                                           trusion detection system that employs mobile agents to detect 
  For a small this problem is straightforward. Just a          local attacks. From a main host, investigation agents are sent 
few hosts need to be analyzed in order to identify the source  over to the requester that needs an integrity check. These 
of a connection sequence. However, as n becomes larger (e.g.   agents use the MLSI (Marks Left by a Suspected Intruder) 
n 2), the complexity of the problem increases since a          strategy to reduce the amount of data needed to flag system 
larger number of hosts in H multiplies the possibilities of cre• activity as anomalous. In order to collect further information 
ating a more confusing connection path.                        on a break-in, IDA does passive route tracing using audit log 
  System administrators have limited access to information     data. The structure of the tracing method is not specified by 
on who is connecting to one of their servers. On a LAN, ad•    the authors but its agents broadcast connection evidence to 
ministrators typically have login access to all servers, which their peers as a way of identifying possible hosts involved in 
makes the tracing process easier; however, for connections     the attack. 
coming from the outside of the LAN, they will be unable to       The TBAIR system (Tracing-based Active Intrusion Re•
freely access all other servers for scrutiny. The visibility of sponse) [Wang et aL, 2001] is a network-based intrusion de•
this type of connections reduces to one link of the connec-    tection tool that, unlike most traditionally-passive intrusion 


750                                                                                             MULTIAGENT SYSTEMS detection systems, adds active response to security events us• that perfectly fits into a network environment [Huhns and 
ing a technique called Based on Sleepy Watermark Tracing.     Singh, 1998] in order to speed up connection back-tracing 
TBA1R tries to attack the root of the vulnerability exploit•  using autonomous agents. This approach eliminates the need 
ing problem by locating the originators of the incident to    for centralized data collection and analysis, a method that is 
hold them accountable for their intrusions and their method   still in use and that represents a design deficiency by putting 
is based on the analysis of evidence collected from the net•  the availability of a system in risk (monolithic systems typi•
work.                                                         cally suffer from having a single-point-of-attack). 
  Thumbprinting [Staniford-Chen and Heberlein, 1995] is a       In order to provide the agents with survivability features 
technique that places several processes across the network in that make them more resistant to attack, each agent owns a 
order to capture activity signatures or "thumbprints". This   digital certificate to create private communication channels 
method does not require to have processes on all hosts and,   when interacting with its peers. With the intention of reduc•
like in the case of [Yoda and Etoh, 2001], it replicates packet ing the probability of Denial of Service (DoS) attacks targeted 
information for future review. This system is based on the    toward the agents, a port-allocation scheme is used. This 
fact that the packet content of a session passing though a set scheme dynamically changes the socket port numbers used 
of hosts is invariant and can be compared in order to identify a by the agents in order to avoid being monitored or receiving 
host in the chain. This system is capable of detecting the root unfinished-protocol requests. 
of a connection but it is not designed to identify the exact    This system features rule-based agent behavior through 
hosts that are part of the chain.                             which individual agents are capable of detecting connection 
  The approach that we present here through the implemen•     loops in a chain. The approach deals with the problem of 
tation of the OD1SET system differs from these previous       deleted or damaged audit information by not using historical 
projects in the following manner. It performs on-line rather  audit data. Agents look up information on dynamic session 
than off-line tracing (i.e., it does not use audit logs). The sys• tables in order to extract data relevant to the tracing process. 
tem does not incorporate agent mobility. Instead, it uses a   The process table, for instance, is not easily modifiable as au•
distributed model using agents that communicate over secure   dit logs are. The system might go down due to inconsistency 
channels for sharing information. Unlike some other models,   if changes are made to this type of file, which would make 
ODISET is able to not only identify the origin of the con•    the change evident. 
nection but also all the hosts that are part of the connection 
chain.                                                        4.1   Proposed Model 

                                                              Tracing method and security 
                                                              The system is composed of a number of tracing agents (Fig•
                                                              ure 1) that communicate with each other sharing information 
                                                              on user connections. There is an agent running at each host 
                                                              hi and the ideal situation is having an agent running on every 
                                                              host of the network. Every agent has client and server capa•
                                                              bilities that enable it to request information from other agents 
                                                              and to supply information to them. An agent is not useful by 
                                                              itself, it needs to collect information from the others in order 
                                                              to identify the links of a connection chain. The agent at the 
                                                              target host will eventually collect information from a number 
Figure 1: Basic composition of an ODISET tracing agent:       of its peers and will inform to the local administrator about 
public and private encryption keys, client functionality, server the origin of the connection. 
functionality, rule base, and knowledge base (connection        The perceptions of a tracing agent are received from two 
chain tree + user data).                                      main sources: 1) the state of the system regarding user ses•
                                                              sions and connections, and 2) messages from other agents re•
                                                              questing or providing information. 
                                                                The environment an agent inhabits is highly dynamic and 
4   Solution Approach using Agents                            provides the communication channel necessary for an agent 
"We require systems that decide for themselves what they      to stay in touch with its peers over the network. This envi•
need to do in order to satisfy their design objectives. Such  ronment can also represent a threat to the tracing system if 
computer systems are known as agents" [Weiss, 1999]. The      malicious users gain access to it. 
use of agents for performing system assurance activities        As a result of the changes perceived by an agent, it can 
[Spafford and Zamboni, 2000] that typically require the skills perform a number of different actions: a) send messages to 
of a human (e.g. inference, learning and decision mak•        an agent, b) request messages from an agent, c) broadcast 
ing) makes possible the development of automatic or semi-     messages to all agents, d) generate encryption keys, e) en•
automatic tools that aid system administrators in their task of crypt messages, f) decrypt messages, g) identify connection 
securing a system.                                            loops, h) retrieve system status information, and h) save its 
  The distributed nature of agents allows for more efficient, knowledge to a safe location. 
parallel data processing. We take advantage of this feature     The knowledge of an agent is stored on a repository known 


MULTIAGENT SYSTEMS                                                                                                  751  as knowledge base (KB). This KB includes tracing host infor•
 mation and user data. A tree structure stores the information 
 on the hosts that are part of a connection chain. Information 
 regarding user names, login times and dates is stored on a sep•
 arate structure. These two elements represent all the knowl-
 edge an agent has about the state of its environment. Should 
 this knowledge be lost, the agent would lose track of previous 
 events and would have to be updated by its peers. 
   The actions an agent takes depend on the information of the 
 state of the system and its perceptions [Russell and Norvig, 
 1995]. Embodied into the agent are a set of rules that enable 
 the agent to work autonomously deciding what to do. As new 
 knowledge is fed into the KB more rules from the rule base 
 need to be analyzed before making any conclusion and pro•
 ceeding (the rule base is composed of 23 rules). The type     Figure 2: Loop unwinding. If a user connects from host h8 
 of perceptions and actions do not change but the state of the into host ht doing a loop through hops 1, 2, 3, 4, 5 and 6 as 
 environment does evolve hereby modifying the behavior of      shown above, agent A at ht will start the tracing process and 
 agents. The type of rules that make up the rule base are of the will be able to identify the loop to reduce tracing time in the 
 form:                                                         future. 
   R1: 
 IF ((HOW-CONNECTED(User)^Console) AND                           If we have a set H of n hosts, and a user creates a connec•
 (WHAT-DOING(User)=Ssh-to(Target)))                            tion chain C of m hops, the system will behave well with a 
    TRACTNG-DONEO;                                             O(n) worst case scenario. Suppose m n. If the number q 
   R2:                                                         (0 q m) of connections that go from host hx into host hy 
 TF ( (MESSAGE-TYPE (Message) tracing-                         - or vice versa - form a loop, the arrangement of the agents 
 request) AND (VALID-PUBLIC-KEY(P-                             will find at most two relevant connections between the hosts 
 key)=False))                                                  hereby unwinding the loop. This is due to the fact that an 
    DENY-CONNECTIONO AND BROADCAST-                            agent is capable of identifying repeated connections toward 
 TREE () AND ALERT() ;                                         itself by storing information on what users are connected. For 
                                                               the case of loops passing through k hosts, the chain will be re•
   In order to protect their information exchanges, all agents duced to at most 2k hops. This makes a worst case scenario 
 have an RSA key-pair that is used to negotiate symmetric ses• of O(n) with n =  
 sion keys before encrypting their messages. Encryption at 
                                                                 Several methods exist (see [Wolf and Lam, 2000] for a ref•
 this level guarantees that the information will not be visible 
                                                               erence) for loop unwinding, mostly in the compilers and dis•
 at any point before reaching the top of the IP stack of the 
                                                               crete mathematics areas. In our model, we utilize a simple 
 recipient party. This will deter sniffing attacks that arc other•
                                                               technique based on observed activity. An agent first stores 
 wise possible on plain text agent communications [Jansen et 
                                                               user name and host-name information on its KB. When a trac•
al., 2000]. 
                                                               ing process is started, an agent will engage in communication 
   The tracing process starts when a connection needs to be    with several neighbor agents in order to collect data that al•
 monitored. Agents at target host ht receives local informa•   low them to draw conclusions. Each time agent A receives 
tion from the system and checks for remote connections. If     new information, it checks its KB for loops. This is done as 
 there is a connection from a remote machine hr, A will con-   follows (see Figure 2). All tracing requests have an ID num•
tact agent B at host hr in order to research the connection.   ber w. Agent A initiates a tracing round. If while waiting for 
For this purpose, a private channel will be opened using the   news on a particular w the agent is being asked by a coop•
asymmetric encryption keys of the agents. A symmetric ses-     erating agent B for information to complete tracing round w 
sion key will be agreed upon and all messages will be en•      as well, the agent knows it is part of a loop since it is receiv•
crypted with it for that exchange. The same procedure will     ing information on a tracing round that it started (all agents, 
be followed if there are relevant connections from outside of  including initiators have this property). The trace is stored 
the host of hr coming into the server. A set of secure channels on its KB tree T and, if the user being traced repeats a loop 
will be setup by the agents in order to share the information that passes through the same host where agent A is located, 
they have regarding connections and user activity. One hop at  this agent will reduce the tracing time by omitting a further 
a time, the links composing a connection chain will be found. requests to follow a loop. 
   The tracing information obtained by an agent is shared with 
the rest of the agents through broadcast communication (i.e., Dynamic port-allocation protocol 
an agent sends a message to all existing agents). This guaran• Network service daemons usually work on a particular port 
tees that the KB's of the agents are consistent with the state of listening for requests. Port-scan attacks try to reveal what are 
the environment and that, in the event of a security incident, the services listening on the ports of a host. Once this is done, 
the knowledge acquired by an agent will not be lost as it has they look for vulnerabilities present on one of those services 
been replicated and enriched by other agents.                 and, if they find one, they are in a position to exploit such a 


752                                                                                             MULTIAGENT SYSTEMS flaw on the port they have previously identified. DoS attacks  the best performance possible, the implementation was made 
are started with port-scans to send a large number of request  in C by minimizing the number of libraries to include. Con•
for service to a vulnerable port so that, at the end, there are so sidering that programs and data files may be damaged after 
many requests pending to be answered - usually incomplete      a security incident and that a security tool can not rely on 
requests at protocol level - that the machine slows down and   them, our agents do not use the output of programs such as 
needs to be restarted. Additionally, if the service on that port w, who and ps to read system tables like utmp and wtmp. 
does not support encryption, the traffic going through it may  They incorporate this functionality into its own body, which 
be observed by a network sniffer.                              gives them extended independence. The size of each agent 
   All network services using sockets on a port may suffer     is around 20 Kbytes to which we add two encryption keys 
from this sort of attacks. We propose a model to minimize      that need to be uploaded at certain point (around 4 additional 
the likelihood of being a target. As we mentioned, all com•    Kbytes) as well as the knowledge and rule bases that are never 
munications between agents is encrypted, so sniffing of plain  uploaded entirely into memory. 
text is impossible in practice. In order to deter attacks at the The knowledge base of each agent includes a tree structure 
service port, we propose a technique that can be used in real  T where all connection chains are stored. Whenever a host has 
life with radio equipment: channel switching (this is currently received all the information regarding a particular session, it 

being implemented on the prototype). Initially, all agents lis• stores the connection chain c = [hi h2 ... hri] into 
ten on a well-know port p. The requests for service on that    T and sends it to all available agents. Every agent reads c and 
port do not allocate significant system resources according to finds the hosts in c that match its own tree. It then creates new 
the implementation. This basic port is used just to agree on   branches to keep its KB up-to-date. The rule base is encoded 
the actual communication port q for the exchange (q p). along with the body of the agent. Being an static structure, it 
For this, the receiver proposes a valid port number that is    is not necessary to keep it as a separate entity. 
sent to the other party over a secure channel. They imme•
diately switch to that port for exchanging information. This   5   Experimental Results 
port switching is repeated during the session within a fixed 
short period of time. In order to defeat this protection mecha• In order to evaluate the efficiency of the method, multiple ex•
nism, a port scan will have to be run again and, by the time it periments were prepared. After some implementation cor•
succeeds, the communication may have moved to a different      rections, all of them were successful after the unwinding 
port. Frequency of switching and encryption this mechanism     technique was incorporated. The testing facility is a set of 
possible.                                                      seven Linux machines running kernels 2.1 and above on Red-
                                                               hat 7.2, RedHat 7.3, RedHat 8.0 and Mandrake 8.0 operat•
4.2   Implementation of the Model                              ing system installations. The general structure of the ex•
As a proof of concept, the model was implemented on a pro•     periments consists of creating connection chains of length 
totype system named ODISET (On-line Distributed SEssion        m {2,4,8,16,32} using n hosts where n {3,5, 7}. 
Tracing). Every agent is a stand-alone process implemented     This maximum number of machines was selected since our 
with sockets for providing client and server functionality. It experience tells it is highly improbable that, for session per•
can request information from others and it can share infor•    formance purposes, an attacker uses much more step-stone 

mation as well. A 1024-bit RSA key-pair {Kpub,Kpriv}           hosts. All cases where there is no loop in the chain, that 
is generated before the agent is launched. Once the agent is   is, where m = n are easily resolved so we prepared con•
started up, it is ready to collaborate in the tracing of a ses• nections that include a series of loops along the chain. For 
sion. When contacting a peer agent, it exchanges public keys   instance, in the three-server setup, the connection goes in cir•
and verifies the signature on the received key. The certifica• cles from host hi into h2< from host h2 into host h3, from host 
tion must come from the ODISET master key whose public-        h3 back into host h3 and so on for a total number of m hops. 
key is accessible to all agents. In order to speed up message  The experiments show that the algorithm effectively unwinds 
encryption, and given that encryption with public-key meth•    the loops. When an agent finds the same loop repeated sev•
ods is much slower than the one using private-key algorithms   eral times, it will not try to solve it over and over again. Its 
[Schneier, 2001 ], the agent that is to send a message does the KB contains user and connection information that allows it to 

following: 1) it generates a session key KDES for symmetric    conclude that a user is creating a loop. 
encryption, 2) it then encrypts the message M using KDES*        Part of the contribution of this method is the fact that by 
3) it encrypts KDES using the public key of the recipient,     using loop unwinding, the performance of the algorithm has 
and, finally, 4) it sends the encrypted session key and the en• an upper threshold that is, at most, linear on the number of 
crypted message to their destination. The implementation of    hosts n through which the user connects. A set of n agents 
the RSA and DES algorithms is based on version 2.0 of the      will be in charge of tracing the connection and even for a 
RSAREF™cryptographic library by RSA Laboratories.              very long chain, an agent located on each hosts guarantees 
   The first release of the ODISET prototype was developed     that loops will not delay the tracing process in any way. 
on a RedHat Linux 8.0 box. Although agent templates can          Table 1 includes tracing numbers with and without encryp•
be easily obtained from multiple agent-generator systems and   tion. Both columns indicate that the growth of the tracing 
for different compilers and interpreters, they typically put un• time is below linear time with respect to the number of hops 
necessary functionality into the agent that produces heavy     m (this makes us think this model should escalate well to large 
agents. For this reason, and with the intention of providing   networks). The time difference from tracing with and without 


MULTIAGENT SYSTEMS                                                                                                   753 