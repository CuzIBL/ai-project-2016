 Analysis   and   Veriﬁcation    of  Qualitative    Models    of Genetic   Regulatory     Networks:
                                 A  Model-Checking        Approach

             Gregory´  Batt1, Delphine  Ropers1,  Hidde  de Jong1, Johannes   Geiselmann2,
                       Radu  Mateescu1,   Michel  Page1,3, Dominique   Schneider2
         1INRIA  Rhone-Alpes,ˆ  Montbonnot,  France, 2Laboratoire  Adaptation et Pathogenie´ des
           Microorganismes,   Universite´ Joseph Fourier, Grenoble, France, 3Universite´ Pierre
                                   Mendes`  France, Grenoble, France

                    Abstract                          GNA  has been used to analyze several genetic regulatory
                                                      networks of biological interest (e.g., [de Jong et al., 2004a]).
    Methods developed for the qualitative simulation of
                                                        Given a model of a genetic regulatory network, the above
    dynamical systems have turned out to be powerful
                                                      qualitative simulation method produces a state transition
    tools for studying genetic regulatory networks. A
                                                      graph, consisting of qualitative states and transitions between
    bottleneck in the application of these methods is
                                                      qualitative states. The graph describes the possible qualitative
    the analysis of the simulation results. In this pa-
                                                      behaviors of the network. When simulating large and com-
    per, we propose a combination of qualitative sim-
                                                      plex genetic regulatory networks, the state transition graph
    ulation and model-checking techniques to perform
                                                      usually consists of hundreds or even thousands of states, as
    this task systematically and efﬁciently. We apply
                                                      a consequence of which the analysis of the graph by visual
    our approach to the analysis of the complex net-
                                                      inspection alone becomes error-prone or even practically in-
    work controlling the nutritional stress response in
                                                      feasible. In order to analyze large state transition graphs,
    the bacterium Escherichia coli.
                                                      previous work in qualitative simulation has proposed the use
                                                      of model-checking techniques [Brajnik and Clancy, 1998;
1  Introduction                                       Shults and Kuipers, 1997]. These techniques allow for the
Qualitative simulation aims at making predictions of the be- efﬁcient veriﬁcation of properties of discrete transition sys-
havior of dynamical systems in the absence of detailed, quan- tems [Clarke et al., 1999].
titative information on parameter values and functional rela- The aim of this paper, extending preliminary ideas in [Batt
tions [Kuipers, 1994]. The idea of qualitative simulation has et al., 2003], is to demonstrate the effectiveness and practi-
attracted much interest in the context of a biological appli- cal applicability of the combined use of qualitative simulation
cation, the analysis of genetic regulatory networks, that is, and model checking for the analysis of large state transition
the networks of regulatory interactions between genes, pro- graphs produced by the qualitative simulation of genetic reg-
teins, and small molecules underlying the development and ulatory networks. In particular, we show how state transition
functioning of all living organisms. On the one hand, mathe- graphs can be reformulated as so-called Kripke structures on
matical methods supported by computer tools are indispens- which properties of the behavior of the network, expressed in
able for the analysis of genetic regulatory networks: most net- temporal logic, can be veriﬁed. In addition, we present a new
works of interest involve many genes connected through com- implementation of GNA that connects the qualitative simula-
plex feedback loops, thus making an intuitive understanding tor to state-of-the-art model checkers.
of their dynamics difﬁcult to obtain. On the other hand, nu- We have applied the above approach to the analysis of the
merical simulation methods are difﬁcult to apply, because complex regulatory network controlling the nutritional stress
only a few networks are well-understood on the molecular response in the bacterium Escherichia coli. Among other re-
level, and quantitative information on the interactions is sel- sults, the use of model-checking tools has allowed the charac-
dom available.                                        terization of cycles in a large state transition graph obtained
  We  have previously developed a method for the quali- through qualitative simulation of the network. The cycles
tative simulation of genetic regulatory networks [de Jong correspond to biologically-important phenomena that are cur-
et al., 2004b].  This method  differs from traditional rently being experimentally tested in our laboratory.
approaches towards qualitative simulation in that it has In the next section of this paper, we brieﬂy review the
been tailored to a class of piecewise-linear (PL) differ- qualitative modeling and simulation of genetic regulatory net-
ential equations with favorable mathematical properties works. This will set the stage for a discussion of the combined
[Glass and Kauffman, 1973].   This allows it to deal  use of qualitative simulation and model-checking techniques
with large and complex networks of regulatory interac- in the third section. The application of this approach to the
tions. The qualitative simulation method has been imple- analysis of the nutritional stress response network is the sub-
mented in a publicly-available computer tool, called Ge- ject of the next section. We ﬁnish with a discussion of the
netic Network Analyzer (GNA) [de Jong et al., 2003].  approach in the context of related work.2  Qualitative  modeling  and  simulation  of         for the deﬁnition of a ﬁnite partition D of the phase space
   genetic  regulatory networks                       Ω into hyperrectangular regions, called domains. This parti-
                                                      tion is such that the derivatives of the solutions in each do-
The dynamics of genetic regulatory networks can be modeled main have a unique sign pattern (Figure 1(b)-(d)). The def-
by a class of piecewise-linear (PL) differential equations of inition of the sign pattern S(x) for a point x in a domain D
                       [                     ]
the following general form Glass and Kauffman, 1973 : is complicated by the fact that the solution of a differential
             x˙ = h(x) = f(x) − g(x) x,         (1)   inclusion is in general not unique. In particular, if x lies on a
                     0                                threshold hyperplane, H(x) is multi-valued, and several solu-
where x = (x1, . . . , xn) ∈ Ω is a vector of cellular protein
                           0                          tions ξ(t) may pass through x with different derivative signs.
concentrations, f = (f1, . . . , fn) , g = diag(g1, . . . , gn), and
    Rn                                                We therefore deﬁne S(x) = {sign(ξ˙ (tx)) | ξ ∈ ΞΣ in D,
Ω ⊂   ≥0 is a bounded n-dimensional phase space box. The
                                                      ξ       x     ξ˙         ξ
rate of change of each protein concentration xi, i ∈ {1..n}, (tx) = , and (tx) ∈ H( (tx))}. We have proven that
                                                                                   [             ] 1
is thus deﬁned as the difference of the rate of synthesis fi(x) S(x) is the same for every x ∈ D Batt et al., 2005 .
and the rate of degradation gi(x) xi of the protein.    Using the domain partition D of the phase space Ω, to-
  The function fi : Ω → R≥0  expresses how the rate of gether with the above qualitative characterization of the dy-
synthesis of the protein encoded by gene i depends on the namics in each of the domains, we can discretize the contin-
concentrations x of the proteins in the cell. More speciﬁ- uous dynamics. In the resulting abstract description, the state
cally, the function fi is deﬁned as a sum of terms having the of the system is represented by a domain, and there exists
            l l           l                           a transition from a domain D to a domain D0, if and only
general form κi bi(x), where κi > 0 is a rate parameter, and
 l                                                    if there exists a solution reaching D0 from D, without leav-
bi : Ω → {0, 1} a piecewise-continuous regulation function      0
deﬁned in terms of step functions s+ and s−:          ing D ∪ D . This leads to the introduction of the so-called
                                                      qualitative transition system, Σ-QTS = (D, →, Π, |=Π),
 +          1, if xi > θi,   −             +          where D is the set of all domains, → ⊆ D × D is a transi-
s (xi, θi) =            and s (xi, θi) = 1−s (xi, θi),
            0, if xi < θi,                           tion relation describing all transitions between the domains,
                                                                                   n
                                                            Dsign            {−1,0,1}
where xi is an element of the state vector x and θi a constant Π = { = S | S ∈ 2    } is a set of propositions
denoting a threshold concentration for xi.            describing the derivative sign patterns, and |=Π ⊆ D × Π is a
  The function gi expressing the regulation of protein degra- satisfaction relation that associates to each domain a qualita-
dation is deﬁned analogously, except that we demand that gi tive description of the dynamics of the system in the domain,
is strictly positive. Notice that with the above deﬁnitions, h is deﬁned by D |=Π Dsign = S iff for all x ∈ D: S(x) = S.
a piecewise-linear (PL) vector-valued function. An example The graph representation of the qualitative transition sys-
of a simple genetic regulatory network and its PL model is tem, G = (D, →), is called a state transition graph. The
shown in Figure 1(a)-(b).                             domains are also called qualitative states. A qualitative state
                          
  The use of step functions s (xi, θi) in (1) gives rise to D is called instantaneous, if no solution remains in D longer
complications, because the step functions are discontinu- than a time instant, and persistent, otherwise. Moreover, it is
ous at xi = θi, and therefore h is discontinuous on Θ = a qualitative equilibrium state, if D |=Π Dsign = S, with
                            li                        0 ∈ S, since then for every x ∈ D, ξ(t) = x is a solution.
        i    i {x ∈ Ω | xi = θi }, the union of the thresh-
 i∈[1..n],l ∈[1..p ]                                  The state transition graph for the example network is shown
oldS hyperplanes. In order to deal with this problem, following
an approach widely used in control theory, we extend the dif- in Figure 1(e). A path in the graph describes a possible qual-
ferential equation (1), deﬁned on Ω \ Θ, to the differential itative behavior of the system (Figure 1(f)).
inclusion                                               In [Batt et al., 2005], the qualitative transition system is de-
                    x˙ ∈ H(x),                  (2)   ﬁned as the discrete quotient of a continuous transition sys-
                                                      tem having the same reachability properties as the original
deﬁned on  , where  x  is the smallest closed hyperrect-
         Ω        H(  )                               PL system Σ, given the equivalence relation induced by the
angular set containing the set of all limit values of h y , for
                                            ( )       partition D. Using standard results from hybrid systems the-
                  [
y 6∈ Θ and y →  x Gouze´ and Sari, 2002; de Jong et al., ory [Alur et al., 2000], it directly follows that the qualitative
2004b; Batt et al., 2005]. A solution of the differential in-
                                                      transition system Σ-QTS is a conservative approximation of
clusion (2) on a time interval is an absolutely-continuous
                         I                            Σ, in the sense that if a solution ξ of the PL system Σ, deﬁned
                               ˙
vector-valued function ξ(t) such that ξ(t) ∈ H(ξ(t)) almost on some time interval I, passes through the time-ordered se-
everywhere on I.                                      quence of domains (D0, . . . , Dm), then (D0, . . . , Dm) is a
  Formally, we deﬁne  the PL system Σ  as the triple  path in Σ-QTS. On the other hand, it may happen that no
(Ω, Θ, H), that is, the set-valued function H given by (2), solution of Σ passes through a sequence of domains corre-
deﬁned on the n-dimensional phase space box Ω, with Θ the sponding to a path in Σ-QTS.2
union of the threshold hyperplanes. Also, we denote by ΞΣ Simple rules exploiting the favorable mathematical proper-
the set of all solutions ξ(t), on a ﬁnite or inﬁnite time inter- ties of the class of PL models have been formulated such that
val, of the differential inclusion (2), that reach and leave a the qualitative transition system can be symbolically com-
threshold hyperplane ﬁnitely-many times.
  The mathematical analysis of PL systems has shown that 1In previous work [de Jong et al., 2004b], a coarser-grained par-
mere knowledge of the relative order of threshold parame- tition of Ω is used, for which this property does not hold.
ters and ratios of synthesis and degradation parameters, de- 2In the terminology of qualitative simulation, the method is
scribing the local strength of gene expression, is sufﬁcient sound but incomplete.                                                                           xb
                                                                          max b
                                                                             D20 D21 D24
                                              −     2 −                                D25 D26 D27
                                      x˙ a = κa s (xa, θa) s (xb, θb) − γa xa, κb/γb D18 D19 D23
            A                                                                D16 D17 D22
                                             −     1                          10  11 12 13  14 15
                      B               x˙ b = κb s (xa, θa) − γb xb,        θb D  D  D  D   D  D
                                          1    2
                                      0 < θa < θa < κa/γa < max a,               D1 D3 D5  D7 D9

                                      0 < θb < κb/γb < max b.               0        2   4  6  8
                                                                                    D1 D   D2 D
       a                   b                                                        θa    θa     max a x
  (a)                                (b)                               (c)                            a

                                                                             max
                                              21   24                          a
  xb                                   20    D    D
                                      D                                      κa/γa
                                              19   23  25   26  27
  max b                                18    D    D   D    D   D               2
                                      D                                       θa         ◦  ◦
                                              17   22                          1
                                       16    D    D                           θa
  κb/γb                               D
                                       10   11      12  13   14  15            0
                                      D    D       D   D    D   D                 1 3  5  7  6
   θb                                                                            D D  D  D  D

                                                                             max b

                                            1                                κb/γb
                                           D       3   5     7  9
                                                  D   D     D  D
    0                                                                         θb
            θ1     θ2    max                                                   0            ◦
             a      a       a xa                                                 1  3  5  7  6
                       κ /γ                       D2  D4   D6  D8               D  D  D  D  D
  (d)                  a  a           (e)                                 (f)
Figure 1: Qualitative simulation of a two-gene network. (a) Graphical representation (legend in Figure 3(a)). Gene b encodes
protein B, which inhibits gene a expression, that is, protein A synthesis. (b) Model consisting of PL differential equations and
parameter inequalities. xa and xb are the protein concentrations, κa and κb (γa and γb) the synthesis (degradation) rates of the
            1  2
proteins, and θa, θa, and θb threshold concentrations. The second differential equation states that the synthesis rate of protein B
                 1                  1
is κb if xa is below θa, and 0 if xa is above θa, and that its degradation rate is γbxb. The parameter inequalities for protein B state
that gene b may inhibit gene a expression, because when synthesized, protein B concentration tends towards the level κb/γb,
         −                                                       1     27
for which s (xb, θb) = 0. (c) Domain partition of the phase space Ω: D = {D , . . . D }. (d) Sketch of the ﬂow in Ω showing
the unicity of the derivative sign pattern in each domain. Dots denote equilibrium points. (e) Graph representation of the
qualitative transition system, Σ-QTS. Dots denote self-transitions. (f) Temporal evolution of the protein concentrations in the
path (D1, . . . , D6). Arrows indicate the derivative signs in persistent states (↑ for S = {1}; ↓ for S = {−1}; ◦ for S = {0}).

puted from a PL model of the network and a set of parameter 3.1 Translate qualitative transition system into
inequalities deﬁning the relative order of the parameters [Batt Kripke structure
et al., 2005]. The implementation of these rules has resulted
                                                      As a preliminary step, we introduce a set of atomic propo-
in a new version of the computer tool Genetic Network Ana-
                                                      sitions, AP , to describe the state of the system. More pre-
lyzer (GNA), available at http://www-helix.inrialpes.fr/gna.
                                                      cisely, the set of atomic propositions we use consists of
                                                      simple expressions describing a protein concentration (e.g.,
3  Analysis  of genetic regulatory  networks  by      value xi = θi, value xi < κi/γi), the sign of its derivative
   model   checking                                   (e.g., dsign xi = {1}), or the type of a state (type = pers,
                                                      type = inst, type = eq, for persistent, instantaneous, and
Models of genetic regulatory networks of biological inter- equilibrium state, respectively). The set of atomic proposi-
est may produce large state transition graphs, thus making tions for the two-gene example is shown in Figure 2(a).
manual analysis of dynamical properties error-prone or even We deﬁne the Kripke structure over AP corresponding to
                                                                                                      AP
practically infeasible. To address this problem, we propose to Σ-QTS as Σ-KS = (D, →, |=AP ), where |=AP ⊆ D × 2
combine the qualitative modeling and simulation method out- is the satisfaction relation associating to every domain D the
lined above with techniques for model checking [Clarke et al., atomic propositions that hold in D. The existence of at least
1999]. These techniques allow for the efﬁcient veriﬁcation of one solution ξ on some time interval [0, τ], τ > 0, with initial
properties of the behavior of discrete transition systems, ex- condition ξ(0) = x0, for every x0 ∈ Ω, guarantees that →
pressed as formulae in some temporal logic.           is total (i.e., every state has a successor), which is required
  Various model-checking frameworks exist, differing by for Kripke structures. The Kripke structure for the two-gene
their expressiveness, user-friendliness, and computational ef- example is shown in Figure 2(b).
ﬁciency. For the sake of clarity of exposition, we focus on 3.2 Express dynamical properties in temporal
one particular framework in this paper, in which the discrete
transition system takes the form of a Kripke structure, and logic
the behavioral properties are expressed in Computation Tree CTL formulae are interpreted with respect to a Kripke struc-
Logic (CTL) [Clarke et al., 1999]. However, we emphasize ture. A CTL formula is built upon atomic propositions. The
that our approach is not restricted to CTL model-checking, usual operators from propositional logic, such as negation
and allows other, more expressive temporal logics to be used (¬), disjunction (∨), conjunction (∧), and implication (→),
as well (Section 3.3).                                can also be used. In addition, CTL provides two types of op-(a)  AP  = { value xa = 0, value xa >0, . . . , dsign xa ={−1}, dsign xa ={0}, . . . , type =inst, type =eq }.

(b)  Σ-KS = (D, →, |=AP ), with
  • D = {D1, D2, D3, . . . , D27 },
  • →=  { (D1, D1), (D1, D2), (D1, D11), (D1, D12), . . . , (D27, D26) },
               1               1           1       1                 1                 1
  • |=AP = { (D , value xa ≥ 0), (D , value xa < θa), . . . , (D , dsign xa ={1}), (D , dsign xb ={1}), (D , type =pers),
               2           1       2                 27           2       27
             (D , value xa = θa), . . . , (D , type =inst), . . . , (D , value xa > θa), . . . , (D , type =pers) }.

(c) Biological property                      CTL formula                       D0   NuSMV result and diagnostic
                                                                                 1       1  3  5  7  6
    • The network reaches a state in which both protein concentrations EF(dsign xa = {1} ∧ dsign xb = {1} ∧ {D } True: (D , D , D , D , D )
    increase, and from that state onwards, a second state in which pro- EF(dsign xa = {1} ∧ dsign xb = {−1})) (witness)
    tein A concentration increases and that of protein B decreases
                                                                                 1        1  3  5  7  6
    • The network will inevitably reach an equilibrium state where AF(type = eq ∧ value xa = 0) {D } False: (D , D , D , D , D )
    protein A has vanished                                                                     (counterexample)
                                                                                          25 13  5  7  6
    • A high level of protein B guarantees the eventual disappearance AG(value xb > θb → AFvalue xa = 0) D False: (D , D , D , D , D )
    of protein A                                                                              (counterexample)
Figure 2: Veriﬁcation of properties of the two-gene network in Figure 1. (a) Set of atomic propositions AP . (b) Kripke structure
Σ-KS over AP corresponding to the qualitative transition system Σ-QTS shown in Figure 1(e). (c) Biological properties, with
their CTL translation, their truth value in Σ-KS for the set of initial states D0, and a diagnostic (witness or counterexample), as
computed by NuSMV.

erators: path quantiﬁers, E and A, and temporal operators, the model checkers, after which the veriﬁcation of the prop-
such as F and G. Path quantiﬁers are used to specify that a erties of interest continues in the environment of the latter
property p holds for some (E p) or every (A p) path starting tools. Figure 2(c) illustrates the veriﬁcation of some proper-
from a given state in the Kripke structure. Temporal opera- ties of the two-gene network. Fairness conditions [Clarke et
tors are used to specify that, given a state and a path starting al., 1999] have been used to ensure that attractors (equilib-
from that state, a property p holds for some (F p) or for every rium states, strongly connected components) are eventually
(G p) state of the path. Each path quantiﬁer must be paired reached (not shown).
with a temporal operator [Clarke et al., 1999].         Recall that the qualitative abstraction used to obtain
  A variety of biologically-interesting properties of the dy- Σ-QTS from Σ is a conservative approximation. Can the con-
namics of a genetic regulatory network can be expressed in clusions drawn from the veriﬁcation of a property on Σ-QTS
CTL  [Chabrier-Rivier et al., 2004]. Typical questions con- (or more precisely on Σ-KS) be transposed to Σ? If every
cern the possibility or the inevitability for the network to reach path in Σ-QTS satisﬁes a property, then from the conserva-
some state(s), the absence or the universality of some prop- tiveness, a corresponding property holds for every solution of
erty, and response or precedence properties (i.e., a property is Σ. Conversely, if a property holds for some path in Σ-QTS,
always followed or preceded by some other property). Some then, since this path may be spurious, the corresponding prop-
examples are given for the two-gene network in Figure 2(c). erty may hold for no solution of Σ. One can deﬁne the set
More generally, these properties can be used for testing the of temporal-logic formulae such that, if a property holds in
validity of a model given experimental data, or understanding Σ-QTS, it does so in Σ. In the CTL model-checking frame-
how the dynamics of a system emerges from the interactions work, this set is the set of formulae that can be expressed in
between its components.                               the temporal logic called ∀CTL [Grumberg and Long, 1994].

3.3  Check  if model satisﬁes dynamical properties    4   Application:  Analysis of the nutritional
The model-checking problem consists in verifying whether
a temporal-logic formula holds in the discrete transition sys- stress response in E. coli
tem at the initial state(s). Highly-efﬁcient algorithms have In case of nutritional stress, an E. coli population abandons
been developed and implemented in model checkers for au- exponential growth and enters a non-growth state called sta-
tomatically solving this problem. Two widely-used model tionary phase. This growth-phase transition is accompanied
checkers are NuSMV [Cimatti et al., 2002] and Evaluator, a by numerous physiological changes in the bacteria [Huisman
component of the CADP toolbox [Mateescu and Sighireanu, et al., 1996]. On the molecular level, this transition is con-
2003]. NuSMV is an efﬁcient, state-of-the-art model checker trolled by a complex genetic regulatory network integrating
for CTL, whereas Evaluator is an on-the-ﬂy model checker various environmental signals. A network including six genes
for the regular alternation-free µ-calculus, a temporal logic believed to play a key role in the nutritional stress response is
based on regular expressions. The algorithmic complexity of shown in Figure 3(a) [Ropers et al., 2004].
these tools is linear in the size of the transition system and A PL model of seven variables has been constructed, one
the formula. In addition to a yes/no answer, the tools return a protein concentration variable for each gene and one input
diagnostic, either a witness or a counterexample, depending variable representing the presence or absence of a nutritional
on whether the property holds or not.                 stress signal. Seven differential equations and forty param-
  In order to combine our qualitative simulator with model- eter inequalities describe the dynamics of the system (Fig-
checking tools, we have integrated export functionalities in ure 3(b)). Using the new version of GNA, we have simu-
GNA. The text ﬁles generated by GNA can be imported in lated two phenomena, namely nutrient starvation, causing the                                                           Nutrient stress signal
(a)

                            GyrAB                            cAMP·CRP Cya
                  P gyrAB
                                                 Fis                      cya   P2P1/P1’
                                       P
                                           ﬁs                                 Fis
                          Supercoiling                         CRP              Synthesis of protein Fis
                                                                        P ﬁs    from gene ﬁs
                                                   P1 P2 crp                    Activation
                                                                                Inhibition
                            TopA                      stable RNAs

                 P1  topA                                                    Abstract description of
                                          P1 P2 rrn                          a set of interactions

            1      +      1   +       1   +         −     5
(b)  x˙ ﬁs = κﬁs (1 − s (xcrp , θcrp ) s (xcya , θcya ) s (xs , θs ) ) s (xﬁs , θﬁs )
              2  −       2    +        2      −      5      +      1   +       1   +
           + κﬁs s (xtopA, θtopA) s (xgyrAB , θgyrAB ) s (xﬁs , θﬁs )(1 − s (xcrp , θcrp ) s (xcya , θcya ) s (xs , θs ) )
           − γﬁs xﬁs
         1    1        2    3    4    5     1    2
    0 < θﬁs < κﬁs /γﬁs < θﬁs < θﬁs < θﬁs < θﬁs < (κﬁs + κﬁs )/γﬁs < max ﬁs

(c) Biological property                      CTL formula                       D0   NuSMV result Time
                                             AG           3             3        s
    • “The transcription of cya is negatively regulated by cAMP and (value xcrp > θcrp ∧ value xcya > θcya ∧ {D } True < 0.1s.
    CRP” [Kawamukai et al., 1985]               value us > θs → EFdsign xcya = {−1})
                                             E          3                        u
    • “rrn[P1] transcription increases independently of Fis [. . . ] (value xﬁs > θﬁs {D } False < 0.1s.
                                               U          3
    following [nutrient] upshift” [Appleman et al., 1998] (value xﬁs > θﬁs ∧ dsign xrrn = {1}))
Figure 3: Network of key genes, proteins, and regulatory interactions involved in the nutritional stress response in E. coli
[Ropers et al., 2004]. (b) PL differential equation and parameter inequalities for the protein Fis. (c) Some expected properties
of the network. Their translation into CTL and interpretation are not detailed here. U is the standard CTL operator Until
[Clarke et al., 1999]. Ds and Du correspond to the initial states for nutrient starvation and nutrient upshift, respectively.

transition from exponential to stationary phase, and nutrient it always remains in it. Checking this property by visual in-
upshift, leading to the reentry into exponential phase. The spection is tedious and error-prone, while it takes NuSMV
simulation results have been analyzed by means of the model- only 3.3 s. Further mathematical analysis has revealed that
checker NuSMV, using the export functionality of GNA. Be- the cyclic paths correspond to solutions spiraling inwards to
low, we give some examples.                           an equilibrium point [Ropers et al., 2004]. In other words,
  The simulation of a nutrient starvation has given rise to a during the reentry into stationary phase, the concentrations
state transition graph of 66 states (27 of which are persistent), of some of the proteins oscillate towards a new equilibrium
computed in less than 1 s. on a PC (800 MHz, 256 Mb). level. This is a surprising result, which is currently subject to
The graph contains a single equilibrium state corresponding experimental veriﬁcation in our laboratory. We also checked
to stationary-phase conditions. Are the predictions obtained a dozen of other properties, two of which are shown in Fig-
from the model consistent with experimental data? In [Azam ure 3(c).
et al., 1999], the measured concentration of the global regula-
tor Fis is shown to decrease and become steady in stationary 5 Discussion
phase, which is characterized by a low concentration xrrn of
stable RNAs:                                          We  propose a combination of qualitative simulation and
   EF(dsign xﬁs = {−1} ∧                              model-checking techniques for the analysis and veriﬁcation
                                                (3)
       EF(dsign x   = {0} ∧ value x  <  θ  ))         of qualitative models of genetic regulatory networks. Model
                 ﬁs               rrn    rrn          checkers help in dealing with the problem that the state transi-
The veriﬁcation of (3) takes a fraction of a second to complete tion graphs generated by qualitative simulation may become
and shows that the observed temporal evolution of the Fis prohibitively large. They permit complex dynamical proper-
concentration is reproduced by the model.             ties, whose veriﬁcation defeats manual analysis capabilities,
  We have also studied the reentry into exponential phase af- to be efﬁciently and reliably checked. The analysis of the ge-
ter a nutrient upshift. Using the same model as above, but netic regulatory network composed of key genes involved in
starting the simulation from the qualitative state characteriz- the nutrient stress response in E. coli illustrates the applica-
ing stationary-phase conditions and with the nutritional stress bility of the approach.
signal switched off, qualitative simulation results in a state Model-checking techniques have been used before for
transition graph of 1143 states (202 of which are persistent), analyzing biological networks. Most approaches start
generated in 1.7 s. The graph contains several strongly con- from discrete models, such as concurrent transition systems
nected components (SCCs). One of these SCC, containing [Chabrier-Rivier et al., 2004] and Boolean networks [Bernot
222 states, can be reached from all states in the graph. The et al., 2004]. In this paper we show that model-checking
qualitative transition system satisﬁes the property   techniques can also be used for more conventional continu-
       AG(statesInSCC   → AGstatesInSCC  ),     (4)   ous models, in particular differential equation models, when
where the predicate statesInSCC is satisﬁed by all and only using qualitative abstractions to discretize the dynamics of
states in the SCC. That is, if the system has reached this SCC, the system. In comparison with ideas along the same line