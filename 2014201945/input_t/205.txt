          Making the Breakout Algorithm Complete Using Systematic Search 

                                   Carlos Eisenberg and Boi Faltings 
                              Swiss Federal Institute of Technology (EPFL) 
                                IN-Ecublens, 1015 Lausanne, Switzerland 
                                    {eisenberg,faltings}@lia.di.epfl.ch 


                     Abstract                          problems. We discover that the algorithm combination also 
                                                       leads to synergies. The weight information from the breakout 
    Local search algorithms have been very successful  algorithm can locate and order hard or unsolvable subprob•
    for solving constraint satisfaction problems (CSP). lems and guide backtracking by a fail-first variable order. In 
    However, a major weakness has been that local      addition, we introduce a weight sum constraint that can be 
    search is unable to detect unsolvability and is thus used to identify unsolvable subproblems of a certain size. 
    not suitable for tightly and overconstrained prob•
    lems. We present a hybrid solving scheme where 
    we combine a local search algorithm - the break•   2 The Scheme 
    out algorithm, with a systematic search algorithm  When a problem contains an unsolvable subproblem, we ob•
    - backtracking. The breakout algorithm is used     serve that the average constraint weight of a constraint be•
    for identifying hard or unsolvable subproblems and longing to an unsolvable subproblem is higher than the aver•
    the backtracking algorithm proves the solvability  age constraint weight of the problem. In addition, the smaller 
    of these subproblems. The resulting hybrid algo•   the unsolvable subproblem, the higher the average constraint 
    rithm is complete and is tested on randomly gen•   weight. This observation is supported by Lemma 1: 
    erated graph 3-colouring problems. The algorithm     Lemma 1; After increasing the weights n times, the sum of 
    performs extremely well for all areas of the phase the constraint weights u)pk of an unsolvable subproblem Pk 
    transition and outperforms the individual methods  with k constraints must be greater than or equal to n + k. 
    by several orders of magnitude.                      Proof: If a subproblem is unsolvable, then in every break•
                                                       out step, one or more of the subproblem constraints is always 
1 Introduction                                         violated, thus every time the algorithm is caught in a local non 
                                                       solution minimum, one or more of the corresponding weights 
The breakout algorithm is an efficient, local search algorithm must be increased. The lower bound of wpk can be derived 
for solving Constraint Satisfaction Problems (CSPs). The by assuming that in every breakout step only one constraint is 
roots of the algorithm go back to [Minton et a/., 1992] and violated. 
to [Morris, 1993]. [Minton et al.,1992], developed, a local By applying Lemma 1 we can define a weight sum con•
search algorithm, called min-conflict heuristic, which itera- straint, which is extremely useful for tracing unsolvable sub-
tively repairs a given assignment until all conflicts are elimi• problems of different sizes. 
nated. One drawback of the method is that it can get caught Definition 1 (Weight sum constraint for an unsolvable 
in local, non solution minima. Morris eliminated this draw• subproblem P*): According to Lemma 1, in an unsolvable 
back by extending the algorithm with a breakout method, subproblem P^ consisting of k constraints after n breakout 
which allows to escape from local, non solution-minima. The steps, the following condition 
strengths of the breakout algorithm are simplicity, robustness, 
low memory requirement and high efficiency for solving un•
der constrained problems. [Minton era/., 1992] demonstrated 
the performance superiority of the min-conflict heuristic by 

solving large-scale scheduling problems; it performed by or• is satisfied, where Ci are all the constraints of the constraint 
ders of magnitude better than traditional backtracking tech• set Cpk of the subproblem Pk. 
niques. However, the major weak point of the algorithm is its The weight sum constraint is a powerful tool for pruning 
incompleteness.                                        the search for unsolvable subproblems. For example, if we 
  In this paper we present a hybrid algorithm that is complete search for an unsolvable subproblem of size 3, we only have 
where we combine a local search algorithm, the breakout to consider the constraints whose weight sum is greater n + 3. 
algorithm, with a complete search algorithm, backtracking. We also observe that the average constraint weight of an 
The combination of the two algorithms compensates each unsolvable subproblem of size k is higher than that of an un•
others weakness to deal with under and tightly constrained solvable subproblem of size k + s (s > 0). This is due to 


1374                                                                                      POSTER PAPERS Figure 1: The weight graph of an unsolvable graph colouring 
problem after 100 breakout steps, containing two unsolvable 
subproblems of size 3 (cl,c7,c8) and 6 (c2,c3,c4,c9,cl0,cl 1). 

the fact that violations cycle over the constraint graph and 
the less constraints are available, the greater the average con•
straint weight value. This is demonstrated in Figure 1, con•  Figure 2: Number of constraint checks on a logarithmic 
taining two unsolvable subproblems of size 3 and 6. After     scale for solving 10,000 random generated, 30 node graph 
n^lOO breakout steps, the average constraint weight of the    3-colouring problems, solved with BO, BT and BOBT. 
subproblem of size 3 is approximately n/3 + 1 =34 and for 
the subproblem of size 6, it is n/6 + 1 =18. Sorting the vari•
ables according to increasing constraint weights, orders the  4 Conclusion 
subproblem of size 3 before the subproblem of size 4, and     The main contribution of this paper is the presented hybrid 
thus separates the two.                                       scheme that combines the breakout algorithm with a system•
   These observations inspired us to use the constraint weight atic search method, backtracking, and results in a new algo•
information for localizing potentially unsolvable subprob•    rithm that is complete. In the scheme we use the constraint 
lems and to derive a fail-first variable ordering heuristic for weight information of the breakout algorithm to identify hard 
backtracking. In this heuristic, variables are sorted so that the and unsolvable subproblems of increasing sizes and derive in 
constraints with the highest weights are treated first.       combination with the graph structure a fail-first variable or•
                                                              der for a backtracking algorithm. With our results we prove, 
2.1 Hybrid Solver BOBT                                        that the new hybrid search scheme performs extremely well. 
We have implemented this scheme into a hybrid algorithm       BOBT needs orders of magnitude less constraint checks than 
(BOBT), where we combine the breakout algorithm (BO)          BO and BT. In the future we plan to extend the scheme by 
with backtracking (BT). In this algorithm, we first execute   identifying the ordered set of all unsolvable sub problems in 
BO and terminate if no solution is available after a bounded  order to perform a spectral analysis that gives us the distribu•
number of breakout steps. Then we derive a fail-first vari•   tion of unsolvable subproblems for random graph colouring 
able order from the constraint weights and the graph structure problems. 
and start backtrack search. BT will then either prove that the 
problem is unsolvable, or return a solution. This method guar• References 
antees the completeness of the hybrid algorithm. In the case 
where we find an unsolvable subproblem, we terminate the al•  [Davenport et al., 1992] Andrew Davenport and Edward 
gorithm and give a failure explanation by returning the min•     Tsang. An empirical investigation into the exceptionally 
imal unsolvable subproblem. The minimal unsolvable sub-          hard problems. Technical Report CSM-239, Department 
problem is computed from the unsolvable subproblem using         of Computer Science, University of Essex, U.K., 1995. 
the technique described in [Faltings, 2002].                  [Faltings, 2002] Boi Faltings and Macho-Gonzalez. Open 
                                                                 Constraint Satisfaction. Proceedings of the 8th Interna•
3 Experiments and Results                                        tional Conference, CP 2002 Ithaca, NY, USA, Sept. 2002. 
For testing the scheme, we generated a large set of 10,000    [Minton et ai., 1992] Steven Minton and Mark D. Johnston 
random graph 3-colouring problems according to the method        and Andrew B. Philips and Philip Laird. Minimizing Con•
described in [Davenport et.al. 1995]. The generated problem     flicts: A Heuristic Repair Method for Constraint Satisfac-
graphs consisted of 30 variables with a connectivity of 2-6.     tion and Scheduling Problems. Artificial Intelligence, Vol. 
The ratio of solvable to unsolvable problems is 1:1. Figure      58, P. 161-205,1992. 
2 shows the results of the experiments. We show the num•      [Morris, 1993] Paul Morris. The breakout method for escap•
ber of constraint checks for the three algorithms, BO, BT and    ing from local minima. Proc. of the 11th National Conf on 
BOBT on a logarithmic scale over the graph connectivity. For     Artificial Intelligence, Washington, DC, pp. 4(M5, 1993. 
unsolvable problems, we bound the maximum number of it•
erations for the BO to 4.37 • 105. 


POSTER PAPERS                                                                                                      1375 