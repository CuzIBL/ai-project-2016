                       Using a Mobile Robot for Cognitive Mapping

                          Chee K. Wong, Jochen Schmidt, and Wai K. Yeap
                Robotics Research Group, Institute for Information Technology Research
                                  Auckland University of Technology
                                PO Box 12397, Auckland, New Zealand
                           {chee.wong, jochen.schmidt, wai.yeap}@aut.ac.nz

                    Abstract                          e. g., [Golledge, 1999]) and several computational theories of
                                                      cognitive mapping have been proposed [Chown et al., 1995;
    When animals (including humans) ﬁrst explore a    Kuipers, 2000; Yeap and Jefferies, 1999]. More recently, re-
    new environment, what they remember is fragmen-   searchers began to use mobile robots to test ideas about cog-
    tary knowledge about the places visited. Yet, they nitive mapping as opposed to robot mapping.
    have to use such fragmentary knowledge to ﬁnd
    their way home. Humans naturally use more pow-      For example, Kuipers and his students have been experi-
    erful heuristics while lower animals have shown to menting with robots to ﬁnd ways to compute his Spatial Se-
                                                                                                [
    develop a variety of methods that tend to utilize two mantic Hierarchy from the ground up (see e. g., Piers and
                                                                  ]
    key pieces of information, namely distance and ori- Kuipers, 1997 ). Both the gateway construct in the PLAN
                                                                              [               ]
    entation information. Their methods differ depend- model of cognitive mapping Chown et al., 1995 and the use
                                                                                                [
    ing on how they sense their environment. Could    of exits in the ASR-model of cognitive mapping Yeap and
                                                                  ]                                  [
    a mobile robot be used to investigate the nature of Jefferies, 1999 were tested on a mobile robot (see e. g., Ko-
                                                                    ]                 [                 ]
    such a process, commonly referred to in the psy-  rtenkamp, 1993 for the former and Jefferies et al., 2004
    chological literature as cognitive mapping? What  for the latter). Ideas about cognitive mapping based upon
    might be computed in the initial explorations and neurological ﬁndings were also being tested using mobile
                                                                                       [
    how is the resulting “cognitive map” be used to re- robots. Examples of such work include Gaussier et al., 2002;
                                                                 ]
    turn home? In this paper, we presented a novel ap- Hafner, 2005 . However, many of these attempts produced
    proach using a mobile robot to do cognitive map-  algorithms that were more an inspiration from observations
    ping. Our robot computes a “cognitive map” and    about cognitive mapping than a test-bed for theories of cog-
    uses distance and orientation information to ﬁnd its nitive mapping. These researchers were concerned that their
    way home. The process developed provides inter-   robots were able to map its environments successfully and
    esting insights into the nature of cognitive mapping they thus solved much of the robot mapping problem. For in-
    and encourages us to use a mobile robot to do cog- stance, they were keen that their robots “close the loops” and
    nitive mapping in the future, as opposed to its pop- produce “real world SLAM results”.
    ular use in robot mapping.                          In this paper, our goal differs. We note that different an-
                                                      imals compute cognitive maps using different sensors and
                                                      therefore our robot should be treated as a kind of animal with
1  Introduction                                       its own peculiar sensing capabilities. For some unknown rea-
In robot mapping, one is concerned with the development of sons, humans do not remember a precise map after one or two
efﬁcient algorithms for the robot, with its particular sensors, visits to a new environment. We assume animals do not too
to simultaneously localize and map its environment. The and so neither should our robot. To investigate our robot’s
map, a robot created, is precise. By “precise”, it is meant cognitive mapping process, it is thus best to have our robot
that each surface encountered is remembered and its posi- compute an imprecise map ﬁrst and then investigate animal-
tion is known with a certain degree of accuracy. The robot like strategies for ﬁnding its way home using such a map. It
also knows its position in the environment. In contrast, the is argued that the behavior of such a robot might shed light
humans’ (and animals’) mapping process, referred to as cog- on cognitive mapping.
nitive mapping, produces fragmentary maps initially which To do so, we use a robot equipped with sonar sensors to
later turn into a representation laden with one’s own interpre- compute a description of each local space visited. The robot’s
tations and experiences of the world. The map produced in “cognitive map” is thus a network of such local spaces. Fol-
such a process is known as a cognitive map.           lowing [Yeap and Jefferies, 1999] theory of cognitive map-
  The idea that animals compute cognitive maps was ﬁrst ping, we refer to each local spaces computed as an Absolute
suggested by Tolman [1948], who conducted experiments Space Representation (ASR). With sonar sensors, the descrip-
with rats ﬁnding their way in a maze. Since then, much has tion of each ASR computed (or more precisely, the shape
been said about the complex nature of cognitive maps (see computed) is not accurate enough to allow its identiﬁcation

                                                IJCAI-07
                                                  2243on its return journey. Our robot is not programmed with pow- contrast to pure mapping, where all data is gathered ﬁrst,
erful heuristics such as those found in humans. However, and processed only once at the ﬁnal position (i. e., the return
lower animals have been observed to use distance and direc- point), on the return journey the robot performs a map pro-
tion information encoded in their cognitive map to ﬁnd their cessing and ASR splitting each time it has to stop, which is
way. We implemented two such strategies for our robot, one normally because of an obstacle in its way. This means that
utilizes distance information and the other relative orientation at each of these intermediate stops, a new map of the envi-
information.                                          ronment as well as a new high-level representation in terms
  Section 2 describes the way our robot computes its “cog- of ASRs is available and can be used in combination with the
nitive map”. Section 3 describes the two strategies that our original map for localization. The result of the localization
robot uses to ﬁnd its way home. Section 4 shows the results step is the index of the ASR the robot believes it is currently
of our experiments and Sect. 5 concludes with a discussion of in, which is a rough estimate of its global position. As it is ar-
the insights obtained from our experiments.           gued in [Yeap and Jefferies, 1999], this estimate is sufﬁcient
                                                      for navigation, and an accurate map will not be necessary as
2  Mapping the Environment                            long the robot can ﬁnd the exits to adjacent ASRs.
When exploring the environment for the ﬁrst time, the robot In the following, we will describe the strategies that we
creates a “cognitive map” of its environment. This section use for localization based on ASR information, and a data
gives a short description of the process involved; details have fusion algorithm that allows for an overall position estimate
been presented by [Schmidt et al., 2006a; 2006b].     computed from the single localization methods.
2.1  Data Gathering and Pre-Processing                3.2  Localization Strategies
The mapping process used in our system (a wandering robot Two different strategies for localizing the robot based on the
that records sonar data) is as follows: The robot acquires original map generated on its way to the current position are
sonar readings while moving until it runs into an obstacle. At presented in the following. Each method computes a local
this point an obstacle avoidance algorithm is used, after which conﬁdence map that contains a conﬁdence value between 0
the robot can move forward again. Using this input we build and 1 for each ASR of the original map. Note that these con-
a simpliﬁed geometric map containing the robot movement ﬁdence values are not probabilities, and they do not sum up
path as well as linear surfaces approximated from the sonar to one; the interval has been chosen for convenience, and dif-
data. In the ﬁrst step, the recorded sonar data is low-pass ferent intervals can be used as desired. The two strategies
ﬁltered and converted to surfaces, being a piecewise linear mentioned previously will be described in the following, to-
approximation of the sonar distances. These surfaces are sim- gether with the method for computing local conﬁdence maps
pliﬁed further by grouping them, thus removing small gaps. independently for each strategy. The fusion of all local con-
                                                      ﬁdence maps, which may have been generated by different
2.2  Generating ASRs                                  robot localization methods with varying reliability, is based
The approach for generating ASRs from the data gathered by on the idea of Democratic Integration introduced in [Triesch
the robot is based on a region split and merge algorithm. The and von der Malsburg, 2001]. It was developed for the pur-
pre-requisite for this algorithm is a geometric map that con- pose of sensor data fusion in computer vision and computes
tains the robot movement path as well as surfaces in terms conﬁdence maps directly on images. The original method has
of line approximations of the original range sensor data. The been extended and embedded into a probabilistic framework
objective is to divide the perceived information (which is in in [Denzler et al., 2002], still within the area of machine vi-
the form of a fuzzy metric map) into a network of ASRs, thus sion. We extend the original approach in a way that we do
effectively creating a topological map on top of a metric one. not use images as an input, but rather generate local conﬁ-
Splitting is done along the robot movement path, using an ob- dence maps using various (more or less reliable) techniques
jective function that computes the quality of a region, based for robot localization. A main advantage of this approach is
on criteria such as the average room width (corridors are long that the extension to more than two strategies is straightfor-
and narrow compared to rooms) and overall direction (e. g., a ward, as is the replacement of a method by another.
corridor is separated from another one by a sharp bend in the
wall). Additionally, a regularization term is used in order to Distance
avoid the formation of very small regions, which may origi- The ﬁrst strategy is based on the idea of using the distance the
nate from missing (gaps) or unreliable sensor data. Examples robot traveled from its return point to the current position, just
of maps including ASR splittings are shown in the experi- as humans have a rough notion of how far they walked. Note
ment’s section (see Fig. 2). The result of this mapping stage that neither do we care about an exact measurement, nor do
will be called the original map further on. This is the map the we use the actual distance traveled as provided by odometry.
robot will use for returning home.                    Using the odometry data directly would result in very differ-
                                                      ent distances for each journey, as the robot normally moves in
3  Finding the Way Home                               a zig-zag fashion rather than straight. Instead we use distance
                                                      information computed from the ASR splitting of the maps,
3.1  Re-Mapping                                       i. e., ASR length, which is deﬁned by the distance between
On its way home, the robot basically performs the same data the entrance and the exit the robot used when passing through
gathering and processing steps as described previously. In a particular ASR. In the maps shown in Fig. 2, start and end

                                                IJCAI-07
                                                  2244points of an ASR are depicted by dark dots (split points) lo-
cated on a set of connected lines representing the path the
robot took. The zig-zag movement of the robot in between
two splits is clearly visible, and can be quite different from
the line connecting start and end points. The basic strategy is
now to compare the distance d traveled when returning home,
measured in ASR lengths taken from the intermediate map
computed on the return journey, to the ASR lengths taken
from the original map computed during the mapping process.
                                  N
  The local conﬁdence map cDist ∈ IR (N being the to-
tal number of ASRs in the original map) is computed as fol-
lows: The conﬁdence for each ASR depends on the overall
distance d traveled on the return journey; the closer an ASR
is to this distance from the origin, the more likely it is the
one the robot is in currently. As the distance traveled is an
unreliable estimate, adjacent ASRs should be considered as
well, the more the closer they are to the most likely one. We Figure 1: Maps showing the actual layout of the building used
decided to use a Gaussian to model the conﬁdences for each for Experiment 1 (top) and Experiment 2 (bottom). The path
ASR, the horizontal axis being the distance traveled in mm. the robot took while generating the original map is shown
The Gaussian is centered at the current overall distance trav- as a solid line, with ’X’ marking the starting location of the
eled d. Its standard deviation σ is dependent on the distance
                        σ =0.05d                      experiment. The dashed line visualizes the path the robot took
traveled, and was chosen as      . Note that although on the homeward journey and ’O’ marks its starting point.
a Gaussian is used here, we do not try to model a probability
density. A Gaussian was rather chosen for a number of rea-
sons making it most suitable for our purpose: It allows for a map are computed. This can be done ofﬂine, as this map is
smooth transition between ASRs, and the width can be easily ﬁxed during the homeward journey. In the re-mapping pro-
adjusted by altering the standard deviation. This is necessary cess while going home, new ASRs are computed in the new
as the overall distance traveled gets more and more unreliable map based on data gathered while the robot travels. Using
(due to slippage and drift) the farther the robot travels. The the direction information contained in this map, the angle β
conﬁdence value for an ASR is determined by sampling the between the current ASR and the previous one can be com-
Gaussian at the position given by the accumulated distances puted. Comparing this angle to all angles of the original map
from the origin (i. e., where the robot started the homeward gives a clue (or many) for the current location of the robot.
journey) to the end of this ASR. After a value for each ASR The comparison of angles and conversion to conﬁdence val-
is computed, the local conﬁdence map cDist is normalized to ues is done by computing the cosine of the difference angle,
the interval [0; 1].                                  and mapping the resulting values to the interval [0; 1],which
                                                      results in a local conﬁdence map cDir:
Relative Orientation
                                                               1
The second method for computing estimates of the robot’s c   =  (cos |αi − β| +1),i=1,...,N   − 1  .
                                                         Diri  2                                      (1)
position with respect to the original map is based on using
relative orientation information generated while dividing the This results in high values for similar angles and low values
map into ASRs. During its journey, the robot enters an ASR for dissimilar ones. The conﬁdence map computed this way
at one location and exits at a different one, usually including can already be used for further processing. Since the over-
zig-zag movements in between. We deﬁne the direction of an all reliability of the relative orientation strategy as described
ASR as the direction of the line connecting the entrance and above is rather low compared to the conﬁdence values from
exit points. Certainly this direction information varies every other methods (in this case using distance information), we
time the robot travels through the environment, but the overall currently reduce the conﬁdence values by half.
shape between adjacent ASRs is relatively stable. Therefore,
we propose to use angles between ASR directions as a simple 3.3 Fusion of Strategies
measure of the current position of the robot. Note that this We will now describe how to merge the separate local con-
information is pretty much useless on its own, because the ﬁdence map into a single global one based on the original
same angles (i. e., direction changes) can be found in differ- Democratic Integration approach published by [Triesch and
ent locations of the environment. However, combining this von der Malsburg, 2001]. The basic idea is straightforward,
strategy with others can help to decide between position es- as the fusion is done by computing a weighted sum of all
timates that would otherwise be indistinguishable. It has the local conﬁdence maps. The main advantage of using demo-
advantage that angles between adjacent ASR directions are a cratic integration becomes visible only after that stage, when
local measure of direction changes, thus keeping the inﬂuence the weights get adjusted dynamically over time, dependent on
of odometry errors due to drift and slippage to a minimum. the reliabilities of the local map. Given M local conﬁdence
  The basic idea of the strategy is as follows: Firstly, all maps cloci(t) at time t (i. e., as in our case two, namely cDist
angles α1,...,αN−1 between adjacent ASRs in the original and cDir) generated using different strategies, the global map

                                                IJCAI-07
                                                  2245                                                                                   4
                                                                                  x 10
cglob(t) is computed as:                                  15000

                                                                                 1
                     M−1                                 10000
            c   (t)=     w (t)c  (t)  ,                                          0.5
             glob         i    loci             (2)       5000

                     i=0                                                         0

                                                           0
     w  (t)
where  i  are weighting factors that add up to one.                              −0.5
  An estimate of the current position of the robot with respect −5000
                                                                                 −1

to the original map can now be computed by determining the    0  0.5 1 1.5 2
                                                                              4
                                                                             x10  −20000 −15000 −10000 −5000 0 5000
                                                            4                      4
largest conﬁdence value in c (t). Its position b in c (t)  x 10                   x 10
                        glob                 glob         4.5
                                                                                 4
is the index of the ASR that the robot believes it is in. The 4
                                                                                 3.5
conﬁdence value cglobb at that index gives an impression about 3.5
                                                                                 3
how reliable the position estimate is in absolute terms, while 3
                                                                                 2.5
comparing it to the second best one (and maybe even third 2.5
                                                                                 2
                                                          2

best one) shows the reliability relative to other ASRs.                          1.5
                                                          1.5

  In order to update the weighting factors, the local conﬁ-                      1
                                                          1

dence maps have to be normalized ﬁrst. The normalized map 0.5                    0.5
 
c  (t)                                                    0                      0
   i  is given by:                                         −2.5 −2 −1.5 −1 −0.5 0 0.5 1 1.5 2 −3 −2.5 −2 −1.5 −1 −0.5 0 0.5 1
                                                                              4                      4
 loc                                                                         x10                    x10
                         1
               c  (t)=   c   (t) .
                loci    N  loci                 (3)   Figure 2: Top: Experiment 1, bottom: Experiment 2. Left:
                                                      original maps, right: maps generated during the homeward
The idea when updating the weights is that local conﬁdence journey. The black dots indicate the points where the map is
maps that provide very reliable data get higher weights than split into separate ASRs. The robot movement always starts
those which are unreliable. Different ways for determining at the origin. The origin of the homeward journey is (approx-
the quality of each local conﬁdence map are presented in imately) the same position as the end point coordinate of the
[Triesch and von der Malsburg, 2001]. We use the normal- respective original map; in particular this means, that the map
                              b
ized local conﬁdence values at index , which has been deter- of the homeward journey for Experiment 2 (bottom right) is
mined from the global conﬁdence map as shown above, i. e.,
                                                     upside-down compared to the original map (bottom right).
the quality qi(t) of each local map cloci(t) is given by c b(t).
                                            loc
Normalized qualities qi(t) are computed by:
                         q (t)                        ’X’, and was stopped at a random position (marked by ’O’),
               q(t)=     i        .
                i     M−1                      (4)   where it started returning home. The return journey stopped
                        j=0 qj(t)                     when the robot believed that it reached home, or, more pre-
                                                      cisely, the ASR that contains the start location ’X’. It is im-
                       w (t +1)
The new weighting factors i     can now be computed   portant to note that we did not intervene with the environment
from the old ones:                                    at any point in time. That is, things that existed in the envi-
                          1
      w (t +1)=w   (t)+      (q(t) − w (t)) .        ronment during the mapping process (such as rubbish bins,
       i          i     t +1   i      i         (5)   ﬂower pots, cabinets, etc) may or may not be there during
                                                      the return home journey; and doors may be open or closed
This is a recursive formulation of the average over all quali- depending on the time of the experiment.
ties from time zero to t. Using this update equation and the
                                                        Figure 2 shows the representations generated from the two
normalization of the qualities in (4) ensures that the sum of
                                                      experiments. The top row depicts the maps generated from
the weights equals one at all times.
                                                      the mapping and going home processes respectively for Ex-
                                                      periment 1; the bottom row are the maps generated from the
4  Experimental Results                               mapping and going home processes respectively for Experi-
To evaluate the performance of the algorithm proposed, we ment 2. Comparing the maps generated during mapping and
used a Pioneer 2 robot from Activmedia, equipped with sonar going home highlights the difﬁculty in using these maps di-
sensors and an odometer. As described earlier, the robot must rectly for localization. Each time, the robot goes through
ﬁrst explore and generate a representation of the environment, the same environment, it will generate different representa-
i. e., a “cognitive map”. The robot was then instructed to re- tions due to sensory inaccuracies. Figures 3 and 4 show the
turn home (home being the start point of the mapping pro- conﬁdence maps computed at four locations during the return
cess). The aim was to determine whether the robot can ﬁnd home journey for Experiments 1 and 2 respectively. The light
its way back home using this inexact “cognitive map”. dotted lines shows the ASR estimate using the ASR length
  We conducted various experiments in an ofﬁce environ- information (distance method) and the dark dashed lines de-
ment, two of which are presented in this paper. Further ex- picts the ASR estimate using the angles between ASRs (rel-
perimental results can be found in [Schmidt et al., 2006b]. ative orientation method). The solid line is the overall ASR
Figure 1 presents the layouts of the environment used. The estimate for the corresponding ASR (horizontal axis). Note
paths that the robot took during mapping (solid line) and go- that the conﬁdences have values between 0 and 1 (vertical
ing home (dashed line) are both shown in Fig. 1 as well. For axis) but do not sum up to 1. In Fig. 3, the top left map shows
the mapping stage, the robot started at the location marked by a narrow peak for the overall conﬁdence at ASR 1, with cor-

                                                IJCAI-07
                                                  2246    1                      1                              1                      1

    0.9                   0.9                             0.9                    0.9

    0.8                   0.8                             0.8                    0.8

    0.7                   0.7                             0.7                    0.7

    0.6                   0.6                             0.6                    0.6

    0.5                   0.5                             0.5                    0.5

    0.4                   0.4                             0.4                    0.4

    0.3                   0.3                             0.3                    0.3

    0.2                   0.2                             0.2                    0.2

    0.1                   0.1                             0.1                    0.1

    0                      0                              0                      0
    0  1 2 3  4 5  6 7 8   0 1  2 3  4 5 6  7 8            0 1 2 3 4 5 6 7 8 9 10 11 12 13 0 1 2 3 4 5 6 7 8 9 10 11 12 13
    1                      1                              1                      1

    0.9                   0.9                             0.9                    0.9

    0.8                   0.8                             0.8                    0.8

    0.7                   0.7                             0.7                    0.7

    0.6                   0.6                             0.6                    0.6

    0.5                   0.5                             0.5                    0.5

    0.4                   0.4                             0.4                    0.4

    0.3                   0.3                             0.3                    0.3

    0.2                   0.2                             0.2                    0.2

    0.1                   0.1                             0.1                    0.1

    0                      0
    0  1 2 3  4 5  6 7 8   0 1  2 3  4 5 6  7 8           0                      0
                                                           0 1 2 3 4 5 6 7 8 9 10 11 12 13 0 1 2 3 4 5 6 7 8 9 10 11 12 13

Figure 3: Conﬁdence maps at four locations during the return Figure 5: Four consecutive conﬁdence maps computed during
home journey for Experiment 1: distance (light dotted), rela- the return home journey for Experiment 2 at the transition
tive orientation (dark dashed), and overall map (solid). Hori- from ASR 6 to 7: distance (light dotted), relative orientation
zontal axis: ASR number; vertical axis: conﬁdence (0 to 1). (dark dashed), and overall map (solid).


                                                          1                      1
    1                      1

                                                          0.9                    0.9
    0.9                   0.9

                                                          0.8                    0.8
    0.8                   0.8

                                                          0.7                    0.7
    0.7                   0.7

                                                          0.6                    0.6
    0.6                   0.6

                                                          0.5                    0.5
    0.5                   0.5

                                                          0.4                    0.4
    0.4                   0.4

                                                          0.3                    0.3
    0.3                   0.3

                                                          0.2                    0.2
    0.2                   0.2

                                                          0.1                    0.1
    0.1                   0.1

                                                          0                      0
                                                           0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 0 1 2 3 4 5 6 7 8 9 1011121314151617181920212223242526272829303132333435363738394041
    0                      0
    0 1 2 3 4 5 6 7 8 9 10 11 12 13 0 1 2 3 4 5 6 7 8 9 10 11 12 13
    1                      1

    0.9                   0.9

    0.8                   0.8                         Figure 6: Adjustment of weighting factors over time: ASR
    0.7                   0.7                         length weights (solid) and ASR angle weights (dashed).
    0.6                   0.6

    0.5                   0.5

    0.4                   0.4
    0.3                   0.3                         and 7, it is unsure of where it is exactly, as depicted by the top
    0.2                   0.2

    0.1                   0.1                         right and bottom left images. And when it has moved away

    0                      0
    0 1 2 3 4 5 6 7 8 9 10 11 12 13 0 1 2 3 4 5 6 7 8 9 10 11 12 13 from the transition area, the conﬁdence of ASR 6 decreases
                                                      dramatically and the peak is now centered on ASR 7.
Figure 4: Conﬁdence maps at four locations during the re- Figure 6 shows the distribution of weighting used on the
turn home journey for Experiment 2: distance (light dotted), localization strategies for calculating the overall conﬁdence
relative orientation (dark dashed), and overall map (solid). values. The solid line is the plot of distance method weights
                                                      and the dashed line represents the weights of the relative ori-
                                                      entation method. For the ﬁrst three ASRs, the weights for
responding peaks for both distance and relative orientation. both distance and orientation are initialized to be 0.5 because
The narrow peak signiﬁes the robot being very conﬁdent of we only start computations after the third ASR. The ASR dis-
being in ASR 1. The top right map however is quite different. tance weight then increases, because the conﬁdence on ASR
It has two peaks, one slightly higher than the other. It shows distance is higher than the conﬁdence computed from the ori-
that the robot is around the transition region between ASR 2 entation method. As time progresses, the weights of the dis-
and 3. The higher conﬁdent value for ASR 3 shows that the tance method decrease due to a decrease in conﬁdence, and
robot feels that it has already moved into ASR 3. The bottom vice versa for conﬁdence from the orientation method.
left map shows a similar account except that this time, neigh- The results from the conﬁdence maps show that the method
boring ASRs (4 and 6) have higher values, resulting in a wider proposed provides a consistent approach for using an inexact
peak. Finally, the bottom right map shows that ASRs 7 and 8 “cognitive map” to allow a mobile robot to ﬁnd its way back
pretty much have the same conﬁdences, meaning the robot is home. It does not provide the exact pose of the robot in the
unsure which of the two ASRs it is in. Figure 4 shows another environment, but rather an approximation, which we believe
set of conﬁdence maps corresponding to four locations in Ex- is sufﬁcient for navigation and new exploration.
periment 2. Figure 5 shows a sequence of four consecutive
conﬁdence maps from experiment 2. These conﬁdences are
taken from the period when the robot is traveling from ASR 6 5Conclusion
to ASR 7. Starting from top left ﬁgure, the robot is conﬁdent We have implemented a very basic algorithm for the robot
it is in ASR 6. As it moves to the boundary between ASRs 6 to ﬁnd its way home, namely exploit ASR-distance traveled

                                                IJCAI-07
                                                  2247