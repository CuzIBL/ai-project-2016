     Generalized Interval Projection: A New Technique for Consistent Domain
                                              Extension

                     Carlos Grandon´    and  Gilles Chabert  and  Bertrand Neveu
                             Projet Coprin, INRIA, 2004 route des Lucioles,
                                    06902 Sophia Antipolis, France.
                    {carlos.grandon, gilles.chabert, bertrand.neveu}@sophia.inria.fr


                    Abstract                              a lower bound di, say, because of the damaging loop ef-
                                                          fect. Hence, distances must rather be assigned intervals
    This paper deals with systems of parametric equa-     d1, ...,dm.
    tions over the reals, in the framework of inter-
                                                        • Positions of units are not ﬁxed neither. They usually
    val constraint programming. As parameters vary                                                     ×
    within intervals, the solution set of a problem may   patrol around their position and can move in a box ai
    have a non null volume. In these cases, an inner      bi to pick up the signal.
    box (i.e., a box included in the solution set) instead • Providing a single solution (x, y) is often not realistic.
    of a single punctual solution is of particular inter- E.g., an antenna cannot be installed exactly at a pre-
    est, because it gives greater freedom for choosing    cise position in presence of obstacles. Therefore, one
    a solution. Our approach is able to build an inner    is rather interested by a box x × y such that any position
    box for the problem starting with a single point so-  chosen in this box is appropriate. Obviously, the wider
    lution, by consistently extending the domain of ev-   the box, the better.
    ery variable. The key point is a new method called Finally, our problem is deﬁned as a set of constraints ci(x, y)
    generalized projection.                           (1 ≤ i ≤ m), with ci(x, y) iff
    The requirements are that each parameter must oc-   ∃         ∈    ×   ×      −    2     −   2    2
    cur only once in the system, variable domains must   (ai,bi,di) (ai bi  di)(x   ai) +(y    bi) = di .
    be bounded, and each variable must occur only     A solution of our problem is a tuple (x, y) such that for all
    once in each constraint. Our extension is based on i ∈ [1..n], ci(x, y) is true and our goal is to build a so-called
    an extended algebraic structure of intervals called inner box x × y, in which each point (x, y) is a solution
    generalized intervals, where improper intervals are [Ward et al., 1989]. Classical interval analysis and constraint
    allowed (e.g. [1,0]).
                                                                  y

                                                                           b2
1  Introduction                                                                     position of the
                                                                             a 2
The purpose of this paper will be illustrated on a simple ex-                       second unit
ample of signal relay positioning.
  The situation is as follows. m units are deployed on an
area, each of them being equipped with a transceiver. Because
                                                                                inner box
of the limited power of their transceivers, the units cannot
communicate. The question is to position a relay such that all      position of the
units get connected.                                                first unit
                                     th
  We denote (ai,bi) the coordinates of the i unit position,                      solutions
                                                                 b
and di its distance from the relay. Assume ﬁrst that all ai,bi    1
and di are ﬁxed. Then, the model consists in m simple dis-           a 1                   x
tance equations and is easily solved by any traditional alge-
braic or numerical technique. Since the system is probably     Figure 1: The relay positioning problem
unfeasible, a least-square method can provide a point making
each distance being as close as possible to the desired value programming over the reals provide well-known algorithms
di.                                                   for handling systems of equations with continuum of solu-
  Unfortunately, this model suffers from three serious limi- tions [Benhamou and Goualard, 2000; Silaghi et al., 2001;
tations:                                              Vu et al., 2002]. Nonetheless, they are not adapted for build-
  • Distances should not be ﬁxed. The distance di must be ing inner boxes when the system involves existentially quan-
    neither more than the transceiver range di, nor less than tiﬁed parameters (especially when the system is not square

                                                IJCAI-07
                                                   94w.r.t. the parameters). Some techniques either based on With classical interval arithmetics, evaluating a real-valued
modal intervals [Herrero et al., 2005], or Newton-like ex- component fi with interval vector operands x and v yields an
               [              ]
istence theorems Goldsztejn, 2006 can detect inner boxes interval zsatisfying  
in presence of parameters, but one needs to enforce a whole    ∀x ∈ x  ∀v ∈ v  ∃z ∈ z | z = f(x, v).
branch-and-bound process to get an answer. Such a process is
heavy and leads to disastrous computation time as the dimen- Such a relation is not adequate for detecting an inner box.
sion n increases (merely because it tries to describe a (n-1)- One would rather look for an interval z satisfying
dimension frontier with very small boxes). Worse, it is never  ∀z ∈ z ∀x ∈ x  ∃v ∈ v  | z = f(x, v),
sure that an inner box will be returned at the end.
                                                      thus 0 ∈ z implies that x is an inner box.
  We propose in this paper an original method for building
                                                        Modal intervals analysis is an efﬁcient tool for handling
an inner box around an initial solution of the parameter-free
                                                      expressions built from intervals with associated quantiﬁers,
problem. This method starts with a degenerate box (a box paying special attention to the semantics behind the expres-
reduced to a point, that can be obtained using a least-square
                                                      sion. The underlying structure of this theory is an extended
method, for example) and tries successively to enlarge the
                                                      set of intervals, called generalized intervals.
dimensions of the box, while proving that the current box
remains an inner box. Domain extension has already been 2.1 Generalized intervals
achieved in case of parameter-free inequalities by deﬁning an A generalized interval [Kaucher, 1980; Shary, 2002] is any
univariate extrema function and computing its left most and pair [a, b] of reals, without imposing a ≤ b.
right most solutions of a selected variable, using a Newton Here are some examples of generalized intervals:
          [                   ]
like method Collavizza et al., 1999 . Our new extension al- [0, 1], [1, 0], [−1, 1], [1, −1], [0, 0].Ifx is a generalized
gorithm works for parametric equations, thus subsuming in- interval [a, b], we denote x := a and x := b.
equalities and addressing more situations. It essentially ex- KR stands for the set of generalized intervals. It can be
tends one variable at a time and the resulting box depends split into two subsets: the set IR of so-called proper inter-
on the order in which variables are selected. First of all, the vals, those whose bounds are in increasing order, and the set
functions we can handle are arithmetical functions.   of improper intervals, those whose bounds are in strictly de-
Deﬁnition 1.1 (Arithmetical function) f is said to be an creasing order. Hence, x is proper if x ≤ x and x is improper
arithmetical function, if the formal expression f(x) matches if x > x. It is convenient to swap the endpoints of a gen-
the following recursive deﬁnition:                    eralized interval. For this end, the dual operator has been
  • f(x)=xi, with i ∈ [1..n].                         introduced :
                                                                        dual (x):=[x, x]
  • f(x)=c,wherec   is a constant in R.
                                                      The pro operator for an interval is also deﬁned to refer to
  • f(x)=φ(g(x)),whereg    is an arithmetical function, its underlying set of reals (once the endpoints have been re-
    and φ is a “basic” function such as sqr, sqrt, sin, ... ordered properly).
  •                                                                      
    f(x)=g(x)h(x)  where g and h are arithmetical func-                    x         if x ∈ IR
                                 {   −  ×  }                    pro (x):=
    tions, and  is a binary operator in +, , ,/ .                          (dual x)  otherwise
  The keystone of our domain extension is the generalized
                                                      Finally, KR is equipped with the following inclusion order:
projection which will be introduced in the theoretical con-
text of modal interval analysis. Informally, our method            x ⊆ y ⇐⇒   x ≥ y ∧ x ≤ y.          (1)
uses an inner box characterized by a generalized inclusion E.g., − ⊆  −  ⊆      ⊆  −     ⊆  −    .
       ⊆   −                              ⊆                [2, 4]  [1, 3]   [0, 0] [ 3, 1] [ 4, 2]
as f(x)  [2, 1]. We know that, as long as f(x) [0, 0], x KR is a complete lattice with respect to this inclusion. The
is an inner box. Hence, we “enlarge” x as much as we can by meet and join of two intervals are respectively
considering a right-hand side “enlarged” to [0, 0]. We propa- 
gate this enlargement through the syntactic tree of f down to x y =max{z | z ⊆ x∧z ⊆ y} =[max{x, y}, min{x, y}]
the leaf representing x.                                
                                                      x   y =min{z  | x ⊆ z∧y ⊆ z} =[min{x, y}, max{x, y}]
2  Modal interval analysis                              A generalized interval arithmetic is deﬁned in [Kaucher,
The theory of modal intervals has been developed by Span- 1980]. Every binary operator and basic function (see Deﬁni-
ish researchers since the 1980’s [Garde˜nes et al., 1985; tion 1.1) is deﬁned is such a way that it extends its counterpart
2001]. It is a nice framework to deal with quantiﬁers in inter- in classical interval arithmetic. E.g., the addition in KR is :
val computations.                                                    x + y := [x + y, x + y],
  A simpler widely-adopted formulation of this theory has
recently been proposed [Goldsztejn, 2005], and our next out- so that [1, 2] + [3, 5] = [4, 7] matches the result of classical
line of modal intervals shall conform to this proposal. interval addition, and [1, 2] + [5, 3] = [6, 4]. This extended
  First, let us deﬁne the general situation. Given a function arithmetic keeps the fundamental property of inclusion iso-
                            T                                                                       KR
f of variables x =(x1,...,xn) and a set of parameters tonicity (with the inclusion order (1)). Furthermore, is
              T
v =(v1,...,vp) , the solution set under study is      a group for addition and multiplication of zero-free intervals.
                                                    The opposite of x is −(dual x),theinverseis(1/(dual x)).
                 n
           {x ∈ R  | ∃v ∈ v f(x, v)=0}.               E.g., [−1, 2] + [1, −2] = [0, 0], [1, 4] × [1, 0.25] = [1, 1].

                                                IJCAI-07
                                                   952.2  Main theorem                                     using intervals as a way to represent an inﬁnite number of
By chaining the basic arithmetic operators and functions, one values, we solve an equation of interval variable and look for
can evaluate any expression with generalized intervals ar- one interval solution.
guments. The theory of modal intervals has provided the To be applied, this technique requires that the variable x
following important interpretation [Garde˜nes et al., 2001; has a domain, i.e., a lower bound and an upper bound, w.r.t.
Goldsztejn, 2005]:                                    the inclusion order deﬁned by (1). So there must be intervals
                                                      xl and xu such that xl × y is the initial inner box we want
Proposition 2.1 Let φ : Rn × Rp → R such that each com-
                                                 n    to enlarge, and xu is the domain of all possible values for x.
ponent of v has only one occurrence in φ(x, v).Letx ∈ IR ,
  ∈  IRp                                              Most of the time, it is easy to provide such an upper bound.
v       andz := f(x, dual (v)).Ifz is improper then Both bounds are proper. We can ﬁnally write
 ∀z ∈ pro (z) ∀x ∈ x  ∃v ∈ v z = φ(x, v).
                                                                            ⊆   ⊆
  Up to now, this proposition was mainly used as a test for               xl  x   xu.                 (2)
inner boxes (e.g., [Grand´on and Goldsztejn, 2006]). We detail Our goal is to ﬁnd a maximal interval x ∈ KR (w.r.t. the
this test in the next subsection.                     inclusion deﬁned by (1)) such that,
2.3  Inner box test                                        x satisﬁes (2) and f(x, y, (dual v)) ⊆ [0, 0],
Consider a set of constraints ci (1 ≤ i ≤ m), each constraint
                                            n    p    i.e., such that x both satisﬁes the domain constraint and the
being a parametric equation fi(x, v)=0with fi : R × R .
                               ≤   ≤                  inner test. If f is linear, some methods already tackle this
Assume that every component vj (1 j  p) only appears  problem [Markov et al., 1996; Shary, 1996; 2002; Sainz et
once in the whole system. To check if a given box x is inner,
                                         ∈ KRm        al., 2002]. Consider now the (slightly) more general problem
evaluate f(x, dual (v)). The result is a vector z .If of ﬁnding a maximal x such that
z ⊆ 0 then x is an inner box. Indeed, for all i ∈ [1..m],
                                                       x satisﬁes (2) and f(x, y, (dual v)) ⊆ z, (3)
     ∀zi ∈ pro (zi) ∀x ∈ x ∃v ∈ v  zi = fi(x, v).
                                                      with z ∈ KR such that
Since zi ⊆ 0 ⇐⇒  0 ∈ pro (zi) then
                                                        f(xl, y, (dual v)) ⊆ z ⊆ f(xu, y, (dual v)). (4)
            ∀x ∈ x  ∃v ∈ v  fi(x, v)=0.
                                                      Notice that a maximal interval satisfying (3-4) is not neces-
Let us denote vi the vector of parameters involved in ci.Then sarily a maximal inner extension of xl in xu.
 ∀x ∈ x  ∃vi ∈ vi fi(x, vi)=0is true for all i ∈ [1..m], Using Deﬁnition 1.1, we can recursively solve (3) by iso-
and this implies ∀x ∈ x ∃v ∈ v  f(x, v)=0.            lating the subexpression containing x and applying one of the
  As a new result, we will show that Proposition 2.1 can also three “elementary” projections detailed below.
be used as a constructive tool for inner boxes. Our technique
combines this modal interval analysis result with a constraint 3.1 Overview
programming concept called projection. Next section intro- The recursion consists in reducing (3-4) to a simpler relation
duces the latter and expounds our contribution.                                                  
                                                            x satisﬁes (2) and g(x, y, (dual v)) ⊆ z , (5)
3  A Generalized Interval Projection                  where g is a subexpression of f,andz satisﬁes
Let us ﬁrst consider a real-valued arithmetical function f :                   
 n    p                                        n−1             l            ⊆   ⊆     u               (6)
R  × R  →  R. We split variables into x ∈ R and y ∈ R ,     g(x , y, (dual v)) z   g(x , y, (dual v)).
          p
while v ∈ R is the vector of parameters. Thus, with no loss Relation (5-6) must be a sufﬁcient condition to (3-4) in the
of generality, we shall write f(x, y, v).             sense that a maximal x ∈ KR satisfying (5-6) must also be a
  This section gives a technique to enlarge the domain of a maximal x ∈ KR satisfying (3-4).
                                1
variable that has only one occurrence in the expression of Given f, x, y, v and z, we detail now how to compute
          2
the function , with given domains for other variables and pa- an appropriate z, dealing with three different cases. These
rameters. So we assume x has only one occurrence in f,and
                   n−1          p                     cases are related to the syntactic decomposition of f given by
ﬁx once for all y ∈ IR and v ∈ IR .                   Deﬁnition 1.1. The base case is straightforward. The other
  This technique handles x (the domain of x)asavariable cases lie on three concepts: theoretical projection, selection
and tries to ﬁnd a solution in KR to some interval relation. and ﬁltering.
We work at the interval level, which must be sharply distin-
guished from the usual standpoint of interval analysis: In- 3.2 Base case (f(x, y, v)=x)
stead of solving an equation of real variable/parameters and By hypothesis, (4) holds, i.e., xl ⊆ z ⊆ xu. Hence, a maxi-
                                                      mal x such that x satisﬁes (2) and (x ⊆ z) is z itself.
  1This is a limitation due to the dependency problem of interval
arithmetic. It can be solved by applying a ﬁxed point algorithm over 3.3 Basic function (f(x, y, v)=φ(g(x, y, v)))
the multi-ocurrence variable, but this is out of scope of this article.
  2This presentation is done for one constraint. In presence of sev- • Theoretical projection
eral constraints, the same operation is performed for each constraint For clarity, we replace g(x, y, (dual v) by the symbol g.
and the intersection of the obtained intervals is returned. Since every basic function φ is piecewise strictly monotonic,

                                                IJCAI-07
                                                   96hence piecewise invertible, for any z ∈ KR, a disjunction of For the sake of simplicity, we performed in the last exam-
inclusions                                            ple theoretical projection and selection consecutively, as two
             (g ⊆ z1) or (g ⊆ z2) or ...              separate steps. With trigonometric functions, this is not pos-
can formally be derived from φ(g) ⊆ z, regardless of condi- sible as the number of theoretical projections is inﬁnite. So,
tion (2). For example,                                we rather use selection as a pre-selecting process. This is il-
        exp(g) ⊆ [1, 2] ⇐⇒ g ⊆ [0, log(2)],           lustrated on the next example.
        2                                             Example 3.2 Consider f(x, y, v)=cos(x + v), xl =[6, 6],
       g  ⊆ [4, 0] ⇐⇒ g ⊆ [2, 0] or g ⊆ [0, −2].
                                                      xu =[5, 9], v =[−1, 1] and. Then, we have φ = cos and
  Notice that if φ = sqr, pro (z) cannot include negative g(x, y, v)=x + v. We ﬁrst compute
values, so that the square root is always well deﬁned. In-
deed, by hypothesis, (4) holds. If z is proper, then z ⊆           gl := xl + (dual v)=[7, 5],
                2                    2
g(xu, y, (dual v)) and g(xu, y, (dual v)) ≥ 0 implies It follows that  l ⊆      , which restricts the projection
                                       2                          pro (g )  [5, 7]
pro (z) ≥ 0.Otherwise,g(xl,  y, (dual v)) ⊆  z, i.e.,
                              2                       of cosinus to two half periods, [π, 2π] and [2π, 3π]:
pro (z) ⊆ pro (g(xl, y, (dual v)) ) which again implies
                                                                    ⊆
pro (z) ≥ 0. This symmetry in the domain of sqrt and the x +(dual v)   2π + arccos([0.7, 0.8]) = [6.93, 7.08]
image of sqr is obviously valid for every basic function.                      or
                                                                    ⊆    −
  As soon as φ is trigonometric, the disjunction includes an x +(dual v) 2π arccos([0.7, 0.8]) = [5.49, 5.64].
inﬁnity of terms (which justiﬁes the “theoretical” qualiﬁer): • Filtering
      cos(g) ⊆ [0.5, 1] ⇐⇒ g ⊆ [π/3,π/2] or ...       Once zj was proven to be feasible, relation (2) can be used
                                                      to make zj smaller and fulﬁll (6). Indeed, x ⊆ xu implies
All intervals in the (possibly inﬁnite) sequence share both the g(x, y, dual v) ⊆ g(xu, y, dual v). Hence we can substi-
same proper/improper nature and the same diameter. Fur- tute zj by zj ∧ g(xu, y, (dual v)).
thermore, either their proper projections are all disjoint (i =
j =⇒ pro (zi)∩pro (zj )=∅), either they all intersect. They Example 3.3 In Example 3.1, we found out that interval
                                                       −  −
cannot however overlap more than a bound. One may won- [ 1, 2] was feasible. But as xu+(dual v)=[0, 2],wemust
                                                                               ⊆      ∧ −   −        −
der if two overlapping intervals g1 and g2 can be merged, actually have x + (dual v) [0, 2] [ 1, 2] = [0, 2].
i.e., if the condition (g ⊆ z1) or (g ⊆ z2) can be replaced by This condition is indeed stronger.
  ⊆     ∨                             ⊆     ∨
g   (z1   z2). This is not allowed since g (z1 z2) is 3.4  Binary Operator
only a necessary condition (as counter-example, g := [−1, 1]
satisﬁes g ⊆ [0, 2] ∨ [−2, 0] = [−2, 2] but neither satisﬁes (f(x, y, v)=g(x, y, v) h(y,v))
g ⊆ [0, 2] nor g ⊆ [−2, 0]). In contrast, g ⊆ (z1 ∧ z2) is Put w := h(y, (dual v)) and consider ﬁrst the addition. The
a sufﬁcient but stronger condition, and maximality is lost (no inclusion f(x, y, (dual v)) ⊆ z turns to
solution can even be found). Thus, no merging of any kind
                                                                    g(x, y, (dual v)) + w ⊆ z.
can be done. Summing up, solving (3) boils down to solving
                                                      By adding − dual (w) to each side of the latter, we get
     x satisﬁes (2) and g(x, y, (dual v))) ⊆ zj (7)
                                                                 g(x, y, (dual v)) ⊆ z − (dual w)
for one zj in the sequence. We can now avail ourselves of the
constraint on the domain of x to select and ﬁlter a feasible thanks to the group property of Kaucher arithmetic. Filtering
interval in this sequence. Selection means that we pick an can apply here to narrow (or possibly empty) z − (dual w).
interval zj such that a solution x of (7) exists. Filtering means
                                                     The same idea applies to subtraction and division (by respec-
that we ﬁnd the largest z ⊆ zj such that (6) is satisﬁed. tively adding and multiplying z by (dual w)).
  • Selection                                         Multiplication however requires some precaution. If 0 ∈
Relation (2) allows us to keep only a ﬁnite number of zj pro (w), then we can again divide z by (dual w).Butif0 ∈
in the theoretical projection. By inclusion isotonicity of pro (w), because Kaucher arithmetic does not handle inﬁnite
Kaucher arithmetic, xl ⊆ x implies g(xl, y, dual v) ⊆ bounds we need to hand-craft a special division. Similar ex-
g(x, y, dual v). So we can detect whether zj (j =1, 2,...) tensions of Kaucher’s division are proposed in [Popova, 1994;
is feasible or not by checking g(xl, y, (dual v)) ⊆ zj.The Goldsztejn, 2005]. A maximal g satisfying g × w ⊆ z is ob-
number of feasible zj resulting from this test is necessarily tained with the next table.
ﬁnite (see Example 3.2). We can pick any one of them.                                 ⊆      ⊂
                                          2                           z > 0z<    00     zz     0
Example 3.1 Consider f(x, y, v)=(x   +  v) , xl  =            0 ⊆ w     1234
−   −          −          −
[ 1,  1], xu =[ 2, 3], v =[ 1, 2] and z =[4, 1]. Then,        w  ⊂ 0    5678
we have φ = sqr, g(x, y, v)=x + v and
                                                       1. g = ∅ (no solution)
            2               x +(dual  v) ⊆ [2, 1] or
(x+(dual v)) ⊆  [4, 1] ⇐⇒                                     ∅
                            x +(dual  v) ⊆ [−1, −2]     2. g =  (no solution)
                                                        3. g ⊆ [max{z/w, z/w}, min{z/w, z/w}]
                             −
But since xl + (dual v)=[1,    2], [2, 1] is not feasi-       ∅
ble (because [1, −2] ⊆ [2, 1]) whereas [−1, −2] is feasible 4. g = (no solution)
([1, −2] ⊆ [−1, −2]).                                   5. g ⊆ [−∞, z/w] or g ⊆ [z/w, +∞]

                                                IJCAI-07
                                                   97 6. g ⊆ [−∞, z/w] or g ⊆ [z/w, +∞]                      We detail the projection of c1 over x. Our goal is to ﬁnd
                                                                    ⊆   ⊆
 7. g ⊆ [−∞, +∞]                                      the biggest x (x˜ x xu) such that
      ⊆ −∞       {        }        {        }   ∞                    2                 2           2
 8. g   [   , min z/w, z/w ] or [max z/w, z/w , + ]    (x − (dual a1)) +(y − (dual b1)) − (dual d1) ⊆ 0
  Applying ﬁltering on g (a consistent extension of (1) to
                                                        • Apply Case 3.
intervals with inﬁnite bounds is easy) immediately removes                         2            2
                                                      Compute  w :=  (y − (dual b1)) − (dual d1) .Weget
inﬁnite bounds since g is necessarily proper. Hence, inﬁ-                2      2
                                                      w =(2.6494  − [1, 0]) − [8, 1] =[6.02, −61.28]. Then,
nite bounds are not propagated to subsequent computations
                                                                   2                       2
(which would have led to undeﬁned results). They only are (x−(dual a1)) +w ⊆ 0 ⇒ (x−(dual a1)) ⊆−(dual w)
a convenient way to represent arbitrarily large values when                2
enforcing ﬁltering.                                   Finally, (x − (dual a1)) ⊆ [−6.02, 61.28].
                                                        We   apply domain  restriction. We   ﬁrst compute
Example 3.4 Consider f(x, y, v)=x × v, xl =[−1, 1],                   2
                                                      (˜x − (dual a1))   =[81.77,   49.60] and check  that
xu =[−3, 3], v =[−1, 2] and z =[−2, 6]. Then, we have
                                                      [81.77, 49.60] ⊆ [−6.02, 61.28]. We also compute xu −
 = ×, g(x, y, v)=x. Thanks to the table, we get               2
                                                      (dual a1))   =[25,  169]  and ﬁlter [−6.02, 61.28] to
            x ⊆ [−∞, −1] or x ⊆ [1, +∞].              [25, 61.28].
                                                                                2
Both contain xl, hence are feasible. Applying “meet” opera-       (x − (dual a1)) ⊆ [25, 61.28]
tor with xu yields x ⊆ [−3, −1] or x ⊆ [1, 3].
                                                        • Apply Case 2.
Remark 1  We have seen that the constraint on the domain                         √
is crucial in presence of trigonometric functions or multipli- (x − (dual a1)) ⊆ [5, 61.28] = [5, 7.82]
cation with 0 in operands. In the other cases, by removing                   √∨
domain constraint (i.e., condition (2)), it can be easily proven
                                                          (x − (dual a1)) ⊆ [− 61.28, −5] = [−7.82, −5]
that a maximal x satisfying
                                                      But (xl − (dual a1)) = [9.04, 7.04] and (xu − (dual a1)) =
              f(x, y, (dual v)) ⊆ [0, 0]
                                                      [5, 13]. So, by domain restriction, [−7.82, −5] is discarded,
also satisﬁes f(x, y, (dual v)) = [0, 0].             and [5, 7.82] is left intact.
  It is worth mentioning that functions need not be decom-
                                                                     x − (dual a1) ⊆ [5, 7.82]
posed formally into subexpressions: projections are directly
performed by an automatic projection algorithm [Benhamou • Apply Case 3.
et al., 1999], similar to automatic differentiation.
                                                      x ⊆ [5, 7.82] + a1 ⇐⇒ x ⊆ [5, 9.82] .
  We detail now a trace of our extension algorithm.
                                                        • Apply Case 1: the answer is [5, 9.82].
4  Trace
                                                        We perform a generalized projection to compute consistent
We instantiate our relay example with 4 units. According to extension of x˜ w.r.t the other constraints and get three other
the problem in section 1, the set of constraints are: intervals: x2 =[5, 9.86], x3 =[7, 15] and x4 =[8.36, 15].
                                2          2   2
 ∃(ai,bi,di) ∈ (ai ×bi×di)(x − ai) +(y − bi) = di ,   The intersection of the four intervals, [8.36, 9.82], is inner
                                                      w.r.t. the whole system (See Section 2.3). We can per-
and the domains of the parameters are:                form now a generalized projection to compute an extension
                                                                                    ×
     a1 =[0, 2]   b1 =[0, 1]       d1 =[1, 8]         over y of the new box [8.36, 9.82] y˜ and we get respec-
     a2 =[4, 5]   b2 =[9, 10]      d2 =[1, 8]         tively for each constraint y1 =[0, 2.6494], y2 =[2.62, 16],
     a3 =[13, 15] b3 =[−11,  −10]  d3 =[1, 14]        y3  =[0, 3.20] and y4 =[2.64, 9.35]. The intersection
     a4 =[16, 17] b4 =[5, 7]       d4 =[1, 8]         of these extensions is [2.6494, 2.6494]. The ﬁnal inner box
                                                      [8.36, 9.82] × [2.6494, 2.6494] is shown in Figure 2(a).
A least-square solution obtained by ﬁxing each parameter to Let us roll back this extension. If we start domain exten-
the midpoint of its domain is (˜x =9.04286, y˜ =2.6494). sion over the variable y at ﬁrst, and then, over x, we obtain
We ﬁrst check that this solution can be taken as the starting another box, [9.04286, 9.04286] × [2.1, 3.42] shown in 2(b).
point of our domain extension. We compute for all i,  We observe that the maximal extension obtained for the ﬁrst
                 2                2          2        variable we project over generally prevents the other variables
    (x − dual (ai)) +(y − dual (bi)) − dual (di)
                                                      from being extended. In order to obtain more balanced boxes,
with x =[˜x, x˜] and y =[˜y,y˜]. We get the following image we introduce a heuristic of extension in two steps. First, we
vector :                                              extend all variables but the last one to the middle point be-
                                                      tween the initial value and the bounds of the maximal ex-
  [87.8, −11.7], [78.5, −7.3], [220.8, −20.3], [81.2, −10].
                                                      tension. The last variable is extended to the maximal inter-
As this vector is included in 0, then the initial degenerate box val. For example, x will be extended to [8.7, 9.43] instead
x × y is an inner box. We can now decide that the posi- of [8.36, 9.82],andtheny will be extended to [2.35, 3.32].
tion (x, y) should not be out of a bounding box xu × yu = Second, we perform a maximal extension for all variables (if
[5, 15] × [0, 20]. The extension of x can start.      they can again be extended). Figures 2(c) and 2(d) show the

                                                IJCAI-07
                                                   98