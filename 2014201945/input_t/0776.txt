                Reasoning     under    inconsistency:     the forgotten    connective

        Sebastien´ Konieczny                 Jer´ omeˆ Lang                   Pierre Marquis
     CRIL  - Universite´ d’Artois    IRIT - Universite´ Paul Sabatier    CRIL  - Universite´ d’Artois
         62307 Lens,  France            31062  Toulouse, France             62307  Lens, France
    konieczny@cril.univ-artois.fr              lang@irit.fr              marquis@cril.univ-artois.fr

                    Abstract                            Handling in a different way conjunctions of formulae
                                                      and sets of formulae when they are classically inconsistent
    In many frameworks for reasoning under inconsis-  is an idea which underlies many paraconsistent logics for
    tency, it is implicitly assumed that the formulae decades. Such logics are called non-adjunctive logics, which
    from the belief base are connected using a weak   just means that the inference rule which consists in con-
    form of conjunction. When it is consistent, a belief sidering the conjunctive formula φ ∧ ψ as derivable from
        B =  {ϕ , . . . , ϕ }     ϕ
    base       1      n , where the i are proposi-    the set {ϕ, ψ} fails. For instance, Jask´ owski’s discursive
    tional formulae, is logically equivalent to the base logic [Jask´ owski, 1969], one of the ﬁrst paraconsistent logic
    {ϕ  ∧ . . . ∧ ϕ }
      1         n  . However, when it is not con-     pointed out so far, is non-adjunctive: in this logic, a propo-
    sistent, both bases typically lead to different con- sitional formula ϕ is considered as a consequence of a set of
    clusions. This illustrates the fact that the comma formulae {ϕ , . . . , ϕ } if and only if ϕ is a consequence of
    used in base B has to be considered as an addi-              1     n
                                                      {ϕ1, . . . , ϕn} in epistemic logic S5; this amounts to say
    tional, genuine connective, and not as a simple con- that ϕ is a consequence of {ϕ , . . . , ϕ } in Jask´ owski’s logic
    junction. In this work we deﬁne and investigate a                          1     n
                                                      if and only if ϕ is a classical consequence of one of the ϕi’s.
    propositional framework with such a “comma con-   This approach has been further reﬁned by Rescher and Manor
    nective”. We give it a semantics and show how it  [Rescher and Manor, 1970], who suggest to conjoin up to
    generalizes several approaches for reasoning from maximal consistency, and then by many AI researchers who
    inconsistent beliefs.                             introduce conjoining policies that can take advantage of ad-
                                                      ditional information about the relative certainty of pieces of
1  Introduction                                       belief.
There are many different situations that can lead to reason Nevertheless, as far as we know and apart of the recent
with sets of (mutually) inconsistent formulae (see e.g. [Bloch work [Mengin, 2004] discussed in Section 8, considering
and Hunter, 2001] for a classiﬁcation).               comma  as a plain connective has never been overstepped up
  When dealing with an inconsistent belief base, a rational to now, in particular the languages of previous paraconsistent
agent must refrain from using classical entailment to exploit logics do not enable sets of formulae to be nested. Deﬁn-
her belief base, since from an inconsistent belief base, every ing and investigating a logical framework in which such a
formula is a logical consequence.                     “comma  connective” is used is the main purpose of this pa-
  Many  approaches have been proposed so far to address per, which is organized as follows. After some formal pre-
the paraconsistency issue, i.e., the problem of designing in- liminaries, we present both the syntactical and the semantical
ference relations that do not necessarily trivialize when the aspects of the “comma logic” in Section 3. Some properties
belief base is inconsistent, but preserve many expected con- of the corresponding inference relation are given in Section
sequences nevertheless. Among them, many approaches to 4. The generality of the proposed framework is discussed in
avoid trivialization in presence of a contradiction consist in Section 5. Some translatability results and some complex-
weakening the inconsistent belief base by inhibiting some for- ity results are given in Section 6. An alternative semantics
mulae in it. To be more precise, the key idea of such ap- for the comma connective based on cardinality is brieﬂy dis-
proaches is to select some consistent subsets of the belief base cussed in Section 7. Due to space limitations, most proofs are
B, then to reason deductively from some of them.      only sketched. Section 8 concludes the paper.
  Clearly enough, such approaches require a belief base to be
a set of formulae, not a single formula (inhibition consists in 2 Preliminaries
removing formulae from the set). As a consequence, a (ﬁnite) Let P S be a ﬁnite set of propositional variables: a, b, c, etc.
inconsistent set of formulae cannot be considered as equiva- LP S is the propositional language built from P S, the con-
lent to the conjunction of its elements (and this contrasts with stants > (verum) and ⊥ (falsum) and the standard connectives
what happens when consistent sets are considered). For in- {∧, ∨, ¬, →} in the usual way. Formulae of LP S are noted
stance, the set of consequences of {ϕ, ¬ϕ, ψ} typically dif- with small Greek letters ϕ, ψ, etc. An interpretation (world)
fers from the set of consequences of {ϕ ∧ ¬ϕ ∧ ψ}.    M  is a total function from P S to {0, 1}, typically represented                                                                C[n]
as the set of all the variables of P S it satisﬁes. MP S denotes subset of LP S containing all formulae hϕ1, . . . , ϕki, where
the set of interpretations built over P S. M is a model of a                   C[n−1]
                                                      ϕ1, . . . , ϕk are formulae of LP S , i.e., the set of formulae
formula ϕ, denoted M |= ϕ, if and only if it makes it true (in of depth n where comma is the main functor. Here are some
the usual truth-functional way). Mod(ϕ) denotes the set of examples of formulae of LC , where P S = {a, b, c}:
models of ϕ. |= denotes classical entailment and ≡ denotes                  P S
equivalence between formulae from LP S .                • ϕ1 = a ∧ b ∧ (¬b ∨ c) ∧ ¬c;
  Let ⊂ denotes strict inclusion. Let B = {ϕ1, . . . , ϕn} be • ϕ = ha ∧ b, ¬b ∨ c, ¬ci;
                                    0                       2
a ﬁnite set of formulae of LP S , and let B ⊆ B, we note
    0                0    0                             • ϕ3 = ha ∧ (b ∨ hc, a ∨ b, ¬ci), h¬b ∨ c, ¬ci ∧ ha, >ii;
  B  =   {ϕi |ϕi ∈ B  }. B is a consistent subset of B
                0              0
if and only if B is consistent. B is a maximal consis-  • ϕ4 = h i.
tentV subsetV(or maxcons) of B if and only if B0 is consis-
                           00          0    00          We have depth(ϕ1) = 0; depth(ϕ2) = 1; depth(ϕ3) = 3.
tent and there isVno consistent B such that B ⊂ B ⊆ B.                  C[s,1]                   C[s,3]
                                                      Note also that ϕ ∈ L   (as ϕ ) and that ϕ ∈ L   .
MaxCons(B)   denotes the set of the maximal consistent sub-         2   P S       4         3    P S
                                                        Let us now present the semantics of our new language:
sets of B.
                                                                                                      C
                                                      Deﬁnition 3 The notion of satisfaction of a formula of LP S
3  The  “comma    logic”                              by an interpretation M is given by the relation |=c on MP S ×
                                                      LC   deﬁned inductively as:
Let us start with the deﬁnition of the language of our comma P S
logic.                                                  • M|=c >;
                        C                               • M  |=6 c ⊥;
Deﬁnition 1 The language LP S of the propositional comma
logic is deﬁned inductively as follows:                 • If a ∈ P S, M|=c a if and only if a ∈ M;
                    C
  • P S ∪ {>, ⊥} ⊆ LP S;                                • M|=c ¬ϕ  if and only if M |=6 c ϕ;
           C           C
  • If ϕ ∈ LP S and ψ ∈ LP S then (¬ϕ), (ϕ ∧ ψ), (ϕ ∨ ψ), • M|=c ϕ ∧ ψ if and only if M|=c ϕ and M|=c ψ;
                      C
    (ϕ → ψ) belong to LP S ;                            • M|=c ϕ ∨ ψ if and only if M|=c ϕ or M|=c ψ;
                                C
  • If n ≥ 0 and {ϕ1, . . . , ϕn} ⊆ LP S then hϕ1, . . . , ϕni • M|=c ϕ → ψ if and only if M|=c ¬ϕ or M|=c ψ;
    belongs to LC .
              P S                                       • M|=c hϕ1, . . . , ϕni if and only if there is no interpreta-
                                                                0                      0
Parentheses can be omitted when no ambiguity is possible. tion M  ∈ MP  S such that {i | M |=c ϕi} strictly con-
                  C                                       tains {i | M|=c ϕi}.
  Clearly enough, LP S is a superset of LP S : nonclassical
formulae obtained by taking advantage of the comma connec- We now extend several standard notions (and the corre-
tive can be formed. Here, we abuse words slightly: comma sponding notations) from classical logic to comma logic.
is actually considered as a set constructor, hence formally Let ModC(ϕ) = {M ∈ MP S | M|=c ϕ}.  A formula
                                                          C
comma denotes a family of connectives, one per possible ar- of LP S is said to be consistent (or satisﬁable) if and only if
ity. Especially, comma is not always binary: one can apply ModC (ϕ) 6= ∅, and valid if and only if ModC (ϕ) = MP S.
                                                                                   C
the comma connective to no formula at all (the empty set), If ϕ and ψ are two formulae of LP S, ψ is said to be a con-
one formula (singletons), or more than two formulae. This sequence of ϕ (denoted ϕ|=c ψ) if and only if ModC (ϕ) ⊆
forces us to introduce additional separators (the chevrons h ModC (ψ). When ϕ = >, we simply write |=c ψ instead of
and i – which must not be confused with parentheses) but                             C
                                                      >|=c ψ. Two formulae ϕ and ψ of LP S are said to be equiv-
enables to keep the notations not too heavy.          alent, noted ϕ≡cψ, if and only if ϕ|=c ψ and ψ|=c ϕ.
  It proves also interesting to deﬁne the depth of a formula
   C                     C[n]
of LP S, and the languages {LP S , n ∈ IN} as:        4   Some  logical properties
                                       C
Deﬁnition 2 The depth of a formula ϕ from LP S is deﬁned It is easy to show that, in contrast to the other connectives
inductively as follows:                               in the logic, the comma connective is not truth-functional: in
                                                                                                      C
  • If ϕ ∈ P S ∪ {>, ⊥} then depth(ϕ) = 0 ;           the general case, the truth value of hϕ1, . . . , ϕni from LP S
                                                      in interpretation M cannot be determined from the truth val-
  • depth(¬ϕ) = depth(ϕ) ;                            ues of each ϕi (i ∈ 1 . . . n) in M only. For instance, let
  • depth(ϕ ∧ ψ) = depth(ϕ ∨ ψ) =  depth(ϕ →  ψ) =    P S = {a, b}, M = {a}, ϕ1 = ha, bi, ϕ2 = ha ∧ ¬b, bi: M
    max(depth(ϕ), depth(ψ)) ;                         satisﬁes the “ﬁrst” element of ϕ1 and ϕ2, but does not sat-
                                               1      isfy the “second” one; while M is a model of ϕ2, it is not a
  • depth(hϕ1, . . . , ϕni) = maxi=1...n depth(ϕi) + 1.
                                                      model of ϕ1. This lack of truth-functionality explains why the
            C[n]                          C           comma  connective is really genuine in the logic. (It cannot be
For n ∈ IN, LP S is the set of all formulae of LP S whose
depth is less or equal to n.                          deﬁned by just combining connectives of classical logic).
                                                        Actually, the discrepancy between classical logic and
                            C              C[n]
  One can easily check that LP S =   n∈IN LP S and    comma  logic lies only in the comma connective, since:
 C[0]
LP S =  LP S. Finally, for all n ≥ 1, weS deﬁne the lan- Proposition 1 Comma logic is a conservative extension of
       C[s,n]                                         classical logic: for every pair of formulae ϕ, ψ in which the
guage LP S   (set of simple formulae of depth n) as the
                                                      comma  connective does not occur, then ϕ|=c ψ if and only if
  1By convention depth(h i) = 1.                      ϕ |= ψ.  Obviously, new valid formulae are obtained in comma   7. hϕ1, . . . , ϕ1, ϕ2, . . . , ϕni ≡c hϕ1, . . . , ϕni.
logic, like hϕ, ¬ϕi, because the language of propositional
                                                        8. ∀n ≥ 0 hϕ1, . . . , ϕni |=6 c ⊥.
logic has been enriched, but in any case classical theorems
are preserved.                                          9. hϕ1, ϕ2, . . . , ϕni ≡c hϕ2, . . . , ϕni if ϕ1 is inconsistent
  Furthermore, the replacement metatheorem of classical   or (∃i ∈ 2 . . . n, ϕi is consistent and ∀i ∈ 2 . . . n, ϕi |=
logic can be extended to comma logic:                     ϕ1).
                                      C                10. ϕ1 ∧ . . . ∧ ϕn|=c hϕ1, . . . , ϕni.
Proposition 2 Let ϕ be a valid formula from LP S and let x ∈
                            C                          11. hϕ1, . . . , ϕni∧hψ1, . . . , ψmi|=c hϕ1 ∧ψ1, . . . , ϕ1 ∧ψm,
P S. Let ψ be any formula from LP S . The formula obtained
by replacing in ϕ every occurrence of x by an occurrence of . . . , ϕn ∧ ψ1, . . . , ϕn ∧ ψmi.
ψ is valid as well.                                    12. hϕ1, . . . , ϕni ∧ hψ1, . . . , ψmi|=c hϕ1, . . . , ϕn, ψ1, . . . ,
                                                          ψ  i.
  Let us now make precise some properties of the inference  m
                                                            ϕ                            i     . . . n
relation |=c . First, a direct consequence of its deﬁnition is 13. If i is consistent (for at least one ∈ 1 ), then
                                                           ϕ , . . . , ϕ ϕ   . . . ϕ
that |=c is a Tarskian consequence relation (since it is de- h 1   ni|=c  1 ∨   ∨  n.
ﬁned as model containment); from this observation, a number 14. If ϕ is consistent,
of immediate properties follows, especially the fact that |=c then hϕ1 ∨ ϕ, . . . , ϕn ∨ ϕi ≡c (ϕ1 ∧ . . . ∧ ϕn) ∨ ϕ.
is reﬂexive and transitive. By the way, note that while in clas-
                                                       15. ¬(¬ϕ) ≡c ϕ.
sical logic the basic entailment relation |= on LP S ×LP S can
                              LP S                      Item (6) shows that the “comma connective” is symmetric
be easily extended to a relation on 2 × LP S by deﬁning
the models of a set of formulae as the interpretations satisfy- in every argument. Item (7) shows that the “comma connec-
ing every formula from the set, the similar construction would tive” is idempotent.
                                                        Item (8) shows that for every n > 0, every formula from
not be meaningful here; indeed, in comma logic, sets of for- C[s,n]
mulae are interpreted in a nonstandard way. This renders the LP S is consistent (obviously, this cannot be extended to
                                                                      C
usual characterization of Tarskian consequence relations in- the full language LP S). This is sufﬁcient to ensure that |=c
adequate in our setting since |=c does satisfy neither strong achieves a form of paraconsistency when starting from a set
reﬂexivity nor monotonicity:                          of formulae.
  • ha, ¬ai |=6 a;                                      Item (9) gives a sufﬁcient condition to simplify a set of for-
            c                                         mulae (note that in contrast to classical logic, it is not possible
  • hai|=c a but ha, ¬ai |=6 c a.                     in general to remove a formula from a set as soon as it is en-
  Here are some other valuable properties:            tailed by another formula; for instance, while a ∧ b|=c a ∨ b,
                                                      we do not have ha ∧ b, ¬a, a ∨ bi equivalent to ha ∧ b, ¬ai).
Proposition 3                                           Items (10), (11), (12) make precise the connection between
 1. If ϕ1|=c ϕ2 and hϕ1, ϕ2i|=c ψ, then ϕ1|=c ψ.      the comma connective and conjunction. None of the converse
 2. If hϕ1, ϕ2i|=c ψ, then ϕ1|=c (ϕ2 → ψ).            relation holds in the general case (for (10), ϕ1 ∧ . . . ∧ ϕn
                                                      should be consistent; the converse of (11) does not hold even
 3. If ϕ1≡cϕ2 and ϕ1 is a subformula of ψ, then any for-
                                                      in the restricted case m = 1 and hϕ1, . . . , ϕni ∧ ψ1 is con-
    mula obtained by replacing in ψ occurrences of ϕ1 by
                                                      sistent: ha ∧ ¬b, ¬a ∧ ¬b, ¬a ∧ ¬bi |=6 c ha, ¬a ∨ b, ¬ai ∧ ¬b;
    ϕ2 is equivalent to ψ.
                                                      the converse of (12) fails since for instance ha, ¬ai |=6 c hai ∧
 4. ϕ|=c ψ1 ∧ ψ2 if and only if ϕ|=c ψ1 and ϕ|=c ψ2.  h¬ai). Note also that there is in general no deductive connec-
 5. If hϕ, ϕ1i|=c ψ and hϕ, ϕ2i|=c ψ, then hϕ, (ϕ1 ∨  tions between a formula where nested commas occur and its
    ϕ2)i|=c ψ.                                        “unfold” counterpart. Especially, in general, we have:
                                                        ϕ , . . . , ϕ , ψ , . . . , ψ ϕ , . . . , ϕ , ψ , . . . , ψ
  Item (1) is a form of the cut rule. Item (2) is a form of the hh 1 ni h 1 mii |=6 c h 1   n  1      mi
deduction metatheorem. Item (3) is the substitution metathe- For example, hha, bi, h¬a, cii |=6 c ha, ¬a, b, ci.
orem for the “comma logic”. In particular, it shows that ∀k In general, we also have:
   i     . . . k ϕ   ϕ0      ϕ  , . . . , ϕ , . . . , ϕ
if ∀ ∈  1      i ≡c   i then h 1      k      ni ≡c    hϕ1, . . . , ϕn, ψ1, . . . , ψmi |=6 c hhϕ1, . . . , ϕni, hψ1, . . . , ψmii
hϕ0 , . . . , ϕ0 , . . . , ϕ i. Item (4) is a form of the “and rule”.
  1      k      n                                                   ha, ¬a, b, ci |=6 hha, b, ¬ai, h¬a, cii
Item (5) is a form of proof by cases (or “or rule”).    For example,            c                .
  Other standard metatheorems of classical logic fails in the Item (13) and (14) make precise the connection between
general case for full comma logic, i.e., when sets of for- the comma connective and disjunction. No other signiﬁcant
                                                                                               ha, b, ¬bi∨
mulae are considered. For instance, modus ponens fails properties involving disjunction hold; for instance
                                                      ¬a |=6 c ha ∨ ¬a, b ∨ ¬a, ¬b ∨ ¬ai. Together with the previ-
(ha, (a → ¬a)i |=6 c ¬a), and-elimination and or-introduction
as well (h⊥, ϕi |=6 ⊥ and h⊥i |=6 ⊥∨ϕ); reduction ad absur- ous properties concerning conjunction, it shows that we can
               c           c                          consider the comma connective as a “weak” conjunction con-
dum fails (ϕ|=c ϕ while hϕ, ¬ϕi |=6 c ⊥).
  Let us now present additional properties which state how nective, since it is equivalent to it when the conjunction is
the comma connective interacts with the other connectives consistent, but gives a consistent result even when it is not.
(and itself).                                         Furthermore, when all the formulae are pairwise contradic-
                                                      tory but one of them is consistent, comma is equivalent to the
Proposition 4                                         disjunction connective. Thus, if we specialize it to the case
 6. For any permutation σ of {1, . . . , n}, hϕ1, . . . , ϕni is two formulae ϕ and ψ are considered, we get the easy corol-
    equivalent to hϕσ(1), . . . , ϕσ(n)i.             lary:                       ϕ ∧ ψ  if consistent, else       This can be also easily expressed within the comma logic
Corollary 1 hϕ, ψi ≡c  ϕ ∨ ψ  if consistent, else     framework (note that since the set B of facts is consistent, it
                    (  >      otherwise.              can be considered conjunctively):

  Item (15) ﬁnally states that negation is involutive for the Proposition 7 hB, {ϕ1, . . . , ϕn}i `D ϕ if and only if hϕ1 ∧
full logic (in particular, ¬(¬hϕ1, . . . , ϕni) ≡c hϕ1, . . . , ϕni). B, . . . , ϕn ∧ Bi ∧ B|=c ϕ.
No other link between negation and the comma connective
can be established in the general case (for instance, ¬ does V Finally, noteVthat sinceV circumscription can be encoded
not distribute over the “comma connective”; for instance, as skeptical inference from supernormal defaults (see e.g.,
                                                      [               ]
¬h⊥i ≡  ⊥ while h¬⊥i ≡ >).                             Etherington, 1987 ), it can also be encoded in the comma
       c              c                               logic framework.
5  Generality  of the framework                       5.4  Belief revision
Let us now show how several approaches for dealing with The basic revision operator proposed by Nebel [Nebel, 1991;
inconsistency can be encoded in this logic.           1998; Fagin et al., 1983] is deﬁned as follows:
                                                      Deﬁnition 7 Let B⊥ϕ   =  {M   | M   ⊆  B and M   6|=
5.1  Skeptical inference                              ϕ and ∀M 0 s.t. M ⊂ M 0 ⊆ B, M 0 |= ϕ}. Basic revision
One of the most common method for reasoning from an in-
                                                      is then deﬁned as: B ◦N ϕ = (        M) ∧ ϕ.
consistent set of formulae consists in selecting the maximal
                                                                                M∈B⊥¬ϕ
(w.r.t. set inclusion) consistent subsets (also called maxcons)                    _    ^
of formulae (see [Rescher and Manor, 1970] for example). In comma logic, this can be expressed as follows:
Consequences w.r.t. skeptical inference (also called “univer-
sal” inference) are then deﬁned as classical consequences of
                                                      Proposition 8 {ϕ1, . . . , ϕn} ◦N ϕ |= µ if and only if
every maxcons:
                                                      hϕ1 ∧ ϕ, . . . , ϕn ∧ ϕi ∧ ϕ|=c µ.
Deﬁnition 4 ∆ `∀ ϕ iff ∀M ∈ MaxCons(∆), M  |= ϕ.
                                                      5.5  Belief merging
  Such an inference relation can be easily recovered in our Suppose that one wants to merge several belief (or goal) bases
comma logic:                                          while allowing some of those bases to be inconsistent. If
Proposition 5 {ϕ1, . . . , ϕn} `∀ ϕ iff hϕ1, . . . , ϕni|=c ϕ. one wants to take into account inconsistent belief bases in the
                                                      merging process, one can ﬁrst perform an intra-source merg-
5.2  Credulous inference                              ing in order to extract useful information from those bases,
                                                      before making the proper inter-source merging.
From a set of maxcons, one can also consider credulous infer- Let E = {B , . . . , B } be a set of (possibly inconsis-
ence (also called “existential” inference), that allows to infer    1      n
                                                      tent) belief bases s.t. for all i ∈ 1 . . . n, we have Bi =
a formula if at least one maxcons classically entails it. i    i
                                                      {ϕ1, . . . , ϕki }. Then, we can deﬁne the merging of those
Deﬁnition 5 ∆ `∃ ϕ iff ∃M ∈ MaxCons(∆), M  |= ϕ.      bases as :
                                                                       1      1         n      n
  Again, such an inference relation can be easily recovered 4(E)  = hhϕ1, . . . , ϕk1 i, . . . , hϕ1 , . . . , ϕkn ii
in our comma logic:
                                                        This operator is not deﬁnable as a two aggregation steps
Proposition 6                                         merging operator (as deﬁned in [Konieczny et al., 2002]).
{ϕ1, . . . , ϕn} `∃ ϕ iff hϕ1, . . . , ϕn, ¬ϕi ∧ ϕ |=6 c ⊥. Conversely, considering an alternative semantics for the
                                                      comma  connective (see Section 7), we can capture some of
5.3  Supernormal  defaults                            the two aggregation steps merging operators in comma logic.
Assumption-based theories and supernormal default logic
[Poole, 1988; Brewka, 1989] can be described in the follow- 6 Computational aspects
ing way. Let hB, Bdi be a pair, where B and Bd are two ﬁnite Let us investigate both translatability issues and complexity
sets of formulae. B is the set of facts (or hard constraints), issues for comma logic. First of all, one can prove that the
that is supposed to be consistent. Bd is a set of defaults, i.e., expressiveness of the comma logic is exactly the same as the
a set of formulae that one wishes to add to facts if it does not expressiveness of classical logic (every piece of information
result in an inconsistency. Bd is often not consistent with B. which can be encoded in one of the logics can also be encoded
  An extension is a subset of formulae of B∪Bd that contains in the other one):
all the formulae of B and a maximum (w.r.t. set inclusion) of
                                                                                 ϕ   LC
formulae of Bd. So, the set of all the extensions is deﬁned as: Proposition 9 For any formula of P S, there is a formula
                                                            C[0]
Extens(hB, Bdi) = {E | E ⊆ B∪Bd  and B ⊆ E and E 6|=  ψ of LP S = LP S that is equivalent to ϕ.
⊥ and ∀E0 s.t. E ⊂ E0 ⊆ B ∪ B , E0 |= ⊥}.
                           d                            A simple induction on the depth of the formulae shows how
  Inference from such a supernormal default theory hB, Bdi             C
                                                      each formula ϕ of LP S can be equivalently (for |=c ) rewritten
is deﬁned as:                                                                                         C
                                                      into a classical formula C(ϕ). Let ϕ be a formula of LP S
Deﬁnition 6 hB, Bdi `D ϕ iff ∀E ∈  Extens(hB, Bdi),   of depth k. A translation of it into a classical formula can
E |= ϕ.                                               be obtained as follows. First, replace every subformula of ϕ          C[s,1]                           C[0]                                                         3
that is in LP S by an equivalent formula from LP S (the We  do not have hardness proofs but we conjecture them.
substitution theorem for the “comma logic” makes it sound); Thus, we do not know how to perform comma elimination
one gets then a formula of depth n − 1, so we can iterate the (for the nested occurrences) in polynomial time (and we con-
process until a formula of depth 0 is obtained. For example, jecture that it is not possible to do it); especially, intro-
let ϕ = ha, b, h¬b∨c, ¬cii; we start by translating h¬b∨c, ¬ci ducing new symbols would not necessarily preserve equiva-
in ¬b ∧ ¬c: after one iteration, we get the formula ha, b, ¬b ∧ lence over the original language; for instance, ha, h¬a, bii 6≡c
¬ci, and a second iteration gives (a ∧ b) ∨ (a ∧ ¬b ∧ ¬c), ha, newi ∧ (new ⇔ h¬a, bi).
that is equivalent to a ∧ (b ∨ ¬c). The problem with such a Let us now give a few comments about those complexity
translation is that the size of C(ϕ) is generally exponentially                            C[1]
                                                      results. First, the fact that satisﬁability in LP S is at the sec-
larger than the size of ϕ. Can we do better? Actually, the ond level of the polynomial hierarchy, and not higher are
answer is negative:                                   good news.  We know  (from Section 5) that the universal
Proposition 10 Under the usual assumptions of complexity and existential inference problems can be reduced, in poly-
theory,2 there is no polysize function that maps any formula nomial time, to satisfaction or validity problems of formulae
      C                C[1]                               C[1]                          [
from LP S (and even from LP S ) to                    of LP S . Given complexity results from Cayrol et al., 1998;
                                                      Nebel, 1998], it follows that the satisﬁability problem in
  • an equivalent classical formula.                    C
                                                      L  [1] cannot be lower than the second level of the polyno-
  •                         LC                          P S
    an equivalent formula from P S in which the “comma mial hierarchy. The fact that it is not higher shows that the
    connective” is binary (i.e., whenever it is used, it may gain of ﬂexibility we get does not result in a complexity shift.
    connect at most two formulae).
  The ﬁrst item is a direct consequence of the non-   7   Variation on  the “comma   semantics”
compilability of circumscription [Cadoli et al., 1997]. The
second is a consequence of the ﬁrst one, given that every Among others, another semantics for the comma connective
               C
formula ϕ from LP S in which the comma connective is at is obtained by considering as models of hϕ1, . . . , ϕni, the in-
most binary can be turned into a classical formula whose size terpretations that maximize the number of satisﬁed formulae
in bounded by |ϕ| (the proof is easy by structural induction ϕi. Formally, this amounts to replacing in Deﬁnition 3, the
given Corollary 1).                                   item M|=c hϕ1, . . . , ϕni by the following one:
  Let us now turn to the inference issue. From Deﬁnition
                                                        • M|=Chϕ   , . . . , ϕ i
3, it is easy to show that ϕ|= ψ if and only if ϕ ∧ ¬ψ is     c   1      n  if and only if there is no inter-
                          c                                        M 0 ∈ M              |{i | M 0|= ϕ }| >
inconsistent. Hence it is sufﬁcient to focus on the satisﬁability pretation P S such that        c  i
                              C                           |{i | M|=c ϕi}|.
issue. The satisﬁability problem in LP S is, of course, at least
as hard than for classical logic (so it is NP-hard). Can we say Properties reported in Section 4 are typically preserved by
                              C[1]                                                    ϕ , ϕ , ϕ , . . . , ϕ
more than that? Let us begin with LP S .              this modiﬁcation, but idempotence: h 1 1 2     ni is
                                                                              hϕ , ϕ , . . . , ϕ i
                                         C[1]    p    (generally) not equivalent to 1 2    n . For example,
Proposition 11 The satisﬁability problem in LP S is Σ2- ha, a, ¬ai is not equivalent to ha, ¬ai under the cardinality
complete.                                             maximality semantics.
                 p                                      Contrariwise to the |=c case, we can show that:
  Membership to Σ2 comes from the fact that the corre-
sponding model checking problem is in coNP: for any simple          For every ﬁxed n, there is a polysize func-
                                     C[s,1]           Proposition 13
                                                                                 C[n]
subformula ψ = hα1, . . . , αni of ϕ from LP S , deciding
                                                      tion that maps any formula of LP S into a query-equivalent
whether M |=6 c ψ simply consists in guessing an interpreta-                             C
      0                                               formula of LP S when we appeal to the |=c semantics.
tion M and to check in polynomial time that the set of αi
            0
satisﬁed by M is a proper superset of the set of αi satisﬁed The proof is a constructive one and relies on a translation
by M. Actually, the truth values of all such ψ in M can be es- function C similar to the one given in Section 6: we ﬁrst
tablished in nondeterministic polynomial time (guess in par- replace each occurrence of the formulae ψ = hα1, . . . , αni
allel several M 0, one for each simple subformula ψ of depth C[s,1]
                                                      of L      in ϕ by  the cardinality formulae [= kψ] :
1 which is not satisﬁed by M). Once this has been done, the P S
                                                      hα1, . . . , αni, meaning that exactly kψ formulae among the n
truth value of ϕ in M can be computed in deterministic poly-
                               p                      formulae α1, . . . , αn must be satisﬁed (see e.g. [Benhamou
nomial time. Hardness comes from Σ2-hardness of credulous et al., 1994]); such cardinality formulae can be translated
inference from maximal consistent subbases [Nebel, 1998; in polynomial space as classical query-equivalent formulae.
Cayrol and Lagasquie-Schiex, 1995].                   Such a translatability result is helpful in the objective of com-
  Now, what about the satisfaction problem when commas                    C[n]
are nested? An iterated use of the proof of the preceding re- piling formulae from LP S into classical formulae so as to
sult (membership part) easily leads to the following: improve inference.
                                                      Proposition 14 The satisﬁability problem in LC for |=C is
Proposition 12                                            p                                  P S     c
                             C[n]      p              in ∆2.
  • The satisﬁability problem in LP S is in Σn+1.
                             C                           3
  • The satisﬁability problem in LP S is in PSPACE.      That the comma nesting level goes seemingly pairwise with a
                                                      complexity increase is not surprising (a similar phenomenon hap-
  2Especially, the fact that the polynomial hierarchy does not col- pens when conditionals are nested, see e.g. [Eiter and Gottlob,
lapse.                                                1993]).