                       Entailment Semantics for Rules with Priorities

                                           David Billington
                             Institute for Integrated and Intelligent Systems
                        School of Information and Communication Technology
                                  Nathan campus, Griffith University
                                 Brisbane, Queensland 4111, Australia.
                                      d.billington@griffith.edu.au

                    Abstract                          Default Logic which gets the "right" answer for Example
                                                      4.1. Also Reiter-extensions are given a new fixed-point
    We  define  a new   general rule-based non-
                                                      characterisation; and Lukaszewicz’s [1990] m-extensions
    monotonic framework which allows an external
                                                      are given a much simpler construction and fixed-point char-
    acyclic priority relation between rules to be inter- acterisation.
    preted in several ways. Several entailment seman-
                                                        The unifying framework facilitates comparison of the
    tics are defined via a constructive digraph, with one
                                                      systems encompassed. The constructive semantics facili-
    being given a declarative fixed-point characterisa-
                                                      tates understanding, and hand calculation of small examples.
    tion as well. Each of these semantics satisfies
                                                        In this paper we shall concentrate on the relationship be-
    Principle 1 of [Brewka and Eiter 1999]. The
                                                      tween plausible theories and the Default Logics of Reiter
    framework encompasses Default Logic [Reiter       [1980] and Lukaszewicz [1990].  The relationship with
    1980], ground Answer Set Programming (ASP)
                                                      other Default Logics, ASP, Defeasible Logic, and Argumen-
    [Baral 2003], and Defeasible Logic [Nute 1994].
                                                      tation systems [Dung 1995] is a subject for other papers.
    Default Logic is provided with a new semantics
                                                        Now let us look at the above systems to see the variety of
    which is ambiguity blocking, rather than the usual
                                                      rules that have been considered.
    ambiguity propagating semantics. Also Reiter-
                                                        Reiter’s Default Logic considers a rule to be a default. A
    extensions are given a new fixed-point characteri- (closed) default, d, can be written as d =(p(d):J(d)/c(d)),
    sation; and Lukaszewicz’s [1990] m-extensions are
                                                      where p(d), the pre-requisite of d,andc(d), the consequent
    given a much simpler construction and fixed-point
                                                      of d, are closed formulas, and J(d), the set of justifications
    characterisation.
                                                      of d, is a non-empty finite set of closed formulas. Intui-
                                                      tively the meaning of d is that if p(d) is accepted and each
1  Introduction                                       element of J(d) is consistent with what is currently accepted,
A characteristic of an intelligent system is its ability to rea- then accept c(d).
son with limited information. Non-monotonic reasoning   An ASP rule has the form
                                                                        
systems represent and reason with limited information         l0 or ... or lk lk+1, ..., lm, notlm+1, ..., notln
where the limitation is not quantified. Some of the most where the li are literals. Intuitively the meaning of such a
natural and successful non-monotonic reasoning systems are rule is that if lk+1,...,lm, are accepted and lm+1, ..., ln can be
based on the idea of a rule. Three such systems are Default safely assumed to be false then accept at least one of l0, ...,
Logic [Reiter 1980], Answer Set Programming (ASP) [Ba- lk. A program is a finite set of ASP rules.
ral 2003], and Defeasible Logic [Nute 1994].            Nute's Defeasible Logic has three kinds of rules. The
  After considering these systems we shall develop a gen- strict rule, r,hastheform A(r)  c(r);thedefeasiblerule,
eral rule-based non-monotonic framework, called a plausi- r,hastheform A(r)  c(r); and the defeater rule, r,hasthe
c(r); where A(r), the set of antecedents of r,is ב (ble theory, which encompasses these three systems. Plausi- form A(r
ble theories allow an external acyclic priority relation be- a finite set of ground literals and c(r), the consequent of r,is
tween rules to be interpreted in several ways. Several en- a ground literal. Strict rules are like classical material im-
tailment semantics for plausible theories will be defined via plication. Intuitively defeasible rules mean that if A(r)is
a constructive digraph, with one being given a declarative true then usually c(r) is true. Defeater rules have the intui-
fixed-point characterisation as well. (An entailment seman- tive meaning that if A(r) is true then it is too risky to sup-
tics defines the set of all sentences that follow from, or are pose ¬c(r)istrue.
entailed by, a plausible theory.) Each of these semantics All of the above rules have a set of antecedents and a
satisfies Principle 1 of [Brewka and Eiter 1999].     consequent. However defaults and some ASP rules have an
  Default Logic is provided with a new semantics which is additional consistency checking part which we shall call a
ambiguity blocking, rather than the usual ambiguity propa- set of guards.
gating semantics. So for ambiguity blockers, there is now a


                                                IJCAI-07
                                                   256  It is very useful to be able to specify a priority between vent acceptance of ¬c(r), but not sufficient evidence to ac-
rules. Defeasible Logic has always had this ability. More cept c(r). Warningrulesareonlyusedtostopotherrules
recently preferences between defaults and between ASP being applied. They never contribute their consequent to
(c(r ב (rules have been considered. See [Delgrande et al 2004] for what is currently accepted. The defeater rule A(r
.(c(r ב {(a survey of the area and a classification of priorities. Ac- can be regarded as the warning rule A(r):{c(r
cording to this classification our priority relation is acyclic, Recall that a default, d,isnormal iff J(d)={c(d)}. So
between rules, and external.                          we have the following definition.
  The rest of the paper has the following organisation. The
                                                        Definition 2.2 (normal rule). A rule r is normal iff
next section formally defines a system of rules, called a
                                                      G(r)={c(r)}. If r is normal then we often abbreviate
ב                                     plausible theory, which encompasses Default Logic, ground
ASP programs, and Defeasible Logic. Section 3 discusses A(r):G(r) c(r)byA(r)   c(r), and A(r):G(r) c(r)by
.(c(r ב (A(r                                                      
semantics, proposes several constructive ways of defining
what a plausible theory entails, and then shows that a prin- Let R be any set of rules. We denote the set of defeasible
ciple concerning priorities is satisfied. Each construction rules in R by Rd, and the set of warning rules in R by Rw.
forms a directed graph called an applicative digraph. An The set of consequents of R is denoted by c(R); that is
example illustrating ambiguity blocking and propagating is c(R)={c(r):r  R}. To aid readability we sometimes
given in Section 4. Section 5 concerns the relationship be- write c[R]forc(R). The set of all guards in rules in R is
tween applicative digraphs and Default Logic. In particular denoted by G(R); that is G(R)=»{G(r):r  R}.
Reiter's extensions and Lukaszewicz’s [1990] m-extensions A binary relation, >, on any set R is cyclic iff there exists
are characterised. Section 6 considers a fixed-point charac- a sequence, (r1, r2,...,rn)where n  1, of elements of R
terisation of the leaves of an applicative digraph. The con- such that r1 > r2 >...>rn > r1. A relation is acyclic iff it is
clusions form Section 7.                              not cyclic. Acyclicity is about the weakest property that an
                                                      ordering relation can have. Acyclicity implies irreflexivity
2  Plausible Theories                                 and asymmetry (and hence antisymmetry); however we do
                                                      not require transitivity.
We set the scene by defining some notation. The empty set
                                                        Let > be an acyclic binary relation on a set of rules R.
is denoted by {}, and ގ denotes the set of non-negative in-
                                                      We read r > r' as r has a higher priority than r',orr is su-
tegers. Let Snt be the set of sentences (closed formulas) of a
                                                      perior to r'.Wesayr  is maximal in R iff for all r' in R,
countable first-order language. Then Snt is countable. If
                                                      not(r' > r).
S  Snt then define the set, Cn(S), of semantic conse-
quences of S by Cn(S)={s  Snt : S  s}.                Definition 2.3 (plausible theory). A plausible theory is a
                                                      triple   =(Ax, R, >) such that PT1, PT2, and PT3 all hold.
  Definition 2.1 (rule). A rule, r, is a 4-tuple
                                                      (PT1) Ax is a satisfiable set of sentences.
(A(r), G(r), arrow(r), c(r)), where
                                                      (PT2) R is a set of rules.
A(r), the set of antecedents of r, is a finite set of sentences,
                                                      (PT3) > is an acyclic binary relation on R.
G(r), the set of guards of r, is a finite set of sentences,  
Ax, R,>) isanormal plausible theory iff every rule in)=                                         ב            
arrow(r)  {  ,  }, and                                R is normal.
c(r), the consequent of r, is a sentence.
Rules which use the  arrow are called defeasible rules and The sentences in Ax are called axioms andtheycharacter-
are written as A(r):G(r)  c(r).                      ise the aspects of the situation which are certain. R is count-
.arrow are called warning rules and able because Snt is countable ב Rules which use the
.(c(r ב (are written as A(r):G(r
  Intuitively the defeasible rule, r, means that if each ele- 3 Entailment Semantics
ment of A(r) is accepted and each element of G(r) is consis- Let us start by considering what properties a semantics for a
tent with what is currently accepted, then c(r) should be plausible theory might have. Predicate logic has two parts,
accepted. In other words, r provides sufficient evidence so a proof mechanism and a semantics. The semantics inter-
that one should behave as if c(r) is true, even though it may prets the syntax used by the proof mechanism, and it also
turn out that c(r)isfalse.                            provides a way of assuring us that the proof mechanism
  So the default (p(d):J(d)/c(d)) can be regarded as the cannot prove things we don’t want (soundness).
defeasible rule {p(d)}:J(d)  c(d). The ground ASP rule In this paper we are concerned with the semantics of
        l0 or ... or lk  lk+1, ..., lm, notlm+1, ..., notln plausible theories, rather than any proof mechanisms.
can be regarded as the defeasible rule                  Applicative digraphs (defined below) provide an interpre-
       {lk+1, ..., lm}:{¬lm+1,...,¬ln}  l0  ...  lk. tation of the rules and symbols used in a plausible theory.
And Nute's defeasible rule A(r)  c(r) can be regarded as As the name “applicative” suggests, we interpret rules as
our defeasible rule A(r):{c(r)}  c(r).               things which can be applied. The way they are applied and
  Intuitively the warning rule, r, warns that if each element the restrictions on their application give an interpretation to
of A(r) is accepted and each element of G(r) is consistent the syntactic components of the rules.
with what is currently accepted, then accepting ¬c(r)istoo The way a semantics assures us that the proof mechanism
risky. That is, r provides enough evidence for c(r)topre- is sound is to define a set, say Sem(P), of sentences that fol-


                                                IJCAI-07
                                                   257low from the premisses P and then insist that every sentence A local perspective on > is given by Pr(r, N), which
that is proved must be in Sem(P). In predicate logic Sem(P) means that maximal rules are applied before non-maximal
is Cn(P). An entailment semantics for P is the set of all rules, and that higher priority rules are applied before lower
sentences which follow from, or are entailed by, P.For priority rules.
predicate logic this is generally agreed to be Cn(P). An
                                                        Definition 3.5 (Pr(r, N), r has priority at N).
entailment semantics for a plausible theory   is the set, say
                                                      Pr(r, N) iff either r is maximal in R;
Sem( ), of all sentences which follow from, or are entailed
                                                        or r is not maximal in R and for each s in R–(N
{r}),
by,  . Since entailment is an intuitive notion, the definition
                                                          if El(s, N) then not(s > r)ands is not maximal in R.
of Sem( ) needs to be as close to our intuitions as possible.
  There are different well-informed intuitions about what Before we can define a global perspective on > we need
should follow from a plausible theory, for instance the am- theideaofaset,M, of rules being compatible; which
biguity propagating intuition differs from the ambiguity roughly means that M could be a subset of a node.
blocking intuition (see example 4.1). To accommodate this
we shall define a family of applicative digraphs.       Definition 3.6 (Cp(M), M is compatible).
                                                      Cp(M)iffthereexistsN such that
  Applicative digraphs enable Sem( ) to be constructed; so   
no guessing is needed.                                  M    N  R  and Ap(N)andCs(N).
                                                      Cp(r1,...,rn)meansCp({r1, ..., rn}).
3.1 Applicative Digraphs                                We can now define what it means for a set N of rules to
An applicative digraph displays the order in which rules are be desirable. Roughly, if r  N and r is applicable at N
applied. Each node is the set of rules applied so far, hence and r is superior to a rule in N then r is incompatible with a
each node is a subset of R. Before applicative digraphs can higher priority rule already in N.
be defined we need the following concepts. Suppose
                                                        Definition 3.7 (Ds(N), N is desirable; Ds(r, N)).
  =(Ax, R, >) is a plausible theory, r  R,and N  R.
                                                      r > N iff there exists r' in N such that r > r'.
  Definition 3.1 (B(N), the belief set of N).         Ds(N) iff for all r in R–N,ifCp(r), Ap(r, N), and r > N
B(N)=Cn(Ax  
 c(N)).                                    then there exists r' in N such that r' > r and not Cp(r', r).
                                                      Ds(r, N)iffDs(N
{r}).
  B(N) is the set of beliefs sanctioned by Ax and N. At each
node N  R there are 3 levels of belief. The set of strong- If two rules could both be applied at a node, but the ap-
est beliefs is Cn(Ax). This is the set of known facts, indis- plication of either rule prevents the application of the other
putably true statements. It is the same at each node. B(Nd) rule, then we may not want to apply either rule. That is we
is the set of all beliefs which are strong enough to behave as may not want to choose between conflicting rules, unless
if they are true. Even though we know that some may occa- one is preferred over the other. Of course if it does not mat-
sionally be false. The set of weakest beliefs at N is B(N). ter which of two rules is applied first then we can apply ei-
This is the set of all beliefs which are strong enough to pre- ther. This is the notion of partner rules. Roughly, two rules
vent belief in any statement which is inconsistent with B(N). are partners at node N means that if either rule could be ap-
                                                      plied to a potential descendant Q of N, then both rules could
  Definition 3.2 (Ap(r, N), r is applicable at N; Ap(N)).
                                                      be applied to Q.
Ap(r, N)iff A(r)  B(Nd).
Ap(N) iff for all r in N, Ap(r, N).                     Definition 3.8 (Pa(r, r', N), r and r' are partners at N).
                                                      Pa(r, r', N)iffEl(r, N), El(r', N), and for each Q such that
  The fundamental idea is that if every antecedent of a rule
                                                          N  Q  R and Cs(Q)andAp(Q),
is in B(N ) then its consequent can be added to B(N). This is
       d                                                if Cs(Q
{r}) or Cs(Q
{r'}) then Cs(Q
{r, r'}).
what applying r to B(N) means. However we do not apply a
rule which will conflict with our current set of weakest be- There are many ways to decide if rule r is preferred over
liefs; so we need the idea of a set of rules being consistent. rule s. The simplest is if r > s. However a more general
                                                      notion of "defeat by a partner" is more useful. Basically if r
  Definition 3.3 (Cs(N), N is consistent).
                                                      and s conflict but a partner of r has a higher priority than s
Cs(N)iffAx
c(N) is satisfiable and
                                                      then we prefer r over s. This leads to the idea of there being
        for all g in G(N), Ax
c(N)
{g} is satisfiable.
                                                      a winner at a node.
  Definition 3.4 (El(r, N), r is eligible at N).
                                                        Definition 3.9 (Wn(r, N), r is a winner at N).
El(r, N)iffAp(r, N)andCs(N
{r}).
                                                      Wn(r, N)iffEl(r, N), Pr(r, N), and for each s in R–(N
{r}),
  El(r, N) is a useful summary term.                    if El(s, N) and not Cs(N
{r, s}) then
  According to Delgrande and Schaub [2000] priorities     there exists r' in R–N such that
may be prescriptive (dictating the order in which rules are El(r', N)andPa(r, r', N)and r' > s.
applied, which has a local perspective) or descriptive (de-
                                                        Depending on one's intuition one may use Pr, Wn, Ds,or
scribing the preferred results of applying rules, which re-
                                                      none of them at each node. Hence the following definition.
quires a global perspective).


                                                IJCAI-07
                                                   258  Definition 3.10 (0(r, N)).                          desirable leaves satisfies Principle 1. A reasonable alterna-
0(r, N)istrue.                                        tive to Ds(N)isPr(N), where
                                                                Pr(N) iff for all r in N, Pr(r, N–{r}).
  If every rule that can be applied to B(N )isinN then we
                                   d                  But if N
{r } is a node in an applicative digraph then not
say N is full. There are several notions of fullness.            1
                                                      Pr(r2, N). So Principle 1 holds if Pr(N)replacesDs(N).
  Definition 3.11 (Full(I, N), N is I-full).
Suppose I  {0, Pr, Wn, Ds}. Full(I, N) iff for each r in R, 4 Example
  if El(r, N)andI(r, N)then r  N.
                                                      In this example and elsewhere if the set of antecedents of a
  Excluding infinite nodes, an applicative digraph is a tree rule is a singleton set we shall often omit its set braces.
in which some non-sibling nodes which are the same dis- We say K(N)isakernel of B(N)iff
tance from the root maybe coalesced. We shall therefore (i) K(N)  B(N), and
use tree nomenclature to describe parts of these digraphs. (ii) Cn(K(N)) = B(N), and
The node M is called a parent of the node N,andN is called (iii) if S  K(N)andS  K(N)thenCn(S)  B(N).
a child of M, iff there is an arc from M to N. A node which When drawing applicative digraphs for given examples it is
has no children is called a leaf. A path starting at the root is useful to write K(N) underneath each node N.
called a branch.                                        In the following example, rather than drawing an applica-
  Every finite non-empty node has at least one parent, but tive digraph with kernels, which takes a lot of space, we
infinite nodes have no parents and no children.       shall list its arcs using the following linear notation. The arc
                                                      labelled r from node N with kernel K(N) to node N
{r}
  Definition 3.12 (App(I,  )). For each I in
                                                      with kernel K(N
{r}) is denoted by
{0, Pr, Wn, Ds}, the I-applicative digraph, App(I,  ), of a
                                                                [N, K(N)]--r-->[N
{r}, K(N
{r})].
plausible theory   =(Ax, R, >) is defined as follows.
The empty set, {}, is the root node of App(I,  ).     Example 4.1 (Ambiguity Propagating or Blocking)
For each finite node N of App(I,  ) and each r in R,    This example is designed to show the difference between
  N
{r}isachildofN   iff r  N, El(r, N), and I(r, N). the ambiguity propagating intuition and the ambiguity
If N
{r} is a child of N then the arc from N to N
{r}is blocking intuition. Consider the following five statements,
labelled with r.                                      and determine whether e is likely or not. Each defeasible
Every finite node of App(I,  ) and every arc in App(I,  ) rule is followed by its symbolic form in brackets.
comes from the above construction.                    (1) a, b,andc are facts.
Suppose N0 ={} and (N0, r1, N1, r2, N2, ...) is an infinite (2) If a then usually e.[a  e]
path in App(I,  )and N = »{Ni : i  ގ}. Then N is a node (3) If b then usually d.[b  d]
in App(I,  )iffFull(I, N).                            (4) If c then usually not d.[c ¬d]
                                                      (5) If d then usually not e.[d ¬e]
  The purpose of an applicative digraph is to construct all
                                                        A  plausible theory describing this situation is   =
its desirable leaves. It is the belief set of the defeasible rules
                                                      (Ax, R,>) where  Ax ={a,  b, c}, R ={a   e, b  d,
in a desirable leaf that we want. There are now two choices.
                                                      c ¬d,  d ¬e}, and > is empty. For easy reference, let
The credulous position is to regard each such belief set as r be a  e, r be b  d, r be c ¬d,andr    be
entailed by  . The sceptical position is to regard only the 1       2             3                  4
                                                      d ¬e.
intersection of all such belief sets as entailed by  .
                                                        Intuitively, given Ax, r2 is evidence for d and r3 is equal
  Definition 3.13 (Sem(I,  )).                        evidence for ¬d.Sod  and ¬d are ambiguous, and hence
For each I in {0, Pr, Wn, Ds}, the I-semantics of  ,  neither should follow from  . r1 is evidence for e.The
Sem(I,  ), is defined by                              only evidence against e is r4, but r4 is weakened by the am-
Sem(I,  )=…{B(Nd):N  is a leaf of App(I,  )andDs(N)}. biguity of d. If you think that it is too risky to allow e to
                                                      follow from   then e will be ambiguous and so the ambigu-
3.2 Principles for Priorities on Rules                ity of d has propagated along r4 to e. On the other hand if
Brewka and Eiter [1999] present two principles which they you think that r4 has been sufficiently weakened to allow e
                                                                     
said should be satisfied by any system of prioritised defea- to follow from then e will not be ambiguous and so the
sible rules. Delgrande et al [2004] show that descriptive ambiguity of d has been blocked from propagating along r4.
priorities do not satisfy the second principle, but they agree Both ambiguity blocking and ambiguity propagating intui-
that the first principle is widely accepted. We shall re-cast tions are common, and so a semantics should allow for both.
                                                                                     
the first principle so that it is simpler and more general. A linear representation of App(0, ), with kernels, is:
                                                      [{}, {a,b,c}]--r1-->[{r1}, {a,b,c,e}]
  Principle 1.                                            [{r1}, {a,b,c,e}]--r2-->[{r1,r2}, {a,b,c,d,e}]
Let r1 and r2 be two rules and suppose N is a set of rules. If [{r }, {a,b,c,e}]--r -->[{r ,r }, {a,b,c,¬d,e}]
                        
                                    1            3     1 3
r1 is preferred over r2 then N {r2} should not be preferred [{}, {a,b,c}]--r -->[{r }, {a,b,c,d}]
     
                                                             2     2
over N {r1}.                                              [{r2}, {a,b,c,d}]--r1-->[{r1,r2}, {a,b,c,d,e}]
                                                          [{r2}, {a,b,c,d}]--r4-->[{r2,r4}, {a,b,c,d,¬e}]
  It can be shown that if N
{r1} is a node in an applicative
digraph then not Ds(N
{r2}). So the above definition of


                                                IJCAI-07
                                                   259[{}, {a,b,c}]--r3-->[{r3}, {a,b,c,¬d}]                Let  =(Ax, D) be a default theory, and  ()=(Ax, R,>).
    [{r3}, {a,b,c,¬d}]--r1-->[{r1,r3}, {a,b,c,¬d,e}]  A node, N,ofApp(0,  ()) is a Reiter-leaf of App(0,  ())
  So Sem(0,  )                                        iff N is Reiter-full.
 …                           
=  {B(Nd):N is a leaf of App(0, )andDs(N)}                                                          
= Cn({a,b,c,¬d,e})  Cn({a,b,c,e,d})  Cn({a,b,c,d,¬e}) It can be shown that every Reiter-leaf of App(0, ( )) is
                                                      indeed a leaf of App(0,  ()). The relationship between the
= Cn({a,b,c,de}).
                                                      Reiter-extensions of  and the Reiter-leaves of App(0,  ())
This agrees with the ambiguity propagating intuition.
                                                      is given in the following theorem.
  A linear representation of App(Wn,  ), with kernels, is:
[{}, {a,b,c}]--r1-->[{r1}, {a,b,c,e}]                 Theorem 1
  So Sem(Wn,  )                                         Let  =(Ax, D) be a default theory and Ax be satisfiable.
= …{B(Nd):N is a leaf of App(Wn,  )andDs(N)}          Then E is an Reiter-extension of  iff there is a Reiter-leaf,
= Cn({a,b,c,e}).                                      N,ofApp(0,  ()) such that E = B(N).
This agrees with the ambiguity blocking intuition.
EndExample4.1                                         5.2  Lukaszewicz’s modified extensions
                                                      Pages 202 to 225 of [Lukaszewicz 1990] define and develop
5  Default Logic                                      a default logic which has a modified definition of extension,
Since plausible theories encompass Default Logic, it is in- called an m-extension. After a double fixed-point definition
teresting to see how applicative digraphs relate to various (page 204) of an m-extension, Lukaszewicz characterises m-
default logics. We shall consider Reiter’s [1980] Default extensions as (essentially) leaves of a digraph (page 218).

Logic, and Lukaszewicz’s [1990] modified Default Logic. Definition 5.4 (1, 2, m-extension).
  (Ax, D) is a default theory iff Ax is a set of sentences Let  =(Ax, D) be a default theory. If S and U are any sets
   
(Ax  Snt)andD  is a set of defaults. Recall a default, d is a of sentences define 1(S, U)and2(S, U) to be the smallest
triple (p(d):J(d)/c(d)), where p(d)andc(d) are sentences, (under ) sets satisfying ME1, ME2, and ME3.
and J(d) is a non-empty finite set of sentences. Since the ME1) Ax 1(S, U).
first-order language we are working in is countable, Snt is ME2) Cn(1(S, U)) = 1(S, U).
countable. Since J(d) is finite, D is countable.      ME3) If  d  D and p(d) 1(S, U)and
                                                          for all j in U 
 J(d), S
{j, c(d)} is satisfiable
  Definition 5.1 ( ( ), plausible theory generated from ).                           
If  =(Ax, D) is a default theory and Ax is satisfiable then then c(d)  1(S, U)andJ(d)    2(S, U).
                                                     Aset,E, of sentences is an m-extension of  iff there is a set
define ( ) as follows.                                                            
If d =(p(d):J(d)/c(d)) then (d)={p(d)}:J(d)  c(d).  F such that E = 1(E, F)andF =  2(E, F).
Define  ()=(Ax, R,>),where                             The relationship between the m-extensions of  and the
R ={(d):d  D}, and > is empty.                      leaves of App(0,  ()) is given in the following theorem.
       
  If   ( )=(Ax, R,>)  then  R = Rd and Rw is empty.   Theorem 2
Since > is empty every node of App(0,  ()) is desirable. Let  =(Ax, D) be a default theory and Ax be satisfiable.
                                                      Then E  is an m-extension of  iff there is a leaf, N,of
5.1 Reiter’s extensions                               App(0,  ()) such that E = B(N).
Reiter's entailment semantics for a default theory is ex-
pressed via extensions which are usually defined as fixed 6 Fixed Points
points of the following function .
                                                      We analyse the function (.) of Section 5.1 so that we may
  Definition 5.2 (, Reiter-extension).               get a similar function for plausible theories.
Let  =(Ax, D) be a default theory. If F is a set of sen- (F) cannot be constructed from F. So Reiter [1980,
tences define (F) to be the smallest (under )setsatisfy- Theorem 2.1] defined the constructive function (., .) as
ing E1, E2, and E3.                                   follows. Suppose F and G are any sets of sentences. Define
E1) Ax (F).                                         D(G, F)=
E2) Cn((F)) = (F).                                      {d  D : p(d)  Cn(G), & for all j in J(d), ¬j  F}.
E3) If d  D and p(d) (F)andforallj in J(d), ¬j  F Define (F, i)asfollows.
    then c(d) (F).                                                      (F,0)=Ax.
Aset,E,ofsentencesisaReiter-extension of  iff               (F, i+1) = Cn[(F, i)] 
 c[D((F, i), F)].
(E)=E.                                               Then (F)=»{(F,   i):i  ގ}.
Not every leaf of App(0,  ()) corresponds to a Reiter- To find extensions we still have to guess F andthenusing
                                                      (F, i)checkif (F)=F. So guidance in guessing F and a
extension. We now characterise those that do.
                                                      simpler constructive function would be a help in finding
  Definition 5.3 (Reiter-full, Reiter-leaf).          extensions. An equivalent version of (., .) is '(., .), de-
If N is a set of rules then N is Reiter-full iff for all r in R, fined as follows.
  if Ap(r, N)andforallg in G(r){g}
B(N)issatisfiable                    '(F,0)=Cn(Ax).
    then r  N.                                                '(F, i+1) = Cn(Ax 
 c[D('(F, i), F)]).


                                                IJCAI-07
                                                   260