                      Propositional Abduction is Almost Always Hard

                      Gustav Nordh∗                               Bruno Zanuttini
         Dept. of Computer & Information Science             GREYC, UMR CNRS 6072
                  Link¨opings Universitet             Universit´e de Caen, Bd. du Mar´echal Juin
               S-581 83 Link¨oping, Sweden                  F-14 032 Caen Cedex, France
                     gusno@ida.liu.se                          zanutti@info.unicaen.fr

                    Abstract                          explanation for M, that is, a set E ⊆ H such that T ∪ E is
                                                      consistent and logically entails M. This framework is more
    Abduction is a fundamental form of nonmonotonic   general than most frameworks studied in the literature; an ex-
    reasoning that aims at ﬁnding explanations for ob- ception is the deﬁnition by Marquis [Marquis, 2000], which
    served manifestations. Applications of this pro-  allows the manifestation to be encoded by any propositional
    cess range from car conﬁguration to medical diag- formula.
    nosis. We study here its computational complex-
    ity in the case where the application domain is de- Example 1 Consider the following example from the do-
    scribed by a propositional theory built upon a ﬁxed main of motor vehicles, inspired by [Console et al., 1991].
    constraint language and the hypotheses and man-    T    =   (¬rich mixture∨¬lean mixture)∧
    ifestations are described by sets of literals. We           (rich mixture→ ¬low fuel consumption)∧
    show that depending on the language the problem is          (lean mixture→overheating)∧
    either polynomial-time solvable, NP-complete, or            (low water→overheating),
     P
    Σ2 -complete. In particular, we show that under the H   =   {rich mixture, lean mixture, low water},
    assumption P6=NP, only languages that are afﬁne    M    =   {¬low fuel consumption, overheating}.
    of width 2 have a polynomial algorithm, and we    Then E  = {rich mixture, low water} is an explanation of
    exhibit very weak conditions for NP-hardness.     M, while, e.g., {lean mixture,low water} is not because it
                                                      does not explain low fuel consumption, and {rich mixture,
                                                      lean mixture} is not because it is inconsistent with T .
1  Introduction
                                                        Formalizations of abduction also differ in the literature
In this paper we investigate the computational complexity
                                                      in the notions of preferred explanations: In this setting, the
of abduction, a method of reasoning extensively studied by
                                                      aim is to compute an explanation that is minimal among all
Peirce [1955]. Abductive reasoning is used to search for ex-
                                                      explanations according to some criteria (e.g., inclusion or
planations of observed manifestations. The importance of
                                                      cardinality). A good overview is given by Eiter and Gott-
this problem to Artiﬁcial Intelligence was ﬁrst emphasized
                                                      lob [1995]. However we are not concerned here with these
by Morgan [1971] and Pople [1973].
                                                      different notions; we indeed focus on the decision problem
  The abductive process has demonstrated its practical im-
                                                      asking whether there exists an explanation at all for a given
portance in many domains. In particular, it has been used
                                                      instance. This problem is from now on denoted ABDUCTION.
to formalize processes in medical diagnosis [Bylander et al.,
1991], text interpretation [Hobbs et al., 1993], system diag- This problem is well studied from the computational com-
                                                      plexity perspective [Eshghi, 1993; Selman and Levesque,
nosis [Stumptner and Wotawa, 2001] and conﬁguration prob-
                                                      1990; Eiter and Gottlob, 1995; del Val, 2000b; 2000a;
lems [Amilhastre et al., 2002].
                                                      Zanuttini, 2003], although with different formalizations of
  In this paper we are interested in propositional logic-based
                                                      the problem, as mentioned above. It has been proved that it
abduction, i.e., the background knowledge is represented by a
                                                      is P-complete in the general case [Eiter and Gottlob, 1995],
propositional theory. Even in this framework several formal- Σ2
                                                      while propositional deduction is known to be “only” coNP-
izations of the problem have been studied in the literature,
                                                      complete [Cook, 1971]. This negative result raises the prob-
depending on the syntactic restrictions imposed to the man-
                                                      lem of identifying restricted cases in which ABDUCTION has
ifestations and on the hypotheses over which explanations
                                                      computational complexity lower than the general case.
must be formed. We use the following formalization: Given
a propositional theory T formalizing a particular application The most natural way to study such restrictions is to study
domain, a set M of literals describing a set of manifestations, restrictions on the theories representing knowledge bases.
and a set H of literals containing possible hypotheses, ﬁnd an This is also the approach followed in most of the previous
                                                      research in the area. For example, it is known that when the
  ∗Supported by the National Graduate School in Computer Sci- knowledge base T is a conjunction of Horn clauses, then AB-
ence (CUGS), Sweden.                                  DUCTION  is NP-complete [Selman and Levesque, 1990].  The ultimate goal of this line of research is to determine the F (x) and T (x) respectively. Constraint languages contain-
complexity of every restricted special case of the problem. ing F and T will be of particular importance to us. Given
The ﬁrst result of this type was proved by Schaefer [1978], a constraint language Γ, the idempotent constraint language
who proved that the satisﬁability problem of conjunctions of corresponding to Γ is Γ ∪ {F, T } which is denoted by Γid.
Boolean constraints over a ﬁxed language is either in P or NP- Given a theory T , V ars(T ) denotes the set of all variables
complete, depending on the language. Recall the result due to that occurs in T . Given a set of variables V , Lits(V ) denotes
Ladner [1975] stating that if P 6= NP, then there exist decision the set of constraints Sx∈V {F (x) ∪ T (x)} or, equivalently,
problems in NP that are neither in P nor NP-complete. Hence the set of all literals formed upon the variables in V . The
the existence of dichotomy theorems like Schaefer’s cannot opposite of a literal ℓ is written ℓ. Given a set of literals L,
be taken for granted. Creignou et al.’s book [2001] surveys their conjunction is denoted by V L.
such results.                                           The ABDUCTION  problem restricted to the ﬁnite constraint
  In this paper we completely classify the complexity of AB- language Γ is denoted by ABDUCTION(Γ) and is deﬁned as
DUCTION in Schaefer’s framework and exhibit a trichotomy. follows; the problem is said to be parameterized by Γ.
More precisely, we prove that ABDUCTION is:
                                                      Problem 2 (ABDUCTION(Γ))  An    instance   P     of
  • In P if the language is afﬁne of width 2,         ABDUCTION(Γ)   consists of a tuple (V, H, M, T ), where:
  • Otherwise, NP-complete if the language is Horn, dual • V is a set of variables,
    Horn, bijunctive or afﬁne,                          • H  ⊆ Lits(V ) is the set of hypotheses,
               P
  • Otherwise, Σ2 -complete.                            • M  ⊆ Lits(V ) is the set of manifestations, and
As far as we know, the (only) polynomial case and the min- • T is a theory over Γ with V ars(T ) = V .
imal NP-hard languages that we exhibit are all new results.
                                                                                                      P
Note that the only property that guarantees a polynomial al- The question is whether there exists an explanation for ,
gorithm is that of being afﬁne of width 2, i.e., the case where i.e., a set E ⊆ H such that T ∧ V E is satisﬁable and T ∧
the theory representing the domain is only a conjunction of V E |= V M.
constants and (in)equalities between two variables. Thus the The size of P = (V, H, M, T ) is the total number of oc-
problem is very hard as soon as sets of literals are allowed currences of variables in it.
as hypotheses and manifestations (instead of atoms or sets of Recall the following standard restrictions on the constraint
atoms as in, e.g., [Zanuttini, 2003]).                languages (see, e.g. [Creignou et al., 2001]).
  We do not consider directly the complexity of the search
                                                      Deﬁnition 3 (restrictions on Γ)
problem consisting of computing an explanation or asserting
there is none. It is however easily seen that this problem is • Γ is Horn if every relation R in Γ is the set of models of
hard as soon as ABDUCTION is; as for languages that are   a CNF formula having at most one unnegated variable
afﬁne of width 2, our proof that ABDUCTION is in P exhibits in each clause,
an efﬁcient algorithm.                                  • Γ is dual Horn if every relation R in Γ is the set of models
                                                          of a CNF formula having at most one negated variable
2  Preliminaries                                          in each clause,
The set of all n-tuples of elements from {0, 1} is denoted by • Γ is bijunctive if every relation R in Γ is the set of models
{0, 1}n. Any subset of {0, 1}n is called an n-ary relation on of a CNF formula having at most two literals in each
{0, 1}. The set of all ﬁnitary relations over {0, 1} is denoted clause,
by BR. A constraint language over {0, 1} is an arbitrary ﬁ- • Γ is afﬁne if every relation R in Γ is the set of models of
nite set Γ ⊆ BR. Constraint languages are the way in which a system of linear equations over GF (2), the ﬁeld with
we impose restrictions on the knowledge bases for the AB- two elements,
DUCTION problem.
  A constraint over the constraint language Γ is an appli- • Γ is afﬁne of width 2 if every relation R in Γ is the set
cation of a relation R in Γ to a tuple of variables, written of models of a system of linear equations over GF (2) in
                                                          which each equation has at most 2 variables.
R(x1, . . . , xn) (possibly with repeated variables). An assign-
ment m to the variables satisﬁes the constraint R(x1, . . . , xn) We emphasize that Γ is assumed to be ﬁnite in the def-
if (m(x1), . . . , m(xn)) is a tuple in R. Such a satisfying as- inition of ABDUCTION(Γ). Moreover, it parameterizes the
signment m is called a model of R(x1, . . . , xn). A theory T problem, and is not part of its input. Thus we can assume
over Γ is a conjunction of constraints over Γ; a model m of any convenient presentation of the relations in Γ is stored in
T is an assignment that satisﬁes all its constraints simultane- a catalog; thus we will assume, e.g., that if Γ is Horn then a
ously, denoted m |= T . If there is such a model, T is said to theory T over Γ is given as a CNF formula with at most one
be satisﬁable. Finally, a theory T entails a theory T ′, written unnegated variable per clause.
T |= T ′, if every model of T is a model of T ′.        We now recall Schaefer’s result, which will be of great im-
  The unary relations F = {(0)} and T = {(1)}, which  portance throughout the paper. Call SAT(Γ) the problem of
force the value of a variable to 0 and 1 respectively, have deciding whether a given theory over Γ is satisﬁable. Schae-
a special role for the ABDUCTION problem. We will often fer completely classiﬁed the complexity of SAT(Γ); we only
use the shorthand notation ¬x and x to denote the constraints report the result for idempotent constraint languages.Theorem 4 ([Schaefer, 1978]) SAT(Γid) is in P if Γ is Horn, unsatisﬁable for every ℓ ∈ M, the following result is obvious.
dual Horn, bijunctive or afﬁne. Otherwise it is NP-complete.
                                                      Lemma 6   If SAT(Γid) is in P, then ABDUCTION(Γ) is in NP.
  Finally, we assume that the reader is familiar with the basic We ﬁrst establish NP-completeness for particular lan-
notions of complexity theory, but we brieﬂy recall the follow- guages. In Section 5 we will establish more general results.
ing. P is the class of decision problems solvable in determin- Let R¬x∨y = {(1, 1), (0, 1), (0, 0)}, i.e., the set of models
istic polynomial time. NP is the class of decision problems of ¬x ∨ y. Observe that R¬x∨y is both Horn and dual Horn.
                                         P      NP
solvable in nondeterministic polynomial time. Σ2 = NP
                                                      Proposition 7 ABDUCTION({R¬  ∨  }) is NP-complete.
is the class solvable in nondeterministic polynomial time with                    x  y
                                                P
access to an NP-oracle. A problem is NP-complete (Σ2 - Proof Membership in NP follows from Theorem  4 and
                                P
complete) if every problem in NP (Σ2 ) is polynomial-time Lemma 6. As regards hardness, we give a reduction from the
                                                 P
reducible to it. Throughout the paper we assume P6=NP6=Σ2 . NP-complete problem MONOTONE-SAT [Garey and John-
                                                      son, 1979], i.e., the satisﬁability problem for CNF formu-
3  Polynomial case                                    las where each clause contains either only positive literals
                                                                                       k         ℓ
The following proposition gives the only (maximal) polyno- or only negative literals. Let ψ = Vi=1 Ni ∧ Vi=1 Pi be
mial case of ABDUCTION(Γ). Note that, as mentioned in the such a formula, where each Ni is a negative clause, written
                                                              νi    j
introduction, its proof gives a polynomial algorithm that com- Ni = Wj=1 ¬xi , and every Pi is a positive clause written
putes an explanation if there exists one.             P  = Wπi  yj . We build the instance P = (V, H, M, T ) of
  Throughout the proof we write (ℓ = a) (a ∈ {0, 1}) for the i j=1 i
                                                      ABDUCTION(R¬    ∨ ) where:
linear equation (x = a) if ℓ = x, and for the linear equation        x y
                                     ′
x = a ⊕ 1 if ℓ = ¬x. The shorthand (ℓ = ℓ ) is used in the • V = {γi | i = 1, . . . , k} ∪ {δi | i = 1, . . . , ℓ} ∪
                                 ′
same manner and is equivalent to (ℓ ⊕ ℓ = 0).             V ars(ψ); ¬γi will intuitively represent satisfaction of
Proposition 5 If Γ is afﬁne of width 2, then ABDUCTION(Γ) clause Ni and δi, that of clause Pi
is polynomial.                                                  k    νi   j         ℓ    πi     j
                                                        • T =  Vi=1 Vj=1(xi ∨¬γi)∧Vi=1  Vj=1(¬yi ∨δi); this
Proof   Let P    =   (V, H, M, T ) be an instance of                              j            j
                                          ′               encodes the implications ¬xi → ¬γi and yi → δi, i.e.,
ABDUCTION(Γ), where Γ is afﬁne of width 2. If M is the set                                              j
                                                          the fact that Ni (Pi) is satisﬁed if at least one of the ¬xi
of all manifestations m such that T 6|= m, then obviously the j
                                         ′
explanations of P are exactly those of (V, H, M , T ). Since (yi ), j ∈ {1, . . . , νi} (j ∈ {1, . . . , πi}) is
T |= m can be decided efﬁciently with Gaussian elimination • H = Lits(V ars(ϕ))
                          ′
on T ∧ (m = 0), we assume M = M.                                 k         ℓ
  For every manifestation m ∈ M write Em for the set of • M  = Vi=1 ¬γi ∧ Vi=1 δi.
literals {h ∈ H | T |= (h = m)}; once again every Em can Obviously enough, the theory T is over the language
be computed efﬁciently with Gaussian elimination on T ∧ {R¬x∨y}. Now it is easily seen that if ψ has at least one
(h ⊕ m =  1) for every h ∈ H. We show that P has an   model, say m, then E = {ℓ | m |= ℓ} is an explanation for
explanation if and only if T ∧ Vm∈M V Em is satisﬁable and P, and that if P has an explanation E, then any assignment
no Em is empty. Since the satisﬁability of T ∧ Vm∈M V Em m to V ars(ψ) with ∀ℓ ∈ E, m |= ℓ is a model of ψ. 2
can be decided efﬁciently with again Gaussian elimination
(on T ∧V     V     (h = 1)), this will conclude the proof. Similarly, we now prove that ABDUCTION(Γ) is NP-
        m∈M   h∈Em                                    complete if   is the singleton language containing only
  Assume ﬁrst P has an explanation E. Then T ∧ V M is            Γ
                                                      Rx∨y =  {(1, 1), (1, 0), (0, 1)}.
consistent; since for every m ∈ M and h ∈ Em we have
T |= (h = m), we also have T ∧ V M |= T ∧ Vm∈M V Em,  Proposition 8 ABDUCTION({Rx∨y})  is NP-complete.
and thus T ∧ Vm∈M V Em  is satisﬁable. Now we also have
                                                      Proof  Since R ∨  is dual Horn, membership in NP fol-
∀m ∈ M, T |= (V E →  m). Since T is afﬁne of width 2 it is          x y
bijunctive, thus every clause entailed by T can be minimized lows from Theorem 4 and Lemma 6. As for hardness, we
                                                      give a reduction from MONOTONE-SAT  (see the proof of
into a bijunctive one; since T ∧V E is satisﬁable and T 6|= m,
                                                      Proposition 7), where positive clauses in an instance of this
the only possibility is a minimal clause of the form h → m
                                                      problem are restricted to contain at most two literals. Thus
with h ∈ E. But since T is afﬁne this implies that m → h
                                                      an instance of this problem is a formula of the form ψ =
also is an implicate of it, and ﬁnally we have T |= (h ⊕ m =
                                                        k  N      ℓ  y1   y2 , where the yj ’s are variables and
0), which shows that Em is nonempty. For more details we Vi=1 i ∧ Vi=1( i ∨ i )         i
                                                                                             νi    j
refer the reader to [Zanuttini and H´ebrard, 2002]. Conversely, every Ni is a negative clause written Ni = Wj=1 ¬xi . The
assume T ∧ Vm∈M  V Em is satisﬁable and no Em is empty. NP-completeness of this restricted problem follows directly
Then since (h ⊕ m = 0) |= (h → m) it is easily seen that from Schaefer’s result [1978].
                             P                   2
Vm∈M  V Em  is an explanation for .                     Given   an  instance ψ   of   MONOTONE-SAT     as
                                                      above we build the instance P    =  (V, H, M, T ) of
4  NP-complete cases                                  ABDUCTION({Rx∨y}) where:

We now exhibit the NP-complete cases of ABDUCTION(Γ).   • V  = {γi | i = 1, . . . , k} ∪ V ars(ψ); γi will intuitively
Since T ∧ V E |= V M holds if and only if T ∧ V E ∧ ℓ is  represent satisfaction of clause Ni           k    νi   j          ℓ   1    2                               ′
  • T  = V  =1 V =1(xi ∨ γi) ∧ V =1(yi ∨ yi ); clauses m(x) = 1 and thus m (x) ≤ m(x) again. Finally, we have
           i    j               i                           ′
      j                            j                  ∃qi, m (qi) = 0 < 1 = m(qi), which contradicts the mini-
    (xi ∨ γi) encode the implications ¬xi → γi
                                                      mality of m. Thus ϕ ∧ V E |= (q1 ∧ . . . ∧ qn) and E is an
  • H =  Lits(V ars(ϕ))                               explanation.
           k                                            Conversely, assume that E is an explanation. Then ϕ ∧
  • M  = V =1 γi.
           i                                          V E  is satisﬁable; write m for one of its minimal models.
We show that ψ has a model if and only if P has an ex-
                                                      By assumption the formula ϕ ∧ V E ∧ (¬q1 ∨ . . . ∨ ¬qn) is
planation. Assume ﬁrst that ψ has a model m; then it is
                                                      unsatisﬁable, thus m 6|= (¬q1 ∨. . .∨¬qk). We also have m |=
easily seen that E = {ℓ | m |= ℓ} is an explanation for ϕ by assumption. Finally, assume for sake of contradiction
P               P
  . Now assume      has an explanation E. Then from   that m is not a minimal model of ϕ, and let m′ be such that
∀i =  1, . . . , k, T ∧ V E |= γi it follows that for every m′ |= ϕ, m′ ≤ m and m′ 6= m. Then since E is negative
                                  j                                                         ′
i = 1, . . . , k E contains at least one ¬xi , and thus any as- (because H is) and m |= V E we have m |= V E, thus
signment satisfying E satisﬁes every negative clause of ψ; on m′ |= ϕ∧V E, which contradicts the minimality of m among
the other hand, since T ∧ V E is satisﬁable there is a model the models of ϕ ∧ V E.                    2
m of T ∧ V E that satisﬁes every positive clause of ψ, and
this m thus satisﬁes ψ.                          2    5   Classiﬁcation
  The following proposition can be shown with the same We ﬁnally put together the results in the previous sections
proof as Proposition 8 with all variables renamed.    for obtaining our complete classiﬁcation. The concept of a
                                                      relational clone is central to our approach.
Proposition 9 Let R¬x∨¬y   =    {(1, 0), (0, 1), (0, 0)}.
ABDUCTION({R¬x∨¬y})   is NP-complete.                 Deﬁnition 12 (relational clone) Let Γ ⊆ BR. The rela-
                                                      tional clone of Γ is written hΓi and is the set of all relations
  We ﬁnally prove that ABDUCTION(Γ) is NP-complete for
                                                      that can be expressed using relations from Γ ∪ {=} (= is
a particular afﬁne language. This will be achieved by re-
                                                      the equality relation on {0, 1}), conjunction, and existential
ducing to it another important problem in nonmonotonic rea-
                                                      quantiﬁcation.
soning, namely the inference problem for propositional cir-
cumscription. A model m =  (m1, . . . , mn) of a formula Intuitively, the constraints over hΓi are those which can be
ϕ is said to be a minimal model of ϕ if there is no model simulated by constraints over Γ.
  ′      ′      ′                       ′
m  =  (m1, . . . , mn) of ϕ such that m 6= m and ∀i =   The following result states that when studying the com-
         ′                                            plexity of ABDUCTION( ) it is enough to consider constraint
1, . . . , n, mi ≤ mi.                                                    Γ
  Durand and Hermann proved that the inference problem languages that are relational clones.
for propositional circumscription of afﬁne formulas is coNP- Lemma 13 Let Γ be a ﬁnite constraint language and Γ′ ⊆
                                                                                   ′
complete. In the process, they proved the following theorem. hΓi ﬁnite. Then ABDUCTION(Γ ) is polynomial-time re-
Theorem 10 ([Durand and Hermann, 2003]) The problem   ducible to ABDUCTION(Γ).
of deciding whether there is a minimal model of a given afﬁne Proof Let (V ′, H′, M ′, T ′) be an instance of
                                                                   ′
formula ϕ that does not satisfy a given negative clause (¬q1 ∨ ABDUCTION(Γ ). By the deﬁnition of a relational clone
                                                                                             ′
. . . ∨ ¬qn) (∀i = 1, . . . , n, qi ∈ V ars(ϕ)) is NP-complete. there is a set of variables W disjoint from V and a theory
                                                                                               ′
                                                      T=  over Γ ∪ {=} with V ars(T=) = V= =  V  ∪ W  and
  A careful reading of their proof shows that the theorem       ′
                                                      such that T is logically equivalent to the formula ∃W, T=.
remains true even if the linear equations in the input afﬁne                 ′
formulas are all restricted to contain at most 6 variables. We Since W is disjoint from V there is no variable occurring in
                                                      H′ or M ′ and in W at the same time, and it is then easily
thus deﬁne the language Γ6aff to be the set of all k-ary afﬁne                            ′  ′
                                                      seen that the abduction problem (V=, H , M , T=) has an
relations with k ≤ 6. Obviously, Γ6aff is ﬁnite, which is nec-
                                                      explanation if and only if (V ′, H′, M ′, T ′) has one. Now for
essary for problem ABDUCTION(Γ6aff ) to be well-deﬁned.
                                                      every constraint (xi = xj ) (i < j) it is enough to replace xj
                                                                                  ′      ′
Proposition 11 ABDUCTION(Γ6aff ) is NP-complete.      with xi everywhere in V=, T=, M and H and to remove the
Proof  Membership in NP follows from Theorem 4 and    constraint from T= for obtaining a still equivalent instance
                                                                                                       2
Lemma 6.    As for hardness, let ϕ be a formula and   (V, H, M, T ) of ABDUCTION(Γ), which concludes.
q1, . . . , qn ∈ V ars(ϕ). We show that the clause (¬q1 ∨ . . . ∨ We can reduce even further the set of constraints languages
¬qn) is false in some minimal model of ϕ if and only if the to be considered, namely to idempotent ones.
abduction problem with T = ϕ, M  = {q1, . . . , q }, and
                                            n         Lemma 14   Let Γ   be  a  ﬁnite constraint language.
H = {¬x  | x ∈ V ars(ϕ)\{q1, . . . , qn}} has an explanation,      id
which will conclude by Theorem 10 and the above remark. ABDUCTION(Γ  )  is  polynomial time  reducible to
                                                      ABDUCTION(Γ).
  Assume ﬁrst that (¬q1 ∨ . . . ∨ ¬qn) is false in a minimal
model m of ϕ. Deﬁne E to be {¬xi | m |= ¬xi}. Since m |= Proof Let P   =   (V, H, M, T ) be an instance of
                                                                                                    ′
ϕ by assumption and m |= V E by construction, ϕ ∧ V E is ABDUCTION(Γid).   We  build an  instance P    =
                                                           ′   ′  ′
satisﬁable. Now assume for sake of contradiction that there (V, H , M , T ) of ABDUCTION(Γ) by removing every con-
    ′
is m satisfying ϕ ∧ V E ∧ (¬q1 ∨ . . . ∨ ¬qn). Then since straint F (x) or T (x) from T and adding it to H and M. It
m′ |= V E and E is negative we get ∀x ∈ E, m′(x) ≤ m(x); is then easy to see that (V, H′, M ′, T ′) has an explanation if
now for x ∈ V ars(ϕ) \ V ars(E) we have by assumption and only if (V, H, M, T ) has one.               2                        BR                            Proposition 15 If Γ is not Horn, not dual Horn, not afﬁne
                                                                                            P
                                                      and not bijunctive then ABDUCTION(Γ) is Σ2 -complete.
                                                      Proof It is well-known that for any CNF formula ψ there is a
              IE2       IL2       IV2                 set of variables W disjoint from V ars(ψ) and a CNF formula
                                                      ψ′ over V ars(ψ)∪W with at most 3 variables per clause such
                                                      that the formulas ψ and ∃W ψ′ are logically equivalent. That
                                                      fact together with a proof similar to that of Lemma 13 show

          IS10          ID2          IS00             that the abduction problem for general CNF theories reduces
                                                      to ABDUCTION(Γ3), where Γ3 is the (ﬁnite) set of all ternary
IS12                                           IS02   relations. Since Γ3 is not Horn, not dual Horn, not afﬁne and
                                                                             id
                                                      not bijunctive, we have hΓ3 i = BR, and Lemma 13 and

           3                           3              Lemma 14 concludes.                              2
          IS10          ID1          IS00

  3                                             3       We are ﬁnally able to completely classify the complexity
IS12                                           IS02
           2                           2              of ABDUCTION(Γ).
          IS10                       IS00
                                                      Theorem 16 (classiﬁcation) Let Γ be a constraint language.
IS2                                            IS2
  12                                            02    ABDUCTION(Γ)   is:
                        IM2                             • In P if Γ is afﬁne of width 2,
                                                        • Otherwise, NP-complete if Γ is Horn, dual Horn, bijunc-
                                                          tive or afﬁne,
                                                                     P
                        IR2                             • Otherwise, Σ2 -complete.
                                                      Proof Proposition 5 shows the result for languages that are
Figure 1: Lattice of all idempotent Boolean relational clones. afﬁne of width 2. Now it can be seen that the relations R¬x∨y,
                                                      Rx∨y and R¬x∨¬y  of Propositions 7, 8 and 9 are in the re-
                                                                           2        2
                                                      lational clones IM2, IS02 and IS12, respectively; this can
  Given these two lemmas, our classiﬁcation of the complex- be veriﬁed by checking that they are invariant under the op-
ity of ABDUCTION(Γ) heavily relies on Post’s remarkable erations deﬁning the corresponding clones (for more details
classiﬁcation of all Boolean relational clones [Post, 1941]. see [B¨ohler et al., 2003; 2004]). Moreover, the language
Post proved in particular that the relational clones form a lat-
                                                      Γ6aff of Proposition 11 is afﬁne, thus it is in IL2. Con-
tice under set inclusion. An excellent introduction to Post’s sequently, Figure 1 shows that the minimal idempotent re-
lattice can be found in the recent survey articles [B¨ohler et
                                                      lational clones that are not afﬁne of width 2, namely IM2,
al., 2003; 2004].                                        2    2
                                                      IS02, IS12 and IL2 are NP-complete. On the other hand,
  Lemmas 13 and 14 say that for any ﬁnite    Γ′  ⊆
                   ′                                  we know from Theorem 4 and Lemma 6 that the relational
  id    BDUCTION
hΓ i, A          (Γ ) is polynomial-time reducible to clones IL2 (afﬁne), ID2 (bijunctive), IE2 (Horn) and IV2
ABDUCTION(Γ). In other words, when studying the com-  (dual Horn) are in NP. Thus ABDUCTION(Γ) is NP-complete
plexity of ABDUCTION(Γ) it is enough to consider constraint   id                2     2
                                                      when hΓ  i contains IM2, IS02, IS12 or IL2 and is con-
languages that are idempotent relational clones. The lattice tained in IL2, ID2, IE2, or IV2. This covers exactly the
of all idempotent Boolean relational clones is given on Fig- languages that are Horn, dual Horn, bijunctive, or afﬁne and
ure 1. Those that are most relevant to our classiﬁcation are that are not afﬁne of width 2.
the following:                                          Finally, Proposition 15 concludes the proof.   2
  • BR, the set of all Boolean relations,
  • IE2, the set of all Horn relations,               6   Discussion and future work
  • IV2, the set of all dual Horn relations,          We have completely classiﬁed the complexity of proposi-
                                                      tional abduction in Schaefer’s framework when manifesta-
  • ID2, the set of all bijunctive relations,
                                                      tions and hypotheses are described by sets of literals. This
  • IL2, the set of all afﬁne relations,              result can prove useful in helping the designers of knowledge
  • ID1, the set of all afﬁne relations of width 2,   based systems to deal with the expressivity/tractability trade-
                                                      off when choosing a language for their system. Our result
  • IM2, the set of all relations that are Horn and dual Horn. indeed completes the picture of the complexity of reason-
Thus, according to Post’s lattice there is only one idempotent ing for propositional constraint languages. In particular, we
relational clone that is not Horn, not dual Horn, not afﬁne, have shown that this problem is very hard, in the sense that
and not bijunctive, namely the relational clone consisting of only languages that are afﬁne of width 2 allow for polyno-
all Boolean relations BR. Hence the following result follows mial abduction. Also note that in many cases NP-hardness
intuitively from the result due to Eiter and Gottlob [1995] remains even when restricting further the problem; e.g., to
                        P
stating that ABDUCTION is Σ2 -complete for the general case H = Lits(V \V ars(M)) (see the proofs of Propositions 7–
of theories given by CNF formulas.                    9).