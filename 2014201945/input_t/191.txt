                           A Resolution Theorem for Algebraic Domains 

                                                    Pascal Hitzler 
                                         Dresden University of Technology 
                                              01062 Dresden, Germany 
                                             phitzler@inf.tu-dresden.de 


                        Abstract                               which states that a clause X is a logical consequence of a the•
                                                               ory T if and only if it is possible to derive a contradiction, i.e. 
     W.C. Rounds and G.-Q. Zhang have recently pro•            the empty clause, via resolution from the theory 
     posed to study a form of resolution on algebraic do•      [Robinson, 1965]. 
     mains [Rounds and Zhang, 2001]. This framework              What we just called resolution theorem is certainly an im•
     allows reasoning with knowledge which is hierar•          mediate consequence of the fact that resolution is sound and 
     chically structured and forms a (suitable) domain,        complete for classical logic. However, it is not obvious how 
     more precisely, a coherent algebraic cpo as studied       it can be transfered to the logic RZ, mainly because it ne•
     in domain theory. In this paper, we give conditions       cessitates negating a clause, and negation is not available in 
     under which a resolution theorem — in a form un•          the logic RZ in explicit form. This observation will lead our 
     derlying resolution-based logic programming sys•          thoughts, and in the end we will develop conditions on the 
     tems — can be obtained. The investigations bear           underlying domain which ensure that a negation is present 
     potential for engineering new knowledge represen•         which allows to prove an analogue of the theorem. 
     tation and reasoning systems on a firm domain-
     theoretic background.                                     2 The Logic RZ 
                                                               We assume that the reader is familiar with basic domain-
1 Introduction                                                 theoretic notions, and we will follow the terminology from 
                                                               [Abramsky and Jung, 1994] and [Rounds and Zhang, 2001]. 
Domain Theory [Abramsky and Jung, 1994] is an abstract         In the following, will always be assumed to be a co•
mathematical theory for programming semantics and has          herent algebraic cpo. We will also call these spaces domains. 
grown into a respected field on the borderline between math•   An element a D is called an atom, or an atomic element, 
ematics and computer science. Studying relationships be•       if whenever x a we have = _L The set of all 
tween domain theory and logic is of acknowledged impor•        atoms of a domain is denoted by A(Z)). 
tance in the field. There has been much work on the use of 
domain logics as logics of types and of program correctness, 
with a focus on functional and imperative languages. How•
ever, there has been only little work relating domain theory to 
logic programming or other AI paradigms, two exceptions be•
ing the application of methods from quantitative domain the•
ory to the semantic analysis of logic programming paradigms 
studied by Hitzler and Seda [Hitzler and Seda, 200x], and 
the work of Rounds and Zhang on the use of domain log•
ics for disjunctive logic programming and default reasoning 
[Rounds and Zhang, 2001]. 
  The latter authors, in [Rounds and Zhang, 2001], intro•
duced a form of clausal logic generalized to coherent alge•
braic domains, motivated by investigating the logical content 
of the Smyth powerdomain construction. In the following, 
we study this clausal logic, henceforth called logic RZ for 
convenience. The occurrence of a proof theory based on a 
generalized resolution rule poses the question whether results   Rounds and Zhang originally set out to characterize logi•
underlying resolution-based logic programming systems can      cally the notion of Smyth powerdomain of coherent algebraic 
be carried over to the logic RZ. One of the most fundamen•     epos. It naturally lead to the clausal logic RZ from Definition 
tal results underlying these systems is the resolution theorem 2.1. 


POSTER PAPERS                                                                                                        1339    We can provide a sound and complete proof theory with         It also turns out that the rules from Theorem 3.3 are sound. 
 simple rules. Consider the following rule, which we call sim-   We investigate next a notion of negation on domains. 
plified hyperresolution. 
                                                               Definition 3.4 An atomic domain is called an atomic do•
                                                               main with negation // there exists an involutive and Scott-
                                                 (shr)         continuous negation function with the properties: 

   Also consider the following rules, which we call the reduc•
 tion rule and the extension rule. 


                                                                 The following result, an analogue to the resolution theo•
                                                               rem mentioned in the introduction, allows one to replace the 
Theorem 2.2 The system consisting of (shr), (ext) and (red) 
                                                               search for derivations by search for contradiction. 
is complete. 

   For derivations with the rules from above, we use the sym•  Theorem 3.6 Let D be an atomic domain with negation. Let 
bol |- as usual.                                               T be a theory1 and X be an atomic clause. Then 
                                                               and only  

3 A Resolution Theorem                                           On atomic domains with negation, we can therefore estab•
We simplify proof search via resolution by requiring stronger  lish the following sound and complete proof principle. 
conditions on the domain. 


                                                               4 Conclusions 
                                                               We have seen that for certain domains logical consequence 
                                                               in the logic RZ can be reduced to search for contradic•
Theorem 3.2 For any clause X we have                           tion, a result which yields a proof mechanism similar to that 
                                                               underlying the resolution principle used in resolution-based 
   In view of Theorem 3.2, it suffices to study for logic programming systems. The result should be understood 
theories T and atomic clauses X. We can actually obtain        as foundational for establishing logic programming systems 
a stronger result, as follows, which provides some kind of     on hierarchical knowledge, built on a firm domain-theoretic 
normal forms of derivations. For a theory T, define            background. Further research is being undertaken to substan•
                                                               tiate this. 

Theorem 3.3 Let D be an atomic domain, T be a theory, X        References 
be a clause and                                                [Abramsky and Jung, 1994] Samson Abramsky and Achim 
                                                                 Jung. Domain theory. In Samson Abramsky, Dov Gabbay, 
                                                                 and Thomas S.E. Maibaum, editors, Handbook of Logic in 
be a derivation. Then there exists a derivation                   Computer Science, volume 3. Clarendon, Oxford, 1994. 
                                                               [Hitzler and Seda, 200x] Pascal Hitzler and Anthony K. 
                                                                 Seda. Generalized metrics and uniquely determined logic 
using only the atomic extension rule                             programs. Theoretical Computer Science. To appear. 
                                                               [Robinson, 1965] J. Allan Robinson. A machine-oriented 
                                                                 logic based on the resolution principle. Journal of the 
                                                                 ACM, 12(1):23-41, 1965. 
and the multiple atomic shift rule (mas), as follows.          [Rounds and Zhang, 2001] William C. Rounds and Guo-
                                                                 Qiang Zhang. Clausal logic and logic programming 
                                                                 in algebraic domains. Information and Computation, 
                                                                  171(2):156-182,2001. 


1340                                                                                                   POSTER PAPERS 