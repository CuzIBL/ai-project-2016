                                    Probabilistic Go Theories
                 Austin Parker, Fusun Yaman∗      , Dana Nau and V.S. Subrahmanian
                                      Dept. of Computer Science,
                               Institute for Advanced Computer Studies,
                                   and Institute for Systems Research
                           University of Maryland, College Park, MD 20742.
                                 { austinjp,fusun,nau,vs}@cs.umd.edu

                    Abstract                          will be going in the future — a small number of law en-
                                                      forcement agencies in the US already use such probabilis-
    There are numerous cases where we need to rea-    tic predictions to track selected criminals (e.g. in the case
    son about vehicles whose intentions and itineraries of a child abduction in the US, an Amber alert is used) and
    are not known in advance to us. For example,      such predictions help determine where best to cut them off.
    Coast Guard agents tracking boats don’t always    These are three applications we know of where predictions
    know where they are headed. Likewise, in drug en- of the form “vehicle v is going to be at location L at time t
    forcement applications, it is not always clear where with probability p” are automatically generated and reasoned
    drug-carrying airplanes (which do often show up   with. There are numerous theoretical models already to pre-
    on radar) are headed, and how legitimate planes   dict where vehicles will be in the future, when they will be
    with an approved ﬂight manifest can avoid them.   there, and with what probability [Chen and Chien., 2001;
    Likewise, trafﬁc planners may want to understand  Tsang et al., 1999; Kato et al., 2004]. This paper does not
    how many vehicles will be on a given road at a    reinvent the wheel by showing how to predict when and where
    given time. Past work on reasoning about vehi-    vehicles will be in the future - this has already been done in
    cles (such as the “logic of motion” by Yaman et.  [Chen and Chien., 2001; Tsang et al., 1999; Kato et al., 2004;
    al. [Yaman et al., 2004]) only deals with vehicles Mittu and Ross, 2003] and a host of other papers. Rather, we
    whose plans are known in advance and don’t cap-   focus on how to reason about such predictions.
    ture such situations. In this paper, we develop a for-
                                                        In this paper, we develop a principled approach to solv-
    mal probabilistic extension of their work and show
                                                      ing such problems by extending “go” theories due to Yaman
    that it captures both vehicles whose itineraries are
                                                      et. al. [Yaman et al., 2004; 2005]. Their framework is suit-
    known, and those whose itineraries are not known.
                                                      able for reasoning about applications where we know the ve-
    We show how to correctly answer certain queries
                                                      hicles’ intended destinations — however, there are many ap-
    against a set of statements about such vehicles.
                                                      plications such as the three mentioned above where this is
    A prototype implementation shows our system to
                                                      not known with certainty. A second drawback of the above
    work efﬁciently in practice.
                                                      framework is that while temporal indeterminacy is allowed
                                                      via intervals, no probability measure is associated with those
1  Introduction                                       intervals. This again is appropriate when we are reasoning
                                                      about plans known to us (e.g. ﬂight plans), but is not appro-
There are many applications where one may wish to reason priate when we are reasoning about a vehicle (e.g. an enemy
                                         [
about a set of moving vehicles. One example is Mittu and vehicle on the battleﬁeld) whose plans are not known to us
         ]
Ross, 2003 who developed (jointly with the US Navy, Lock- with 100% accuracy.
heed Martin, BBN, and other companies) ways to predict
where and when an enemy submarine would be in the fu-   In this paper, we propose “probabilistic” go (pgo theory
                                                                                 [                ]
ture (and with what probability) based on knowledge about for short) theories by building on Yaman et al., 2004 .Apgo
its past movements, terrain conditions, etc. Their predic- theory allows us to reason about motion plans that we know
tions consist of a set of statements of the form “Vehicle v as well as motion plans that we do not know with 100% cer-
will be at location L with some probability in the interval tainty. The next section provides a syntax for pgo theories.
[, u].” Likewise, BAE Systems and the US Army devel- The section after that gives a formal model theoretic seman-
oped a system which makes similar makes similar predic- tics. The following section shows how to check consistency
tive statements about where land vehicles will be in the fu- of pgo theories via linear programming. However, the size
ture. Cell phone companies are (and in some cases already of the linear program in question may be exponential, leading
have) developed methods to predict where cell phone users one to initially suspect (wrongly) that consistency checking
                                                      here is NP-complete. We subsequently determine that this
  ∗Fusun Yaman is currently at the University of Maryland Balti- problem is polynomially solvable (under the assumption that
more County (fusun@cs.umbc.edu).                      we are reasoning only about a ﬁnite future) by constructing

                                                IJCAI-07
                                                   501a polynomially sized set of linear constraints for consistency BAE/US Army application for predicting locations of enemy
checking and to answer certain kinds of queries called “in” vehicles, and the law enforcement application based on pre-
queries such as “is vehicle id within a given region at a given dicting cell phone locations.
time with probability over a threshold?” Such queries are ob-
viously of great utility. The next section describes a prototype 3 Semantics of pgo Theories
implementation, together with experimental results showing
our system to perform well in practice.               We now deﬁne a model theory for pgo theories.
                                                      Deﬁnition 3 (World). A world w is any function from ID×T
2  Syntax of  pgo  Theories                           to L such that
                                                               (    (   )   (   +1))                ∈
We assume the existence of a set ID of vehicle ids. Each reachable id, w id, t ,w id, t holds for all id ID
                                        +             and t ∈ T . W denotes the set of all worlds.
id ∈ ID has an associated maximal velocity vid. We also
assume that time is represented by integers drawn from some Intuitively, w(id, t) tells us where the vehicle id is at time
set T =[0,N]  for some integer N. Likewise, we assume t according to world w.
Space =[0,K]  × [0,K] is the set of all points (x, y) such
that x, y are integers and 0 ≤ x ≤ K, 0 ≤ y ≤ K for some Deﬁnition 4 (Interpretation). An interpretation is a probabil-
                                                     ity distribution I over W, i.e. I assigns values in the [0, 1]
integers K, K . We use ed(p1,p2) to denote the Euclidean                             
                                                      interval to worlds w ∈Wsuch that  w∈W I(w)=1.We
distance between two points. We assume the existence of a I                                           W
set L⊆Space   called “locations.” For instance, consider a use to denote the set of all probability distributions over .
1024 × 1024 region — however, if we are only interested in An interpretation assigns a probability to each possible
reasoning about “on road” vehicles, then the only locations world. We are now ready to deﬁne the concept of satisfac-
we might be interested in would be the locations along the tion of atoms by an interpretation.
roads — in this case, L would consist of points on the roads.
                                                      Deﬁnition 5 (Satisfaction). Suppose I is an interpretation. I
Deﬁnition 1 (Reachability). We assume the existence of a satisﬁes
                                                                          
reachability predicate reachable(id, L1,L2) which is true iff
                                                        1. pgo(id,L,t,p) iff w∈W,w(id,t)=L I(w)=p.
vehicle id can move to location L2 from location L1 in one              
unit of time. The reachability predicate must satisfy the ax- 2. in(id,r,t,p) iff w∈W,w(id,t)∈r I(w) ≥ p.
iom:
                                                                          G                      G
                                          +           I satisﬁes a pgo theory iff it satisﬁes all atoms in .
       reachable(id, L1,L2) ⇒ ed(L1,L2) ≤ v
                                          id            As usual, a pgo theory G is consistent iff there is at least
We extend reachability to include time t>0 as follows: one interpretation that satisﬁes it. An atom a is entailed by G
reachable(id, t, L1,L2) iff either (i) reachable(id, L1,L2) iff every interpretation that satisﬁes G also satisﬁes a.
                                                                                                    id,t
and t =1or (ii) there is an L3 s.t. reachable(id, L3,L2) For a pgo theory G,anid ∈ ID and a t ∈ T , we let G be
and reachable(id, t − 1,L1,L3).                       the set {(li,pi) |∃pgo(id, li,t,p1) ∈G}For instance, if G
                                                                     (   (5 5) 1 8)    (   (5 6) 2 5)
  Intuitively, the reachability predicate encapsulates many contains only pgo id, , , ,. , pgo id, , , ,. , and
                                                      pgo(id, (6, 5), 2,.25), then Gid,1 = {((5, 5),.8)} and Gid,2 =
aspects of vehicle movement that we do not wish to get into {((5 6) 0 5) ((6 5) 0 25)}
in this paper. For example, if a road is a narrow and wind- , , . ,  , , .    .
ing road up a mountainside, the vehicle may not be able to Deﬁnition 6 (Completeness). A pgo theory G is complete for
achieve its maximal speed — in this case, the reachable id at t iff (l,p)∈Gid,t p =1. G is complete iff it is complete
predicate tells us what is achievable and what is not. Like- for all id at all time points t.
wise, reachable also may tell us that certain locations cannot
be reached by a particular vehicle, e.g. a car may not be able Intuitively, a pgo theory is complete at time t for vehicle
to drive from New York to Paris.                      id iff every place that the vehicle can possibly be at at that
                                                      time is explicitly mentioned in Gid,t.
Deﬁnition 2 (Atoms). Suppose id, id1,id2 ∈ ID, L ∈L,
 ∈         ∈ [0 1]
t  T , and p  ,  . Suppose r is a convex region.      4   Checking Consistency of    pgo  Theories
 1. pgo(id,L,t,p) is a probabilistic go atom (hereafter a
    pgo atom). Intuitively, this atoms says that id is at loca- In this section, we start by observing that we can check con-
    tion L at time t with probability p.              sistency of pgo theories by solving a set of linear constraints.
                                                      For each world w, let vw be a variable representing the prob-
 2. in(id,r,t,p) is a probabilistic in atom. Intuitively, this ability that the world w is the actual world.
    atom says that id will be somewhere in region r at time
    t with probability p or more.                     Deﬁnition 7 (LP constraints for a pgo atom). For pgo atom
                                                      a = pgo(id,L,t,p), let LP(a) be the set of equations:
                                                          
  A pgo theory is a ﬁnite set of pgo atoms. Note that in         v  =1
atoms cannot appear within a pgo theory but can be used 1.   w∈W  w    ,
in queries. As mentioned earlier, we know of at least three 2. For all w ∈W, 0 ≤ vw ≤ 1.
                                                          
applications where pgo theories are automatically generated
                                                        3.   w∈W,w(id,t)=L vw = p,
by prediction algorithms: the Lockheed/BBN/US Navy and                                
other application for predicting submarine movements, the If G is a pgo theory, we set LP(G)= a∈G LP(a).

                                                IJCAI-07
                                                   502  The ﬁrst and second constraints force I to be a proper prob- 1. Let PLP(·) be the constraints obtained by replacing
                                                                     
ability distribution. The third forces the sum of the probabil- pθ[id,t,L,L] with vid,t,L,L in items (1)–(3) of Theo-
ities of the worlds in which a given vehicle id is at location rem 1.
  at time to be exactly if there is a go-atom that says this.
L       t           p                                   2. For pgo-atom a =(id,t,L,p), let   PLP(a)   be
The following result give us connections between consistency
                                                                vid,t,L,L = p.
of a pgo theory, and the above set of constraints.          L ∈L
                                                        3. For in-atom a =  in(id,r,t,p), let PLP(a) be
Proposition 1.
                                                                      vid,t,L,L ≥ p.
(i) A pgo theory G is consistent iff LP(G) is solvable.     L∈r   L ∈L                    
                                                                    G PLP(G)=PLP(·)     ∪      PLP(  )
(ii) Supposea = in(id,r,t,p). G  a iff the result of For pgo-theory ,                    a∈G      a .
                        v
minimizing  w∈W,w(id,t)∈r w subject to the constraints  The following important theorem shows that solvability of
LP(G) is greater than or equal to p.                  PLP(G)  determines consistency of G and that entailment of
                                                      in queries can be determined by solving a linear program with
                                                      PLP(G)
  An obvious problem with the above result is that the size   as the set of constraints and an objective function
of the input to the linear program for LP(G) is on the or- based on the query.
der of |L||T |·|ID| ×|G|. This is too large for the above algo- Proposition 2. For pgo theory G
rithms to tractably solve any reasonably sized problem. One 1. PLP(G) has a solution iff G is consistent.
may wonder whether consistency checking for pgo-theories            (       )                        G
is NP-complete. It is not, as we will shortly see in the next 2. In query in id,r,t,p is a logical consequence of iff
                                                                                v               PLP(G)
section.                                                  minimizing  L∈r   L∈L id,t,L,L subject to
                                                          is greater than or equal to p1.
5  Partial Path Probabilities                           3. Checking consistency of a pgo-theory and checking en-
                                                          tailment of ground in queries are solvable in polynomial
LP(G)  associates a variable in the linear program with
                                                          time.
each world. Instead, we might want to associate a variable
          
p[id,t,L,L] denoting the probability that a vehicle with ID 5.1 PLP’s Size
id travels from L to L leaving at time t. We call this a path
                                                      PLP(G)  is signiﬁcantly smaller than that of LP(G)because
probability variable. It is clear that as long as we only look at               2
                                                      it only contains | |·| |·|L| variables and
a bounded time horizon, the number of path probability vari-        ID    T
                                                                              2
ables is polynomial w.r.t. the number of time points, size of |T |·|ID| + |T |·|L| + |T |·|ID|·|L|+ |G|
Space and the number of vehicles. What we will try to do in
                         LP(G)                        equations. The size of this linear program is therefore
this section is to reformulate  in terms of these vari-              2    2     4
ables so that the resulting set of constraints is polynomial in bounded by |ID| ·|T | ·|L| ×|G|. In contrast, LP(G)
the size of the pgo-theory.                           had a size of |L||T |·|ID| ×|G|.
                                                        Furthermore, it turns out that there are alternate ways of ex-
Deﬁnition  8   (Interpretation Compatibility). Given          PLP(G)
p[id,t,L,L] deﬁned for every id,t,L,L and interpre- pressing        which result in more easily solvable linear
tation I,wesayI is compatible with p iff              programs.
                            
                                                     5.2  Variable Pruning
       p[id,t,L,L]=                    I(w)
                                                                                       PLP(G)
                     w(id,t)=L,w(id,t+1)=L           The ﬁrst simpliﬁcation we can make to    or any set of
                                                      linear equations comes when we know vid,t,L,L to be zero. In
Theorem 1. Suppose θ is an assignment to all path probabil- such cases, we can safely eliminate vid,t,L,L from PLP(G).
ity variables. There is an interpretation I compatible with θ
iff p satisﬁes                                        5.3  An Alternative Linear Program:  ALP
                     
                                                     Many  pgo-theories only mention some time points from the
 1. For each t, id, L∈L L∈L pθ[id,t,L,L]=1.
                                                    set of all time points T . This can be leveraged to create a
 2. For each t,id,L,L pθ[id,t,L,L] ≥ 0.               small linear program which does not reference the unmen-
                                      
 3. ¬reachable(id,L,L) →∀t, pθ[id,t,L,L]=0.           tioned time points.
                                                                                              G
 4. For each t, id, L,                              Deﬁnition 10 (Alternate Linear Program). Let be a set of
                                                                                     1     2 ···   n
      L∈L pθ[id, t − 1,L,L]=  L∈L pθ[id,t,L,L].     pgo atoms and id be a vehicle. Let t <t    <t    be
                                                      all the time points such that for every ti there is a pgo atom
  The above theorem provides us the ammunition needed to
                                                      pgo(id, l, ti,p) ∈G. Without loss of generality, we can as-
associate a new set of linear constraints with a pgo-theory                              ALP(G     )
G                                                     sume tn is not the maximum time point.    ,id is the
 . Our variables for this LP will correspond to each path following alternate set of linear equations:
probability: vid,t,L,L .
                                                                    =     (       ) ∈G             ≤
           PLP                  G PLP(G)                1. For each a pgo  id, l, ti,p  such that t1 ti <
Deﬁnition 9 (   ). For pgo theory ,        is the as-     tn, PLP(a) ∈ ALP(G,id).
sociated set of partial path based linear equations. Without
loss of generality we assume the maximum time point T to be P 1If Pt is the maximum time point then we need to minimize
larger than any time point mentioned in G.              L∈r  L∈L vid,t−1,L,L.

                                                IJCAI-07
                                                   503 2. For each a = pgo(id, l, tn,p) ∈G,
           v        =   ∈ ALP(G     )
      L∈L id,tn−1,L ,l p         ,id .

 3. For eacht1 ≤ ti ≤ tn,
                 v       =1∈  ALP(G     )
      L∈L   L∈L  id,ti,L,L           ,id

 4. For each t1 ≤ ti <ti+1 ≤ tn, for each L,L’ such that
                              
    ¬reachable(id, ti+1 − ti,L,L) we have
    v       =0∈  ALP(G     )
     id,ti,L,L           ,id .

 5. For each t1 <ti <tn, for each L we have
           v         −        v         =0∈
      L∈L id,ti−1,L ,L    L∈L id,ti,L,L
    ALP(G,id)
Theorem 2. PLP(G)  is solvable iff ALP(G,id) is solvable
for every id.
  This theorem provides us with added efﬁciency in two Figure 1: Time to check consistency of complete theories
ways. First, it prunes a fair number of variables. Second, with2to5pgo atoms per time point when maximum speed
it divides the linear program into |ID| linear programs, one is 1 and 8.
for each vehicle. When the entire linear program is consid-
                        ( 3)
ered, the running time is O r , where r is the number of 6 Experimental Section
variables. But, if we consider each vehicle individually, the
running time is proportional to |ID|·O((r/|ID|)3), giving a We have implemented a prototype pgo system in MatLab on
speedup of O(|ID|2). We can further exploit this trick of di- a Pentium 4 (3.80GHz) processor running under Windows XP
viding the linear program into smaller sub-problems by con- and with 2GB of memory. Our system implements all algo-
sidering complete points in a pgo theory.             rithms described in this paper for both complete and incom-
                                                      plete theories.
                         G
Theorem 3. For pgo theory  and vehicle id complete for  We ran several experiments to test the performance of these
id at time t, let n be the max time point referenced by the
                                                     algorithms and identify the important factors that affect the
            Gid    {Gid,t |0 ≤    }       Gid
the theory, let 0−t be        t <t   and let t−T be   performance other than the obvious ones such as number of
     
{Gid,t |t ≤ t <T}. Then (i) ALP(G,id) is solvable iff atoms and time points referenced. We performed our exper-
       id                id                                                                         ALP
ALP(G0−t,id)  and ALP(Gt−T  ,id) are solvable. (ii) The iments on theories that refer to a single vehicle using
                id                id
solution to ALP(G0−t,id) and ALP(Gt−T ,id) gives a so- type linear programs.
lution for ALP(G,id).                                   The maximum number of  pgo atoms per time point in a
                                                      complete theory plays an important role in checking consis-
  This theorem is particularly useful for in queries. Since tency. This number gives a maximum number of path prob-
only one time t is ever referenced by a in query, we can sand- abilities for each time point. Another important factor we
wich t between the two nearest complete time, t1 and t2 s.t. considered was the maximum speed of the vehicle because
t1 ≤ t ≤ t2. Then, since we assume in queries to be asked this affects the maximum number of reachable locations and
only of consistent pgo theories, we are only required to solve hence the total number of path probability variables in our ﬁ-
               Gid
for the particular t1−t2 which contains the query. In the nal linear program. To test the effect of these speed and atom
best case, the in query will fall on a complete time/id pair, density, we created random theories in a 50×50 grid. We var-
meaning that to solve the query we must only use the linear ied the maximum number of atoms per time point from 2 to
                  id,t
constraints in ALP(G ,id) (where t is the in query’s time 5, with maximum speeds of 1 and 8. The number of distinct
point and id is the query vehicle).                   time points in the theory varied from 10 to 100. We derived
                                                      the speed values as follows: suppose we use the 50 × 50 grid
5.4  ALP   Size                                       to represent the USA. Then speed of 1 will coincide with that
                                                      of a car (70 mph) while a speed of 8 will coincide with that
Now, instead of solving PLP, a massive linear program, we of a plane (500 mph).
                     ALP(Gid       )
are solving many smaller    t1−t2 ,id .               Consistency check time for complete theories: Figure 1
  For vehicle id in theory G with n mentioned time points of shows the time taken for consistency checking for 8 kinds of
            th
which every c one is complete, and each two consecutive complete theories. The data points represent the average over
                               ALP(Gid       )
time points, t1 and t2, we must solve t1−t2 ,id . This 50 randomly generated theories. As seen in the ﬁgure the ef-
will happen in O(n3) where n is the number of variables. fect of increasing number of pgo atoms per time point has a
The number of variables is bounded by (c +1)·|L|2. Thus greater on impact on performance than increasing maximum
computing consistency of G using ALP will happen in time speed. The reader can see that it only takes a few seconds to
|ID|×n/c  × O(((c +1)·|L|2)3). There is an interesting reason about 100 time points.
phenomenon happening here: the running time of our algo- Consistency check time for incomplete theories: For in-
rithms may decrease as the size of the theory grows – so long complete theories, the size of the grid has a great impact on
as more complete time points are added.               the time required to check consistency. We say a time point

                                                IJCAI-07
                                                   504Figure 2: Time to check consistency of incomplete theories
                                                      Figure 3: Time to answer in-queries w.r.t. complete theories
with 2, 3, and 4 pgo atoms per time point, a maximum speed
                                                      of varying temporal density.
of 1 or 8, and Incmax varying from 1 to 2 (displayed as k in
the graph’s key).
                                                      7   Related Work
t is incomplete iff the sum of the probability ﬁeld in all pgo There are several spatio-temporal logics [Gabelaia et al.,
atoms ends up being less than 1. We investigated how the 2003; Merz et al., 2003; Wolter and Zakharyaschev, 2000;
structure of the theory affects the consistency checking algo- Cohn et al., ] in the literature. These logics extend tempo-
rithm. Let Incmax be the maximal number of incomplete ral logics to handle space. Most of them involve logical lan-
time points followed by a complete time point in a theory. guages similar to LTL. There is also much work on qualitative
For this experiment we created random theories in a 10 by 10 spatio-temporal theories(for a survey see [Anthony G. Cohn,
grid with maximum speed 1, maximum number of pgo atoms 2001]). The closest work to ours is that of [Muller, 1998a;
per complete time point ranging from 2 to 4, Incmax =1or 1998b] which describes a formal theory for reasoning about
Incmax  =2and the number of referenced time points rang- motion in a qualitative frame work. The expressive power
ing from 10 to 100. Furthermore every complete time point of the theory allows for the deﬁnition of complex motion
is followed by Incmax incomplete time points in the theory. classes. The focus of these works is qualitative - in contrast,
So when Incmax  =1and the total number of time points we deal with uncertainty about where vehicles will be in the
in the theory is 50, there are 25 incomplete time points in- future. Our methods are rooted in a mix of probability, geom-
terleaved with 25 complete points. Figure 2 shows the time etry and logic rather than just logic alone.
taken to check consistency for 6 kinds of randomly generated Other related work includes [Shanahan, 1995] which dis-
theories. The data points represent the average of 20 runs cusses the frame problem when constructing a logic-based
— note that the y-axis uses a logarithmic scale. As seen in calculus for reasoning about the movement of objects in a
the ﬁgure, the effect of increasing the number of pgo atoms real-valued co-ordinate system. [Rajagopalan and Kuipers,
per time point has a similar effect on the on the performance. 1994] focuses on relative position and orientation of objects
However, increasing Incmax affects the running time dra- with existing methods for qualitative reasoning in a Newto-
matically.                                            nian framework. The focus of these works is qualitative - in
In-queries. Figure 3 shows the time required to answer “in” contrast our work is rooted in a mix of geometry and logic
queries as we vary the temporal density of a complete theory. rather than logic alone.
Temporal density of a theory is the ratio of time points refer-
enced in the theory and the total number of time points. For 8 Conclusions
these experiments we set the grid size to 25 by 25 and max-
imum time points to 500 and number of pgo atoms per time There are numerous applications where we wish to reason
point to 3. For example when the theory has a temporal den- about moving objects. In some cases, (i) we know the in-
sity of 1, it has a total of 1500 time points. The data points in tended destinations of the moving objects while in others (ii)
the graph are an average of 100 runs. The reader can easily we do not know this for sure. In this paper, we have devel-
see that the time taken drops exponentially with an increase oped the concept of a probabilistic go theory (pgo theory),
in the density. Since a rise in density corresponds to an in- which is capable of handling both cases. This extends the no-
crease in theory size, these results are particularly interesting tion of a go-theory proposed by [Yaman et al., 2004], which
yet consistent with Theorem 3. It shows our algorithms’ run- only handles case (i).
ning time decreases as the number of referenced time points As future work, we intend to examine aggregation tech-
increases. This is sensible: when one is working with prob- niques which would allow the creation of minimally sized
abilistic data, one should sometimes ﬁnd it easier to answer linear programs solving pgo problems. We further intend to
queries as the amount of data increases, because fewer possi- include queries which reference periods of time. Also, work
ble satisfying interpretations for the data need be considered. must be done to expand this system to handle multi-object

                                                IJCAI-07
                                                   505