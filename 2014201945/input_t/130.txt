                      Integrity and Change in Modular Ontologies 

                           Heiner Stuckenschmidt and Michel Klein 
                                  Vrije Universiteit Amsterdam 
                             de Boelelaan 1081a, 1081HV Amsterdam 
                                 {heiner, michel.klein}@cs.vu.nl 


                   Abstract                         for connecting these natural modules is a prerequisite for 
                                                    easy maintenance [Heflin and Hendler, 2000]. 
    The benefits of modular representations arc well 
    known from many areas of computer science. In Large Ontologies: Modularization also helps to manage 
    this paper, we concentrate on the benefits of mod• very large ontologies we find for example in medicine 
    ular ontologies with respect to local containment or biology. Here modularity helps to maintain and reuse 
    of terminological reasoning. We define an archi• parts of the ontology as smaller modules are easier to 
    tecture for modular ontologies that supports local handle than the complete ontology [Rector, 2003]. 
    reasoning by compiling implied subsumption rela• Efficient Reasoning: A specific problem that occurs in the 
    tions. We further address the problem of guaran• case of distributed and large models is the problem of 
    teeing the integrity of a modular ontology in the efficient reasoning. The introduction of modules with 
    presence of local changes. We propose a strategy local semantics and clear interfaces will help to develop 
    for analyzing changes and guiding the process of efficient reasoning methods [Mcllraith and Amir, 2001]. 
    updating compiled information. 
                                                 1.2 Requirements 
                                                 There are a couple of requirements a modular ontology archi•
1 Introduction                                   tecture has to fulfill in order to improve ontology maintenance 
Currently, research in the area of the semantic web is in and reasoning in the way suggested above. The requirements 
a state where ontologies are ready to be applied in real will be the main guidelines for the design of our solution pro•
applications such as semantic web portals, information posed in this work. 
retrieval or information integration. In order to lower the 
                                                 Loose Coupling: In general, we cannot assume that two on•
effort of building ontology-based applications, there is a clear 
                                                    tology modules have anything in common. This refers 
need for a representational and computational infrastructure 
                                                    to the conceptualization as well as the specific logical 
in terms of general purpose tools for building, storing and 
                                                    language used for the interpretation of objects, concepts 
accessing ontologies. A number of such tools have been 
                                                    or relations. 
developed, i.e. ontology editors, reasoning systems and more 
recently storage and query systems.1 Most of these tools, Self-Containment: In order to facilitate the reuse of individ•
however, treat ontologies as monolithic entities and provide ual modules we have to make sure that modules are self-
little support for specifying, storing and accessing ontologies contained. In especially, the result of certain reasoning 
in a modular manner.                                tasks such as subsumption or query answering within a 
                                                    single module should be possible without having to ac•
                                                    cess other modules. 
1.1 Why Modularization ?                         Integrity: Having self-contained ontology modules may 
There are many reasons for thinking about ontology modular• lead to inconsistencies that arise from changes in other 
ization. Our work is mainly driven by three arguments. These ontology modules. We have to provide mechanisms for 
also bias the solution we propose, as it is aimed at improving checking whether relevant knowledge in other systems 
the current situation with respect to the following aspects. has changed and for updating our modules accordingly. 

Distributed Systems: In highly distributed systems such as 1.3 Our Approach 
    the semantic web, modularity naturally exists in terms of 
    physical location. Providing interfaces and mechanisms In the following, we describe our approach to ontology modu•
                                                 larization on an abstract level. We emphasize the main design 
  'An extensive overview is provided in the Onto Web deliv• decisions and motivate them on the basis of the requirements 
erable, available at http: //www.ontoweb.org/download/ defined above. The technical details of the approach will be 
deliverables/D13_vl-0.zip.                       given in the following sections. 


900                                                               ONTOLOGIES AND FOUNDATIONS View-Based Mappings: We adopt the approach of view-    variables in a query may only be instantiated objects in that 
    based information integration. In particular, ontology ontology. 
    modules are connected by conjunctive queries. This way 
    of connecting modules is more expressive than simple 
    one-to-one mappings between concept names but less 
    expressive than the logical language used to describe 
     concepts. We decide to sacrifice a higher expressiveness 
     for the sake of conceptual simplicity and desirable se•
     mantic properties such as independence of the ontology 
     langauge used.                                      The fact that all conjuncts relate to elements of the on•
                                                       tology allows us to determine the answer to ontology-based 
Compilation of Implied Knowledge: In order to make lo•
                                                       queries in terms of instantiations of the query that are logical 
    cal reasoning independent from other modules, we use 
                                                       consequences of the knowledge base. 
    a knowledge compilation approach. The idea is to com•
    pute the result of each mapping query off-line and add 2.2 Internal and External Definitions 
     the result as an axiom to the ontology module using the 
                                                       The notion of module and query given above is a quite stan•
    result. During reasoning, these axioms replace the query 
                                                       dard ones. What makes up a modular ontology now, is the 
    thus enabling local reasoning. 
                                                       possibility to use ontology-based queries in order to define 
Change Detection and Automatic Update: Once a query    concepts in one module in terms of a query over another mod•
    has been compiled, the correctness of reasoning can only ule. For this purpose, we divide the set of concepts in a mod•
    be guaranteed as long as the concept hierarchy of the ule into internally defined concepts C1 and externally defined 
    queried ontology module does not change. In order to concepts CE resulting into the following definition of C: 
    decide whether the compiled axiom is still valid, we pro•
    pose a change detection mechanism that is based on a                                               (1) 
    taxonomy of ontological changes and their impact of the 
                                                         Internally defined concepts are specified by using concept 
    concept hierarchy. 
                                                       expressions in the spirit of description logics [Baader et ai, 
  The rest of the work is organized as follows. In section 2 2003]. We do not require a particular logic to be used. 
we provide a definition of ontology modules based on a min•
                                                       Definition 3 (Internal Concept Definition) An internal 
imal notion of ontologies that fixes important properties we 
                                                       concept definition is an axiom of one of the following forms 
will use later on while leaving as much freedom for specific 
                                                                         where and D is concept 
implementations as possible. Section 3 introduces our ap•
                                                       expression of the form where the terms are 
proach to self-containment in terms of compiled knowledge. 
                                                       either concept names or concept expressions and is an 
The remainder of the paper is devoted to the problem of de•
                                                       n-ary concept building operator 
tecting changes and preserving integrity amongst modules in 
a system.                                                Besides this standard way of defining concepts, we con•
                                                       sider externally defined concepts that are assumed to be 
2 Modular Ontologies                                   equivalent to the result of a query posed to another module 
                                                       in the modular ontology. This way of connecting modules 
Before we start investigating the problem of change and in• is very much in spirit of view-based information integration 
tegrity, we define the notion of modular ontology we will use which is standard technique in the area of database systems 
as a basis for our technical results.                  [Halevy, 2001]. The choice of conjunctive queries for con•
2.1 Modules and Queries                                necting different modules is motivated by the trade-off be•
                                                       tween expressiveness of the mapping and conceptual as well 
A number of languages for encoding ontologies on the Web as computational simplicity. Our approach is more expres•
have been proposed (see [Gomez-Perez and Corcho, 2002] sive than simple one-to-one mappings; having more complex 
for an overview). In order to get a general notion of ontolog• mappings would contradict the principle of loose coupling of 
ical knowledge, we define the general structure of an onto• different modules. 
logical module and its instantiation independent of a concrete 
language.                                              Definition 4 (External Concept Definition) An external 
                                                       concept definition is an axiom of the form: C = M : 
Definition 1 (Ontology Module) A module is a triple M — Where M is a module and is an ontology-based query over 
         where C is set of concept definitions, 11 is a set of the signature of M. 
relation definitions and is a set of object definitions. Fur•
ther, we define the signature of a module to be a        A modular ontology is now simply defined as a set of mod•
triple where CM is the set of all names of             ules that arc connected by external concept definitions. In 
concepts defined in C, TIM the set of all relation names in R particular we require that all external definitions are contained 
and Rthe set of all object names occurring in          in the modular system. 

  Queries over ontological knowledge are defined as con• 2Note that this may include data-type expressions as the type 
junctive queries, where the conjuncts are predicates that cor• itself is can be considered to be a concept, the actual value a member 
respond to concepts and relations of an ontology. Further, of that concept and the comparison operator a special relation. 


ONTOLOGIES AND FOUNDATIONS                                                                            901  Definition 5 (Modular Ontology) A modular ontology    3 Compilation and Local Reasoning 
                    is a set of modules such that for each 
                                                       Using the notion of logical consequence defined above, we 
externally defined concept is also member 
ofM.                                                   now turn our attention to the issue of reasoning in modular 
                                                       ontologies. For the sake of simplicity, we only consider the 
   We will use this notion of a modular ontology in the follow• interaction between two modules in order to clarify the basic 
ing to investigate the problem of integrity of logical reasoning principles. Further, we assume that only one of the two mod•
across modules.                                        ules contains externally defined concepts in terms of queries 
                                                       to the other module. 
2.3 Semantics and Logical Consequence 
We define a model-based semantics for modular ontologies 3.1 Implied Subsumption 
using the notion of a distributed interpretation proposed by As mentioned in the introduction, we are interested in the 
[Borgida and Scrafini, 2002] in the context of distributed de• possibility of performing local reasoning. For the case of 
scription logics:                                      ontological reasoning, we focus on the task of deriving im•
Definition 6 (Distributed Interpretation) A distributed in• plied subsumption relations between concepts within a single 
terpretation of modular ontology                       module. For the case of internally defined concepts this can 
consists of interpretations for the individual module M1 be done using well established reasoning methods [Donini et 
over domains such that:                                al., 1996]. Externally defined concepts, however, cause prob•
                                                       lems: being defined in terms of a query to the other module, 
                                                       a local reasoning procedure will often fail to recognize an 
                                                       implied subsumption relation between these concepts. Con•
                                                       sequently, subsumption between externally defined concepts 
                                                       requires reasoning in the external module as the following 
                                                       theorem shows. 
                                                       Theorem 1 (Implied Subsumption) Let E1 and E2 be two 
                                                       concepts in module Mt that are externally defined in module 
                                                          by queries 
  The assumption of disjoint interpretation domains again 
reflects the principle of loose coupling underlying our ap•
proach. Based on the notion of a distributed interpretation we 
can define a model of a modular ontology as an interpretation 
that satisfies the constraints imposed by internal and exter•
nal concept definitions. In contrast to [Borgida and Scrafini, The result presented above implies the necessity to decide 
2002], we do not introduce special operators for defining the subsumption between conjunctive queries in order to identify 
relations between different domains, we rather interpret exter• implied subsumption relations between externally defined 
nal concept definitions as constraints on the relation between concepts. In order to decide subsumption between queries, 
the domains:                                           we translate them into internally defined concepts in the mod•
                                                       ule they refer to. A corresponding sound and complete trans•
Definition 7 (Logical Consequence) A distributed interpre• lation is described in [Horrocks and Tessaris, 2000]. Using 
tation is a model for modular ontology , if for every  the resulting concept definition, to which we refer as query 
module Mt we have for every concept definition C in    concepts, we can decide subsumption between externally de•
M1 where is defined as follows.                        fined concepts by local reasoning in the external ontology. 

                                                       3*2 Compilation and Integrity 
                                                       We can avoid the need to perform reasoning in external mod•
                                                       ules each time we perform reasoning in a local module us•
                                                       ing the idea of knowledge compilation [Cadoli and Donini, 
Here denotes the interpretation of the set of answers to 
                                                       1997]. The idea of compilation is to perform the external 
query An axiom A logically follows from a set of axioms 
                                                       reasoning once and add the derived subsumption relations as 
S if S implies A for every model We denote 
                                                       axioms to the local module. These new axioms can then be 
this fact by S A. 
                                                       used for reasoning instead of the external definitions of con•
  The actual definitions of concepts impose further con• cepts. This set of additional axioms can be computed using 
straints on the interpretation of a modular ontology. For the Algorithm 1. 
case of internally defined concepts, these constraints are pro• If we want to use the compiled axioms instead of external 
vided by the definition of concept building operators of de• definitions, we have to make sure that this will not invalidate 
scription logics. For the case of externally defined concepts, the correctness of reasoning results. We call this situation, 
the situation is more complicated and will be discussed in where the compiled results are correct as integrity. We for•
more details in the next section.                      mally define integrity as follows: 


902                                                                       ONTOLOGIES AND FOUNDATIONS                                                          The same observations can be made for a relation before 
                                                       and after a change, denoted as R and R! respectively. The 
                                                       next question is how these different types of changes influ•
                                                       ences the interpretation of query concepts. We take advantage 
                                                       of the fact that there is a very tight relation between changes 
                                                       in concepts of the external ontology and implied changes to 
                                                       the query concepts using these concepts: 

Definition 8 (Integrity) We consider integrity of two ontol•
ogy modules to be present ifwhere 
Mc is the result of replacing the set of external concept defi•
nitions in M by compile 
  At the time of applying the compilation this is guaranteed 
by theorem 1, however, integrity cannot be guaranteed over 
the complete life-cycle of the modular ontology. The problem 
is, that changes to the external ontology module can invalidate Proof 2 (Sketch) The idea of the proof is the following: 
the compiled subsumption relationships. In this case, we have Queries contain conjuncts of the form Con-
to perform an update of the compiled knowledge.       juncts of the first form are interpreted as It 
                                                       directly follows that changing the interpretation of the con•
4 Change Robustness                                    cept C referred to in a conjunct of this type leads to the same 
                                                       change on the interpretation of the conjunct and because con•
In principle, testing integrity might be very costly as it re•
                                                      junction is interpreted as set intersection the whole query. 
quires reasoning within the external ontology. In order to 
                                                       Conjuncts of the second type are interpreted as 
avoid this, we propose a heuristic change detection procedure 
                                                                     The variable can be further constraint by 
that analyzes changes with respect to their impact on com•
                                                       a conjunct of the first type. Again changes in the interpre•
piled subsumption relations. Work on determining the impact 
                                                       tation of the concept that further restricts y have the same 
of changes on a whole ontology is reported in [Heflin and 
                                                       effect on possible interpretations of and therefore also on 
llcndler, 2000]. As our goal is to determine whether changes 
                                                       the interpretation of conjuncts of the second type. Using the 
in the external ontology invalidates compiled knowledge, we 
                                                       same argument, we see that making R more general/specific 
have to analyze the actual impact of changes on individual 
                                                       (allowing more/less tuples in the relation) makes conjuncts 
concept definitions. We want to classify these changes as 
                                                       of the second form more general/specific. Using these ba•
either harmless or harmful with respect to compiled knowl•
                                                       sic conclusions, we can proof the lemma by induction over 
edge. 
                                                       the lengths of the path in the dependency graph of the query 
4.1 Determining Harmless Changes                       where nodes represent conjuncts and arcs co-occurrence of 
                                                       variables. 
As compiled knowledge reflects subsumption relations 
between query concepts, a harmless change is a set of    We can exploit this relation between the interpretation of 
modifications to an ontology that does not change these concepts and queries in order to identify the effect of changes 
subsumption relations. Finding harmless changes is therefore in the external ontology on the subsumption relations be•
a matter of deciding whether the modifications affect the tween different query concepts. First of all the above re•
subsumption relation between query concepts. We first look sult directly generalizes to multiple changes with the same 
at the effect of a set of modifications on individual concepts: effect, i.e. a query becomes more general(specific) or stays 
                                                       the same if none of the elements in become 
  Assuming that C represents the concept under considera• more specific(gencral). Further, the subsumption relation be•
tion before and the concept after the change there are four tween two query concepts does not change if the more gen-
ways in which the old version C may relate to the new version eral(specific) query becomes even more general(specific) or 
                                                       stay the same. Combining these two observations, we derive 
                                                       the following characterization of harmless change. 
  1. the meaning of concept is not changed: (e.g. 
    because the change was in another part of the ontology, 
    or because it was only syntactical); 
  2. the meaning of a concept is changed in such a way that 
    concept becomes more general: 
  3. the meaning of a concept is changed in such a way that 
    concept becomes more specific: 
  4. the meaning of a concept is changed in such a way that 
    there is no subsumption relationship between C and 


ONTOLOGIES AND FOUNDATIONS                                                                             903                                                        [ Operation                          | Effect 
                                                        Attach a relation to concept C       C: Specialized 
                                                        Complex. Change the superclass of concept C: Specialized 
                                                        C to a concept lower in the hierarchy 
                                                        Complex. Restnct the range of a relation R R: Specialized, 
  The theorem provides us with a correct but incomplete (efleet on all C that have a restriction on R) C: Specialized 
method for deciding whether a change is harmless. This basic Remove a superclass relation of a concept C C. Generalized 
method can be refined by analyzing the overlap of and Change the concept definition of C from C: Generalized 
      in combination with the relations they restrict. This primitive to defined 
more accurate method is not topic of this paper, but it relies Add a concept definition A    C: Unknown 
                                                       1 Complex Add a (not further specified) sub• C: No effect 
on the same idea as the theorem given above.            class A of C 
                                                        Define a relation R as functional    /?: Specialized 
4.2 Characterizing Changes 
Now we are able to determine the consequence of changes Table 1: Some modification to an ontology and their effects 
in the concept hierarchy on the integrity of the mapping, we on the classification of concepts in the hierarchy. 
still need to know what the effect of specific modifications on 
the interpretation of a concepts is (i.e. whether it becomes 
more general or more specific). As our goal is to determine 4.3 Update Management 
the integrity of mappings without having to do classification, With the elements that we described in this section, we now 
we describe what theoretically could happen to a concept as have a complete procedure to determine whether compiled 
result of a modification in the ontology. To to so, we have knowledge in other modules is still valid when the external 
listed all possible change operations to an ontology according ontology is changed. The complete procedure is as follows: 
to the OWL-lite3 knowledge model in the same style as done 1. create a list of concepts and relations that are part of the 
in iBanerjce et al, 1987]. The list of operations is extend• "subsuming" query of any compiled axiom; 
able to other knowledge models; we have chosen the OWL-
lite model because of its simplicity and its expected impor• 2. create another list of concepts and relations that are part 
tant role on the Semantic Web. Apart from atomic change    of the "subsumed" query of any compiled axiom; 
operations to an ontology — like add range restriction or 3. achieve the modifications that are performed in the ex•
delete subclass relation — the list also contains some com• ternal ontology; 
plex change operations, which consist of multiple atomic op•
                                                        4. use the modifications to determine the effect on the in•
erations and/or incorporate some additional knowledge. The 
                                                           terpretation of the concept and relations. 
complex changes are often more useful to specify effects than 
the basic changes. For example, for operations like concept 5. check whether there arc concepts or relations in the first, 
moved up, or domain enlarged, we can specify the effect    "subsuming", list that became more specific, or concepts 
more accurately than for the atomic operations subclass rela• or relations in the second, "subsumed", list that became 
tion changed and domain modified4. Atomic changes can be   more general, or concepts or relations in any of the lists 
detected without using the knowledge in the ontology itself, with an unknown effect; if not, the integrity of the map•
only using the knowledge of the knowledge model, i.e. the  ping is preserved. 
language. These changes are detected at a structural level. 
To identify complex changes, we also need to use the con•
                                                       Algorithm 2 Update 
tent of the ontology itself. We are currently working on rules 
and heuristics to distill complex changes from sets of atomic Require: Ontology Module M 
changes [Klein and Noy, 2003]. Table 1 contains some ex• Require: Ontology Module 
amples of operations and their effect on the classification of for all compiled axioms _ do 
concepts. The table only shows a few examples, although our for all X do 
full ontology of change operations contains around 120 oper• if effect on C is 'generalized' or 'unknown' then 
ations. This number is still growing as new complex changes 
arc defined. A snapshot of the change ontology can be found  end if 
                                                           end for 
online.5 The specification of effects is not complete, in the 
sense that it describes "worst case" scenario's, and that for for all X do 
some operations the effect is "unknown" (i.e. unpredictable). if effect on X is 'specialized' or 'unknown' then 
In contrast to [Franconi et al., 2000] who provides complete 
semantics of changes we prefer to use heuristics in order to end if 
avoid expensive reasoning about the impact of changes.     end for 
                                                         end for 

   3See http://www.w3 . org/TR/owl- features/. 
   4For a complete list, see http://wonderweb.man.ac.    We describe the procedure in a more structured way in Al•
uk/deliverables/D20.shtml.                             gorithm 2. The algorithm triggers a (re-)compilation step 

   5http://ontoview.org/changes/1/3/                   only if it is require in order to resume integrity. Otherwise 


904                                                                        ONTOLOGIES AND FOUNDATIONS 