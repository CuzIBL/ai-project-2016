        Approximating Game-Theoretic Optimal Strategies for Full-scale Poker 

      D. Billings, N. Burch, A. Davidson, R. Holte, J. Schaeffer, T. Schauenberg, and D. Szafron 
                            Department of Computing Science, University of Alberta 
                                       Edmonton, Alberta, T6G 2E8, Canada 
                 Email: {darse,burch,davidson,holte,jonathan,terence,duane}@cs.ualberta.ca 


                        Abstract                                 Due to the computational limitations involved, only simpli•
                                                               fied poker variations have been solved in the past (e.g. [Kuhn, 
     The computation of the first complete approxima•          1950; Sakaguchi and Sakai, 19921). While these are of the•
     tions of game-theoretic optimal strategies for full-      oretical interest, the same methods are not feasible for real 
     scale poker is addressed. Several abstraction tech•       games, which are too large by many orders of magnitude 
     niques are combined to represent the game of 2-           ([Roller and Pfeffer, 1997J). 
     player Texas Hold'em, having size O(1018), using            [Shi and Littman, 2001] investigated abstraction tech•
     closely related models each having size 0(1O7).           niques to reduce the large search space and complexity of the 
     Despite the reduction in size by a factor of 100          problem, using a simplified variant of poker. [Takusagawa, 
     billion, the resulting models retain the key prop•        2000] created near-optimal strategies for the play of three 
     erties and structure of the real game. Linear pro•
                                                               specific Hold'em flops and betting sequences. [Selby, 1999] 
     gramming solutions to the abstracted game are used 
                                                               computed an optimal solution for the abbreviated game of 
     to create substantially improved poker-playing pro•
                                                               pre flop Hold1 em. 
     grams, able to defeat strong human players and be 
                                                                 Using new abstraction techniques, we have produced vi•
     competitive against world-class opponents. 
                                                               able "pseudo-optimal" strategies for the game of 2-player 
                                                               Texas Hold'em. The resulting poker-playing programs have 
1 Introduction                                                 demonstrated a tremendous improvement in performance. 
Mathematical game theory was introduced by John von Neu•       Whereas the previous best poker programs were easily beaten 
mann in the 1940s, and has since become one of the founda•     by any competent human player, the new programs are capa•
tions of modern economics [von Neumann and Morgenstern,        ble of defeating very strong players, and can hold their own 
19441. Von Neumann used the game of poker as a basic           against world-class opposition. 
model for 2-player zero-sum adversarial games, and proved        Although some domain-specific knowledge is an asset in 
the first fundamental result, the famous minimax theorem. A    creating accurate reduced-scale models, analogous methods 
few years later, John Nash added results for iV-player non-    can be developed for many other imperfect information do•
cooperative games, for which he later won the Nobel Prize      mains and generalized game trees. We describe a general 
[Nash, 1950]. Many decision problems can be modeled using      method of problem reformulation that permits the indepen•
game theory, and it has been employed in a wide variety of     dent solution of sub-trees by estimating the conditional prob•
domains in recent years.                                       abilities needed as input for each computation. 
  Of particular interest is the existence of optimal solutions,  This paper makes the following contributions: 

or Nash equilibria. An optimal solution provides a random•       1. Abstraction techniques that can reduce an O(1018) 

ized mixed strategy, basically a recipe of how to play in each      poker search space to a manageable 0(1O7), without 
possible situation. Using this strategy ensures that an agent       losing the most important properties of the game. 
will obtain at least the game-theoretic value of the game, re•
                                                                 2. A poker-playing program that is a major improvement 
gardless of the opponent's strategy. Unfortunately, finding 
                                                                    over previous efforts, and is capable of competing with 
exact optimal solutions is limited to relatively small problem 
                                                                    world-class opposition. 
sizes, and is not practical for most real domains. 
  This paper explores the use of highly abstracted mathemat•   2 Game Theory 
ical models which capture the most essential properties of the 
real domain, such that an exact solution to the smaller prob•  Game theory encompasses all forms of competition between 
lem provides a useful approximation of an optimal strategy     two or more agents. Unlike chess or checkers, poker is a 
for the real domain. The application domain used is the game   game of imperfect information and chance outcomes. It can 
of poker, specifically Texas Hold'em, the most popular form    be represented with an imperfect information game tree hav•
of casino poker and the poker variant used to determine the    ing chance nodes and decision nodes, which are grouped into 
world champion at the annual World Series of Poker.            information sets. 


MULTIAGENT SYSTEMS                                                                                                    661    Since the nodes in this tree are not independent, divide-
and-conquer methods for computing sub-trees (such as the 
alpha-beta algorithm) are not applicable. For a more detailed 
description of imperfect information game tree structure, see 
[Koller and Megiddo, 1992]. 
   A strategy is a set of Riles for choosing an action at ev•
ery decision node of the tree. In general, this will be a ran•  Texas 
domized mixed strategy, which is a probability distribution     Hold'em 
over the various alternatives. A player must use the same pol•  0(1018) 
icy across all nodes in the same information set, since from 
that player's perspective they are indistinguishable from each 
other (differing only in the hidden information component). 
   The conventional method for solving such a problem is to 
convert the descriptive representation, or extensive form, into 
a system of linear equations, which is then solved by a lin•
ear programming (LP) system such as the Simplex algorithm. 
The optimal solutions are computed simultaneously for all 
players, ensuring the best worst-case outcome for each player.  Figure 1: Branching factors for Hold'em and abstractions. 
   Traditionally, the conversion to normal form was accom•
panied by an exponential blow-up in the size of the prob•      4 Abstractions 
lem, meaning that only very small problem instances could 
be solved in practice. [Roller et ai, 1994] described an alter• Texas Hold'em has an easily identifiable structure, alternat•
nate LP representation, called sequence form, which exploits   ing between chance nodes and betting rounds in four distinct 
the common property of perfect recall (wherein all players     stages. A high-level view of the imperfect information game 
know the preceding history of the game), to obtain a system    tree is shown in Figure 1. 
of equations and unknowns that is only linear in the size of     Hold'em can be reformulated to produce similar but much 
the game tree. This exponential reduction in representation    smaller games. The objective is to reduce the scale of the 
has re-opened the possibility of using game-theoretic analy•   problem without severely altering the fundamental structure 
sis for many domains. However, since the game tree itself      of the game, or the resulting optimal strategies. There are 
can be very large, the LP solution method is still limited to  many ways of doing this, varying in the overall reduction and 
moderate problem sizes (normally less than a billion nodes).   in the accuracy of the resulting approximation. 
                                                                 Some of the most accurate abstractions include suit equiv•
                                                              alence isomorphisms (offering a reduction of at most a factor 
3 Texas HolcTem                                               of 4! = 24), rank equivalence (only under certain conditions), 
A game (or hand) of Texas Hold'em consists of four stages,    and rank near-equivalence. The optimal solutions to these ab•
each followed by a round of betting:                          stracted problems will either be exactly the same or will have 
  Preflop: Each player is dealt two private cards face down   a small bounded error, which we refer to as near-optimal so•
(the hole cards).                                             lutions. Unfortunately, the abstractions which produce an ex•
  Flop: Three community cards (shared by all players) are     act or near-exact reformulation do not produce the very large 
dealt face up.                                                reductions required to make full-scale poker tractable. 
  T\irn: A single community card is dealt face up.               A common method for controlling the game size is deck 
                                                              reduction. Using less than the standard 52-card deck greatly 
  River: A final community card is dealt face up. 
                                                              reduces the branching factor at chance nodes. Other methods 
  After the betting, all active players reveal their hole cards 
                                                              include reducing the number of cards in a player's hand (e.g. 
for the showdown. The player with the best five-card poker 
                                                              from a 2-card hand to a 1-card hand), and reducing the num•
hand formed from their two private cards and the five public 
                                                              ber of board cards (e.g. a 1-card flop), as was done by IShi 
cards wins all the money wagered (ties are possible). 
                                                              and Littman, 2001] for the game of Rhode Island Hold'em. 
  The game starts off with two forced bets (the blinds) put 
                                                              [Koller and Pfeffer, 1997] used such parameters to generate a 
into the pot. When it is a player's turn to act, they must ei• wide variety of tractable games to solve with their Gala sys•
ther bet/raise (increase their investment in the pot), check/call tem. 
(match what the opponent has bet or raised), or fold (quit and 
                                                                 We have used a number of small and intermediate sized 
surrender all money contributed to the pot).                  games, ranging from eight cards (two suits, four ranks) to 24 
  The best-known non-commercial Texas Hold'em program         cards (three suits, eight ranks) for the purpose of studying 
is Poki. It has been playing online since 1997 and has earned abstraction methods, comparing the results with known exact 
an impressive winning record, albeit against generally weak   or near-optimal solutions. However, these smaller games are 
opposition [Billings et al.y 2002]. The system's abilities    not suitable for use as an approximation for Texas Hold'em, 
are based on enumeration and simulation techniques, expert    as the underlying structures of the games are different. To 
knowledge, and opponent modeling. The program's weak•         produce good playing strategies for full-scale poker, we look 
nesses are easily exploited by strong players, especially in  for abstractions of the real game which do not alter that basic 
the 2-player game. 


662                                                                                             MULTIAGENT SYSTEMS structure.                                                       The effect of truncation can be lessened through the use 
   The abstraction techniques used in practice are powerful    of expected value leaf nodes. Instead of ending the game 
in terms of reducing the problem size, and subsume those       abruptly and awarding the pot to the strongest hand at that 
previously mentioned. However, since they are also much        moment, we compute an average conclusion over all possible 
cruder, we call their solutions pseudo-optimal, to emphasize   chance outcomes. For a 3-round model ending on the turn, 
that there is no guarantee that the resulting approximations   we roll-out all 44 possible river cards, assuming no further 
will be accurate, or even reasonable. Some will be low-risk    betting (or alternately, assuming one bet per player for the 
propositions, while others will require empirical testing to de• last round). Each player is awarded a fraction of the pot, cor•
termine if they have merit.                                    responding to their probability of winning the hand. In a 2-
                                                               round preflop model, we roll-out all 990 2-card combinations 
4.1 Betting round reduction                                    of the turn and river. 
The standard rules of limit Hold'em allow for a maximum of       The most extreme form of truncation results in a 1 -round 
four bets per player per round.l Thus in 2-player limit poker  model, with no foresight of future betting rounds. Since each 
there are 19 possible betting sequences, of which two do not   future round provides a refinement to the approximation, this 
occur in practice.2 Of the remaining 17 sequences, 8 end in a  will not reflect a correct strategy for the real game. In par•
fold (leading to a terminal node in the game tree), and 9 end  ticular, betting plans that extend over more than one round, 
in a call (carrying forward to the next chance node). Using    such as deferring the raise of a very strong hand, are lost 
                                                               entirely. Nevertheless, even these simplistic models can be 
and capital letters for the second player, the tree of possible useful when combined with expected value leaf nodes. 
betting sequences for each round is: 
                                                                 Alex Selby computed an optimal solution for the game of 
                                                               preflop Hold'em, which consists of only the first betting round 
                                                               followed by an EV roll-out of the five board cards to deter•
   We call this local collection of decision nodes a betting   mine the winner [Selby, 1999]. Although there are some se•
tree, and represent it diagramatically with a triangle.        rious limitations in the strategy based on this 1-round model, 
   With betting round reduction, each player is allowed a      we have incorporated the Selby preflop system into one of our 
maximum of three bets per round, thereby eliminating the last  programs, PsOptil, as described later in this section. 
two sequences in each line. The effective branching factor of    In contrast to truncating rounds, we can bypass certain 
the betting tree is reduced from nine to seven. This does not  early stages of the game. We frequently use postflop mod•
appear to have a substantial effect on play, or on the expected els, which ignore the preflop betting round, and use a single 
value (EV) for each player. This observation has been verified fixed flop of three cards (sec Figure 1). 
experimentally. In contrast, we computed the corresponding       It is natural to consider the idea of independent betting 
postflop models with a maximum of two bets per player per      rounds, where each phase of the game is treated in isolation. 
round, and found radical changes to the optimal strategies,    Unfortunately, the betting history from previous rounds will 
strongly suggesting that that level of abstraction is not safe. almost always contain contextual information that is critical 
                                                               to making appropriate decisions. The probability distribution 
4.2 Elimination of betting rounds                              over the hands for each player is strongly dependent on the 
Large reductions in the size of a poker game tree can be ob•   path that led to that decision point, so it cannot be ignored 
tained by elimination of betting rounds. There are several     without risking a considerable loss of information. However, 
ways to do this, and they generally have a significant impact  the naive independence assumption can be viable in certain 
on the nature of the game. First, the game may be truncated,   circumstances, and we do implicitly use it in the design of 
by eliminating the last round or rounds. In Hold'em, ignor•    PsOptil to bridge the gap between the 1-round preflop model 
ing the last board card and the final betting round produces a and the 3-round postflop model. 
3-round model of the actual 4-round game. The solution to        Another possible abstraction we explored was merging two 
the 3-round model loses some of the subtlety involved in the   or more rounds into a single round, such as creating a com•
true optimal strategy, but the degradation applies primarily to bined 2-card turn/river. However, it is not clear what the ap•
advanced tactics on the turn. There is a smaller effect on the propriate bet size should be for this composite round. In any 
flop strategy, and the strategy for the first betting round may case, the solutions for these models (over a full range of possi•
have no significant changes, since it incorporates all the out• ble bet sizes), all turned out to be substantially different from 
comes of two future betting rounds. We use this particular     their 3-round counterparts, and the method was therefore re•
abstraction to define an appropriate strategy for play in the  jected. 
first round, and thus call it a preflop model (see Figure 2). 

   'Some rules allow unlimited raises when only two players arc 4.3 Composition of preflop and postflop models 
involved. However, occasions with more than three legitimate raises 
are relatively rare, and do not greatly alter an optimal strategy. 
   technically, a player may fold even though there is no outstand• Although the nodes of an imperfect information game tree are 
ing bet. This is logically dominated by not folding, and therefore not independent in general, some decomposition is possible. 
does not occur in an optimal strategy, and is almost never seen in For example, the sub-trees resulting from different preflop 
practice.                                                      betting sequences can no longer have nodes that belong to the 


MULTIAGENT SYSTEMS                                                                                                    663  same information set.3 The sub-trees for our postflop models 
 can be computed in isolation, provided that the appropriate    Preflop                                          PsOptil 
 preconditions are given as input. Unfortunately, knowing the 
 correct conditional probabilities would normally entail solv•
 ing the whole game, so there would be no advantage to the       Flop 
 decomposition.                                                  Turn                                              Bet 
   For simple postflop models, we dispense with the prior       River 
 probabilities. For the postflop models used in PsOptiO and 
 PsOptil, we simply ignore the implications of the preflop 
 betting actions, and assume a uniform distribution over all 
 possible hands for each player. Different postflop solutions 
 were computed for initial pot sizes of two, four, six, and eight 
 bets (corresponding to preflop sequences with zero, one, two, 
 or three raises, but ignoring which player initially made each 
 raise). In PsOptil, the four postflop solutions are simply ap•
 pended to the Selby preflop strategy (Figure 2). Although 
 these simplifying assumptions are technically wrong, the re•
 sulting play is still surprisingly effective.                       Figure 2: Composition of PsOptil and PsOptil. 
   A better way to compose postflop models is to estimate 
 the conditional probabilities, using the solution to a preflop 
                                                               17 equivalence classes for each player would be sufficient for 
 model. With a tractable preflop model, we have a means of 
                                                               each betting round. However, since a mixed strategy may be 
 estimating an appropriate strategy at the root, and thereby de•
                                                               indicated for optimal play in some cases, we would like to 
 termine the consequent probability distributions. 
                                                               group hands that have a similar probability distribution over 
   In PsOptil, a 3-round preflop model was designed and 
                                                               action plans. 
 solved. The resulting pseudo-optimal strategy for the pre•
 flop (which was significantly different from the Selby strat•   One obvious but rather crude bucketing function is to group 
 egy) was used to determine the corresponding distribution of  all hands according to strength (ie. its rank with respect to all 
 hands for each player in each context. This provided the nec• possible hands, or the probability of currently being in the 
 essary input parameters for each of the seven preflop betting lead). This can be improved by considering the roll-out of all 
 sequences that carry over to the flop stage. Since each of    future cards, giving an (unweighted) estimate of the chance 
 these postflop models has been given (an approximation of)    of winning the hand. 
 the perfect recall knowledge of the full game, they are fully   However, this is only a one-dimensional view of hand 
compatible with each other, and are properly integrated un•    types, in what can be considered to be an iV-dimensional 
der the umbrella of the preflop model (Figure 2). In theory,   space of strategies, with a vast number of different ways 
this should be equivalent to computing the much larger tree,   to classify them. A superior practical method would be to 
but it is limited by the accuracy and appropriateness of the   project the set of all hands onto a two-dimensional space con•
proposed preflop betting model.                                sisting of (roll-out) hand strength and hand potential (sim•
                                                               ilar to the hand assessment used in Poki, [Billings et al, 
4.4 Abstraction by bucketing                                   2002]). Clusters in the resulting scattergram suggest reason•
The most important method of abstraction for the computa•      able groups of hands to be treated similarly. 
tion of our pseudo-optimal strategies is called bucketing. This  We eventually settled on a simple compromise. With n 
is an extension of the natural and intuitive concept that has  available buckets, we allocate n - 1 to roll-out hand strength. 
been applied many times in previous research (e.g. [Sklansky   The number of hand types in each class is not uniform; the 
and Malmuth, 1994] [Takusagawa, 2000] iShi and Littman,        classes for the strongest hands are smaller than those for 
2001]). The set of all possible hands is partitioned into equiv• mediocre and weak hands, allowing for better discrimination 
alence classes (also called buckets or bins). A many-to-one    of the smaller fractions of hands that should be raised or re•
mapping function determines which hands will be grouped        raised. 
together. Ideally, the hands should be grouped according to      One special bucket is designated for hands that are low in 
strategic similarity, meaning that they can all be played in a strength but have high potential, such as good draws to a flush 
similar manner without much loss in EV.                        or straight. This plays an important role in identifying good 
   If every hand was played with a particular pure strategy    hands to use for bluffing (known as semi-bluffs in [Sklansky 
(ie. only one of the available choices), then a perfect mapping and Malmuth, 1994]). Comparing postflop solutions that use 
function would group all hands that follow the same plan, and  six strength buckets to solutions with five strength plus one 
                                                               high-potential bucket, we see that most bluffs in the latter are 
    To see this, each decision node of the tree can be labeled with 
   3                                                           taken from the special bucket, which is sometimes played in 
all the cards known to that player, and the full path that led to that 
node. Nodes with identical labels differ only in the hidden informa• the same way as the strongest bucket. This confirmed our 
tion, and are therefore in the same information set. Since the betting expectations that the high-potential bucket would improve the 
history is different for these sub-trees, none of the nodes are inter• selection of hands for various betting tactics, and increase the 
dependent.                                                     overall EV. 


664                                                                                             MULTIAGENT SYSTEMS      Original                                                  5 Experiments 
    Bucketing 
                                                               5.1 Testing against computer players 

     Transition                                                A series of matches between computer programs was con•
    Probabilities                                              ducted, with the results shown in Table 1. Win rates are mea•
                                                               sured in small bets per hand (sb/h). Each match was run for at 
    Next Round                                                 least 20,000 games (and over 100,000 games in some cases). 
                                                               The variance per game depends greatly on the styles of the 
     Bucketing 
                                                               two players involved, but is typically +/- 6 sb. The standard 
                                                               deviation for each match outcome is not shown, but is nor•
  Figure 3: Transition probabilities (six buckets per player). mally less than +/- 0.03 sb/h. 
                                                                 The "bot players" were: 
                                                                 PsOptil, composed of a hand-crafted 3-round preflop 
   The number of buckets that can be used in conjunction with  model, providing conditional probability distributions to each 
a 3-round model is very small, typically six or seven for each of seven 3-round postflop models (Figure 2). All models in 
player (ie. 36 or 49 pairs of bucket assignments). Obviously   this prototype used six buckets per player per round. 
this results in a very coarse-grained abstract game, but it may  PsOptil, composed of four 3-round postflop models un•
not be substantially different from the number of distinctions der the naive uniform distribution assumption, with 7 buck•
an average human player might make. Regardless, it is the      ets per player per round. Selby's optimal solution fox preflop 
best we can currently do given the computational constraints   Hold'em is used to play the preflop ([Selby, 1999]). 
of this approach.                                                PsOptiO, composed of a single 3-round postflop model, 
                                                               wrongly assuming uniform distributions and an initial pot size 
   The final thing needed to sever the abstract game from the  of two bets, with seven buckets per player per round. This 
underlying real game tree are the transition probabilities. The program used an always-call policy for the preflop betting 
chance node between the flop and turn represents a particular  round. 
card being dealt from the remaining stock of 45 cards. In the    Poki, the University of Alberta poker program. This older 
abstract game, there are no cards, only buckets. The effect of version of Poki was not designed to play the 2-player game, 
the turn card in the abstract game is to dictate the probability 
                                                               and can be defeated rather easily, but is a useful benchmark. 
of moving from one pair of buckets on the flop to any pair of 
                                                                 Anti-Poki, a rule-based program designed to beat Poki by 
buckets on the turn. Thus the collection of chance nodes in 
                                                               exploiting its weaknesses and vulnerabilities in the 2-player 
the game tree is represented by an (n x n) to (n x n) tran•
                                                               game. Any specific counter-strategy can be even more vul•
sition network as shown in Figure 3. For postflop models, 
                                                               nerable to adaptive players. 
this can be estimated by walking the entire tree, enumerating 
                                                                 Aadapti, a relatively simple adaptive player, capable of 
all transitions for a small number of characteristic flops. For 
                                                               slowly learning and exploiting persistent patterns in play. 
preflop models, the full enumeration is more expensive (en•
compassing all {48 choose 3} = 17296 possible flops), so it      Always Call, very weak benchmark strategy. 
is estimated either by sampling, or by (parallel) enumeration    Always Raise, very weak benchmark strategy. 
of a truncated tree.                                              It is important to understand that a game-theoretic optimal 
                                                               player is, in principle, not designed to win. Its purpose is to 
   For a 3-round postflop model, we can comfortably solve      not lose. An implicit assumption is that the opponent is also 
abstract games with up to seven buckets for each player in     playing optimally, and nothing can be gained by observing 
each round. Changing the distribution of buckets, such as six  the opponent for patterns or weaknesses. 
for the flop, seven for the turn, and eight for the river, does  In a simple game like RoShamBo (also known as Rock-
not appear to significantly affect the quality of the solutions, Paper-Scissors), playing the optimal strategy ensures a break•
better or worse.                                               even result, regardless of what the opponent does, and is 
   The final linear programming solution produces a large ta•  therefore insufficient to defeat weak opponents, or to win a 
ble of mixed strategies (probabilities for fold, call, or raise) tournament ([Billings, 2000]). Poker is more complex, and 
for every reachable scenario in the abstract game. To use this, in theory an optimal player can win, but only if the oppo•
the poker-playing program looks for the corresponding situa•   nent makes dominated errors. Any time a player makes any 
tion based on the same hand strength and potential measures,   choice that is part of a randomized mixed strategy of some 
and randomly selects an action from the mixed strategy.        game-theoretic optimal policy, that decision is not dominated. 
                                                               In other words, it is possible to play in a highly sub-optimal 
   The large LP computations typically take less than a day    manner, but still break even against an optimal player, be•
(using CPLEX with the barrier method), and use up to two       cause those choices are not strictly dominated. 
Gigabytes of RAM. Larger problems will exceed available          Since the pseudo-optimal strategies do no opponent model•
memory, which is common for large LP systems. Certain          ing, there is no guarantee that they will be especially effective 
LP techniques such as constraint generation could potentially  against very bad or highly predictable players. They must rely 
extend the range of solvable instances considerably, but this  only on these fundamental strategic errors, and the margin of 
would probably only allow the use of one or two additional     victory might be relatively modest as a result. 
buckets per player. 


MULTIAGENT SYSTEMS                                                                                                    665 