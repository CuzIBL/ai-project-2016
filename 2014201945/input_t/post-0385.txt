                         Abduction with Hypotheses Conﬁrmation∗

      Marco Alberti1, Marco Gavanelli1, Evelina Lamma1, Paola Mello2, and Paolo Torroni           2
                 1 ENDIF - University of Ferrara - Via Saragat, 1 - 44100 Ferrara, Italy.
                              {malberti|m gavanelli|elamma}@ing.unife.it
             2 DEIS - University of Bologna - Viale Risorgimento, 2 - 40136 Bologna, Italy.
                                    {pmello|ptorroni}@deis.unibo.it

1  Introduction                                         The operational semantics is an abductive proof-procedure
Abductive Logic Programming (ALP) is an extension of  which builds on the IFF and is proven sound for a relevant
Logic Programming to formalise hypothetical reasoning. It class of programs. It has been implemented using Constraint
typically distinguishes between facts, deﬁned within a static Handling Rules and integrated in a Java-based system for hy-
theory and known to be true or false, and potentially true, ab- pothetical reasoning [Alberti et al., 2005].
ducible atoms (hypotheses).
  However, in most applications, this distinction is not ade- 2 Dynamic ALP
quate to capture the dynamics of knowledge, as reasoning is An ALP [Kakas et al., 1992] is a tuple hKB, IC, Ai where
confronted with an environment in evolution. It may turn out KB is a logic program, A is a set of predicates called ab-
that some hypotheses gain or lose strength, as events happen ducibles not deﬁned in KB, and IC is a set of formulae
in the world. For example, in the medical domain, where a called Integrity Constraints. An abductive explanation for a
kind of hypothetical reasoning is the diagnostic inference, we goal G is a set ∆ ⊆ A s.t. KB ∪∆ |= G and KB ∪∆ |= IC.
can model symptoms as observations and diseases as (not di- New dynamically upcoming events are encoded into atoms
rectly measurable) hypotheses: test results and new possibly H(Descr[, Time]) where Descr is a ground term represent-
upcoming symptoms, instead, are none of these, and should ing the event and Time is an integer representing the time at
be interpreted as hypotheses conﬁrmable by events.    which the event happened. Such events are recorded into a set
  An abductive derivation veriﬁes a goal by using deduction (called history, or HAP) containing H atoms. A Dynamic
as in logic programming, but also by possibly assuming that Abductive Logic Program (DALP) is a sequence of ALPs,
some abducibles are true. In order to have this process con- each grounded on a given history. We will write DALPHAP
verge to a meaningful explanation, an abductive theory nor- to indicate the abductive logic program obtained by ground-
mally comes together with a set of integrity constraints IC, ing the DALP with the history HAP. The history dynami-
and it is required that hypotheses be consistent with IC. cally grows during the computation, as new events happen.1
  In our extended framework, we distinguish between two An instance DALP HAP of this framework can be queried
classes of abducible literals: hypotheses, as classically un- with a goal G, that may contain both predicates deﬁned in
derstood, and expectations about events. Expectations can be KB and abducibles. The abductive computation produces
“positive” (to be conﬁrmed by certain events occurring), or a set ∆ of hypotheses, partitioned in two sets: general hy-
“negative” (to be conﬁrmed by certain events not occurring). potheses (∆A) and expectations (EXP), containing positive
  We propose a new language to deﬁne abductive logic pro- expectations (in the form of E(Descr[, Time]) atoms), and
grams with expectations, inspired to the IFF proof procedure negative expectations (EN((Descr[, Time])) atoms).
[Fung and Kowalski, 1997], and whose semantics extends  Typically, expectations will contain variables, over which
those of classical ALP. The language permits to express ab- CLP constraints can be imposed. Variable quantiﬁcation is
ducible hypotheses and expectations with variables and con- existential in E expectations, and universal in EN expecta-
straints. Within this new framework we can model and reason tions (unless the same variable is used outside of such expec-
about a number of concrete application scenaria. Our frame- tation). Explicit negation can also be applied to expectations.2
work permits, e.g., to reason about deadlines, and to express Constraints on universally quantiﬁed variables will be con-
and correctly handle expectations with universal quantiﬁca- sidered as quantiﬁer restrictions. For instance, EN(p(X)),
tion: this typically happens with negative expectations (“The X > 0 has the semantics ∀X>0 EN(p(X)).
patient is expected not to show symptom Q at all times”). The declarative semantics for DALP HAP is based on its
                                                      ground version, and considers CLP-like constraints as deﬁned
  ∗This work is partially funded by the Information Society Tech-
nologies programme of the European Commission under the IST- 1The source of events is not modelled, but can be imagined as a
2001-32530 SOCS Project, and by the MIUR COFIN 2003 projects queue.
Sviluppo e veriﬁca di sistemi multiagente basati sulla logica, and 2For each abducible predicate A ∈ {E, EN}, the abducible
La Gestione e la negoziazione automatica dei diritti sulle opere predicate ¬A is implicitly deﬁned, to represent the negation of A,
dell’ingegno digitali: aspetti giuridici e informatici. together with the integrity constraint (∀X)¬A(X), A(X) → false.predicates. First, an abductive explanation should entail the the patient’s temperature cannot go below 37oC. s may alter-
goal and satisfy the integrity constraints:           natively be caused by disease d2, and in this case red spots
      Comp(KB   ∪ ∆A ∪ EXP  ∪ HAP)   |=  G      (1)   are expected to appear on the patient’s skin within 4 days. Fi-
      Comp(KB   ∪ ∆A ∪ EXP  ∪ HAP)   |=  IC     (2)   nally, d3 may be the cause of s, provided that an exam r gives
                                                      a positive result:
where, as in the IFF proof procedure, the symbol |= stands symptom(s, T1) ← disease(d1, T1) ∧ not disease(d3, T1)
for three valued entailment and Comp stands for completion. ∧EN(tem(T ), T1) ∧ T < 37.
  Among the sets of expectations of an instance DALP HAP, symptom(s, T1) ← disease(d2, T1)∧
we select the ones that are consistent with respect to expec- E(red spots, T2) ∧ T1 < T2 ≤ T1 + 4.
tations (i.e., the same event should not be both expected to symptom(s, T1) ← disease(d3, T1) ∧ E(exam(r, +), T1).
happen and not to happen), and that are conﬁrmed:      The initial goal can be the observation symptom(s, 1). We
                                                            disease
Deﬁnition 1 A set EXP is E-consistent iff for each (ground) model  as a classical abducible, whereas expectations
term p:        {E(p), EN(p)} 6⊆ EXP.            (3)   are used to corroborate the explanations.
  Given a history HAP, a set of expectations EXP is con- Notice the twofold use of expectations: both in the sec-
ﬁrmed if and only if for each (ground) term p:        ond and third clause, the expectation deﬁnes a further event
    Comp(HAP   ∪ EXP)  ∪ {E(p) → H(p)}                that can support the diagnosis. But while E(red spots, T2)
                                       6|= false (4)
                    ∪{EN(p) →  ¬H(p)}                 simply deﬁnes the expected course of illness (in order for the
                                                      diagnosis to be corroborated), E(exam(r, +), T1) can also be
We write DALPHAP≈∆A∪EXPG      if equations (1-4) hold. intended as a suggestion to the physician for a further exam
  The operational semantics is an extension of the IFF. Each to be done, or as a request of further information.
state is deﬁned by a tuple deﬁning conﬁrmed, disconﬁrmed, The combinations of abducible literals can be reﬁned by
and pending expectations, along with the resolvent, the set of means of ICs. For example, if the result of some exam r is
abduced literals that are not expectations, the constraint store, positive, then we can assume that the patient is not affected
                                         HAP
a set of partially solved integrity constraints, and . by disease d1: H(exam(r, +), T1) → not disease(d1, T1).
  A derivation D is a sequence of nodes Tj, where the initial The dynamic occurrence of events can drive the generation
node T0 contains the goal G as the initial resolvent, and the and selection of abductive explanations. If the query is, e.g.,
other nodes Tj, j > 0, are obtained by applying one among a symptom(s, 1), there can be three alternative explanations:
set of transitions, until quiescence.                    {disease(d1, 1), ∀T >37EN(tem(T ), 1)},
                                                          disease            E
Deﬁnition 2 Starting with an instance DALPHAPi there     {       (d2, 1), ∃1<T2≤5 (red spots, T2)}, and
exists a successful derivation for a goal G iff the proof tree {disease(d3, 1), E(exam(r, +), 1)}.
with root node T0 has at least one consistent leaf node Tn If event H(tem(36), 1) happens, the ﬁrst set contains a dis-
(i.e., there exists for Tn a ground variable assignment such conﬁrmed expectation: ∀T >37 EN(tem(T ), 1), so it can be
that all the constraints are satisﬁed). In that case, we write: ruled out. If, within the deadline T2 ≤ 5, the event red spots
                           HAPf                       does not happen, the second set is excluded as well, and only
               DALPHAPi  ∼∆A∪EXPG
                                                      the third remains acceptable.
  The transitions are those of the IFF, enlarged with those of Finally, integrity constraints could suggest possible cures,
CLP, and with speciﬁc transitions accommodating the con- or warn about consequences of not taking certain drugs:
cepts of hypotheses conﬁrmation and evolving history.        disease(d3, T1) → E(aspirin, T1)
  The CLP(FD) solver has been extended for dealing with         ∨E(tem(T ), T2) ∧ T > 40 ∧ T2 < T1 + 2.
universally quantiﬁed variables and quantiﬁer restrictions.
For instance, given two expectations ∀X<10EN(p(X)) and 4  Conclusions
∃Y >5E(p(Y )), the solver is able to infer ∃Y ≥10E(p(Y )). To We presented SCIFF, an abductive proof-procedure able, be-
the best of our knowledge, this is the only proof-procedure side proposing explanations, to infer expectations about the
able to abduce atoms containing universally quantiﬁed vari- happening of events. Expectations are abducibles, but more
ables; moreover, it also handles constraints a` la CLP on uni- expressive: they can contain universally quantiﬁed variables,
versally quantiﬁed variables.                         possibly with CLP constraints. They can represent requests
  We proved soundness for allowed DALPs:3             for information, or the expected evolution of a system. SCIFF
                                                      is able to process dynamically incoming events to conﬁrm the
Theorem 1 Given DALPHAPi    and a ground goal G, if
            HAP                                       expectations, providing corroboration to abduced hypotheses.
DALPHAPi   ∼∆    G then ALPHAP≈∆G.
                                                      References
3  Case study                                         [Alberti et al., 2005] M. Alberti, F. Chesani, M. Gavanelli,
We conclude with an example from the medical domain to  E. Lamma, P. Mello, and P. Torroni. Compliance veriﬁcation of
show two main contributions of our work: the dynamic de- agent interaction: a logic-based software tool. Applied Artiﬁcial
tection of new facts, and the conﬁrmation of hypotheses by Intelligence, 2005. To appear.
events. Suppose a symptom s can be caused by one of three [Fung and Kowalski, 1997] T. H. Fung and R. A. Kowalski. The
types of diseases. Let disease d1 be an acceptable explanation IFF proof procedure for abductive logic programming. Journal
for s if the patient is not also affected by d3, and in such a case of Logic Programming, 33(2):151–165, November 1997.
                                                      [             ]
  3The proof is based on a correspondence drawn between SCIFF Kakas et al., 1992 A.C. Kakas, R.A. Kowalski, and F. Toni. Ab-
and IFF transitions, and exploits the soundness results of the IFF. ductive logic programming. J. Log. Comput, 2(6):719–770, 1992.