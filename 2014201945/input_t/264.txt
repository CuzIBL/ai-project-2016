                          Lookahead Pathologies for Single Agent Search 

                    Vadim Bulitko and LihongLi and RussGreiner and Ilya Levner 
                                         Department of Computing Science 
                                                 University of Alberta 
                                            Edmonton, Alberta T6G 2E8 
                                                       CANADA 
                                   {bulitko|lihong|greiner|ilya}@cs.ualberta.ca 

                        Abstract                               from a partial tree expansion (lookahead) prior to reaching 
                                                               the goal state. Since the heuristic function is generally inac•
     Admissible and consistent heuristic functions are         curate and the search is incomplete, suboptimal solutions can 
     usually preferred in single-agent heuristic search        be produced even with admissible and consistent heuristics. 
     as they guarantee optimal solutions with complete           It is widely believed that looking ahead deeper improves 
     search methods such as A* and IDA*. Larger                the chances of taking the right action. Consequently, a con•
     problems, however, frequently make a complete             siderable amount of effort has been put into increasing the 
     search intractable due to space and/or time limita•       lookahead depth by using selective search (search extensions) 
     tions. In particular, a path-planning agent in a real-    and hardware and software optimizations. 
     time strategy game may need to take an action be•
                                                                 In this paper we demonstrate that looking ahead deeper 
     fore its complete search has the time to finish. In 
                                                               can actually decrease the chances of taking the optimal ac•
     such cases, incomplete search techniques (such as 
                                                               tion even when admissible and consistent heuristic functions 
     RTA*, SRTA*, RTDP, DTA*) can be used. Such 
                                                               are used. 
     algorithms conduct a limited ply lookahead and 
     then evaluate the states envisioned using a heuristic 
     function. The action selected on the basis of such        2 Related Past Research & Our Novel 
     evaluations can be suboptimal due to the incom•               Contributions 
     pleteness of search and inaccuracies in the heuris•
                                                               Lookahead pathologies within the mini-max search in two-
     tic. It is usually believed that deeper lookahead in•
                                                               player games have been investigated extensively in the past. 
     creases the chances of taking the optimal action. In 
                                                               In [Nau, 1982; 1983; Beal, 1980; 1982; 1983; Bratko and 
     this paper, we demonstrate that this is not necessar•
                                                               Gams, 1982; Pearl, 1983], the primary cause of pathologies 
     ily the case, even when admissible and consistent 
                                                               was deemed to be the independence of heuristic values of 
     heuristic functions are used. 
                                                               the leaf nodes. Such games were called non-incremental 
                                                               Large branching factors were also considered contributing to 
1 Lookahead Pathologies in Real-time                           a pathology. Later, [Michon, 1983] added non-inertness (i.e., 
     Single-agent Search                                       the constant branching factor) to the "black list" of properties 
                                                               that can cause a pathology. 
Complete search methods such as A* [Hart et al, 1968] and        The efforts presented in this paper differ from the past 
IDA* [Korf, 1985] produce optimal solutions when based on      work in several key areas: (i) we demonstrate lookahead 
an admissible and monotonic heuristic function. The primary    pathologies in single-agent heuristic search; (ii) pathologies 
drawbacks are the exponential running time and the necessity   are shown to take place even when the true and heuris•
to wait until the search completes before the first action can tic values of sibling states are correlated (i.e., in incre•
be taken [Korf, 1990], This limits the applicability of com•   mental domains); (iii) unlike research in [Schriifer, 1986; 
plete search in practice as the deliberation time per action can Beal, 1980] that dealt with two-valued (win/loss) heuristics, 
be severely limited [Higgins, 2002], the domain model can      we consider real-valued heuristic functions; (iv) we show 
be expensive [Bulitko and Wilkins, 2002], the goal states can  pathologies with the smallest non-trivial branching factor 
be difficult to recognize [Levner et al, 2002]. Consequently,  (two); (v) pathologies are demonstrated for admissible and 
despite numerous advances in improving heuristic functions     consistent heuristic functions. 
[Korf and Taylor, 1996; Culberson and Schaeffer, 1994; 
Reinefeld, 1993; Korf, 1997], incomplete real-time/on-line     3 Framework 
search methods remain the practical choice for complex real-
life problems.                                                 In this study we consider a single-agent heuristic search in 
  Various incomplete search methods have been proposed         a discrete state domain with a finite number of deterministic 
including: RTA* [Korf, 1990], RTDP [Barto et al, 1995],        actions. The states (set S) and actions (set A) form a directed 
SRTA*, and DTA* [Russell and Wefald, 1991]. Such algo•         graph with certain specified vertices representing the goal 
rithms base their decisions on heuristic information collected states. The edges (actions) are weighed with action costs: 

POSTER PAPERS                                                                                                       1531                                                                Figure 2: The 7-node 2-ply lookahead tree used in the analy•
 Figure 1: Illustration of p-ply binary lookahead tree. Through• sis of pathologies with admissible and consistent heuristics. 
 out the paper we display the true f* in the circles, the states or 
 heuristic f values are shown next to the circles, and the edges 
 are labeled with actions. Here u+ and a' are the optimal and 
 suboptimal actions respectively. 

 c : A R. The agent is provided with a perfect domain 
 model: : S x A S. 
   We define the true distance-to-goal function as the 
 sum of action costs along the shortest path from state s to 
 the closest goal state. Generally speaking, the agent uses an 
 approximation h to the unavailable The approximation is 
 typically inaccurate insomuch as:  
   For a fixed starting state .s, function is defined as the   4 Admissible & Consistent Heuristics 
 sum of action costs along the shortest path from s to s'. Fi•
 nally, the sum of h or h* and g is typically denoted by / or  Complete searches (e.g., A* and IDA*) produce optimal so•
 /*. It easy to see that /* remains constant along any opti•   lutions with admissible heuristics. Thus, much effort has 
 mal path from a fixed state s to the closest goal. Also note  gone into derivation of admissible heuristics either manu•
 that, for any state .s-', action a\ is inferior to action u.2 iff ally or automatically (e.g., [Korf and Taylor, 1996; Prieditis, 
                                                               19931). Consistency of h leads to non-decreasing monotonia 
   Located in state s, the agent can use its perfect model S to ity of / and often speeds up complete searches conducted by 
 predict the states it will get to upon taking various sequences A*/IDA*. Incomplete searches (e.g., RTA*) can produce sub-
                                                               optimal solutions even with consistent and admissible heuris•
 of actions. A binary lookahead tree is illustrated in Figure 1. 
                                                               tics. It is widely believed, however, that deeper lookahead 
 For the sake of clarity and simplicity we will be using small 
                                                               reduces chances of such errors. Remarkably, this is not nec•
 binary lookahead trees to illustrate the discussion throughout 
                                                               essarily the case. 
 the paper. 
                                                                 Consider the binary lookahead tree in Figure 2. Each 
   The lookahead policy operates as follows: (i) start 
                                                               node is shown with its true value f*(s) inside the circle. 
 in the current state s; (ii) construct the lookahead search tree 
                                                               For each state .s, heuristic f(s) is drawn uniformly from 
 of;; plies deep by envisioning terminal states of all action se•
                                                                                (indicated with the '~' in the boxes next 
 quences of p actions (whenever possible); (iii) evaluate the 
                                                               to the circles). The value (A) of the root state is drawn 
 leaf nodes of the lookahead tree using the / function and se•
                                                               from [0, /*(s  )]. This makes the / function admissible and 
 lect the minimum-valued state; (iv) output the single action              root
                                                               monotonically non-decreasing. 
 leading to selected leaf state (resolve ties randomly). 
                                                                 We will refer to the drawn values of / as 
   Depending on the lookahead tree, random tie resolu•         A,B,C,D,E,F,G (illustrated in the figure). Assume 
 tion, and the approximate heuristic /, the action a =         that . By definition, the lookahead 
         output bycan be suboptimal:                           will be pathological iff The 
                               The probability of such an er•  probability of taking the suboptimal action (i.e., going to the 
 ror for state s S is denoted by Err(s,p). Additionally,       right child of the root node) with the lookahead of one is: 
 we will consider the expected value of over the 
 states .s. Such state-independent quantity will be referred to 
 as Err(p). 
   The combination of domain and heuristic function h (/) is 
 called pathological iff < p2 [Err(s,p1) < Err(s,p2)]. 
 The corresponding state-independent version is: 
 P2 [Err(p1) < Err(p2)]. The intuitive meaning is quite 
 transparent: lookahead search is pathological iff looking     Similarly we derive an expression for the lookahead of two: 

 deeper ahead is expected to increase the chances of taking    Err(sroot,2) which can not be reproduced in this short pa-

1532                                                                                                   POSTER PAPERS                                                                          [Bratko and Gams, 1982] I. Bratko and M. Gams. Error analysis 
                                                                            of the minimax principle. In M.R.B. Clarke, editor, Advances 
                                                                            in Computer Chess, volume 3, pages 1-15. Oxford : Pergamon, 
                                                                             1982. 
                                                                         [Bulitko and Wilkins, 2002] V. Bulitko and D.C. Wilkins. Real•
                                                                            time decision making for shipboard damage control. In Proceed•
                                                                            ings of the AAAI/KDD/UAI-2002 Joint Workshop on Real-Time 
                                                                            Decision Support and Diagnosis Systems, pages 37 46, Edmon•
                                                                            ton, Alberta, 2002. AAAI Press. 
Figure 3: Admissible and consistent heuristics: non-
pathological and pathological lookahead trees.                           [Culberson and Schaeffer, 1994] J. Culberson and J. SchaelTer. Ef•
                                                                            ficiently searching the 15-puzzle. Technical Report TR 94-08, 
                                                                            Department of Computing Science, University of Alberta, 1994. 
                                                                         [Hart et ai, 1968] P.E. Hart, N.J. Nilsson, and B. Raphael. A for•
                                                                            mal basis for the heuristic determination of minimum cost paths. 
                                                                            IEEE Trans, on Systems Science and Cybernetics, 4(2): 100-107, 
                                                                            1968. 
                                                                         [Higgins, 2002] Dan Higgins. Pathfinding design architecture. In 
                                                                            Steve Rabin, editor, AI Game Programming Wisdom, pages 122-
                                                                            132. Charles River Media, 2002. 
                                                                         [Korf and Taylor, 1996] Richard E. Korf and Larry A. Taylor. Find•
                                                                            ing optimal solutions to the twenty-four puzzle. In Proceed•
                                                                            ings of the Thirteenth National Conference on Artificial Intel•
5 Future Work & Conclusions                                                 ligence (AAAI-96), pages 1202 1207, Portland, Oregon, USA, 
                                                                            1996. AAAI Press / The MIT Press. 
In practice, lookahead pathologies with real-time (single-
                                                                         iKorf, 1985] R. Korf. Depth-first iterative deepening : An optimal 
agent or two-player) search are infrequently observed even 
                                                                            admissible tree search. Artificial Intelligence, 27(1), 1985. 
when inadmissible heuristics are used (cf, [Thompson, 1982] 
for the game of chess). Consequently, future work directions             [Korf, 1990] Richard E. Korf. Real-time heuristic search. Artificial 
include: (i) identification of the properties of practically used           Intelligence, 42(2-3): 189 211, 1990. 
heuristic functions (e.g., Manhattan distance in the 8 puzzle)           [Korf, 1997] R. Korf. Finding optimal solutions to rubik's cube us•
that are responsible for the lack of pathologies, (ii) extension            ing pattern databases. In Proceedings of the Workshop on Com•
of the current formal analysis to lookahead trees with a vari-              puter Games (W31) at IJCAI-97, pages 21-26, Nagoya, Japan, 
                                                                            1997. 
able branching factor and a deeper lookahead, (iii) methods 
for on-line and off-line pathology detection and correction              [Levner et al., 2002] I. Levner, V. Bulitko, O. Madani, and 
and (iv) connections between the probability of taking sub-                 R. Greiner. Performance of lookahead control policies in the face 
                                                                            of abstractions and approximations. In S. Koenig and R. Holte, 
optimal actions and a decrease in the cumulative expected re•
                                                                            editors, Lecture Notes in Artificial Intelligence (LNAI), volume 
ward. 
                                                                            2371, pages 299-308. Springer-Verlag, Berlin, Heidelberg, 2002. 
                                                                         [Michon, 1983] G. Michon. Recursive Random Games: A Probab-
Acknowledgements                                                            listic Model for Perfect Information Games. PhD thesis, Univer•
                                                                            sity of California at Los Angeles, 1983. 
Rene Levia, Dan Lizotte, Omid Madani, Xin Li, and Yiping Zhou 
                                                                         [Nau, 1982] D.S. Nau. An investigation of the causes of pathology 
have contributed in various ways. We are grateful for the funding 
                                                                            in games. Artificial Intelligence, 19:257-278, 1982. 
from the University of Alberta, NSFRC, and the Alberta Ingenuity 
                                                                         I Nau, 1983] D.S. Nau. Pathology on game trees revisited, and an 
Centre for Machine Learning. 
                                                                            alternative to minimaxing. Artificial Intelligence, 21(1,2):221 
                                                                            244,1983. 
References                                                               [Pearl, 1983] J. Pearl. On the Nature of Pathology in Game Search•
[Barto et al., 1995] A. G. Barto, S. J. Bradtke, and S. P. Singh.           ing. Artificial Intelligence, 20:427 453, 1983. 
   Learning to act using real-time dynamic programming. Artificial       [Prieditis, 1993] A. E. Prieditis. Machine discovery of effective ad•
   Intelligence, 72(1 ):81-138, 1995.                                       missible heuristics. Machine Learning, 12:117-141, 1993. 
[Beal, 1980] D.F. Beal. An analysis of minimax. In M.R.B. Clarke,        [Reincfcld, 1993] Alexander Reinefeld. Complete solution of the 
   editor, Advances in Computer Chess, volume 2, pages 103 109.             eight-puzzle and the benefit of node ordering in IDA. In IJCAI, 
   Edinburgh University Press, 1980.                                        pages 248-253, 1993. 
                                                                         [Russell and Wefald, 1991] Stuart Jonathan Russell and Eric H. 
[Beal, 1982] D.F. Beal. Benefits of minimax search. In M.R.B. 
                                                                            Wefald. Do the right thing: Studies in limited rationality. MIT 
   Clarke, editor, Advances in Computer Chess, volume 3, pages 
                                                                            Press, 1991. 
   17 24. Oxford : Pergamon, 1982. 
                                                                         [Schriifer, 1986] G. Schriifer. Presence and absence of pathology on 
[Beal, 1983] D.F. Beal. Recent progress in understanding minimax            game trees. In D.F. Beal, editor, Advances in Computer Chess, 
   search. In Proceedings of ACM Annual Conference, pages 164-              volume 4, pages 101-112. Oxford: Pergamon, 1986. 
   169, New York, 1983. Association for Computing Machinery. 
                                                                         [Thompson, 1982] K. Thompson. Computer chess strength. In 
                                                                            M.R.B. Clarke, editor, Advances in Computer Chess, volume 3, 
   The interested reader is referred to the project website at 
                                                                            pages 55 56. Oxford : Pergamon, 1982. 
http://www.cs.ualberta.ca/ircl. 

POSTER PAPERS                                                                                                                          1533 