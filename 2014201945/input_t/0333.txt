                                   Possibilistic Stable Models

                       Pascal Nicolas   and  Laurent Garcia   and  Igor Stephan´
                                 LERIA, University of Angers, France
                      {pascal.nicolas, laurent.garcia, igor.stephan}@univ-angers.fr


                    Abstract                          measures. Possibility theory may be quantitative or qual-
                                                      itative [Dubois and Prade, 1998] according to the range of
    In this work, we deﬁne a new framework in order   these measures which may be the real interval [0, 1], or a ﬁ-
    to improve the knowledge representation power of  nite linearly ordered scale as well. Possibilistic logic provides
    Answer Set Programming paradigm. Our proposal     a sound and complete machinery for handling qualitative un-
    is to use notions from possibility theory to extend certainty with respect to a semantics expressed by means of
    the stable model semantics by taking into account possibility distributions which rank-order the possible inter-
    a certainty level, expressed in terms of necessity pretations. Let us mention that in possibilistic logic we deal
    measure, on each rule of a normal logic program.  with uncertainty by means of classical 2-valued interpreta-
    First of all, we introduce possibilistic deﬁnite logic tions that can be more or less certain.
    programs and show how to compute the conclu-        The aim of our work is to introduce the concepts of pos-
    sions of such programs both in syntactic and se-  sibilistic logic into ASP in order to deal with uncertainty.
    mantic ways. The syntactic handling is done by    This can be illustrated by the following example of a medical
    help of a ﬁx-point operator, the semantic part relies treatment in which a patient is suffering from two diseases.
    on a possibility distribution on all sets of atoms and Each disease can be cured by one drug but the two drugs are
    we show that the two approaches are equivalent. In incompatible. The program P = {dr1 ←  di1, not dr2.,
    a second part, we deﬁne what is a possibilistic sta- dr2 ← di2, not dr1., c1 ← dr1, di1., c2 ← dr2, di2., di1.,
    ble model for a normal logic program, with default di2.} means that the drug dr1 (resp. dr2) is given to a pa-
    negation. Again, we deﬁne a possibility distribu- tient if he suffers from the disease di1 (resp. di2) except if he
    tion allowing to determine the stable models.     takes the drug dr2 (resp. dr1); if a patient suffering from dis-
                                                      ease di1 (resp. di2) takes the drug dr1 (resp. dr2) then he is
1  Introduction                                       cured c1 (resp. c2) of his disease; the patient suffers from the
Answer set programming (ASP) is an appropriate formalism diseases di1 and di2. From this program, two stable mod-
to represent various problems issued from Artiﬁcial Intelli- els {di1, di2, dr1, c1} and {di1, di2, dr2, c2} are obtained.
gence and arising when available information is incomplete However, it seems interesting for a doctor to evaluate the cer-
as in non-monotonic reasoning, planning, diagnosis. . . From tainty of the efﬁciency of the medical treatment. So, it seems
a global view, ASP is a general paradigm covering different natural to combine the certainty degrees of rules allowing to
declarative semantics for different kinds of logic programs. determine the level of certainty of the conclusions.
One is the stable model semantics [Gelfond and Lifschitz, This section continues with a theoretical background on
1988] for deﬁnite logic programs augmented with default possibilistic logic and ASP. Section 2 introduces possibilistic
negation. In ASP, information is encoded by logical rules deﬁnite logic programs and their possibilistic models. Sec-
and solutions are obtained as sets of models. Each model is tion 3 extends our approach to possibilistic stable models for
a minimal set of atoms representing sure informations (some logic programs with default negation. Last, section 4 links
facts) and deductions obtained by applying by default some our work to some others in the same area and gives some per-
rules. So, conclusions rely on present and absent information, spectives.
they form a coherent set of hypotheses and represent a ratio-
nal view on the world described by the rules. Thus, in whole Possibilistic logic. Possibilistic logic, in the necessity-
generality there is not a unique set of conclusions but maybe valued case, handles pairs of the form (p, α) where p is a
many ones and each conclusion is no longer absolutely sure classical logic formula and α is an element of a totally or-
but only plausible and more or less certain.          dered set. The pair (p, α) expresses that the formula p is cer-
  Possibilistic logic [Dubois et al., 1995] is issued from tain at least to the level α. A possibilistic base is denoted
Zadeh’s possibility theory [Zadeh, 1978], which offers a Σ = {(pi, αi)}i∈I . Formulas with degree 0 are not explicitly
framework for representation of states of partial ignorance represented in the knowledge base since only beliefs which
owing to the use of a dual pair of possibility and necessity are somewhat accepted are useful. The higher is the weight,the more certain is the formula. This degree α is evaluated by Herbrand model Cn(P ). The reduct P X of a program P
a necessity measure and it is not a probability. Thus, numeri- wrt. an atom set X is the deﬁnite logic program deﬁned by :
cal values are not an absolute evaluation (like it is in probabil- P X = {r+ | r ∈ P, body−(r) ∩ X = ∅} and it is the core of
ity theory) but induce a certainty (or conﬁdence) scale. More- the deﬁnition of a stable model.
over, let us note that these values are determined by the expert
                                                      Deﬁnition 1.1 [Gelfond and Lifschitz, 1988] Let P be a nor-
providing the knowledge base or they are automatically given
                                                      mal logic program and S an atom set. S is a stable model of
if, as we can imagine, the rules and their conﬁdence degrees
                                                      P if and only if S = Cn(P S).
result from a knowledge discovery process.
  The basic element of possibility theory is the possibility Note that a program may have one or many stable models
distribution π which is a mapping from Ω, the interpreta- or not at all. In this last case we say that the program is in-
tion set, to the interval [0, 1]. π(ω) represents the degree consistent, otherwise it is consistent. When an atom belongs
of compatibility of the interpretation ω with the available in- at least to one stable model of P it is called a credulous con-
formation (or beliefs) about the real world. By convention, sequence of P and when it belongs to every stable model of
π(ω) = 0 means that ω is impossible, and π(ω) = 1 means P , it is called a skeptical consequence of P .
that nothing prevents ω from being the real world (ω is con- Let A be an atom set, r be a rule and P be a program
sistent with all the available beliefs, it is a model of Σ). When (deﬁnite or normal). We say that r is applicable in A if
π(ω) > π(ω0), ω is a preferred candidate to ω0 for being the body+(r) ⊆ A and we denote App(P, A) the subset of P of
real state of the world. From a possibility distribution π, we its applicable rules in A. A satisﬁes r (or r is satisﬁed by
can deﬁne two different ways of rank-ordering formulas of A), denoted A |= r, if r is applicable in A ⇒ head(r) ∈ A.
the language. This is obtained using two mappings grading A is closed under P if ∀r ∈ P, A |= r. P is grounded
respectively the possibility and the certainty of a formula p: if it can be ordered as the sequence hr1, . . . , rni such that
Π(p) = max{π(ω)   | ω |= p} is the possibility (or consis- ∀i, 1 ≤ i ≤ n, ri ∈ App(P, head({r1, . . . , ri−1})). Cn(P ),
tency) degree which evaluates the extent to which p is consis- the least (Herbrand) model of a deﬁnite logic program P , is
tent with the available beliefs expressed by π [Zadeh, 1978]; the smallest atom set closed under P and it can be computed
N(p) = 1 − Π(¬p) = 1 − max{π(ω) | ω 6|= p} is the neces- as the least ﬁx-point of the following consequence operator
                                                           X     X
sity (or certainty) degree which evaluates the extent to which TP : 2 → 2 such that: TP (A) = head(App(P, A)).
p is entailed by the available beliefs.
  Moreover, given a base Σ, only the possibility distri- By this way, we can establish the next result that clariﬁes
butions respecting ∀(p, α) ∈ Σ, N(p)  ≥  α  are sig-  the links between the least model A of a program P and the
niﬁcant and called compatible. A possibility distribu- rules producing it. We see that A is underpinned by a set of
tion π is said to be the least speciﬁc one between all applicable rules, App(P, A), that satisﬁes a stability condi-
compatible distributions if there is no possibility distri- tion and that is grounded. These two features will be used in
bution π0, with π0 6= π, compatible with Σ such that  the sequel to deﬁne the core of our work: a possibility distri-
∀ω, π0(ω) ≥ π(ω). The least speciﬁc possibility distribu- bution over atom sets induced by a deﬁnite logic program.
tion π always exists [Dubois et al., 1995] and is deﬁned by:
     Σ                                                Lemma 1.1  Let P be a deﬁnite logic program and A be an
       ω            Σ     π  (ω) = 1
     if  is a model of , then Σ                       atom set,
         π (ω) = 1 − max{α | ω 6|= p, (p, α) ∈ Σ}
     else Σ                                  .               A is the least          A = head(App(P, A))
                                                                            ⇐⇒
                                                      Herbrand model of P             App(P, A) is grounded
Stable Model Semantics. ASP is concerned by different
kinds of logic programs and different semantics. In our work 2 Possibilistic Deﬁnite Logic Programs
we deal with normal logic programs, interpreted by stable
model semantics [Gelfond and Lifschitz, 1988]. We consider We consider given a ﬁnite set of atoms X and a ﬁnite, totally
                                                      ordered set of necessity values N ⊆]0, 1]. Then, a possibilis-
given a non empty set of atoms X that determines the lan-                                           ∗
guage of the programs1. A normal logic program is a set of tic atom is a pair p = (x, α) ∈ X × N . We denote by p = x
                                                      the classical projection of p and by n(p) = α its necessity de-
rules of the form: c ← a1, . . . , an, not b1, . . . , not bm.
                                                      gree. These notations can also be extended to a possibilistic
where n ≥  0, m ≥  0, {a1, . . . , an, b1, . . . , bm, c} ⊆ X .
A term like not b is called a default negation. The intu- atom set (p.a.s.) A that is a set of possibilistic atoms where
                                                      every atom x occurs at most one time in A.
itive meaning of such a rule is: ”if you have all the ai’s
                                                        A possibilistic deﬁnite logic program (p.d.l.p.) is a set of
and no bj’s then you can conclude c”. For such a rule r we
use the following notations (extended to a rule set as usual): possibilistic rules of the form: r = (c ← a1, . . . , an. , α)
                              +                       n ≥  0, {a , . . . , a , c} ⊆ X , α ∈ N . The classical pro-
the positive prerequisites of r, body (r) = {a1, . . . , an};  1       n
                              −                       jection of the possibilistic rule is r∗ = c ← a , . . . , a .
the negative prerequisites of r, body (r) = {b1, . . . , bm};                                  1       n
the conclusion of r, head(r) = c and the positive projec- n(r) = α is a necessity degree representing the certainty level
          +                    +                      of the information described by r. If R is a set of possibilistic
tion of r, r = head(r) ←   body (r). If a program P              ∗     ∗
does not contain any default negation (ie: body−(P ) = ∅), rules, then R = {r | r ∈ R} is the deﬁnite logic program
then P is a deﬁnite logic program and it has one minimal obtained from P by forgetting all the necessity values.
                                                        Let us recall that a possibilistic logic base is a compact rep-
  1In the sequel, if X is not explicitly given, it is supposed to be resentation of the possibility distribution deﬁned on interpre-
the set of all atoms occurring in the considered program. tations representing the information. Indeed, the treatment ofthe base in a syntactic way (in terms of formulas and neces- The deﬁnition of πP ensures that it is compatible with P .
sity degrees) leads to the same results as the treatment done The third item ranks the sets which may be solutions with
in a semantic way (in terms of interpretations and possibil- respect to the weights of the falsiﬁed rules.
ity distribution). In our framework, the same situation occurs
                                                                     Let  be a p.d.l.p. and    be an atom
as it is shown in the next two subsections. Firstly, we de- Proposition 2.2 P           A  ⊆ X
                                                      set, then
ﬁne a semantic handling of a program that is deﬁned in term
                                                                                    ∗
of a possibility distribution over all atom sets. Secondly, we 1. πP (A) = 1 ⇐⇒ A = Cn(P )
provide a syntactic deduction process that leads to the same 2. A ⊃ Cn(P ∗) ⇒ π (A) = 0
results as the ones given by the possibility distribution.                P
                                                                ∗                                  ∗
                                                        3. Cn(P  ) 6= ∅ ⇒ πP (∅) = 1 − max{n(r) | ∅ 6|= r }
2.1  Model Theory for Possibilistic Deﬁnite Logic                                   r∈P
     Programs                                           Now, we can give the deﬁnition of inference that is, in the
From a possibilistic deﬁnite logic program P , we can deter- framework of ASP, the evaluation of the necessity degree of
mine, as it is done in possibilistic logic, some possibility dis- each atom of the universe.
                             X
tributions deﬁned on all the sets in 2 and that are compatible Deﬁnition 2.2 Let P be a p.d.l.p. and πP the least speciﬁc
with P . Let us note that there is a correspondence between possibility distribution compatible with P , we deﬁne the two
interpretations in propositional logic and atom sets in ASP. dual possibility and necessity measures such that:
Like in possibilistic logic, the possibility degree of an atom  ΠP (x) = max {πP (A) | x ∈ A}
set is determined by the necessity degrees of the rules of the          A∈2X
                                                                NP (x) = 1 − max {πP (A) | x 6∈ A}
program that are not satisﬁed by this set. The satisﬁability of             A∈2X
a rule r is based on its applicability wrt. an atom set A, so
A 6|= r iff body+(r) ⊆ A and head(r) 6∈ A (see section 1). ΠP (x) gives the level of consistency of x with respect to
But, we have to notice that the contradiction of a rule is not the p.d.l.p. P and NP (x) evaluates the level at which x is
enough to determine the possibility degree of a set since, in inferred from the p.d.l.p. P . This is closely related to the
ASP, it is important to take into account the groundedness and deﬁnitions of possibilistic logic. For instance, whenever an
stability notions (see lemma 1.1). Firstly, the set A = {a, b} atom x belongs to the least model of the classical program its
satisﬁes every rule in P = {a ← b., b ← a.}, but it is not possibility is total.
the least model of P because the groundedness is not satis-                               ∗
                     0                                Proposition 2.3 Let P be a p.d.l.p., Cn(P ) the least model
ﬁed. Secondly, the set A = {a, b, d} satisﬁes every rule in of P ∗ and x ∈ X then :
P 0 = {a., b ← a., d ← c.} but it is not the least model of P 0
                                                                   ∗
because d can not be produced by any rule from P 0 applica- 1. x ∈ Cn(P ) ⇒ ΠP (x) = 1 and
                                                                   ∗
ble in A0. In these two cases, the possibility of A and A0 must x 6∈ Cn(P ) ⇒ ΠP (x) = 0
                                                                   ∗
be 0 since they can not be the least model at all, even if they 2. x 6∈ Cn(P ) ⇐⇒ NP (x) = 0
satisfy every rule in their respective associated programs.
                                                        3. x ∈ Cn(P ∗) ⇒
                                        X                                                   ∗
Deﬁnition 2.1 Let P be a p.d.l.p. and π : 2 → [0, 1]      NP (x) =   min   {max{n(r)  | A 6|= r } | x 6∈ A}
be a possibility distribution. π is compatible with P if           A⊂Cn(P ∗) r∈P
  A 6⊆ head(App(P ∗, A)) ⇒ π(A) = 0                           0                 0
                                                       4. Let P be a p.d.l.p., P ⊆ P ⇒ NP (x) ≤ NP 0 (x).
 App(P ∗, A) is not grounded ⇒ π(A) = 0
   A is the least model of P ∗ ⇒ π(A) = 1               Furthermore, the necessity measure allows us to introduce
  otherwise π(A) ≤ 1 − max{n(r) | A 6|= r∗}          the following deﬁnition of a possibilistic model of a p.d.l.p.
                     r∈P
                                                      Deﬁnition 2.3 Let P be a possibilistic deﬁnite logic pro-
  The necessity degree attached to each rule deﬁnes only a
                                                      gram, then the set
lower bound (and not an exact value) of the certainty of the
                                                            ΠM(P  ) = {(x, N (x)) | x ∈ X , N (x) > 0}
rule. So, as recalled in section 1, many possibility distribu-             P              P
                                                      is its possibilistic model.
tions are compatible with these degrees. But, we are only in-
terested by the least informative one, that is the least speciﬁc Proposition 2.4 Let P be a p.d.l.p. then : (ΠM(P ))∗ is the
one, whose characterization is given below.           least model of P ∗.
                                         X
Proposition 2.1 Let P be a p.d.l.p. then πP : 2 → [0, 1] Example 2.1 Let us take the following program P =
deﬁned by                                             {(a., 0.8), (b ← a., 0.6), (d ← a., 0.5), (d ← c., 0.9)}.
                     ∗
 1. if A 6⊆ head(App(P , A)) then πP (A) = 0          The least speciﬁc possibility distribution induced by P is null
            ∗                                         for every atom set included in {a, b, c, d} except for πP (∅)
 2. if App(P , A) is not grounded then πP (A) = 0
                                                      = 0.2, πP ({a}) = 0.4, πP ({a, b})=0.5, πP ({a, d})=0.4 and
                                                                                      ∗
 3. otherwise                                         πP ({a, b, d})=1 (the least model of P ). So, we can compute
                      ∗
      • if ∀r ∈ P, A |= r then πP (A) = 1             the possibility of each atom: ΠP (a) = ΠP (b) = ΠP (d) = 1
                                                      and ΠP (c) = 0 and its certainty in term of necessity de-
      • otherwise 0 ≤ πP (A) < 1 and
                                    ∗                 gree: NP (a) = 0.8, NP (b) = 0.6, NP (c) = 0, NP (d) = 0.5.
        πP (A) = 1 − max{n(r) | A 6|= r }
                    r∈P                               Thus, ΠM(P  ) =  {(a, 0.8), (b, 0.6), (d, 0.5)} is the possi-
is the least speciﬁc possibility distribution.        bilistic model of P .2.2  Fix-point Theory for Possibilistic Deﬁnite       Example 2.2 Let  P   be  the  p.d.l.p.    of  exam-
                                                                       0              1
     Logic Programs                                   ple 2.1, then ΠTP (∅) =   ∅, ΠTP (∅)  =   {(a, 0.8)},
                                                         2                                       3
Deﬁnitions exposed in this subsection are closely related to ΠTP (∅) = {(a, 0.8), (b, 0.6), (d, 0.5)}, ΠTP (∅) =
                                                                                     k
what can be found in [Dubois et al., 1991]. But here, we {(a, 0.8), (b, 0.6), (d, 0.5)} = ΠTP (∅), ∀k > 3. So,
adopt an ASP point of view and thus we use atom sets in- ΠCn(P ) = {(a, 0.8), (b, 0.6), (d, 0.5)}.
stead of classical interpretations since the underlying possi- Theorem 2.1 Let P be a p.d.l.p., then ΠCn(P ) = ΠM(P ).
bility distribution is deﬁned on atom sets.
                          X ×N                        As illustrated and formalized above, our operator ΠTP can
Deﬁnition 2.4 Consider A = 2   the ﬁnite set of all p.a.s. be used to compute the possibilistic model of a p.d.l.p. This
induced by X and N . ∀A, B ∈ A, we deﬁne:             result shows the equivalence between the syntactic and se-
  A u B   = {(x, min{α, β}), (x, α) ∈ A, (x, β) ∈ B}
                                   ∗                  mantic approaches in our framework, whereas in [Dubois et
  A t B   = {(x, α) | (x, α) ∈ A, x 6∈ B }            al., 1991] only a syntactic treatment of a p.d.l.p. is proposed.
          ∪{(x, β) | x 6∈ A∗, (x, β) ∈ B}
          ∪{(x, max{α, β}) | (x, α) ∈ A, (x, β) ∈ B}
                 A∗ ⊆ B∗, and ∀a, α, β,              3   Possibilistic Normal Logic Programs
  A v B   ⇐⇒
                  (a, α) ∈ A ∧ (a, β) ∈ B ⇒ α ≤ β     3.1  Possibilistic Normal Logic Programs and
Proposition 2.5 hA, vi is a complete lattice.              Possibilistic Stable Models
                                                      Here, we extend our proposal to non-monotonic reasoning
Deﬁnition 2.5 Let r = (c ← a , . . . , a ., α) be a possi-
                           1        n                 by allowing default negation in programs and we formalize
bilistic rule and A be a p.a.s.,
                                                      the notion of possibilistic stable model. It extends the sta-
  • r is α-applicable in A if body(r∗) = ∅            ble model semantics by taking into account the necessity de-
  • r is β-applicable in A if β = min {α, α1, . . . , αn}, gree in the rules of a given possibilistic normal logic program
                              2
    {(a1, α1), . . . , (an, αn)} ⊆ A,                 (p.n.l.p.). Such a program is a ﬁnite set of rules of the form :
                                                      (c ← a , . . . , a , not b , . . . , not b . , α) n ≥ 0, m ≥ 0
  • r is 0-applicable otherwise.                            1       n      1          m
                                                      for which we just have to precise that ∀i, bi ∈ X , all the rest
And, for a given p.d.l.p. P and an atom x, App(P, A, x) = being the same as for a p.d.l.p. (see the begining of section 2).
              ∗
{r ∈ P | head(r ) = x, r is ν-applicable in A, ν > 0}   As in the classical case without necessity value, we need to
  The applicability degree of a rule r captures the certainty of deﬁne what is the reduction of a program before introducing
the inference process realized when r is applied wrt. a p.a.s. the possibilistic stable model semantics.
A. If the body of r is empty, then r is applicable with its own Deﬁnition 3.1 Let P be a p.n.l.p. and A be an atom set.
certainty. If the body of r is not veriﬁed (not satisﬁed by A), The possibilistic reduct of P wrt. A is the p.d.l.p. P A =
then r is not at all applicable. Otherwise, the applicability {((r∗)+, n(r)) | r ∈ P, body−(r) ∩ A = ∅}.
level of r depends on the certainty level of the propositions
                                                      Deﬁnition 3.2 Let P be a p.n.l.p. and S a p.a.s. S is a pos-
inducing its groundedness and on its own necessity degree.                                           ∗
Firstly, the necessity degree of a conjunction (the rule body) sibilistic stable model of P if and only if S = ΠCn(P (S )).
is the minimal value of the necessity values of subformulae By analogy with classical normal logic programs (without
(atoms) involved in it. Secondly, the certainty of a rule appli- necessity values attached to rules) we say that a p.n.l.p. P
cation is the minimal value between the rule certainty and the is consistent if P has at least one possibilistic stable model.
certainty of the rule body. This approach is similar to the res- Otherwise P is said to be inconsistent. Furthermore when a
olution principle in possibilistic logic [Dubois et al., 1995]. possibilistic atom belongs at least to one possibilistic stable
Deﬁnition 2.6 Let P be a p.d.l.p. and A be a possibilistic model of P it is called a credulous possibilistic consequence
atom set. The immediate possibilistic consequence operator of P and when it belongs to every possibilistic stable model
ΠTP maps a p.a.s. to another one by this way: ΠTP (A) = of P , it is called a skeptical possibilistic consequence of P .
    (                  ∗                     )
      (x, δ) | x ∈ head(P ), App(P, A, x) 6= ∅,       Example 3.1 We are now  able to represent the example
      δ =    max     {ν | r is ν-applicable in A}
          r∈App(P,A,x)                                of the introductory section with some levels of cer-
                         k                            tainty by P  =  {(dr1  ←   di1, not dr2., 1), (dr2 ←
then the iterated operator ΠTP is deﬁned by
     0                  n+1           n               di2, not dr1., 1), (c1  ←     dr1, di1., 0.7), (c2 ←
  ΠTP  = ∅    and    ΠTP    = ΠTP  (ΠTP ), ∀n ≥ 0 .   dr2, di2., 0.3), (di1., 0.9), (di2., 0.7)}. The two ﬁrst
  Here, we can remark that if one conclusion is obtained by rules express that for each disease we have an appropriate
different rules, its certainty is equal to the greatest certainty drug, these two drugs are incompatible, but their appro-
with which it is obtained in each case (operator max). Again, priateness is fully certain. The third (resp. fourth) rule
it is in accordance with possibilistic resolution principle. expresses that drug dr1 (resp. dr2) has an efﬁciency quasi
                                                      certain (resp little certain) for the disease di1 (resp di2).
Proposition 2.6 Let P be a p.d.l.p., then ΠTP has a least
               n                                      The two last rules (some observations) represent that the
ﬁx-point tn≥0ΠTP (∅) that we called the set of possibilistic
consequences of P and we denote it by ΠCn(P ).        diagnosis of the disease di1 (resp. di2) is quasi certain (resp.
                                                      almost certain). Then, the two possibilistic stable models
  2For two p.a.s. A and B, A ⊆ B means the classical set inclu- of P are {(di1, 0.9), (di2, 0.7), (dr1, 0.9), (c1, 0.7)} and
sion and has not to be confused with the order v of def. 2.4. {(di1, 0.9), (di2, 0.7), (dr2, 0.7), (c2, 0.3)}. So, the doctorcan observe that he has an alternative. On one hand, he can 0.2, π˜P ({a, b, c}) = 0.4, π˜P ({a, b, d}) = 0.5 and
give the drug dr1 and the patient will be almost certainly π˜P ({a, b, c, e}) =π ˜P ({a, b, d, e}) = 1 ({a, b, c, e} and
cured of the disease di1. On the other hand, he can give the {a, b, d, e} are the two stable models of P ∗).
drug dr2 and the patient will be cured of the disease di2 with
                                                      Deﬁnition 3.4 Let P be a p.n.l.p. and π˜P its associated pos-
a low certainty degree. However, if the doctor considers that sibility distribution, we deﬁne the two dual possibility and
disease di2 is very serious, maybe he will choose the drug necessity measures such that:
dr2 even if the degree is lower. That is why it is interesting
                                                               Π˜ P (x) = max {π˜P (A) | x ∈ A}
to keep the two stable models in which every conclusion is              A∈2X
weighted with a certainty degree.                              N˜P (x) = 1 − max {π˜P (A) | x 6∈ A}.
                                                                            A∈2X
Proposition 3.1 Let P be a p.n.l.p.                   Proposition 3.3 Let P be a consistent p.n.l.p. and x ∈ X ,
                                                                                       ∗
 1. Let A be a possibilistic stable model of P and α ∈  1. x is a credulous consequence of P ⇒ Π˜ P (x) = 1
    N , α > 0, then (x, α) ∈ A ⇐⇒ α = NP A∗ (x).                                         ∗
                                                        2. x is not a skeptical consequence of P ⇐⇒ N˜P (x) = 0
                            ∗
 2. Let S be a stable model of P , then {(x, N S (x)) | x ∈
                                       P                Let us remark that if an atom x is not a credulous conse-
    X , NP S (x) > 0} is a possibilistic stable model of P .
                                                      quence of P then it does not necessarily imply that Π˜ P (x) =
 3. Let A be a possibilistic stable model of P , then A∗ is a 0 as it is the case for an atom that is not a consequence of
    stable model of P ∗.                              a p.d.l.p. (see proposition 2.3 item 1). For instance, P =
  This result shows that there is a one-to-one mapping be- {(a., 0.6), (b ← not a., 0.7)} has only one p.s.m. {(a, 0.6)}
tween the possibilistic stable models of a p.n.l.p P and the so b is not a possibilistic credulous consequence of P . But,
stable models of its classical part P ∗. It shows that the deci- the possibility distribution is π˜P (∅) = 0.3, π˜P ({a}) =
                                                                                         ˜
sion problem of existence of a p.s.m. for a p.n.l.p. stays in the 1, π˜P ({b}) = 0.4 and π˜P ({a, b}) = 0 so ΠP (b) = 0.4. This
same complexity class as the decision problem of existence of is because, with this program, b is not completely impossi-
a stable model for a normal logic program. So, it is an NP- ble. In fact, b is not a credulous consequence only because a
complete problem. Furthermore, it indicates an easy way to blocks the applicability of the rule concluding b. So, in other
implement a system able to compute a p.s.m. of a p.n.l.p P . words if we have a then we can not have b, but if a is absent
First, one can use a software (as Smodels [Niemela¨ and Si- then we can have b. Since, the certainty of a is only 0.6, so
mons, 1997] or DLV [Eiter et al., 1998]) to compute the stable the possibility of b is naturally 0.4.
models of P ∗. Second, for every found stable model A, our
operator ΠTP A can be used to compute (in polynomial time) 4 Discussion and Conclusion
the corresponding p.s.m. ΠCn(P A) of P .              In this work, we have proposed a way to deal with logic pro-
                                                      grams taking into account a level of certainty for each rule.
3.2  Possibility Distribution deﬁned upon a Normal    First, we have given two equivalent ways, a semantic and a
     Logic Program                                    syntactic one, for dealing with possibilistic deﬁnite logic pro-
In the previous deﬁnition 3.2 we have proposed a syntactic grams. Then, we have shown how to extend our framework
way to compute the possibilistic stable models of a p.n.l.p. by to possibilistic normal logic programs in order to obtain what
using the ﬁx-point operator ΠCn deﬁned for a p.d.l.p. Now, we called possibilistic stable models. In addition to this work,
we examine the semantics that can be given to this framework we have described in [Nicolas et al., 2005] an application of
by deﬁning a possibility distribution induced by the necessity our proposal to deal with inconsistent normal logic programs.
values associated to each normal rules. This distribution π˜ There are alternative formalisms for extending non-
over all the atom sets (i.e. over 2X ) has to reﬂect the ability of monotonic reasoning with qualitative or quantitative weights.
every atom set to be a stable model of P ∗ and that is achieved In [Nerode et al., 1997], annotated non-monotonic rule sys-
by the next deﬁnitions.                               tems are introduced to affect on every piece of knowledge a
                                                      weight representing a probability, an uncertainty measure, a
Deﬁnition 3.3 Let P be a p.n.l.p. and A be an atom set, then
                                         X            time, a place,. . . For instance for a logic program, it leads to
π˜P is the possibility distribution deﬁned by π˜P : 2 → [0, 1]
                    X                                 rules like (c, 0.4) ← (a, 0.5), (not b, 0.7). This approach is
and respecting: ∀A ∈ 2 , π˜P (A) = πP A (A).          different to our since we put weights on rules and not on each
  One can observe that deﬁnition of π˜P can be paraphrased atom in the rules. Another divergence is the meaning of the
by: ”the possibility for an atom set A to be a stable model of weights : in our work we deal with uncertainty while they
P is its possibility to be the least model of the program P re- develop a formalism in which the semantic of weights is not
ducted by A”. This deﬁnition is natural wrt. the deﬁnition 1.1 established a priori. In [Damasio and Pereira, 2001a; 2001b;
of a stable model and is justiﬁed by the next result. Dubois et al., 1991; Benferhat et al., 1993; Loyer and Strac-
                                                      cia, 2003; Alsinet and Godo, 2000] the reader can ﬁnd dif-
Proposition 3.2 Let P be a p.n.l.p. and A ∈ 2X be an atom
                                                      ferent propositions about multi-valued or probabilistic logic
set, then π˜ (A) = 1 ⇐⇒ A is a stable model of P ∗.
        P                                             programs, about possibilistic deﬁnite logic programs, about
Example 3.2 The possibility distribution induced by the levels of certainty ranking atoms, but not rules, involved in
p.n.l.p. P = {(a., 1), (b., 1), (c ← a, not d., 0.4), (d ← a non-monotonic reasoning,. . . But, none of these works de-
b, not c., 0.8), (e ← c., 0.6), (e ← d., 0.5)} is null for every scribes a formalism dealing with uncertainty in a logic pro-
atom set included in {a, b, c, d, e} except for π˜P ({a, b}) = gram with default negation by means of possibilistic theory,