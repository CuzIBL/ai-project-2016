      Terminological Cycles in a Description Logic with Existential Restrictions* 

                                                    Franz Baader 
                                           Theoretical Computer Science 
                                                      TU Dresden 
                                             D-01062 Dresden, Germany 
                                              baader@inf.tu-dresden.de 


                        Abstract                               of technology rather than need. In fact, the Galen medical 
                                                               knowledge base contains many cyclic dependencies [Rector 
     Cyclic definitions in description logics have un•         and Horrocks, 1997]. Also, even in the case of acyclic ter•
     til now been investigated only for description log•       minologies, our polynomial subsumption algorithm improves 
     ics allowing for value restrictions. Even for the         on the usual approach that first unfolds the TBox (a poten•
     most basic language which allows for con•                 tially exponential step) and then applies the polynomial sub•
     junction and value restrictions only, deciding sub-       sumption algorithm for -concept descriptions [Baader et 
     sumption in the presence of terminological cycles         al., 1999]. 
     is a PSPACE-complete problem. This paper inves•
                                                                 The first thorough investigation of cyclic terminologies in 
     tigates subsumption in the presence of terminolog•
                                                               description logics (DL) is due to Nebel [1991], who intro•
     ical cycles for the language . , which allows for 
                                                               duced three different semantics for such terminologies: least 
     conjunction, existential restrictions, and the top-
                                                               fixpoint (lfp) semantics, which considers only the models that 
     concept. In contrast to the results for , sub-
                                                               interpret the defined concepts as small as possible; greatest 
     sumption in remains polynomial, independent 
                                                               fixpoint (gfp) semantics, which considers only the models 
     of whether we use least fixpoint semantics, greatest 
                                                               that interpret the defined concepts as large as possible; and 
     fixpoint semantics, or descriptive semantics. 
                                                               descriptive semantics, which considers all models. 
                                                                 In [Baader, 1990; 1996], subsumption w.r.t. cyclic termi•
1 Introduction                                                 nologies in the small DL which allows for conjunction 
                                                               and value restrictions only, was characterized with the help of 
Early description logic (DL) systems allowed the use of value 
                                                               finite automata. This characterization provided PSPACE de•
restrictions but not of existential restrictions 
                                                               cision procedures for subsumption in with cyclic termi•
Thus, one could express that all children are male using the 
                                                               nologies for the three types of semantics introduced by Nebel. 
value restriction Male, but not that someone has a son 
                                                               In addition, it was shown that subsumption is PSPACE-hard. 
using the existential restriction The main rea•
                                                               The results for cyclic -terminologies were extended by 
son was that, when clarifying the logical status of property 
                                                               Kiisters [ 1998] to ALN, which extends by atomic nega•
arcs in semantic networks and slots in frames, the decision 
                                                               tion and number restrictions. 
was taken that arcs/slots should be read as value restrictions 
                                                                 The fact that the DL ACC (which extends FL       by full 
(see, e.g., [Nebel, 1990]). Once one considers more expres•                                                     0
                                                               negation) is a syntactic variant of the multi-modal logic K 
sive DLs allowing for full negation, existential restrictions 
                                                               opens a way for treating cyclic terminologies and more gen•
come in as the dual of value restrictions [Schmidt-SchauB 
                                                               eral recursive definitions in more expressive languages like 
and Smolka, 1991]. Thus, for historical reasons, DLs that 
                                                               ACC and extensions thereof by a reduction to the modal mu-
allow for existential, but not for value restrictions, are largely 
                                                               calculus [Schild, 1994; De Giacomo and Lenzerini, 1994]. In 
unexplored. In the present paper, we investigate termino•
                                                               this setting, one can use a mix of the three types of semantics 
logical cycles in the DL which allows for conjunction, 
                                                               introduced by Nebel. However, the complexity of the sub•
existential restrictions, and the top-concept. In contrast to 
                                                               sumption problem is EXPTIME-complete. 
(even very inexpressive) DLs with value restrictions, sub-
sumption in remains polynomial in the presence of ter•           In spite of these very general results for cyclic definitions 
minological cycles. It should be noted that there are in•      in expressive languages, there are still good reasons to look 
deed applications where the small appears to be suffi•         at cyclic terminologies in less expressive (in particular sub-
cient. In fact, SNOMED, the Systematized Nomenclature of       Boolean) description logics. One reason is, of course, that 
Medicine [Cote et a/., 1993] employs [Spackman, 2001;          one can hope for a lower complexity of the subsumption prob•
Spackman et al., 1997]. Even though SNOMED does not            lem. For DLs with value restrictions, this hope is not fulfilled, 
appear to use cyclic definitions, this may be due to a lack    though. Even in the inexpressive DL subsumption be•
                                                               comes PSPACE-complete if one allows for cyclic definitions. 
   * Partially supported by the DFG under grant BA 1122/4-3.   This is still better than the EXPTIME-completeness that one 


DESCRIPTION LOGICS                                                                                                   325                                                                For some applications, it is more appropriate to interpret 
                                                               cyclic concept definitions with the help of an appropriate fix-
                                                               point semantics. Before defining least and greatest fixpoint 
                                                               semantics formally, let us illustrate their effect on an exam•
                                                               ple. 
                                                               Example 1 Assume that our interpretations are graphs where 
                                                               we have nodes (elements of the concept name Node) and 
                                                               edges (represented by the role edge), and we want to define 
                                                               the concept I node of all nodes lying on an infinite (possibly 
 has in ACC with cyclic definitions, but from the practical    cyclic) path of the graph. The following is a possible defini•
 point of view it still means that the subsumption algorithm   tion of Inode: 
 may need exponential time.                                      Now consider the following interpretation of the primitive 
   In contrast, the subsumption problem in can be decided      concepts and roles: 
 in polynomial time w.r.t. the three types of semantics intro•
 duced by Nebel. The main tool used to show these results 
 is a characterization of subsumption through the existence of 
 so-called simulation relations. 
   In the next section we will introduce the DL as well 
 as cyclic terminologies and the three types of semantics for  Where there 
 these terminologies. Then we will show in Section 3 how       are four possible ways of extending this interpretation of the 
 such terminologies can be translated into description graphs. primitive concepts and roles to a model of the TBox consist•
 In this section, we will also define the notion of a simulation ing of the above concept definition: Inode can be interpreted 
between nodes of a description graph, and mention some use•    by M U N, M, N, or All these models are admissible 
ful properties of simulations. The next three sections are then w.r.t. descriptive semantics, whereas the first is the gfp-model 
devoted to the characterization of subsumption in w.r.t. and the last is the lfp-model of the TBox. Obviously, only 
gfp, Ifp, and descriptive semantics, respectively.             the gfp-model captures the intuition underlying the definition 
                                                               (namely, nodes lying on an infinite path) correctly. 
                                                                 It should be noted, however, that in other cases descrip•
2 Cyclic terminologies in the DL                               tive semantics appears to be more appropriate. For example, 
Concept descriptions arc inductively defined with the help of  consider the definitions 
a set of constructors, starting with a set Nc ofconcept names 
and a set NR of role names. The constructors determine the 
expressive power of the DL. We restrict the attention to the 
        whose concept descriptions are formed using the con•   With respect to gfp-semantics, the defined concepts Tiger and 
structors top-concept (T), conjunction , and existen•          Lion must always be interpreted as the same set whereas this 
tial restriction . The semantics of £L-concept descrip•        is not the case for descriptive semantics.l 
tions is defined in terms of an interpretation 
                                                                 Before we can define lfp- and gfp-semantics formally, we 
The domain is a non-empty set of individuals and the 
                                                               must introduce some notation. Let T be an con•
interpretation function I maps each concept name A £ N
                                                         c     taining the roles the primitive concepts N        and the 
to a subset of _ and each role to a binary re•                                                               prim
                                                               defined concepts . . A primitive inter•
lation The extension of to arbitrary concept 
descriptions is inductively defined, as shown in the third col• pretations J for T is given by a domain , an interpreta•
umn of Table 1.                                               tion of the roles . by binary relations 
   A terminology (or TBox for short) is a finite set of con•   and an interpretation of the primitive concepts 
cept definitions of the form where A is a concept             by subsets . Obviously, a primitive interpretation 
name and D a concept description. In addition, we require     differs from an interpretation in that it does not interpret the 
that TBoxes do not contain multiple definitions, i.e., there  defined concepts in We say that the interpretation X 
                                                               is based on the primitive interpretation J iff it has the same 
cannot be two distinct concept descriptions D\ and D2 such 
that both belongs to the TBox. Con•                           domain as J and coincides with J on Nrole and Nprim. For 
cept names occurring on the left-hand side of a definition are a fixed primitive interpretation J, the interpretations X based 
called defined concepts. All other concept names occurring    on it are uniquely determined by the tupleof 
in the TBox are called primitive concepts. Note that we al•   the interpretations of the defined concepts in , We define 
low for cyclic dependencies between the defined concepts,          lnt{J) := {X I X is an interpretation based on J}. 
i.e., the definition of A may refer (directly or indirectly) to 
A itself. An interpretation X is a model of the TBox T iff    Interpretations based on J can be compared by the following 
it satisfies all its concept definitions, i.e., for all       ordering, which realizes a pairwise inclusion test between the 
definitions                                                       'This example is similar to the "humans and horses" example 
  The semantics of (possibly cyclic) we have                  used by Nebel [ 1991 ] to illustrate the difference between descriptive 
just defined is called descriptive semantic by Nebel [1991].  semantics and gfp-semantics in ACM. 


326                                                                                              DESCRIPTION LOGICS respective interpretations of the defined concepts: if           • is a set of edges labeled by role 
Int(J), then                                                        names; 
                                                                 • is a function that labels nodes with sets 
                                                                    of primitive concepts. 
It is easy to see that induces a complete lattice on Jnt(J),     The normalized TBox T can be translated into the follow•
i.e., every subset of Int (J) has a least upper bound (lub) and ing £ L-description graph 
a greatest lower bound (gib). Using Tarski 's fixpoint theorem 
[Tarski, 1955] for complete lattices, it is not hard to show     • the nodes of GT are the defined concepts of T; 
[Nebel, 1991] that, for a given primitive interpretation J,      • if A is a defined concept and 
there is always a greatest and a least model of 
T based on J. We call these models respectively the greatest 
fixpoint model (gfp-model) and the least fixpoint model (lfp-       its definition in T, then 
model) of T. Greatest (least) fixpoint semantics considers 
only gfp-models (lfp-models) as admissible models. 
Definition 2 Let T be an £L-TBox and A, B be defined con•
cepts  occurring in T. Then, 
     2                                                         Any primitive interpretation can be trans•
   • A is subsumed by B w.r.t. descriptive semantics           lated into the following EL-description graph Gj = 
     B) iff. holds for all models I of T. 
   • A is subsumed by B w.r.t. gfp-scmantics                     • the nodes of Gj are the elements of 
     iff _ holds for all gfp-models X of T. 
   • A is subsumed by B w.r.t. lfp-semantics 
     iff holds for all lfp-models 1 of T. 
                                                                 The translation between £L-TBoxes (primitive interpreta•
   We will show in the following that all three subsumption    tions) and £L-description graphs works in both directions, 
problems are decidable in polynomial time. To do this, we      i.e., any EL-description graph can also be view as an £L-
represent EL-TBoxes as graphs.                                 TBox (primitive interpretation). 
                                                                 Simulations are binary relations between nodes of two £C-
3 Description graphs and simulations                           description graphs that respect labels and edges in the sense 
                                                               defined below. 
£L-TBoxes as well as primitive interpretations can be rep•
resented as description graphs. Before we can translate £L-    Definition 4 
TBoxes into description graphs, we must normalize them. In     description graphs. The binary relation 

the following, let T be an Ndef the defined con•               simulation from Gi to G-i iff 
cepts of T, Nprim the primitive concepts of T, and Nrol€ the 
roles of T. 
   We say that the is normalized iff 
implies that D is of the form 


                                                                 It is easy to see that the set of all simulations from G\ to G2 
   Since there is a polynomial translation of general TBoxes   is closed under arbitrary unions. Consequently, there always 
into normalized ones [Baader, 2002], one can restrict the at•  exists a greatest simulation from G1 to G2- If G1, G2 are finite, 
tention to normalized TBoxes. Thus, we will assume that        then this greatest simulation can be computed in polynomial 
all TBoxes are normalized. Normalized £L-TBoxes can            time [Henzinger et a/., 1995]. The following proposition is 
be viewed as graphs whose nodes are the defined concepts,      an easy consequence of this fact (see [Baader, 2002]). 
which are labeled by sets of primitive concepts, and whose 
                                                               Propositions Let G1,G2 be two finite EL-description 
edges are given by the existential restrictions. For the rest of 
                                                               graphs, V1 a node of G\ and V2 a node of G2. Then we 
this section, we fix a normalizedwith primitive                can decide in polynomial time whether there is a simulation 
concepts defined conceptsand roles 
Definition 3 An £ C-description graph is a graph G = 
{V,E,L) where                                                  4 Subsumption w.r.t gfp-semantics 
   • V is a set of nodes;                                      In the following, let T be a normalized EL-TBox with primi•

                                                               tive concepts Nprim, defined concepts Ndef, and roles Nrole. 
   2Obviously, we can restrict the attention to subsumption between 
defined concepts since subsumption between arbitrary concept de• Before characterizing subsumption w.r.t. gfp-semantics, we 
scriptions can be reduced to this problem by introducing definitions give a characterization of when an individual of a gfp-model 
for the descriptions.                                          belongs to a defined concept in this model. 


DESCRIPTION LOGICS                                                                                                    327 Proposition 6 Let J be a primitive interpretation and X the 
gfp-model of T based on J. Then the following are equiva-
lent for any. 

  2. There is a simulation 
  This proposition (whose proof can be found in [Baader, 
2002]), can now be used to prove the following characteriza•
tion of subsumption w.r.t. gfp-semantics in 
Theorem 7 Let T be an £C-TBox and A, B defined concepts 
                                                                 Figure 1: The £L-description graph GT of Example 9. 
in T. Then the following are equivalent: 

  1. A Cgf,r B. 
                                                              i.e., CycT consists of the nodes in GT that can reach a cyclic 
  2. There is a simulation Z: GT ~ GT WITH (B, A) E Z.        path in GT• The following proposition is an easy consequence 
                                                              of the definition of lfp-semantics and of (see [Baader, 
Proof (2 => 1) Assume that the simulation Z: GT ~ GT sat" 
isfies . Let J be a primitive interpretation and I            2002]). 
the gfp-model of T based on J. We must show that x € A1       Proposition 10 Let T be an £C-TBox and A a defined con•
implies x € BI.                                               cept in T.then A is unsatisfiable w.r.t. lfp-
  By Proposition 6, implies that there is a simulation        semantics, i. e., holds for all Ifp-models X of T. 
             such that (A, x) Y. It is easy to show that the 
composition X :— Z o Y is a simulation from such In Example 9, all the defined concepts belong to CycT, and 
that (B, x) X. By Proposition 6, this implies                 thus they are all unsatisfiable w.r.t. lfp-semantics. 
  (1 => 2) Assume thatWe consider the graph                      Since all the defined concepts in Cycr are unsatisfiable, 
£7r> and view it as an description graph of a primitive       their definitions can be removed from the TBox without 
interpretation. Thus, let J be the primitive interpretation with changing the meaning of the concepts not belonging to CycT. 
                                                              (Their definition cannot refer to an element of Cycr.) This 
GT = GJ and let I be the gfp-model of T based on J. 
                                                              leaves us with an acyclic terminology, on which gfp- and lfp-
  Since the identity is a simulation Id: GT GT = Gj that 
                                                              semantics coincide [Nebel, 1991]. Thus, subsumption w.r.t. 
satisfies , Proposition 6 yields A A           . But then 
                                               1              lfp-semantics in £L can be reduced to subsumption w.r.t. gfp-
          B implies A , and thus Proposition 6 yields 
                                                              semantics. 
the existence of a simulation such that 
(B,A) Z. D Corollary 11 Subsumption w.r.t. lfp-semantics in £C can be 
                                                              decided in polynomial time. 
  The theorem together with Proposition 5 shows that sub-
sumption w.r.t. gfp-semantics in is tractable.                6 Subsumption w.r.t. descriptive semantics 
Corollary 8 Subsumption w.r.t. gfp-semantics in can be 
                                                              Let T be an £L-TBox and GT the corresponding £L-
decided in polynomial time. 
                                                              description graph. Since every gfp-model of T is a model 
Example 9 Consider the TBox T consisting of the following     of T, implies Consequently, 
concept definitions: 
                                                                       implies that there is a simulation Z: GT ~ GT with 
                                                              (B, A) Z. In the following we will show what additional 
                                                              properties the simulation Z must satisfy for the implication 
The £ L-description graph GT corresponding to this TBox can 
                                                              in the other direction to hold. 
be found in Figure 1. Let VT - {A, A',B, C, D} denote the 
                                                                To get an intuition on the difference between gfp- and de•
set of nodes of this graph. Then is a simulation 
                                                              scriptive semantics, let us consider Example 9. With respect 
from GT to GT- Consequently, all the defined concepts in T 
                                                              to gfp-semantics, all the defined concepts of T are equivalent 
subsume each other w.r.t. gfp-semantics. 
                                                              (i.e., subsume each other). With respect to descriptive seman•
                                                              tics, A, B, D are still equivalent, C is equivalent to A', but A' 
5 Subsumption w.r.t. Ifp-semantics                            is not equivalent to B, and C and D are also not equivalent 
For the sake of completeness, we also treat lfp-semantics.    (in both cases, the concepts are not even comparable w.r.t. 
It should be noted, however, that the results of this section subsumption). 
demonstrate that lfp-semantics is not interesting in            To see that C and A' are equivalent w.r.t. descriptive se•
  Let T be an and GT THE corresponding                        mantics, it is enough to note that the following identities hold 
description graph. Where A,B are nodes of GT, We write        in every model X of T: .A similar 
                                                              argument shows that B and D are equivalent. In addition, 
       B to denote that there is a path in GT from AtoB, 
                                                              equivalence of C and A' also implies equivalence of A and 
and B to denote that there is a non-empty path in GT          B. The following model of T is a counterexample to the 
from A to B. We define the set as                             other subsumption relationships: 
       there exists a node B such that 


328                                                                                              DESCRIPTION LOGICS            Figure 2: A (B, i4)-simulation chain.                      Figure 3: A partial (B, A)-simulation chain. 

                                                              Definition 14 The simulation is called (B, ,4)-
                                                              synchronized iff there exists a selection function S for A, B 
  We will see below that the reason for A! and B not being    and Z such that the following holds: for every infinite S-
                                                              selected (B, A)-simulation chain of the form depicted in Fig•
equivalent is that in the infinite path in Gr starting with Af, 
one reaches D with an odd number of edges, whereas C is       ure 2 there exists an i 0 such that 
reached with an even number; for the path starting with B,    We are now ready to state our characterization of subsump-
it is just the opposite. In contrast, the infinite paths starting tion w.r.t. descriptive semantics (see [Baader, 2002] for the 
respectively with A and B "synchronize" after a finite number proof). 
of steps. To formalize this intuition, we must introduce some 
notation.                                                     Theorem 15 Let T be an and A, B defined con•
                                                              cepts in T. Then the following are equivalent: 
                                                                7. 
                                                                2. There is a (B,A)-synchronizedsimulation 
                                                                   such that (B, A) Z. 
                                                                It remains to be shown that property (2) of the theorem can 
  Consider the T Box T and the simulation Z introduced in     be decided in polynomial time. To this purpose, we construct 
Example 9. Then                                               a simulation Y such that (2) of Theorem 15 is equivalent to 
                                                              (B,A) € Y (see [Baader, 2002] for the proof that this is 
                                                              indeed the case): 
                                                              We define Y := (J 
                                                                                Un>o Yn, where the relations Yn are defined 
is a (B, A-simulation chain w.r.t. Z, and                     by induction on n: Y0 is the identity on the nodes of GT- If 
                                                              Yn is already defined, then 


is a (B, A'-simulation chain w.r.t. Z. Note that the first chain 
synchronizes after a finite number of steps in the sense that 
there is a Z-link between the same defined concept. In con•
trast, the second chain does not synchronize in this sense. 
  If (B, A) Z, then (S2) of Definition 4 implies that, for    The relation Y can obviously be computed in time polyno•
every infinite path p1 starting with B0 := B, there is an infi•
                                                              mial in the size of GT- By using the techniques employed 
nite path p2 starting with A0 := A such thatpi is Z-simulated to decided Horn-SAT in linear time [Dowling and Gallier, 
by p2. In the following we construct such a simulating path   1984], it is not hard to show that Y can actually be computed 
step by step. The main point is, however, that the decision 
                                                              in time quadratic in the size of GT 
which concept An to take in step n should depend only on 
the partial (B,,4)-simulation chain already constructed, and  Corollary 16 Subsumption w.r.t. descriptive semantics in 
                                                              can be decided in polynomial time. 
not on the parts of the path p1 not yet considered. 
Definition 13 A partial (B,A)-simulation chain is of the        An alternative way for showing the polynomiality result 
form depicted in Figure 3. A selection function S for A, B    would be to reduce the existence of a (B, A)-synchronized 
and Z assigns to each partial (B, A-simulation chain of this  simulation Z satisfying (B, A) Z to the strategy problem 
form a defined concept An such that is an                     for a certain two-player game with a positional winning con•
edge in Gr and (Bn, An) Z.                                    dition. The existence of a winning strategy is in this case a 
                                                              polynomial time problem [Gradel, 2002]. 
  Given a path_ • • • and a 
defined concept A such that one can use a selec•              7 Future and related work 
tion function 5 for A, B and Z to construct a Z-simulating 
path. In this case we say that the resulting (B, A-simulation We have seen that subsumption in with cyclic terminolo•
chain is S-selected.                                          gies is polynomial for the three types of semantics introduced 


DESCRIPTION LOGICS                                                                                                   329 