                       Probabilistic Reasoning for Plan Robustness              ∗

                        Steve R. Schaffer, Bradley J. Clement, Steve A. Chien
                                       Jet Propulsion Laboratory
                                   California Institute of Technology
                       4800 Oak Grove Drive, M/S 126-347, Pasadena, CA 91109
                                  {ﬁrstname.lastname}@jpl.nasa.gov

                    Abstract                          assess and report on the most risky plan segments.
                                                        One historical approach to dealing with uncertainty is
    A planning system must reason about the uncer-    to assume no uncertainty at the level of planning abstrac-
    tainty of continuous variables in order to accu-  tion. To be used in a real world system, such systems
    rately project the possible system state over time. are often augmented with some replanning mechanism for
    A method is devised for directly reasoning about  when predictions do not match results [Chien et al., 2000;
    the uncertainty in continuous activity duration and Koenig, 2001]. One step further is to depend on an execu-
    resource usage for planning problems. By rep-     tion system to handle any variations in plan execution. Ef-
    resenting random variables as parametric distribu- fectively, the planner itself is abstracted from any knowledge
    tions, computing projected system state can be sim- that the real world does not behave as predicted.
    pliﬁed. Common approximations and novel meth-
    ods are compared for over-constrained and lightly   There are many planning systems that reason more directly
    constrained domains within an iterative repair plan- about uncertainty. Classiﬁcations and surveys of this work are
    ner. Results show improvements in robustness      given by Bresina et al. (2002), Blythe (1999), and Boutilier
    over the conventional non-probabilistic representa- et al. (1999). Some techniques handle some level of tem-
                                                                     [                                  ]
    tion by reducing the number of constraint violations poral uncertainty Puterman, 1994; Boyan & Littman, 2000
                                                                               [
    during execution. The improvement is more sig-    or continuous resources, e.g. Bertsekas & Tsitsiklis, 1996;
                                                                           ]
    niﬁcant for larger problems and those with higher Smart & Kaelbling, 2000 , and one can represent both com-
    resource subscription levels but diminishes as the plex temporal constraints and continuous states/resources
                                                      [                 ]
    system is allowed to accept higher risk levels.    Dearden et al., 2003 . This is important for domains where
                                                      concurrent tasks interact in their effect on continuous re-
                                                      sources. For example, a spacecraft can be slewing, operating
                                                      instruments, and communicating at the same time. Metric
1  Introduction                                       resources such as power, energy, memory, and temperature
                                                      are continuously affected and often require complex tempo-
Planning systems that reason about real world events must ral constraints to balance safe operation with efﬁciency.
eventually deal with the inherent uncertainty of any real world This paper outlines one possible approach for directly rea-
mechanism. For example, actions may take longer or con- soning about the uncertainty in action timing and resource
sume more resources than predicted. Even if it were possible consumption. While Dearden et al. use a Monte Carlo ap-
to model every variable that affected a planned set of actions, proach to estimating the value of a plan (2003), we directly
doing so is impractical for realistically sized domains. Fur- compute parametric probability distributions for time and re-
ther, practical modeling abstractions themselves also intro- source variables based on a user-supplied model of activities
duce uncertainty into reasoning about a system.       and resources. The distributions are then combined during
  The way a planning system deals with uncertainty in its planning to determine the net probability distribution of a re-
actions and observations is critical to how well the system source at any time point, which in turn may be integrated to
is able to perform in the real world. Clearly, systems that yield the probability of violating any execution constraints on
effectively reason about uncertainty can better avoid gener- the resource. The key idea is to use this “probability of con-
ating plans that are likely to violate execution constraints. ﬂict” to score potential plans and to drive the planner’s search
But effective use of uncertainty can also improve the long- toward low-risk actions. An output plan provides a balance
term efﬁciency of a plan by balancing acceptable risk levels between the user’s risk aversion and other measures of plan
against the inefﬁciencies incurred to avoid those risks. Fi- optimality. This is a simple conformant planning approach—
nally, knowledge of uncertainty allows the system to better the planner does no contingency planning but also assumes
  ∗This research was carried out at the Jet Propulsion Laboratory, no future state observability.
California Institute of Technology, under a contract with the Na- The present work deals only with durations and resource
tional Aeronautics and Space Administration.          usages that can be modeled as normally distributed randomvariables, though the techniques are more widely applica-
ble. To gauge the effectiveness of our probabilistic system,
                                                                                 dσ
batch-generated plans are executed in a stochastic simula- P[A]
tor. A comparative evaluation of our technique versus some 1.0
common probabilistic approximations is provided along with
an analysis of its applicability to different kinds of planning
problems.
                                                      0.5

2  Approach                                                            dµ
Planning effort is directed to repairing areas of a plan that 0.0
have unacceptable levels of risk, as determined by a user-
                                                               ts                ts+dµ            time
speciﬁed risk tolerance on each resource as a function of time.
Risk for any one timeline segment is assessed by computing Figure 1: Probability of activity A with normally distributed duration d continuing
the probability that the sum of all activity reservations that po- after its start time ts.
                                                            P[V]
tentially overlap the segment would exceed one of the mod-  1  0
eled system resource limits. This probability of resource con-
straint conﬂict is readily derived if the resources’ net proba-
bility density functions are available. Our approach for main- R
taining each net resource distribution is to combine individual
activity resource reservations parametrically.
  Each activity in the plan is considered to make uncertain
resource reservations that follow a known distribution. Fur-
ther, each activity can also have a duration that is similarly
uncertain. (For simplicity, all activities are considered to have usage  value
certain start times - an assumption that holds for directly com- 0
manded actions, but may not apply for exogenous events.) In
                                                               ts                 ts+d µ          time
this paper, we only consider reservations and durations that
are normally distributed random variables, though in practice Figure 2: Transient resource usage distribution for activity A of uncertain duration,
other parametric distributions can also be used. The paramet- showing peaks at R when the activity is likely and 0 when the activity is unlikely.
ric representation for a normal distribution is very compact,      P[V]
requiring only the distribution mean (µ) and standard devia-       1   0
tion (σ). In comparison, a particle ﬁlter [Gordon, Salmond, R1+R2                               w   w
& Smith, 1993] requires a value and weight for each sample                                        RA1 RA2
taken from a distribution. Conveniently, speciﬁed values can
be also represented as normal random variables with a given
µ but σ = 0.
                                                          R2                     w              w   w
  In the case of activities that make persistent reservations             +       RA2   =         RA2 0A1
on a resource (that is, they consume or produce a resource),
                                                          R1           w                        w   w
the net resource distribution for a timeline segment is the             RA1                       RA1 0A2
sum of all current and preceding normally distributed reserva-
tions. Fortunately, the sum Σ of i independent normal reser-
                                            P
vations n is itself a normal, with parameters µΣ = i µni
         pP      2                                          0          w         w              w   w
and σΣ =     i σni . Notice that the uncertainty of the sum             0A1       0A2             0A1 0A2

is greater than any single component, indicating that resul- usage  value
tant uncertainty grows with the number of interacting reser-         A  1       A 2           Sum
vations.
                                                      Figure 3: Computing the sum of two bimodal resource usage distributions results in
  For actions that only have a transient reservation (lasting a multi-modal distribution. Each resultant peak weight is the product of the component
for their duration only), the same method can be applied to weights.
those reservations that are concurrent. In the simple case that
each concurrent activity has a certain duration, the net re-
                                                      as:
source distribution is computed by adding each local reser-              0              t < t
vation. In the more complex case of concurrent activities     P[A](t) =                      sA
                                                                          1 − Φµ  ,σ (t) t ≥ ts
with uncertain duration, the net resource distribution itself be-               te te         A
comes a function of time.                             where Φµ,σ(x) is the cumulative distribution function for a
  For an activity A with start time ts and duration d = dµ ± normal with mean µ and standard deviation σ. Strictly, nor-
dσ, consider P[A](t) to be the probability that action A is mal distributions may yield negative samples, so we must
executing at time t (see ﬁgure 1). As d is normally distributed, truncate only the duration distributions to [0, ∞), or in prac-
the end time te is also a normal, and we can express P[A](t) tice [0, µ + 3σ].                                                            P[V]
  Each of A’s resource reservations must reﬂect the grad-   1  0
ual diminishment of the activity’s probability. If A makes a
reservation R when active, its effective reservation becomes
a function of time, R(t), as in ﬁgure 2). This distribution
                                                       R
is bimodal: one peak at zero resource usage represents that
the activity is not in effect (weighted w0 = 1 − P[A](t)),
and the R peak represents A’s transient reservation (weighted

wRA  = P[A](t)). The peak at zero is a scaled Dirac delta
function: it integrates to w0, but has inﬁnitesimal width.
  The time-sensitive reservations seen in ﬁgure 2 are no usage  value
longer simple normals, so the net resource distribution must 0
also be more complex. In fact, the sum of |Ai| different bi-   t                  t               time
modal reservations results in a multi-modal distribution with  s                   e
   |Ai|
O(2   ) distinct peaks: one for each combination of activi- Figure 4: Single peak approximation for resource usage distribution in place of
ties that could be in effect (see ﬁgure 3).           multi-modal distribution (ﬁgure 2).
  With the net resource distribution PDFR(x, t) in hand,
Computing the probability of violating a system resource maximum likelihood as representative of a distribution. For
constraint during a timeline unit becomes a simple integral. normal distributions, this is the mean. Because durations are
For a timeline unit T with a random variable resource level R also estimated by the mean, there are no multi-modal distri-
and constraints that R ∈ [lmin, lmax], then the probability of butions, and resource values are tracked as a single value on
violation is given by:                                each unit. The Means Only approximation is equivalent to an

  P[VT ](t) =  P[R(t) < lmin] + P[R(t) > lmax]        assumption that everything behaves as expected.
                                                        Pessimistic: Similar to the Means Only approximation, the
           =   1 − P[l   ≤ R(t) ≤ l   ]
                     min          max                 Pessimistic approximation only tracks one value from each
           =   1 − (CDFR(lmax, t) − CDFR(lmin, t))    distribution. Instead of choosing the value of maximum like-
                  Z lmax                              lihood, however, it chooses the “worst case” value. For a nor-
           =   1 −      PDFR(x, t)dx                  mal distribution, our pessimistic system tracks only the value
                    lmin                              µ + 2σ (or µ − 2σ), and considers that to be the actual re-
Fortunately, this integral for normal distributions is fast to source reservation. The choice of which direction constitutes
compute and multi-normal distributions require simple linear the worst case is inherently domain dependent and must be
combinations of this integral.                        speciﬁed.
  In the end, P[VT ](t) may still be a function of time. In Single Peak: A possible limiting factor of the Fully Prob-
this event, we report P[VT ] as the maximum instantaneous abilistic system are the O(2|A|) peaks required when com-
probability of violation during the timeline unit. (Such an bining reservations of uncertain-duration activities A. The
assumption works for systems where each random value is Single Peak approximation uses a single normal distribution
chosen once and not resampled.) To avoid checking all t ∈ T , in place of this set, as in ﬁgure 4 (compare with ﬁgure 2).
we currently only check a constant number of critical times This forfeits accurate representation in favor of much im-
from T , including the endpoints.                     proved time complexity. The Single Peak approximation is
  The probability of constraint violation for each timeline optimistic in that it underestimates reservations.
unit is compared to the user-speciﬁed acceptable risk level, Chebyshev Bound: The Chebyshev Bound approximation
and any violations that are more likely than the risk tolerance is similar to the Single Peak approximation in that both elim-
are ﬂagged as plan conﬂicts. A planning algorithm can use inate the multi-modal distributions that arise from uncertain
the tolerance to help decide whether and where to add, order, duration. However, the Chebyshev Bound uses a more rigor-
move, or remove an activity.                          ous mathematical foundation for its approximation: for any
  In our application, we use an iterative repair planner that random variable R, no matter the distribution, the probabil-
chooses one over-risk-tolerance timeline unit at a time and ity of receiving a sample further than l from the distribution
attempts to reconcile the risk by moving, adding, or deleting mean µ is given by the single-tailed version of Chebyshev’s
resource contributors. For our purposes, the plan is scored inequality:
according to how many remaining “too risky” timeline units
                                                                                     σ2
remain, and the planner gradually hill-climbs toward plans           P[R − µ ≥ l] ≤
with only tolerable risk levels.                                                   σ2 + l2
                                                        Because the Chebyshev Bound assumes so little about a
2.1  Comparison Approximations                        distribution, it is necessarily pessimistic. Like the Single
Approximation methods were implemented for comparison Peak, Chebyshev tracks only a single mean and standard de-
against the fully probabilistic system described above. Each viation, and the sum of two approximated values is taken to
                                                                                              P     2
ﬁts within the same planning and heuristic framework, but have the worst case standard deviation of σΣ = i σni . We
maintains the net resource distributions differently. apply the one-sided Chebyshev inequality to the net mean and
  Means Only: One very natural approximation method is standard deviation, and report the resulting upper bound on
to disregard all uncertainty and consider only the one value of violation probability as the violation probability.                                                        The Full Probabilistic system fared the best, consistently
                    A: Consumable Resource
                                                      achieving nearly zero errors in each domain. It added an
  1                                                   appropriate amount of both resource and schedule slack to
                                                      accommodate the speciﬁed risk tolerance of 5%. The Sin-
                                                      gle Bump approximation also performed well, only having
  0
       1         2        3        4         5        difﬁculty when the resource uncertainty was doubled in (B).
                 B: Consumable Resource with 2x Stdev Notably, the Chebyshev approximation did not meet expecta-
                                                      tions: it turned out to be so very pessimistic in its distribution
  1
                                                      estimation that it failed to ﬁnd good solutions, ﬂoundering
                                                      with imagined conﬂicts.
  0                                                     The price of using the Fully Probabilistic system is of
       1         2        3        4         5
  5                C: Non−Consumable Resource         course computation time. For problems in which duration
  4                                                   was not uncertain, the Fully Probabilistic system was about
  3                                                   10 times slower (unoptimized) than non probabilistic ap-
  2                                                   proaches. When duration was made uncertain, however, a
  1
  0                                                   vast difference appeared. Notably, the Single Peak approx-
 Execution  Errors Per Run
     MeansOnly Pessimistic FullProbabilistc SinglePeakAprx ChebyshevAprx imation was almost 100 times faster than Full Probabilistic,
                                                      on par with the non-probabilistic approaches. Systems where
Figure 5: Execution error means for the three abstract domain variations. The 99% computational time is at a premium would likely fare well to
conﬁdence of the mean is shown as an error bar.       adopt a simple Single Peak approximation and instead leave
                                                      the Full Probabilistic approach for systems where execution
3  Results                                            errors are extremely high cost.
The Full Probabilistic system was evaluated against each
of the comparison algorithms in two disparate planning do- 3.2 Orbiter Domain
mains. The ﬁrst domain is an abstract testbed, and the second The second domain is a more realistic mock up of an orbit-
is a much more complex orbiting spacecraft domain.    ing spacecraft model. The model is based on a synthesis of
  For each domain, a random problem generator provided ideas from actual models for the EO-1 spacecraft [Chien et
the initial schedule for the planner to repair. An iterative opti- al., 2003] and the proposed ASE spacecraft [Chien et al.,
mization planner was then run for a ﬁxed number of iterations 2002]. In addition, we strove to model many of the is-
on the seed plan. The planner was augmented to use each of sues presented in similar planning competition models [Long
the full probabilistic and approximation algorithms, and an & Fox, 2002]. There are other planning systems that have
output plan was saved for each. The saved plans were then treated similar spacecraft domains, e.g. [Globus et al., 2002;
executed on a stochastic simulator that reported the number Frank et al., 2001].
of resource constraint violations that occurred. Notably, no The modeled hypothetical spacecraft is an earth-orbiting
replanning was allowed as information became available dur- satellite equipped with a camera for imaging the planet. The
ing simulation. It would be possible to augment our exper- craft must take actions only when sufﬁcient power is available
iments with more elaborate execution models (ﬂexible time to its solar panels or by drawing on its battery. The craft must
points, replanning, etc), but such was not investigated in the avoid overrunning its battery, memory, and disk space capaci-
present work.                                         ties. In addition, the processing power and antenna bandwidth
                                                      are modeled as system resources. Finally, the external envi-
3.1  Abstract Domain                                  ronment is modeled as providing limited availability windows
The abstract testbed domain has a single resource and a series for downlinks, imaging, and solar power.
of activities that may consume or replenish that resource. The The probe is tasked with acquiring images during target
model was run with both permanent and transient resource visibility windows, processing those images in RAM, record-
reservations, and with different levels of reservation uncer- ing them to disk, and later downlinking them to a ground sta-
tainty. A valid solution existed for every generated problem. tion. The probe has to reason about 10 resources and has
  A comparison of the simulation error means for each ap- 10 different activities to complete its goals. Each activity
proximation method is show in ﬁgure 5. As expected, the makes reservations on multiple resource timelines. In this
Means Only approximation stacked activities until the re- domain, the random problem generator does not guarantee
source value was very close to its limit. This resulted in that its problems will always have a completely valid solu-
simulation errors when the simulated values exceeded the tion (that is, the problems could be over-constrained since the
mean. The Pessimistic approximation only fared slightly bet- planner is forbidden to shed goals).
ter, likely due to its representation deﬁciency: a simulation As before, the Fully Probabilistic system achieves statisti-
error occurs when a resource exceeds its limit or falls below cally signiﬁcantly fewer simulation errors than either of the
zero. After a sequence of several overestimated consumers, non-probabilistic systems, and generates plans on par with
the Pessimistic approximation replenished those reservations the Single Peak approximation’s. The box plot in ﬁgure
with twice as many underestimated replenishers. This causes 6 conveniently shows a comparison of the error counts for
the resource to fall well below zero, and an error is reported. each system. On a per-problem basis, the Full Probabilis-
In real systems, resources may have one-sided constraints. tic system had a mean 3.05 fewer simulation errors, with a  70
                                                        100

  60
                                                                                         Full Probabilistic
                                                         80        Means Only

  50

                                                         60
  40


  30
                                                         40
                                                       Execution  Errors Per Run
 Execution  Errors Per Run

  20

                                                         20
  10


  0                                                      0

     MeansOnly Pessimistic FullProbabilistc SinglePeakAprx ChebyshevAprx ~5 ~10 ~20 Orbits ~5 ~10 ~20 Orbits
                                                                           Planning Horizon Duration

Figure 6: Execution error distribution for each reasoning system. The box plot
shows the median as a horizontal line, a 95% conﬁdence of the median as a notch, and Figure 8: Execution Error Distribution for Problems of Different Sizes
the interquartile range as a box. The whiskers extend to encompass 1.5 more interquar-
tile ranges, and outliers are plotted beyond that.
                                                               ~5 Orbits
                                                                 Mean Improvement = 0.95
         100% Goals                                              CI(99.9%) = [ −0.16, 1.99 ]
           Mean Improvement = 3.05                             ~10 Orbits
           CI(99.0%) = [ 1.75, 4.60 ]                            Mean Improvement = 3.05
         50% Goals                                               CI(99.9%) = [ 1.32, 4.92 ]
           Mean Improvement = −0.49                            ~20 Orbits
           CI(99.0%) = [ −1.71, 0.56 ]                           Mean Improvement = 8.02
         25% Goals                                               CI(99.9%) = [ 4.71, 11.73 ]
           Mean Improvement = −0.20


           CI(99.0%) = [ −0.79, 0.39 ]                 Difference  PDF


 Difference  PDF                                         Means Only Better                   Full Probabilistic Better

   Means Only Better                  Full Probabilistic Better


                                                         −40   −30  −20   −10    0    10    20   30    40
                                                               Simulation Error Count Improvement of Full Probabilistic over Means Only

  −30     −20     −10     0       10      20
        Simulation Error Count Improvement of Full Probabilistic over Means Only Figure 9: Execution Error Improvement Distribution for Problems of Different
                                                      Sizes
Figure 7: Execution error improvement distribution for problems of different goal
densities. (The improvement is measured as the per-problem difference in errors.)
                                                      risk tolerance is increased. At a risk tolerance of 5%, they
                                                      are distinct with 100% conﬁdence, but even at 10% risk tol-
99.9% conﬁdence interval of [ 1.35, 4.90 ]. The Pessimistic erance the statistical signiﬁcance has dropped to 80%. At a
approximation still suffers from the double resource bound risk tolerance of 50%, the Full Probabilistic system becomes
problem noted for the abstract model, but still achieves per- mathematically equivalent to the Means Only system.
formance comparable to the Means Only approach. The     The difﬁculty of the problem also plays an important role
overly pessimistic Chebyshev system still fares worse than in determining the Full Probabilistic system’s dominance. As
the Fully Probabilistic system, but is not statistically signiﬁ- problem difﬁculty (measured as number of goals required)
cantly worse than the either of the non-probabilistic systems. decreases, the Means Only approach gains on and eventually
Notably, the Single Peak approximation achieves an error rate overtakes the Full Probabilistic approach in terms of simula-
that is comparable to - perhaps even better than (conﬁdence tion errors. Figure 7 shows the relevant conﬁdence intervals.
of 85%) - the Fully Probabilistic system. This is likely an ar- Perhaps the most important change is that due to over-
tifact of our domain, in which activities seldom have tails that all problem size. Figure 8 shows that both the probabilis-
stack up into large multi-modal distributions.        tic and non-probabilistic systems suffer a roughly exponen-
  Various parameters of the system were changed to evaluate tial growth in simulation errors as a function of problem size.
the relative sensitivity of each approach. One such parameter However, the slope of the Full Probabilistic system’s function
is the user-speciﬁed risk tolerance. As expected, the payoff is signiﬁcantly lower than that for Means Only. This indicates
(in terms of reduced simulation errors) for using the Fully that the difference in simulation error counts will probably
Probabilistic over a Means Only approach diminishes as the grow roughly exponentially was well. Figure 9 demonstrates