      Towards Cooperative Negotiation for Decentralized Resource Allocation in 
                                      Autonomic Computing Systems 

                        Craig Boutilier Rajarshi Das Jeffrey O. Kephart William E. Walsh 
                Department of Computer Science IBM T.J. Watson Research Center 
                       University of Toronto 19 Skyline Dr. 
                Toronto, ON, M5S 3H5, Canada Hawthorne, NY 10532, USA 
                      cebly@cs.toronto.edu {rajarshi, kephart, wwalshl }@us.ibm.com 

                        Abstract                                 In a real system, a WLM can adjust various parameters / 
                                                               for multiple resources. Here, we assume a single resource, 
     Resource allocation is a key problem in autonomic 
                                                               with quantity L. Given fixed and class demand vector 
     computing. In this paper we use a data center sce•
                                                                 and assuming that the resources have no incremental costs, 
     nario to motivate the need for decentralization and 
                                                               the expected total revenue is then: 
     cooperative negotiation, and describe a promising 
     approach that employs preference elicitation. 
                                                                                                                      (1) 

 1 Resource Allocation in an Autonomic                         A WLVTs internal resource optimization problem is to find a 
     Computing System                                          feasible that maximizes Eq. (1). 
                                                                 To handle fluctuations in client demand, a single provi-
An autonomic computing system is designed to drastically re•   sioncr at the data center periodically reallocates resources 
duce the role of human administrators by automating most of    among the WLMs. Denoting an individual WLM by i, the 
the managerial decision making [Kephart and Chess, 2003].      resource allocation problem for the provisioner is to compute: 
Automated resource allocation is necessary for an autonomic 
computing system to optimize its performance. In the large, 
distributed autonomic computing systems we would expect 
in big businesses, resource allocation will occur at multiple                                                         (3) 
scales. Local allocation decisions will be made within indi•
vidual elements (servers, databases, storage units, etc.) and  The provisioner can compute (2) centrally if it has a good 
small clusters of elements. Local clusters will contend for    model of the internal operation of each WLM and can ob•
pools of resources in the larger domain, or across adminis•   tain all relevant state information. In a real system however, 
trative domains. Although we can generally assume that ele•   the model and data necessary to compute Pr(tc) may be com•
ments in an autonomic computing system of a single corpo•     plex and large. Moreover, in a system with transient, hetero•
ration will be cooperative, sharing the common goal of op•    geneous components (e.g., differently configured WLMs or 
timizing total business value, the complexity of local infor• different components altogether), the internal models of the 
mation will often preclude centralized allocation across the  components may simply not be available to the provisioner. 
entire system. Cooperative negotiation, using preference elic• In these cases, it is necessary to decentralize the resource al•
itation techniques, can be an effective approach to decentral• location problem. That is, WLMs would perform local com•
ization.                                                      putations and send summary information to the provisioner. 
   To motivate the problem, consider the problem of resource     A natural division of labor is to have each WLM send its 
allocation within a data center. The data center provides     entire Ui curve, so that the provisioner can compute Eq. (2). 
information technology resources to multiple organizations,    Figure 1 shows an example of curves from two WLMs, each 
each in a separate domain governed by a workload manager      with two transaction classes.1 The provisioner wishes to find 
(WLM). Each WLM decides how to allocate resources in its      the peaks of the aggregate curve, also shown. 
domain to maintain quality of service (QoS) for each of a set 
of n classes of transactions.                                 2 Cooperative Negotiation 
  The QoS specification for a transaction class c includes 
                                                              To compute its full Ut curve, a WLM must solve Eq. (3) for 
terms describing monetary payments or penalties as a func•
                                                              each feasible L1. If each rc is in a computationally manage•
tion of the measured attributes of the service provided to that able form (e.g., piecewise linear or quadratic) and we have a 
class by the data center. For simplicity, we shall consider here 

just a single attribute, the response time tc for class c. We de• 1 We computed the utility curves assuming a simple M/M/l queue 
note the revenue function for class c (including all rewards  model for each tc. I is the total service rate available, and the fc 
and penalties) by rc(tc).                                     component of indicates the fraction of L given to class c. 


1458                                                                                                  POSTER PAPERS                                                               procedures in which the provisioner gradually narrows down 
                                                              the region in which the optimal allocation lies until a decision 
                                                              which is guaranteed to be e-optimal is found. A rough sketch 
                                                              of one such procedure is presented here. Assume that each 
                                                              WLM has provided evaluations of its utility function U, at a 
                                                              set of m sample points we assume that is 
                                                              the maximum value of L, and bounds U, under any allocation. 
                                                              With this small set of samples, the provisioner is assured that 
                                                                                                             Armed with 
                                                              this information, it is reasonably straightforward to determine 
                                                              the maximum regret of any allocation L. Furthermore, we can 
                                                              also determine the allocation that has minimax regret given 
                                                              this incomplete knowledge of the utility function: 

Figure 1: Maximum system utility as a function of alloca•

tion, with total resources L — 20. Curve "WLM A" indicates    Here ut ranges over the set of utility functions U, consistent 
maximum utility to A as a function of LA. Curve "WLM B"       with the bounds above. Minimax regret is a reasonable er•
indicates maximum utility to B as a function of LB. Curve     ror criterion, and the minimax-optimal allocation L* can be 
"Total" indicates total utility as a function of LA provided to determined using a tractable scries of linear programs. 
A (with L-LA provided to B).                                    Incremental elicitation arises when the minimax-optimal 
                                                              allocation has a max-regret level that is too high, say, greater 
                                                              than E. In this case, the provisioner does not have enough 
simple model for tc (e.g., M/M/l queue), then computing each 
U,(Lj) point may be tractable. However, in typical real sys•  information about the Ut curves to determine an allocation 
tems the dependency of the service attributes upon resources  whose worst-case error is less than this necessitates addi•
and demand is likely to be sufficiently complex as to require a tional samples of the U, curves. We have developed intelli•
combination of optimization and simulation to compute each    gent query strategies that efficiently determine points L, for 
U,(L,) point. Moreover, WLMs will often have substitutable    which knowledge of 17,(L,) will "quickly" reduce minimax 
                                                              regret. Once sufficiently many points have been evaluated, 
and complementary preferences over different quantities of 
                                                              minimax regret will reach an acceptable level and an allo•
multiple goods, giving rise to large, expensive-to-compute, 
                                                              cation whose error is bounded by e can be offered. Wc do 
multidimensional U, curves. Such complexities would make 
                                                              recognize that the procedure becomes more complicated with 
it in feasible for a WLM to send its entire U, to the provisioned 
                                                              multidimensional U, curves. 
  Instead, we propose to model the resource allocation prob•
                                                                This procedure obviates the need for WLMs to compute 
lem as cooperative negotiation. In the context of auto•
                                                              their entire utility curves. The complex optimization required 
nomic computing, cooperative negotiation is not simply non-
                                                              to determine U,(L) need only be applied by WLM / at a small 
cooperative negotiation with the simplifying assumption that 
                                                              collection of points; and these points are determined by the 
agents are non-strategic. Rather, the objective is to achieve 
                                                              provisioner based on information about the utility functions 
the right balance between global optimization and negoti•
                                                              of other WLMs. In this sense, such incremental elicitation 
ation time. We are developing preference elicitation tech•
                                                              techniques can truly be viewed as a form of collective nego•
niques [Boutilier, 2002] to address this problem. We can view 
                                                              tiation between WLMs and the provisioner. 
the negotiation for resources between the WLMs and the pro-
                                                                We are exploring error criteria other than minimax regret 
visioner as involving computation or "elicitation" of relevant 
                                                              in our general model. Optimization w.r.t. specific utility con•
parts of the U, curves. 
                                                              straints, and determining queries that reduce error, would 
  Partial elicitation may be feasible in the case of negotiation 
                                                              both require tailoring to the specific criterion adopted; but 
among WLMs for different resource levels. It will often be 
                                                              the same incremental framework still applies. For instance, 
possible to identify the region of Z-space in which the opti•
                                                              if distributional information over the (J, curves is available, 
mal allocation lies without complete knowledge of these util•
                                                              Bayesian decision criteria could be used (e.g., an allocation 
ity functions. The provisioner could be given a small number 
                                                              that maximizes expected utility w.r.t. Pr(w)). 
of samples of the utility functions U,(L1) for WLMs /. Mak•
ing simple monotonicity assumptions, the provisioner could 
determine the region of allocation space in which the opti•   References 
mal allocation lies.2 For instance, having samples of the two [Boutilier, 2002] Craig Boutilier. A POMDP formulation 
(lower) curves in Figure 1 at points Lx — {10,15,20} for         of preference elicitation problems. In Eighteenth Na•
/ = A,B, is sufficient to determine that the optimal allocation  tional Conference on Artificial Intelligence, pages 239-
lies somewhere in the region [10,15].                            246, 2002. 
  We are currently developing incremental utility elicitation [Kephart and Chess, 2003] Jeffrey O. Kephart and David M. 
                                                                 Chess. The vision of autonomic computing. Computer, 
   2Monotonicity of Ui seems natural, corresponding to a "free dis• 36(l):41-52,2003. 
posal" assumption. 


POSTER PAPERS                                                                                                      1459 