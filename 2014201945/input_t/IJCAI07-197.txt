                    Bidding Languages and Winner Determination for
                         Mixed Multi-unit Combinatorial Auctions

          Jesus´ Cerquides                    Ulle Endriss                 Andrea Giovannucci
       University of Barcelona          University of Amsterdam         Juan A. Rodr´ıguez-Aguilar
                Spain                       The Netherlands                  IIIA-CSIC, Spain


                    Abstract                          accept any set of bids from that bidder for which the bundles
                                                      do not overlap, and charge the sum of the speciﬁed prices.
    We introduce a new type of combinatorial auction  This is now sometimes called the OR-language. But other in-
    that allows agents to bid for goods to buy, for goods terpretations of a set of atomic bids are possible. For instance,
    to sell, and for transformations of goods. One such we may take it to mean that the auctioneer may accept at most
    transformation can be seen as a step in a production one bid per bidder; this is now known as the XOR-language.
    process, so solving the auction requires choosing   Nisan’s survey article [2006], the reference work in the
    the sequence in which the accepted bids should be ﬁeld of bidding languages, covers languages for direct single-
    implemented. We introduce a bidding language for  unit combinatorial auctions. That is, the auctioneer is selling
    this type of auction and analyse the corresponding (rather than buying) goods, and all goods are distinguishable.
    winner determination problem.                     Our ﬁrst aim in this paper is to generalise this to multi-unit
                                                      combinatorial auctions. As a second generalisation, we show
1  Introduction                                       how to integrate direct and reverse auctions, i.e. the auction-
A combinatorial auction is an auction where bidders can buy eer will be able to both sell and buy goods within a single
(or sell) entire bundles of goods in a single transaction. Al- auction. As a third and ﬁnal generalisation, we are going to
though computationally very complex, selling items in bun- show how to integrate the idea of transformability relation-
                                                                                              [
dles has the great advantage of eliminating the risk for a bid- ships between goods into our auction model Giovannucci
                                                                ]
der of not being able to obtain complementary items at a rea- et al., 2005 . For instance, if the auctioneer is interested in
sonable price in a follow-up auction (think of a combinatorial obtaining cars, but is also able to transform various compo-
auction for a pair of shoes, as opposed to two consecutive nents into a working car (at a certain cost), then it may so-
single-item auctions for each of the individual shoes). The licit bids offering both ready-made cars and individual com-
study of the mathematical, game-theoretical and algorithmic ponents. We further extend the idea of these transformability
properties of combinatorial auctions has recently become a relationships by allowing agents to also bid for transforma-
popular research topic in AI. This is due not only to their rel- tion services, i.e. an agent may submit a bid offering to trans-
evance to important application areas such as electronic com- form a certain set of goods into another set of goods. We call
merce or supply chain management, but also to the range of the resulting auction model mixed multi-unit combinatorial
deep research questions raised by this auction model. This pa- auctions (MMUCA). These are not to be confused with dou-
                                                                 [                 ]
per introduces a generalisation of the standard model of com- ble auctions Wurman et al., 1998 . In particular, the order
binatorial auctions and discusses the issues of bidding and in which agents consume and produce goods is of central im-
winner determination.                                 portance in our model and affects the deﬁnition of the winner
  Winner determination is the problem, faced by the auction- determination problem.
eer, of choosing which goods to award to which bidder so as The paper is organised as follows. In Section 2 we deﬁne
to maximise its revenue. Bidding is the process of transmit- the notions of transformation and valuation over (multisets
ting one’s valuation function over the set of goods on offer to of) transformations, and we deﬁne an expressive bidding lan-
the auctioneer. In principle, it does not matter how the valua- guage to represent such valuations. Section 3 discusses the
tion function is being encoded, as long as sender (bidder) and winner determination problem for MMUCAs, including its
receiver (auctioneer) agree on the semantics of what is be- computational complexity. Finally, Section 4 concludes with
ing transmitted, i.e. as long as the auctioneer can understand a discussion of related work and an outlook on future work.
the message(s) sent by the bidder. In practice, however, the
choice of bidding language is of central importance. Early 2 Bidding Languages
work on combinatorial auctions has typically ignored the is- In this section, we ﬁrst deﬁne the notions of transformation
sue of bidding languages. The standard assumption used to be and valuation over transformations, and then deﬁne a bidding
that if a particular bidder submits several atomic bids (a bun- language that can be used to transmit an agent’s valuation
dle together with a proposed price), then the auctioneer may (which may or may not be their true valuation) to the auction-

                                                IJCAI-07
                                                  1221eer. We also formally deﬁne the semantics of the language That is, a valuation is normalised iff exchanging a multiset of
and introduce a number of additional language constructs that items for an identical multiset does not incur any costs (this
allow for the concise encoding of typical features of valua- includes the special case of I = O = {}, i.e. the case of not
tion functions. Finally, we discuss the expressive power of exchanging anything at all). The next deﬁnitions refer to our
the language.                                         subsumption relation  (cf. Deﬁnition 1).
                                                      Deﬁnition 3 (Monotonic valuation) A valuation v is mono-
2.1  Transformations                                                                   
                                                      tonic iff v(D) ≤ v(D ) whenever DD.
Let G be the ﬁnite set of all the types of goods under con-
sideration. A transformation is a pair of multisets over G: That is, an agent with a monotonic valuation does not mind
(I O) ∈  NG × NG                                      taking on more goods and giving fewer away. Any given val-
  ,              . An agent offering the transformation                                               1
(I, O) declares that it can deliver O after having received I. uation function can be turned into a monotonic valuation:
In our setting, bidders can offer any number of such transfor- Deﬁnition 4 (Monotonic closure) The monotonic closure vˆ
mations, including several copies of the same transformation. of a valuation v is deﬁned as vˆ(D)=max{v(D) |D D}.
That is, agents will be negotiating over multisets of transfor-
              G   G                                   Observe that there could be inﬁnitely many bundles an agent
       D∈N(N   ×N  )
mations             .                                 may want to assign a (deﬁned) value to. As we shall see in
             {({} {  }) ({ } { })}
  For example,    , a ,  b , c   means that the agent Section 2.6, our bidding languages can only express valua-
in question is able to deliver a (no input required) and that it tions that are ﬁnitely-peaked (or that are the monotonic clo-
is able to deliver c if provided with b. Note that this is not the sure of a ﬁnitely-peaked valuation):
same as {({b}, {a, c})}. In the former case, if another agent
is able to produce b if provided with a, we can get c from Deﬁnition 5 (Finitely-peaked val.) A valuation v is ﬁnitely-
                                                      peaked iff v is only deﬁned over ﬁnite multisets of pairs of
nothing; in the latter case this would not work.                             (NG×NG)
  We deﬁne a subsumption relation  over transformations ﬁnite multisets and {D ∈ N  | v(D)  = ⊥} is ﬁnite.
as follows: (I, O)  (I, O) iff I⊆I and O⊇O.In-
tuitively, this means that the second transformation is at least 2.3 Atomic Bids
                                                                          1   1       n   n
as good as the ﬁrst (for the bidder), because you receive more An atomic bid BID({(I , O ),...,(I , O )},p) speciﬁes a
and have to give away less. The following deﬁnition extends ﬁnite multiset of ﬁnite transformations and a price. To make
this subsumption relation to multisets of transformations. It the semantics of such an atomic bid precise, we need to de-
applies to multisets of the same cardinality, where for each cide whether or not we want to make a free disposal assump-
transformation in the ﬁrst set there exists a (distinct) transfor- tion. We can distinguish two types of free disposal:
mation in the second set subsuming the former.          • Free disposal at the bidder’s side means that a bidder
                                     (NG×NG)             would always be prepared to accept more goods and give
Deﬁnition 1 (Subsumption) Let D, D ∈ N        .We
                                                        fewer goods away, without requiring a change in pay-
say that D is subsumed by D (DD)iff:
                                                          ment. This affects the deﬁnition of the valuation func-
                                          
 (i) D and D have the same cardinality: |D| = |D |.       tions used by bidders.
                                         
(ii) There exists a surjective mapping f : D→D such that, • Free disposal at the auctioneer’s side means that the auc-
    for all transformations t ∈D, we have t  f(t).       tioneer can freely dispose of additional goods, i.e. accept
For instance (using a simpliﬁed notation for the innermost more and give away fewer of them. This affects the def-
sets), we have {(a, bb), (cc, dd)}{(cc, d), (aaa, b)}.   inition of what constitutes a valid solution to the winner
                                                          determination problem (see Section 3).
2.2  Valuations                                       Under the assumption of free disposal at the bidder’s side, the
In an MMUCA, agents negotiate over bundles of transforma- bid Bid = BID(D,p) deﬁnes the following valuation:
                              G  G                                           
                         : N(N ×N  ) →  R                                                  
tions. Hence, a valuation v               is a (typi-                         p   if DD
                                                                  vBid(D )=
cally partial) mapping from multisets of transformations to                    ⊥   otherwise
the real numbers. Intuitively, v(D)=p means that the agent
equipped with valuation v is willing to make a payment of To obtain the valuation function deﬁned by the same bid with-
p in return for being allocated all the transformations in D out the free disposal assumption, simply replace  in the
(in case p is a negative number, this means that the agent above deﬁnition by equality.
will accept the deal if it receives an amount of |p|). For in-
stance, v({({oven, dough}, {oven, cake })})=−20 means 2.4  Combinations of Bids
that I can produce a cake for 20 rupees if given an oven and A suitable bidding language should allow a bidder to encode
some dough, and that I will return the oven again afterwards choices between alternative bids and the like. To this end,
We write v(D)=⊥   to express that v is undeﬁned over the several operators for combining bids have been introduced in
multiset D. Again intuitively, this means the agent would be the literature [Nisan, 2006], which we are going to adapt to
unable to accept the corresponding deal. Valuation functions our purposes here. Informally, an OR-combination of several
can often be assumed to be both normalised and monotonic:
                                                         1Here and throughout this paper, we assume that any occurrences
Deﬁnition 2 (Normalised valuation) A valuation v is nor- of ⊥ are being removed from a set before computing its maximum
malised iff v(D)=0whenever I = O for all (I, O) ∈D.   element, and that the maximum of the empty set is ⊥.

                                                IJCAI-07
                                                  1222bids signiﬁes that the bidder would be happy to accept any This allows us to express bundling constraints in a concise
number of the sub-bids speciﬁed, if paid the sum of the as- manner: the bid ({a, a, a, b}, −10)≤50 expresses that we can
sociated prices. An XOR-combination of bids expresses that sell up to 50 packages containing three items of type a and
the bidder is prepared to accept at most one of them. We also one item of type b each, for 10 rupees a package (for simplic-
suggest the use of an IMPLIES-operator to express that ac- ity, we omit O here). We also use the following shorthand:
cepting one bid forces the auctioneer to also take the second.     n  =(           ···        )
We shall take an AND-combination to mean that the bidder        Bid       Bid AND   AND Bid
will only accept the respective sub-bids together.                                n times
  As it turns out, while all these operators are very useful
                                                                                                 ∈ N
for specifying typical valuations in a concise manner, any Now we can express quantity ranges. Let n1,n2 with
                                                      0
complex bid can alternatively be represented by an XOR- <n1   <n2. The following expression says that we may
combination of atomic bids. To simplify presentation, rather accept between n1 and n2 copies of the same Bid:
than specifying the exact semantics of all of our operators    [n1,n2] =      ≤(n2−n1)           n1
directly, we are simply going to show how any bid can be    Bid           Bid         IMPLIES Bid
translated into such a normal form. Firstly, any occurrences These constructs also allow us to express important concepts
of IMPLIES and OR can be eliminated by applying the fol- such as quantity discounts in a concise manner. For instance,
                                                                   ≤100              50           ≤50
lowing rewrite rules:                                 the bid [(a, 20) IMPLIES (a, 25) ] XOR (a, 25) says
                                                                                                       25
    X  IMPLIES Y  ;   (X  AND Y ) XOR Y               that we are prepared to buy up to 50 items of type a for
                                                                                         20
         X  OR Y  ;   X  XOR Y XOR  (X AND Y )        rupees each, and then up to 100 more for rupees each.
Note that for single-unit auctions, OR cannot be translated 2.6 Expressive Power
into XOR like this (if X and Y overlap, then they cannot be Next we are going to settle the precise expressive power of
accepted together; in an MMUCA this depends on the supply the XOR-language, and thereby of the full bidding language.
of the auctioneer). Next we show how to distribute AND over We have to distinguish two cases, as we have deﬁned the se-
XOR, so as to push AND-operators to the inside of a formula: mantics of the language both with and without free disposal.
 (         )        ;   (        )     (        )
  X  XOR Y  AND Z        X AND  Z  XOR  Y AND Z       Proposition 1 The XOR-language without free disposal can
Finally, we need to deﬁne how to turn an AND-combination represent all ﬁnitely-peaked valuations, and only those.
of atomic bids into a single atomic bid:              Proof. Let v be any ﬁnitely-peaked valuation. To express v in
                                            
  BID(D,p) AND BID(D  ,p)  ;   BID(D∪D,p+     p )     the XOR-language, we ﬁrst compose one atomic bid for each
                                                      D =  {(I1, O1),...,(In, On)} with v(D)=p  = ⊥:
It is not difﬁcult to see that these rewrite rules together allow
                                                                        1   1       n   n
us to translate any expression of the bidding language into      BID({(I , O ),...,(I , O )},p)
an equivalent XOR-combination of atomic bids. We also call
this the XOR-language. To formally deﬁne the semantics of Joining all these bids together in one large XOR-combination
this language, it sufﬁces to deﬁne the semantics of the XOR- yields a bid that expresses v. Vice versa, it is clear that
operator. Suppose we are given n bids Bid i, with i ∈{1..n}. the XOR-language cannot express any valuation that is not
                                                                                                       2
Let Bid = Bid 1 XOR ··· XOR Bid n. This bid deﬁnes the ﬁnitely-peaked.
following valuation:                                  Proposition 2 The XOR-language with free disposal can
          (D)=max{           (D) | ∈{1    }}          represent all valuations that are the monotonic closure of a
       vBid             vBidi     i    ..n
                                                      ﬁnitely-peaked valuation, and only those.
That is, XOR simply selects the atomic bid corresponding to
the valuation giving maximum proﬁt for the auctioneer. Proof. The construction of a bid representing any given val-
                                                      uation works in analogy to the proof of Proposition 1. Note
2.5  Representing Quantity Ranges                     that for the semantics with free disposal we precisely obtain
                                                      the monotonic closure of the valuation we would get if we
As we are going to see in the next section, the XOR-language                                           2
is expressive enough to describe any (ﬁnitely-peaked) valua- were to drop the free disposal assumption.
tion. Nevertheless, it may not be possible to express a given These results correspond to the expressive power results for
valuation in a succinct manner. From a practical point of the standard XOR-language for direct single-unit combina-
view, it is therefore useful to introduce additional constructs torial auctions. With free disposal (the standard assump-
that allow us to express typical features more succinctly. Here tion), the XOR-language can express all monotonic valua-
we consider the case of quantity ranges: we want to be able tions [Nisan, 2006]; and without that assumption it can repre-
to express that a certain number of copies of the same trans- sent the complete range of valuations (note that any valuation
formation are acceptable to a bidder.                 is ﬁnitely-peaked if we move from multisets to sets).
  Let n ∈ N. To express that up to n copies of the same Bid
are acceptable, we use the following notation:        3   Winner Determination
             ≤n   =(          ···      )
          Bid         Bid OR  OR Bid              In this section, we deﬁne the winner determination problem
                            n times                   (WDP) for MMUCAs. For lack of space we only give the

                                                IJCAI-07
                                                  1223deﬁnition for the case of free disposal (at the side of the auc- of referring to a transformation: by its position in the collec-
tioneer), but this is easily adapted to the case without free tion of bids received (tijk) and by its position in the allocation
disposal. We ﬁrst give an informal outline of the deﬁnition, sequence (if selected at all).
then a formal deﬁnition, and ﬁnally a formulation using inte- Given Σ we can obtain the set of goods held by the auc-
ger programming, providing a basis for implementation. We tioneer after each transformation. For instance, say that the
also establish the computational complexity of the WDP and auctioneer begins with Uin = {a, a, d, d}. If we apply the
brieﬂy comment on mechanism design issues.            ﬁrst transformation (I1, O1)=({a, a}, {c}) (from two units
                                                      of a produce one unit of c), the auctioneer ends up with
3.1  Informal Deﬁnition                               M1   = {c, d, d}. Formally, we can express this operation
The input to the WDP consists of a complex bid expression as an equation over multisets:
for each bidder, a multiset Uin of goods the auctioneer holds      1               1       1
                                                                 M  (g)=Uin(g)+O    (g) −I  (g)
to begin with, and a multiset Uout of goods the auctioneer
expects to end up with.                               The application of the transformation is possible only because
  In standard combinatorial auctions, a solution to the WDP two units of good a are available. This condition maps to:
is a set of atomic bids to accept. In our setting, however,                        1
the order in which the auctioneer “uses” the accepted trans-             Uin(g) ≥I (g)
formations matters. For instance, if the auctioneer holds a Let Mm ∈ NG be the goods held by the auctioneer after
to begin with, then checking whether accepting the two bids applying the mth transformation. We can generalise the two
Bid1 =({a},  {b}, 10) and Bid2 =({b}, {c}, 20) is feasi-                           0
                                                      equations above as follows (let M = Uin):
ble involves realising that we have to use Bid1 before Bid2.
                                                                m         m−1        m       m
Thus, a solution to the WDP will be a sequence of transfor-   M   (g)=M       (g)+O   (g) −I  (g)     (1)
mations.Avalid solution has to meet two conditions:                               m−1        m
                                                                                M     (g) ≥I  (g)     (2)
(1) Bidder constraints: The multiset of transformations in
    the sequence has to respect the bids submitted by the We are now ready to deﬁne under what circumstances a se-
    bidders. This is a standard requirement. For instance, quence of transformations constitutes a valid solution:
    if a bidder submits an XOR-combination of transforma- Deﬁnition 6 (Valid solution) Given a multiset Uin of avail-
    tions, at most one of them may be accepted.       able goods and a multiset Uout of required goods, an alloca-
(2) Auctioneer constraints: The sequence of transforma- tion sequence Σ for a given set of XOR-bids over transforma-
    tions has to be implementable: (a) check that Uin is a su- tions tijk is said to be a valid solution iff:
    perset of the input set of the ﬁrst transformation; (b) then (1) Σ either contains all or none of the transformations be-
    update the set of goods held by the auctioneer after each longing to the same atomic bid. That is, the semantics of
    transformation and check that it is a superset of the input the BID-operator is being respected:
    set of the next transformation; (c) ﬁnally check that the
    set of items held by the auctioneer in the end is a superset        tijk ∈ Σ ⇒ tijk ∈ Σ
    of Uout. This requirement is speciﬁc to MMUCAs.
                                                       (2) Σ does not contain two transformations belonging to dif-
An optimal solution is a valid solution that maximises the sum ferent atomic bids by the same bidder. That is, the se-
of prices associated with the atomic bids selected.       mantics of the XOR-operator is being respected:
                                                                                            
3.2  Formal Deﬁnition                                                  tijk,tij k ∈ Σ ⇒ j = j
For the formal deﬁnition of the WDP, we restrict ourselves
to bids in the XOR-language, which is known to be fully ex- (3) Equations (1) and (2) hold for each transformation
                                                          (Im  Om)    Σ                  ∈
pressive (over ﬁnitely-peaked valuations). For each bidder i, ,     in   and each good g   G. This condi-
let Bidij be the jth atomic bid occurring within the XOR- tion ensures that all transformations have enough input
bid submitted by i. Recall that each atomic bid consists of a goods available.
multiset of transformations and a price: Bidij =(Dij ,pij ), (4) The set of goods held by the auctioneer after imple-
            (NG×NG)
where Dij ∈ N       and pij ∈ R. For each Bidij ,lettijk  menting the transformation sequence is a superset of the
be a unique label for the kth transformation in Dij (for some goods the auctioneer is expected to end up with:
arbitrary but ﬁxed ordering of Dij ). Let (Iijk , Oijk) be the              |Σ|
                                                                         M    (g) ≥Uout(g)
actual transformation labelled by tijk. Finally, let T be the set
              |  |
of all tijk;thatis, T is the overall number of transformations The revenue for the auctioneer associated with a valid solu-
mentioned anywhere in the bids.
                                                      tion Σ is the sum of the prices associated with the selected
  The auctioneer has to decide which transformations to ac-
                                                      atomic bids: {pij |∃k : tijk ∈ Σ}. We are now ready to
cept and in which order to implement them. Thus, an alloca- deﬁne the WDP for XOR-bids:
tion sequence Σ (which will not necessarily be a valid solu-
tion) is a total ordering of a subset of T . We write tijk ∈ Σ to Deﬁnition 7 (WDP) Given a set of XOR-bids and multisets
say that the kth transformation in the jth atomic bid of bidder Uin and Uout of initial and ﬁnal goods, respectively, the win-
i has been selected. Furthermore, let (Im, Om) be the mth ner determination problem is the problem of ﬁnding a valid
transformation in the sequence Σ. That is, we have two ways solution Σ that maximises revenue for the auctioneer.

                                                IJCAI-07
                                                  12243.3  Integer Programming Formulation                                                    (∀g ∈ G, ∀m)  (8)
We now show how to map the WDP deﬁned above into inte-    That is, we treat each Mm(g) as an integer decision
ger programming (IP). Our aim is to ﬁnd a solution sequence variable. We can now formulate the constraint enforc-
composed of transformations that leads from the initial goods ing that enough goods must be available at step m to
to the ﬁnal goods. Note that the length of the solution se- perform the next transformation (cf. equation (2)):
quence can be at most equal to the overall number of of-                
                                                               m−1          m
fered transformations. Therefore, the issue is to decide for M    (g) ≥    xijk ·Iijk(g)(∀g ∈ G, ∀m)  (9)
each transformation whether it is selected for the solution se-         ijk
quence, and if so, to choose its position in the solution se-
quence. Thus, we deﬁne a set of binary decision variables (7) And ﬁnally, after having performed all the selected
 m                  m
xijk ∈{0, 1},wherexijk takes on value 1 if the transfor-  transformations, the set of goods held by the auctioneer
mation tijk is selected at the mth position of the solution se- must be a superset of the ﬁnal goods Uout (cf. condi-
quence, and 0 otherwise. Here and in what follows, m always tion (4) of Deﬁnition 6):
                                               | |
ranges from 1 to the overall number of transformations T ;             |T |
i ranges over all bidders; j ranges for each bidder i from 1        M    (g) ≥Uout(g)(∀g  ∈ G)       (10)
to the number of atomic bids submitted by i;andk ranges
                                                          This works correctly, because M|T |(g)=Mm(g) for
for each atomic bid j of bidder i from 1 to the number of                   m =1
transformation in that atomic bid.                        the highest m with x   (cf. equations (6) and (8)).
  We also introduce several sets of auxiliary binary decision Now solving the WDP for MMUCAs with XOR-bids
variables: xm takes on value 1 iff any transition at all is se- amounts to solving the following integer program:
lected at the mth position of the solution sequence; xijk takes 
                                                           max        ·
on value 1 iff transition tijk is present anywhere in the se-      xij pij  subject to constraints (1)–(7)
quence; and xij takes on value 1 iff any of the transformations ij
in the jth atomic bid of bidder i are selected.
                                                      Finally, a valid solution according to Deﬁnition 7 is obtained
  In what follows, we deﬁne the set of constraints that the
                                                      from the solution of the IP by making transition tijk the mth
solution sequence must fulﬁl:                                                          m
                                                      element of the solution sequence Σ iff xijk =1.
(1) Since each atomic bid is a bundle of transformations, we Observe that our proposed implementation can easily be
    want to ensure that if a transformation in an atomic bid amended so as to directly encode the constraints imposed by
    is selected for the solution, so are the rest of the trans- language constructs other than the XOR-operator. This would
    formations in that bid (cf. condition (1) of Deﬁnition 6): remove the need for translating into the XOR-language ﬁrst
                   xij = xijk (∀ijk)            (3)   and thereby greatly improve efﬁciency.
(2) We enforce that the atomic bids submitted by each bid- 3.4 Computational Complexity
    der are exclusive (XOR). This amounts to satisfying the
                                                      The (decision problem underlying the) WDP for standard
    following constraints (cf. condition (2) of Deﬁnition 6):
                                                     combinatorial auctions is known to be NP-complete, with re-
                       xij ≤ 1(∀i)              (4)   spect to the number of goods [Rothkopf et al., 1998].NP-
                     j                                hardness can, for instance, be shown by reduction from the
                                                      well-known SET PACKING  problem. As our mixed auction
(3) We enforce that a transformation can be selected at most model generalises standard combinatorial auctions, winner
    for a single position in the solution sequence:
                                                     determination remains NP-hard also here. NP-membership
                            m                         (and thereby NP-completeness) of the problem of checking
                 xijk =    xijk (∀ijk)          (5)
                        m                             whether there exists a solution exceeding a given revenue (for
                                                      ﬁnite bids) follows from the fact that a candidate solution pro-
(4) We also impose that at most one transformation is se- vided by an oracle can always be veriﬁed in polynomial time.
    lected at each position of the sequence:
                                                     That is, despite of the generalisations we have introduced, the
                   m        m                         computational complexity of the WDP does not increase, at
                  x  =     x    (∀m)            (6)
                            ijk                       least not with respect to the polynomial hierarchy.
                        ijk
(5) Furthermore, there should be no gaps in the sequence: 3.5 Mechanism Design
                    m     m+1
                   x  ≥ x      (∀m)             (7)   An important issue in auction design concerns their game-
                                                      theoretical properties. We note here that the central result
(6) Next, we capture condition (3) of Deﬁnition 6. Firstly, in mechanism design, on the incentive-compatibility of the
    the multiset of goods held by the auctioneer after per- Vickrey-Clarke-Groves (VCG) mechanism, carries over from
    forming m steps of the transformation sequence can be standard combinatorial auctions to MMUCAs. Recall that the
    computed recursively, by equation (1), as follows: VCG mechanism allocates goods in the most efﬁcient man-
                      m                             ner and then determines the price to be paid by each bidder
      m                      
    M   (g)=Uin(g)+         xijk · (Oijk (g) −Iijk (g)) by subtracting from their offer the difference of the overall
                      =1 ijk                         value of the winning bids and the overall value that would

                                                IJCAI-07
                                                  1225