              An Action Description Language for Iterated Belief Change

                                Aaron Hunter and James P. Delgrande
                                        Simon Fraser University
                                         Burnaby, BC, Canada
                                       {amhunter, jim}@cs.sfu.ca


                    Abstract                          sensing results depends on the preceding actions. In the pro-
                                                      cess, we generalize an existing epistemic extension of A by
    We are interested in the belief change that occurs allowing erroneous beliefs and non-Markovian belief change.
    due to a sequence of ontic actions and epistemic  The second contribution of this paper is the introduction of a
    actions. In order to represent such problems, we  method for solving belief evolution problems through answer
    extend an existing epistemic action language to al- set planning. Using this method, we can implement a solver
    low erroneous initial beliefs. We deﬁne a non-    for epistemic projection problems in our action language.
    Markovian semantics for our action language that
    explicitly respects the interaction between ontic ac-
    tions and epistemic actions. Further, we illus-   2   Motivating Example
    trate how to solve epistemic projection problems in We present a commonsense example involving iterated belief
    our new language by translating action descriptions change due to action, and we will return to this example pe-
    into extended logic programs. We conclude with    riodically throughout the paper. The example that we present
    some remarks about a prototype implementation of  is framed in the context of a zoo, where a certain crocodile
    our work.                                         must be fed every morning. The crocodile is fed from a bag
                                                      of food that either contains whole chickens or whole ducks;
                                                      the contents of the food bag varies throughout the year. The
1  Introduction                                       crocodile is never sick after eating chicken; even if it is ini-
Reasoning about the effects of actions is an important prob- tially sick we suppose that eating chicken makes it feel better.
lem in logical AI. Action formalisms are often deﬁned for However, the crocodile will become sick if it eats two ducks
reasoning about so-called ontic actions that change the state in row. The crocodile will always eat the food it is given. The
of the world. However, sensing actions have also been in- ﬁrst zoo keeper to arrive in the morning typically feeds the
corporated in the epistemic extensions of several notable for- crocodile by giving it one unit of food.
malisms [Shapiro et al., 2000; Lobo et al., 2001; Son and Suppose that Bob the zoo keeper arrives in the morning
Baral, 2001; Jin and Thielscher, 2004]. In such extensions, for work. Bob believes that the crocodile is unfed when he
the effects of sensing actions are deﬁned in terms of belief re- arrives, and he believes that the food bag contains chickens.
vision. However, simply supplementing an action formalism Suppose that Bob feeds the crocodile, then observes that it
with a revision operator is not sufﬁcient; the iterated belief becomes sick. We suggest that Bob should conclude that his
change caused by a sequence of ontic actions and sensing initial beliefs were incorrect; the sickness of the crocodile in-
actions can not be determined iteratively [Hunter and Del- dicates that it has actually eaten two ducks. We are interested
grande, 2005]. Informally, the interpretation of a sensing re- in using an action description language to formally model the
sult may be inﬂuenced by the preceding sequence of ontic belief change that occurs in problems of this form.
actions. In this paper, we deﬁne an action formalism where
the belief change caused by a sequence of actions respects the 3 Preliminaries
non-elementary interaction between ontic actions and sensing                A
actions.                                              3.1  Action Language
  In order to ground the discussion, we frame our results in We brieﬂy review the syntax and semantics of the action lan-
an epistemic extension of the action language A [Gelfond and guage A, as introduced in [Gelfond and Lifschitz, 1993].
Lifschitz, 1993]. We base the semantics of our action lan- An action signature is a pair F, A where F denotes a
guage on the belief evolution operators of [Hunter and Del- ﬁxed set of ﬂuent symbols and A denotes a ﬁxed set of action
grande, 2005]; our results can be seen as an application of the symbols. A state is a propositional interpretation over F, S
belief evolution methodology in an action formalism. The denotes the set of all states, and |φ| denotes the set of states
two main contributions of this paper are as follows. First, satisfying the formula φ.Aliteral is either an element of F or
we introduce an action formalism that is suitable for reason- an element of F preﬁxed with the negation symbol. Let Lits
ing about iterated belief change where the interpretation of denote the set of all literals. We use the upper case letter A

                                                IJCAI-07
                                                  2498to range over actions, the lower case letters f,g to range over FullChicken and FullDuck indicate what the crocodile has
literals, and the lower case letter s to range over states. eaten. Action effects are described as follows.
Deﬁnition 1 An effect proposition of the language A is an     Feed causes FullChicken if C hicken
expression of the form                                        Feed causes ¬Sick if C hicken
                                                              F    causes F        if ¬C
             A causes f if g1 ∧···∧gp                          eed         ullDuck       hicken
                                                              Feed causes Sick if FullDuck ∧¬C hicken
where A ∈ A, f ∈ Lits and each gi ∈ Lits.
                                                              LookAtCroc causes to know  Sick ifSick.
A set of effect propositions is called an action description. Bob’s initial belief state is κ = |¬FullChicken ∧
Every action description AD deﬁnes a transition relation on ¬FullDuck ∧ C hicken|. We are interested in Bob’s new
states as indicated in the following deﬁnition.       beliefs after performing the actions Feed and LookAtCroc.
Deﬁnition 2 Let AD be an action description, let s, s be After feeding the crocodile, Bob’s new belief state κ is a
                                              
states and let A be an action symbol. Then ΦAD(s, A, s ) if subset of |¬Sick|. As a result, after looking at the crocodile,
                                                                     A
               (   ) ⊆   ⊆  (   ) ∪                  the semantics of K deﬁnes Bob’s ﬁnal belief state to be
             E  A, s   s   E A, s   s                 ∅. Hence, performing revision without considering the action
where E(A, s) is the set of literals such that f ∈ E(A, s) history leads Bob to hold a vacuous set of beliefs, despite the
if and only if (A causes f if g1 ∧ ··· ∧ gp) ∈ AD and fact that there are plausible world histories that support Bob’s
s |= g1 ∧···∧gp.                                      observation. This problem can be avoided by introducing an
                                                      appropriate belief change operator.
Intuitively, the transition relation maps a pair (s, A) to a new
interpretation s that is exactly like s except for the values of 3.4 Belief Evolution
the ﬂuents affected by A.                             One way to address erroneous beliefs in AK would be to
                                                      introduce an AGM revision operator ∗ [Alchourr´on et al.,
                      A                                                                          
3.2  Action Language    K                             1985], and then deﬁne Bob’s new beliefs to be κ ∗ Sick.
Our epistemic extension of A will be based on the language However, under this approach, it is possible that Bob’s ﬁnal
AK  of [Lobo et al., 2001]. In this section, we brieﬂy sum- belief state will contain states satisfying Sick ∧ C hicken.
marize the action description portion of AK . We remark that This is the case, for example, if ∗ is the Dalal operator [Dalal,
the complete speciﬁcation of AK also includes queries, plans, 1988]. We suggest that such states should not be possi-
and non-deterministic action effects. We restrict attention to ble, because Bob is aware that sickness never follows eating
the portion of the language that is deﬁned in this section. chicken. Informally, Bob’s observation after feeding should
  A belief state is a set of states. The syntax of AK is ob- cause him to revise his initial belief state. Belief evolution
tained by extending A with sensing actions, with effects given operators have been proposed to model this kind of reasoning
by propositions of the form                           [Hunter and Delgrande, 2005]. We brieﬂy present a simpli-
                                                      ﬁed version of belief evolution.
           causes to know   if  ∧···∧
         A                 f  g1       gp.      (1)     Let Φ be a transition relation as in Deﬁnition 2. We asso-
                                                      ciate a belief projection operator 
 with Φ as follows. For any
The semantics of AK associates an epistemic transition rela-
     L                                                belief state κ and action A,
tion ΦAD with every action description AD.Anepistemic
                                                                             
transition relation is a set of triples κ, A, κ∗ where A is κ 
 A = {s | (s, A, s ) ∈ Φ for some s ∈ κ}.
                       ∗
an action symbol and κ, κ are belief states. The relation Now suppose that ∗ is an AGM revision operator. We will
ΦL
 AD  is deﬁned as follows. If A is a non-sensing action, then actually let ∗ take a set of states as an argument rather than
(     ∗) ∈ ΦL                ∗
 κ, A, κ     AD if and only if κ is obtained by updating a formula, but it is clear that AGM revision can equivalently
each world in κ in accordance with the semantics of A.IfA be formulated in this manner. We deﬁne the belief evolution
                                   (     ∗) ∈ ΦL                                                  ¯
is a sensing action described by (1), then κ, A, κ AD operator ◦ associated with 
 and ∗ presently. Let A denote
just in case one of the following conditions holds.   a ﬁnite sequence of non-sensing actions, and let φ denote a
                                                                                 −1 ¯
     ∗                       ∧···∧                    propositional formula. Deﬁne φ (A) to be the set all states
 1. κ  is the subset of κ where g1  gp and f hold               ¯
     ∗                       ∧···∧        ¬           s such that A gives a path from s to a state where φ is true.
 2. κ  is the subset of κ where g1  gp and f hold     Deﬁne ◦ as follows:
     ∗                     ¬(  ∧···∧    )                                          −1
 3. κ  is the subset of κ where g1    gp holds                     κ ◦A,¯ φ = κ ∗ φ (A¯) 
 A.¯
          (     ∗) ∈  ΦK              ∗
Informally, κ, A, κ    AD  means that κ is a possible Hence, belief evolution operators essentially revise the ini-
belief state after executing the action A with belief state κ. tial belief state before applying the effects of non-sensing
                             A                        actions. In [Hunter and Delgrande, 2005], belief evolution
3.3  Feeding the Crocodile in  K                      operators are deﬁned for arbitrary sequences of sensing and
We illustrate how to represent the crocodile problem. non-sensing actions. To simplify the discussion in the present
The crocodile problem can be described in terms of the paper, however, we restrict attention to sequences involving a
actions Feed and LookAtCroc, along with the ﬂuents    single, terminal sensing action. It would be straightforward
C hicken, FullChicken, FullDuck and Sick. Informally, to extend our results to allow arbitrary action sequences by
C hicken is true if the food bag contains chickens, whereas using the full deﬁnition of belief evolution.

                                                IJCAI-07
                                                  24994  An Action Language for Belief Change               For longer action sequences, we use belief evolution to revise
                                                      the initial belief state before determining the effects of A.
4.1  Syntax
Our language is obtained by making a slight modiﬁcation to Example (cont’d) The crocodile example can be represented
A       A =  O ∪ N       O ∩ N  = ∅           O
 K .Let            where           . We refer to as   in AB  by taking the representation from §3.3 and replac-
the set of sensing actions and we refer to N as the set of non- ing the causes-to-know proposition with the corresponding
                                                                                              −1
sensing actions. The symbol O ranges over sensing actions causes-to-believe proposition. Note that Sick (Feed) is
and the symbol A ranges over non-sensing actions.     the set |FullDuck ∧¬C hicken|. Therefore, according to
Deﬁnition 3 Propositions of AB have the following forms: the semantics of AK , the ﬁnal belief state should be
                                                                 ∗|F         ∧¬C        |
F
 1. A causes f if g1 ∧···∧gp                                   κ     ullDuck      hicken    eed.
                                                      Regardless of the operator ∗, Bob’s new belief state will be
 2. O causes to believe φ if g1 ∧···∧gp
                                                      non-empty and it will only include states where the food bag
where A ∈ N, O ∈ O,eachgi ∈ Lits, and φ is a formula. contains duck.
Note that the effect of a sensing action is now a formula rather
than a ﬂuent symbol.                                  4.3  Reliable Action Descriptions
4.2  Semantics                                        Note that the crocodile example only involves propositions of
                                                                 causes to believe  if
              A                                       the form: O                 φ   φ. Observations of this
The semantics of B is deﬁned with respect to pointed belief form can be understood to represent reliable observations. In
states and epistemic action sequences. A pointed belief state general, we say that an action description is reliable if
                   ∈       ∅ =  ⊆                                                      AD
is a pair s, κ where s S and     κ    S.Thestates     g1 ∧···∧gp |= φ for every sensing effect proposition in AD
represents the actual state of the world and κ represents the set with the form
of states believed to be possible. A pointed knowledge state is causes to believe  if   ∧···∧
a pointed belief state s, κ where s ∈ κ. An epistemic action O                  φ  g1       gp.
sequence is a sequence A1,...,An,O where each Ai ∈ N  By contrast, the action description would not be reliable if it
and O ∈ O. With each action description AD, we associate contained the proposition
an epistemic transition relation ΦAD. For easy of readability,   LookAtCroc causes to believe Sick.
        Φ
we write AD  as a function that takes a pointed belief state In this case, looking at the crocodile causes the agent to be-
and an epistemic action sequence as arguments, and it returns lieve it is sick, whether or not it is actually sick.
a new pointed belief state.                             Reliable action descriptions describe infallible sensing ac-
  Let O ∈ O  and let s ∈ S.DeﬁneEFF  (O, s) to be the tions. The following proposition formalizes the fact that, if
conjunction of every formula φ that occurs in a proposition an agent has correct knowledge of the world, then the conclu-
of the form                                           sions drawn from reliable observations must also be correct.

        O causes to believe φ if g1 ∧···∧gp           Proposition 1 Let AD be a reliable action description and
                                                      let s, κ be a pointed knowledge state. For any epistemic
                                                                    ¯                        ¯
where s |= g1 ∧···∧gp. We are now in a position to deﬁne the action sequence A, it follows that ΦAD(s, κ, A) is a pointed
semantics of AB. Note that, for any action description AD, knowledge state.
the non-sensing portion of AD describes a transition relation
which in turn deﬁnes a projection operator 
. We refer to 4.4 Representing AK

 as the projection operator deﬁned by AD, and we restrict We can give a translation from AK action descriptions to re-
attention to deterministic actions. The following deﬁnition liable AB action descriptions.
                                     ∗
assumes a ﬁxed underlying revision operator .         Deﬁnition 5 Let AD be an action description in AK .The
                                                      A                    (   )
Deﬁnition 4 Let AD be an action description with corre- B action description τ AD is obtained from AD by re-
sponding projection operator 
.Let◦ be the belief evolution placing every sensing proposition with sensing effect f and
operator obtained from 
 and ∗. For every pointed belief state precondition ψ by the following propositions:
                                           
s, κ, deﬁne ΦAD(s, κ, A1,...,An,O)=s ,κ where           O causes to believe f ∧ ψ if f ∧ ψ
                                                                 causes to believe ¬  ∧  if ¬  ∧
 1. s = s 
 A1 
···
An                                          O                    f   ψ    f   ψ
                                                                  causes to believe ¬  if ¬
 2. κ = κ ◦A,¯ EF F (O, s).                                 O                    ψ    ψ.
                                                        The following proposition illustrates the correspondence
Hence, the transition relation associated with returns a
                                       AD             between the given epistemic action languages.
new pointed belief state. The new actual world is obtained by
                                                                                A
updating s by the non-sensing actions in A¯. The new belief Proposition 2 Let AD be an K action description, let O
                                                      be a sensing action in AD and let κ be a belief state. Then
state is obtained by belief evolution.                  K        
                                                      ΦAD(κ, O, κ ) if and only if there is some s ∈ κ such that
  The content of Deﬁnition 4 for action sequences of length Φ (    )=    
1isasfollows.                                           τ(AD) s, κ ,O    s, κ .
                                                                               A
                      Φ   (     )=   
    
       Proposition 2 illustrates that K action descriptions are in-
 1. For non-sensing A: AD   s, κ ,A   s  A, κ  A .    terpreted disjunctively, by determining all possible outcomes
                                                       
 2. For sensing O: ΦAD(s, κ,O)=s, κ∗EFF(O, s).    κ under the assumption that the actual world is in κ.

                                                IJCAI-07
                                                  25004.5  Comparison with Related Formalisms                 We are interested in topological revision operators for two
Son and Baral deﬁne an alternative extension of A,in  reasons. First, topological revision operators do not require
which sensing effects are given by propositions of the form any external notion of similarity: they depend only on the
O determines  f [Son and Baral, 2001]. We can deﬁne a underlying transition system. Second, topological revision
                                                      operators are well-suited for the implementation that we pro-
translation σ from AS to AB by replacing each such propo-
sition with two propositions: O causes to believe f if f pose in the next sections. We do not wish to imply, however,
and O causes to believe ¬f if ¬f.                     that topological revision is appropriate for all action domains;
                                                      topological revision is only appropriate for domains where er-
Proposition 3 Let AD be a set of Son-Baral propositions. roneous beliefs can be explained by action occurrences.
Restricted to pointed knowledge states, the transition relation
Φ
 σ(AD) is equivalent to the corresponding Son-Baral transi- Example (cont’d) We extend the crocodile example by in-
tion relation.                                        troducing a new action called ExchangeF ood which toggles
Hence, AB subsumes both of the epistemic extensions of A. the value of the ﬂuent C hicken. This new action allows an
Moreover, AB is the only one of the three extensions that agent to change the food available to feed the crocodile. Con-
allows erroneous beliefs and respects the interaction between sider the crocodile example extended with this new action,
sensing actions and ontic actions.                    and suppose that ∗ denotes the topological revision operator.
  In the epistemic Situation Calculus, belief is deﬁned We saw earlier that Bob needs to evaluate the expression
through a ranking function on initial states that persists as       ∗|F         ∧¬C        |
ontic actions are executed [Shapiro et al., 2000]. For any sit-    κ    ullDuck      hicken .
                      ( )
uation s, the belief set Bel s is the set of minimally ranked By deﬁnition, we need to ﬁnd the subset of |FullDuck ∧
situations consistent with all sensing actions executed. If we ¬C hicken| that can be reached by a minimal length path
restrict attention to Situation Calculus theories where action from κ. As such, the result of the revision is
effects are deterministic and the initial situations all corre-
spond to distinct states, then we have the following result.       κ 
 ExchangeF ood 
 Feed.
Proposition 4 If A is an ontic action and O is a sensing Therefore, Bob’s ﬁnal belief state is
action, then there is a belief evolution operator ◦ such that
Bel(do(O, do(A, S0)) = Bel(S0) ◦A, O.                         κ 
 ExchangeF ood 
 Feed 
 Feed.
It follows that we can translate action theories in the epis- Informally, Bob explains the fact that the crocodile is sick by
temic Situation Calculus into equivalent action descriptions postulating that the chicken was replaced with duck, and the
in AB. The same can not be said for the epistemic Fluent crocodile was already fed once. This is a plausible conclu-
Calculus, where sensing results satisfy the AGM postulates sion in this example. Postulating actions to explain observa-
[Jin and Thielscher, 2004]. Our work suggests that, in some tions can also lead to non-trivial inferences in some action do-
action domains, simply revising the current belief state leads mains. For example, if we extend the example further to allow
to unintuitive results. To represent such domains, we would Bob to keep an inventory of the number of ducks remaining,
need to deﬁne belief evolution operators directly in the Fluent then topological revision would suggest that he should reduce
Calculus. This would be straightforward to do.        the total by two ducks after he observes the crocodile’s sick-
                                                      ness.
5  Implementation Considerations
In this section, we illustrate how we can solve problems in- Topological revision is essentially a form of abduction, in
                                                      which an agent looks for the shortest sequence of actions that
volving iterated belief change due to action through answer
                                                      can explain an observation. To be clear, we are not suggesting
set planning. We proceed as follows. First, we deﬁne a re-
                                                      that this is suitable for all action domains. However, it is
vision operator based on path length. Next, we introduce an
                                                      appropriate for extended crocodile-type domains where there
informal procedure that can be used to solve belief evolution
                                                      are plausible exogenous actions explaining an observation.
problems with respect to this operator. We then present a
              A
translation from B to answer set programming to illustrate 5.2 Belief Evolution Under Topological Revision
how the procedure can be automated.
                                                      In this section, we illustrate that belief evolution under topo-
5.1  Topological Revision Operators                   logical revision can be reduced to ﬁnding shortest paths. We
A transition relation on states can be used to deﬁne a natural start by considering a single non-sensing action. Let κ denote
AGM  revision operator. Let Φ be a transition relation, and a belief state, let A denote an action symbol, and let φ denote
                                                      a formula. We are interested in determining
let κ, α be sets of states. For technical reasons, we assume
                                                                                   −1
that every state in α is reachable from κ by a ﬁnite path in       κ ◦A, φ = κ ∗ φ (A) 
 A.
Φ.Deﬁneκ   ∗ α to be the subset of elements of α that can
be reached by a minimum length Φ-path. Under the assump- Figure 1 illustrates how this is calculated with the topo-
tion that every state in α is reachable from κ, it follows that logical revision function. The ﬁgure shows a large box rep-
∗ deﬁnes an AGM revision operator; we refer to this as the resenting φ−1(A); these are the states that can reach |φ| by
topological revision operator deﬁned by T .           executing the action A. The circle inside φ−1(A) represents

                                                IJCAI-07
                                                  2501                                                          for each i<n, τn(AD) contains the rules
                                                                  (¬) ( +1)←     ( )  ( )      ( )
         −1(  )                                                      f i       A  i ,g1 i ,...,gp i
      'φ    A    $                'κ          $
                                                        2. if B is either an action atom or B is f(0) for some f ∈
                                     
                                                          F,thenτn(AD)  contains the rules
                   shortest path 
                         ...                                              ¬  ←
                                                                       B    not B
                                                                            ←     ¬
      &          %                &           %                           B    not  B
                @
                                                        3. for every ∈ F and    , n(    ) contains
                A @      | |                                      f         i<n  τ  AD
                   @R'φ        $
                                                                     f(i +1)←   not ¬f(i +1),f(i)
                                                                     ¬f(i +1)←   not f(i +1), ¬f(i)
                                                        4. for every i<n, and every pair of distinct action symbols
                                                                   (   )
                    &          %                          A1,A2, τn AD   contains the rules
                                                                          ¬A1(i) ←  A2(i).
       Figure 1: Visualizing Topological Evolution    The ﬁrst two sets of rules are taken directly from Lifschitz and
                                                      Turner’s translation of C[Lifschitz and Turner, 1999].Rule
the subset that is minimally distant from κ, which in this con- (3) states that all ﬂuents are inertial, and (4) states that at most
text means the elements that can be reached from κ by a min- one action occurs at each point in time.
                                             −1(  )
imal length path. In other words, the circle inside φ A Proposition 5 A complete set X is an answer set for τn(AD)
           ∗  −1( )
represents κ φ   A . This gives a simple procedure for if and only if it has the form
computing κ ◦A, φ.
                                                              n                n−1
 1. Determine φ−1(A).
                                                                 {f(i) | f ∈ si}∪  {A(i) | A = Ai}
 2. Let PATH   denote the set of shortest paths from κ to     i=0               i=0
    φ−1(A).
                                                      for some path s0,A0,s1,...,An−1,sn in the transition re-
 3. Let κ0 be the set of terminal nodes on paths in PATH. lation described by AD.
        1 =  0 

 4. Let κ   κ   A.                                    Hence every answer set for τn(AD) corresponds to a path in
Clearly κ ◦A, φ = κ1. Hence, this procedure allows us the transition relation.
to compute the outcome of belief evolution for trajectories of For the purpose of planning, it is useful to add a few rules
length 1. Note that steps 1,3 and 4 are straightforward; to im- to τn(AD) that restrict the admissible answer sets. Let K be
plement a solver, we need some mechanism for determining the conjunction of literals k1 ∧···∧kp.Deﬁneτn(AD, K) to
                             −1
the set of shortest paths from κ to φ (A).            be the logic program obtained by adding the following rules
                                                      to τn(AD): k1(0),...,kp(0). It is easy to see that the an-
5.3  Translation to Answer Set Programming            swer sets for τn(AD, K) correspond to all paths of length n
Answer set planning refers to the approach to planning in which start in a state where K is true. We are interested in
which a problem is translated into an extended logic program using answer sets to solve |K|◦A, f,where◦ is given by
where the answer sets correspond to plans [Lifschitz, 1999]. the projection operator and the topological revision operator
Many action languages have been translated into logic pro- deﬁned by AD.
gramming for answer set planning. We demonstrate how one To simplify the discussion, we assume that, for each A,
existing translation can be modiﬁed for our purposes. the action description AD contains at most one proposition
  We need a translation from A into logic programming. Our in AD of the form
translation is obtained by modifying a well known translation      A causes   if   ∧···∧
from C [Lifschitz and Turner, 1999].LetAD be an action                      f   g1       gp.
description in the action language A. For any natural number If such a proposition exists for the action A, then deﬁne
                                      (   )
n, we deﬁne an associated logic program τn AD with the PRE(A, f)=g1  ∧···∧gp. Otherwise, deﬁne PRE(A, f)=
property that answer sets for τn(AD) correspond to paths of ⊥.
length n in the transition relation described by AD. The lan-
                                                      Proposition 6 If s ∈ S, f ∈ Lits, and A ∈ A,then
guage of τn(AD) consists of two disjoint classes of atoms,
deﬁned as follows. For each i ≤ n and each f ∈ F, the lan- s 
 A |= f ⇐⇒ s |= PRE(A, f) ∨ (f ∧ PRE(A, ¬f).
guage of τn(AD) contains an atom f(i). For each i<nand
                                                                   −1(  )=|PRE(      )∨(  ∧PRE(    ¬  ))|
each A ∈ A, the language of τn(AD) contains an atom A(i). It follows that f A    A, f   f        A,  f  .
The logic program τn(AD) consists of the following rules: We are now in a position to give a basic procedure for the
                                                      implementation of a belief evolution solver. Given K, A, and
 1. for every proposition in of the form
                        AD                            f,deﬁneevol(K, A, f) to be the pair of belief states returned
              A causes (¬)f if g1 ∧···∧gp             by the following procedure.

                                                IJCAI-07
                                                  2502