Reasoning about the Interaction of Knowlege, Time and Concurrent Actions in the 
                                                Situation Calculus 
                                                  Richard B. Scherl 
                                           Computer Science Department 
                                                Monmouth University 
                                           West Long Branch, New Jersey 
                                                 07764-1898 U.S.A. 
                                               rscherl@monmouth.edu 

                        Abstract                                 Furthermore, speci£cation of an agent's ability to achieve 
                                                               a goal in general involves requiring that the agent know what 
     A formal framework for specifying and developing 
                                                               to do to arrive at a goal state [Moore, 1980; Lesperance et 
     agents/robots must handle not only knowledge and 
                                                               al, 2000]. As the ability to achieve particular goals will often 
     sensing actions, but also time and concurrency. Re•
                                                               involve the ability to perform concurrent actions, the integra•
     searchers have extended the situation calculus to 
                                                               tion of knowledge and concurrency is an important step in 
     handle knowledge and sensing actions. Other re•
                                                               fully formalizing these aspects of ability. 
     searchers have addressed the issue of adding time 
     and concurrent actions. Here both of these fea•             We develop our framework within the situation calcu•
     tures are combined into a uni£ed logical theory of        lus - a £rst-order formalism for representing and reasoning 
     knowledge, sensing, time, and concurrency. The re•        about the effects of actions. The language is based upon 
     sult preserves the solution to the frame problem of       the dialect of the situation calculus used in the Cognitive 
     previous work, maintains the distinction between          Robotics Group at the University of Toronto. Certainly, an•
     indexical and objective knowledge of time, and is         other formalism could have been used. Within A.I. numer•
     capable of representing the various ways in which         ous varying formalisms are available for nrepresenting and 
     concurrency interacts with time and knowledge.            reasoning about action (to name a few, [Shanahan, 1995; 
     Furthermore, a method based on regression is de•          Baral et al, 1997]). Knowledge has been incorporated 
     veloped for solving the projection problem for the•       into a number of these (for example, [Lobo et al, 2001; 
     ories speci£ed in this version of the situation calcu•    Thielscher, 2000]). Outside of A.I. proper, there is also [Fa-
     lus.                                                      gin et al, 1995] on the interaction of knowledge and time. 
                                                                 But by working in the situation calculus, we are able to 
1 Introduction                                                 extend previous work on reasoning (by regression and theo•
                                                               rem proving) to cover the language developed here as well. 
The aim of this paper is to develop a uni£ed approach for 
                                                               Furthermore, our work is suitable to be incorporated into the 
axiomatizing the interaction of knowledge, sensing, time, and 
                                                               robot programming languages GOLOG and CONGOLOG. It 
concurrency. Actions have preconditions which may include 
                                                               can then be used to specify agents that must reason about the 
knowledge preconditions. Sensing actions alter knowledge. 
                                                               interactions of time, knowledge, and concurrent actions (in•
The knowledge produced depends upon the relative time at 
                                                               cluding sensing actions). 
which sensing actions occur and also whether or not other 
sorts of actions occur concurrently. All of this interacts with  The situation calculus [McCarthy and Hayes, 1969] is 
the agent's evolving knowledge of time.                        a language for modeling dynamically changing worlds. 
   Consider a robot gathering knowledge about its environ•     Changes to the world are the results of actions, while pos•
ment. It moves about while concurrently panning the camera     sible world histories consisting of sequences of actions are 
and at various points senses the environment for the presence  represented by situations. The situation calculus can be 
of objects with various characteristics. The knowledge ob•     used for agent planning via goal regression. Reiter [Reiter, 
tained through sensing (positions of objects of various sizes, 1991] proposed a simple solution to the frame problem, an 
shapes and colors) depends upon the position of the robot at   approach to axiomatization within the situation calculus. Al•
a particular point in time, the angle of the camera, etc. For  though this approach to the frame problem requires certain 
many purposes, the results of sensing actions that occur at the simplifying assumptions, it has proven to be useful and is the 
same time are important. Not only do we have the need for      foundation for both goal regression and the programming lan•
two distinct concurrent sensing actions in binocular stereop-  guage GOLOG. Goal regression was extended by Scherl and 
sis, but also in the simultaneous use of other features such as Levesque[Scherl and Levesque, 2003] to apply to an agent 
texture gradients and shading to achieve knowledge of depth    who can sense properties of the external world (e.g., read 
relationships. Here it is relative, not absolute time, that is numbers on a piece of paper or determine the shape of an 
important.                                                     object). 


REASONING ABOUT ACTIONS AND CHANGE                                                                                   1091    This paper1 combines and extends the work of Scherl            To treat knowledge as a ¤uent, they introduce a binary rela•
 and Levesque [Scherl and Levesque, 2003] incorporating the    tion K read as is accessible from s" and treat it the 
 model of concurrency and time presented by Reiter [Re•        same way we would any other auent. In other words, from the 
 nter, 2001]. At the same time, Reiter's simple solution to    point of view of the situation calculus, the last argument to K 
 the frame problem is preserved. The real difficulty is to per• is the official situation argument (expressing what is known 
 form the synthesis in such a way that the important distinc•  in situation s), and the £rst argument is just an auxiliary like 

 tion between indexical and objective time [Lesperance and     the in BROKEN 2 
 Levesque, 1995] is preserved.                                   The notation Knows(P(now),s) (read as P is known in 
   If the agent currently knows the absolute time, then he     situation s) can then be introduced as as an abbreviation for a 
 knows the absolute time after executing an action. But if he  formula that uses K. For example 
 doesn't know the absolute time, then he only knows that he 
 began executing the action some number of time units ago, 
 unless of course he reads a clock. While maintaining these 
 properties, the results presented here allow the representation The special indexical now is instantiated with a situation vari•
 of the various ways in which actions (including sensing ac•   able upon expansion. 
 tions and possibly other concurrent actions) interact with time The approach also handles actions that make known the 
 and knowledge. The method of regression is also extended to   denotation of a term. For this case, one needs the notation 
 work with this augmented language.                            Kref(T(now), s) de£ned as follows: 
   Section 2 gives a quick introduction to the situation calcu•
 lus and Section 3 does the same for the foundational axioms. 
The representation of knowledge and sensing actions are cov•
 ered in Section 4. Concurrency is integrated into the frame•
 work in Section 5. Section 6 covers some additional con•        In general, there may be many knowledge-producing ac•
structs of the language and illustrates their representational tions, as well as many ordinary actions. To characterize all 
power. A number of properties of the formulation are dis•      of these, we have following the presentation in [Scherl and 
cussed in Section 7. Regression is covered in Section 8. Fi•   Levesque, 2003], a function SR (for sensing result), and for 
nally, Section 9 is the conclusion.                            each action a, a sensing-result axiom of the form: 
                                                                                                                      (1) 
2 Situation Calculus and the Frame Problem 
                                                               This result is "YES" if "Q" is true and "NO" otherwise. The 
Space does not permit a full exposition of the background      symbols are given in quotes to indicate that they are not 
material on the situation calculus. The framework developed    ents. The sensing result function for SENSEQ is axiomatized 
in [Reiter, 2001] is followed and full details may be found 
                                                               as follows: 
there or in [Scherl, 2003]. We assume that the frame problem 
has been handled by utilizing successor state axioms.                                                                 (2) 

3 Foundational Axioms                                            For ordinary actions, the SR result is always the same, with 
Following [Lin and Reiter, 1994; Reiter, 2001] the founda•     the sped result not being signi£cant. For example, we 
tional axioms for the situation calculus are utilized. These   could have: 
axioms provide us with a definition of s which says 
                                                                                                                      (3) 
that there is a sequence of zero or more executable actions 
that move from situation s to situation s'. Again, space does    In the case of a RE A action that makes the denotation of 
not permit full development of this material here. Full details the term known, we would have: 
may be found in [Reiter, 2001; Scherl, 2003]. 
                                                                                                                      (4) 
4 An Epistemic 'Fluent                                         Therefore, has the same denotation in all worlds s" such 
                                                               that and so Kref DO(REA S)) 
Scherl and Levesque [Scherl and Levesque, 2003] adapt the 
standard possible-world model of knowledge to the situation 
calculus, as £rst done by Moore [Moore, 1980]. Informally,       The form of the successor state axiom for K without con•
one can think of there being a binary accessibility relation   currency is as follows: 
over situations, where a situation s' is understood as being 
accessible from a situation s if as far as the agent knows in sit•                                                    (5) 
uation s, he might be in situation s'. So something is known 
in s if it is true in every s' accessible from s, and conversely 
something is not known if it is false in some accessible situa• The relation K at a particular situation DO is completely 
tion.                                                          determined by the relation at s and the action 

   'An earlier version of some of this work has appeared in [Zim- 2Note that using this convention means that the arguments to K 
merbaum and Scherl, 2000].                                     are reversed from their normal modal logic use. 


1092                                                                       REASONING ABOUT ACTIONS AND CHANGE 5 Concurrency                                                  which is needed to relate the time of the action/time pair to 
As originally de£ned in the situation calculus [McCarthy and   the start of a situation. There may also be an axiom giving the 
Hayes, 1969], actions had to occur sequentially, with one      start time of the initial situation So. We also de£ne a variant 
action completed before another could begin. Furthermore,      notation: 
there was no facility to deal with the continuous passage of                                                         (10) 
time. This contrasted with other formalisms such as the event    We adopt, without signi£cant change, Reiter's requirement 
calculus which could naturally handle concurrent actions and   that concurrent actions be coherent, that is there is at least one 
continuous time.                                               action-time pair in the collection, and the time of all pairs 
                                                               in the collection is the same: 
5.1 Concurrency with Knowledge 
The work of Pinto [Pinto, 1994] and Reiter [Reiter, 2001] 
proposed an approach to dealing with concurrency, natural 
actions and continuous time while still maintaining the so•
lution to the frame problem. Reiter [Reiter, 2001] de£ned      A set of action-time pairs are coherent if each of them have 
a new sort concurrent, sets of simple actions. Variables       the same time component. 
        represent the sort actions and represent the             The de£nition of time can readily be extended to sets of 
sort concurrent. In Reiter's notation, the time of an action's concurrent actions and this allows us to de£ne the function 
occurrence is the value of that action's temporal argument.    start of a situation resulting from the execution of a concur•
Thus an action has the form A and for each action an           rent action. 
axiom of the form TIME is required to indicate 
the time of the action. 
   Concurrent actions are sets of ordinary actions that are 
taken to represent instantaneous acts. An action with dura•
tion is represented by two instantaneous actions — a start ac•
tion and an end action. Additionally, the foundational axioms    The predicate POSS(c\ $) means that it is possible to exe•
are modi£ed to rule out the possibility of prior actions having cute concurrent action c in situation .s. 
later times. 
   So if we want to represent a PRESSING action with duration 
(as in pressing a button that keeps a light on), the approach 
is to de£ne two actions; STARTPRESS and ENDPRESS. We 
also must introduce a auent PRESSING. The needed succes•
sor state axiom is as follows: 
                                                               If it is possible to execute a concurrent actions, then it is co•
                                                        (6)    herent and each of the simple actions is possible. 
                                                                 We implicitly assume an additional sort ranging over time 
                                                               points which can be integers, rationals or reals; depending on 
This approach to representing actions with duration is some•   how one wants to model time. The standard Arabic numerals 
thing that we make use of here.                                are used to represent time points. Additionally, the symbols 
   But, the use of a temporal argument for actions is problem• for addition and subtraction are interpreted as the usual oper•
atic in the presence of knowledge. Given our successor state   ations on numbers (integers, reals etc.) 
axiom for K, it would require the agent to know the time after 
any action, even if it was unknown in the previous situation.  5.2 Precondition Interactions 
To avoid this, we can not represent time as an argument to the We need to be able to conclude when a particular concurrent 
instantaneous actions.                                         action c is possible in a situation c in order for the machinery 
  Instead, we represent the instantaneous actions and asso•    being developed in the rest of this paper to work. Unfortu•
ciated times as a tuple of the form with functions             nately, Sentence 15 does not suffice. The conditional can not 
ACTION and TIME de£ned, returning the rst and second ele•      be changed to a biconditional because of the precondition in•
ments of the tuple:                                            teraction problem [Pinto, 1994; 1998]. 
                                                                 This issue needs to be handled by the axiomatizer of the 
                                                        (7)    domain. For example, the axiomatizer might provide the fol•
                                                               lowing axiom: 
                                                        (8) 
These pairs, represented by variables are elements of 
the sort action-time pairs. Concurrent Actions are now a set 
of such tuples. The sort action contains actions without a 
temporal argument. 
  We also have the following                                   As discussed in [Pinto, 1994; 1998], the axiomatization of 
                                                               PRECINT is domain dependent and can be done at increasing 
                                                        (9)    levels of detail. 


REASONING ABOUT ACTIONS AND CHANGE                                                                                  1093    For the purposes of this paper, the point here is that what•  Now the successor state axiom for K needs to be modi£ed 
 ever solution is used for the precondition interaction problem to include SCOND as well. 
 in the ordinary situation calculus carries over to the case of 
 knowledge and sensing. 
 5.3 Successor State Axiom for K with 
       Concurrency 
 The Successor State Axiom for K using concurrency can be 
 stated in several alternative ways depending on what condi•
 tions one wishes to apply regarding the agent's knowledge of 
 time. We continue to require that the relation K at a particular 
 situation DO(<?, s) is completely determined by the relation at 
 * and the set of concurrent actions c. 
                                                                For every action an appropriate SCON axiom needs to be 
   The following successor state axiom models an agent who 
                                                               written. For most actions, the action is simply: 
 knows how much time is passing3. This is an agent who has 
 an accurate clock.                                                                                                  (20) 
                                                               6 The Language and Examples 
                                                               6.1 Further Constructs 
                                                               Wc need some way to refer to the current time without speci•
                                                               fying the value of the current time. To achieve this we use the 
                                                               special indexical term now. Upon expansion the term is re•
                                                              placed with the appropriate situation term. So, START(now) 
                                                               can be used to refer to the current time. Here we illustrate by 
                                                              example. The agent's knowing the objective time is expressed 
 After executing a set of concurrent actions c in situation s, as Know (start (now) This expands into 
as far as the agent knows, it could be in a situation 
 is the result of performing in some previously accessible 
situation provided that is possible in and that s' is            We augment our language with a number of additional ex•
identical to s in terms of what is being sensed. Furthermore, pressions. These are based on ideas developed by Lesperancc 
it is required that the concurrent action being performed in  and Levesque [Lesperance and Levesque, 1995] and require 
all situations accessible from .s be identical to in terms of the use of the notion of precedence of situations as de£ncd 
the individual actions that make up the set.                  earlier. Note that we distinguish between the relation on 
   Note that it is not required that the TIME of the actions in all integers used to represent time points and the relations 
the accessible situations be identical. If this were the case, it on situations as de£ned in the foundational axioms for the 
would force the agent to know the objective time after execut• situation calculus. 
ing any action. Rather, it is only required that the difference 
between the start of the current situation and the start of the  The macro Happened is introduced to allow one to talk 
previous situation be the same in all accessible situations (in• about an action occurring at a particular time point. 
cluding the actual situation). This requirement does ensure 
that the agent knows how much time is passing, but the ob•
jective time is only known if it was known before the action 
has occurred. 
                                                                                                                    (21) 
5.4 Concurrency and Sensing                                   It speci£es that an action occurred prior to s and it was time t 
One can readily imagine cases of sensing actions where        at some point during the action's duration. 
the desired result of sensing (knowing whether or not some       The macro Wasat is introduced to allow one to assert that 
proposition holds) depends upon some other action occurring   a ¤uent was true at a particular point in time. 
concurrently. For example, the light needs to be turned on 
while the camera is clicked. If the light is off, then sensing 
produces no knowledge. 
   Consider representing, the requirement that the light switch 
be pressed while SENSEp occurs for the knowledge of           It speci£es that P held at s' and was the time of or pre•
whether or not P holds to result from the execution of        ceded t and no other situation after s' preceded Here we 
SENSKp. We need to de£ne a predicate SCOND.                   introduce another special indexical then which is needed to 
                                                              ensure that the correct situation is substituted into the situa•
           SCOND(SHNSEp,cs) = PRESSING(s) (18) 
                                                              tion argument of the predicate which is the middle argument 
   3Other possibilities are considered in [Scherl, 2003].     to Wasat. 


1094                                                                      REASONING ABOUT ACTIONS AND CHANGE 7 Properties of the Formulation                              8 Reasoning 
First of all, we show that the distinction between indexical A regression operator is de£ned relative to a set of suc•
and objective time is preserved.                             cessor state axioms Space limitations here only allow a 
                                                             sketch of the regression operators. Full details may be found 
                                                             in [Scherl, 2003]. 
                                                                The operators satisfy the following regression theorem: 
                                                             Theorem 1 For any ground situation term and formula 
                                                             G: 

                                                             Here is the initial axiomatization of the domain and is 
                                                             the set of successor state axioms. 

                                                             8.1 Regression Operators 
Even if agents do not know the objective time, they do know 
how much time has passed since the last occurrence of a par• The regression operator 7Z is de£ned relative to a set of suc•
ticular action or the last time at which a particular nuent was cessor state axioms The £rst four parts of the de£nition 
true.                                                        of the regression operator concern ordinary (i.e. not 
Proposition 3 (Knowledge of Indexical Time 1)                knowledge-producing) actions [Reiter, 2001]. They are ex•
                                                             actly the same as those in [Reiter, 2001]. Additionally, it is 
                                                             necessary to correctly regress the equality predicate as dis•
                                                             cussed in [Scherl and Levesque, 2003; Reiter, 2001]. 
                                                                Additional steps are needed to extend the regression op•
Proposition 4 (Knowledge of Indexical Time 2) For every 
                                                             erator to knowledge-producing actions. Two de£nitions are 
                                                             needed for the speci£cation to follow. When is an arbitrary 
                                                             sentence and s a situation term, then is the sentence that 
                                                             results from instantiating every occurrence of now in with 
Additionally, the crucial results of [Scherl and Levesque,   s'. The reverse operation is the result of instantiating 
2003] carry over to the case considered here. These include  every occurrence of s' in with now. 
Proposition 5 (Default Persistence of Ignorance) For an         Step v covers the case of regressing the Knows operator 
action a and a situation s, if-iKnows(P, s) holds and the    through a non-knowledge-producing action. Step vi covers 
axiomatization entails                                       the case of regressing the Knows operator through a knowl•
                                                             edge producing action. In the de£nitions below, ,s' is a new 
                                                             situation variable. 
and 
                                                             v. Whenever c does not contain a knowledge-producing ac•
                                                                  tion, 
  then                                                                                           Knows(Poss(c) 
                  -iKnows(P, DO(a, s)) 
holds as well. 
                                                             vi. Whenever c does contain a knowledge-producing action, 
Proposition 6 (Knowledge Incorporation) For 
knowledge-producing action or the negation 
of V,or the negation of ¤uent P, and 
situation a, if the axiomatization entails 
                 Knows 
                                                                The special function trans replaces c with a that has the 
and also                                                     identical action in each of the action-time pairs. But it re•
                                                             places the time portion with a relative time. This is an ex•
and                                                          pression of the form (3 = TIMK(now)). So, if c occurs in 
                   Knows                                     a situation term of the form DO(C, s) and TlME(r) is 7 and 
hold, then                                                   START(s) is 4, then the 7 in the time part of every action-
                   Knows                                     time pair in c would be replaced by (3 = TlME(now)). These 
holds as well.                                               are properly handled by the operators for regressing equality 
Proposition 7 (Memory) For all P and situations .s,          predicates. 
if Knows(P, s) holds then Knows holds as long                   The regression operators for Happened and Wasat follow: 
as the axiomatization entails                                viii. 

These results ensure that actions only affect knowledge in the 
appropriate way. 


REASONING ABOUT ACTIONS AND CHANGE                                                                                1095 