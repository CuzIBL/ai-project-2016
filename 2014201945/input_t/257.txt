                 Multiagent Planning with Partially Ordered Temporal Plans 
                                                   Michael Brenner 
                     Institut fiir Informatik, Universitat Freiburg, 79110 Freiburg, Germany 
                                        brenner@informatik.uni-freiburg.de 

                         Abstract                              and 4 minutes and depend only on the map distance and speed 
    This paper* discusses the specifics of planning in mul•    of the agent, extinguishing a fire may take 1 to 4 hours de•
    tiagent environments. It presents the formal framework     pending on conditions unknown to the agents. 
    MAPL ("maple") for describing multiagent planning do•         This trivial example shows several general features of 
    mains. MAPL allows to describe both qualitative and quan•  MAP problems and plans: (1) Agents may be unaware of 
    titative temporal relations among events, thus subsuming the parts of the world state (P does not know whether R13 is 
    temporal models of both PDDL 2.1 and POP. Other fea•       blocked). (2) Concurrent acting is central to MAP (P can 
    tures are different levels of control over actions, modeling 
                                                               move to Locl and start clearing R13 while F is extinguish•
    of agents' ignorance of facts, and plan synchronization with 
    communicative actions. For single-agent planning in multi- ing HI, although both agents using the same road at the same 
    agent domains, we present a novel forward-search algorithm time may be prohibited to avoid collisions). Modeling con•
    synthesizing MAPL's partially ordered temporal plans. Fi•  currency necessitates (2a) a description of which events may 
    nally, we present a general distributed algorithm scheme   occur concurrently and which not, (2b) metric time for real•
    for solving MAPL problems with several coordinating plan•  istic descriptions of action durations and their relations, but 
    ners. These different contributions are intended as as step (2c) synchronizing on actions of unknown (at least to some 
    towards a simple, yet expressive standard for the descrip• agent) duration demands qualitative use of time (e.g. "after 
    tion of multiagent planning domains and algorithms. Such a P has cleared R13"). A specific usage of qualitative time is 
    standard could in the future allow cross-evaluation of Multi-
                                                               (3) synchronization on communicative acts, as in "F moves to 
    agent Planning algorithms on standardized benchmarks. 
                                                               Loc3 after P has informed him that R13 is clear". 
                                                                  In their plans, agents must take other agents actions into 
   In this paper, we discuss the specific properties of plan•
                                                               account: F may "exploit" P's clearing of R13 in his own plan 
 ning in Multiagent Systems (MAS). With the term Multiagent 
                                                               but must also assure that he does not try to use a road that is 
 Planning (MAP), we denote any kind of planning being per•
                                                               also used by P at the same time. Especially, (4) cannot control 
 formed in multiagent environments, meaning on the one hand 
                                                               occurence or duration of other agents' actions. 
 that the planning process itself may be distributed among sev•
 eral planning agents, but also that individual plans can (and    To address the representation problems (1)-(4) we intro•
possibly must) take into account concurrent actions by several duce the Multiagent Planning Language MAPL ("maple"). 
executing agents.                                              Instead of propositional state representations MAPL allows 
                                                               non-boolean state variables (cf. also [5]). To model feature 
                                                               (1) each state variable may have the special value unknown, 
                                                               thereby avoiding representation of belief states as sets of pos•
                                                               sible states. A number of other advantages comes with the 
                                                               introduction of state variables; especially, for feature (2a), an 
                                                               intuitive definition of mutual exclusivity (i.e. the impossibil•
                                                               ity to execute some actions concurrently, cf. [1]) can be given 
          Figure 1: A multiagent planning problem              that describes mutexes as read-write locks on state variables. 
                                                               According to this perspective, distributed planning can then 
   As a motivating example, Fig. 1 shows a simple MAP 
                                                               be seen as detection or, even better, prevention of possible 
problem as appearing in the RoboCupRescue challenge [7]. 
                                                               read-write locks before execution. 
Two autonomous agents, police force P and fire brigade F, 
                                                                  MAPL's temporal model allows to combine (2b) quantita•
are working in a city devastated by an earthquake. While F's 
                                                               tive and (2c) qualitative temporal information in plans, thus 
goal is to extinguish all burning houses, it is P's capability 
                                                               subsuming both the purely metric temporal model of PDDL 
and goal to clear the blocked roads. P's position being LocO 
                                                               2.1 [4] and the purely qualitative model of Partial Order Plan•
we will assume him being unaware of R12 and R13 being 
                                                               ning [8]. At its core MAPL represents a multiagent plan as 
blocked. The agents' actions have specific durations that may 
be exactly known only at execution time, sometimes because     a Simple Temporal Network [3] in which each durative ac•
of specific execution parameters of the agents, sometimes be•  tion is modeled by start and end events, possibly extended by 
cause of intrinsic unpredictability of the environment: while, invariant conditions. In the STN, both action durations and 
for example, moving through the town may take between 2        qualitative ordering relations are treated as constraints repre•
                                                               sented by closed, semi-open or open intervals. In so doing, 
   * Definitions of the formal semantics of our Multiagent Planning not only can imprecisely known action durations be repre•
Language as well as the algorithms for single and multi-agent plan• sented as intervals of the form but qualitative con•
ning are given in the long version of this paper [2].          straints like "after" can be described by (semi-)open intervals 


 POSTER PAPERS                                                                                                       1513  like (0, ). Fig. 2 shows F's plan for the problem of Fig. 1,               When several agents are planning and acting individually 
 the interval (0, oo) being represented as <.                            in a common environment, they will probably run into one of 
    Another new concept shown in Fig. 2 is (3) the use of                the following problems: (6) They won't be able to find in•
 speech acts as reference events for plan synchronization. On            dividual plans solving their problems or (7) the plans found 
 the one hand, this allows agents to refer to facts (especially          will conflict at execution time. MAP Literature has mostly 
 those achieved by others) the change of which they do not               treated only problem (7), implicitly assuming that plans can 
 influence or witness themselves. On the other hand, as ex•              be found and that therefore separating planning from coor•
plained later, speech acts allow agents to reveal only the min•          dination is possible. In our opinion, coordination during the 
 imum of information about their plans needed for coordina•              planning phase is indispensable in the case of problem (6) and 
tion.                                                                    advantageous for problem (7). We have therefore developed a 
                                                                         general distributed planning algorithm that uses single-agent 
                                                                         planning to synthesize partial plans and to trigger cooperation 
                                                                         and coordination efforts as early as possible. 
                                                                            A key concept is the use of a responsibility function that 
                                                                         assigns to each state variable an agent managing and control•
                                                                         ling its changes over time. This agent will detect read-write 
                                                                         conflicts in the agents' plans, i.e. possible execution conflicts, 
                                                                         but will also provide information when another agent cannot 
                                                                         achieve a (sub)goal involving that variable. In the basic form 
 Figure 2: F's plan (including a communicative action by P) 
                                                                         of the algorithm, the responsibility is static, but similar to ap•
    A plan is only fully specified with (4) a control function           proaches in Distributed CSP research [9] we will relax this 
describing which of the agents (or the environment) controls             assumption in future work. The idea of the algorithm is sim•
the occurence of each event. With this function we can de•               ple: in a reachability analysis the planning agent detects goals 
scribe, e.g., that a specific agent is allowed to add and remove         involving state variables he does not know about, cannot ma•
an action from his plan (control of the start event), but has            nipulate or could if only some earlier condition were satisfied. 
no influence on it its duration (end event controlled by the             He contacts the responsible agents to receive more informa•
environment). During planning, having control of an event                tion or delegate a subgoal concerning the variable. The re•
or not fundamentally changes its possible use and evaluation.            sponsible agent answers the question or adopts a temporary 
For example, being able or unable to control the duration of             goal to help the asking agent. 
an action will lead the planner to a fundamentally different                All contributions of this paper aim at clarifyfing the spe•
heuristic evaluation of its use.                                        cific representational and algorithmic needs of MAP research. 
   For a plan to be executable, it must be both temporally               We hope that our representation will allow to conveniently de•
and logically consistent. The former criterion is reducible to           scribe diverse MAP domains for which researchers can pro•
consistency of the underlying STN. The latter, logical consis•          pose and cross-evaluate algorithmic approaches just as di•
tency, can be defined similarly to POP as the plan having no            verse, thus promoting the field of Multiagent Planning. 
open conditions and no unsafe links, with the additional crite•
rion that the plan must ensure that no mutex events may occur           References 
concurrently. For a plan to solve a certain agent's problem it          [1] A. Blum and M. Furst. Fast planning through planning graph 
must achieve his goals and also be consistent with the control               analysis. A1J, 90(1-2), 1997. 
function, i.e. only constraints involving events controlled by           12] M. Brenner. Multiagent planning with partially ordered tempo•
the respective agent must have been tightened by the planner.                ral plans. Technical report, Institut fur Informatik, Univerisit "at 
   How is planning in MAS carried out? It is obvious that                    Freiburg, Germany, 2003. 
the easiest way is to find a plan alone: assumed that F knows           [3] R. Dechter, I. Meiri, and J. Pearl. Temporal constraint networks. 
about P\s capabilities, F can find a plan that solves his prob•             AIJ, 49, 1991. 
lems. Even if F does not know about P's concrete actions, 
                                                                        [4] M. Fox and D. Long. PDDL 2.1: an Extension to PDDL for 
this plan will provide clues about where help is needed and                  Expressing Temporal Planning Domains, 2002. 
thus triggers cooperation. We see that (5) the capability for 
                                                                        [5] H. Geffher. Functional STRIPS: a more fbxible language for 
single-agent synthesis of multiagent plans is a basic require•
                                                                             planning and problem solving. In Logic-Based Artificial Intelli•
ment for MAP. We have developed a plan-space forward-                       gence. Kluwer, 2000. 
search algorithm that can be used with any standard forward 
branching scheme and arbitrary plan metrics. We present two             [6] J. Hoffmann and B. Nebcl. The FF planning system: Fast plan 
                                                                             generation through heuristic search. J AIR, 14, 2001. 
such metrics, the well-known makespan and the new min-
MaxMakespan, the latter of which extends the former by as•              [7] H. Kitano et al. RoboCupRescue: Search and rescue in large-
signing maximal possible duration to uncontrolled durative                   scale disasters as a domain for autonomous agents research. In 
                                                                            IEEE Intl. Conf. on Systems, Man and Cybernetics, 1999. 
actions. We also describe how heuristic forward planning 
in the style of FF [6] can be extended to find MAPL plans.              [8] Daniel Weld. An introduction to least commitment planning. Al 
The current simple algorithm is sound, but not complete, i.e.               Magazine, 15(4), 1994. 
there is a set of clearly distinguished MAPL problems it can•           [9] M. Yokoo and K. Hirayama. Algorithms for distributed con•
not solve yet. We are working on a sound, yet more complex                   straint satisfaction: a review. Autonomous Agents and Multi-
version of the algorithm.                                                   Agent Systems, 3(2), 2000. 


1514                                                                                                                   POSTER PAPERS 