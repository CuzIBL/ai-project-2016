  On a generalization of triangulated graphs for domains decomposition of CSPs 
                      Assef Chmeiss*                     Philippe Jegou and Lamia Keddar 
                  CRIL-CNRS FRE 2499                           LSIS-UMRCNRS6168 
             Universite d'Artois - IUT de Lens              Universite d'Aix-Marseille III 
                Ruedel'Universite-SP16                  Avenue Escadrille Normandie-Niemen 
                 62307 Lens Cedex, France                  13397 Marseille cedex 20, France 
                chmeiss@cril.univ-artois.fr {philippe.jegou, lamia.keddar}@univ.u-3mrs.fr 

                     Abstract                          by the compatible relations between variable-value pairs: ver•
                                                       tices are these pairs, and edges arc defined by pairs of com•
    In [Jegou, 1993], a decomposition method has been  patible vertices. Given the micro-structure of a CSP and us•
    introduced for improving search efficiency in the  ing graph properties, the method realizes a pre-processing to 
    area of Constraint Satisfaction Problems. This     simplify the problem with a decomposition of the domains of 
    method is based on properties of micro-structure of variables. For a CSP V, the decomposition generates a col•
    CSPs related to properties of triangulated graphs. 
                                                       lection of subproblems P1, P2, •. • Pk, which is equivalent to 
    This decomposition allows to transform an instance 
                                                       the initial problem V. Each subproblem Pi has the size of 
    of CSP in a collection of sub-problems easier to   its domains less or equal to the size of domains of P, so the 
    solve, and then gives a natural and efficient way for 
                                                       time complexity of each Pi is necessarily less than for the 
    a parallel implementation [Habbas et al, 2000].    initial CSP. Moreover, given this collection of subproblems, 
    In this paper, we present a generalization of this ap• we can separately solve them, or recursively apply again the 
    proach, which is based on a generalization of trian• decomposition. 
    gulated graphs. This generalization allows to de•
                                                         This decomposition allows to transform an instance of CSP 
    fine the level of decomposition which can be fixed 
                                                       in a collection of subproblems the domains size of which is 
    by a graph parameter. The larger this parameter is, 
                                                       less than domains size of the CSP. So, these sub-problems are 
    the more level of decomposition that is the num•
                                                       theoretically easier to solve. Moreover, this decomposition 
    ber of sub-problems is. As a consequence, we can   defines and then gives a natural and efficient way for a paral•
    then define the level of decomposition, with respect lel implementation to solve CSP. In [Habbas et al, 2000], an 
    to the nature of the parallel configuration used (the experimental analysis of this approach is presented, realized 
    number of processors).                             on a parallel configuration. These experiments show clearly 
    First experiments reported here show that this ex• the efficiency of the approach: the decomposition generally 
    tension increases significantly the advantage of the offers better results than the results obtained to solving the 
    basic decomposition, already shown in [Habbas et   problems without decomposition. This advantage is related 
    al, 2000].                                         to the natural parallelization of the approach since each sub-
                                                       problem is solved independently. This fact is clear for consis•
1 Introduction                                         tent CSPs. Moreover, if we consider inconsistent CSPs, the 
                                                       results are more insteresting: without parallelization, solving 
Constraint-satisfaction problems (CSPs) involve the assign• the problem after its decomposition is clearly better as solv•
ment of values to variables which are subject to a set of con• ing it without decomposition. 
straints. Examples of CSPs are map coloring, conjunctive In this paper, we present a generalization of this approach. 
queries in a relational databases, line drawings understand• This approach is based on a generalization of triangulated 
ing, pattern matching in production rules systems, combina• graphs. This generalization allows to define the level of de•
torial puzzles... CSP is known to be a NP-complete problem. composition which can be fixed by a graph parameter. The 
So, during last twenty years, many works have been proposed larger this parameter is, the more level of decomposition (that 
to optimize the classical Backtrack procedure, as constraint is the number of sub-problems) is. As a consequence, we can 
propagation, intelligent backtracking or network decomposi• then define the level of decomposition, with respect to the 
tions.                                                 power of the parallel configuration used. 
  In [Jegou, 1993], another approach has been proposed   To define this generalization, we exploit a generalization of 
which is based on the decomposition of the "micro-structure" 
                                                       triangulated graphs called CSGk graphs which has been in•
of the CSP. The micro-structure of a CSP is the graph defined troduced in [Chmeiss and Jegou, 1997]. This class of graphs 
  *This work has been supported in part by the IUT de Lens, the possesses the same kind of properties as triangulated graphs 
CNRS and the Region Nord/Pas-de-Calais under the TACT Pro• do. The most important here is the fact that the CLIQUE 
gramme                                                 problem has a polynomial time complexity on these graphs. 


CONSTRAINTS                                                                                            203    First experiments reported here show that this extension              2.2 TR-Decomposition 
 increases significantly the advantage of the basic decompo•
 sition, already shown in [Habbas et al, 2000]. Indeed, we 
 present experiments with two levels of decomposition. The 

 basic decomposition, and the second level (CSG2 graphs). 
 The results show that for the second level of decomposition 
 we obtain better results. 

   The section 2 recalls the decomposition method while sec•
tion 3 presents the generalization of the decomposition. Ex•
perimental results and a discussion about these result are pre•
sented in the section 4. 

                                                                            Theorem 1 

2 Preliminaries 


2.1 Constraint Satisfaction Problems                                        In other words, transforming a CSP as its micro-structure 
                                                                         is clearly a polynomial reduction from CSP to CLIQUE, 
A finite CSP (Constraint Satisfaction Problem) is defined as             which is the problem of finding a clique of a given size 
four tuple P = {X,D,C,R). X is a set of n variables                      belongs to a graph. As a consequence of this fact, as CSP, 
                                                                         the CLIQUE problem is NP-Complete. Since the problem 
x1,X2,--.xn. D is a set of finite domains D1,D2, ..... Dn, 
and C is a set of rn constraints. Here we only consider binary           of finding a n-cliquc is NP-hard, TR-Decomposition exploits 
CSPs, that is the constraints are defined on pairs of variables          the fact that triangulated graphs constitute a polynomial 
                                                                         class of instances for this problem. We recall briefly basic 
 {xi, Xj } and will be denoted Ci,j. To each constraint , we 
                                                                         properties of these graphs. Given a graph G — (V, E) and an 
associate a subset of the cartesian product (Di x Dj) which 
                                                                         ordering of V, the successors of a vertex u2 
is denoted Rij and specifies which values of the variables are 
                                                                         are the elements of the set 
compatible with each other. R is the set of all RlJ. A solution 
is an assignment of values to variables which satisfies all the          wherea vertex vi 
constraints. For a CSP P, the pair (X',C) is a graph called              is simplicial in is a clique. The ordering 
the constraint graph. Given a CSP, the problem is either to                                  of V is a perfect elimination ordering if, 
know if there exists any solution, to find solution, or to find          for , the vertex v1 is simplicial in the ordering 
all solutions. The first problem is known be to NP-complete.                 A graph G = (V,E) is triangulated if and only if V 
                                                                         admits a perfect elimination ordering. Triangulated graphs 
   CSPs are normally solved by different versions of back•               satisfies desirable properties. A triangulated graph on n 
track search. In this case, if d is the size of domains (maxi•           vertices has at most n. maximal cliques (a clique is maximal 
mum number of values in domains A), the theoretical time                 iff it is not included in an other clique) [Fulkerson and 
complexity of search is then bounded by the size of the search           Gross, 1965]. Moreover, the problem of finding all maximal 
space, that is dn. Consequently, many works tried to improve             cliques in a triangulated graph is in 0(n + m) if n is the 
the search efficiency. At present time, it seems that the most           number of vertices and m the number of egdes [Gavril, 1972]. 
efficient algorithm is the procedure MAC which has been in•
troduced in [Sabin and Freuder, 1994]. Other approaches use                 Given the micro-structure of any CSP, it is not possible to 
decomposition techniques based on structural properties of               immediately use these properties because any micro-structure 
the CSP. These methods exploit the fact that the tractability            is not necessary a triangulated graph. So, in adding edges 
of CSPs is intimately connected to the topological structure 
                                                                         in E, we can build a new graph T(G) = (V, Ef) which is 
of their underlying constraint graph. Moreover, these meth•              triangulated. This addition of edges is called triangulation, 
ods give an upper bound to the complexity of the problem.                and can be realized in a linear time in the size of the graph. 
As example of such decompositions, we have tree-clustering               So, after the triangulation, all maximal cliques of G can be 
scheme [Dechter and Pearl, 1989]. The time complexity of                 found in linear time. Applied to a 
this method is bounded by dk where k is induced by the topo•             the triangulation of its micro-structure 
logical features of the constraint graph. Intuitively, more the          produces the graph the set of maximal cliques of 
constraint graph is dense, more the value k is large. For ex•            which is i. Every Y, is a set of values, 
ample, if the constraint network is a complete graph, then               and then defines a subproblem of P. More formaly, given a 
k = n. So, the complexity of these decomposition methods                 binary CSP P = (X,D,C, R), its micro-structure = 
is the same as for classical backtracking, that is dn. So, in                                                   The CSP induced by Y on 
[Jegou, 1993], Jegou proposed an alternative way to decom•
pose CSPs which is not based on the constraint graph but on 
                                                                            1Note that in [Hamadi, 1996], TR-Decomposition has been gen•
the micro-structure of a CSP. In the sequel, we called this de•          eralized to General CSPs, that is CSPs were constraints can be de•
composition scheme TR-Decomposition.                                     fined on more than two variables. 


204                                                                                                                        CONSTRAINTS V, denoted V{Y) is defined by:                                 triangulated. Note that a triangulation can be minimal and 
                                                               not optimal. See [Berry, 1999] who presents an algorithm 
                                                               in 0(n(n + m)). The last one consist in using a triangu•
                                                               lation consuming a linear time which does not gurantee the 
                                                               minimality. Nevertheless, the purpose of this paper is not to 
                                                               propose a good triangulation, but to exploit a generalization 
                                                               of triangulated graphs to generalize this decomposition. One 
   Finally, to ensure the validity of the decomposition, 
                                                               of the aims of this generalization is to avoid the problem of 
presents the theorem below: 
                                                               finding optimal triangulations. 
   Theorem 2 [Jegou, 1993] Given a binary CSP P, its 
                                                               3 Generalizing TR-Decomposition 
micro-structure, the set of the maxi•
mal cliques of T                                               3.1 A first basic property 
         Solutions                                             To generalize TR-Decomposition, we can extend the•
                                                               orem 2. Consider a , ,_,.., and its 
   To summarize the approach, we recall the algorithm:         micro-structureConsider a graph 
Algorithm: TR-Decomposition                                                                                     Consider 
Begin                                                          now the set of maximal cliques of 

1 Build the micro-structure                                    Every Zi is a set of values, and then, as in section 2.2, defines 
2 Triangulation                                                a subproblem of P which is the CSP induced by Z i, on V (it 
3 MaximalCliquesi                                              is denoted V(Zi)). 
4 for all Yi do 
5 if Yi is a covering of all the domains in D                    Theorem 3 Given a binary CSP P, its micro-structure 
6 then Solve 
                                                                     and {Z1,... Zj), the set of the maximal cliques of 
7 else has no solution                                                   then Solutions 
      endfor 
End; { TR-Triangulation }                                        Proof. Given a binary CSP V, its micro-structure 
                                                               and by theorem 1, we know that each solution of V is a 
  The steps 1, 2 and 3 can be realized in a linear time w.r.t. clique of size n. If we consider 
the size of the problem V. The procedure Triangulation re•     whereeach clique of is included in a 
turns a perfect elimination ordering a which allows to the     maximal clique Therefore, each solution of 

procedure Maximal Cliques to find sets Yi. The step 4, that    V appears in the associated subproblem 
is the iteration for, can be replaced by a parallel execution 

on independent subproblems P(Yl). In this case, if the CSP       While TR-Decomposition is limited to triangulated graphs, 
V is consistent, the cost is related to the cost of solving the theorem 3 allows to define a larger class of decomposition 
easiest subproblem, while it is the cost of the hardest sub-   of domains. Nevertheless, because the number of maximal 
problem for inconsistent CSPs. A such implementation has       cliques can be exponential in an arbitrary graph, and then, the 

been realized in [Habbas et al, 2000]. In step 5, a set Yi is  number of induced subproblems, we must consider graphs 
not a covering of all the domains in D if there is a subdomain          which possess a limited number of maximal cliques 

Dy.j induced by Yi which is the empty set. This subproblem     as triangulated graphs do. So, we exploit here a class of 
is then trivially inconsistent. In step 6, to solve V(Yi), we can graphs which is a generalization of triangulated graphs. 
use any classical search method such that standard backtrack•
ing, Forward-Checking or MAC [Sabin and Freuder, 1994].        3.2 A generalization of triangulated graphs 
Finally, note that the quality of decomposition depends on the In [Chmeiss and Jegou, 1997], a new class of graphs, called 

quality of the triangulation step.                             CSGk graphs has been introduced. These graphs which 
  The last point is the most important. Nevertheless, it's well generalize triangulated graphs, possess the same kind of 
known that the problem of finding an optimal (w.r.t. the size  properties as triangulated graphs, e.g. hereditary property of 
of the largest induced clique) triangulation is NP-Hard (see   subgraphs, existence of an elimination scheme, polynomial 
[Arnborg et al, 1987]). Several algorithms have been pro•      time recognizing algorithm, and polynomial class of graph 

posed for triangulation. In all cases, the aim is to minimize  for CLIQUE problem. Informally, a CSG0 graph is a 
either the number of added edges or the size of cliques in     complete graph, a CSG1 graph is a triangulated graph, and a 
G'. Three classes of approaches are usable. The first one      CSG2 graph is a graph allowing an elimination vertex scheme 
consists in finding an optimal triangulation which produces a  where the successors of every vertex induce triangulated 

graph the maximum size clique of which has minimum size        graphs. More generally, CSGk graphs are defined inductively. 
over all triangulations. [Shoikhet and Geiger, 1997] propose 

a such algorithm the time complexity of which is exponen•        Definition [Chmeiss and Jegou, 1997] The class of CSG0 
tial. The second is to find a minimal triangulation, that is   Graphs is the class of complete graphs. Given k > 0, the 

a triangulation computing a set E\ such as if for any other    class of CSGk graphs is the class of graphs G = (V, E) such 
triangulation is not                                           that there exists an ordering of V such that 


CONSTRAINTS                                                                                                           205 for i = l,2, ...n, the graph Graph. Because of the time complexity of managing graphs, 
The ordering a is then called a CSGk scheme.                   that is it seems reasonable to focus our 
                                                               attention on small values of k;. So, in the sequel we limit our 
   it's easy to see that CSG1 Graphs is the class of trian•    study to CSG2 graphs. Therefore, the number of maximal 
gulated graphs. As for triangulated graphs, there exists a     cliques will be bounded now by Nev•
polynomial time algorithm for recognizing CSGk                 ertheless, two problems must be adressed here. Finding an 
graphs; its time complexity is                                 efficient algorithm for 2-triangulation, and an operational al•
In the context of decomposition of micro-structure, the num•   gorithm to find maximal cliques of a graph. 
ber of maximal cliques is an important criteria. CSGk graphs     For 2-triangulation, we can imagine an algorithm the time 
inherit of a generalization of the property of Fulkerson and   complexity of which is theoreticaly bounded by 0(nm(n. + 
Gross [Fulkerson and Gross, 1965] related to this number       m)). This algorithm consider an ordering on vertices which 
since, a Graphs with n vertices have less than nk              is obtained by the Maximum Cardinality Search of Tarjan and 
maximal cliques. Moreover, a graph with n vertices             Yannakakis. Given this ordering, we consider vertices vi and 
and m edges has at most n + m maximal cliques. Finding         then, we run a triangulation on . This first step is 
these cliques is easy, since, given a constant value k the     in 0(n(n + m)) but this approach does not guarantee to get 
CLIQUE problem is polynomial on this class of graphs since     a 2-triangulation. Indeed, given two vertices vl and Vj, with 
the time complexity of finding the clique of maximum size in   i < j, the triangulation of which is realized af•
an undirected graph is bounded by                             ter the triangulation of can add edges that restore 
                                                              the new subgraph not triangulated. So, a second 
                                                              step of verification and repairing the subgraphs 

3.3 TRk-Decomposition                                         in adding new edges must be realized. This additionnal work 
                                                               induces a theoretical complexity of 0(nm(n + 777,)). Never•
CSGk graphs can be exploited as a way to generalizing of TR-  theless, expermients show that this additionnal work will be 
Decomposition, defining TRk-Decomposition as decomposi•       rarely reached in practical cases (see section 4). 
tions corresponding to the class of associated graphs. For K= 
1, TRk-Decomposition is exactly TR-Decomposition, while       4 Experiments 
for k= 2, TRk-Decomposition, that is TR2-Decomposition, 
                                                              Our aim in this section is to show the usefulness of the gener•
it's the decomposition induced by CSG2 graphs. More gen•
                                                              alized decomposition method comparing to the MAC (Main•
erally, TRk-Decomposition is summarized as: 
                                                              taining Arc Consistency) algorithm and the decomposition 
Algorithm: TRk-Decomposition                                  method by triangulation of the micro-structure and to give 
Begin                                                         an idea about the efficiency of the proposed method. For the 
1                                                             generalized decomposition method we will consider the TR2-
2                                                             Decomposition, i.e. k = 2. 
3                                                                As mentionned in section 3, we will not focus on the 
4                                                             triangulation and 2-triangulation algorithms because it is 
5                                                             not the principal objective of this paper. In experiments, we 
6                                                             will use the Tarjan and Yannakakis's triangulation algorithm 
7                                                             [Tarjan et al, 1984]. This algorithm requires a precomputed 
                                                              elimination ordering on the vertices. Then, it adds edges, 
End;                                                          with respect to the ordering, which maintain the chordality 
                                                              property (i.e. when a vertex is treated, its successors must 
                                                              form a clique). Also, for the 2-triangulation, we will use an 
  Note that:                                                  algorithm based on the Tarjan and Yannakakis's triangulation 
  •The procedure k-Triangulation produces a graph             one as described in section 3.3. In practice, we have observed 
                                                              that the additionnal step is rarely realized and then the 
               which is a CSGk graph and returns an order•
     ing a which allows to the procedure k-MaximalCliques     observed time of the 2-triagnluation is in n(n +m). So, for 
    to find all the maximal cliques                           CSPs of great size, the CPU time used to decompose the 
                                                              problem is generally not significant with respect to the time 
  • As for TR-Decomposition the step 4, that is the iteration ofsolving the CSP. 
    for, can be replaced by a parallel execution on indepen•
    dent subproblems In this case, if the CSP V is               We have expermiented these methods on random CSPs 
    consistent, the cost is related to the cost of solving the generated at the phase transition. These CSPs are generated 
    easiest subproblem, while it is the cost of the hardest   according to the model B generator [Prosser, 1996]. Such a 
    subproblem for inconsistent CSPs.                         generator admits four parameters: 
  • For steps 5 and 6, remarks given for TR-Decomposition        • the number N of variables 
    hold.                                                        • the common size of the initial domains D 
  • Finally, the quality of decomposition depends on the         • the proportion p1 of constraints in the network (or the 
    quality of the k-triangulation step.                           number C = p1 * N • (N - l)/2 of constraints) 


206                                                                                                      CONSTRAINTS                                           Table 1: experimental results 

  • the proportion p2 of forbidden pairs of values in a con• In the tables, results are organized as following : the first 
    straint (or the number T = p2 * D * D of forbidden column contains the calsses of problems represented by the 
    pairs)                                             four parameters < N,D,T, C >. For each class, we give 
  In the following, we will use C and T instead of p1 and results of the differents methods for satisfiable (Sat) and un-
p2. C is called the density of the constraint graph and T the satisfiable (Unsat) problems seperately. So, we have two 
tightness of the constraints. We have analysed decomposi• lines per class. The second and the third columns give the 
tion using the procedure MAC as basic search algorithm (the number of subproblems induced by the TR-Decomposition 
used heuristic is dom/deg [Bessiere and Regin, 1996]). That and the TR2-Decomposition respectively. The fourth column 
is MAC has been used before decomposition on the initial indicates the number of satisfiable and unsatisfiable prob•
problem and after decomposition on each induced subprob• lems over the 50 randomly generated CSPs. The next three 
lem.                                                   columns give the number of consistency checks for MAC, 
  In order to have a credible idea on the performance of these TR-Decomposition and the TR2-Decomposition respectively. 
methods, we consider several classes of problems. We vary The last three columns present the number of visited nodes by 
two parameters (the number of variables N and the domains the different methods. 
size D). In order to deal with classes near the phase transition, As the subproblems induced by the decomposition are in•
we search the appropriate values of the tightness (T) and the dependent, we can envisage a parallel implementation. In 
density (C).                                           other words, we can imagine one process by subproblem. 
  For each value of N, we vary D from small domains size So, for saisfiable problems we consider the faster subproblem 
to larger ones. So, we can observe the behavior of the de• (the firstly solved subproblem since we have the response the 
composition when D grows. Also, we have remarked that the it is satisfiable) while we consider the hardest subproblem for 
performance of the decomposition method was not the same unsatisfiable ones. 
for satisfiable and unsatisfiablc problems. So, we have chosen Tables show, that decomposition improve the MAC algo•
to present the results seperately.                     rithm on all classes. The improvement is more significant 
  Results are reported in three tables. Each table represents for larger domains. Also, the performance of MAC is im•
results for a given number of variables TV. As measures proved more significately for denser constraint graphs. If 
of comparison, we used the number of consistency checks we look at table 1 where N = 20, we remark that the 
(#checks) performed by each of the methods and the number TR2-Decomposition is five times faster than MAC for the 
of visited nodes (#nodes). We mention that, the execution < 20,10,30,130 >. For classes with D = 20 the improve•
time is proportional to the number of checks.          ment is more significant. This remark is confirmed when 


CONSTRAINTS 207 