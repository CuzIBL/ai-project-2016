          A language for functional interpretation of model based simulation

                             Jonathan Bell, Neal Snooke and Chris Price
                  Department of Computer Science, University of Wales Aberystwyth
                         Penglais, Aberystwyth, Ceredigion, SY23 3DB, U. K.
                                        jpb, nns, cjp@aber.ac.uk


                    Abstract                              Function: An object O  has a function F if it
                                                          achieves an intended goal by virtue of some exter-
    Functional modeling is in use for the interpretation  nal trigger T resulting in the achievement of an ex-
    of the results of model based simulation of engi-     ternal effect E.
    neered systems for design analysis, enabling the au- This is distinct from notions of behavior and purpose, which
    tomatic generation of a textual design analysis re- is a problem with some deﬁnitions of function used in model
    port that expresses the results of the simulation in based reasoning. It follows that a representation of function
    terms of the system’s purpose. We present a novel has three elements; a description of purpose and the func-
    functional description language that increases the tion’s trigger and effect. The trigger and effect are Boolean
    expressiveness of this approach, allowing a system expressions and act as the recognizer of achievement of the
    function to be decomposed in terms of subsidiary  function. A function can fail in two ways. Either the trigger
    functions as well as required effects, increasing the can fail to result in the expected effect or the effect can oc-
    range both of systems and design analysis tasks for cur without the trigger, as summarized in Table 1. The four
    which the approach can be used.
                                                                  Trigger  Effect   Function
                                                                   false    false  Inoperative
1  Introduction                                                     true    false    Failed
The automation of the design analysis of engineered systems        false    true   Unexpected
requires both simulation of the behavior of the system and in-      true    true    Achieved
terpretation of the results, to enable the automatic generation
of a draft report outlining the results of the design analysis. Table 1: Achievement of function using trigger and effect.
This report is cast in terms of the system’s purpose and as
system function can be regarded as relating its behavior to states of a function are deﬁned in terms of the truth of the
purpose, this interpretation of simulation for automatic report trigger and effect, so if a function is triggered but the effect is
generation is a useful roleˆ of functional description. not present it is said to be failed, for example. Agreement in
  Functional modeling has been used for deriving the behav- value between the trigger and effect is consistent with correct
ior of a system from knowledge of its structure and compo- behavior of the system. We cannot, however, pair off these
nent functions [Sticklen and Chandrasekaran, 1989], support- cases as the consequences of the two inconsistent behaviors
ing design by functional reﬁnement [Iwasaki et al., 1993], will differ and the resulting report must reﬂect this.
and interpretation of simulation for automatic report genera- The description of purpose is separate from the functional
tion [Price, 1998] where system functions are associated with description itself. This is consistent with the idea that func-
signiﬁcant behaviors (outputs or goal states). Here we present tion is concerned with how a purpose is fulﬁlled rather than
a novel language for the description of system function that the purpose itself and also encourages model reuse as similar
increases the expressive power of that approach by allow- purposes might be fulﬁlled by systems with different func-
ing partial fulﬁlment of a system’s purpose to be described. tional requirements, such as cars’ and motorbikes’ lighting
Novel features of the language also increase both the range systems.
of systems that can be described and the range of tasks for A function might depend on more than one trigger and ef-
which the language is useful.                         fect so logical operators can be used to describe the required
                                                      combinations. Alternatively, a function can be composed of
2  Describing and decomposing function                subfunctions, each with its own trigger, effect and purpose.
                                                      This distinction allows cases where the achievement of one
The deﬁnition of function that underlies the language pre- subfunction mitigates failure of the top level function, such as
sented here might be given informally as “how a device where a warning system has visual and audible signals and the
achieves its purpose” or more formally as             presence of either one means at least some warning is given.Decomposition in terms of functions means that the top level AND (driver_unbuckled OR
function’s states must be derived from the four possible states (passenger_present AND
of each of the subfunctions. This is shown in Table 2. The    passenger_unbuckled))
                                                           TRIGGERS
                                                             PIF warning_lamp AND PIF chimer
       Child 1  Child 2  AND    OR    XOR
                                                      PURPOSE unbuckled_warning
          I        I       I      I     I               DESCRIPTION "Warn seat belt is unbuckled"
          I        A       I     A      A               FAILURE_CONSEQUENCE
          I        Fa      (I)   Fa    Fa                  "No warning given of dangerous state"
          I        U       (I)   U      U
          A        A       A     A      I
                                                      The PIFs and their associated purpose descriptions are, like
          A        Fa      Fa    (A)   (U)
                                                      the description of purpose shown, separate entities. The de-
          A        U       U     (A)   Fa
                                                      composition in this example allows the language to distin-
          Fa       Fa      Fa    Fa    (I)
                                                      guish the case where one of the PIFs fails from the more se-
          Fa       U       (I)   (A)   (A)
                                                      rious case where both fail so no warning is given. In addition
          U        U       U     U     (I)
                                                      to this increased expressiveness the explicit inclusion of the
                                                      trigger differs from the language in [Price, 1998] and allows
      Table 2: States of functions and sub-functions. unambiguous description of functions that are triggered by
                                                      the state of some other system function, increasing the range
rule is that triggering of the top level function is derived from of systems that can be modeled. The trigger and the use of la-
the triggering of the children and achievement of its effect bels for trigger and effect allow a more precise speciﬁcation
from those of the children. So, for example, in the sixth line of required system behavior than the earlier language used
of the table, where Child 1 is achieved (both trigger and effect for functional labeling. They also enable the functional de-
are true) and Child 2 failed (trigger true but effect false) a top scription to be built independently of a target system, so the
level function that depends on Child 1 AND Child 2 has failed language for can be used for functional reﬁnement of design
as it is triggered (Child 1 trigger AND Child 2 trigger is true) in addition to interpretation of model based simulation.
but the effect is not achieved as Child 1 effect AND Child 2
effect resolves to false. Where the state of the function is in 4 Conclusion
brackets, the report will ignore the top level function and in- The functional description language introduced here in-
clude the associated failure of the child function. In addition creases both the expressiveness and range of the language
to the logical operators, a functional description might use used for functional labeling in [Price, 1998]. It shares the
the sequential operators described in [Bell and Snooke, 2004] advantages of simplicity, reusability and capability claimed
to allow systems whose function depends on intermittent or for that language and in addition allows the functional model
sequential behaviour to be described.                 to be constructed independently of the system, so supporting
  As there are three elements in a complete functional rep- the use of the language in functional reﬁnement of a design
resentation, there are three possible pairs that can be used as as well as for interpretation of simulation.
incomplete subfunctions to simplify the functional decompo-
sition. As pairing trigger and purpose (with no effect) is un- References
necessary, this leaves two classes of incomplete function that
can usefully be incorporated into the language. These are [Bell and Snooke, 2004] Jonathan Bell and Neal A. Snooke.
                                                         Describing system functions that depend on intermittent
Purposive incomplete function (PIF) maps effect to pur-  and sequential behavior. In Proceedings 18th International
    pose. This can be used when several subfunctions share Workshop on Qualitative Reasoning, QR2004, 2004.
    a trigger, as in the warning example mentioned above.
                                                      [Iwasaki et al., 1993] Yumi Iwasaki, R. Fikes, M. Vescovi,
Operational incomplete function (OIF) maps trigger to ef- and B. Chandrasekaran. How things are intended to work:
    fect with no distinct purpose. It ensures a trigger is as- Capturing functional knowledge in device design. In Pro-
    sociated with a speciﬁc effect where alternative combi- ceedings of 13th International Joint Conference on Artiﬁ-
    nations of trigger and effect can achieve some purpose. cial Intelligence, pages 1516–1522, 1993.
These are only used as subsidiary (child) functions.  [Price, 1998] Christopher J. Price. Function-directed electri-
                                                         cal design analysis. Artiﬁcial Intelligence in Engineering,
3  Example of functional description                     12(4):445–456, 1998.
The following is (part of) the functional description of a car’s [Sticklen and Chandrasekaran, 1989] Jon Sticklen and
seat belt reminder system that warns the driver if either front B. Chandrasekaran. Integrating classiﬁcation-based
seat is occupied with its seat belt unbuckled.           compiled level reasoning with function-based deep level
FUNCTION belt_warning                                    reasoning. In Werner Horn, editor, Causal AI Models,
  ACHIEVES unbuckled_warning                             Steps Toward Applications, pages 191–220. Hemisphere
  BY                                                     Publishing Corporation, 1989.
    vehicle moving