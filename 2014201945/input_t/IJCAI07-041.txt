                                 Contextual Default Reasoning

         Gerhard Brewka                     Floris Roelofsen                 Luciano Seraﬁni
         Universit¨at Leipzig       University of Amsterdam, ILLC                 ITC-irst
        Augustusplatz 10-11             Nieuwe Doelenstraat 15               Via Sommarive 18
      04109 Leipzig, Germany         1012 Amsterdam, Netherlands            38100 Trento, Italy
 brewka@informatik.uni-leipzig.de       froelofs@science.uva.nl            luciano.seraﬁni@itc.it

                    Abstract                          contexts in which they hold, and so-called bridge rules are
                                                      used to represent information ﬂow.
    In this paper we introduce a multi-context variant of
    Reiter’s default logic. The logic provides a syntac-
    tical counterpart of Roelofsen and Seraﬁni’s infor-
    mation chain approach (IJCAI-05), yet has several
    advantages: it is closer to standard ways of repre-           Mr.1                   Mr. 2
    senting nonmonotonic inference and a number of
    results from that area come “for free”; it is closer              Figure 1: a magic box.
    to implementation, in particular the restriction to
    logic programming gives us a computationally at-
                                                        Most of the existing work in the ﬁeld is based on classical,
    tractive framework; and it allows us to handle a
                                                      monotonic reasoning. The single exception we are aware of is
    problem with the information chain approach re-
                                                      [Roelofsen and Seraﬁni, 2005]. To allow for reasoning based
    lated to skeptical reasoning.
                                                      on the absence of information from a context, the authors add
                                                      default negation to a rule based multi-context system and thus
1  Introduction                                       combine contextual and default reasoning.
                                                        This paper presents a related approach. We propose a con-
Interest in formalizations of contextual information and inter- textual variant of Reiter’s Default Logic DL [Reiter, 1980]
contextual information ﬂow has steadily increased over the called Contextual Default Logic (ConDL) which shares a lot
last years. Based on seminal papers by McCarthy [1987] and of motivation with the Roelofsen/Seraﬁni paper, in particular
Giunchiglia [1993] several approaches have been proposed, the basic idea of keeping information local for conceptual and
most notably the propositional logic of context developed computational reasons (as opposed to merging default theo-
by McCarthy [1993] and McCarthy and Buvaˇc [1998],and ries [Baral et al., 1994]). A major difference is that our de-
the multi-context systems devised by Giunchiglia and Ser- scription is syntactical rather than semantical. This has sev-
aﬁni [1994], which later have been associated with the lo- eral advantages: from a computational perspective, it is more
cal model semantics introduced by Giunchiglia and Ghidini convenient to manipulate sets of formulas rather than sets of
[2001]. Seraﬁni and Bouquet [2004] have argued that multi- models; it allows us to link multi-context default reasoning
context systems constitute the most general among these for- more closely to earlier work in nonmonotonic reasoning; syn-
mal frameworks.                                       tactic restrictions lead directly to contextual variants of logic
  Intuitively, a multi-context system describes the informa- programming under answer set and well-founded semantics
tion available in a number of contexts (i.e., to a number of and thus to a fully computational approach; and it paves the
people/agents/databases, etc.) and speciﬁes the information way to handle a serious weakness of the approach to skeptical
ﬂow between those contexts. A simple illustration of the main reasoning developed in [Roelofsen and Seraﬁni, 2005].
intuitions underlying the multi-context system framework is The outline of the paper is as follows: we ﬁrst brieﬂy
provided by the situation depicted in Figure 1, one of the review the approach of Roelofsen and Seraﬁni and discuss
standard examples in the area. Two agents, Mr.1 and Mr.2, the weakness of skeptical, well-founded reasoning in this ap-
are looking at a box from different angles. The box is called proach. We then introduce ConDL and show that extensions
magic, because neither Mr.1 nor Mr.2 can make out its depth. of ConDL are in exact correspondence with stable informa-
As some sections of the box are out of sight, both agents have tion chains in [Roelofsen and Seraﬁni, 2005].Wenextshow
partial information about the box. To express this informa- how well-founded reasoning can be deﬁned for ConDL, es-
tion, Mr.1 only uses proposition letters l (there is a ball on the caping the difﬁculty of the information chain approach by
left) and r (there is a ball on the right), while Mr.2 also uses appeal to paraconsistent reasoning. We ﬁnally discuss con-
a third proposition letter c (there is a ball in the center). To textual logic programming and give various examples to il-
model situations of this kind, formulas are labeled with the lustrate that our formalism is indeed useful.

                                                IJCAI-07
                                                   2682  The information chain approach                     premises. Now c is a stable solution chain iff c is the minimal
                                                      solution chain of the c-reduced system.
We now give a brief review of the approach in [Roelofsen
                                                        Based on the observation that stable solution chains may
and Seraﬁni, 2005]. The authors consider a set of contexts
                                                      not exist, Roelofsen and Seraﬁni also deﬁne a skeptical se-
C = {1,...,n} and a language Li for each context i ∈C.
                                                      mantics which draws its intuitions from well-founded seman-
C and Li are assumed to be ﬁxed, each Li is built over a
                                                      tics for logic programs [van Gelder et al., 1991]. It is based
ﬁnite set of proposition letters, using standard propositional
                                                      on the construction of the so-called canonical chain cS.We
connectives.
                                                      present this semantics in somewhat more detail because it has
  To state that the information expressed by a formula ϕ ∈
                                                      a serious problem which we will later solve.
Li is established in context i,thelabeled formula (i : ϕ) is
                                                        The canonical chain for a multi-context system S is con-
used. A rule r is an expression of the form:
                                                      structed iteratively by applying an operator ΨS to a pair of
                                                            c, a                       c             c
     F  ← G1 ∧ ...∧ Gm  ∧ not H1 ∧ ...∧ not Hn  (1)   chains     . Intuitively, the ﬁrst chain approximates S
                                                      from above: at every stage of the iteration it contains the
where F ,allG’s, and all H’s are labeled formulas. F is models that are possibly in cS (initially, every model may
called the consequence of r and denoted by cons(r);allG’s possibly be in cS , so in each context we start with the set
are called positive premises of r and together constitute the of all models). The second chain a, which is referred to as
        +
set prem (r);allH’s are called negative premises of r and the anti-chain, approximates cS from below: at every stage
                         −
together make up the set prem (r). A rule without premises it contains the models that are necessarily in cS (initially, no
is called a fact. If a rule has positive premises only, it is called model is necessarily in cS, so in each context we start with
a positive rule. A normal multi-context system is a ﬁnite set the empty set of models).
of rules. Note that not is interpreted as default negation, the Given a certain chain-anti-chain pair c, a, the intended
rules are thus nonmonotonic.                          transformation ΨS ﬁrst determines which rules in S will (not)
                                                      be applicable w.r.t. cS, and then reﬁnes c, a accordingly.
Example 1 (Integration) Let d1,d2 be two meteorological
                                                      The canonical chain cS of S will be the ﬁrst component of the
databases collecting data from sensors located in different                                 
                                                      ≤-least ﬁxpoint of ΨS,wherec, a≤c ,a iff for every
parts of the country. Each database sends its data to a third          
                                                      i, ci ⊆ ci and ai ⊆ ai (intuitively, iff c, a is “less evolved”
database d3, which integrates the information obtained. Sup-  
                                                      than c ,a).
pose that d3 regards d1 as more trustworthy than d2: any
                                                        We ﬁrst specify how ΨS determines which rules will (not)
piece of information that is established in d1 is included in
                                                      be applicable w.r.t. cS.Letc, a and a rule r in S be given.
d3, but information obtained in d2 is only included in d3 if it
                                                      If r has a positive premise G, which is satisﬁed by c,then
is not refuted by d1. The following rules model this:
                                                      G will also be satisﬁed by cS. On the other hand, if r has
            3:ϕ   ←    1:ϕ                            anegativepremiseH,whichisnot    satisﬁed by a,thenH
                                                                          c
            3:ϕ   ←    2:ϕ ∧ not 1:¬ϕ                 will not be satisﬁed by S either. So if all positive premises
                                                      of r are satisﬁed by c and all negative premises of r are not
                                                                a     r                             c
A classical interpretation m of language Li is called a local satisﬁed by ,then⎧ will be applicable with respect to S⎫:
model of context i. A set of local models is called a local          ⎨        ∀G  ∈ prem+(r):c  |= G ⎬
information state. Intuitively, every local model in a local S+(c, a)= r ∈ S            and
information state represents a possible state of affairs. If a       ⎩        ∀H  ∈ prem−(r):a   H  ⎭
local information state contains exactly one local model, then
                                                        r                     G                        a
it represents complete information. If it contains more than If has a positive premise , which is not satisﬁed by ,
                                                          G                     c          r
one local model, then it represents partial information: more then will not be satisﬁed by S either. If has a negative
                                                             H                     c     H
than one state of affairs is considered possible.     premise  , which is satisﬁed by ,then will be satisﬁed
                                                         c                    r
  A distributed information state is a collection of local in- by S as well. In both cases will certainly not be applicable
                                                                   c
formation states, one for each context. Distributed informa- with respect to S:⎧                     ⎫
tion states are referred to as chains. For systems without not,      ⎨         ∃G ∈ prem+(r):a   G  ⎬
the semantics is deﬁned in terms of minimal solution chains: S−(c, a)= r ∈ S            or
starting with the set of all models for all contexts, rule appli-    ⎩        ∃H  ∈ prem−(r):c  |= H ⎭
cation is captured semantically by eliminating those models
                                                                            S∼(c, a)=S  \S−(c, a)
from a context in which the consequent of an applicable rule For convenience, we write          . Think of
                                                      S∼(c, a)
is not true. Iterating this model elimination process until a as the set of rules that are possibly applicable with
                                                               c               S+(c, a) ⊆ S∼(c, a)
ﬁxpoint is reached yields the unique minimal solution chain. respect to S, and notice that      .
                                                                           Ψ        c, a       S+(c, a)
  For the general case, Roelofsen and Seraﬁni use a tech- Next, we specify how S reﬁnes  , based on
                                                          S∼(c, a)                m ∈ c
nique similar to the Gelfond/Lifschitz reduction for stable and  . Every local model   i that does not satisfy
                                                                              S+(c, a)
models or answer sets [Gelfond and Lifschitz, 1988; 1991]: the consequence of a rule in should certainly not be
                                                        c                             c
aruler is defeated by an information chain c =(c1,...,cn) in S and is therefore removed from . On the other hand,
                                                                      m ∈  c
whenever it has a negative premise not (i : p) such that p every local model i that satisﬁes the consequences of
                                                                 S∼(c, a)                   c   S
is true in all models in ci. By eliminating all c-defeated every rule in should certainly be in S ( provides
                                                                                                  a
rules and all negative premises from the c-undefeated rules, no ground for removing it) and is therefore added to .
                                                                               c         a
we obtain a reduced multi-context system without negative    ΨS(c, a)=ΨS     (c, a), ΨS (c, a)

                                                IJCAI-07
                                                   269where:                                                Deﬁnition 1 Let C =((D1,W1),...,(Dn,Wn))    be a de-
                                                                           (S ,...,S )
Ψc (c, a)=c    \ m  |∃r ∈ S+(c, a):m  cons(r)      fault context system. Let 1    n  be a tuple of sets of
  S                                                   formulas. Deﬁne the operator Γ such that
Ψa (c, a)=a    ∪{m  |∀r ∈ S∼(c, a):m  |= cons(r)}
  S                                                                                       
                                                                   Γ(S1,...,Sn)=(S1,...,Sn)
  Unfortunately, this approach has a serious problem. Con-
                                                                    
sider the following example:                          where (S1,...,Sn) is the minimal tuple of sets of formulas
                                                                    i (1 ≤ i ≤ n)
                 1:p  ←       1:¬p                    satisfying for all       :
                          not                                    
                                                        1. Wi ⊆ S ,
                1:¬p  ←   not 1:p                                i
                                                          S                       L
                 2:t  ←   not 1:q                       2.  i is deductively closed (over i), and
                                                        3. if (c1 : p1),...,(ct : pt):(ct+1 : q1),...,(ct+k : qk)/r ∈
  One would expect (2 : t) to be derivable. However, the            
                                                          Di, pi ∈ Sc for all i (1 ≤ i ≤ t), and ¬qj ∈ Sct+j for
canonical chain approach does not give any conclusion. The          i              
                                                          all j (1 ≤ j ≤ k),thenr ∈ S .
problem is that no model can satisfy both p and ¬p,sono                            i
model will ever be added to the anti-chain a and thus it is The tuple (S1,...,Sn) is a contextual extension of C if it is
never established that (1 : q) cannot be derived. The essential a ﬁxpoint of Γ.
problem is this: the canonical model approach assumes that In the special case where default rules do not refer to other
the set of possible conclusions is deductively closed. This is contexts, we obtain a tuple consisting of arbitrary extensions
exactly the problem addressed in [Brewka and Gottlob, 1997] of the individual default theories. In the general case informa-
in the context of default logic. We will later show how the so- tion ﬂows, via the default rules, from one context to another.
lution presented there can be applied to the problem of well- Defaults thus play the role of bridge rules.
founded multi-context reasoning as well.                It turns out that each extension corresponds exactly to a
                                                      stable solution chain in the information chain approach. The
3  Contextual default logic                           translation between our default context systems and the sys-
As before let C = {1,...,n} be the set of contexts/agents tems used there (which we call RS-systems after their inven-
with associated propositional languages Li. A default context tors from now on) is straightforward: each default
system for C is a tuple
                                                          (c1 : p1),...,(ct : pt):(ct+1 : q1),...,(ct+k : qk)/r
                   (Δ1,...,Δn)
                                                      in Di is translated to the rule
where each Δi =(Di,Wi)   is a contextual default theory.
                                                          (i : r) ←  (c : p ),...,(c : p ),
A contextual default theory is like a regular Reiter default          1   1       t  t
theory, with the exception that default rules may refer in their     not (ct+1 : ¬q1),...,not (ct+k : ¬qk)
prerequisites and justiﬁcations (not in their consequent!) to        p ∈ W            (i : p) ←
other contexts.                                       and each formula     i to the rule     .Wehavethe
  More precisely, a contextual default rule is of the form following proposition:
                                                      Proposition 1 Let C be a default context system, R the cor-
            d = p1,...,pm : q1,...,qk/r
                                                      responding RS-system. Let S =(S1,...,Sn)   be a se-
where p1,...,pm,q1,...,qk are regular formulas or labeled quence of deductively closed sets of formulas and M =
formulas, and the consequent r (also denoted cons(d))isa (M1,...,Mn) a sequence of sets of models such that for all
regular formula. A contextual default theory (Di,Wi) then is i (1 ≤ i ≤ n)
just a pair consisting of a set of regular formulas Wi (the cer-      Mi  = {m | m |= Si}.
                                            D   W
tain knowledge) and a set of contextual default rules i. i S is a contextual extension of C iff M is a stable solution
and the unlabeled formulas in defaults have to be expressed chain of R.
in Li. Each context thus has its own language for expressing
its particular view of the world.                     We can thus view our approach based on contextual default
  Note that if a default rule contains a regular formula, this logic as a syntactical characterization of the semantical ap-
formula is implicitly assumed to refer to the context of the proach in [Roelofsen and Seraﬁni, 2005]. The advantage of
default. We may thus assume without loss of generality that our characterization is threefold: it is closer to standard ap-
all prerequisites and justiﬁcations are labeled formulas. The proaches in nonmonotonic reasoning and allows us to trans-
reason we allow more than one prerequisite for a default – fer results which have been established for default logic quite
which is not necessary for Reiter’s logic – is that we want easily to the multi-context case; it is more amenable to com-
to be able to refer to more than one context without using putation; it allows us to handle the difﬁculty of the semantical
context labels inside logical formulas.               approach with respect to skeptical reasoning, as we will see
  Now we can generalize the notion of an extension to de- in the next section.
                                                        As an example of the results we basically get “for free” we
fault context systems. Given two tuples (S1,...,Sn) and
                                                    just mention the following:
(S1,...,Sn) we deﬁne component-wise inclusion ⊆c as
                                   
(S1,...,Sn) ⊆c (S1,...,Sn) iff Si ⊆ Si for all i (1 ≤ Proposition 2 (Minimality)
i ≤ n). When we speak of minimality of tuples in the rest of Let E1 and E2 be extensions of a default context system C.If
the paper we mean minimality with respect to ⊆c.      E1 ⊆c E2 then E1 = E2.

                                                IJCAI-07
                                                   270A normal default context system is one where each default in 4. Wi ∪{cons(dk) | (i : dk) ∈ P }p.
each context is of the form:
                                                        Let S =(S1,...,Sn)  be a sequence of sets of formulas,
              (c1 : p1),...,(ct : pt):r/r.            D =(D1,...,Dn)   a sequence of sets of contextual defaults.
Proposition 3 (Existence)                             Deﬁne
                                                                       DS =(D  ,...,D )
Each normal default context system possesses at least one ex-                  1      n
                                                              
tension.                                              where Di is the set of defaults from Di not defeated by S
Proposition 4 (Consistency)                           (d is defeated by S iff it has a justiﬁcation (i : q) such that
                                                      ¬q ∈ S
Let C =((D1,W1),...,(Dn,Wn))   be a default context sys-    i). With the notion of a default proof, we can express
                                                         Γ                                Γ(S  ,...,S )=
tem, E =(E1,...,En) an extension of C.IfallWi are con- the operator introduced above as follows: 1   n
                                                      (S ,...,S )      S
sistent and each default possesses at least one justiﬁcation, 1 n iff each i is the set of formulas possessing a
                                                                        S
then each Ej is consistent.                           default proof from D .
                                                                                        Γ∗
A lot more results for which we do not have space here carry We will now deﬁne a similar operator , but with an im-
over. For instance, we can give a quasi-inductive deﬁnition of portant restriction to consistent proofs. This will be sufﬁcient
extensions as in [Reiter, 1980]. We can deﬁne the notion of a to handle the problem described above.
stratiﬁed default context system for which a unique extension Deﬁnition 3 Let P =((c1 : d1),...,(cm : dm)) be a default
exists. Also complexity results carry over which establish proof, S =(S1,...,Sn) a sequence of sets of formulas. We
that the main reasoning tasks for contextual default logic are say P is S-consistent iff Si ∪{cons(dj) | (i : dj) ∈ P } is
on the second level of the polynomial hierarchy.      consistent, for all i (1 ≤ i ≤ n).
                                                              ∗                               
                                                      Now let Γ (S1,...,Sn)=(S1,...,Sn) iff each Si is the set
4  Skeptical contextual   default reasoning           of formulas possessing a consistent default proof from DS.
The essential problem of the canonical model approach is as Note that both Γ and Γ∗ are antimonotone operators. Ap-
follows: it assumes that the set of potential conclusions is plying the two in sequence thus yields a monotone operation
deductively closed. Thus, whenever two conﬂicting formulas which has a least ﬁxpoint. The least ﬁxpoint can be reached
p and ¬p are considered as potential conclusions, then this is by iterative applications of the two operators to the sequence
also the case for an arbitrary formula q,evenifq is entirely consisting of empty sets only.
unrelated.
                                                      Deﬁnition 4 Let C =((D1,W1),...,(Dn,Wn))    be a de-
  This is exactly the problem addressed in [Brewka and Got-
                                                      fault context system. S =(S1,...,Sn) is the well-founded
tlob, 1997] in the context of default logic. The solution is to conclusion set of C iff S is the least ﬁxpoint of the operator
apply paraconsistent reasoning in determining potential con- ΓΓ∗.
clusions: both p and ¬p are considered as possible conclu-
sions, but not their deductive closure, i.e. not the set of all To see how this handles the problem consider the ConDL
formulae. In the example discussed above, one should detect variant of the example discussed above. We have the contex-
                                                                      ((D ,W  ), (D ,W ))     W  =  W  =
that (1 : q) is not a possible conclusion because the only way tual default theory 1 1 2 2 with 1    2
                                                      ∅
to derive this labeled formula is based on an inconsistent set and
                                                                      D  = {: p/p, : ¬p/¬p}
of potential conclusions. The semantics thus should derive             1
(2 : t).                                                               D2 = {:(1:¬q)/t}.
    [                      ]                                              ∗
  In Brewka and Gottlob, 1997 a sequence of different se- Indeed, application of Γ to the sequence S =(∅, ∅) yields
mantics was introduced which allows to trade-off the effort
spent for consistency checking with the strength of skepti-    S =(Th({p}) ∪ Th({¬p}),Th({t})).
cal inference. Rather than presenting the different semantics                       q
here, we focus on a single one (called WFS2 in the cited Note that context 1 does not contain . For this reason, apply-
                                                      ing Γ to S gives us (Th(∅),Th({t})). This is also a ﬁxpoint
paper) and directly describe its generalization to contextual       t
default theories.                                     and we establish in context 2, as intended.
               C =((D   ,W  ),...,(D ,W  ))             Based on a modiﬁcation of a corresponding proof in
Deﬁnition 2 Let        1   1        n   n  be a de-   [                      ]
                     D  =(D  ,...,D )               Brewka and Gottlob, 1997 we can show that well-founded
fault context system. Let     1      n  be a tuple of semantics for contextual default theories is correct with re-
                     C     p              C
subsets of the defaults in .Let be a formula. A -default spect to contextual extensions.
proof for p from D in context i is a ﬁnite sequence
                                                      Proposition 5 (Correctness)
            P  =((c1 : d1),...,(cm : dm))
                                                      Let C  =((D1,W1),...,(Dn,Wn))    be a default context
of context/default pairs such that the following conditions are system, E =(E1,...,En) an extension of C and S =
satisﬁed:                                             (S1,...,Sn) the well-founded conclusion set of C. We have
    d ∈ D        j (1 ≤ j ≤ m)                       Si ⊆ Ei for all i, 1 ≤ i ≤ n.
 1.  j    cj , for all         ,
    c  = i
 2.  m    ,                                           5   Contextual ASP
 3. for each l and each prerequisite (c : q) of dl, q is a logical
    consequence of                                    A syntax restriction leads to contextual answer set program-
                                                      ming (contextual ASP), respectively contextual logic pro-
           Wc ∪{cons(dk) | k<l,(c : dk) ∈ P },        gramming under well-founded semantics. As before let C =

                                                IJCAI-07
                                                   271{1,...,n} be a set of contexts/agents. A logic programming 6 Applications
                           (P ,...,P )          P
context system (LPCS) is a tuple 1  n  where each i   In this section we illustrate the use of contextual logic pro-
is a contextual logic program. A contextual logic program is gramming with further examples. Our setting was proposi-
a set of rules of the form                            tional so far. In ASP it is common to use variables in rules
          a ← b1,...bk, not bk+1,...,not bm           as shorthand for the set of all ground instances of the rules.
                                                      Users represent their knowledge in terms of programs with
where a is a literal, each bi is either a literal or a labeled literal
of the form (c : l) where c is a context and l a literal. variables, a grounder (like lparse) then generates the purely
  For LPCSs where not does not appear in the bodies of any propositional ground instantiation of the rules which is then
                                                                                        [               ]
rule (let’s call them deﬁnite LPCSs), we can deﬁne the notion passedontoananswersetsolverlikedlv Leone et al., 2002
                                                                [               ]
of a minimal context model:                           or smodels Simons et al., 2002 .
              C  =(P  ,...,P  )                         We will adopt and extend this use of variables for contex-
Deﬁnition 5 Let      1      n  be a deﬁnite LPCS. An  tual logic programming. We assume three types of variables:
n-tuple of sets of literals S =(S1,...,Sn) is called the mini-
                  C   S                               term variables which are common in ASP and will be de-
mal context model of iff is the smallest n-tuple satisfying noted by X, Y , possibly indexed; context variables denoted
the following conditions:                             by C, possibly indexed; and proposition variables denoted
 1. a ∈ Si whenever a ← (c1 : b1),...,(ck : bk) ∈ Pi, by P , possibly indexed. Term variables are to be instanti-
    b ∈ S   ... b ∈ S
     1    c1 , , k   ck ,                             ated by ground terms, context variables by contexts (more
 2. Si is the set Liti of all literals in Li whenever Si con- precisely, integers denoting contexts), and proposition vari-
    tains a pair of complementary literals l, ¬l.     ables by ground literals. For convenience, we will also al-
                                                      low literals to appear as terms (strictly speaking we would
The deﬁnition of stable model is now straightforward:
                                                      have to distinguish between a proposition p and a term tp
              C  =(P  ,...,P )
Deﬁnition 6 Let      1      n be an (arbitrary) LPCS, representing this proposition; we assume the grounder is able
   S =(S  ,...,S  )                        S
and       1     n  a tuple of sets of literals. The -reduct to take care of this). As common in ASP we will also use
  C         CS                C
of  , denoted , is obtained from by                   rules with empty head of the form ← body as abbreviation
 1. deleting in each Pi all rules with body literal not (c : l) for f ← not f,body where f is a symbol not appearing else-
    such that l ∈ Sc,                                 where in the program. The effect of the rule is that no answer
                                                                      body
 2. deleting from all remaining rules in all programs Pi all set exists in which holds. With these conventions, it is
    default negated literals.                         easy to model several interesting multi-context scenarios.
                                                                                     i
Deﬁnition 7 Let C =(P1,...,Pn) be an (arbitrary) LPCS, Information fusion: Assume agent decides to believe an
                                                                   p                                p
and S =(S1,...,Sn) a tuple of sets of literals. S is a stable arbitrary literal whenever some other agent believes and
                                                S                             −p  −p                   p
context model of C iff it is the minimal context model of C . none of the agents believes ( is the complement of ,
                                                      that is ¬p if p is an atom, and r if p = ¬r). This can be
Well-founded semantics for LPCSs can be deﬁned in the
                                                      modeled by including in Pi the rules
same spirit as for ConDL. However, consistency checking be-
                                                                     P   ←   (C : P ), not rej(P )
comes much easier. For C =(P1,...,Pn) and a tuple of sets
of literals S =(S1,...,Sn) let γ(S) be the minimal context       rej(P ) ←   (C : −P )
          S
model of C . Deﬁne the minimal context set of a deﬁnite Again we assume the grounder handles the complement “−”
LPCS like the minimal context model, but without require- adequately. Note that this representation implicitly guaran-
ment 2 (inconsistent sets of literals do not have to be closed).                          i
            ∗                                    S    tees that only information consistent with ’s information is
Let operator γ (S) produce the minimal context set of C . added since in case of conﬂict a proposition will be rejected.
The operators γ and γ∗ both are anti-monotone, the combined                                    i        p
          ∗                                             One can also think of scenarios where agent believes
operator γγ is thus monotone and possesses a least ﬁxpoint. whenever the majority of agents does so. Let m = n +1/2 if
We call this ﬁxpoint the well-founded context model of C. n is odd, m = n +2/2 otherwise. A corresponding rule is:
  The use of this operator can be illustrated using our earlier
                                                           P   ←   (C1 : P ),...,(Cm : P ),
example. We have the LPCS C =(P1,P2) with
                                                                   C1 = C2,C1 = C3,...,Cm−1 = Cm.
                P1 :   p  ← not ¬p
                     ¬p   ← not p                     Game theory:  We show how we can compute Nash equi-
and                                                   libria for games in normal form using LPCSs. In general,
                                                      we need to represent the choices available to each player, the
               P2 :  t  ← not (1 : q)
                                                      best action given a particular choice of the other players, and
       γ∗(∅, ∅)=({p, ¬p}, {t})
Indeed,                      . As in the case of con- a rule that says only the best action should be chosen.
                                         q
textual default logic, context 1 does not contain . For this Consider the famous prisoner’s dilemma, a game involving
              γ   S        (∅, {t})
reason, applying to  gives us      . This is already a 2 agents which can either cooperate (c) or defect (d). The
                     t
ﬁxpoint and we establish in context 2, as intended.   gains obtained by the agents for each combination of choices
  Contrary to well-founded semantics for contextual default are described in the following table:
logic, the computation time for well-founded semantics of
LPCSs is polynomial: the number of iterations is bounded                      c    d
by the total number of literals in all contexts, and so is the            c  3,3   0,5
time needed for each iteration.                                           d  5,0   1,1

                                                IJCAI-07
                                                   272