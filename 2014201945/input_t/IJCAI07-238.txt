                  Multi-Winner Elections: Complexity of Manipulation,
                             Control, and Winner-Determination

                   Ariel D. Procaccia  and  Jeffrey S. Rosenschein   and  Aviv Zohar
                             School of Engineering and Computer Science
                                  The Hebrew University of Jerusalem
                                   {arielpro,jeff,avivz}@cs.huji.ac.il

                    Abstract                          problem of manipulation by the coalition is NP-complete in
                                                      a variety of protocols, even when the number of candidates is
    Although recent years have seen a surge of inter- constant.
    est in the computational aspects of social choice,  Another related issue that has received some attention is
    no attention has previously been devoted to elec- the computational difﬁculty of controlling an election. Here,
    tions with multiple winners, e.g., elections of an the authority that conducts the elections attempts to achieve
    assembly or committee. In this paper, we fully    strategic results by adding or removing registered voters or
    characterize the worst-case complexity of manip-  candidates. Bartholdi, Tovey and Trick [1992] analyzed the
    ulation and control in the context of four promi- computational complexity of these (and other) methods of
    nent multi-winner voting systems. Additionally, we controlling an election in the Plurality and Condorcet pro-
    show that several tailor-made multi-winner voting tocols.
    schemes are impractical, as it is NP-hard to select
                                                        The above discussion implies that computational complex-
    the winners in these schemes.
                                                      ity should be considered when contemplating voting systems
                                                      that are seemingly susceptible to manipulation or control. On
1  Introduction                                       the other hand, taking into account computational costs can
                                                      also lead to negative results. Some sophisticated voting sys-
Computational aspects of voting have been the focus of much tems, designed to satisfy theoretical desiderata, may be too
interest, in a variety of ﬁelds. In multiagent systems, the at- difﬁcult to use in real-world settings. In other words, there
tention has been motivated by applications of well-studied
            1                                         are voting systems where even determining who won the elec-
voting systems as a method of preference aggregation. For tion is an NP-complete problem. Previously known exam-
                   [    ]
instance, Ghosh et al. 1999 designed an automated movie ples include voting schemes designed by Charles Dodgson2
recommendation system, in which the conﬂicting preferences and Kemeny [Bartholdi et al., 1989b].
a user may have about movies were represented as agents,
                                                        Settings where there are multiple winners are inherently
and movies to be suggested were selected according to a vot-
                                                      different from their single-winner counterparts. A major con-
ing scheme (in this example there are multiple winners, as
                                                      cern when electing an assembly, for example, might be pro-
several movies are recommended to the user). In general, the
                                                      portional representation: the proportional support enjoyed
candidates in a virtual election can be entities such as beliefs
                                                      by different factions should be accurately represented in the
or joint plans [Ephrati and Rosenschein, 1997].
                                                      structure of the assembly. In practice, this usually means that
  Different aspects of voting rules have been explored
                                                      the percentage of votes secured by a party is roughly propor-
by computer scientists. An issue that has been particu-
                                                      tional to the number of seats it is awarded.
larly well-studied is manipulation. The celebrated Gibbard-
Satterthwaite Theorem implies that under any reasonable vot- Some simple multi-winner rules do not guarantee propor-
ing scheme, there always exist elections in which a voter can tional results; these rules include Single Non-Transferable
improve its utility by lying about its true preferences. Nev- Vote (SNTV), Bloc voting, Approval,andCumulative vot-
ertheless, it has been suggested that bounded-rational agents ing. More recently, intriguing theoretical voting schemes
may ﬁnd it hard to determine exactly which lie to use, and have been devised with the goal of guaranteeing proportional
thus may give up on manipulations altogether. The ﬁrst to representation. Two such schemes that have received atten-
                                                                                            [    ]
address this point were Bartholdi, Tovey and Trick [1989a]; tion were proposed, respectively, by Monroe 1995 , and by
                                                                           [    ]
Bartholdi and Orlin [1991] later showed that manipulating Chamberlin and Courant 1983 .
Single Transferable Vote (STV) is an NP-complete problem. In this paper, we augment the classical problems of ma-
Conitzer, Lang and Sandholm [2003] studied a setting where nipulation and control by introducing multiple winners, and
there is an entire coalition of manipulators. In this setting, the study these problems with respect to four simple but impor-

  1We use the terms “voting schemes”, “voting rules”, “voting sys- 2Better known as Lewis Carroll, author of “Alice’s Adventures
tems”, and “voting protocols” interchangeably.        in Wonderland”.

                                                IJCAI-07
                                                  1476tant multi-winner voting schemes: SNTV, Bloc voting, Ap- where fS : V → S is the assignment with the minimal mis-
proval, and Cumulative voting; we ﬁnd that Cumulative vot- representation, subject to the above restriction. The k winners
ing is computationally resistant to both manipulation and con- are the set S ∈Swith the lowest misrepresentation score.
trol. In addition, we characterize the computational complex- Chamberlin and Courant [1983] adopt a similar approach;
ity of winner determination in some of the intriguing voting as before, one considers sets S ∈Sand assignments fS.
schemes that have been suggested in recent years by political However, Chamberlin and Courant impose no restrictions on
scientists.                                           the assignments. Therefore, each set S is associated with the
                                                      assignment fS : V →  S that minimizes misrepresentation
2  Multi-Winner Voting Schemes                        among all possible assignments. To maintain proportional-
In this section we discuss several multi-winner voting sys- ity, Chamberlin and Courant compensate by using weighted
tems of signiﬁcance. Although the paper is self-contained, voting in the assembly.
interested readers can ﬁnd more details in [Brams and Fish-
burn, 2002].                                          3   Manipulation
  Let the set of voters be V = {v1,v2,... vn}; let the set A voter is considered to be a manipulator,orissaidtovote
of candidates be C = {c1,c2,... cm}. Furthermore, assume strategically, if the voter reveals false preferences in an at-
that k ∈ N candidates are to be elected.              tempt to improve its outcome in the election. Settings where
  We ﬁrst present four simple voting schemes; in all four, the manipulation is possible are to be avoided, as many voting
candidates are given points by the voters, and the k candidates protocols are designed to maximize social welfare, under
with the most points win the election. The schemes differ in the assumption that voters reveal their intentions truthfully.
the way points are awarded to candidates.             Therefore, computational resistance to manipulation is con-
  • Single Non-Transferable Vote (SNTV): each voter gives sidered an advantage.
    one point to a favorite candidate.                  In the classical formalization of the manipulation prob-
                                                      lem [Bartholdi et al., 1989a],wearegivenasetC of candi-
  • Bloc voting: each voter gives one point to each of k can-
                                                      dates, a set V of voters, and a distinguished candidate p ∈ C.
    didates.
                                                      We also have full knowledge of the voters’ votes. We are
  • Approval voting: each voter can approve or disapprove asked whether it is possible to cast an additional vote, the
    any candidate; an approved candidate is awarded one manipulator’s ballot, in a way that makes p win the election.
    point, and there is no limit to the number of candidates When generalizing this problem for the k-winner case, sev-
    a voter can approve.                              eral formulations are possible. For example, one can ask
  • Cumulative voting: allows voters to express intensities whether some candidate can be one of the k-winners, or
    of preferences, by asking them to distribute a ﬁxed num- whether it is possible to ensure that a complete set of k win-
    ber of points among the candidates. Cumulative vot- ners be elected. We adopt a more general formulation.
    ing is especially interesting, since it encourages minority Deﬁnition 1. In the MANIPULATION problem, we are given
    representation and maximizes social welfare [Brams and asetC of candidates, a set V of voters that have already cast
    Fishburn, 2002].                                  their vote, the number of winners k ∈ N, a utility function
                                                      u : C →  Z               t ∈ N
2.1  Fully Proportional Representation                           , and an integer   . We are asked whether
                                                      the manipulator can cast its vote such that in the resulting
We now describe two theoretical voting schemes that attempt election: c∈W u(c) ≥ t,whereW is the set of winners,
to achieve the ideal of fully proportional representation. |W | = k.
  We begin by specifying Monroe’s pure scheme [Monroe,
1995]. For each voter v and candidate c,amisrepresentation Remark 1. We make the standard assumption that tie-
value μvc is known;3 this value characterizes the degree to breaking is adversarial to the manipulator [Conitzer and
which candidate c misrepresents voter v.              Sandholm, 2002; Conitzer et al., 2003], i.e., if there are sev-
  Let S = {S ⊆ C : |S| = k}, the set of all possible subsets eral candidates that perform equally well in the election, the
of k winners. Let S ∈S,andletfS : V → S be a function ones with the lower utility will be elected.
that assigns voters to candidates in S. The misrepresentation Proposition 1. MANIPULATION in SNTV, Bloc voting, and
            v     f    μ
score of voter under Sis vfS (v). The total misrepresenta- Approval is in P.
                f         μ
tion of assignment S is v∈V vfS (v).
  Monroe requires that fS be restricted so that a similar num- Proof. Simple and efﬁcient algorithms exist for MANIPU-
ber of voters be assigned to each candidate in S.Inother LATION in these three protocols; omitted due to lack of
words, each candidate in S must be assigned at least n/k space.
voters. We say that such an assignment is balanced.Themis-
                                                      Proposition 2. MANIPULATION   in Cumulative voting is
representation score of S is the misrepresentation score of fS,
                                                      NP-complete.
  3
   The misrepresentation values μvc may be naturally derived The proof relies on a reduction from one of the most well-
from ballots cast by the electorate, but we do not go into details as known NP-complete problems, the KNAPSACK problem.
to exactly how this can be done. In any case, it is logical to assume
that μvc ∈{0, 1,...,m}, and we make this assumption throughout Deﬁnition 2. In the KNAPSACK problem, we are given a
the paper.                                            set of items A = {a1,...,an}, for each a ∈ A a weight

                                                IJCAI-07
                                                  1477w(a) ∈ N and a value υ(a), a capacity b ∈ N,andt ∈ N. adding “spoiler” candidates, disqualifying candidates, regis-
                                    
We are asked whether there is a subset A ⊆ A such that tering new voters, or removing voters that were already reg-
  a∈A υ(a) ≥ t while a∈A w(a) ≤ b.                  istered. A study of these issues in the context of two well-
                                         NP           known voting protocols was reported by Bartholdi, Tovey and
Proof of Proposition 2. The problem is clearly in .        [    ]
                                              NP      Trick 1992 , who found that control by adding and deleting
  To see that M ANIPULATION in cumulative voting is - candidates is NP-hardeveninthesimplePlurality4 protocol.
hard, we prove that KNAPSACK reduces to this problem. We
                A, w, υ, b, t
                        Moreover, in most cases the complexity of deleting voters is
are given an input        of KNAPSACK, and construct  identical to that of adding voters. Therefore, we focus here-
an instance of MANIPULATION in Cumulative voting as fol- inafter on control by adding voters.
lows.
       |A|           2n       V  = {v ,...,v  } 3n      The following formulation of the control (by adding voters)
  Let n=  .Thereare     voters:      1      2n ,                        [                  ]
          C =  {c ,...,c }     n                      problem appeared in Bartholdi et al., 1992 :wearegivena
candidates:      1     3n ,and   winners. In addition, set C of candidates and a distinguished candidate p ∈ C;a
each voter may distribute b points among the candidates. We V                        V 
               V                                      set  of registered voters, and a set of voters that could
want the voters in to cast their votes in a way that the fol- register in time for the election. We are also given r ∈ N,
lowing three conditions are satisﬁed:                 and have full knowledge of the voters’ votes. We are asked
                                                                                                     
 1. For j =1,...,n, cj has b − w(aj )+1points.        whether it is possible to register at most r voters from V in a
                                                                    p
 2. For j = n +1,...,2n, cj has at most b points.     way that makes win the election.
       j =2n  +1,...,3n  c           b                  As in the case of manipulation, we generalize this deﬁni-
 3. For                 , j has exactly points.       tion for our multi-winner setting:
                                  i =1,...,n
  This can easily be done. Indeed, for       ,voter   Deﬁnition 3. In the CONTROL problem, we are given a set C
vi awards b − w(ai)+1points to candidate ci, and awards               V                      V 
           w(a  ) − 1                c                of candidates, a set of registered voters, a set of unregis-
its remaining  i     points to candidate n+i.Now,for  tered voters, the number of winners k ∈ N, a utility function
i =1,...,n,votern + i awards all its b points to candidate u : C → Z
2n + i                                                          , the number of winners we are allowed to reg-
     .                                                ister r ∈ N, and an integer t ∈ N. We are asked whether it
  We deﬁne the utility u of candidates as follows:                              r           V 
                                                     is possible to register at most voters from such that in
                  υ(a )  j =1,...,n                   the resulting election, c∈W u(c) ≥ t,whereW is the set of
         u(c )=      j
            j     0      j = n +1,...,3n              winners, |W | = k.
                                                      Remark 2. Again, we assume that ties are broken adversari-
  The transformation is clearly polynomial, so it only re- ally to the chairman.
mains to verify that it is a reduction. Assume that there is
a subset A ⊆ A with total weight at most b and total value Proposition 3. CONTROL in Bloc voting, Approval, and Cu-
                                                                    NP
at least t.LetC = {cj : aj ∈ A }. The manipulator awards mulative voting is -complete.
w(a )                     c ∈ C
   j points to each candidate   , raising the total score                         k        5
                  b+1                                 Proof. By reduction from MAX -COVER;  omitted due to
of these candidates to . Since initially all candidates have lack of space.
at most b points, all candidates c ∈ C are among the n win-
ners of the election. The total utility of these candidates is: Proposition 4. CONTROL in SNTV is in P.
  c∈C u(c)=   a∈A υ(a) ≥ t (since for all j =1,...,n,
u(cj)=υ(aj)).                                         Proof. We describe an algorithm, CONTROL-SNTV, that ef-
  In the other direction, assume that the manipulator is able ﬁciently decides CONTROL in SNTV. Informally, the algo-
to distribute b points in a way that the winners of the elec- rithm works as follows. It ﬁrst calculates the number of points
tion have total utility at least t. Recall that there are initially awarded to candidates by voters in V . Then, at each stage,
at least n candidates with b points and utility 0, and that ties the algorithm analyzes an election where the l top winners
are broken adversarially to the manipulator. Therefore, there in the original election remain winners, and attempts to se-
must be a subset C ⊆ C of candidates that ultimately have lect the other k − l winners in a way that maximizes utility.
a score of at least b +1, such that their total utility is at least This is done by setting the threshold to be one point above the
                                                                (l +1)
t.LetA  be the corresponding items in the KNAPSACK in- score of the    -highest candidate; the algorithm pushes
                          
stance, i.e., aj ∈ A iff cj ∈ C . The total weight of items the scores of potential winners to this threshold.
in A is at most b, as only b points were distributed among A formal description of CONTROL-SNTV is given as Al-
                                                 
the candidates in C by the manipulator, and each cj ∈ C gorithm 1. The procedure PUSH works as follows: its ﬁrst
                                                                             thr
initially has b − w(aj )+1points. It also holds that the to- parameter is the threshold , and its second parameter is
tal utility of the items in A is exactly the total utility of the the number of candidates to be pushed, pushNum. The pro-
candidates in C, namely at least t.                  cedure also has implicit access to the input of CONTROL-
                                                      SNTV, namely the parameters of the given CONTROL in-
                                                                                     
4  Control                                            stance. PUSH returns a subset V ⊆ V to be registered. We
                                                      say that the procedure pushes a candidate c to the threshold
Some voting protocols can be controlled by the authority
conducting the election, which we refer to as the chairman, 4The Plurality protocol is identical to SNTV, when there is a sin-
in the sense that the chairman can change the election’s re- gle winner.
sults. Some types of control available to the chairman are 5See [Feige, 1998] for a deﬁnition and analysis of this problem.

                                                IJCAI-07
                                                  1478Algorithm 1 Decides the CONTROL problem in SNTV.      and the threshold is s[cjmin ]+1. Surely, it is possible to push
                                                                       W ∗ \ W 
 1: procedure CONTROL-SNTV(C, V, V  ,k,u,r,t)         all the candidates in      to the threshold, and in such
                                                                                    W ∗
 2:   s[c] ←|{v ∈ V : v votes for candidate c}|       an election, the winners would be .SincePUSH  maxi-
                                                                          k − min +1
 3:   Sort candidates by descending score  Break ties by mizes the utility of the    candidates it pushes to
                                                                                            l = min − 1
   ascending utility                                  the threshold, the utility returned by PUSH for  is
                                                      at least as large as the total utility of the winners in W ∗.
 4:   Let the sorted candidates be {ci1 ,...,cim }
 5:   for l =0,...,kdo              Fix l top winners
           
 6:      V   ←PUSH(s[cl+1]+1,k−    l)   Select other   It remains to explain why the procedure PUSH can be im-
   winners; see details below                         plemented to run in polynomial time. Recall the KNAPSACK
                                         
 7:      ul ←  utility from election where V are regis- problem; a more general formulation of the problem is when
   tered                                              there are two resource types. Each item has two weight mea-
                                                             1         2
 8:   end for                                         sures, w (ai) and w (ai), and the knapsack has two capaci-
                                                           1     2
 9:   if maxl ul ≥ t then return true                 ties: b and b . The requirement is that the total resources of
                                                                                   1
10:   else                                            the ﬁrst type used do not exceed b , and the total resources
                                                                                    2
11:      return false                                 of the second type do not exceed b . This problem, which
12:   end if                                          often has more than two dimensions, is called MULTIDIMEN-
13: end procedure                                     SIONAL KNAPSACK.PUSH    essentially solves a special case
                                                      of the two-dimensional knapsack problem, where the capaci-
                                                      ties are b1 = r (the number of voters the chairman is allowed
if exactly thr − s[c] voters v ∈ V  that vote for c are regis- to register), and b2 = pushNum (the number of candidates
tered. In other words, the procedure registers enough voters to be pushed). If the threshold is thr, for each candidate cj
                                                                                                 
from V in order to ensure that c’s score reaches the thresh- that is supported by at least thr − s[cj] voters in V ,weset
                                                       1                  2
old. PUSH ﬁnds a subset C of candidates of size at most w (aj)=thr − s[cj], w (aj)=1,andυ(aj)=u(cj).The
pushNum   that maximizes c∈C u(c), under the restriction MULTIDIMENSIONAL KNAPSACK  problem can be solved in
that all candidates in C can be simultaneously pushed to the time that is polynomial in the number of items and the ca-
threshold by registering a subset V  ⊆ V  s.t. V  ≤ r.The pacities of the knapsack [Kellerer et al., 2004] (via dynamic
procedure returns this subset V .                   programming, for example). Since in our case the capacities
                                                                            
  Now, assume we have a procedure PUSH that is always are bounded by m and |V |,PUSH can be designed to run in
correct (in maximizing the utility of at most k − l candidates polynomial time.
it is able to push to the threshold s[cl+1]+1, while regis-
                 r
tering no more than voters) and runs in polynomial time. 5 Winner Determination
Clearly, CONTROL-SNTV also runs in polynomial time. Fur-
thermore:                                             Some complex voting schemes are designed to be theoret-
                                                      ically appealing in the sense that they satisfy some strict
Lemma 1.  CONTROL-SNTV     correctly decides the CON- desiderata. Unfortunately, it might be the case that an attrac-
TROL problem in SNTV.                                 tive voting scheme is so complicated that even identifying the
                                                      winners is an NP-hard problem. This is a major issue, espe-
         W  = {c  ,...,c }      k
Proof. Let      j1     jk  be the winners of the elec- cially when one considers using such a protocol for real-life
tion that does not take into account the votes of voters in elections, as elections of this kind might always need to be re-
V 
   (the original election), sorted by descending score, and solved within a reasonable time frame.6 Notice that in SNTV,
for candidates with identical score, by ascending utility. Let Bloc Voting, Approval, and Cumulative Voting, it is clearly
W ∗ =  {c∗ ,...,c∗ }
         j1     jk be the candidates that won the con- easy to tell who the winners are. In this section, however, we
trolled election with the highest utility, sorted by descending focus on the complex schemes introduced in Section 2.1.
score, then by ascending utility; let s∗[c] be the ﬁnal score of
candidate c in the optimal election. Let min be the smallest Deﬁnition 4. In the WINNER-DETERMINATION problem,
                       ∗                                                         V                     C
index such that cjmin ∈/ W (w.l.o.g. min exists). It holds we are given the set of voters , the set of candidates ,
                         ∗  ∗                                              k  ∈  N
that for all candidates c ∈ W , s [c] ≥ s[cjmin ].Now,we the number of winners    , misrepresentation values
                            ∗     ∗                   μ   ∈{0, 1,...,m}     t ∈ N
can assume w.l.o.g. that if c ∈ W and s [c]=s[cj ] then vc             ,and      . We are asked whether there
                                           min                     S ⊆ C         |S| = k
c ∈ W (and consequently, c = cj for some q<min). In-  exists a subset    such that     , with misrepresenta-
                            q                                   t
deed, it must hold that u[c] ≤ u[cjmin ] (as tie-breaking is ad- tion at most .
versarial to the chairman), and if indeed c/∈ W even though
c ∈ W ∗                                               Remark 3.  Determining the set of winners is clearly harder
       , then the chairman must have registered voters that than the above decision problem, as the set of winners mini-
       c
vote for , although this can only lower the total utility. mizes misrepresentation.
  It is sufﬁcient to show that one of the elections that is con-
sidered by the algorithm has a set of winners with utility at 6
          W ∗           W  = {c ,...,c     }⊆W          Thus the negative repercussions of a winner determination
least that of . Indeed, let    j1     jmin−1      ;              NP
                                       ∗             scheme being  -hard are even more pronounced than the positive
all other k − min +1candidates c  ∈  W   \ W   have   repercussions of manipulation being NP-hard; in the latter case a
s[c] ≥ s[c   ]+1
         jmin    . The algorithm considers the election voting scheme might, unacceptably, still be susceptible to manipu-
                                      
where the ﬁrst min − 1 winners, namely W , remain ﬁxed, lation in the average case [Procaccia and Rosenschein, 2006].

                                                IJCAI-07
                                                  1479Remark 4. For ease of exposition, we shall assume that n/k Algorithm 2 Finds a balanced assignment that minimizes
is an integer. This does not limit the generality of our results, misrepresentation.
                                                 v
as otherwise it is possible to pad the electorate with voters 1: procedure ASSIGN(S)
        μ  =0        c ∈ C
such that vc   for all    .                            2:    fS ← arbitrary assignment of n/k voters to each can-
                                                                 S
Theorem  5. The WINNER-DETERMINATION     problem in       didate in
Monroe’s scheme and in the Chamberlin-Courant scheme is 3:   loop
NP-complete, even when the misrepresentation values are 4:      if ∃A ⊆ Vs.t.|A|≤k    ∧ c.r.s. A strictly de-
binary.                                                   creases misrepresentation then
                                                       5:          update fS by performing the shift    
Proof. By reduction from MAX k-COVER; omitted due to      According to Equation (1)
lack of space.                                         6:       else
                                                       7:          return fS
  Our hardness results relied on the implicit assumption
                         k                             8:       end if
that the number of winners is not constant (in the pre- 9:   end loop
vious sections as well). In the context of the WINNER- 10: end procedure
DETERMINATION  problem, we are also interested in a setting
where the number of winners is constant, as this is sometimes
the case in real-life elections: the electorate grows, but the                                        k
size of the parliament remains ﬁxed.                  constant, the number of possible cycles of length at most is
                                                      polynomial in n. We have that the complexity of WINNER-
                                               k =
Proposition 6. When the number of winners satisﬁes    SELECTION  in Monroe’s scheme is polynomial — provided
O(1),theWINNER-DETERMINATION     problem in Monroe’s  we are able to show that the procedure works!
scheme and in the Chamberlin-Courant scheme is in P.

Proof. Clearly the WINNER-DETERMINATION  problem in   Lemma 2.  ASSIGN returns an optimal assignment.
the Chamberlin-Courant scheme can be solved efﬁciently
     k = O(1)                    S
when          , as the size of the set , the set of subsets Proof. Consider a scenario where the procedure reaches the
of candidates with size k, is polynomial in m.Foragiven
S ∈S                       f                          iterative step, but the current assignment is not optimal. We
      , ﬁnding the assignment S that minimizes misrepre- must show that the algorithm does not terminate at this point.
sentation in this scheme is simple: each voter v is assigned to  ∗
                                                      Indeed, let fS : V → S be a ﬁxed optimal assignment. We
argminc∈Cμvc.                                                                             ∗
                                                      consider the voters v such that fS(v)=fS(v) to be placed,
  In Monroe’s scheme, by a similar consideration, it is suf- and the other voters to be misplaced. Assume without loss of
ﬁcient to produce a procedure that efﬁciently computes the         f ∗
                           S ∈S                       generality that S minimizes the number of misplaced voters
misrepresentation score of every , i.e., ﬁnds a balanced among all optimal assignments.
assignment that minimizes misrepresentation in polynomial
                                                        We claim that there is a set of l ≤ k voters that can be
time.
                                                      cyclically right-shifted in a way that places all l voters. Let
  We analyze a procedure that maintains at each stage a bal-
                                                      vi1 be a misplaced voter. In order to place it, it has to be
anced assignment, and iteratively decreases misrepresenta-                 f ∗(v )
    7                                                 assigned to the candidate S i1 . Thus, one of the voters that
tion. Changes in the assignment are introduced by cycli- f        f ∗(v )                        f
                                                       S assigns to S i1 must be misplaced, otherwise S is not
cally right-shifting (c.r.s.) sets of voters: each voter in a set          v   v
A = {v  ,v ,...,v }                                   balanced; call this voter i2 . i2 can be placed by uprooting
       i1 i2     il is shifted to the candidate that is as- v            f ∗(v )
                                                      avoter i3 assigned to S i2 . Iteratively repeating this line
signed to its successor; the assignment remains balanced as                                         
                                                      of reasoning, there must at some stage be a voter vi  , d ≤ k,
the last voter is assigned to the ﬁrst candidate. In more detail, ∗                            d
                                                              f  (vi )=fS(vi  )         d<d
                        f                             such that S  d        d  for some      ;thisistrue,
if the current assignment is S, the algorithm singles out a             k                   S
          A  = {v ,v  ,...,v } l ≤ k                  since there are only distinct candidates in . Hence, the
set of voters    i1 i2     il ,     , and modiﬁes the       {v ,v    ,...,v }
                                                     voters  id id+1     i  can be cyclically right-shifted in
assignment by deﬁning the next assignment f as follows:                   d
                                      S               a way that places all d − d +1=l ≤ k voters.
                
                 f (v        ) v  = v  ∈ A              For any set of voters that can be placed by cyclic right-
                 S  id+1(mod l) i   id
       fS(vi)=                                  (1)   shifting, the shift must strictly decrease misrepresentation.
                 fS(vi)        vi ∈/ A                                                              ∗
                                                      Otherwise, by cyclically left-shifting the same set in fS,we
  The procedure is formally described in Algorithm 2. It can obtain a new optimal and balanced assignment, in which
                                                                                    f ∗
terminates after at most nm repetitions of the iterative step: more voters are placed compared to S; this is a contradiction
                                                                         f ∗
at each iteration, the total misrepresentation decreases by at to our assumption that S minimizes the number of misplaced
least 1, since the μvc are integers. On the other hand, the voters.
total misrepresentation cannot decrease below 0, and is ini- It follows that there must be a set of at most k voters such
tially at most n · maxv,c μvc ≤ nm. Moreover, the iterative that cyclically right-shifting the set strictly decreases the mis-
step of the algorithm can be calculated efﬁciently: since k is representation. Therefore, the procedure does not terminate
                                                      prematurely.
  7It is also possible to derive an efﬁcient algorithm by applying bi-
partite matching algorithms to an appropriate graph, but the solution
given here is self-contained.                           The proof of Proposition 6 is completed.

                                                IJCAI-07
                                                  1480