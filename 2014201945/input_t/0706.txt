             Tractable Reasoning with Incomplete First-Order Knowledge
                  in Dynamic Systems with Context-Dependent Actions
                                Yongmei Liu    and  Hector J. Levesque
                                    Department of Computer Science
                                         University of Toronto
                                    Toronto, ON, Canada M5S 3G4
                                     {yliu, hector}@cs.toronto.edu

                    Abstract                          holds after a sequence of actions is performed. Two settings
                                                      where this problem arises naturally are for planning and for
    A basic reasoning problem in dynamic systems is   high-level program execution [Levesque et al., 1997].Apre-
    the projection problem: determine if a formula    requisite to planning is the ability to determine if a goal is
    holds after a sequence of actions has been per-
                                          1           satisﬁed after a sequence of actions. To execute a high level
    formed. In this paper, we propose a tractable so- robotic program such as “while there is a block on the table,
    lution to the projection problem in the presence  pick up a block and put it away”, one needs to determine after
    of incomplete ﬁrst-order knowledge and context-   various sequences of actions whether there is still a block on
    dependent actions. Our solution is based on a     the table.
    type of progression, that is, we progress the ini-
                                                        In practice, there are two ways to deal with projection: we
    tial knowledge base (KB) wrt the action sequence
                                                      can progress the initial KB wrt the action sequence and an-
    and answer the query against the resulting KB.
                                                      swer the query against the resulting KB; or we can regress
    The form of reasoning we propose is always log-
                                                      the query wrt the action sequence and answer the resulting
    ically sound and is also logically complete when
                                                      query against the initial KB. Progression has at least two ad-
    the query is in a certain normal form and the agent
                                                      vantages: First, it avoids a duplication of effort when mul-
    has complete knowledge about the context of any
                                                      tiple queries need to be answered wrt the same action se-
    context-dependent actions.
                                                      quence, and especially when that sequence is long. Second,
                                                      in a robotics setting, a robot can use its “mental idle time” to
1  Introduction                                       compute a progression while it is busy performing physical
                                                      actions. Projection via progression has three main compu-
In the area of Knowledge Representation and Reasoning, tational requirements: the new KB must be efﬁciently com-
there is a well-known tradeoff between the expressiveness of puted, its size should be at most linear in the size of the initial
the representation language and the computational tractabil- KB (to allow for iterated progression), and it must be pos-
ity of the associated reasoning task. At one extreme, we sible to answer the query efﬁciently from the new KB. Lin
have databases for which queries can be efﬁciently evalu- and Reiter [1997] give a formal study of progression. They
ated. But databases are too limited for many AI applica- show that progression is not always ﬁrst-order deﬁnable, and
tions because they require complete knowledge about the identify a few important cases where progression is ﬁrst-order
                  [    ]
domains. Levesque 1998  proposes a generalization of a deﬁnable and computationally tractable. However, the third
database called a proper KB, which allows a limited form of requirement is not addressed in their paper.
incomplete knowledge, equivalent to a (possibly inﬁnite) con-
sistent set of ground literals. Since the deduction problem for In this paper, we propose a tractable, sound, and sometimes
proper KBs is undecidable, Levesque proposes an evaluation- complete solution to the projection problem in the presence
based reasoning procedure called V that is logically sound of incomplete ﬁrst-order knowledge and context-dependent
and, when the query is in a certain normal form called NF, actions. We restrict our attention to actions with only “lo-
also logically complete. Moreover, later Liu and Levesque cal” effects, and where incomplete knowledge is in the form
[    ]                                                of a proper KB. We deﬁne a version of progression where a
2003  show that despite the incomplete knowledge, database                                             V
techniques can be used to implement V efﬁciently.     proper KB remains proper afterward, and where applying
  In this paper, we apply the procedure V to reasoning in to the progressed KB and the query returns the same value as
                                                      applying V to the initial KB and a regressed query. We prove
dynamic systems where the state of the world changes as a                    NF
result of the actions of agents. For such applications, a basic that when the query is in and the initial KB has com-
reasoning problem is the so-called projection problem:given plete knowledge about the context of any context-dependent
                                                      actions, our solution is logically complete. It is also logically
an action theory that speciﬁes the preconditions and effects of                 NF
actions, and an initial KB, determine whether or not a formula complete when the query is in and there are sensing ac-
                                                      tions that provide dynamic information about the context of
  1By “tractable” we mean “solvable in polynomial time”. the relevant context-dependent actions.2  Preliminaries                                        1. if φ is a ground atom or ewff, then φ ∈NF;
In this section, we review proper KBs, V,andNF .Also,   2. if φ ∈NF,then¬φ  ∈NF;
we brieﬂy review the situation calculus, and formally deﬁne 3. if φ1,...,φn ∈NF,and{φ1,...,φn} is logically sep-
local-effect action theories and regression for them.     arable, then ∧φi ∈NF;
                                                        4. if Γ ⊆NF,  Γ is logically separable, and for some φ,
2.1  Proper KBs,  V, and the normal form NF                      x
                                                          Γ={φc   | c ∈C},then∀xφ ∈NF.
We use a standard ﬁrst-order logical language L with equal-
                                                      The intuition behind NF is that different parts of a formula
ity, a countably inﬁnite set of constants C = {c1,c2,...},and
                                                      must be logically independent. A simple example of a for-
no other function symbols. We restrict our attention to stan-
                                                      mula not in NF is (p ∨¬p),wherep is atomic. In the propo-
dard interpretations, where equality is identity, and there is a
                                                      sitional case, a CNF formula is in NF if its clauses are non-
bijection between the set of constants and the domain of dis-
                                                      tautologous and closed under resolution.
course. This restriction can be captured by a set of axioms E,
                                                        Liu and Levesque [2003] show that V can be implemented
consisting of the axioms of equality and the set of formulas
                                                      efﬁciently using database techniques (projections, joins, etc).
{ci 6= cj | i 6= j}. Since we treat equality separately, when
                                                      Here we present a cleaner variant of this result.
we say “predicate”, “atom” or “literal”, we exclude equality. k
                                                        Let L  denote the set of formulas from L that use at most
  We use ρ to range over atoms whose arguments are distinct
                                                      k different variables. Let R = {~c 1,...,~c m} be a ﬁnite set of
variables. We use e to range over ewffs, that is, quantiﬁer-free
                                                      n-tuples. We use ~x ∈ R to denote ~x = ~c 1 ∨ ...∨ ~x = ~c m.
formulas with only equalities (i.e. no predicates). We use ∀φ
                                         x                           L    P   ¬P                  P
to denote the universal closure of φ. We write φc to denote Deﬁnition 4 Let be or for some predicate .The
φ with all free occurrences of x replaced by constant c.We ewff deﬁning L in a proper Σ, denoted by ξL, is the disjunc-
                                                               e        ∀(e(~x) ⊃ L(~x)) ∈ Σ           ξ
write Σ |=E φ to denote E∪Σ |= φ.                     tion of all such that               . We can write L
                                                      in the form of ~x ∈ IL ∨ eL ∧ ~x 6∈ OL so that IL and OL are
                 Σ           E∪Σ                 Σ
Deﬁnition 1 AKB    is proper if   is consistent and   ﬁnite relations with as many tuples as possible, and eL is an
                               ∀(e ⊃ ρ)  ∀(e ⊃¬ρ).
is a ﬁnite set of formulas of the form or             ewff. The e-size of Σ is the maximum size of an eL in Σ.
It is not hard to see that the problem of determining whether a Then a corollary to Theorem 4.8 in [Liu and Levesque, 2003]:
sentence is logically entailed by a proper KB is undecidable,
                                                      Corollary 2 Let Σ be proper, and let φ ∈Lk.ThenV [Σ,φ]
since when the KB is empty, this reduces to classical valid-                O(lmnk)       l            φ
ity. Levesque [1998] proposes an evaluation-based reasoning can be computed in time ,where  is the size of ,
                                                      m is the e-size of Σ, and n is the size of Σ.
procedure called V instead. Given a proper KB and a query,
V returns one of three values 0 (known false), 1 (known true), Although the time complexity scales exponentially with k,
  1
or 2 (unknown) as follows:                            this is typical even of queries over ordinary databases, and so
                                                     is perhaps as good as can be expected.
                  1   if there is a ∀(e(~x) ⊃ P (~x))
                
                       in Σ such that V [Σ,e(~c )] = 1 2.2 Situation calculus
    V [Σ,P(~c )] = 0   if there is a ∀(e(~x) ⊃¬P (~x))
 1.                                                  Our account of action and change is formulated in the lan-
                       in Σ such that V [Σ,e(~c )] = 1
                   1                                 guage of the situation calculus [McCarthy and Hayes, 1969;
                    2  otherwise                      Reiter, 2001]. We will not go over the language here except
 2. V [Σ,c= c0]=1if c is identical to c0,and0otherwise; to note the following components: there are three disjoint
                                                      sorts for actions, situations, and objects; there is a special
 3. V [Σ, ¬φ]=1−  V [Σ,φ];
                                                      constant S0 denoting the initial situation, namely the one in
 4. V [Σ,φ∨ ψ]=max{V   [Σ,φ],V[Σ,ψ]};                 which no actions have yet occurred; there is a distinguished
                                x          +                       do(a, s)                             s
 5. V [Σ, ∃xφ]=maxc∈H+    V [Σ,φc ],whereH   is the   binary function      denoting the successor situation to
    union of the constants in Σ or φ, and an extra constant. resulting from performing action a; relations whose truth val-
                                                      ues vary from situation to situation, are called (relational) ﬂu-
This V procedure is logically sound and, when the query is in
                        NF                            ents, and are denoted by predicate symbols taking a situation
a certain normal form called , also logically complete: term as their last argument; and there is a special predicate
Theorem 1 ([Levesque, 1998]) Let Σ be proper. Then    Poss(a, s) stating that action a is executable in situation s.
                                                        We relate the language of the situation calculus to L as
 1. for every φ ∈L,ifV [Σ,φ]=1then Σ |=E φ;
                                                      follows: There is a set of constants of sort object which are
    and if V [Σ,φ]=0then Σ |=E ¬φ.
                                                      constants of L. The situation-independent predicates and re-
 2. for every φ ∈NF, V [Σ,φ]=1iff Σ |=E φ;            lational ﬂuents are predicates from L.Thatis,ifP (~x) is a
    and V [Σ,φ]=0iff  Σ |=E ¬φ.                       situation-independent predicate, and F (~x, s) is a relational
                                                      ﬂuent, then P (~x) and F (~x) are predicates from L.
  For the interested readers, the following is the deﬁnition of                   +
NF  from [Levesque, 1998]:                              We extend the language L to L by allowing equalities in-
                                                      volving action functions. Let φ ∈L+,andletτ be a situation
                Γ
Deﬁnition 2 Aset   of sentences is logically separable iff term. We use φ[τ] to denote the situation calculus formula
                                   L   L ∪ Γ
for every consistent set of ground literals ,if has no obtained from φ by taking τ as the situation arguments of all
                  L ∪{φ}                     φ ∈ Γ
standard model, then     is inconsistent for some .   ﬂuents mentioned by φ.Weuseα  to range over ground ac-
Deﬁnition 3 The normal form NF is the least set such that tions, and we use δ to range over sequences of ground actions.Let δ = hα1,...,αni.Weusedo(δ, S0) to denote the end sit- Our blocks world example above is clearly local-effect.
uation of δ,thatis,do(αn,do(αn−1,...do(α1,S0) ...)).    The notion of a successor state axiom being local-effect
  A particular domain of application will be speciﬁed by a is a generalization of that of being strictly context-free de-
basic action theory of the following form:2           ﬁned by Lin and Reiter [1997]. An SSA is strictly context-
                                                             +          −
                                                      free if γF (~x, a) and γF (~x, a) are disjunctions of formulas of
         D = Dap ∪Dss  ∪Duna  ∪DS  , where
                                  0                   the form ∃~z [a = A(~y)],whereA, ~y,and~z are as above. For
 1. Dap is a set of action precondition axioms, one for instance, the SSA for ﬂuent on is strictly context-free, while
    each action function A, with form Poss(A(~x),s) ≡ that for ﬂuent eh is not.
            3
    ΠA(~x)[s], where ΠA(~x) ∈L.                         By using the unique names axioms, the instantiation of a
 2. Dss is a set of successor state axioms (SSAs), one for local-effect SSA on a ground action can be signiﬁcantly sim-
                         F (~x, do(a, s)) ≡ Φ (~x, a)[s] pliﬁed . Suppose the SSA for F is local-effect. Let α = A(~c)
    each ﬂuent, of the form               F       ,                                             ∗
                     +                                                        ∗   +    −       γ  (~x, α)
    where ΦF (~x, a) ∈L . Usually, ΦF (~x, a) has the form be a ground action, and let be or .Then F   is
                                                      equivalent to a formula of the following form:
               +                 −
             γF (~x, a) ∨ (F (~x) ∧¬γF (~x, a)).                     ~                 ~
                                                                 ~x = d1 ∧ ψ1 ∨ ...∨ ~x = dn ∧ ψn,
    SSAs take the place of the so-called effect axioms, and ~
                                                      where di is a vector of constants contained in ~c,andψi is a
    provide a solution to the frame problem.                              ∗
                                                      sentence. We will use γF (α)(~x) to denote the above formula,
    Duna                                                              ~       ∗                   ~
 3.      is the set of unique names axioms for actions: and we will write (d, ψ) ∈ γF (α) to mean that ~x = d ∧ ψ is
        A(~x) 6= A0(~y), and A(~x)=A(~y) ⊃ ~x = ~y,   one of the disjuncts. Also, we will use ΦF (α)(~x) to denote
                                                      γ+(α)(~x) ∨ (F (~x) ∧¬γ−(α)(~x)).
          A    A0                                      F                   F        In the case of our blocks
    where   and   are distinct action functions.      world, instances of the SSAs can be simpliﬁed as follows:

 4. DS0 is of the form {φ[S0] | φ ∈ Σ0},whereΣ0 ⊆L.
                                                      clear(x, do(move(c1,c2,c3),s)) ≡ x = c2 ∨
    Σ0 is called the initial KB.
                                                            clear(x, s) ∧¬(x = c3).
In this setting, the projection task can be deﬁned as follows: on(x, y, do(move(c ,c ,c ),s)) ≡ x = c ∧ y = c ∨
           D|=   φ[do(δ, S )],     φ ∈L       δ                        1  2 3            1       3
determine if   E         0   where       ,and  is a         on(x, y, s) ∧¬(x = c1 ∧ y = c2).
sequence of ground actions.                           eh(x, do(move(c1,c2,c3),s)) ≡ x = c1 ∧¬eh(c3,s) ∨
                                                  4
  As a running example, we will use a simple blocks world.  eh(x, s) ∧¬(x = c1 ∧ eh(c3,s)).
We use a single action, move(x, y, z), moving a block x from
block y to block z (treating the table as just another block). An important computational mechanism for reasoning
We use three ﬂuents: clear(x, s),blockx has no blocks on about actions is regression [Reiter, 2001]. Here we deﬁne
top of it; on(x, y, s),blockx is on block y; eh(x, s),the a one-step regression operator for local-effect action theories.
             x
height of block is even. We have the following action pre- Deﬁnition 6 Let φ ∈L.WeuseRα(φ) to denote the for-
condition axiom and successor state axioms:           mula obtained from φ by replacing each ﬂuent atom F (~t )
                                                          Φ  (α)(~t )      R  (φ)              φ    α
Poss(move(x, y, z),s) ≡ clear(x) ∧ on(x, y) ∧ clear(z). with F     . We call α   the regression of wrt .
clear(x, do(a, s)) ≡ (∃y,z)a = move(y,x,z) ∨          Note that Rα(φ) remains in L.Letδ = hα1,...,αni.We
                                                          R          R    ◦···◦R
      clear(x, s) ∧¬(∃y,z)a = move(y,z,x);            use  δ to denote α1         αn . Wenowstateasimple
on(x, y, do(a, s)) ≡ (∃z)a = move(x, z, y) ∨          form of the regression theorem [Reiter, 2001]. Recall that Σ0
      on(x, y, s) ∧¬(∃z)a = move(x, y, z);            is the initial KB of D.
eh(x, do(a, s)) ≡ (∃y,z)[a = move(x, y, z) ∧¬eh(z,s)] ∨ Theorem 3 (The Regression Theorem)
      eh(x, s) ∧¬(∃y,z)[a = move(x, y, z) ∧ eh(z,s)]. For every φ ∈L, D|=E φ[do(δ, S0)] iff Σ0 |=E Rδ(φ).
2.3  Local effect action theories and regression      This theorem shows that regression is a sound and complete
                                                      solution to the projection problem. In this paper, we prove all
Actions in many dynamic domains have only local effects in our results about progression by using regression as a bridge.
the sense that if an action A(~c ) changes the truth value of
an atom F (d~),thend~ is contained in ~c . This contrasts with
actions having universal effects such as exploding a bomb, 3 Progression of Proper KBs
which kills all those near it. We can deﬁne this as follows: In this section, we deﬁne a variant of classical progression,
                                                      and show how to compute it for local-effect action theories.
Deﬁnition 5 A successor state axiom is local-effect if both
γ+(~x, a)   γ−(~x, a)                                   First consider classical progression. Suppose we have a
 F      and  F      are disjunctions of formulas of the KB Σ.LetM be a possible state of Σ, that is, a model of Σ.
form ∃~z [a = A(~y) ∧ φ(~y)],whereA is an action function, α                                       M
~y       ~x ~z                       ~y    φ          Let  be a ground action. Then the successor state of wrt
 contains ,  is the remaining variables of ,and (called α is the model M 0 such that for any ground ﬂuent atom F (~c ),
a context formula) is a quantiﬁer-free formula from L.An 0                                0
                                                      M   |= F (~c ) iff M |=ΦF (α)(~c ).AKBΣ is a progression
action theory is local-effect if each SSA is local-effect. of Σ wrt α if the models of Σ0 are exactly the successor states
  2We use slightly different notation from that in [Reiter, 2001]. of models of Σ wrt α. A basic property of progression is:
                                                                   0
  3We omit the leading universal quantiﬁers.          Suppose that Σ is a progression of Σ wrt α. Then for every
                                                              0
  4To justify the concerns for the tractability of reasoning, the φ ∈L, Σ |=E φ iff Σ |=E Rα(φ).Itisinthissensethatwe
reader should imagine there being a very large number of blocks. say classical progression preserves classical entailment.  It would be nice if the classical progression of a proper KB PV[δ, φ]=0,thenD|=E ¬φ[do(δ, S0)]. Thus PV is logi-
were proper, so that we could use it and V to solve the pro- cally sound for projection. It is easy to see that Pα(Σ) can be
jection problem. However, this is unfortunately not the case computed in O(n) time, where n is the size of Σ. By Corol-
even for very simple action theories. Consider the following lary 2, we have the following tractability result:
            [                       ]
example from Petrick and Levesque, 2002 :             Theorem 5  Let D be a local-effect action theory with a
                                                                           k
F (do(a, s)) ≡ a = A ∧ G(s) ∨ F (s); G(do(a, s)) ≡ G(s). proper Σ0, and let φ ∈L .ThenPV[δ, φ] can be computed
                                                      in time O(pn + lmnk),wherep is the length of δ, l the size
Then any progression of the empty KB (which is proper) wrt of φ, m the e-size of Σ0, and n the size of Σ0.
action A results in disjunctive information, (F ∨¬G),and
                                                      Thus PV provides an efﬁcient and logically sound solution to
hence is no longer proper. So what we will propose is a vari-
                                                      the projection problem despite the incomplete knowledge. In
ant of classical progression where the progression of a proper
                                                      the next two sections, we will explore under what conditions,
KB does remain proper and the progression preserves V in-
                                                      PV  is also logically complete.
stead of preserving classical entailment.
Deﬁnition 7 Let Σ and Σ0 be proper. We say that Σ0 is a 4 A Completeness Result
(weak) progression of Σ wrt a ground action α if for every
          0                                           Since PV uses V , it is not surprising that we need a query
φ ∈L, V [Σ ,φ]=V  [Σ, Rα(φ)].
                                                      to be in normal form for logical completeness. In this sec-
  We now show that for local-effect action theories, it is easy tion, we will show that the only other thing we need is for the
to compute a weak progression of a proper KB.         initial KB to have complete knowledge of the context of any
Deﬁnition 8 Let D be local-effect and Σ be proper.    context-dependent actions.
                                                        More precisely, we say that a KB Σ is complete wrt a set G
We deﬁne Pα(Σ) as the set of the following sentences:
                                                      of ground atoms if for all l ∈ G, either Σ |=E l or Σ |=E ¬l.
  ∀ [~x ∈ AF ∨ ξF (~x) ∧ ~x 6∈ DF ⊃ F (~x)],          AKBΣ   is complete wrt a predicate P if it is complete wrt all
  ∀ [~x ∈ (A¬F − D¬F ) ∨ ξ¬F (~x) ∧ ~x 6∈ D¬F ⊃¬F (~x)], ground atoms of P .NowletΣ be proper, and φ a quantiﬁer-
                                                      free sentence such that Σ is complete wrt all atoms of φ.Then
     F                  ξ       ξ
where  ranges over ﬂuents, F (resp. ¬F ) is the ewff deﬁn- it is easy to see that V [Σ,φ] is either 0 or 1.
ing F (resp. ¬F )inΣ (c.f. Deﬁnition 4), and
                                                      Deﬁnition 10 AKBΣ    is context-complete (wrt D)ifitis
    A  =  {d~ | (d,ψ~ ) ∈ γ+(α) V [Σ,ψ]=1}
 1.  F                 F    and            ,                                                   γ+    γ−
            ~   ~       +                             complete wrt every predicate appearing in every F and F .
    D¬F  = {d | (d,ψ) ∈ γF (α) and V [Σ,ψ] 6=0};
                                                      So Σ is context-complete if it has complete knowledge about
    A    = {d~ | (d,ψ~ ) ∈ γ−(α) V [Σ,ψ]=1}
 2.  ¬F                 F    and            ,         the predicates in the context of any context-dependent ac-
           ~   ~       −
    DF  = {d | (d,ψ) ∈ γF (α) and V [Σ,ψ] 6=0}.       tions. For example, in our blocks world, a Σ is context-
                                                                                eh
Then we get the following:                            complete if it is complete wrt ; it may be incomplete wrt
                                                      clear and on. So context-completeness still allows incom-
Theorem 4 Let D be local-effect and Σ be proper.      plete knowledge.
Then Pα(Σ) is a weak progression of Σ wrt α.            There are two useful special cases where we get context-
   δ = hα1,...,αni       Pδ         Pα   ◦···◦Pα      completeness. An SSA is equality-only if no predicate ap-
Let               .Weuse    to denote  n         1 .           +     −
By a simple induction, we have that for every φ ∈L,   pears in γF or γF . Obviously, any Σ is context-complete
V [Pδ(Σ),φ]=V  [Σ, Rδ(φ)].                            wrt equality-only SSAs. Indeed, many SSAs we come across
                                           ~
  The intuition behind AF and D¬F is simple. For d ∈ AF , are equality-only. An SSA is context-free if no ﬂuent appears
  ~                                                       +     −
F (d ) will become true in every possible successor state, in γF or γF . It is reasonable to assume that an agent has
             ~             ~            ~
so we add F (d ) to Σ.Ford   ∈  D¬F , F (d ) may be-  complete knowledge about situation-independent predicates.
come true in some possible successor state, so we delete Under such an assumption, any Σ is context-complete wrt
¬F (d~) from Σ. Now  consider our blocks world exam-  context-free SSAs.
ple. Let Σ={on(c1,c2),clear(c1),clear(c3),eh(c1)}.Af-   The logical completeness of PV is obtained by show-
ter action move(c1,c2,c3) is performed, we add clear(c2), ing that progression preserves context-completeness and that
¬clear(c3), on(c1,c3),and¬on(c1,c2) to Σ, and delete  under context-completeness, our progression coincides with
clear(c3), ¬clear(c2), on(c1,c2), ¬on(c1,c3), eh(c1),and classical progression.
¬eh(c )     Σ           eh(c )          eh(c )
     1 from   . We delete   1 because if   3  holds   Theorem 6  Let Σ be context-complete. Then
                eh(c )
in the current state, 1 will become false in the successor 1. Pα(Σ) is context-complete too;
                     ¬eh(c  )
state; similarly, we delete 1 .                       2. Pα(Σ) is a classical progression of Σ.
  We now deﬁne a reasoning procedure PV to solve the pro-
                                                                                         M 0 M 0 |= P (Σ)
jection task using weak progression and V as follows: Proof: (2) We prove that for every model ,    α
                                                      iff there is a model M s.t. M |=Σand M 0 is the successor
Deﬁnition 9 Let D be a local-effect action theory with a state of M wrt α. For the only-if direction, we construct M
proper Σ0.WedeﬁnePV[δ, φ] as V [Pδ(Σ0),φ].            as follows: for every ﬂuent atom F (~c ),ifV [Σ,F(~c)] = 1,
                                                          M   |= F (~c ) V [Σ,F(~c)] = 0    M  |= ¬F (~c )
Now suppose that PV[δ, φ]=1.ThenV     [Σ0, Rδ(φ)] =   then           ;if               ,then            ;
                                                               M  |= F (~c ) M 0 |= F (~c )
V [Pδ(Σ0),φ]=1. By soundness of V , Σ0 |=E Rδ(φ).By   otherwise,          iff          . The proof uses the
                                                             V [Σ,γ∗ (α)(~c )] ∈{0, 1}   ∗   +   −
the Regression Theorem, D|=E φ[do(δ, S0)]. Similarly, if fact that F               ,where  is  or  .So under context-completeness, our progression preserves extend our regression and progression operators to incorpo-
classical entailment. Now let Σ0 be context-complete. By a rate sensing. The ideas are quite simple. For example, if we
simple induction, we have: for every φ ∈L, Pδ(Σ0) |=E φ iff regress the formula clear(c1) ∧ eh(c1) wrt (senseeh(c1), 1),
Σ0 |=E Rδ(φ).Nowletφ  ∈NF. By completeness of V for   we should obtain clear(c1). If we progress a proper KB Σ
NF, V [Pδ(Σ0),φ]=1iff Pδ(Σ0)  |=E φ iff Σ0 |=E Rδ(φ)  wrt (senseeh(c1), 1), we should obtain Σ ∪{eh(c1)}.
iff D|=E φ[do(δ, S0)]. Thus when the initial KB is context- Let α = A(~c ) be a ground action, and let µ ∈{0, 1}.
complete and the query is in normal form, PV is logically We deﬁne R(α,µ)(φ) as follows: If α is an ordinary ac-
complete for projection.                              tion, then R(α,µ)(φ)=Rα(φ). Otherwise, let the SFA be
                                                      SF(A(~x),s) ≡ F (~x, s).ThenR(α,µ)(φ) is the formula ob-
5  Incorporating Sensing                              tained from φ by replacing each atom F (~t ) with ~t = ~c ∨F (~t )
                                                                           ~    ~
In many applications, it is asking too much to require com- when µ =1and with F (t ) ∧ t 6= ~c when µ =0.Wehave
plete knowledge in the initial KB about the context of the the following extended regression theorem:
context-dependent actions. In this section, we follow de Gi- Theorem 7 Let σ be a consistent history. Then
acomo and Levesque [1999] and relax this restriction in two D∪{Sensed(σ)}|=E φ[end(σ)] iff Σ0 |=E Rσ(φ).
ways: ﬁrst, we only need context-completeness relative to the
sequence of actions and the query in question; second, we can Now we turn to progression with sensing. Let Σ be proper.
                                                          α =  A(~c )                         µ ∈{0,  1}
achieve this local context-completeness dynamically by re- Let       be a ground action, and let        .
                                                                P    (Σ)               α
sorting to sensing actions, that is, actions that get knowledge We deﬁne (α,µ) as follows: If is an ordinary ac-
from outside the system. In other words, we show that when tion, then P(α,µ)(Σ) = Pα(Σ). Otherwise, let the SFA be
a history of actions and sensing results is “just-in-time” for a SF(A(~x),s) ≡ F (~x, s).ThenP(α,1)(Σ) = Σ ∪{F (~c )},
normal form query, PV is once again logically complete. and P(α,0)(Σ) = Σ ∪{¬F (~c )}. We have the following ex-
  We ﬁrst extend our account of action and change to in- tended progression theorem:
corporate sensing. Assume that in addition to ordinary ac-
                                                      Theorem 8  Let σ be a consistent history. Then
tions that change the world, we also have binary sensing ac-
tions that do not change the world but tell the agent whether 1. E∪Pσ(Σ0) is consistent. Hence Pσ(Σ0) is proper.
              φ
some condition  holds in the current situation. We use  2. For every φ ∈L, V [Pσ(Σ0),φ]=V [Σ0, Rσ(φ)].
the predicate SF(a, s) to characterize what the sensing ac-
tion tells the agent about the world. Now our basic ac- Another concept we need is dependency set.
tion theory has an extra component Dsf , which is a set of Deﬁnition 12 The dependency set of a formula φ wrt an or-
sensed ﬂuent axioms (SFAs), one for each action, of the form dinary action α, denoted by DSα(φ), is the set of ground
SF(A(~x),s) ≡ φA(~x)[s], where φA ∈L. We say that Dsf                    +       −
                                                      atoms that appear in γF (α) or γF (α) for some ﬂuent F in φ.
is atomic if each φA is an atom.
  For instance, we may add three sensing actions to the For example, let α = move(c1,c2,c3).ThenDSα(clear(x))
                                                                        DS  (eh(x)) = {eh(c )}
blocks world example: senseclear(x), senseon(x, y),and is the empty set, and α            3  .
sense  (x)          SF(sense   (x),s) ≡ eh(x, s)
     eh  .Theaxiom           eh                says   Deﬁnition 13 Let σ be a consistent history, and φ ∈L.We
            sense  (x)              eh(x, s)
that the action  eh   tells the agent if    holds.    say that σ is a just-in-time-history (JIT-history) for φ if for
  To describe a sequence of actions and sensing results, we every division σ1 · (α, µ) · σ2 of σ such that α is an ordinary
use the notion of a history, that is, a sequence of pairs (α, µ)
                                                      action, Pσ1 (Σ0) is complete wrt DSα(Rσ2 (φ)).
where α is a ground action and µ ∈{0, 1} is the sensing
result: when α is an ordinary action, we simply let µ =1. Intuitively, σ is a JIT-history for φ if whenever performing an
We use end(σ) to denote the end situation of history σ,and ordinary action α, the agent has complete knowledge about
Sensed(σ) to denote the situation calculus formula stating the context of α wrt ﬂuents related to φ. This complete
all sensing results of σ. Formally,                   knowledge may come from the sensing actions preceding α.
                                                      For example, let Σ0 = {clear(c1),on(c1,c2),clear(c3)}.
  • end(ε)=S0,whereε   is the empty history;                        (sense  (c ), 1) · (move(c ,c ,c ), 1)
    end(σ · (α, µ)) = do(α, end(σ))                   Then the history    eh  3            1  2  3    is a
                                .                     JIT history for the formula ∃x[clear(x) ∧ eh(x)]. Note that
  • Sensed(ε)=True;                                   here the agent has incomplete knowledge about both ﬂuents
    Sensed(σ · (α, 1)) = Sensed(σ) ∧ SF(α, end(σ));   clear and eh. Thus a JIT history does not require complete
    Sensed(σ · (α, 0)) = Sensed(σ) ∧¬SF(α, end(σ)).   knowledge about the component ﬂuents of the query.
  Naturally, we are only interested in consistent histories, By a proof essentially the same as the one in the previous
that is, histories with reasonable sensing results. Formally, section, we get the following result:
Deﬁnition 11 A history σ is consistent if             Theorem 9  Let σ be a JIT-history for φ.
E∪D∪{Sensed(σ)}    is a consistent theory.            Then Pσ(Σ0) |=E φ iff Σ0 |=E Rσ(φ).
  Now the projection problem including sensing is formu- Now let σ be a JIT-history for φ ∈NF.Thenwehave
lated as deciding if D∪{Sensed(σ)}|=E φ[end(σ)], where V [Pσ(Σ0),φ]=1iff Pσ(Σ0)  |=E φ iff Σ0 |=E Rσ(φ) iff
φ ∈L,andσ  is a consistent history.                   D∪{Sensed(σ)}|=E     φ[end(σ)]. Thus when a history is
  In the rest of this section, we assume that Dsf is atomic. just-in-time for a normal form query, PV is again logically
To prepare for the deﬁnition of just-in-time-history, we ﬁrst complete for projection.