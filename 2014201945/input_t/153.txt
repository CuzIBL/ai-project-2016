    Action representation and partially observable planning using epistemic logic 

            Andreas Herzig                           Jerome Lang                          Pierre Marquis 
                IRIT/UPS                               IRIT/UPS                      CRIL/Universite d'Artois 
       F-31062 Toulouse Cedex                 F-31062 Toulouse Cedex                    F-62307 Lens Cedex 
                  France                                 France                                 France 
              herzig@irit.fr                          lang@irit.fr                  marquis@cril.univ-artois.fr 


                        Abstract                               (this is a classical way of understanding POMDPs - and even 
                                                               to solve them). 
     We propose a purely logical framework for plan•             In this paper, we present a rich logical framework that in•
     ning in partially observable environments. Knowl•         stantiates the abstraction above, views a partially observable 
     edge states are expressed in a suitable fragment of       process as a fully observable process over belief states, and 
     the epistemic logic S5. We show how to lift the ef•       allows for expressing actions and policies in a compact way. 
     fects of actions (both physical actions and sensing       The framework has a fairly good level of generality (since it 
     actions) from the state level to the epistemic level.     avoids for instance to commit to a particular action language, 
     We show how progression, regression and plan gen•         see Section 3.1) and is therefore modular enough to be easily 
     eration can be achieved in our framework.                 adapted or extended. 
                                                                 The simplest and best-known way of distinguishing be•
                                                               tween truths and beliefs in logic consists in expressing the 
1 Introduction                                                 problem in an epistemic or doxastic logic. To make the ex•
                                                               position simpler, we assume that the agent has accurate be•
Planning under incomplete knowledge and partial observabil•    liefs, i.e., all she believes is true in the actual world. This 
ity is a tricky issue in AI, because of its computational (tem• means that we identify belief and knowledge (since knowl•
poral and spatial) hardness. Partially obsewable Markov        edge is usually viewed as true belief); therefore our frame•
decision processes (POMDP) are the mainstream approach to      work is based on the logic S5 and instead of belief we use the 
partially observable planning. Nevertheless, the applicabil•
                                                               term knowledge throughout the paper.] S5 is computation•
ity of the POMDP approach is limited from the practical side   ally no more complex than classical logic: S5 satisfiability is 
as soon as the set of states has a strong combinatorial struc• NP-complete [Ladner, 19771. 
ture, rendering the number of states much too high for an ex•    In Section 2 we define two notions of knowledge states: 
plicit representation of actions, preferences, and policies. On simple knowledge states (for on-line plan execution) and 
the other hand, logical approaches to planning under incom•    complex knowledge states (for off-line reasoning about the 
plete knowledge allow for much more compact encodings of       effects of a plan). In Section 3 we show how a knowledge 
planning problems than POMDPs; most of them deal with an       state evolves when an action is performed. Then we show in 
incomplete initial state and/or nondeterministic actions, but  Section 4 how to perform goal regression, and we show in 
either they do not handle partial observability, or at least they Section 5 how it can be used so as to implement a sound and 
do it in a very simple way, by assuming for instance that the  complete plan generator. Section 6 discusses related work. 
set of variables is partitioned between (directly) observable 
and unobservable variables.                                    2 Knowledge states 
   To fill the gap between POMDPs and logical approaches, 
an abstraction of the POMDP model (leaving aside probabili•    The language of propositional logic S5 is built up from 
ties and expected utility) can be considered. It should account a finite set of propositional variables VAR, the usual con•
at least for the following elements: a set S of states; a set  nectives, the logical constants and and the epistemic 
of belief states built from S ; a set of actions, where each   modality K. S5 formulas are denoted by capital Greek let•
action is associated with a transition model between states    ters etc. An S5 formula is objective (or modality-free) 
and/or belief states; some preference structure (e.g., a sim•  iff it does not contain any occurrence of K (i.e., it is a clas•
ple goal or a utility function); and a set of observations,    sical propositional formula). Objective formulas are denoted 
together with some correlation function between states and 
observations.                                                     1 Alternatively, we could have chosen to work with beliefs, using 
                                                               the doxastic logic KD45, which is very similar to S5 except that 
  While policies for a fully observable MDP map states to      beliefs may be wrong, that is, is not an axiom. The techni•
actions, the output of such an abstract POMDP is a policy      cal issues developed in this paper would have been almost identical. 
mapping belief states to actions; indeed, a POMDP can be       Now, choosing another logic than S5 or KD45 would induce a lot 
viewed as a fully observable MDP over the set of belief states of complications, including an important complexity gap. 


REASONING ABOUT ACTIONS AND CHANGE                                                                                   1067 by small Greek letters etc. and the set of all objective 
formulas from is denoted by 
   A fundamental property of S5 is that nested modalities col•
lapse, i.e., is equivalent to 
for this reason, we assume without loss of generality that the 
scope of each occurrence of modality K in formula is an 
objective formula. 
   An epistemic atom is an S5 formula of the form where 
   is objective. An epistemic formula is a formula built up 
from epistemic atoms and usual connectives: 
              is an epistemic formula, while is not. An 
epistemic formula is positive iff it does not contain any occur•
rence of K in the scope of a negation: 
is not positive, while 
                is the set of all interpretations of , also 
called states. States are denoted by s, s' etc. If is an ob•
jective formula, we let is a model of 


   A structure2 for S5 is defined as a nonempty set of states           3 Actions and progression 
M S. Rather than "structure", we call M a knowledge 
                                                                        In general, actions have both physical (or otitic) and epistemic 
state (SKS). Intuitively, it represents all the states the agent 
                                                                        effects, i.e., they are meant to change both the state of the 
considers possible. The satisfaction of an S5 formula by an 
                                                                        world and the agent's knowledge state, but without loss of 
SKS M for a state s M is defined inductively by: 
                                                                        generality we assume (as usually in AI) that any "mixed" ac•
                                                                        tion can be decomposed into two actions, the first one having 
                                                                        only ontic effects and the second one only epistemic effects. 
                                                                        For instance, the action of tossing a coin is decomposed into 
                                                                        a bJ ind-toss action followed by a see action telling the 
                                                                        agent whether the coin has landed on heads or on tails. 

                                                                        3.1 Ontic actions 
                                                                        Ontic actions are meant to have effects on the world outside 
                                                                        the agent, especially physical effects such as moving a block, 
                                                                        switching the light, moving etc. They are assumed to be de•
                                                                        scribed in a prepositional action language (allowing or not 
                                                                        for nondeterminism, for ramifications/causality). Any action 
                                                                        language can be chosen, provided that it is propositional 
                                                                        and that it expresses the effects of an action a within a for•
                                                                        mula involving atoms labelled by t and atoms labelled by 
                                                                               (the former for the state before the action is performed, 
                                                                        the latter for the state after it is performed). Among candi•
                                                                        date languages we find those of the family [Gelfond and 
                                                                        Lifschitz, 1993], "propositionalized" situation calculus [Lin, 

                                                                        2000] and causality languages [McCain and Turner, 1998].4 
  A complex knowledge state (CKS) is a positive epistemic                  The description of an action allows for comput•

formula,3 generated by epistemic atoms and the connectives              ing the successor state of a state s (or the set of successor 
                                                                        states if is nondeterministic). This set is represented by 
    This semantics is equivalent (and simpler for our purpose) to 
   2                                                                    any objective formula prog (whose models form the 
the usual semantics by means of Kripke models <W, wa/, R) where 
                                                                        set of successor states). This definition extends to sets of 
W is a set of worlds, val a valuation function and R an equivalence 
relation. Sec for instance [Fagin et al., 19951.                        initial states, or equivalently to propositional formulas, by 

   3We restrict the syntax of CKS to positive epistemic formulas 
because for almost all problems, ignorance can already be expressed 
by the fact that positive knowledge is not provable from the cur•
rent CKS. This way of generating explicit ignorance from implicit 
is a kind of Epistemic Closed World Assumption, already at work in 

[Reiter, 2001] and reminiscent of autoepistemic logic; its principle        4The common core of these languages is the use of explicit or 
can be roughly be stated as "if I cannot prove that I know then I       implicit successor state axioms. These languages coincide for deter•
don't know . However, for the purpose of this paper, we do not          ministic, ramification-free actions and differ in the way they treat 
need this completion because the set of valid plans from a CKS and      nondeterminism (using for instance exogeneous variables or Re•
the set of valid plans from its completion coincide.                    lease statements), ramifications, etc. 


1068                                                                                  REASONING ABOUT ACTIONS AND CHANGE                                                                            before performing then she still knows it after) and re•
                                                                         liability (if the agent observes after performing then 
                                                                         holds, so that she knows after observing it). These three 
                                                                         properties imply that the effects of an epistemic action asso•
                                                                         ciated with the outcome set can be represented 
   The problem with the latter definition is that the CKS has            by the following progression operator: 
to be put in EDNF first. This does not induce any loss of ex•
pressivity but the transformation may be exponentially large 
so that we may want to compute the successor CKS directly 
from a CKS expressed in any form, such as in Example 1. 
   We now give a more elegant way of computing progression 
via an extension of variable forgetting to S5 formulas. We 
recall first from [Lin and Reiter, 1994] the inductive definition 


                                                                        4 Regression 

                                                                        The problem is stated as follows: given a CKS (represent•
                                                                         ing a goal knowledge state) and an (ontic or epistemic) action 
                                                                            characterize the weakest CKS denoted by Regin 
                                                                         which performing leads to a CKS satisfying 


                                                                            7Note that actions that may fail to be informative can only be 
                                                                        expressed here by the occurrence of a tautology in their outcomes. 
                                                                         In this case, unfortunately, we get that Prog because 
                                                                                                as soon as for some 

                                                                            8This docs not induce any loss of generality, because any epis•
                                                                        temic action can be rewritten equivalently into a logarithmic se•
                                                                        quence of binary tests, together with the addition of some domain 
                                                                        constraints. 


REASONING ABOUT ACTIONS AND CHANGE                                                                                                    1069                                                               5 Plan generation 
                                                              Definition 6 (planning problems) A planning problem 
                                                              w.r.t. a propositional action language consists of an 
                                                              SKS init describing the initial knowledge state of the 
                                                              agent, a finite set of actions. {ontic)(epistemic) 
                                                              and a CKS T describing the goal. Effects of ontic actions are 
                                                              described in 
                                                                The reason why is a CKS is that it is not sufficient 
                                                              to reach the goal, it must also be the case that the goal is 
                                                              known to be reached, may be purely epistemic goal such as 
                                                                          i.e., an agent may have the ultimate goal to know 
sistent with and built up from variables of , only.           whether holds or not. 
  The latter abductive characterization of ontic actions is in•  Plans are defined inductively as follows: 
dependent of the action language chosen - and it now allows      • the empty plan is a plan; 
for characterizing the regression of complex epistemic states    • any action (ontic or epistemic) is a plan; 
by an ontic action. 


                                                                Therefore, a plan can be seen as a program without loops, 
                                                              whose branching conditions are epistemic formulas: the agent 
4.2 Regression for epistemic actions                          can decide whether she knows that a given objective formula 
                                                              is true (whereas she is not always able to decide whether a 
                                                              given objective formula is true in the actual world). 
                                                                While CKS are relevant for off-line planning, i.e., for rea•
                                                              soning about the possible effects of a plan, they are no longer 
                                                              relevant for representing knowledge during plan execution, 
                                                            } . since at each time step the agent is in exactly one knowledge 
                                                              state. 


Sketch of proof. We give it in the latter case only (the proof 
for the general case is similar). We abbreviate Reg 
by We first establish (the proof is omitted) that is 
necessarily a CKS, Now, 


At that stage, we make use of the following lemma: for any 
objective formulas A, B and C, (KB V KC) is valid 
(in S5) iff is valid or is valid. is then 


1070                                                                      REASONING ABOUT ACTIONS AND CHANGE Definition 8 (valid plans) A plan is ^alid plan for the        Action languages A number of works have extended action 
planning problem V if and only if Prog                         languages so as to handle explicit knowledge and partial ob•
                                                               servability, especially [Lobo et al., 1997; de Giacomo and 
Exemple 2 (cont'd) Initially, the agent does not know the      Rosati, 1999; Baral and Son, 2001]. Knowledge is repre•
values of and (her initial knowledge state is and sented in all cases by an explicit or implicit epistemic modal•
her goal is to reach a belief state where she knows the value  ity (plus a "minimal knowledge" semantics in [de Giacomo 
                                                               and Rosati, 1999]). The line of work most related to ours 
                                                               is of [Baral and Son, 2001]; indeed, not only they represent 
                                                               epistemic actions with an epistemic modality but they also 
                                                               allow for conditional plans with epistemic branching condi•

                                                               tions. Our work can be seen as an extension of theirs:9 (i) 
                                                               our formalism is general enough to accept any propositional 
                                                               action language (including those handling causal rules) for 
                                                               representing the effects of ontic actions); (ii) our syntax is 
                                                               less restricted, since we allow for any and-or combination 
   A valid plan can be computed by the following backward      of SKS (i.e., CKSs) while they consider SKS only; as ar•
algorithm based on goal regression which is reminiscent of     gued in Section 3, this makes the representation more com•
dynamic programming. The current goal expressed in             pact, when reasoning at planning time about the future con•
EDNF, is initialized as Then we nondeterministically pick      sequences of actions; (Hi) our progression and regression op•
an action and compute The current goal is                      erators have significant computational characterizations (e.g., 
then updated by The process                                    ontic regression has an abductive characterization); lastly, we 
is iterated until or it is not possible to im•                 have a sound and complete algorithm for plan generation. 
prove anymore. Since there is a finite number of possible 
belief states, the algorithms stop and returns valid plan,     Planning under partial observability There is a number of 
if such a plan exists. An ordered list L is constantly up•     recent approaches for logic-based plan generation under par•
dated, initialized by where '.                                 tial observability. 
                     each time a new disjunct (i.e., not sub•    [Bonet and Geffner, 1998] give a high-level language for 
sumed by any previous disjunct of is added to                  describing action effects on both the world and the agent's 
after regressing by action a, the pair is added to L.          beliefs. Their language is a decidable fragment of first-order 
   There are two slightly different possible outputs: (1) either logic. By describing ontic actions with successor state ax•
the output is just L, i.e., an ordered knowledge-based pro•    ioms, they allow for handling the frame problem and ram•
gram (or decision list): at execution time, when observations  ification problems. After a problem has been represented 
are made, the new knowledge state is computed, then we look    in their language, its description is automatically translated 
for the leftmost in L such that is true in the cur•            into a POMDP model and solved by using POMDP algo•
rent knowledge state and is performed; (2) or the output       rithms, so that there is no need to define progression and re•
is a ready-to-use conditional plan computed by "simulating"    gression directly in the logic, nor to have an explicit knowl•
possible executions from                                       edge modality: this is the main difference with our approach, 
                                                               where the compact logical representation is kept and propa•
                                                               gated throughout the process. 
                                                                 The next three approaches solve the plan generation prob•
                                                               lem directly in a high-level language but, on the other hand, 
                                                               they all make important restrictions that lead to a loss of ex•
                                                               pressivity. These restrictions imply that none of these ap•
                                                               proaches makes use of action languages, while ours can ben•
6 Related work                                                 efit from the huge amount of work in this area and accord•
Knowledge-based programs In the planning community,            ingly, can handle the frame problem as well as ramification 
the idea of using explicit knowledge preconditions for ac•     and causality in the best possible way while maintaining com•
tions and plans comes back to [Moore, 1985; Morgenstern,       putational complexity at a reasonable level. 
1987J. Developed in a different perspective (agent design),      [Bacchus and Petrick, 1998; Petrick and Bacchus, 2002], 
knowledge-based programs [Fagin et al, 1995; Brafman et        like us, use an epistemic modality. Apart from the repre•
al, 1998; Herzig et al, 2000; Reiter, 2001] are high-level pro• sentation of ontic actions (less expressive than ours due to 
tocols that describe the actions an agent should perform as a  the abovementioned point10), they restrict the syntax of epis-
function of her knowledge. Thus, in a knowledge-based pro•
                                                                   Actually, only of the first part of [Baral and Son, 2001], since 
gram, branching conditions are epistemically interpretable,       9
                                                               the second half of their paper gives a detailed study of sound and 
and plans explicitly involve deduction tasks during on-line    efficient approximations of their formalism. We plan to integrate 
execution (just like in our framework). Actually, the output of similar approximations in our framework. 
our plan generation process is a knowledge-based program. 
                                                                 ,0On the other hand, they use a fragment of first-order logic which 
Therefore, our work can be seen as an upstream task that       allows for expressing some actions (such as value tests) elegantly, 
generates a valid knowledge-based program from a compact       and they motivate their expressivity restrictions by efficiency con•
specification of action effects and goals.                     siderations, so that their approach is a good trade-off between effi-


REASONING ABOUT ACTIONS AND CHANGE                                                                                  1071 