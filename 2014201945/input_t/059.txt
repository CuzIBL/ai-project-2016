            Automatic Abstraction in Component-Based Diagnosis 
                              Driven by System Observability 

                                  Gianluca Torta, Pietro Torasso 
                      Dipartimento di Informatica, Universita di Torino (Italy) 
                                   e-mail: {torta,torasso}@di.unito.it 


                    Abstract                           their granularity are too coarse to distinguish among two 
                                                       or more behavioral modes of a component, or the distinc­
    The paper addresses the problem of automatic       tion is not important for the considered system, a system 
    abstraction of component variables in the con-     model is automatically generated where such behavioral 
    text of Model Based Diagnosis, in order to pro-    modes are merged into an abstracted behavioral mode. 
    duce models capable of deriving fewer and more     By using the abstracted model for diagnosis there's no 
    general diagnoses when the current observabil­     loss of (important) information, while the number of re­
    ity of the system is reduced. The notion of in-    turned diagnoses is reduced, and such diagnoses, by be­
    discriminability among faults of a set of compo­   ing "as abstract as possible", are more understandable 
    nents is introduced and constitutes the basis for  for a human. 
    a formal definition of admissible abstractions 
                                                         The work presented in this paper aims at extending 
    which preserve all the distinctions that are rel­
                                                       previous works by introducing automatic abstraction of 
    evant for diagnosis given the current observabil­
                                                       variables (i.e. components) in the presence of a reduced 
    ity of the system. The automatic synthesis of 
                                                       availability of the number and/or granularity of observ­
    abstract models further restricts abstractions 
                                                       ables. Abstractions based on system observability are 
    such that the behavior of abstract components 
                                                       particularly relevant in the context of on-board diagno­
    is expressed in terms of a simple and intuitive 
                                                       sis. Indeed, it is likely that when a system is operated on­
    combination of the behavior of their subcom­
                                                       board the only available measures are provided by sen­
    ponents. As a validation of our proposal, we 
                                                       sors (which can themselves fail) and taking further mea­
    present experimental results which show the re­
                                                       sures manually is out of question. Moreover, on-board 
    duction in the number of diagnoses returned by 
                                                       diagnosis is usually constrained by strict time and re­
    a diagnostic agent for a space robotic arm. 
                                                       sources requirements: using an abstracted system model 
                                                       should yield savings in both the time and the space re­
1 Introduction                                         quirements of the diagnostic process. 
                                                         Our proposal requires that abstractions do not cause 
System model abstraction has been successfully ex­
                                                       any loss of diagnostic information (e.g. as in the in­
ploited in many approaches to model-based diagnosis 
                                                       complete abstractions discussed in [Autio and Reiter, 
(MBD). The pioneer work of [Mozetic, 1991] and re­
                                                       1998]) or loss of efficiency (e.g. due to increased fan-
cent improvements proposed e.g. by [Provan, 2001] and 
                                                       in as pointed out in [Provan, 2001]); moreover, we re­
[Chittaro and Ranon, 2001] mostly use abstraction in or­
                                                       strict the mapping from abstract components to their 
der to focus the diagnostic process and thus improve its 
                                                       subcomponents to be enough simple and intuitive. In 
efficiency. However, (flexible) abstraction has another 
                                                       order to exclude all the undesired abstractions we intro­
main benefit, namely to provide fewer and more concise 
                                                       duce a precise definition of admissible abstraction, and 
abstract diagnoses when it is not possible to discriminate 
                                                       further restrict the computation of abstractions through 
among detailed diagnoses. The works by [Console and 
                                                       cutoff criteria which forbid admissible abstractions that 
Theseider Dupre, 1994] and [Friedrich, 1993] accomplish 
                                                       may lead to computational inefficiencies. 
this goal by including abstraction axioms in the Domain 
Theory and using preference criteria based on the ab­    As a running example to illustrate our definitions and 
straction level of diagnoses.                          algorithms, we will use throughout the paper the frag­
  Recently, some authors have aimed at the same goal   ment of hydraulic circuit adapted from [Chittaro and 
in a different way, namely automatic abstraction of the Ranon, 2001] depicted in figure 1 (a); table 1 reports 
system model ([Sachenbacher and Struss, 2001], [Torasso its domain theory (valve modes so and sc abbreviate 
and Torta, 2002]) l. If the available observables and/or 
                                                       components had been proposed in [Out et o/., 1994] for sim­
   1 Previously an algorithm for automatic abstraction of pler models describing only normal behavior of the system 


394                                                                                            DIAGNOSIS                                                                   It is worth noting that the fact that G is restricted to 
                                                                be a DAG does not mean that the system model is a tree 
                                                                in the sense e.g. of [Darwiche, 1998]; since we allow the 
                                                                existence of multiple directed paths between two nodes 
                                                                the associated jointree may well be cyclic. The DAG re•
 Figure 1: A fragment of an hydraulic circuit at. three         striction just forbids feedback loops in the causal graph, 
 levels of abstraction                                          which is a common assumption in approaches which deal 
                                                                with dynamic systems only if they are amenable to state-
                                                                based diagnosis ([Struss, 1997]). 
                                                                Example 2.1 Note that the System Description for the 
                                                                running sample system given in table 1 is expressed in 
                                                                a slightly different formalism than the one described in 
                                                                our definition, due to the use of equations and disequa-
                                                                tions on the right-hand side of formulas. However, it can 

                                                                be easily mapped to our formalism by modeling inx and 
                                                                outx as discrete STATES variables by using qualitative 
                                                                deviations ([Struss et o/., 1996]); thus, for example, for•
                                                                mula: 
         Table 1: Model of hydraulic components 

 stuck open and stuck closed respectively). Two possible 
 abstractions of such system are shown in figures 1 (b) 
 (where pipe PI and valve VI have been abstracted into          wheremeans that variable v has a value 
 valve AVI) and 1 (c) (where abstract valve AVI and             with sign and its deviation from the nominal value 
 pipe P2 have been abstracted into valve AV2). As for           has sign In the rest of the examples we continue 
 experimental validation of our techniques, however, we         to use the notation of [Chittaro and Ranon, 2001] simply 
 will present results collected in a larger domain, namely      because it is more compact. 
 the model of the SPIDER space robotic arm used in 
 [Portinalc and Torasso, 1999].                                 Definition 2.2 A diagnostic problem is a 3-tuple DP = 
                                                                (SD, OBS, CXT) where SD is the System Description, 
   The paper is structured as follows. In section 2 we 
                                                                OBS is an instantiation of OBS and CXT 15 an in•
 give a formal definition of what we consider an admissible 
                                                                stantiation of CXT 
 abstract component. In section 3 we describe how the 
 declarative notions introduced in 2 can be implemented         Definition 2.3 Given a diagnostic problem 
 computationally. In section 4 we present experimental          Lan instantiation 
 results collected in the SPIDER robotic arm domain.            Lof COMPS is a di-
 Finally, in section 5 we compare our work to related           a 
 papers and make some concluding remarks. 
                                                                  As noted in the introduction, there are real scenar•
 2 Abstractions Defined                                         ios where not all the observables OBS are available 
 We first report formal definitions of system model, diag•      and/or their granularity is reduced. We identify the 
 nostic problem and diagnosis.                                  available observables with a set we 
                                                                also assume that a granularity mapping II is given s.t. 
 Definition 2.1 A System Description (SD) is a 3-tuple 
                                                                U(M(vol)) maps an instantiation of to a 
             where: 
                                                                possibly more abstract instantiation M(aval). 
  V is a set of discrete variables partitioned in the fol-                                                            then 
 lowing sorts: CXT (inputs), COMPS (components),                there is no loss of granularity at all; in this particu•
 STATES (endogenous variables), OBS (observables);              lar case we denote II with 11^. For example, in figure 
 DOM(v) is the finite domain of variable                                                                        in 1 (b), 
  DT (Domain Theory) is an acyclic set of Horn clauses                                 and in 1 (c), OBSAV = {out}; 
 defined over V representing the behavior of the system         as for II we may consider a situation where 
 (under normal and abnormal conditions); we require             andhave been mapped to a coarser value 
 that, given an instantiation of COMPS and CXT, the                         The important point about and II 
 DT derives exactly one value for each other variable           is that these reductions of the observability of the sys•
  G (Causal Graph) is a DAG whose nodes are in V rep-           tem can cause the model to become less discriminant 
 resenting the causal structure of the system; whenever a 
                                                                   2This definition of diagnosis is fully abductive; how•
formula appears in                                              ever results presented in this paper apply equally well to 
 DT, nodes N\ through Nk are parents of M in the graph          consistency-based diagnosis 


 DIAGNOSIS                                                                                                             395  and thus different faults of the same component and/or        each abstract component AC a definition defAc> which 
 of different components to become indiscriminable. The        is a characterization of the behavioral modes of AC 
 following definition introduces the notion of indiscrim-      in terms of the behavioral modes of its subcomponents. 
 inability among instantiations of subsets of COM PS.          More precisely, an abstract component and its definition 
                                                               are built hierarchically as follows: 
 Definition 2.4 Let SCO MPS be a subset of COMPS, 
 OBSAV the set of available observables and II a              - if C COMPS, AC is a simple abstract compo•
 granularity mapping. We say that two instan•                  nent if its definition defAc associates to each abm 
 tiations SCOMPSl,SCOMPS2 of SCOMPS are                        DOM {AC) a formula 
 (OBS^v^n^indiscriminable iff for any instantiation            C{bmk) s.t. in the triv•
 CXT of CXT and any instantiation OTHERS of                    ial case, AC has the same domain as C and 

 COMPS\SCOMPS the following holds 3:                           DOM{C) : 
 II {tclosureobsAV (OTHERS U SCOMPS1)) =                      - if AC, AC" are abstract components with dis•
  U(tclosure0bsAV (OTHERS U SCOMPS2))                          joint sets of subcomponents SCOMPS',SCOMPS" 
                                                               then AC is an abstract component with subcompo•
   Note that the-indiscriminability relation 
                                                               nents SCOMPS' SCOMPS" if def                 associates 
 induces a partition into -indiscriminability                                                            AC
                                                               to each abm DOM {AC) a definition def
classes of the set of possible instantiations of SCOMPS.                                                              abm 
                                                               which is a logical formula built by connecting def•
Also note that, when , indiscriminabil•
                                                               initions def    'ibm  DOM {AC) with definitions 
ity coincides with the indistinguishability among behav•                     bm    1
                                                               def »,bm" DOM {AC") through 
ioral modes introduced in [Torasso and Torta, 2002].              bm
                                                                 The definition defAc of AC thus specifies a relation 
Example 2.2 In the abstraction example of figure 1             between instantiations of the subcomponents of AC and 
 (b), under context and = open indiscriminable in•             instantiations (i.e. behavioral modes) of AC itself. How•
stances of P\,V\ are grouped in the following sets:            ever we need to put some restrictions on these relations 
                                                               in order to match our intuitions about what is an "ad•
                                                               missible" abstraction. 
                                                               Definition 2.6 Given a simple abstract component the 
set C\ is further split in two distinct sets:                  definitions associated to its behavioral modes are said 
{{ok, ok)} (which derives in,                                  to be admissible. For a non-simple abstract compo•
(which derives in2 = in). If in a specific diagnostic prob•    nent AC which is the composition of abstract compo•
lem we observe, for instance, in2 — 0 given and = open,        nents AC, AC", an admissible definition for abm 
the set of diagnoses is given by                               DOM {AC) is defined as follows: 
   For now, just note how this notion of indiscriminabil•
ity is the basis for any potential abstraction. If, in•
deed, two instantiations SCOMPSl and SCOMPS2 of 
SCOMPS COM PS are indiscriminable, this means 
that whenever SCOMPSl OTHERS is a diagnosis 
for a given DP, SCOMPS2 OTHERS is another, 
indiscriminable, diagnosis for DP. 
   We now introduce a weak notion of abstraction where, 
as it is common in structural abstractions, abstract com•
                                                                 Admissible definitions capture common abstractions, 
ponents are recursively built bottom-up starting with the 
                                                               such as the case where the abstract component is OK if 
primitive components. 
                                                               all its subcomponents are OK (conjunction) and faulty 
Definition 2.5 Given a set COMPS =                             if at least one of its subcomponents is faulty (canoni•
of component variables, a components abstraction map•         cal OR). Moreover, since we address the case of compo•

ping AM of COMPS defines a set COMPSA =                       nents with multiple behavioral modes, we extend canon•
{AC\,..., of discrete variables ("abstract compo•             ical OR with exceptions (generalized OR); clearly, the 
nents,) and associates to eachone or                          maximum number of exceptions allowed in a generalized 
more (subcomponentsof s.t. each                                OR should be a configurable parameter of the abstrac•
component in COMPS is the subcomponent of exactly             tion algorithm. 
one abstract component. Moreover, AM associates, to           It is worth noting that the proposed operators, although 
                                                              chosen according to the rationale just exposed, are meant 
   3Given an instantiation COMPS of COMPS wc denote           by no means to be the only possible choice in order to 
with telosurtoBSAV (COMPS) the set of instantiations of 
variables in "" derived from                                     5This case has the purpose of including behavioral modes 
   4There are |C3| = 5 indiscriminable diagnoses; 2 of them,  abstraction as described in [Torasso and Torta, 2002] in our 
namely (ok, sc) and (br,ok), can be regarded as preferred     framework: are abstracted in the single behav•
diagnoses since they involve only one fault                   ioral mode abm 


396                                                                                                          DIAGNOSIS make our approach to abstraction applicable; if more           can produce new abstract components incrementally, by 
operators or a different set of operators would fit better    merging only two components at each iteration. After 
particular systems or families of systems, new operators      some finite number of iterations, arbitrarily complex ab•
could simply be plugged-in and replace the ones we have        stract components can be produced. 
defined.                                                       As already mentioned in section 1, however, the admissi•
Example 2.3 In the abstraction example of figure 1             bility of a component abstraction is not enough in order 
(b), the behavioral modes of the abstract component            to produce useful and meaningful abstractions. We thus 
AVI can be expressed as admissible definitions over            introduce some cutoff criteria on abstractions over two 
primitive components PI, VI:                                   components (i.e. single iterations), to be enforced by the 
                                                               computational process. 
                                                               First, we don't want to have a different behavioral mode 
                                                               of the abstract component for each combination of the 
                                                               behavioral modes of its subcomponents (limited-domain 
                                                               criterion); a proliferation of behavioral modes in the ab•
   Armed with the admissible definitions for behavioral        stract component has negative effects on both the effi•
modes we can now formally identify the abstraction map•        ciency of diagnosis and the understandability of abstract 
pings we are interested in.                                    diagnoses. We chose to impose the not too-restrictive 
Definition 2.7 Given a system model SD, a compo•               limit 
nents abstraction mapping AM of COMPS, a set                   Second, we must be able to control the fan-in of the ab•
                   and a granularity mapping , we say          stract components; indeed, if a structure-based diagnos•
that AM is admissible w.r.t. SD, OBSAV, iff for each           tic algorithm is used ([Darwiche, 1998]), introducing an 
abstract component AC with subcomponents SCOMPS:               abstract component that has a fan-in (much) larger than 
  1. admissible behavioral modes; each is that of all its subcomponents leads to computational in•
     admissible in the sense of definition 2.6                 efficiencies as pointed out in [Provan, 2001]. The limit 
                                                               imposed on the fan-in of the abstract component (fan-in 
  2. mutual exclusion: for any two distinct 
                                                               criterion) can vary from the maximum among the fan-
     defAC, and any instantiation COMPS of 
                                                               ins of its subcomponents to the sum of such fan-ins; the 
     COMPS: 
                                                               choice should be driven by the type of diagnostic algo•
  3.completeness: for any instantiation COMPS of               rithm to be used with the abstracted model as well as 
                                                               by specific characteristics of the model under considera•
  4- correctness: given the set of in-                         tion. In the experiments reported in section 4 we have 
     stantiations of SCOMPS which satisfy defk is a            obtained significant results by restricting the fan-in of 
                                                               abstract components to be at most the maximum fan-in 
                  -indiscriminability class 6 
                                                               among their subcomponents. 
Example 2.4 The abstraction example of figure 1 (b), 
is admissible w.r.t.                                           The following is an high-level description of the compu•
if the behavioral modes definitions of example 2.3 are         tational process: 
used. Such definitions are admissible, moreover there is 
a 1 : 1 mapping between them and the (OBSAV,ty-
indiscriminability classes shown in example 2.2; in par•
ticular corresponds to Cll, defabm2 to C2, 
defabrn3 to CYl and defabm to C3. It follows that the 
mutual exclusion, completeness and correctness condi•
tions are also satisfied 
   Note that given an admissible components abstrac•             Return SD 
tion mapping AM, to each instantiation COMPS                   EndFunction 
of COMPS corresponds exactly one instantiation 
                                                                 The invocation of function BM Abstractf) builds simple 
COMPSA of COMPSA consistent with COMPS 
                                                               abstract components by abstracting behavioral modes 
given the definitions of elements in COMPSA- We say 
                                                               that result indistinguishable given the current observ•
that COMPSA is the abstraction of COMPS accord•
                                                               ability expressed by ,11; then a while loop is en•
ing to AM. 
                                                               tered. 
3 Computing Abstractions                                       Function Oracle() selects the next two candidates C,, C, 
                                                               for abstraction according to the strategies outlined in the 
The hierarchical way abstract components are defined           next paragraph. Then LocalDT, i.e. the portion of DT 
in section 2 suggests that, after an initial step of be•       relevant for computing the influence of over the 
havioral modes abstraction, the computational process          values of observables in , is isolated by calling 
                                                                         . The causal graph associated to LocalDT 
   6Note that this guarantees that the behavioral modes of 
the abstract component are all distinguishable in the sense    essentially contains the paths from to nodes in 
of [Torasso and Torta, 2002]                                           ; all the parents of the nodes on such paths are 


DIAGNOSIS                                                                                                            397  also added. It is easy to see that, given the nodes in Gloc,     While evaluating a pair of candidates, OracleQ im­
 the remaining nodes in the original G do not play any         mediately enforces the fan-in criterion (this check can 

 role in the way Ci, Cj influence the variables in OBSAV-      be easily performed at this stage). As for the limited-
 Function MergeComps() (see paragraph 3.2) then tries          domain cutoff criterion and the actual feasibility of an 
 to compute the definition of the new abstract component       admissible abstraction, Oracle() just "trusts" the heuris­
 given LocalDT and in case it succeeds, SD is updated          tic HA, and defers to MergeCompsQ the actual enforce­
 accordingly by function ReviseDT (). Intuitively, the         ment. There's thus no warranty that the components 
 formulas in LocalDT are replaced with a set of formulas       selected by OracleQ will end up being merged but just 
 whose antecedents mention the new abstract component          a good chance of it to happen. 
 AC. Given the antecedent of a formula mentioning AC              In the current implementation, OracleQ terminates 
 the consequent is computed according to the definition        when it can't find any pair of components which meet 
 de fAC- For example, considering again figure 1 (b), we       the limited fan-in criterion, are connected in sequence or 
 introduce the formula                                         parallel and influence the same set of observables. 
                                                               Example 3.1 Given the system in figure 1 (a) and 
                                                                                      , OracleQ selects PI, VI as candi­
                                                               dates according to heuristic e.g., are further 
                                                               away and there's also an observable point between them, 
 The whole process terminates when function Oracle ()          namely in2. Since the inputs to the potential abstract 
 has no new suggestions for further abstractions.              component AVI would be in,cmd and the inputs to VI 
                                                               are outl,cmd there is no increase in the fan-in of the 
 3.1 The Oracle 
                                                               abstract component. Thus PI, VI are returned □ 
 Function Oracle() must choose, at each iteration, a pair 
 of candidate components for abstraction. Since a search       3.2 Abstraction of Two Components 
 over the entire space of potential abstractions would be      Once two candidate components have been se­
 prohibitive, the function is based on a greedy heuristic      lected, function MergeCompsQ tries to merge them into 
 that tries to achieve a good overall abstraction with­        a single abstract component. The following is a sketch 
 out doing any backtracking. It is worth noting that           of the function: 
 the greedy approach reduces the worst-case search per­
 formed by OracleQ to the evaluation of all the possible       Function MergeComps(LocalDT, 
                                                                 V = FindIndiscriminable(Local 
 pairs of components before returning the chosen pair; 
 this can happen at most \COMPS\ times since every 
 time an abstraction takes place the number of compo­            ForEach 
 nents is reduced by one and thus the search space size is 
 clearly polynomial in \COMPS\. 

   In our experience it turned out that the heuristic HA 
 based on the following two principles could achieve sig­
 nificant results. First, HA follows a locality principle for    Return 
 choosing . Manually written structural abstrac­               EndFunction 
 tions, indeed, tend to consist in hierarchies such that at      First, the set is par-
 each level of the hierarchy the new abstractions involve      tioned into indiscriminability classes by function 
 components that are structurally close to one another.        FindlndiscriminableQ. Such function considers in turn 
 This usually has the advantage of building abstract com­      each observable M reachable from Ci,Cj and computes 
 ponents that have a fan-in comparable to that of their        the set SN(M) of source nodes (i.e. nodes without par­

 subcomponents and have a limited and meaningful set           ents) in Gloc connected to M (excluding CiCj); instan­
 of behavioral modes. Two good examples of structural          tiations of the source nodes represent the contexts un­
 patterns that follow this principle are components con­       der which influence the value of M. For each 
 nected in sequence and in parallel 8.                         instantiation of SN(M) then FindlndiscriminableQ 
 Second, the heuristic prefers pairs of components that        computes the transitive closure of each pair of behav­
 are connected to the same observables in ; this               ioral modes in and gradually re­
 follows from the fact that if at least one of the two com­    fines the partition by putting into separate classes pairs 
 ponents is observable separately from the other, it is        that cause different values for M. It is easy to see 
 more unlikely to find indiscriminable instantiations of       that after FindlndismiminableQ has looped over each 
the two components.                                                           and each instantiation of SN(M), the re­
                                                               sulting partition V of consists 
    7It is easy to see that, by interpreting abm1, abm 2, abm 3, 
 abm4 as ok, leak, so, sc respectively, AVI behavior is exactly exactly in the indiscriminability classes of definition 2.4. 
 that of a valve                                               Indiscriminability classes of V form the basis for build­
                                                               ing abstract behavioral modes definitions: associating 
   8Note that the structural notions of vicinity, sequential­
ly and parallelism can be naturally transposed in terms of     exactly one abstract behavioral mode to each of them, 
relationships in the causal graph G                            guarantees that the mutual exclusion, completeness and 


398                                                                                                          DIAGNOSIS 