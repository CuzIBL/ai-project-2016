            Non-Binary Constraints and Optimal Dual-Graph Representations 

                                    Gianluigi Greco and Francesco Scarcello 
                                            DEIS - University of Calabria 
                                                 1-87036, Rende, Italy 
                                        {ggreco,scarcello}@si.deis.unical.it 


                        Abstract                               will deal with this latter group of techniques, usually called 
     We study the relationships among structural meth-         structural decomposition methods. There are several papers 
     ods for identifying and solving tractable classes of      proposing polynomially tractable classes of constraints based 
     Constraint Satisfaction Problems (CSPs). In partic•       on different structural properties of constraint-scopes inter•
     ular, we first answer a long-standing question about      actions (see, e.g., [Dechter, 1992; Dechter and Pearl, 1989; 
     the notion of biconnected components applied to           Gyssens et al, 1994; Gottlob et al, 2000J). Such a structure 
     an "optimal" reduct of the dual constraint-graph,         is best represented by the hypergraph 
     by showing that this notion is in fact equivalent to      ated to any CSP instance 
     the hinge decomposition method. Then, we give a           and and var(S) denotes 
     precise characterization of the relationship between      the set of variables in the scope S of the constraint C. We 
     the treewidth notion applied to the hidden-variable       often denote the set of vertices by N{H) and the set of hy-
     encoding of a CSP and the same notion applied to          peredges by 
     some optimal reduct of the dual constraint-graph.           However, many interesting techniques for solving CSPs 
     Finally, we face the open problem of computing            or for identifying tractable classes of CSPs have been de•
     such an optimal reduct. We provide an algorithm           signed for binary CSPs, i.e., CSP instances where each scope 
     that outputs an approximation of an optimal tree          contains two variables at most. Therefore, historically, the 
     decomposition, and give a qualitative explanation         first attempts to deal with general (i.e., non-binary) constraint 
     of the difference between this graph-based method         problems try to exploit the existent methods, by represent•
     and more general hypergraph-based methods.                ing any CSP instance / by some graph, rather than by the 
                                                               hypergraph H{I). A first idea is to use the primal graph of 
1 Introduction and summary of results                          H (I), whose edges connect each pair of variables occurring 
Constraint satisfaction is a central issue of Al research      together in some constraint of /. Clearly, there is an evident 
and has an impressive spectrum of applications (see, e.g.,     loss of information in using the primal graph instead of the 
[Pearson and Jeavons, 1997]). A constraint con•                hypergraph. For instance, each constraint-scope of / induces 
                                                               a clique in the primal graph, but if one looks at the graph 
sists of a constraint scope Si,, i.e., a list of variables and 
                                                               only, there is no way to understand whether such a clique 
of an associated constraint relation containing the le•
                                                               comes from a hyperedge of the hypergraph, or by some in•
gal combinations of values. A CSP consists of a set 
                                                               tricate interactions among scopes. In fact, in [Gottlob et al, 
                                 of constraints whose vari•
                                                               2000], a deep comparison among various structural decompo•
ables may overlap. A solution to a CSP is an assignment 
                                                               sition methods showed that some technique designed for hy-
of values to all variables such that all constraints are simul•
                                                               pergraphs is more powerful than all the (known) techniques 
taneously satisfied. By solving a CSP we mean determining 
                                                               working on the primal graphs. In this paper, we focus on 
whether the problem has a solution at all (i.e., checking for 
                                                               the other two important graph-based representations of non-
constraint satisfiability), and, if so, compute one solution. 
                                                               binary constraints, described in the literature, only marginally 
  Constraint satisfiability in its general form is well-known 
                                                               considered in that work: 
to be NP-hard. Much effort has been spent to identify 
tractable classes of CSPs, and deep and useful results have    Dual-graph Representation [Dechter, 1992]. Given a hy•
been achieved. The various successful approaches to ob•        pergraph H, its dual graph, denoted by dual('H) = {N,E), 
tain tractable CSP classes can be divided into two main        is the graph whose set of vertices iV is the set of hyper-
groups [Pearson and Jeavons, 1997]: the techniques that iden•  edges and whose edges connect each pair of vertices 
tify tractable classes of CSPs only on the base of the struc•  (i.e., hyperedges) having some variable in common, that is 
ture of the constraint scopes independently of 
the actual constraint relations and the techniques             Hidden-variable Representation fSeidel, 1981; Chekuri 
that identify tractable classes by exploiting particular proper• and Rajaraman, 2000]. Given a hypergraph H, we define 
ties of the constraint relations In this paper, we             its incidence graph as the bipartite graph inc(H) = (AT, E), 


CONSTRAINTS                                                                                                           227                                                                any class of CSP instances such that the treewidth of their 
                                                               incidence graph (respectively, of some reduct of their dual 
 only if a is a node of h. (E.g., Figure 2 shows a constraint  graphs) is bounded by some constant k is tractable. That is, 
 hypergraph (a) and its incidence graph (b)).                  all such instances may be evaluated in time where n 
   There is a great interest in comparing CSP solving tech•    is the size of a CSP instance and c is a constant that depends 
 niques based on these encodings of the structure [Bacchus et  crucially on the bound A: on the decomposition width. 
 al, 2002] and long standing questions about their relation•     We perform a detailed comparison of the tree decom•
 ships with hypergraph-based techniques, described below.      position method applied to the incidence graph of the hy•
   One of the major difficulties in doing precise and formal   pergraph (i.e., on the hidden-variable encoding), denoted 
 analysis of dual-graph based methods is due to an impor•      by TREEWIDTHin, and the tree decomposition method ap•
 tant feature of this encoding: some edges of the dual graph   plied to some optimal reduct of the dual graph, denoted by 
 can be safely removed from this graph, making the evalua•     TREEWIDTH0ptd. It turns out that every CSP class that is 
 tion of CSPs easier. Indeed, even if dual (H) appears very    tractable according to TREEWIDTH*" is tractable according to 
 intricate, sometimes is possible to find suitable simplifica• TREEWIDTHoptd, as well. Moreover, there are CSP classes 
 tions that make it much more useful. Such simplified graphs   that are tractable according to but are not 
 are called reducts of dual (H). For instance, if H. is acyclic, tractable according to TREEWIDTH, i.e., their largest width 
there is a polynomial time algorithm for making its dual graph is not bounded by any fixed number. However, we show that 
acyclic, and in fact a join tree of H. An example is shown in  TREEWIDTHoptd does not strongly generalize TREEWIDTH"1. 
Figure 2.c, where the acyclic graph obtained by removing the   Indeed, there are classes of CSPs whose incidence-graph 
dashed edges is a join tree of the given hypergraph. However,  treewidth is bounded by a constant K, but the largest width 
different removal choices may lead to different performances   of some optimal reduct of the dual graph is much greater. 
of evaluation algorithms. Thus, the efficiency of any tech•    Thus, even if such classes are tractable, their evaluation can 
nique based on the dual graph depends crucially on the avail-  be much more efficient by using the method. It 
ability of a good algorithm for simplifying the dual graph.    follows that either of these methods may be useful for some 
Note that finding the "best reduct" is a difficult task and is kind of CSP instances, and hence there is no definitely better 
currently not known whether it is feasible in polynomial time, choice between them. 
in general.                                                      Finally, we focus on further interesting open ques•
   On the other hand, the fact that effective dual graph rep•  tions about Define the optimal treewidth 

resentations are not unique made comparisons among dif•        twoptd{H) of the dual graph of some hypergraph H as the 
ferent methods quite difficult. For instance, Gyssens et al.   minimum treewidth over all reducts of dual{H). Kolaitis 
[1994] compared the notion of Hinge decompositions (short:     and Vardi [2000] observed that is not trivial to find a "good" 
HINGE) and the notion of Biconnected components of the         reduct of the dual graph and defined the following prob•
dual graphIt turned out that HINGE is a                        lem k-OPT, for any fixed constant k > 0: Given a hyper•
generalization and thus the hinge decomposition                graph H, decide whether the optimal treewidth of dual(H) 
technique is not worse than the biconnected components tech•   is at most K. The question is whether K-OPT is decidable 
nique. However, the precise relationship between these meth•   in polynomial time or not, that is whether there is an effi•
ods remained an open question, because biconnected compo•      cient way for computing a reduct of the dual graph that have 
nents can perform very bad unless "clever simplifications" of  the minimum treewidth. Moreover, even if it is known that 

the dual graph are chosen.                                     TREEWIDTHoptd is strongly generalized by the hypertree de•
   The first contribution of this paper is solving this question. composition method [Gottlob et al, 2000], it is not clear why 
First we formally define, for each method D, the method        there is such a big difference between these methods. Indeed, 

Doptdy that is, the method D applied to the best possible      at a first glance the kind of tree labelling in these methods 
simplification of the dual graph with respect to D. Indeed,    seems rather similar. 
in general, the notion of best simplification depends on the     We face both the above questions. Let k > 0 be 
method D used for decomposing the graph. This way, meth•       a fixed constant and H be a constraint hypergraph. We 
ods applied to dual graph encodings are well-defined and can   present a polynomial time algorithm k-TREE-APPROX that, 
be compared with other methods.                                if the optimal treewidth of dual(H) is at most k, out•
  We formally prove that BIC0MPoptd is equivalent to HINGE.    puts a tree decomposition of width at most 2k of some 
In fact, we show that any hinge decomposition corresponds to   reduct of dual (H). Thus, k-TREE-APPROX provides a 
the biconnected-components tree of some reduct of the dual     2-approximation of Note that the ques•
graph. It is worthwhile noting that, as a corollary of this    tion whether K-OPT is decidable in polynomial time remains 
result, we obtain that, for the method, an opti•               open, because k-TREE-APPROX can compute a tree decom•
mal reduction of the dual graph can be computed in polyno•     position of width at most 2k even if the optimal treewidth k' 
mial time, since any hinge decomposition can be computed       of dual (H) is greater than 
in polynomial time.                                              Moreover, our algorithm is also able to compute a new kind 
  Then, we consider the powerful decomposition method for      of structural decomposition that allows us to shed some light 
dealing with graphs: the tree decomposition method [Robert•
                                                               on the striking difference between TREEWIDTHoptd and the 
son and Seymour, 1986], which is equivalent to the tree-       more general hypergraph-based notions of query decomposi•
clustering method [Dechter and Pearl, 1989]. It is known that  tion and hypertree decomposition. 


228                                                                                                       CONSTRAINTS 2 Preliminaries 
It is well known that CSPs with acyclic constraint hyper-
graphs are polynomially solvable [Dechter, 1992]. The 
known structural properties that lead to tractable CSP classes 
are all (explicitly or implicitly) based on some generaliza•
tion of acyclicity. In particular, each method D defines some 
concept of width which can be interpreted as a measure of 
cyclicity of the underlying constraint (hyper)graph such that, 
for each fixed width k, all CSPs of width bounded by A: are 
solvable in polynomial time. This (possibly infinite) set of 
CSPs is called the tractability class of D w.r.t. k, and is de•
noted by C(D, k). Any pair of decomposition methods D\ 

and D2 can be compared according to their ability to iden•
tify tractable classes of CSPs. Formally, Gottlob et al. [2000] 
defined the following criteria: 


                                                               Thus, seems a good candidate for solving 
                                                               non-binary CSP, as it strongly generalizes all the other graph-
                                                               based methods. However, we recall that all the known al•
                                                               gorithms for computing a k-bounded tree decomposition of 
                                                               a graph are exponential in k (even if they are polynomial 
                                                               for any fixed constant k), while computing the biconnected 
                                                               components of a graph is a linear task, independently of their 
                                                               width. This latter technique can be therefore very useful if the 
                                                               size of the structure and the bound k are large and the pow-
                                                               erfun methods like TREEWIDTH are too expensive. In the next 
                                                               section, we face the problem of computing optimal reducts of 
                                                               the dual graph w.r.t. the BICOMP method. 
                                                               3 Hinges VS Biconnected Components 
                                                               In [Gyssens et al, 19941, it has been shown that the HINGE 
                                                               method generalizes BICOMP applied to any reduct of the dual 
                                                               graph. Anyhow, in the same paper, Gyssens et al. observed 
                                                               that a fine comparison between the two methods is quite dif•
                                                               ficult, as there is no obvious way to find a suitable reduct of 
                                                               the dual graph to keep the biconnected width small. Here we 
                                                               complete the picture by showing that, in fact, hinge decom•
                                                               positions correspond to such clever simplifications of the dual 
                                                               graph. 


CONSTRAINTS                                                                                                           229                                                                4 Hidden-Variables VS Dual Graph 
                                                               It is well known that both the dual graph and the hidden-
                                                               variable (incidence-graph) representations may be used for 
                                                               identifying tractable classes of non-binary CSPs according 
                                                               to the tree decomposition method (see, e.g., [Kolaitis and 
                                                               Vardi, 2000]). However, it was not clear whether either of 
                                                               these methods generalizes the other one or beats the other 
                                                               one on some classes of CSPs. In this section, we precisely 

                                                               characterize the relationship between TREEWIDTH0ptd and 
                                                               TREEWIDTHm. First, we observe that there is a CSP class 
                                                               where TREEWIDTH0ptd is definitely better than TREEWIDTHin. 


   Combining the above lemma and the results in [Gyssens 
et al., 19941, it follows that these two methods identifies the 
same classes of tractable CSPs. 


It is worthwhile noting that, given any hinge decomposition 
of a hypergraph H, the proof of Lemma 3.1 provides in fact an 
algorithm for computing an optimal reduct of dual(H) with 
respect to the BICOMP method. For instance, Figure 1 shows 
a hypergraph H' a hinge decomposition H' and the opti•
mal reduct of the dual graph obtained by applying the above 
construction, where dotted edges represent the edges of the 
dual graph removed in this simplification. Note that the bi-
connected components of this graph correspond to the hinges 
of the given decomposition. Since biconnected components 

can be computed in linear time, it follows that a BIC0MPOptd 

                     which is the best known upper bound 
for computing a hinge decomposition. 
  Observe that the above result, together with Theorem 2.2, 
gives us a new insight of the power of In•
deed, while the tree decomposition method applied to the pri•
mal graph is incomparable with HINGE [Gottlob et al. , 2000], 
its application to an optimal reduct of the dual graph strongly 
generalizes HINGE. 


230                                                                                                       CONSTRAINTS elements from A' and one the m subsets of m - 1 elements 
 from Y These subsets may be identified by means of two 
 integers, say a and b, ranging from 0 to m — 1. Similarly, the 
edge contains a subset of variables from Z identified by an 
 integer c and functionally determined by a and b as follows: 
c — (a + b)mod m. Thus, each edge e is simply denoted as a 
triple (a, b,c). 
   Note that the incidence treewidth of Subset(k) is k. For 
 instance, Figure 3 shows a tree decomposition of the inci•
dence graph of Subset(9), where in — 3. Moreover, it can 
be proved that the dual graph dual(Subset(k)) cannot be re•
duced and contains a clique of size m2 — (k/3)2. It follows 
 that its treewidth is (k/3)2. D 
   To give a complete picture of the relationship between 
TREEWIDTHptd and TREEWIDTHin, we next show that any 
decomposition of the incidence graph with width k can be 
modified to be a decomposition of a reduct of the dual graph 
 having width at most 2k Thus, TREEWIDTH"1 does not beat 
TREEWIDTH0ptd. 


 In this section, we face the problem of computing an optimal 
reduct of a dual graph in order to get the minimum possi-
ble treewidth. We recall that it is not known whether this 
problem is feasible in polynomial time or not [Kolaitis and 
 Vardi, 2000]. Moreover, we provide a qualitative explana•
tion of the remarkable difference between TREEWIDTH0ptd 


CONSTRAINTS                                                                                                          231 