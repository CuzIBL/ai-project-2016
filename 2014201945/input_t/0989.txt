                 A  Simple   Model    to  Generate    Hard    Satisﬁable   Instances
               1                             2                    2                            2
         Ke Xu        Fred´ eric´ Boussemart        Fred Hemery          Christophe  Lecoutre

              1NLSDE   Lab,  School of Computers               2CRIL-CNRS     FRE  2499,
                      Beihang  University                         Universite´ d’Artois
                    Beijing 100083,  China                           Lens, France
                   kexu@nldse.buaa.edu.cn                    hlastnamei@cril.univ-artois.fr

                    Abstract                          to keep random satisﬁable instances generated at the thresh-
                                                      old can only be used for instances of limited size. Also, it has
    In this paper, we try to further demonstrate that the been shown that generating hard (forced) satisﬁable instances
                                           [
    models of random CSP instances proposed by Xu     is related to some open problems in cryptography such as
                    ]
    and Li, 2000; 2003 are of theoretical and practical computing a one-way function [Impagliazzo et al., 1989;
    interest. Indeed, these models, called RB and RD, Cook and Mitchell, 1997].
    present several nice features. First, it is quite easy
    to generate random instances of any arity since no  In this paper, we mainly focus on random CSP (Constraint
    particular structure has to be integrated, or property Satisfaction Problem) instances. Initially, four “standard”
                                                                                    [
    enforced, in such instances. Then, the existence of models, denoted A, B, C and D Smith and Dyer, 1996;
                                                                    ]
    an asymptotic phase transition can be guaranteed  Gent et al., 2001 , have been introduced to generate random
                                                                                   [                    ]
    while applying a limited restriction on domain size binary CSP instances. However, Achlioptas et al., 1997
    and on constraint tightness. In that case, a thresh- have identiﬁed a shortcoming of all these models. Indeed,
    old point can be precisely located and all instances they prove that random instances generated using these mod-
    have the guarantee to be hard at the threshold, i.e., els suffer from (trivial) unsatisﬁability as the number of vari-
    to have an exponential tree-resolution complexity. ables increases. To overcome the deﬁciency of these standard
    Next, a formal analysis shows that it is possible models, several alternatives have been proposed.
    to generate forced satisﬁable instances whose hard- On the one hand, [Achlioptas et al., 1997] have proposed a
    ness is similar to unforced satisﬁable ones. This model E and [Molloy, 2003] a generalized model. However,
    analysis is supported by some representative results model E does not permit to tune the density of the instances
    taken from an intensive experimentation that we   and the generalized model requires an awkward exploitation
    have carried out, using complete and incomplete   of probability distributions. Also, other alternatives corre-
    search methods.                                   spond to incorporating some “structure” in the generated ran-
                                                      dom  instances. Roughly speaking, it involves ensuring that
                                                      the generated instances be arc consistent [Gent et al., 2001]
1  Introduction                                       or path consistent [Gao and Culberson, 2004]. The main
Over the past ten years, the study of phase transition phenom- drawback of all these approaches is that generating random
ena has been one of the most exciting areas in Computer Sci- instances is no more quite a natural and easy task.
ence and Artiﬁcial Intelligence. Numerous studies have es- On the other hand, [Xu and Li, 2000; 2003], [Frieze
tablished that for many NP-complete problems (e.g., SAT and and Molloy, 2003] and [Smith, 2001] have revisited stan-
CSP), the hardest random instances occur, while a control pa- dard models by controlling the way parameters change as
rameter is varied accordingly, between an under-constrained the problem size increases. The alternative model D scheme
region where all instances are almost surely satisﬁable and an of [Smith, 2001] guarantees the occurrence of a phase tran-
over-constrained region where all instances are almost surely sition when some parameters are controlled and when the
unsatisﬁable. In the transition region, there is a threshold constraint tightness is within a certain range. The two re-
where half the instances are satisﬁable. Generating hard in- vised models, called RB and RD, of [Xu and Li, 2000;
stances is important both for understanding the complexity 2003] provide the same guarantee by varying one of two con-
of the problems and for providing challenging benchmarks trol parameters around a critical value that, in addition, can be
[Cook and Mitchell, 1997].                            computed. Also, [Frieze and Molloy, 2003] identify a range
  Another remarkable progress in Artiﬁcial Intelligence has of suitable parameter settings in order to exhibit a non-trivial
been the development of incomplete algorithms for various threshold of satisﬁability. Their theoretical results apply to bi-
kinds of problems. And, since this progress, one important nary instances taken from model A and to “symmetric” binary
issue has been to produce hard satisﬁable instances in or- instances from a so-called model B which, not corresponding
der to evaluate the efﬁciency of such algorithms, as the ap- to the standard one, associates the same relation with every
proach that involves exploiting a complete algorithm in order constraint.  The models RB and RD present several nice features: To build one instance P ∈ RB(k,n,α,r,p), we select with rep-
                                                      etition m constraints, each one formed by selecting k distinct
  • it is quite easy to generate random instances of any arity       k
    as no particular structure has to be integrated, or prop- variables and p.d distinct unallowed tuples (as p denotes a
    erty enforced, in such instances.                 proportion).
  • the existence of an asymptotic phase transition can be When ﬁxed, α and r give an indication about the growth
                                                      of the domain sizes and of the number of constraints as n
    guaranteed while applying a limited restriction on do-               α
    main size and on constraint tightness. For instances in- increases since d = n and m = rn ln n, respectively. It is
    volving constraints of arity k, the domain size is required then possible, for example, to determine the critical value pcr
                       th                             of p where the hardest instances must occur. Indeed, we have
    to be greater than the k root of the number of variables    −α/r
    and the (threshold value of the) constraint tightness is pcr = 1 − e which is equivalent to the expression of pcr
                        −                                     [                  ]
    required to be at most k 1 .                      given by Smith and Dyer, 1996 .
                        k                               Another model, denoted model RD, is similar to model RB
  • when the asymptotic phase transition exists, a threshold except that p denotes a probability instead of a proportion.
    point can be precisely located, and all instances gener- For convenience, in this paper, we will exclusively refer to
    ated following models RB and RD have the guarantee model RB although all given results hold for both models.
    to be hard at the threshold, i.e., to have an exponential In [Xu and Li, 2000], it is proved that model RB, under cer-
    tree-resolution complexity.                       tain conditions, not only avoids trivial asymptotic behaviors
  • it is possible to generate forced satisﬁable instances but also guarantees exact phase transitions. More precisely,
    whose hardness is similar to unforced satisﬁable ones. with Pr denoting a probability distribution, the following the-
                                                      orems hold.
  This paper is organized as follows. After introducing mod-
                                                                         1        k−1
els RB and RD, as well as some theoretical results (Section Theorem 1 If k, α > k and p ≤ k are constants then
2), we provide a formal analysis about generating both forced
                                                                                            1  if r < r
and unforced hard satisﬁable instances (Section 3). Then, we lim P r[P ∈ RB(k, n, α, r, p) is sat ] =  cr
                                                      n→∞                                   0  if r > rcr
present the results of a large series of experiments that we                              
have conducted (Section 4), and, before concluding, we dis-          α
                                                      where rcr = −   −  .
cuss some related work (Section 5).                                ln(1 p)
                                                                         1          k−1
                                                      Theorem  2 If k, α > k and pcr ≤ k are constants then
2  Theoretical  background                                                                  1  if p < p
                                                       lim P r[P ∈ RB(k, n, α, r, p) is sat ] =        cr
A constraint network consists of a ﬁnite set of variables such n→∞                          0  if p > pcr
that each variable X has an associated domain denoting the                                
                                                                      − α
set of values allowed for X, and a a ﬁnite set of constraints where pcr = 1 − e r .
such that each constraint C has an associated relation denot-                          k−1
                                                        Remark  that the condition pcr ≤ k is equivalent to
ing the set of tuples allowed for the variables involved in C. − α
                                                      ke  r ≥  1 given in [Xu and Li, 2000]. Theorems 1 and 2
  A solution is an assignment of values to all the variables indicate that a phase transition is guaranteed provided that the
such that all the constraints are satisﬁed. A constraint network domain size is not too small and the constraint tightness or the
is said to be satisﬁable (sat, for short) if it admits at least a threshold value of the constraint tightness not too large. As
solution. The Constraint Satisfaction Problem (CSP), whose an illustration, for instances involving binary (resp. ternary)
task is to determine if a given constraint network, also called constraints, the domain size is required to be greater than the
CSP instance, is satisﬁable, is NP-complete.          square (resp. cubic) root of the number of variables and the
  In this section, we introduce some theoretical results taken constraint tightness or threshold value of the tightness is re-
    [                   ]
from Xu and Li, 2000; 2003 . First, we introduce a model, quired to be at most 50% (resp. ≈ 66%).
denoted RB, that represents an alternative to model B. Note The following theorem establishes that unsatisﬁable in-
that, unlike model B, model RB allows selecting constraints stances of model RB almost surely have the guarantee to be
with repetition. But the main difference of model RB with hard. A similar result for model A has been obtained by
respect to model B is that the domain size of each variable [Frieze and Molloy, 2003] with respect to binary instances.
grows polynomially with the number of variables.
                                                      Theorem  3 If P ∈ RB(k,n,α,r,p) and k, α, r and p are con-
Deﬁnition 1 (Model RB) A class of random CSP instances stants, then, almost surely1, P has no tree-like resolution of
of model RB is denoted RB(k,n,α,r,p) where:           length less than 2Ω(n).
  • k ≥ 2 denotes the arity of each constraint,         The proof, which is based on a strategy following some re-
  • n denotes the number of variables,                sults of [Ben-Sasson and Wigderson, 2001; Mitchell, 2002],
                                                      is omitted but can be found in [Xu and Li, 2003].
  • α > 0 determines the domain size d = nα of each vari-
                                                        To summarize, model RB guarantees exact phase transi-
    able,
                                                      tions and hard instances at the threshold. It then contradicts
  • r >  0 determines the number m = r.n. ln n of con-   1
    straints,                                            We say that a property holds almost surely when this property
                                                      holds with probability tending to 1 as the number of variables tends
  • 1 > p > 0 denotes the tightness of each constraint. to inﬁnity.the statement of [Gao and Culberson, 2004] about the require- E[N]. In other words, when using model RB, the strategy
ment of an extremely low tightness for all existing random has almost no effect on the number of solutions and does not
models in order to have non-trivial threshold behaviors and lead to a biased sampling of instances with many solutions.
guaranteed hard instances at the threshold.             In addition to the analysis above, we can also study the
                                                      inﬂuence of the strategy on the distribution of solutions with
3  Generating   hard  satisﬁable instances            respect to the forced solution. We ﬁrst deﬁne the distance
                                                      df (t , t )                   t    t
For CSP and SAT, there is a natural strategy to generate forced i j between two assignments i and j as the proportion
                                                      of variables that have been assigned a different value in ti and
satisﬁable instances, i.e., instances on which a solution is im-     f
                                                      tj. We have 0 ≤ d (ti, tj ) ≤ 1.
posed. It sufﬁces to proceed as follows: ﬁrst generate a ran-                                        δ
dom (total) assignment t and then generate a random instance For forced satisﬁable instances of model RB, with Ef [N]
with n variables and m constraints (clauses for SAT) such denoting the expected number of solutions whose distance
that any constraint violating t is rejected. t is then a forced from the forced solution (identiﬁed as ti, here) is equal to δ,
solution. This strategy, quite simple and easy to implement, we obtain by an analysis similar to that in [Xu and Li, 2000]:
                                                                n
allows generating hard forced satisﬁable instances of model    d
                                                        δ         Pr[< ti, tj >]   f
RB provided that Theorem 1 or 2 holds. Nevertheless, this Ef [N] =            with d (ti, tj ) = δ
                                                                  Pr[< ti, ti >]
statement deserves a theoretical analysis.                     j=1
                                                               X                                     ln
  Assuming that d denotes the domain size (d = 2 for SAT),              n−nδ                n−nδ    rn n
we have exactly dn possible (total) assignments, denoted by n    α  nδ    k       −      −   k
                                                       =       (n -1)     n   + (1  p) 1     n
           n      2n                                       nδ
t1, t2, · · · , td , and d possible assignment pairs where an  !      "   k                 k   !#
assignment pair < ti, tj > is an ordered pair of two assign-
                                                       = exp n ln n r ln 1  −p + p(1 − δ)k + αδ  +O(n) .
ments ti and tj. We say that < ti, tj > satisﬁes an instance if
and only if both ti and tj satisfy the instance. Then, the ex- h                               i
                                                       It can be shown, from the results in [Xu and Li, 2000] that
pected (mean) number of solutions Ef [N] for instances that δ
                                                      E  [N], for r < rcr or p < pcr, is asymptotically maximized
are forced to satisfy an assignment ti is:              f
                       n                              when δ takes the largest possible value, i.e. δ = 1.
                      d
                         Pr[< ti, tj >]                 For unforced satisﬁable instances of model RB, with
             E  [N] =                                   δ
               f         Pr[< t , t >]                E  [N] denoting the expected number of solutions whose dis-
                      j=1      i i
                      X                               tance from ti (not necessarily a solution) is equal to δ, we
                                                      have:
where Pr[< ti, tj >] denotes the probability that < ti, tj >
satisﬁes a random instance. Note that Ef [N] should be inde-         n
                                                          Eδ[N]  =      (nα − 1)nδ (1 − p)rn ln n
pendent of the choice of the forced solution ti. So we have:        nδ
                                                                      
                      Pr[< ti, tj >]                             = exp [n ln n (r ln(1 − p) + αδ) + O(n)] .
                                          2
               1≤i,j≤dn              E[N  ]
                 X
      Ef [N] =     n               =       .          It is straightforward to see that the same pattern holds for this
                 d  Pr[< ti, ti >]    E[N]            case, i.e. Eδ[N] is asymptotically maximized when δ = 1.
where E[N 2] and E[N] are, respectively, the second moment Intuitively, with model RB, both unforced satisﬁable in-
and the ﬁrst moment of the number of solutions for random stances and instances forced to satisfy an assignment t are
unforced instances.                                   such that most of their solutions distribute far from t. This in-
  For random 3-SAT, it is known that the strategy mentioned dicates that, for model RB, the strategy has little effect on the
above is unsuitable as it produces a biased sampling of in- distribution of solutions, and is not biased towards generating
stances with many solutions clustered around t [Achlioptas et instances with many solutions around the forced one.
al., 2000]. Experiments show that forced satisﬁable instances For random 3-SAT, similarly, we can show that as r (the
                                                                                                 δ
are much easier to solve than unforced satisﬁable instances. ratio of clauses to variables) approaches 4.25, Ef [N] and
In fact, it is not hard to show that, asymptotically, E[N 2] is Eδ[N] are asymptotically maximized when δ ≈ 0.24 and
exponentially greater than E2[N]. Thus, the expected num- δ = 0.5, respectively. This means, in contrast to model RB,
ber of solutions for forced satisﬁable instances is exponen- that when r is near the threshold, most solutions of forced in-
tially larger than the one for unforced satisﬁable instances. stances distribute in a place much closer to the forced solution
It then gives a good theoretical explanation of why, for ran- than solutions of unforced satisﬁable instances.
dom 3-SAT, the strategy is highly biased towards generating
instances with many solutions.
  For model RB, recall that when the exact phase transi- 4 Experimental  results
tions were established [Xu and Li, 2000], it was proved As all introduced theoretical results hold when n → ∞, the
that E[N 2]/E2[N] is asymptotically equal to 1 below the practical exploitation of these results is an issue that must be
threshold, where almost all instances are satisﬁable, i.e. addressed. In this section, we give some representative ex-
    2   2
E[N  ]/E [N] ≈  1 for r < rcr or p < pcr. Hence, the  perimental results which indicate that practice meets theory
expected number of solutions for forced satisﬁable instances even if the number n of variables is small. Note that different
below the threshold is asymptotically equal to the one for un- values of parameters α and r have been selected in order to
                                         2
forced satisﬁable instances, i.e. Ef [N] = E[N ]/E[N] ≈ illustrate the broad spectrum of applicability of model RB.           0.055                                                   10000.0
                      n ∈ [8..100] while α = 0.52, r = 1
                    r ∈ [0.8..2.5] while n=20, α ≈ 0.77 
           0.05       α ∈ [0.2..1] while n=20, r=2.5 

           0.045                                                    1000.0               n = 24

           0.04
                                                                     100.0
           0.035                                                                       n = 20

           0.03
                                                                       10.0
           0.025

                                                                                         n = 16

           0.02                                                 CPU  time (in seconds)
                                                                        1.0
           0.015

           0.01                                                         0.1
       Difference  between theoretical and experimental thresholds
           0.005                                                                 unforced sat instances
                                                                            unforced sat and unsat instances
                                                                                  forced sat instances
             0                                                          0.0
                0    0.2  0.4  0.6  0.8  1                           0.52 0.54 0.56 0.58  0.6  0.62 0.64 0.66 0.68  0.7  0.72 0.74
                        Nomalized scale                                         Tightness (p)

Figure 1: Difference between theoretical and experimental Figure 3: Mean search cost (50 instances) of solving in-
thresholds against α, r and n                         stances in RB(3,{16, 20, 24},1,1,p)

  First, it is valuable to know in practice, to what extent, have used a systematic backtracking search algorithm (MAC)
Theorems 1 and 2 give precise thresholds according to dif- and a local search algorithm (tabu search). Both algorithms
ferent values of α, r and n. The experiments that we have have been equipped with a search heuristic that learns from
run wrt Theorem 2, as depicted in Figure 1, suggest that all conﬂicts [Boussemart et al., 2004].
other parameters being ﬁxed, the greater the value of α, r
                                                        We have studied the difﬁculty of solving with MAC the bi-
or n is, the more precise Theorem 2 is. More precisely, in
                                                      nary instances of model RB generated around the theoretical
Figure 1, the difference between the threshold theoretically
                                                      threshold p ≈ 0.23 given by Theorem 2 for k = 2, α = 0.8,
located and the threshold experimentally determined is plot-   cr
                                                      r = 3 and n ∈ {20, 30, 40}. In Figure 2, it clearly appears
ted against α ∈ [0.2, 1] (d ∈ [2..20]), against r ∈ [0.8, 2.5]
                                                      that the hardest instances are located quite close to the the-
(m ∈ [50..150]) and against n ∈ [8..100]. Note that the ver-
                                                      oretical threshold and that the difﬁculty grows exponentially
tical scale refers to the difference in constraint tightness and
                                                      with n (note the use of a log scale). It corresponds to a phase
that the horizontal scale is normalized (value 0 respectively
                                                      transition (not depicted here, due to lack of space). A similar
corresponds to n = 8, α = 0.2 and r = 0.8, etc.).
                                                      behavior is observed in Figure 3 with respect to ternary in-
                                                      stances generated around the theoretical threshold pcr ≈ 0.63
            10000.0
                           unforced sat instances     for k = 3, α = 1, r = 1 and n ∈ {16, 20, 24}.
                      unforced sat and unsat instances
                            forced sat instances        As the number and the distribution of solutions are the two
              1000.0                                  most important factors determining the cost of solving sat-
                                                      isﬁable instances, we can expect, from the analysis given in
                                                      Section 3, that for model RB, the hardness of solving forced
               100.0            n = 40                satisﬁable instances should be similar to that of solving un-
                                                      forced satisﬁable ones. This is what is observed in Figure 2.
                10.0                                    To conﬁrm this, we have focused our attention to a point
                             n = 30                   just below the threshold as we have then some (asymptotic)


          CPU  time (in seconds)                      guarantee about the difﬁculty of both unforced and forced in-
                  1.0                                 stances (see Theorems 5 and 6 in [Xu and Li, 2003]) and the
                                                      possibility of generating easily unforced satisﬁable instances.
                             n = 20
                  0.1                                 Figure 4 shows the difﬁculty of solving with MAC both
                                                      forced and unforced instances of model RB at pcr − 0.01 ≈
                                                      0.40 for k = 2, α = 0.8, r = 1.5 and n ∈ [20..50].
                  0.0
               0.14 0.16 0.18  0.2  0.22 0.24 0.26 0.28  0.3  0.32 0.34 0.36 To conﬁrm the inherent difﬁculty of the (forced and un-
                         Tightness (p)                forced) instances generated at the threshold, we have also
                                                      studied the runtime distribution produced by a randomized
Figure 2: Mean search cost (50 instances) of solving in- search algorithm on distinct instances [Gomes et al., 2004].
stances in RB(2,{20, 30, 40},0.8,3,p)                 For each instance, we have performed 5000 independent runs.
                                                      Figure 5 displays the survival function, which corresponds to
  To solve the random instances generated by model RB, we the probability of a run taking more than x backtracks, of a           10000.00                                               10000.00
                      unforced sat and unsat instances                     unforced (sat and) unsat instances
                           unforced sat instances                        P        forced sat instances
                            forced sat instances                         cr   Pcr+0.2
                                                                   1000.00          P +0.3
            1000.00                                                                 cr

                                                                    100.00
              100.00                                                                      Pcr+0.4

                                                                     10.00

               10.00

          CPU  time                                                    1.00
                                                                CPU  time (in seconds)
                1.00
                                                                       0.10

                0.10
                                                                       0.01


                0.01                                                   0.00
               20   25  30   35  40   45   50                         0  50  100  150  200  250  300  350  400  450  500
                       Number of variables (n)                               Number of variables (n)

Figure 4: Mean search cost (50 instances) of solving in- Figure 6: Mean search cost (50 instances) of solving in-
stances in RB(2,[20..50],0.8,1.5,pcr − 0.01)          stances in RB(2,[20..450],0.8,1.5,p)

randomized MAC algorithm for two representative instances MAC algorithm to solve such instances against the number
generated at pcr ≈ 0.41 for k = 2, α = 0.8, r = 1.5 and of variables n. It is interesting to note that the search effort
n ∈ {40, 45}. One can observe that the runtime distribution grows exponentially with n, even if the exponent decreases
(a log-log scale is used) do not correspond to an heavy-tailed as the tightness increases. Also, although not currently sup-
one, i.e., a distribution characterized by an extremely long tail ported by any theoretical result (Theorems 5 and 6 of [Xu and
with some inﬁnite moment. It means that all runs behave ho- Li, 2003] hold only for forced instances below the threshold)
mogeneously and, therefore, it suggests that the instances are it appears here that forced and unforced instances have a sim-
inherently hard [Gomes et al., 2004].                 ilar hardness.
                                                        Finally, Figure 7 shows the results obtained with a tabu
             1                                        search with respect to the binary instances that have been pre-
                                                      viously considered with MAC (see Figure 2). The search ef-
                                                      fort is given by a median cost since when using an incomplete
                                                      method, there is absolutely no guarantee of ﬁnding a solution
            0.1                     n=45              in a given limit of time. Remark that all unsatisﬁable (un-
                            n=40                      forced) instances below the threshold have been ﬁltered out
                                                      in order to make a fair comparison. It appears that both com-
                                                      plete and incomplete methods behave similarly. In Figure 7,
           0.01
                                                      one can see that the search effort grows exponentially with n
                                                      and that forced instances are as hard as unforced ones.
       Survival  function (1 - CDF)
           0.001                                      5   Related  work
                                                      As a related work, we can mention the recent progress on gen-
                  unforced instances                                                   [
                   forced instances                   erating hard satisﬁable SAT instances. Barthel et al., 2002;
           1e-04
             10    100  1000  10000  100000  1e+06    Jia et al., 2004] have proposed to build random satisﬁable 3-
                       Number of backtracks           SAT instances on the basis of a spin-glass model from statis-
                                                      tical physics. Another approach, quite easy to implement, has
Figure 5:  Non  heavy-tailed regime for instances in  also been proposed by [Achlioptas et al., 2004]: any 3-SAT
RB(2,{40, 45},0.8,1.5,pcr ≈ 0.41)                     instance is forced to be satisﬁable by forbidding the clauses
                                                      violated by both an assignment and its complement.
  Then, we have focused on unforced unsatisﬁable instances Finally, let us mention [Achlioptas et al., 2000] which
of model RB as Theorem 3 indicates that such instances have propose to build random instances with a speciﬁc structure,
an exponential resolution complexity. We have generated un- namely, instances of the Quasigroup With Holes (QWH)
forced and forced instances with different constraint tightness problem. The hardest instances belong to a new type of phase
p above the threshold pcr ≈ 0.41 for k = 2, α = 0.8, r = 1.5 transition, deﬁned from the number of holes, and coincide
and n ∈ [20..450]. Figure 6 displays the search effort of a with the size of the backbone.