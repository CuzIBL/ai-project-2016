                          Multi-Agent Assumption-Based Planning

                                   Damien Pellier, Humbert Fiorino
                                     Laboratoire Leibniz, MAGMA
                            46, avenue Felix´ Viallet, 38000 Grenoble, France
                          Damien.Pellier@imag.fr, Humbert.Fiorino@imag.fr


                    Abstract                          goal cannot be considered “achieved” and the assumptions
                                                      must be as few as possible because they become new goals for
    The purpose of this poster is to introduce a dialec- the other agents. For instance, suppose that a door is locked:
    tical theory for plan synthesis based on a multi- if the agent seeks to get into the room behind the door and
    agent approach. This approach is a promising way  the key is not in the lock, the planning procedure fails even
    to devise systems able to take into account partial though the agent is able to fulﬁll 100% of its objectives be-
    knowledge and heterogeneous skills of agents. We  hind the door. Another possibility is to suppose for the mo-
    propose to consider the planning problem as a de- ment that the key is available and then plan how to open the
    feasible reasoning where agents exchange propos-  door etc. whereas ﬁnding the key might become a new goal
    als and counter-proposals and are able to conjec- to be delegated. To that end, we designed a planner that re-
    ture i.e., formulate plan steps based on hypothetical laxes some restrictions regarding the applicability of planning
    states of the world.                              operators.

1  Introduction                                       2   Assumption-Based Planning Model
The problem of plan synthesis achieved by autonomous
agents in order to solve complex and collaborative tasks is In order to produce conjectures, we propose an assumption-
still an open challenge. Increasingly new application areas based planning model based on a domain independent plan-
can beneﬁt from this research domain. From our point of ning mecanism, HTN. In HTN planning model, the objec-
view, multi-agent planning can be likened to the process used tive is not to achieve a set of goals but to perform some
in automatic theorem proving. In a sense, a plan can be con- sets of tasks. The agent’s input includes a set of operators
sidered to be a particular proof based on speciﬁc rules, called and also a set of methods, each of which is a prescription
actions. In this poster, we draw our inspiration from the on how to decompose some tasks into some sets of subtasks.
proof theory described by [Lakatos, 1976]. The plan synthe- The agent proceeds by decomposing non-primitive tasks re-
sis problem is viewed as a dialectical and collaborative goal cursively into smaller and smaller subtasks, until primitive
directed reasoning about actions. Each agent can reﬁne, re- tasks, that can be performed directly by planning operators,
fute or repair the ongoing team plan. If the repairing of a are reached.
previously refuted plan succeeds, it becomes more robust but Assumption-Based Planning is deﬁned as hG, E, Ai: G, is
it can still be refuted later. If the reparation of the refuted a goal description (i.e., a set of world states), E is a partial
plan fails, agents leave this part of the reasoning and explore description of the world (i.e., the agent’s beliefs) and A is a
another possibility: ﬁnally “bad” sub-plans are ruled out be- description of the actions that an agent can execute. E and G
cause no agent is able to push the investigation process fur- are described in propositional logic.
ther. As in an argumentation with opponents and proponents, A primitive operator α is a tuple hnameα, P reα, Delα,
the current plan is considered as an acceptable solution when Addαi where nameα is the name of the primitive action,
the proposal/counter-proposal cycles end and no more objec- P reα is the preconditions set needed to execute α, Delα and
tion remains.                                         Addα  deﬁne respectively the set of effects to delete and to
  The originality of this approach relies on the agent capa- add to the agent’s beliefs.
bilities to elaborate plans under partial knowledge and/or to A compound operator α is described by a method hnα,
produce plans that partially contradict its knowledge. In other P reα, Actαi where nα is the name of α, P reα is the precon-
words, in order to reach a goal, such an agent is able to pro- ditions set needed to apply α, Actα deﬁnes a list of actions to
vide a plan which could be executed if certain conditions were execute (i.e., the method body).
met. Unlike “classical” planners, the planning process does A planning problem is deﬁned by a tuple hE, O, Gi: E
not fail if some conditions are not asserted in the knowledge deﬁnes the agent’s beliefs; O = {hP reα, Delα, Addαi | α ∈
base, but rather proposes an Assumption-Based Plan or con- A} deﬁnes the description of the operators that an agent can
jecture. Obviously, this conjecture must be reasonable: the execute; G deﬁnes the goal of an agent.  A conjecture χ is deﬁned as an ordered list of couples χ = conjecture. Each new conjecture suggested by an agent

(hHα1 , α1i, . . . , hHαn , αni) where αi is an action in A; Hαi produces new goals to achieve for the other agents.
describes the assumptions that must hold before executing αi. • a contextualization layer in which agents decide to start,
  H                                            α
If αi is an empty set, no assumption is needed to apply i. when a set of goals is assigned to the system, or stop
  Given a planning problem hE, O, Gi, a conjecture χ is   interacting when they believe that a solution was found
equivalent to an ordered list of n + 1 world states χ =   or is not reachable. Finally, agents can decide to change
E , E , . . . , E E  = E ∪ H        E  =  ({E    ∪
 0  1     n  with 0          α1 and  i       i−1          the dialogue context by modifying the current conjecture
H    } − Del  ) ∪ Add   (1 ≤  i ≤ n)
  αi−1      αi        αi            . The set of so-      if it has been refuted or none of the agents can reﬁne its
lution conjectures C(E, O, G) of a planning problem can be assumptions.
recursively deﬁned:
                                                        The proof board of each agent can be viewed as a proof
  • If G is an empty set, the empty conjecture is returned. tree. Each node deﬁnes a conjecture suggested by an agent.
  • Otherwise, let α be the ﬁrst task or goal of G, and R The edges of the tree express reﬁnement relations. Each child
    be the remaining goals: i) If α is a primitive action and node deﬁnes a sub-conjecture proving an assumption of the
    there is a conjecture χ1 to reach α then C(E, O, G) = conjecture contained in the father node. In order to test if a
    {append(χ1, χ2) | χ2 ∈ C(E, O, R)}; ii) If α is a prim- solution plan i.e., a plan without assumption is contained in
    itive action and there is no conjecture χ to reach α then the proof board, agents try to extract recursively a sub-tree of
    C(E, O, G) = ∅; and ﬁnally, iii) If α is a composed the proof board from the root node. For each assumption in
    action then C(E, O, G) = C(E, O, append(Actα, R)) the root node, a sub-tree which nodes are not refuted and do
    where Actα deﬁnes the actions list to be executed in or- not contain assumptions must be extracted. This test is recur-
    der to realize α.                                 sively triggered on the alternative reﬁnements proposed for
  To reach its goal, an agent must check all assumptions each assumption. The performatives list used are shown in
made by the conjecture. It can rely on its teammates com- Tab. 3. We consider two performatives levels. The performa-
petences to make those assumptions become true. In other tives used to reﬁne, refute or repair conjectures that have an
words, assumptions made by one agent become additional informational content and the performatives used to modify
goals to be recursively satisﬁed. The assumption computa- the dialogue context. Each time a performative is received or
tion distinguishes two kinds of assumptions: i) Hypothesis sent, the proof board is modiﬁed
represents literals that do not belong to the current agent’s
beliefs. This means that expressions missing from the beliefs Levels     Performatives
are not considered as false but rather as unknown; ii) Fact Informational reﬁne, refute, repair
negation represents literals that are negations of facts in the Contextualization prop.enter, prop.leave, prop.change,
current agent’s beliefs: this fact is withdrawn and replaced by          ack.enter, ack.leave, ack.change,
its negation.                                                            rej.enter, rej.leave, rej.change

3  Dialectical Controller                                    Table 1: Performatives list ordered by level.
In a multi-agent context, the plan synthesis relies on dialecti-
cal exchanges between agents as expected in a debate. This is
convenient for dialogue where participants have no predeter- 4 Conclusion
mined role (i.e., proponent, opponent). Agents interact col- The advantage of the dialectical plan synthesis is to merge in
laboratively in the dialogue so as to construct a plan with- the collaborative plan generation, the composition and the co-
out assumption fulﬁlling the assigned goals. Agents have a ordination steps. It also includes the notion of uncertainty in
dialogue based on speech acts. At the informational layer, the agents’ reasoning and allows agents to make conjectures
speech acts can contain conjectures or propositions needed and to compose their heterogeneous competences. Moreover,
to elaborate the global shared plan. The conjectures and the we apply conjecture/refutation to structure the multi-agent
refutations suggested by the agents during the dialogue are reasoning as a collaborative investigation process. How-
stored in a structure called proof board. Each agent has its ever, former works on synchronization, coordination and con-
own proof board initialized at the dialogue beginning. The ﬂict resolution are integrated through the notions of refuta-
proof board deﬁnes the public part of the agents’ interactions tion/repairing. From our point of view, this approach is suit-
and records the agents’ reasoning. Each time an agent uses able for applications in which agents share a common goal
a speech act to reﬁne, refute or repair a conjecture, the proof and in which the splitting of the planning and the coordina-
board is updated. Through agents’ dialogue, only one speciﬁc tion steps (when agents have independent goals, they locally
part of the shared plan is considered. We call this particular generate plans and then solve their conﬂicts) becomes difﬁ-
conjecture, the current conjecture. This conjecture deﬁnes cult due to the agents strong interdependence.
the dialogue context. In order to structure the dialectical plan
synthesis, we propose to deﬁne a set of dialogue conventions References
described according to the states of the proof board. These
conventions are organized in two layers:              [Lakatos, 1976] I. Lakatos. Proofs and Refutations: The
                                                         Logic of Mathematical Discovery. Cambridge University
  • an informational layer that deﬁnes the rules to exchange
                                                         Press, Cambridge, England, 1976.
    reﬁnements, refutations and repairings about the current