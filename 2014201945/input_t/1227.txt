                              A Motion Closed World Asumption
                       Fusun Yaman     and  Dana Nau    and  V.S. Subrahmanian
                                   Department of Computer Science,
              University of Maryland Institute for Advanced Computer Studies (UMIACS),
                                and Institute for Systems Research (ISR)
                                         University of Maryland
                                       College Park, MD, 20742
                                     {fusun, nau, vs}@cs.umd.edu
                    Abstract
    Yaman et. al. [Yaman et al., 2004] introduce “go
    theories” to reason about moving objects. In this
    paper, we show that this logic often does not allow
    us to infer that an object is not present at a given
    place or region, even though common sense would
    dictate that this is a reasonable inference to make.
    We deﬁne a class of models of go-theories called
    coherent models. We use this concept to deﬁne a
    motion closed world assumption (MCWA) and de-
    velop a notion of MCWA-entailment. We show
    that checking if a go-theory has a coherent model
    is NP-complete. An in atom checks if a given ob-
    ject is present in a given region sometime in a given
    time interval. We provide sound and complete al-
    gorithms to check if a ground in literal (positive
    or negative in atom) can be inferred from a go-                 Figure 1: Planes example
    theory using the MCWA. In our experiments our
    algorithms answer such queries in less than 1 sec-
                                                      together with algorithms to check entailment of certain kinds
    ond when there are up to 1,000 go-atoms per object.
                                                      of atoms: “in” atoms that check if a given moving object is
                                                      within a given region at a given time, and “near” atoms which
1  Introduction                                       are used to check if two objects are within a given distance of
Reasoning about moving objects is becoming increasingly each other at some time.
important. Air trafﬁc controllers in both the US and Europe Though the semantics given by [Yaman et al., 2004] is ad-
are facing a dramatically increasing workload as the number equate for positive atoms, it is inadequate for negative atoms.
of ﬂights increases. Cell phone companies are increasingly For example, suppose we consider the go-theory containing
interested in knowing where cell phones on their network are just the two statements above about plane p22. In this case,
located — this is useful for hand-off policies between cell we would like to infer that plane p22 is not in Detroit at time
phone towers. Vehicle security systems such as LOJACK and 30, even though it may be theoretically possible for the plane
ONSTAR are increasingly being used to determine where ve- to make it to Detroit. The goal of this paper is to ensure that
hicles are and where they are not.                    intelligent negative inferences of this kind can be made from
  [Yaman et al., 2004] proposed the concept of a “go theory” go-theories.
which can be used to make statements of the form “Object o The contributions and organization of this paper are as fol-
is expected to leave location P1 at some time point in the in- lows: in Section 2, we recapitulate the syntax of go-theories
      −  +
terval [t1 , t1 ] and reach location P2 at some time point in the from [Yaman et al., 2004]. In section 3, we introduce the
        −  +
interval [t2 , t2 ] traveling at a velocity between v1 and v2. Go concept of a coherent model of a go-theory, and describe the
theories can be used, for example, to make statements such as concept of coherent entailment. We also introduce the Motion
“Plane p22 is expected to take off from Paris at some time be- Closed World Assumption (MCWA for short) and show how
tween 10 and 12 and land at Boston at some time between 18 the MCWA can be used to reason about negative information.
and 23 traveling at a speed between 10 to 20.” Go theories are Also in Section 3, we show that the problem of checking if
sets of such statements. Figure 1 shows the spatial layout of a go-theory has a coherent model is NP-complete. In Sec-
one such go-theory (the go theory is written in text at the top). tion 4, we provide algorithms to evaluate “in” literals w.r.t.
[Yaman et al., 2004] provides a model theory for go theories, the MCWA semantics. We are developing algorithms to pro-cess other kinds of queries such as the near literals described • ∀t ∈ [t1, t2], I(o, t) is on the line segment [P1, P2]
  [               ]                                           0                 0
in Yaman et al., 2004 — however, space reasons prevent us • ∀t, t ∈ [t1, t2], t < t implies dist(I(o, t), P1) <
                                                                   0
from presenting them. Section 5 describes a prototype imple- dist(I(o, t ), P1) where dist is the function that com-
mentation to answer positive and negative “in” queries — the putes the Euclidean distance between two points.
implementation shows that our system is highly scalable. We
                                                        • For all but ﬁnitely many times in [t , t ], v =
compare our work with related work in Section 6.                                             1  2
                                                          d(|I(o, t)|)/dt is deﬁned and v−(g) ≤ v ≤ v+(g).
2  Go-Theories: Syntax and Semantics                  The above deﬁnition intuitively says that I |= g over a time
                                                      interval T = [t1, t2] iff o starts moving at t1, stops moving
We ﬁrst provide a quick overview of the main deﬁnitions of at t2 and during this interval, the object moves away from P1
[Yaman et al., 2004]. We assume the existence of several sets towards P2 without either stopping or turning back or wan-
of constant symbols: R is the set of all real numbers, O is the dering away from the straight line connecting P1 and P2. We
set of names of objects, P = R × R is the set of all points are now ready to deﬁne the concept of satisfaction of arbitrary
in two-dimensional cartesian space. We assume the existence literals.
of three disjoint sets of variable symbols, VR, VO, and VP, Deﬁnition 2 I satisﬁes a ground literal (denoted I |= A) in
ranging over R, O and P, respectively. A real term t is any these cases:
member of R ∪VR. Object terms and point terms are deﬁned                   −  +  −  +  −   +
similarly. Ground terms are deﬁned in the usual way. We now 1. I |= go(o, P1, P2, t1 , t1 , t2 , t2 , v , v ) iff there exists
deﬁne atoms as follows.                                   an interval [t1, t2] such that I satisﬁes A over [t1, t2].
                                                        2. I |= near(o1, o2, d, t1, t2) iff dist(I(o1, t), I(o2, t)) ≤
  • If o1, o2 are object terms, and d, t1, t2 are positive real
                                                          d for all t1 ≤ t ≤ t2
    terms, then near(o1, o2, d, t1, t2) is an atom. When these
                                                        3. I |= in(o, P1, P2, t1, t2) iff there are numbers t ∈
    terms are ground, this atom says that o1, o2 are within              x   x            y    y
    distance d of each other during the time interval [t , t ]. [t1, t2], x ∈ [P1 , P2 ] and y ∈ [P1 , P2 ] such that
                                              1 2         I(o, t) = (x, y).
  • If o is an object term, P , P are point terms, and t , t
                        1  2                   1 2      4. I |= ¬A iff I does not satisfy A.
    are positive real terms, then in(o, P1, P2, t1, t2) is an
    atom. When these terms are ground, this atom says that I satisﬁes (or is a model of) a set of ground atoms MT iff I
    object o is in the rectangle whose lower left (resp. upper satisﬁes every A ∈ MT. MT is consistent iff there is an in-
    right) corner is P1 (resp. P2) at some point in the time terpretation I such that I |= MT. L is a logical consequence
    interval [t1, t2].                                of MT, denoted MT |= L, iff every model of MT is also a
                                                      model of L.
  • If o is an object term, P1, P2 are point terms, and
     − +  −  +  −   +
    t1 ,t1 ,t2 ,t2 ,v , v are positive real terms, then Example 1 The Planes go-theory of Figure 1 is consistent
                −  +  −  +  −   +                     as the interpretations I , I below both satisfy it.
    go(o, P1, P2, t1 , t1 , t2 , t2 , v , v ) is an atom called a        1  2
    go atom. When all these terms are ground, this atom • I1 : p22 leaves Paris at time 11, ﬂies to Boston at a
                                             −  +
    says that object o leaves point P1 at some time in [t1 , t1 ] constant speed of 14.85 and arrives in Boston at 19. p22
                                −  +
    and arrives at point P2 during [t2 , t2 ], traveling in a waits in Boston until 32, then it departs for Paris with a
    straight line with a minimum speed v− and maximum     constant speed of 13.2 arriving in Paris at 41. The other
    speed v+.                                             plane, p34 leaves London at time 25 and ﬂies to Delhi at
                                                          a constant speed of 18.52, arriving in Delhi at 38.
Ground atoms are deﬁned in the usual way. A go theory is a
ﬁnite set of ground go-atoms.                           • I2 : p22 leaves Paris at time 10, ﬂies to Boston at con-
Notation. If g = go(o, P , P , t−, t+, t−, t+, v−, v+) then stant speed of 14.85 and reaches Boston at 18. It waits
                     1  2 1  1  2  2                      in Boston until 19, when it takes off for Detroit where it
      obj(g) = o,   v−(g) = v−,  v+(g) = v+,              arrives at time 21. It immediately departs and reaches
                     −      −     +      +                Boston at time 29. At time 30, p22 leaves Boston and
      loc1(g) = P1, t1 (g) = t1 , t1 (g) = t1 ,
                     −      −     +      +                ﬂies to Paris at a constant speed of 11.88, arriving in
      loc2(g) = P2, t (g) = t ,  t (g) = t .
                     2      2     2      2                Paris at time 40. The other plane, p34 leaves London at
If A is an atom, then A and ¬A are called literals. Due to time 25 and ﬂies to Delhi at a constant speed of 18.52,
space constraints, we only consider literals in this paper — arriving in Delhi at 38.
[Yaman et al., 2004] provide a richer syntax including con- It is important to note that even though I satisﬁes the Planes
junction and disjunction.                                                              2
                                              +       go theory, it is an interpretation that allows plane p22 to
  An interpretation is a continuous function I : O × R → wander around in ways that were not explicitly stated in the
P. Intuitively, I(o, t) is o’s location at time t. We ﬁrst deﬁne Planes go theory. In particular, it lets the plane wander to
satisfaction of a “go” atom w.r.t. a given time interval. Detroit which was never mentioned in the go-theory. We
                                −  +  −  +   −  +     would like to exclude such “wandering” interpretations as
Deﬁnition 1 Let g = go(o, P1, P2, t1 , t1 , t2 , t2 , v , v )
be an atom and I be an interpretation. I satisﬁes g over they prevent us from making the intuitive (nonmonotonic) in-
a time interval T = [t1, t2] iff:                     ference that Plane p22 was never in Detroit.
         −   +                                          Throughout the rest of the paper we are going to use the
  • t1 ∈ [t1 , t1 ] and I(o, t1) = P1                 notation G[o] to denote the set of all atoms about an object o
         −   +
  • t2 ∈ [t2 , t2 ] and I(o, t2) = P2                 in a go theory G.Deﬁnition 3 Let G be a go theory, o be an object and G[o] = ∀t ∈ [ti2, tj1] I(o, t) = loc2(gi), i.e. destination of gi.
{g1, g2, . . . , gn}. Then for every gi, gj ∈ G[o] we deﬁne a
                                  +        −          I is a coherent model of G iff I is coherent w.r.t. o and G for
partial order  such that gi  gj iff t2 (gi) ≤ t1 (gj). A all objects o.
total order v on G[o] is compatible with G[o] iff v is a G is a coherent go-theory iff G has a coherent model.
topological sort of .
                                                      Example 2  Let G be the go theory in Figure 1. Let I1 and I2
Deﬁnition 4 Suppose G is a go theory, o is an object and v
                                                      be the two interpretations in Example 1. I1 is coherent with
is a total order compatible with G[o]. Then L(G[o], v) is set
                                                      respect to G and p22 because it satisﬁes g1 over [11, 19], g2
of linear constraints such that                       over [32, 40] and in between [19, 32] plane p22 is in Boston.
                              −  +  −  +  −   +
  • for every g = go(o, P1, P2, t1 , t1 , t2 , t2 , v , v ) ∈ I2 is not coherent with respect to G and p22 because al-
    G[o], L(G[o], v) contains:                        though it satisﬁes g1 over [10, 18], g2 over [30, 41] during
         −         +     −         +                  [18, 30], p22 does not stay in Boston which is the destination
      – t1 ≤ Sg ≤ t1 and t2 ≤ Eg ≤ t2 ,
                                                      of g1.
      – v− ×(E  −S  ) ≤ dist(P , P ) ≤ v+ ×(E −S ),
               g   g         1  2           g   g       The following lemma and deﬁnition are useful in checking
  • for every g, g0 ∈ G[o] such that g v g0, L(G[o], v) whether a non-collinear go-theory has a coherent model or
    contains: Eg ≤ Sg0 .                              not.
Intuitively Sg, Eg are variables that represent the times o Deﬁnition 8 Suppose G is a non-collinear go theory, o is an
starts and stops moving.                              object and v is a total order compatible with G[o]. Let g1 v
Deﬁnition 5 A go theory G is non-collinear iff for each ob- g2 · · · v gn be the atoms of G[o]. v is spatially continuous
ject o there are no g, g0 ∈ G[o] such that            w.r.t. G[o] iff for every i, 1 ≤ i < n, loc2(gi) = loc1(gi+1),
                                                      i.e., gi’s destination is gi+1’s origin;
  • The intersection of line segments [loc1(g), loc2(g)] and
          0       0
    [loc1(g ), loc2(g )] is a line segment [P, Q],    Lemma 1   Suppose G is a non-collinear go theory. G is co-
                                                                           o                  v
  • The direction of the movement in g and g0 is same, i.e., herent if for every object there is a total order o compati-
           +                                          ble with G[o] such that L(G[o], vo) has a solution and vo is
    ∃k ∈ R   such that ~v = k × ~u where ~v = loc2(g) −
                        0        0                    spatially continuous w.r.t. G[o].
    loc1(g) and ~u = loc2(g ) − loc1(g )
                                                        The following theorem shows that checking coherence of a
  • t−(g) ≤ t+(g0) and t−(g0) ≤ t+(g), i.e. temporally
     1       2         1        2                     go-theory is NP-complete.
    overlapping.
                                                      Theorem 2  (i) Checking coherence of a non-collinear go
The following theorem establishes necessary and sufﬁcient
                                                      theory is NP-complete. (ii) Checking coherence of a go the-
conditions for non-collinear go theories to be consistent.
                                                      ory is NP-complete.
Theorem 1 A non-collinear go theory G is consistent iff for
                                                      The proof is omitted due to lack of space. We now deﬁne the
every object o there is a total order v compatible with G[o]
                               o                      concept of coherent entailment.
such that L(G[o], vo) has a solution.
                                                      Deﬁnition 9 (MCWA  entailment) Let L be a ground literal
3  Coherence                                          and G  be a go theory. G entails L via MCWA, denoted
                                                      G|=mcwaL, iff every coherent model of G also satisﬁes L.
In this section, we deﬁne the concept of a coherent interpre-
tation. We start by deﬁning precedence of time intervals. The MCWA is inspired by Minker’s generalized closed world
                                                      assumption [Minker, 1982] where a class of models is used to
Deﬁnition 6 (Precedence) Let S = {T1, . . . Tn} be a set of check if a given literal is true. We do the same here. The fol-
time intervals, where Ti = [ti1, ti2] for each i. Ti immedi- lowing example shows that the MCWA can handle examples
ately precedes Tj in S if ti2 ≤ tj1 and for every Tk ∈ S, such as the Planes example.
either tk2 ≤ ti2 or tk1 ≥ tj1.
                                                      Example 3  Let G be the go theory in Figure 1. Let I1
Intuitively, I is a coherent interpretation of a go theory G
                                                      and I2 be the interpretations in Example 1. Suppose a =
if for each object o, there is a time interval T such that for in(p22, (75, 200), (85, 210), 23, 30). G|=mcwaa since in all
every time point t ∈ T , I(o, t) either satisﬁes a go-atom in coherent models of G, during [23, 30] plane p22 is in Boston
G or keeps the object at the destination of the last satisﬁed which is inside the rectangle of the atom a.
go-atom in G .                                          Suppose b =  in(p22, (55, 185), (80, 200), 23, 30). Then
Deﬁnition 7 (Coherent Model and Theory) Let I be a    G|=mcwa¬b  since in all coherent models of G, during [23, 30]
model of the go theory G. Let G[o] = {g1, g2, . . . , gn} be plane p22 stays in Boston which is not in the rectangle of the
the set of all go-atoms in G about object o. I is coherent atom b.
w.r.t. o and G iff                                      Also note that G 6|= a and G 6|= ¬b because according
                                                                       [                ]
 (i) There are time intervals T =  [t , t ], T   =    to the semantics in Yaman et al., 2004 plane p22 can be
                             1       11 12    2       anywhere during [23, 30].
    [t21, t22], . . ., Tn = [tn1, tn2] such that for each i, I
    satisﬁes gi over Ti and                           Theorem 3  Let L be a ground in() literal and G be a go
                                                      theory. Checking if G|=mcwaL is co-NP complete.
(ii) For every pair of time intervals Ti, Tj such that Ti im-
    mediately precedes Tj in {T1, T2, . . . , Tn} the following Since incoherent theories entail everything the following
    holds:                                            section describes algorithms for coherent go theories.                                                      1 ≤ i < n, Pi2 = P(i+1)1. Let R be a rectangular region. An
                                                      entry-exit of L for R is (i, j) iff

                                                        • `i ∩ R 6= ∅ and i > 1 =⇒ Pi1 6∈ R
                                                        • `j ∩ R 6= ∅ and j < n =⇒ Pj2 6∈ R
                                                        • ∀k ∈ [i, j) Pk2 ∈ R
                                                      The  following lemma  gives necessary conditions for
Figure 2: Spatial layout of two go atoms (related to object o)
                                                      G|=mcwaa  when the atoms in G are satisﬁed in a speciﬁc
going from P to P and P  to P and a rectangle R. In a
           1     3     3    5                         order and the object enters and exits Rec(a) multiple times.
coherent model, o stays in R between the points P2 and P4.
                                                      Lemma 2   Let G be a coherent go theory, o be an ob-
                                                      ject and v be a total order compatible with G[o] such that
4  MCWA-Entailment Algorithms                         L(G[o], v) has a solution and v is spatially continuous w.r.t
This section provides algorithms to check for MCWA-   G[o]. Let g1 v  g2 · · · v gn be the atoms of G[o]. Let
                                                                                          mcwa
entailment of both positive and negative ground literals. Due a = in(o, q1, q2, t1, t2) be an atom. If G|= a then there
to space limitations we assume all theories are non-collinear is an entry-exit (i, j) of LS(g1) . . . LS(gn) for Rec(a) such
go theories. Extending our algorithm to remove this as- that
                                                         +                             −
sumption is straightforward using the methods deﬁned in T  (G[o], v, gi, Pi) ≤ t2 and t1 ≤ T (G[o], v, gj, Qj).
[Yaman et al., 2004] that combine collinear go atoms into
                                                            [P , Q ] = LS(g ) ∩ Rec(a)
“movements”– our implementation applies to all go theories. where k k     k         ,
  We ﬁrst introduce some notations. If g is a go atom, The following algorithm uses this lemma to check for
then LS(g) is the line segment between the source and des- MCWA-entailment w.r.t. a speciﬁc total ordering.
tination of g. Let G be a go-theory, o be an object and
v be a total ordering compatible with G[o]. Let P be a  Algorithm CheckCoherentIn(G, v, a)
point on LS(g) where g ∈ G. Then T −(G[o], v, g, P ) and  Suppose a = in(o, q1, q2, t1, t2);
T +(G[o], v, g, P ) are the earliest and latest possible times Let g1 v g2 · · · v gn be atoms of G[o]
for o to be at P , subject to G,o, v and g. 1             if v is not spatially continuous w.r.t G[o] then return true
                                                          if L(G[o], v) has no solution then return true
4.1  Coherent in()                                       for each entry-exit (i, j) of LS(g1) . . . LS(gn) for Rec(a)
                                                           Let [Pi, Qi] = LS(gi) ∩ Rec(a)
In this section, we show how to check whether a ground atom
                                                           Let [Pj , Qj ] = LS(gj ) ∩ Rec(a)
of the form a = in(o, q , q , t , t ) is MCWA-entailed by a  +                          −
                    1  2 1  2                              if T (G[o], v, gi, Pi) ≤ t2 and t1 ≤ T (G[o], v, gj , Qj )
go-theory G. Let Rec(a) denote the set of points P such that then return true
 x    x    x     y    y    y
q1 ≤ P  ≤ q2 and q1 ≤ P ≤ q2 .                           end for
  We ﬁrst consider a non-collinear go theory G={g1, g2}  return false
about an object o, and an atom a = in(o, q1, q2, t1, t2). As-
sume Figure 2 depicts Rec(a) and the two line segments Theorem 4 Suppose G is a coherent go-theory and a =
                                                      in(o, q , q , t , t )               a            G
[P1, P3], [P3, P5] representing movements deﬁned by g1 and 1  2  1 2  is a ground atom. Then: is entailed by
                                                                                    v               G[o]
g2. In any coherent model of G, g1 will be satisﬁed before via MCWA iff for every total order compatible with ,
                                                                                  (G, v, a)
g2. Hence the object enters Rec(a) at P2 and leaves Rec(a) the algorithm CheckCoherentIn  returns “true”.
at P . If o always arrives at P before t and always leaves
   4                     2        2                   4.2  Coherent  ¬in()
P4 after t1 subject to the constraints in G, then we can say
that G|=mcwaa.                                        We now address the problem of checking whether a literal of
  For an arbitrary go theory, any object might enter and leave the form ¬in(o, Q1, Q2, t1, t2) is MCWA-entailed by a go-
Rec(a) multiple times. We need to identify these entrance theory G.
and exit points as well as the atoms that contain them. Consider a coherent go theory G={g1, g2} about an object
                                                      o, and an in-atom a = in(o, q1, q2, t1, t2). As before Figure 2
Deﬁnition 10 Let L be a sequence of line segments `1 = depicts Rec(a) and two line segments [P1, P3], [P3, P5] rep-
[P11P12], `2 = [P21P22],. . ., `n = [Pn1Pn2] such that for resenting the movements deﬁned by g1 and g2. Note that in
                                                      any coherent model of G, g1 is satisﬁed before g2. Hence the
  1T −(G[o], v, g, P ) is the solution to linear programming prob-
                                                      object enters Rec(a) at point P2 and leaves Rec(a) at point
lem: minimize XP,g subject to L(G[o], v) ∪ L(P, g), where P . G|=mcwa¬a iff
L(P, g) contains the following linear constraints:     4
                                                        • t1 is greater than or equal to the start time of g1 in any
  • dist(loc1(g),P ) ≤ X − S ≤ dist(loc1(g),P )
       v+(g)       P,g   g      v−(g)                     coherent model of G.
    dist(loc2(g),P )         dist(loc2(g),P )
  •    v+(g)   ≤ Eg − XP,g ≤    v−(g)                   • t2 is smaller than or equal to the end time of g2 in any
                                                          coherent model of G.
where XP,g is the variable that represents the time the object will
arrive P while satisfying g. Sg and Eg are the variables associated • Let T1 be the earliest arrival time to P2 and T2 be the
                   +
with g in L(G[o], v). T (G[o], v, g, P ) can be computed in the latest arrival time to P4 in any coherent model of G then
same way, using maximization instead of minimization.     T1 > t2 or T2 < t1.  The following lemma gives necessary conditions for    • Set loc1(g1) = P1 and loc2(g1) = P2,
   mcwa
G|=     ¬a to hold w.r.t. a speciﬁc total ordering v even • Set loc1(g2) = P2, loc2(g2) = P3
if the object enters and exits Rec(a) multiple times.     and loc1(g3) = P3, loc2(g3) = P2,
Lemma 3  Let G be a coherent go theory, o be an object and • Set loc1(g4) = P2, loc2(g4) = P4
v be a total order compatible with G[o] such that L(G[o], v) and loc1(g5) = P4, loc2(g5) = P2,
has a solution and v is spatially continuous w.r.t. G[o]. • Set temporal and speed intervals of every gi so that g1 is
Let g1 v  g2 · · · v gn be the atoms of G[o]. Let a =     always ﬁrst and the rest can be done in any order.
                                    mcwa
in(o, q1, q2, t1, t2) be a ground atom. If G|= ¬a then the
following hold                                        We have generalized the reasoning above to create random go
                                                      theories with an arbitrary bound on the number of spatially
     +
  • T  (G[o], v, g1, loc1(g1)) ≤ t1                   continuous orderings.
     −
  • T  (G[o], v, gn, loc2(gn)) ≥ t2                     We have implemented the two algorithms CheckCoher-
                                                      entIn and CheckCoherentNotIn in Matlab and conducted
  • ∀ entry-exit (i, j) of LS(g1) . . . LS(gn) for Rec(a),
     −                        +                       experiments on a mobile Athlon XP 1800 processor running
    T  (G[o], v, gi, Pi) > t2 or T (G[o], v, gj, Qj) < t1
                                                      under Windows XP and having 256MB of memory. Figure
    where [Pk, Qk] = LS(gk) ∩ Rec(a).
                                                      3 shows the computation time of four types of queries for
                               mcwa
The following algorithm checks if G|= ¬in() w.r.t. a spe- coherent go theories with at most 256 spatially continuous
ciﬁc total ordering.                                  orderings and have the following properties: all points are se-
  Algorithm CheckCoherentNotIn(G, v, ¬a)              lected randomly from the rectangle [(0, 0), (1000, 1200)] and
   Suppose a = in(o, p , p , t , t );                 the speeds allowed for any object less than 100. The four
                   1 2  1 2                           query templates we used are:
   Let g1 v g2 · · · v gn the atoms of G[o].
   if v is not spatially continuous w.r.t G[o] then return true Q1: in(o, (500, 500), (550, 600), 0.5 ∗ h, 0.75 ∗ h)
   if L(G[o], v) has no solution then return true      Q2: in(o, (100, 150), (350, 400), h − 100, h − 10)
          +
   if t1 < T (G[o], v, g1, loc1(g1)) return false      Q3: ¬Q1
          −
   if t2 > T (G[o], v, gn, loc2(gn)) return false      Q4: ¬Q2
   for each entry-exit (i, j) of LS(g1) . . . LS(gn) for Rec(a)
    Let [Pi, Qi] = LS(gi) ∩ Rec(a)                      where h is the latest end time for any atom related to o in
    Let [Pj , Qj ] = LS(gj ) ∩ Rec(a)                 the given theory. The data points in Figure 3 are an average
       −                          +
    if T (G[o], v, gi, Pi) ≤ t2 and t1 ≤ T (G[o], v, gj , Qj ) of 300 runs.
    then return false                                   Our implementation performs very well, executing most
   end for                                            queries in less than 0.3 seconds even when there are as many
   return true                                        as 1,000 go-atoms per object. In the query Q1 where Check-
                                                      CoherentIn returns true in almost every compatible order-
Theorem 5 Suppose G  is a coherent go-theory and L =  ings the algorithm runs in linear time with respect to number
¬in(o, q1, q2, t1, t2) is a ground literal. Then L is entailed of atoms per object and takes up to 0.9 seconds when there
by G via MCWA  iff for every total order v compatible with are 1,000 go-atoms per object. Consequently Q3, the com-
G[o], the algorithm CheckCoherentNotIn(G, v, a) returns plement of Q1, takes almost no time because CheckCoher-
“true”.                                               entNotIn returns false for any compatible ordering.

5  Implementation                                     6   Related work
Determining MCWA-entailment is co-NP complete because The Closed World Assumption (CWA) proposed by [Reiter,
the number of orderings spatially continuous w.r.t. G[o] can 1977] holds that anything that cannot be entailed by a theory
be exponential. However, in the real world, we expect a go- is false. Minker [Minker, 1982] extended the CWA to a Gen-
theory to allow only a small number of orderings compatible eralized CWA (GCWA) that accounts for disjunction. GCWA
with G[o]. In other words, the respective order of movements states that a formula is false if it is false in all minimal mod-
an object is going to perform is mostly known. For exam- els of the theory. The go-theories proposed by [Yaman et al.,
ple we might not know exactly when the plane p22 will land 2004] are disjunctive because the start and end times and ob-
but we usually know where it is going to ﬂy next. Thus, in ject velocities are all known to be within a given range. The
practice there is a bound on the number of compatible total notion of a coherent model of a go-theory selects certain mod-
orderings per object.                                 els (much like Minker selected minimal models in GCWA)
  For our experiments we generated random go theories with and uses these to make closed world inferences.
at most 256 spatially continuous orderings. This is not a hard- [Intille, 1994; Intille et al., ] have used the CWA to track
coded limit of our implementation. Generating random go- moving objects in football games using computer vision algo-
theories such that more than one spatially continuous order- rithms. They use CWA to adaptively select and weight image
ing exists is a little bit tricky. Here is one method to generate features used for correspondence. No motion reasoning of the
a go theory G = {g1, g2, g3, g4, g5} with two spatially con- type we perform in this paper is done.
tinuous orderings.                                      Numerous  spatio-temporal logics exist [Gabelaia et al.,
  • Randomly pick points P1, P2, P3 and P4            2003; Merz et al., 2003; Wolter and Zakharyaschev, 2000;