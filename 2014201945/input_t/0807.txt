               Automating the Discovery of Recommendation Knowledge 
                                                  
                           David McSherry and Christopher Stretch 
                        School of Computing and Information Engineering 
                    University of Ulster, Coleraine BT52 1SA, Northern Ireland 
                              {dmg.mcsherry, ct.stretch}@ulster.ac.uk   
                                                 
                                                    
                                                 
                   Abstract                      well as the relative merits of other available properties. Her 
                                                 recommendation is essentially a prediction that property X 
    In case-based reasoning (CBR) systems for product 
                                                 is likely to be the most acceptable of the available properties 
    recommendation, the retrieval of acceptable 
                                                 regardless of the customer’s unknown preferences with 
    products based on limited information is an 
                                                 respect to attributes other than location and bedrooms.    
    important and challenging problem. As we show in 
                                                   Providing CBR recommender systems with a comparable 
    this paper, basic retrieval strategies such as nearest 
                                                 ability to make reliable recommendations based on minimal 
    neighbor are potentially unreliable when applied to 
                                                 information is the goal that motivates the work presented in 
    incomplete queries. To address this issue, we 
                                                 this paper. As we show in Sections 3 and 4, basic retrieval 
    present techniques for automating the discovery of 
                                                 strategies such as nearest neighbor are potentially unreliable 
    recommendation rules that are provably reliable 
                                                 when applied to incomplete queries because of their failure 
    and non-conflicting while requiring minimal 
                                                 to take account of all features of a recommended case. To 
    information for their application in a rule-based 
                                                 address this issue, we present techniques for automating the 
    approach to the retrieval of recommended cases. 
                                                 discovery of recommendation rules that are provably 
                                                 reliable and non-conflicting while requiring minimal 
 1    Inroduction                                information for their application in a rule-based approach to 
 In CBR recommender systems, descriptions of the available the retrieval of recommended cases. 
 products are stored as cases in a case library, and retrieved   In Sections 2 and 3, we present a prototype system for 
 in response to a query representing the user’s known rule-based retrieval of recommended cases and techniques 
 requirements. In approaches related to conversational CBR for automating the discovery of identification rules that 
 (CCBR) [Aha et al., 2001], a query is incrementally elicited uniquely identify a case from its partial description. In 
 in a dialogue with the user, often with the aim of Section 4, we present techniques for the discovery of more 
 minimizing the number of questions the user is asked before reliable recommendation rules that we refer to as dominance 
 an acceptable product is retrieved [e.g., Doyle and rules. In Section 5, a theoretical upper bound for the size of 
 Cunningham, 2000; Kohlmaier et al., 2001; McSherry, the discovered rule sets in our approach is established and 
 2003].                                          confirmed by empirical results based on publicly available 
   Increasing the efficiency of recommendation dialogues is datasets. Related work is discussed in Section 6 and our 
 also a major focus of research interest in critiquing conclusions are presented in Section 7. 
approaches to navigation of complex product spaces [e.g., 
Burke, 2002; Reilly et al., 2004]. However, an aspect of 2    Recommendation Rules 
product recommendation that appears to have received little 
                                                 Given a case library representing a collection of available 
research attention is the ability of experienced salespersons 
                                                 products, our aim is to automate the discovery of 
to make reliable recommendations based on minimal 
                                                 recommendation rules to support rule-based retrieval of 
information and without engaging in a recommendation 
                                                 recommended products. The rules targeted by our discovery 
dialogue with the customer.  
                                                 algorithms are of the form if Q then C, or Q → C, where Q 
   For example, an estate agent may recommend property X 
                                                 is a simple query in the form of a list of required features 
to a customer she knows to be interested in a 3-bedroom 
                                                 and C is the case that will be retrieved in response to Q. 
property in location A without asking about other 
                                                 Table 1 shows a small case library in the property domain 
requirements the customer may have. To be confident about 
                                                 that we use to illustrate the discussion. Attributes in the 
recommending property X, the estate agent must take 
                                                 example case library are location (loc), style, bedrooms 
account of all features that may affect its acceptability as 
                                                 (beds), and reception rooms (RRs).      
 Table 1. An example case library in the property domain. identification rule cannot simply be applied to any query 
 __________________________________________________________________________  that includes the conditions on its LHS without risking 
  Case No.  Loc    Style        Beds   RRs       violation of the exact-matching criterion. For example, Rule 
 __________________________________________________________________________ 1 does not apply for a user looking for a 3-bedroom property 
  1         C      semi          5 two           in location A if it is also known that she prefers a terraced 
  2         C      terraced      4 three         property. However, if Q → C is an identification rule and 
  3         B      semi          4 three         Q* is   any query such that Q ⊆ Q*⊆ QC, then it is clear that 
  4         A      detached      4 two                 
  5         B      terraced      2 three         Q* →  C is also an identification rule.  
  6         A      detached      3 two            In   Rubric, our prototype system for rule-based retrieval 
  7         C      semi          2 three         of recom  mended cases, a recommendation rule is applied 
  8         C      semi          3 two           only to queries that it covers in the following sense.  
  9         B      detached      3 three 
 __________________________________________________________________________ Definition 2. A recommendation rule Q → C covers a given 
                                                 query Q* if Q ⊆ Q* and Q* → C is also a recommendation 
   Our discovery algorithms are based on recommendation rule. 
 criteria that give rise to recommendation rules of different  For example, an identification rule Q → C covers any 
                                                                              C
 types. To ensure that the discovered rules are non- query Q* such that Q ⊆ Q*⊆ Q. Given a set of 
 conflicting, we insist that for Q → C to be a   recommendation rules, and a query representing a user’s 
 recommendation rule, C must be strictly better than any known requirements, Rubric checks through the rules and 
 other case according to the underlying recommendation retrieves the case recommended by the first rule that covers 
 criterion. The recommendation criterion on which we focus the target query. If none of the available rules covers the 
 in Section 3 is that the recommended case is the only case target query, Rubric simply abstains from making a 
 that exactly matches the user’s known requirements. A recommendation.   
 similar or weaker criterion is used in some CBR approaches  Our rule-based approach to retrieval is related to CBR 
 [e.g., Doyle and Cunningham, 2000; McSherry, 2001]. We approaches in which a decision tree is used to guide the 
 will refer to recommendation rules based on exact matching retrieval of recommended cases [e.g., McSherry, 2001]. In 
 as identification rules.                        such a decision tree, each path to a leaf node at which a 
  Given a query Q over a subset AQ of the case attributes single case is recommended is an identification rule. 
 A, we refer to |AQ| as the length of the query, and define However, rule-based retrieval has the potential to provide 
                                                 greater coverage, as a decision tree constructed by standard 
 exact-matches(Q) = {C :  πa(C) = πa(Q) for all a ∈ AQ}, 
                                                 partitioning methods can have at most one rule for each 
where for each a ∈ AQ, πa(C) is the value of a in C and 
                                                 case, and some of the rules may not be MG.   
 πa(Q) is the value of a in Q. We say that a given query Q is 
 a sub-query of another query Q*, or that Q* is an extension 
                                                 3    Identification Rule Discovery 
 of Q, if AQ ⊆ AQ* and πa(Q) = πa(Q*) for all a ∈ AQ. We 
denote the relationship by writing Q ⊆  Q*. For any case C, Our algorithm for the discovery of MG identification rules, 
                  C
we refer to the query Q  such that πa(Q) = πa(C) for all a ∈ MGIRules, is shown in Figure 1. SubQueries is a list of all 
A as the characteristic query for C. Clearly for any case C sub-queries, in order of increasing length, of the 
                                                                  C
 and query Q, C ∈ exact-matches(Q) if and only if  Q ⊆  QC.  characteristic query Q  for a target case C. Each such sub-
                                                 query is a candidate to appear on the LHS of a discovered 
Definition 1. For any case C and query Q, we say that Q → 
                                                 identification rule. For any sub-query Q1 such that exact-
 C is an identification rule if exact-matches(Q) = {C}.  
                                                 matches(Q1) = {C}, MGIRules adds Q1 → C to the list of 
   The length of a recommendation rule is the length of the discovered rules and eliminates all sub-queries Q2 of which 
 query on its left-hand side (LHS). A recommendation rule Q Q1 is a sub-query from the remaining list of candidate sub-
 → C is maximally general (MG) if there is no proper sub- queries. 
 query Q° of Q such that Q° → C is also a recommendation  To illustrate the approach, Figure 2 shows all sub-
 rule (of the same type). To ensure that the discovered rules queries of the characteristic query (A, det, 3,  two) for Case 
 require minimal information for their application, we focus 6 in our example case library.  The first identification rule to 
 on the discovery of MG recommendation rules. As we show be discovered is Rule 1 (A, 3). Following the elimination of 
 in Section 3, the only MG identification rules for Case 6 in the underlined sub-queries in Figure 2, the only other 
 our example case library are:                   identification rule for Case 6 is Rule 2 (det, 3, two).  
  Rule 1.  if loc = A and beds = 3 then Case 6     With each case in turn as the target case, MGIRules can 
  Rule 2.  if style = det and beds = 3 and RRs = two then Case 6 be used to discover all MG identification rules in a given 
                                                 case library. The worst-case complexity of applying  
   By focusing on MG rules, we also aim to maximize 
                                                 MGIRules to all n cases in a case library with k attributes is 
 coverage of the product space provided by the discovered 2 k    k       k
 rules. However, an important point to note is that an O(k × n  × 2 ) if n ≥ 2 . If n < 2 , the worst-case complexity 
                                                 is O(k × n × 22k).   


                                                     
 __________________________________________________________________________ recommended case that may affect its acceptability. The 
                                                 extent to which this affects their reliability is likely to 
      algorithm MGIRules(C, SubQueries)          depend on the importance of the user’s unknown  
      begin                                      requirements.  
         Rules  ← φ                                For example, according to Rule 2 in Section 2, Case 6 
         while |SubQueries| > 0 do               can be recommended to a user who is known to be looking 
         begin 
                                                 for a detached property with 3 bedrooms and two reception 
             Q1  ← first(SubQueries) 
             Deletions  ← {Q }                   rooms.  But given the importance of location in the property 
                    1                            domain, Case 6 is unlikely to be the most acceptable case if 
             if exact-matches(Q1) = {C}        
             then begin  the user happens to prefer location B. In fact, Case 9 now 
                          Rules  ← Rules  ∪ {Q1 → C}     looks a better alternative in light of the user's preference for 
                      
                          for all Q2 ∈ rest(SubQueries) do  location B. In Section 4, we present techniques for the 
                          begin                  discovery of recommendation rules that do take account of 

                                if Q1 ⊆ Q2       all features of a recommended case, including those with 
                                then Deletions  ←  Deletions  ∪ {Q2} respect to which the user's preferences are unknown.  
                          end 
                      end                        4    Dominance Rules 
             SubQueries  ← SubQueries - Deletions   
         end                                     As nearest-neighbor (NN) retrieval is a common approach 
         return Rules                            to product recommendation in CBR, it is natural to consider 
      end                                        NN rules as an alternative to identification rules. Given a 
 ________________________________________________ query Q over a subset AQ of the case attributes A, the 
                                                 similarity of any case C to Q is typically defined to be:  
       Figure 1.  Algorithm for the discovery of all MG  
           identification rules for a target case.         Sim(C, Q) = ∑ wa sima (C,Q)   
                                                                     a∈AQ
   It is worth noting that an identification rule Q → C is 
                                                 where for each a ∈ A, wa is an importance weight assigned 
 excluded by MGIRules only if it has already discovered an 
                                                 to  a, and sima(C, Q) is a local measure of the similarity of 
 MG identification rule Q° → C such that Q° ⊆  Q. As any 
                                                 πa(C), the value of a in C, to πa(Q), the value of a in Q. 
query covered by Q → C is also covered by Q° → C, the When discussing actual similarity scores, we will divide 
 exclusion of Q → C causes no loss of coverage in Rubric. Sim(C, Q) by the sum of all the importance weights to give 
                                                 a normalized similarity score. As usual in practice, we 

                 A, det, 3, two                  assume that for all a ∈ A, 0 ≤ sima(x, y) ≤ 1 and sima(x, y) = 
                                                 1 if and only if x = y. We also assume that for all a ∈ A, the 
                                                 distance measure 1 - sima satisfies the triangle inequality. 
                                                 For any query Q, we define most-similar(Q) = {C : Sim(C, 
      A, det, 3    A, det, two   A, 3, two   det, 3, two Q) ≥ Sim(C°, Q) for all cases C°}. 
                                                 Definition 3. For any case C and query Q, we say that Q → 
                                                 C is an NN rule if most-similar(Q) = {C}.  
  A, det      A, 3           A, two      det, 3       det, two         3, two  As in the case of an identification rule, an NN rule 
                                                 cannot simply be applied to any query that includes the 
                                                 conditions on its LHS. If Q → C is an NN rule and Q* is an 
            A               det            3              two extension of Q then there is no guarantee that most-
                                                 similar(Q*) = {C}. It is worth noting, though, that Q* → C 
                                                 is an NN rule if Q* - Q ⊆ QC. Clearly, any identification 
                                                 rule is also an NN rule. 
                     nil                           As we shall see, however, NN rules offer no obvious 
                                                 
       Figure 2. Identification rule discovery for Case 6  improvement over identification rules in terms of their 
              in the example case library.       reliability when applied to incomplete queries. Again we use 
                                                 the example case library in Table 1 to illustrate the 
   Identification rules have the important advantage that discussion. The importance weights we assign to loc, style, 
 recommendations can be justified on the basis that the beds, and RRs are 4, 3, 2, and 1. We define the similarity of 
 recommended case exactly matches the known requirements two values x and y of a numeric attribute a to be 
 of the user. However, a limitation they share with decision x − y
                                                 1 −            where, for example, max(a) is the 
 trees is their failure to take account of all features of a max(a) − min(a)


                                                     

 maximum value of a in the case library. Our similarity C1 dominates another case C2 with respect to a query Q if 
 measure for style is equivalent to applying our similarity and only if: 
 measure for numeric attributes to the corresponding number 
                                                  Sim(C1,Q) − Sim(C2,Q) >  wa (1− sima (C1,C2))   
of adjoining properties (det = 0, semi = 1, ter = 2). Finally,           ∑
                                                                       a ∈A− AQ
our similarity measures for location and reception rooms 
                                                   We focus on the discovery of MG dominance rules Q → 
assign a similarity score of 1 if the two values are the same  C       C 
and 0 if they are not the same.                  C such that Q ⊆ Q , where Q is the characteristic query for 
   Returning to our example in Section 3 of a user looking C. As well as reducing the complexity of the discovery 
for a detached property with 3 bedrooms and two reception process, this ensures that recommendations based on the 
rooms, we can now use Rule 2 as an NN rule to retrieve discovered rules can be justified on the grounds that the 
Case 6 as the recommended case. It can easily be checked recommended case exactly matches some of the user’s 
that the cases that are most similar to the user’s known known requirements, and that there is no other case that 
requirements are Case 6 (0.60) and Case 4 (0.53). But if the exactly matches those requirements. It can be seen from the 
user happens to prefer location B, the most similar case in following theorem that our exclusion of dominance rules 
light of this unknown preference would be Case 9 (0.90). In that do not have this property cannot result in failure to 
fact, Case 6 is likely to be the most acceptable case only if discover dominance rules of the shortest possible length for 
the user happens to prefer location A, as a preference for a given target case.    
location C would see Case 8 (0.85) emerging as the most Theorem 1.  For any dominance rule Q → C, there exists a 
similar case.                                    dominance rule Q' → C of equal length such that Q' ⊆ QC. 
   As this example illustrates, the reliability of NN rules 
                                                 Proof. Let Q → C  be a dominance rule and let Q' be the 
(and NN retrieval) is open to question when applied to         1
                                                 query such that π (Q') = π (C ) for all a ∈ A . To establish 
incomplete queries. However, one example of a reliable NN     a      a 1           Q
                                                 that Q' → C  is also a dominance rule, it suffices to show 
rule is:                                                  1
                                                 that C dominates any other case C  with respect to Q'. For 
        Rule 1.  if loc = A and beds = 3 then Case 6 1                     2
                                                 any a ∈ A , we know from the triangle inequality that: 1 - 
   It can be seen that the similarity of Case 6 to any query Q
                                                 sima(C2, Q) ≤ 1 - sima(C2, Q') + 1 - sima(Q', Q)  = 2 -  
that includes the conditions on the LHS cannot be equaled sim (C , Q') - sim (C , Q). So sim (C , Q') -  sim (C , Q') = 1 
by any other case regardless of the user’s preferences with a 2 a 1       a 1        a 2
                                                 -  sim (C , Q') ≥ sim (C , Q) - sim (C , Q). As C  dominates 
respect to style or reception rooms. For example, Case 4 a 2    a 1       a  2       1
                                                 C  with respect to Q and A  = A , it can now be seen that: 
reaches its maximum similarity of 0.93 if the user happens 2         Q    Q'
                                                 Sim(C , Q') - Sim(C , Q') ≥ Sim(C , Q) - Sim(C , Q) 
to prefer a detached property with two reception rooms, but 1     2           1           2
these additional preferences also increase the similarity of > ∑ wa (1− sima (C1,C2 )). It follows as required that C1 
Case 6 from 0.60 to 1.00.                         a ∈A−AQ'
   Rules 1 and 2 are positive and negative examples of the 
                                                 dominates C2 with respect to Q'.    
type of recommendation rule we refer to as dominance 
                                                   To convert MGIRules to a new algorithm called 
 rules. 
                                                 MGDRules for the discovery of all MG dominance rules Q 
 Definition 4. For any case C and query Q, we say that Q → → C for a target case C such that Q ⊆  QC, it is necessary 
 C is a dominance rule if most-similar(Q*) = {C} for all only to replace the condition underlined in Figure 1 by the 
 extensions Q* of Q.                             condition: 
   As well as being more reliable, dominance rules provide C dominates all other cases with respect to Q1 
 more coverage than identification or NN rules. It can easily  As in the case of MGIRules, the worst-case complexity 
 be seen that if Q → C is a dominance rule, then Q* → C is of applying MGDRules to all n cases in a product case 
 also a dominance rule for any query Q such that Q ⊆  Q*. library with k attributes is O(k × n2 × 2k) or O(k × n × 22k) 
 That is, a dominance rule covers any query that includes the depending on whether n ≥ 2k. 
 conditions on its LHS. An important role in our approach to 
 the discovery of dominance rules is played by the concept of 5    Discovered Rules 
 case dominance proposed by McSherry [2003] as a basis for As might be expected, our algorithms discovered fewer 
 recognizing when recommendation dialogues can be dominance rules (12) than identification rules (24) in the 
 terminated without loss of solution quality.    example case library. However, the 12 dominance rules 

 Definition 5.  A given case C1 dominates another case C2 cover 34% of all possible queries in the example product 
 with respect to a query Q if Sim(C1, Q*) > Sim(C2, Q*) for space compared to 28% for the 24 identification rules, and 
 all extensions Q* of Q.                         17% for a set of 9 decision-tree rules of the shortest possible 
   It can be seen that Q → C is a dominance rule if and only length for each case. In this section, we examine the 
 if C dominates all other cases with respect to Q. McSherry behavior of our algorithms when applied to case libraries of 
 [2003] uses the triangle inequality to show that a given case more realistic size. As the coverage gains provided by 
                                                 dominance rules are measurable only in finite product 


                                                     
 spaces, our analysis focuses on the number and length of the size for 8 attributes (70). On the whole, the results for 
 discovered rules.                               AutoMPG and Travel are remarkably similar, with fewer 
   It can be seen that for any case C, QC → C is both an dominance rules than identification rules discovered in both 
identification rule and a dominance rule provided no other case libraries. The average rule-set size of 4 for dominance 
case has the same value as C for every attribute. Two cases rules in Travel is based on a total of 4,127 discovered rules.  
with identical descriptions in a product case library are said 
to be inseparable [McSherry, 2002]. At least one rule of             Min Avg  Max
each type must therefore be discovered for a target case 
provided there is no case from which it is inseparable.  20
                                                     e

   We now establish an upper bound for the number of z
                                                     i 15
                                                      S


rules that can be discovered by MGIRules or MGDRules for t
                                                     e 10
a given target case.                                 S
                                                     -
                                                     e
Theorem 2.  For any case C, the number of MG         l 5
                                     C               Ru
recommendation rules Q → C such that Q ⊆  Q  can never 0
           k
be more than C[k / 2] , where k is the number of attributes in   AutoMPG       Travel        AutoMPG       Travel       
 the case library and [k/2] is the integer part of k/2.    I Rules  I Rules D Rules  D Rules

 Proof.  First we note that if Q1 → C and Q2 → C are distinct Figure 3. Numbers of discovered identification (I)  
                                        C                 and dominance (D) rules for each case. 
 MG recommendation rules such that Q1, Q2 ⊆ Q , then  
 A  and A are incomparable subsets of A. For example, if  
  Q1    Q2
                                                   Table 3 shows the lengths of the identification and 
 A  ⊆ A  then contrary to our assumption Q  → C cannot 
  Q1   Q2                          2             dominance rules discovered by our algorithms in AutoMPG 
 be MG. The result immediately follows from Sperner’s and Travel. As might be expected, the discovered 
 [1928] proof that the maximum number of incomparable dominance rules are longer on average than the 
                       m                         identification rules. In both case libraries, though, the 
 subsets of any set of size m is C[m/ 2] .    
                                                 discovered dominance rules provide clear benefits in terms 
   For a case library with 8 attributes, the maximum 
                                                 of reducing the number of attributes whose preferred values 
 number of rules that can be discovered by our algorithms for 
                                                 must be known for a reliable recommendation to be made. 
                     8
 a given target case is C4 = 70. Table 2 shows the These benefits are particularly evident in Travel, with 
corresponding limits for attribute numbers in the range from reductions in query length of up to 63%, and 38% on 
4 to 10. However, we now present empirical evidence which average, relative to queries involving all eight attributes.   
suggests that the discovered rule sets tend to be much  
smaller in practice than their maximum possible sizes.   Table 3. Discovered rule lengths in AutoMPG and Travel. 
                                                 __________________________________________________________________________  
 Table 2.  Maximum rule-set size for a single case.                          Min Avg  Max 
 __________________________________________________________________________   Identification Rules: AutoMPG  1  2.0  4 
                                                                  Travel            1   2.9  6          
  No. of Attributes: 4 5 6 7 8        9   10           
  Maximum Size:  6 10 20 35 70      126  252       Dominance  Rules:  AutoMPG 4   5.6    7         
 __________________________________________________________________________            Travel 3  5.0  7 
                                                 __________________________________________________________________________  
   Both of our experimental case libraries have 8 attributes, 
 and include continuous as well as nominal attributes. Based 6    Related Work  
 on the AutoMPG dataset from the UCI Repository, our first Recent work by McSherry [2004a] provides a different 
 case library contains the descriptions of 392 automobiles in perspective on recommendation rule discovery in which the 
 terms of attributes one might expect to see in a discovered rules (one for each case) are used to describe the 
 recommender system for previously-owned automobiles behavior of an existing recommender system in localized 
 (e.g., year, origin, mpg). Our second case library is Travel areas of the product space. For example, the discovered 
 (www.ai-cbr.org), a standard benchmark containing the rules can be used to identify conditions in which a given 
descriptions of over 1,000 holidays in terms of attributes product will be recommended by the system, or regions of 
such as price, destination, and transport.       the product space that are sparsely represented. However, 
   Figure 3 shows the numbers of rules discovered by our the discovered rules may not be MG and there is no 
 algorithms over all (complete) cases in AutoMPG and discussion of their possible use for rule-based retrieval.  
 Travel, apart from two inseparable cases in Travel for which   Burke and Kass [1996] propose a rule-based approach to 
 no rules were discovered. The largest rule-set size for any retrieval in a system for case-based teaching of advertising 
 case (20) is considerably smaller than the maximum rule-set sales techniques. In Spiel, stories relating lessons learned by 


                                                 