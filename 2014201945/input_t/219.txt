                          Engineering a complex ontology with time 

                        Jorge Santos                                 Steffen Staab 
           GECAD - Knowledge Engineering and           Universitat Karlsruhe (TH), Institut AIFB 
              Decision Support Research Group                D-76128 Karlsruhe, Germany 
          Instituto Superior de Engenharia do Porto  http://www.aifb.uni-karlsruhe.de/WBS/sst 
          Departamento de Engenharia Informatica                           & 
                 4200-072 Porto - Portugal           Ontoprise GmbH, 76227 Karlsruhe, Germany 
           http://www.dei .isep. ipp.pt/~jsantos              http://www.ontoprise.com 

 1 Principal Idea                                      assembled by with ontology 2 and its 02.timelnterval in a 
Although most ontologies available on the Web (e.g., con• way such that every car in the result ontology has a lifetime 
sider the DAML ontology library) exhibit only rather sim• as well as multiple 01JicensedlnState-frdmts with different, 
ple structures, viz. taxonomies and frame-like links between mutually exclusive life spans. 
concepts. There are some domains that frequently needs in•  is operationalized by an iterative, interactive process. 
tricate concept descriptions and interactions - - in particular It starts off with a human assembly — in the sense just ex•
ones about time and space.                             plained — between an ontology 01, the time-less domain 
  Despite the last developments in practical theories about ontology, and an ontology 02, the temporal theory. It is then 
time and in the engineering of concept hierarchies and con• propelled by a set of rules and a set of constraints. The set 
cept frames, the issue of how to engineer complex ontolo• of rules drives a semi-automatic process proposing combina•
gies with intricate interactions based on time has not been tions. The set of constraints narrows down the set of plausible 
researched very deeply, yet, rendering the engineering of a proposals to valid ones. 
new complex domain ontology with time a labor intensive, In the past a variety of approaches were proposed for re•
one-off experience with little methodology.            ducing the complexity of engineering a rule-based system, 
                                                       e.g. by task analysis [Schreiber et al, 1999], or an ontology-
  Here, we summarize our ontology engineering methodol•
                                                       based system, e.g. by developing with patterns [Clark et al, 
ogy, FONTE (Factorizing ONTology Engineering complex•
                                                       2000; Staab et al., 2001; Hou et al, 2002] or developing 
ity), which pursues a 'divide-and-conquer' strategy for en•
                                                       subontologies and merging them [Noy and Musen, 2000; 
gineering complex ontologies with time. FONTE divides a 
                                                       Rahm and Bernstein, 2001]. As different as these methods 
targeted ontology that is complex and that includes time into 
                                                       are, they may be characterized by subdividing the task of 
two building blocks, viz. a temporal theory and a time-less 
                                                       building a large ontology by engineering, re-using and then 
domain ontology. Each one of the two ontologies can be built 
                                                       connecting smaller parts of the overall ontology. 
independently allowing for a factorization of complexity. The 
targeted ontology is then assembled from the time-less do• Though FONTE shares its goal with these methodologies 
main ontology and the temporal theory by an operator   is its rather different in its operationalization. FONTE docs 
                                                       not aim at a partitioning and re-union (by merge or align with 
  Thereby, the assembling operator is very different from 
                                                       recognition of similarities) of the problem space, but rather 
existing operators for merging or aligning ontologies [Noy 
                                                       by a factorization into primordial concepts and a subsequent 
and Musen, 2000; Rahm and Bernstein, 2001 ]. Merging on•
                                                       combination ® that is more akin to a Cartesian product than 
tologies is a process that intends to join different ontologies 
                                                       a union of ontologies. 
about overlapping domains into a new one and most of its 
problems and techniques are related to the identification of 
similar concepts through structure analysis (e.g. graph anal• 2 Temporal Ontology 
ysis, path length, common nodes or/and edges and lexical The time and general events ontology used embodies many 
analysis). For instance, car from ontology 1, 01.car, and concepts like Instant, Period or Process routinely found in 
auto from ontology 2 02.auto may be defined to be identi• 'standard' ontologies like Time-DAML or SUMO. 
cal in the merging process because of results of the struc• Besides the classes TemporalEntity and Eventuality 
ture analysis. To formalize the merging and aligning process, similar to the ones used in Time-DAML a third class 
Wiederhold proposed a general algebra for composing large (TimedThing) was defined to capture the notion that bridges 
applications through merging ontologies of related domains between temporal concepts and the domain concepts that will 
[Wiederhold, 1994] and actually, the operations proposed (In• be used during the assemble process. In particular, we have 
tersection, Union and Difference) are about the similarities included the notion of Role as a core concept. While there 
and differences of two ontologies.                     are concepts that give identity to their instances (i.e. they are 
  In contrast, the result of ® needs rather to be seen in anal• semantically rigid [Guarino and Welty, 2000]), e.g. while the 
ogy to the Cartesian product of two entities. For instance, car identity of a particular person depends on being an instance of 
from ontology 1, OLcar, with its frame Ol.licensedlnState is Person, the identity of the same person does not change when 


1406                                                                                      POSTER PAPERS                                                                a new task instance from scratch. Then a set of logical tests 
                                                               (Validate) are performed in order to detect the existence 
                                                               of any knowledge anomalies (e.g. circularity or redundancy). 
                                                               In contrast, the acceptance of a proposed task instance does 
                                                               not require further checks as the checks are tested for validity 
                                                               before the user sees them. 
                                                                 By the Execute Task step the corresponding changes 
                                                               are made to the target ontology. Thereafter, the 
                                                               user decides either to pursue another iteration or to 
                                                               go to Conclude Process and accept the current 
                                                               Target Ontology as the final version. 

                                                               4 Evaluation and Conclusion 
                                                               In order to evaluate the effectiveness of FONTE, we have 
                                                               numerically evaluated the assembly tasks proposed and ex•
                                                               ecuted for an ontology about semantic web research commu•
                                                               nity and the temporal ontology briefly presented in section 2. 
                                                               We have investigated how many assembling steps were pro•
                                                               posed and evaluated their adequacy. The study results suggest 
                                                               that indeed FONTE provided a way to factorize the complex•
                                                               ity of building large applications leading to more reliable and 
                                                               cheaper final products. 
                                                                 Though, so far, we have only studied the assembly of time 
                                                               into a given ontology, we conjecture that FONTE may also 
             Figure 1: Assembly main process 
                                                               be applied to integrate other important concepts like space, 
it ends being a student and starts being a professor. Thus, the trust, or user access rights — concepts that pervade a given 
notion of Role is important when connecting a temporal the•    ontology in intricate ways such that a method like FONTE is 
ory with a concrete domain.                                    needed in order to factorize engineering complexity out lead•
                                                               ing to more consistent and cheaper target ontologies. 
3 The Assembly Process                                         Acknowledgments This work was supported by a Marie-Curie 
                                                               Fellowship and by FCT (Portuguese Science and Technology Foun•
The assembly process comprises two main building blocks.       dation) through the programs ONTOMAPPER (POSI-41818) and 
First, the specification of temporal aspects for a time-less do• SANSKI (POCTI-41830). We thank our colleagues, particulary N. 
main ontology remains dependent on the conceptualization of    Silva, G. Stumme, and J. Tane. 
the ontology engineer. Therefore, it is very important that the 
engineer may interactively influence the process. Second, in   References 
order to facilitate and accelerate the assembly of time-less do• [Clark et al, 2000] P. Clark, J. Thompson, and B. Porter. Knowl•
main concepts with temporal notions, the interactive process     edge patterns. In KR2000, pages 591-600, 2000. 
is supported by heuristics asking and pointing the engineer.   [Guarino and Welty, 2000] N. Guarino and C. Welty. A formal on•
   The assembling process runs as depicted in Figure 1: It        tology of properties. In Knowledge Acquisition, Modeling and 
                                                                 Management, pages 97-112, 2000. 
starts by an Initial Setup. Some basic operations are 
                                                               [Hou et al, 2002] Chih-Sheng Johnson Hou, N. F. Noy, and M. A. 
performed, namely loading the ontologies to be assembled,        Muscn. A template-based approach toward acquisition of logical 
loading a set of rules to drive the process and initializing      sentences. In Procs.Intelligent Information Processing 2002 -
some process parameters. The rules and parameters are de•         World Computer Congress, Montreal, Canada, 2002. 
fined separately from the tool in order to allow for adapta•   [Noy and Musen, 2000] N. Noy and M. Musen. Prompt: Algo•
tions to the particular needs of different temporal ontologies.  rithm and tool for automated ontology merging and alignment. 
However the rules and parameters do not change when a new        In Procs.AAAI-2000, 2000. 
domain ontology is to be assembled. The Target Ontology        [Rahm and Bernstein, 2001] Erhard Rahm and Philip A. Bernstein. 
initially corresponds to the union of the time-less domain on•   A survey of approaches to automatic schema matching. VLDB 
                                                                 Journal, 10(4):334-350, 2001. 
tology, Ol, and the temporal theory, 02. 
                                                               [Schreiber et al., 1999] G. Schreiber, Akkermans H., Anjcwicrdcn 
   In the Analyze Structure step a set of tests are per•         A., R. Hoog, N. Shadbolt, W. Van de Velde, and B. Wielinga. 
formed that restrict the set of possible task instances to plau•  Knowledge engineering and management. The CommonKADS 
sible ones, which are then proposed by insertion into the Task   Methodology. MIT Press, 1999. 
List. As more information becomes available in subsequent      [Staab et al, 2001] S. Staab, M. Erdmann, and A. Maedchc. Engi•
iterations, the usefulness of results provided by the structure  neering ontologies using semantic patterns. In Procs. IJCAI-01 
analysis improves.                                                Workshop on E-Business & the Intelligent Web, 2001. 
   In every iteration the engineer decides whether to accept   [Wiederhold, 1994] G. Wiederhold. An algebra for ontology com•
                                                                 position. In Proc.Workshop on Formal Methods, pages 56-61, 
an automatically proposed task instance from the Task List. 
                                                                 Monterey, 1994. 
Alternatively, the user may take the initiative and assemble 


POSTER PAPERS                                                                                                        1407 