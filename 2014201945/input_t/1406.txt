                    Building    Patterned    Structures    with   Robot   Swarms

                        1 2                                 2 3                               3
          Justin Werfel  ,                Yaneer  Bar-Yam    ,               Radhika   Nagpal
       jkwerfel@mit.edu                 yaneer@necsi.org               rad@eecs.harvard.edu
            1MIT  CSAIL        2New  England  Complex   Systems  Institute  3Harvard  University
       Cambridge,  MA   02139            Cambridge,  MA   02138           Cambridge,   MA  02138

                    Abstract                          down of some robots, need not prevent completion of a struc-
                                                      ture; temporary failures at any step can be corrected.
    We  describe a system in which simple, identi-      The ability to automate construction would be useful par-
    cal, autonomous robots assemble two-dimensional   ticularly in settings where human presence is dangerous or
    structures using prefabricated modules as build-  problematic; for instance, robots could be initially sent to un-
    ing blocks. Modules are capable of some infor-    derwater or extraterrestrial environments, to create habitats
    mation processing, enabling them to share long-   to await later human travelers. Swarm approaches, involv-
    range structural information and communicate it to ing larger numbers of simpler robots rather than one or a few
    robots. This communication allows arbitrary solid with greater sophistication, have advantages for such a goal,
    structures to be rapidly built using a few ﬁxed, local in particular with respect to decentralization and robustness.
    robot behaviors. Modules are identical in shape but Such systems can typically absorb the loss of many compo-
    may be functionally distinct, with constraints gov- nents without a signiﬁcant impact on task completion; simi-
    erning the location of different classes. We present larly, they tolerate components acting in no speciﬁed order, a
    algorithms for assembly of solid structures of any useful quality since it is difﬁcult to preplan robot behavior in
    shape, both when the layout of module classes is  detail in uncertain environments.
    fully speciﬁed in advance, and when functional      If blocks can be arbitrarily custom-designed for particular
    constraints are satisﬁed during the building process, structures, then any structure can be built using only local
    allowing for adaptive structures. This approach   rules for assembly; a trivial, inefﬁcient way to do it is to des-
    demonstrates a decentralized, autonomous, ﬂexi-   ignate speciﬁc blocks for speciﬁc locations in a blueprint, and
    ble, simple, and adaptive approach to construction. engineer the blocks so that each one can be attached solely to
                                                      the neighboring blocks in that layout.1 However, we take the
                                                      opposite approach, assuming that the block types are deﬁned
1  Introduction                                       by the application, and our task is to work within those limits.
In this paper we discuss the design of a system for automated An example of such an application is the building of under-
construction, in which elements are separated into mobile water structures (for marine research, oil drilling, etc.), where
and structural components (robots and modular blocks, re- the building blocks are high-level prefabricated pods that each
spectively). Our approach is to use robots that are simple ﬁll one of several distinct and predeﬁned roles—living quar-
in capabilities and behavior, and that communicate indirectly ters, power generation, emergency escape centers, laboratory
through information stored in the environment; that informa- space, etc. There may be desired constraints on which classes
tion is embodied by the blocks, which themselves can com- are attached relative to which other classes—for instance, us-
municate with one another when attached. Here we focus ing the previous example, we might want all living pods to be
on construction when the blocks are identical in shape but located in a contiguous block, or no two airlock pods to be
heterogenous in function, and a given set of functional con- adjacent to one another.
straints governs how they can be put together. We ﬁrst show In §2 we review related work, and in §3 describe the prob-
how speciﬁc structures can be built, and then discuss the as- lem we address and our assumptions about the system. §4
sembly of structures which have no prespeciﬁed plan but sat- gives algorithms the system can use to assemble structures.
isfy a given set of constraints.                      §5 covers geometric constraints on block placement. §6 and
  Our approach relies on very simple procedures and there- §7 describe structures which are fully prespeciﬁed or adap-
fore should be practical for the complexities and difﬁculties tive, respectively, and elaborate on the satisfaction and speci-
of real robots in physical environments. The limited require- ﬁcation of functional constraints. §8 discusses issues associ-
ments for implementation are that robots be able to follow ated with the use of multiple robots.
a perimeter, communicate with immediately adjacent blocks,
and push together blocks with self-aligning connectors. Prob- 1Geometric constraints will still restrict the order in which blocks
lems, from unexpected environmental inﬂuences to break- may be attached, as discussed in §5.

2  Related  work
                                                                        ¡ ¡ ¡ ¡ 


Several previous papers address topics related to construc-            ¢¡¢¡¢¡¢¡¢                C
                                                                                                ¡


                                                                            Robots holding      ¡


                                                                                                ¡


                                                                                                ¡
                                                                                                ¡



tion, though not with the goal of producing user-speciﬁed                   blocks              ¡

                                                                          £¡£¡£¡£¡£


                                                                           ¤¡¤¡¤¡¤


                                                                                                ¡


                                                                                                ¡


                                                                  ¥¡¥¡¥


                                                                  ¦¡¦¡¦


                                                                          £¡£¡£¡£¡£


                                                                           ¤¡¤¡¤¡¤


                                                                                                ¡
                                                                                                ¡


                                                                B         £¡£¡£¡£¡£


                              [                                            ¤¡¤¡¤¡¤
                                                                                                ¡


building designs. For example, Wawerla et al., 2002;                Beacon                      ¡


                                                                          £¡£¡£¡£¡£


                                                                           ¤¡¤¡¤¡¤


                                                                                                ¡


                                                                                                ¡


                                                                          £¡£¡£¡£¡£


                                                                           ¤¡¤¡¤¡¤
                                                                                                ¡


Jones and Mataric,´ 2004] study aspects of the use of com-                                      ¡


                                                                                                ¡


                                                                                                ¡


                                                                                                ¡


                                                                                                ¡
                                                               §¡§


munication among robots, to increase their effectiveness on     ¨
                                                               §¡§


                                                                ¨                     Blocks
                                                               §¡§
tasks involving rearrangement of functionally heterogenous      ¨                              Cache


                                                                                               markers
                                                                                              ¡¡¡¡


blocks. [Bowyer, 2000] discusses issues of mechanical de-   Structure                         ¡¡¡¡


                                                                                              ¡¡¡¡


                                                                                              ¡¡¡¡


                                                                                              ¡¡¡¡


                                                                                              ¡¡¡¡
                                                                                              ¡¡¡¡


sign for robots meant to build arches, towers, and walls, using                               ¡¡¡¡


                                                                                              ¡¡¡¡


                                                                                              ¡¡¡¡


                                                                        

                                                                                              ¡¡¡¡




                                                                      Robot                   ¡¡¡¡
                                                                        ©



             [                  ]                                                             ¡¡¡¡


extruded foam. Melhuish et al., 1999 deals with minimiza-                                     ¡¡¡¡


                                                                        ©


                                                                                              ¡¡¡¡


                                                                                              ¡¡¡¡
                                                                                              ¡¡¡¡


tion of capabilities for behavior-based robots arranging pucks                                ¡¡¡¡


                                                                                              ¡¡¡¡
                                                                                              ¡¡¡¡
into walls, using environmental cues.                                                         C
  [Werfel, 2004] describes a framework for arranging blocks
into arbitrary lines and curves, speciﬁed geometrically; [Ma-
son, 2002] describes one in which structures can be speciﬁed
through the use of static, global ‘pheromone’ signals. Both Figure 1: A sketch of the kind of system described here. As
make assumptions about the precision with which their mo- the structure is assembled, it forms a lattice with an implicit
bile agents operate (the former having to do with odometry, coordinate system, of which the beacon can be taken to be the
the latter with ability to evaluate the strength of distant sig- origin.
nals) that may cause the shapes they generate to suffer from
lack of robustness to noise.
  Our approach is particularly motivated by research in two This approach provides other beneﬁts, including increased
areas: insect and insect-inspired construction [Theraulaz´ and efﬁciency of construction, alleviation of interference be-
Bonabeau, 1995], and self-reconﬁgurable modular robotics tween robots, and better exploitation of the parallelism of
[Rus and Chirikjian, 2001]. Social insects which build do so the swarm, without requiring additional capabilities from the
with the principle of stigmergy, communicating indirectly by robots. As computation becomes less expensive, it has been
storing information in the environment. While this approach proposed to make it more pervasive [Hill et al., 2000]. Partic-
can be used to produce structures with given qualitative char- ularly if the building blocks in question are high-level units,
acteristics, it does not easily allow the consistent production as in the underwater application suggested above, it should be
of speciﬁc structures (potentially arbitrary and complicated feasible to incorporate these computation capabilities into the
ones); nor has a general principle been described for tak- blocks without making the system prohibitively more expen-
ing a particular desired structure and extracting a set of low- sive.
level behaviors that building agents can follow to produce it.
Work in modular robotics has produced hardware systems
with many capabilities we will take advantage of here, in- 3 General problem and assumptions
cluding connections that self-adjust so that inexact alignment We consider the problem where mobile robots and caches of
is corrected, and communication links between physically at- building blocks are deployed at random into an obstacle-free
tached modules. Such communication is reliable, unambigu- workspace, along with a beacon indicating the location for the
ous, rapid, and scalable, compared to the communication by start of construction. The goal is for robots to collect blocks
external signaling that robots typically use. Modular robot al- from the caches and arrange them into a structure, satisfy-
gorithms typically require that all modules remain connected ing some set of criteria, starting at the beacon (Fig. 1). The
at all times, and that individual modules be capable of mo- beacon and caches send out distinct long-range signals which
bility, neither of which are appropriate for automated con- robots can use to navigate to them. Each cache contains a
struction applications. Very recently, modular robotics re- single block type.
searchers have begun to describe hardware systems for au- We will work with square blocks, to be assembled in the
tomated assembly of structures [Terada and Murata, 2004; horizontal plane. An important constraint is that a block can
Everist et al., 2004]. These systems are based on inert, iden- be added to the growing structure if and only if the potential
tical modules, and have not yet explored issues of speci- attachment site has at least two adjacent sides open; other-
fying distributed robot behavior and creating complex user- wise there is insufﬁcient room to maneuver to add the new
speciﬁed structures.                                  block (Fig. 2). Though a system has been demonstrated in
  Elsewhere we describe a similar system to that presented which cubical blocks can be slid into spaces like that at (D) in
here [Werfel et al., 2005], concerning identical blocks only. that ﬁgure [Terada and Murata, 2004], the task of mechanical
There we show that giving blocks limited communication design will be simpliﬁed and the precision with which robots
abilities is an effective way to enable the system to construct must operate reduced if we maintain this constraint. In partic-
arbitrary solid structures, while allowing robots to remain ular, if we prevent gaps like that at (D), then situations where
simple and with ﬁxed, local behaviors. The block commu- a robot needs to maneuver a block down a longer ‘tunnel’,
nication provides the nonlocal knowledge about the struc- like that around (C), will also be prevented. A block attached
ture necessary to assemble arbitrarily complicated shapes. to the structure can immediately obtain from its neighbors its

                          A


                         


                        


                                                 Algorithm 1 High-level pseudocode procedure for assembly


                         


                         


                         


                        


                                                 of a close-packed structure by a single robot.


                            


                            


                            


                            
                            


                       C    


                         


                        


                                                 A: Robots


                         


                         


                         


                        


                     B      


                    """   


                    ### !!!


                                                   while structure not complete do


                    """   


                    ### !!! 


                    """   


                    ### !!!
                          D                          choose a block type t
                                                          get t from cache
                                                          go to structure perimeter
Figure 2: Examples of valid and invalid prospective dock- while still holding block do
ing sites for a sample structure (shaded squares represent grid ask adjacent structure blocks if t can be attached here
sites already occupied by blocks). A new block can be at-   if all structure blocks answer yes then
tached at A or B; C and D are too spatially constrained to    attach block here
allow a block to be maneuvered into position.               else if taking too long to ﬁnd a place for block then
                                                              return block to cache
                                                            else
position in a common coordinate system, along with infor-     move one site counterclockwise along perimeter
mation about the present and desired ﬁnal structure. Blocks B: Blocks
along the perimeter of the structure and robots traversing the loop
perimeter can also communicate, with lower bandwidth; this if neighboring robot asks to attach a block of type t at
communication is very short-range, avoiding problems asso- site s then
ciated with signaling over distances, interference when many if (block at s consistent with geometric constraints)
robots are active, and ambiguity in which agents are signal- and (t at s consistent with functional constraints)
ing.                                                        then
  Robots can move in any direction in at least the two dimen- answer yes
sions of the plane, alone or while holding a block. They can  update map with t block at s
detect the presence of other robots, for collision avoidance, pass message about (t, s) to neighboring blocks
either by active short-range signaling or by passive percep- else
tion. Once in the immediate vicinity of the growing structure, answer no
they can follow its perimeter, and communicate with adjacent if neighboring block sends message about t at s then
blocks.                                                     if message represents new information then
                                                              update map with t block at s
                                                              pass message about (t, s) to neighboring blocks
4  Algorithms   for blocks and  robots
Blocks attached to each other to form the structure have ac-
cess to information about the entire structure, via communica- pickup, perimeter following, block joining, limited commu-
tion with other blocks. Our approach will be for blocks to be nication with immediate neighbors.
the agents responsible for ensuring that the structure remains Noise affecting robot movement, e.g., due to motor unreli-
consistent with all the constraints. Robots can then simply ability or currents in an underwater setting, can be compen-
circle the perimeter of the structure, and rely on it to tell them sated for. For instance, if robots lose track of the perimeter
when a site is acceptable for attachment of their payload. during their tour, they need only revert to a previous step of
  We can divide the constraints on block placement into two their algorithm, ﬁnd the perimeter again and proceed from
classes: those independent of block type, and those based there. The lack of robot internal state means no important in-
solely on block type. Geometric constraints, the former, en- formation is lost in such an event. Self-aligning connectors
sure that the structure is free of unwanted internal gaps and drawn from modular robotics effect the ﬁne details of block
has a perimeter of the desired shape. Functional constraints, attachment. Communication between robots and blocks can
the latter, encompass whatever restrictions based on block be physically limited, e.g., through appropriate geometric
types may be dictated by the particular application. Both design of an optical interface, to ensure that robots only
classes are discussed further below (§5–7).           communicate with immediately neighboring blocks and that
  Algorithm 1 summarizes high-level procedures for robots crosstalk with more distant blocks is prevented. Interblock
and blocks to follow to build structures using this approach. communication is via a physical interface.
                                                        More serious robot failures can also be absorbed. In keep-
4.1  Robustness                                       ing with the swarm approach, the algorithm does not depend
Physical robots in real-world environments are subject to a on particular robots completing particular assigned tasks, nor
wide variety of internal and environmental perturbations. A on blocks being attached in a particular order. Thus break-
hardware implementation would need to be robust to such downs of individual robots almost anywhere in the workspace
factors. Our approach is intended to minimize the effect need not impede the system’s ability to complete the struc-
or likelihood of problems that robots and blocks might en- ture. The exception is at the edge of the growing structure,
counter. It relies on simple basic capabilities that can be where a broken robot could serve as an obstacle to others fol-
made robust and self-correcting: directed movement, block lowing the perimeter, and prevent growth of the structure inthat area. Such perimeter breakdowns would need to be de-
tected and towed away by other robots.
  Blocks, less complicated mechanically, may be less sub-
ject to failure. Malfunctions that do occur could be detected
by neighboring blocks, which could alert robots to the need
for replacement. Similarly, in the event that a block is mis-
takenly attached to the structure so as to violate a constraint, Figure 3: Snapshots of ﬁve robots (brown) building a struc-
the active nature of the blocks makes it easier to detect and ture of a single block type (white), using only geometric con-
report that error. §9.2 outlines a scheme for disassembly and straints. Sites that the structure plan speciﬁes should eventu-
reconstruction of the necessary part of the structure. ally be occupied by blocks are shown in dark gray. Robots
                                                      not appearing in a particular frame are off fetching blocks.
5  Geometric   constraints
Positions can be speciﬁed by reference to the common coor-
dinate system which blocks share via their communication.
5.1  Rectangular structures
The simplest possible perimeter is a rectangle; the geometric
constraint enforcing that shape is simply a restriction against
robots attaching blocks at sites with coordinates outside the
desired rectangle.                                    Figure 4: Snapshots of ten robots (white) building a structure
  The other geometric constraint to be followed is the gener- of four block types (yellow, red, blue, green).
ally applicable one that the structure should be solid, without
internal holes. To avoid unwanted gaps, it is necessary to
avoid situations where two blocks end up in the same row, should be attached at every location in the desired structure.
unless they are adjacent. A block can check, based on its This speciﬁcation can be more compact than a full enumera-
communication with the other blocks in its row [Werfel et tion, just as an image speciﬁcation can be more compact than
al., 2005], whether a potential attachment site satisﬁes this a bitmap. Structure blocks forbid robots to attach the blocks
criterion, and forbid robots from attaching further blocks at they carry unless the latter are the single type allowed at the
that site if it does not. This rule is sufﬁcient to generate solid site in question. Figs. 4 and 5 shows rectangular and non-
structures.                                           rectangular structures built using such functional constraints.
5.2  Complex  shapes                                  7   Functional  constraints: Adaptive   structures
With only a small modiﬁcation, the system extends to solid In many cases the design of structures does not require spe-
structures with perimeters which are not necessarily rectan-
                                                  2   ciﬁc patterns, but rather requires functional relationships be-
gular, nor even convex, but can be of any arbitrary shape. tween the locations of blocks of various types. For instance,
As usual, the desired shape is speciﬁed with respect to the with the underwater habitat example we gave above, it may
shared coordinate system and downloaded by each new block be that the exact locations of escape pods are unimportant,
attached to the structure. To achieve the extension to arbitrary but safety considerations require that no pod be further than
shapes without letting unwanted gaps creep in, it is sufﬁcient three steps away from one. Any structure that satisﬁes that
to relax the geometric rule against attaching two non-adjacent constraint will be considered acceptable. The more relevant
blocks in the same row, to allow two such blocks so long as way to specify the constraint in this case is by reference not to
they are separated by space intended never to be occupied absolute coordinates, but to relationships between the block
by blocks. The desired shape can be represented compactly, types. Our approach extends naturally to building structures
e.g., as a collection of rectangles whose superposition gives in this ﬂexible way. Figs. 6 and 7 show structures built using
the desired structure [Støy and Nagpal, 2004]. Fig. 3 gives an relative constraints of this sort.
example of an H-shaped structure being built, with geometric It is always a valid approach to come up with a blueprint
constraints only.                                     ahead of time that satisﬁes all such constraints, give that to the
                                                      system, and have it produce that particular structure. But sat-
6  Functional   constraints: Patterned                isfying constraints on the ﬂy during the building process in-
   structures                                         stead can let the structure be adaptive, and respond to chang-
An important aspect of such a construction system, hitherto ing circumstances or conditions unknown in advance.
unaddressed, is the ability to create predeﬁned patterns of Satisfying constraints on the ﬂy can have additional ben-
block types. This can be achieved with functional constraints eﬁts, such as increased speed of construction. As an exam-
                                                                             21 × 21
that act as a blueprint, specifying exactly what block type ple, consider the class of -block structures of Fig.
                                                      6. If we assume that robots take no time to bring blocks
  2We will require that any spaces between blocks in the desired from caches to the structure perimeter, and moving one block-
ﬁnal structure be wide enough for two block-carrying robots to pass length and attaching a block each take one time step, then the
each other, so that perimeter-following can continue unimpeded. time required to build a structure will reﬂect primarily theFigure 5: Example of a patterned structure with a complex Figure 7: Example of a structure assembled according to the
shape.                                                following list of constraints:
                                                      Region 1, border of upper-left area: only blue blocks allowed.
                                                      Region 2, interior of upper-left area: blue and white
                                                      blocks both allowed; no white block may be in the eight-
                                                      neighborhood of another white block.
                                                      Region 3, elsewhere: blocks must be either red or white de-
                                                      pending on their y-coordinate.

Figure 6: Examples of square structures built with two block • Relational, involving both types and locations of neigh-
types and the constraint that no two yellow blocks be adja- boring blocks: e.g., every A must have a B bordering
cent.                                                     its west edge and a C bordering its north edge. Rotation
                                                          and reﬂection may each be allowed or forbidden in such
                                                          a constraint.
time robots spend following the perimeter looking for a place Proximity and relational constraints imply an associated
to put their block. Averaging over 100 independent runs with distance d within which blocks are relevant to satisfaction of
10 robots, on-the-ﬂy construction completes in 650140 time the constraint. One approach is for blocks to maintain a lo-
steps, while building exactly the same 100 structures as pre- cal map of their area of the structure, whose size is at least
speciﬁed patterns takes 1100  300 steps, or 70% slower on of radius d. Blocks refer to this map to determine whether
average. Robots come to the structure already carrying some robots should be allowed to attach blocks at a neighboring
type of block; the speedup for on-the-ﬂy construction occurs site; when a new block is attached, a message to that effect is
because sites can accept any type of block consistent with the sent to blocks within d, for them to update their maps accord-
constraints, rather than having to wait for a particular block ingly. The larger the value of d, the more memory is required
type to appear, and robots can accordingly ﬁnd places to at- of blocks, but the farther-reaching constraints may be.
tach their blocks more readily.                         Another type of functional constraint can result from ﬁnite
                                                      numbers of each block type. For instance, there might be
7.1  Satisﬁability                                    only two blocks of type A, which must be attached adjacent
A task involving ﬁtting a given set of blocks into a given to one another. The ﬁrst A attached to the structure could
shape subject to given constraints may have no solution; and be added anywhere, but the second would have to be next
if one exists, it may be hard to ﬁnd. In general, the problem of to the ﬁrst. In order to give an A-carrying robot the proper
ﬁnding a solution to such a scenario, or showing that none ex- instruction, blocks would need to establish whether another
ists, is NP-complete [van Emde Boas, 1997]. However, many A had already been attached anywhere, a global property of
cases of interest will have the property that a solution can be the structure. Having blocks maintain a global map of the
found quickly by a straightforward trial, and no exhaustive structure would be the most straightforward way to ensure
search is necessary. The system here provides a natural and being able to handle all possible constraints, though not the
effective way of assembling structures for constraint sets that most memory-efﬁcient.
are easy to satisfy in this sense. Constraint sets difﬁcult to
satisfy would best be handled by ﬁnding a solution prior to 7.3 Multiple levels
construction, and building that solution as a blueprint. Constraints may also be speciﬁed on multiple levels of orga-
                                                      nization. We can deﬁne different regions of the structure, in
7.2  Types of functional constraints                  each of which some different set of constraints as listed above
In general, there are several classes of functional constraints is to be imposed. Figs. 4 and 7 give examples where such re-
we can consider:                                      gions are designated according to speciﬁc coordinates. The
                                                      former designates regions compactly by reference to geomet-
  • Absolute, without reference to neighboring blocks: e.g., ric shapes and lines (e.g., a region of red blocks is deﬁned
    type A may be attached; B is forbidden.           as those cells within a given distance from an arc with given
  • Proximity, where the types of neighboring blocks are im- center, radius, and endpoints, etc.). The latter combines pat-
    portant but their locations are not: e.g., every A must terned and adaptive constraints into a single structure.
    have at least one B somewhere within a neighborhood Regions can be designated in this rigid way, or more ﬂu-
    of radius 3; no C can be adjacent to a D.         idly: it may be permissible for a region to occur anywhere