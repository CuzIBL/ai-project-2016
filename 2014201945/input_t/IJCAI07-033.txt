                                A Description Logic of Change∗

           Alessandro Artale     University of Bolzano, Italy       artale@inf.unibz.it
           Carsten Lutz          University of Dresden, Germany     clu@tcs.inf.tu-dresden.de
           David Toman           University of Waterloo, Canada     david@uwaterloo.ca


                    Abstract                          that object membership in entities, relationships, and attribute
                                                      values cannot or must change in time; this is achieved by
                                S5
    We combine the modal logic     with the de-       snapshot and temporary marks in the diagram, respectively.
                       ALCQI
    scription logic (DL)       .  The resulting       Second, evolution constraints govern object migration be-
                       S5
    multi-dimensional DL  ALCQI supports reason-      tween entities and can state, for example, that every instance
    ing about change by allowing to express that con- of the entity Child will eventually become an instance of the
    cepts and roles change over time. It cannot, how- entity Adult.
    ever, discriminate between changes in the past and  TER models with both timestamping and evolution con-
    in the future. Our main technical result is that                                     DLR
                 S5                                   straints can be translated into the TDL US [Artale et
    satisﬁability of ALCQI concepts with respect to   al., 2002]. Unfortunately, reasoning in this logic is undecid-
    general TBoxes (including GCIs) is decidable and  able. Moreover, the computational problems are not due to
    2-EXPTIME-complete. In contrast, reasoning in     the translation to TDLs: even direct reasoning in the gener-
    temporal DLs that are able to discriminate between ally less powerful TER models is undecidable [Artale, 2004].
    past and future is inherently undecidable. We argue There are two principal ways around this problem. The ﬁrst
    that our logic is sufﬁcient for reasoning about tem- approach restricts the application of timestamping: it allows
    poral conceptual models with time-stamping con-   arbitrary timestamping of entities, but gives up timestamp-
    straints.                                         ing of relationships and attributes (i.e., all relationships and
                                                      attributes are unrestricted). This re-establishes decidability
1  Introduction                                       of TER models with restricted timestamping and evolution
                                                      constraints [Artale et al., 2002]. The second approach to re-
An important application of Temporal Description Logics gaining decidability allows for full use of timestamping, but
(TDLs) is the representation of and reasoning about tem- prohibits the use of evolution constraints.
poral conceptual models [Artale, 2004; Artale et al., 2003;
                                                        This second alternative is pursued in the current paper. We
2002]. Knowledge captured by such models is translated
                                                      devise a multi-dimensional description logic S5ALCQI that
into a TDL TBox and reasoning algorithms for TDL are
                                                      is obtained by combining the modal logic S5 with the stan-
then used to detect inconsistencies and implicit IS-A rela-
                                                      dard DL ALCQI.TheS5     modality can be applied to both
tions in the temporal model [Artale and Franconi, 1999;
                                                      concepts and roles; axioms in the TBox are, however, inter-
Artale et al., 2002; Calvanese et al., 1998]. A serious obstacle
                                                      preted globally. This logic can be viewed as a description
for putting this general idea to work is posed by the fact that
                                                      logic of change: it can express that concept and role mem-
for many natural temporal conceptual formalisms and their
                                                      berships change in time, but does not permit discriminating
associated TDLs, reasoning turns out to be undecidable.
                                                      between changes in the past or future. We show that TER
  The most prominent witnesses of this problem are the var- models with full timestamping (i.e., timestamping on entities,
ious temporal entity-relationship (TER) models used to de- relationships, and attributes) but without evolution constraints
sign temporal databases [Chomicki and Toman, 2005]. TERs
                                                      can be captured by S5ALCQI TBoxes.
are classical ER data models extended with two additional
                                                        The main contribution of this paper is to show that rea-
classes of constraints that model the temporal evolution of    S5
data in an application domain [Spaccapietra et al., 1998]. soning in ALCQI is decidable. We also pinpoint the ex-
First, timestamping constraints are used to distinguish tempo- act computational complexity by showing 2-EXPTIME com-
                                                      pleteness. Thus, adding the S5 change modality pushes the
ral and atemporal components of a TER model. Timestamp-           ALCQI
ing is usually implemented by marking entities (i.e., classes), complexity of ,whichisEXPTIME-complete, by one
relationships and attributes as snapshot, temporary,orunre- exponential. Our upper bound can be viewed as an extension
stricted. The idea behind such a classiﬁcation is to express of the decidability result for a simpler multi-dimensional DL,
                                                      S5ALC, [Gabbay et al., 2003] which is not capable of cap-
  ∗The research was supported by EU IST-2005-7603 FET Project turing TER models. However, we had to develop completely
TONES and by NSERC.                                   new proof techniques as the decidability proof for S5ALC re-

                                                IJCAI-07
                                                   218lies on the ability to duplicate points in a model, which is im- usual way. For roles, we allow only single applications of S5
possible in the presence of S5ALCQI ’s number restrictions. modalities and inverse. It is easily seen that roles obtained by
Our lower bound applies also to S5ALC, hence we show that nesting modal operators and inverse in an arbitrary way can
this logic is also 2-EXPTIME-complete.                be converted into an equivalent role in our simple form: mul-
  The paper is organized as follows. Section 2 introduces the tiple temporal operators are absorbed and inverses commute
logic S5ALCQI . Section 3 shows that reasoning in S5ALCQI with temporal operators.
is decidable in 2-EXPTIME by ﬁrst providing a tree abstrac- The fragment S5ALC of S5ALCQI is obtained by allowing
tion of S5ALCQI interpretations and then presenting a 2- only roles of the form r, 3r,and2r, and replacing the con-
EXPTIME  procedure that checks for the existence of such a cept constructor ( nrC) by ∃r.C. We note that neither
tree abstraction. Section 4 illustrates how S5ALCQI is able S5ALC nor S5ALCQI enjoys the ﬁnite model property: there
to capture conceptual models with timestamping constraints. are concepts and TBoxes that are only satisﬁable in models
Full proofs and the 2-EXPTIME lower bound can be found in with both an inﬁnite set of worlds W and an inﬁnite domain
the full version of this paper [Artale et al., 2006]. Δ. An example of this phenomenon is the concept ¬C and
                                                      the TBox {¬C   3C, C  ∃r.¬C,   ¬C  ∀r.¬C}, with
                                                        ∈ N
2  The Logic   S5ALCQI                                r    glo.
         S5                              S5
The logic  ALCQI  combines the modal logic  and the                     S5
description logic ALCQI in a spirit similar to the multi- 3 Reasoning in   ALCQI
dimensional DLs [Gabbay et al., 2003; Wolter and Za-  We show that in S5ALCQI , satisﬁability w.r.t. TBoxes is de-
kharyaschev, 1999]. The syntax of S5ALCQI is deﬁned as cidable in 2-EXPTIME. For simplicity, throughout this sec-
follows. Let NC and NR be disjoint and countably inﬁnite tion we assume that only local role names are used. This can
sets of concept names and role names. We assume that NR be done w.l.o.g. as global role names can be simulated by 2r,
is partitioned into two countably inﬁnite sets Nglo and Nloc of for r a fresh local role name. Let C0 and T be a concept and
global role names and local role names.ThesetROL of roles a TBox whose satisﬁability is to be decided. We introduce
              −        −       −
is deﬁned as {r, r , 3r, 3r , 2r, 2r | r ∈ NR}.Thesetof the following notation. For roles r,weuseInv(r) to denote
       CON                              N  ⊆ CON       −                   −
concepts    is deﬁned inductively as follows: C   ;   r  if r ∈ NR, s if r = s , 3Inv(s) if r = 3s,and2Inv(s)
if C, D ∈ CON, r ∈ ROL,andn ∈ N, then the following are if r = 2s.Weuserol(C0, T ) to denote the smallest set that
also in CON: ¬C, C  D, ( nrC),and3C.ATBox      is   contains all sub-roles used in C0 and T and is closed under
a ﬁnite set of general concept inclusions (GCIs) C  D with Inv.Weusecl(C0, T ) to denote the smallest set containing
C, D ∈ CON.                                           all sub-concepts appearing in C0 and T that is closed under
  An S5ALCQI -interpretation I is a pair (W, I) with W negation: if C ∈ cl(C0, T ) and “¬” is not the top level oper-
a non-empty set of worlds and I a function assigning an ator in C,then¬C ∈ cl(C0, T ).
                                I,w
ALCQI-interpretation I(w)=(Δ,  ·   ) to each w ∈ W ,    In the rest of this section we devise tree abstractions of
                                              I,w
with Δ a ﬁxed non-empty set called the domain and · a models of C0 and T which we call (C0, T )-trees. In the sub-
                                       I,w
function mapping each A ∈ NC to a subset A ⊆ Δ and    sequent section, we then show how to construct looping tree
                      I,w
each r ∈ NR to a relation r ⊆ Δ × Δ;forr ∈ Nglo we ad- automata that accept the (C0, T )-trees and thus reduce satis-
                I,w    I,v
ditionally require r = r  for all w, v ∈ W .Weextend  ﬁability in S5ALCQI to the emptiness problem of looping tree
           I,w
the mapping ·  to complex roles and concepts as follows: automata, yielding decidability of S5ALCQI .
      (r−)I,w := {(y,x) ∈ Δ × Δ | (x, y) ∈ rI,w}
                                                      3.1  Tree Abstractions of S5ALCQI  models
     (3r)I,w := {(x, y) ∈ Δ × Δ |∃v ∈ W :(x, y) ∈ rI,v}
                                                                    ( 0 T )                        I    0
         I,w                                  I,v     Intuitively, for a C , -tree τ that abstracts a model of C
      (2r)  := {(x, y) ∈ Δ × Δ |∀v ∈ W :(x, y) ∈ r }  and T , the root node of τ corresponds to an object x in I that
         I,w        I,w
     (¬C)   := Δ \ C                                  realizes C0. Successors of the root in τ correspond to objects
   (C  D)I,w := CI,w ∩ DI,w                          in I that can be reached from x by traversing a role in some
         I,w                          I,w             S5 world. Similarly, further nodes in τ correspond to objects
 ( nrC)    := {x ∈ Δ | {y ∈ Δ | (x, y) ∈ r             I
                                    y ∈ CI,w}≥n}      of  reachable from x by traversing multiple roles. To de-
                                 and                  scribe the concept and role interpretations of I in its abstrac-
         I,w                        I,v
     (3C)   := {x ∈ Δ |∃v ∈ W : x ∈ C }               tion τ, we decorate the nodes of τ with extended quasistates
An S5ALCQI -interpretation I =(W, I) is a model of a TBox as introduced in Deﬁnition 3 below. Extended quasistates are
T iff it satisﬁes CI,w ⊆ DI,w for all C  D ∈T and w ∈ deﬁned in terms of types and quasistates, which we introduce
W .Itisamodel of a concept C if CI,w = ∅ for some w ∈ ﬁrst. Intuitively, a type describes the concept memberships of
W . A concept C is satisﬁable w.r.t. a TBox T if there exists a domain element x ∈ Δ in a single S5 world.
a common model of C and T . Note that when S5ALCQI is Deﬁnition 1 (Type). A type t for C0, T is a subset of
considered a temporal description logic, the elements of W cl(C0, T ) such that
correspond to time points. We do not distinguish between
global and local concept names because a concept name A   ¬C  ∈ t iff C ∈ t        for ¬C ∈ cl(C0, T )
can easily be enforced to be global using the GCI A  2A. C  D ∈ t iff C ∈ t and D ∈ t for C  D ∈ cl(C0, T )
  The concept constructors C   D, ∃r.C, ∀r.C, ( nrC),     D  ∈ t if C ∈ t          for C  D ∈T
(= nrC),  2C, ,and⊥  are deﬁned as abbreviations in the

                                                IJCAI-07
                                                   219We use tp(C0, T ) to denote the set of all types for C0 and T . the extended quasistates assigned to children nodes must sat-
To describe the concept memberships of a domain element in isfy the qualiﬁed number restrictions of the parent node.
  S5
all  worlds, we use quasistates:                      Deﬁnition 4 (Matching Successor). Let W and Γ be sets,
Deﬁnition 2 (Quasistate). Let W be a set and f : W →  x/∈ Γ,andlete be a function mapping each y ∈ Γ∪{x} to an
tp(C0, T ) a function such that for all w ∈ W we have: extended quasistate witness (W, fy,gy,hy) such that gy = fx
                                                               ∈ Γ          (  Γ     )
       3C  ∈ f(w) iff C ∈ f(v) for some v ∈ W .       for all y   . We call  W,  ,x,e a matching successor
                                                      witness if for all w ∈ W :
We call the pair (W, f ) a quasistate witness and the set
                                                            (        ) ∈   ( )       ∈   ( )   Inv( ) ≤
{f(v) | v ∈ W } a quasistate.                           1. if   nrC       fx w  and C   gx w  or    r
                                                          hx(w) then |{y ∈ Γ | r ≤ hy(w),C ∈ fy(w)}| ≥ n,
To check whether a set of types {t1,...,tn} forms a valid
                                                            (      ) ∈   ( )     |{  ∈ Γ |  ≤   ( )   ∈
quasistate, we can simply check whether the pair (W, f ), with 2. if nrC fx w ,then y      r   hy w ,C
                                                            (  )}| ≥  − 1
W  = {t1,...,tn} and f the identity function, is a quasistate fy w  n    ,
witness. Note, however, that each quasistate has many wit- 3. if ( nrC) ∈ cl(T ,C0), C ∈ gx(w),andInv(r) ≤
nesses.                                                   hx(w),and|{y ∈ Γ | r ≤ hy(w),C ∈ fy(w)}| ≥ n − 1
  Quasistates only abstract concept membership of a partic- then ( nrC) ∈ fx(w),
ular object in all worlds. To capture the role structure relating
                                                        4. if ( nrC)    ∈  cl(T ,C0) and |{y ∈ Γ  | r ≤
objects adjacent in some S5 world in a given S5ALCQI model,
                                                          hy(w),C  ∈ fy(w)}| ≥ n then ( nrC) ∈ fx(w).
we develop the notion of a extended quasistate. Ultimately, in
the desired tree abstraction these two objects turn into a par- The pair (Q(W, fx,gx,hx), {Q(W, fy,gy,hy) | y ∈ Γ}) is
ent and a child nodes; the child is then labeled by the extended called a matching successor,.
quasistate in question. Note the similarity to handling inverse We say that two matching successor witnesses are equiva-
roles using the double blocking technique used in tableau al- lent if they deﬁne the same matching successor.
gorithms for ALCQI [Horrocks et al., 1999].           The intuition behind this deﬁnition is as follows: the object
Deﬁnition 3 (Extended Quasistate). Let W beaset,(W, f ) x stands for a parent node (described by fx) and the set of
                                                             Γ
and (W, g) quasistate witnesses, and h : W → rol(C0, T ) ∪ objects for all its children (described by fy). The extended
                                                −
{2ε} for ε ∈ rol(C0, T ) such that, for every r ∈ NR ∪{s | quasistates are chosen in a consistent way w.r.t. the informa-
s ∈ NR}:                                              tion that is represented twice: the parent part of the extended
                                                      quasistates labeling the children matches the quasistate at-
 1. if h(w)=3r,forsomew     ∈  W ,thenh(v)=r,for                                    =            ∈  Γ
          ∈                                           tached to the parent itself (i.e., gy fx for all y ). A
    some v  W  ;                                      matching successor witness is then a witness such that the ex-
       ( )=               ∈               ( )=3
 2. if h w   r,forsomew     W , then either h v  r    tended quasistates attached to x and to all elements of Γ can
       ( )=           ∈
    or h v   r,forallv  W ;                           be used to build a part of a model of C0 and T without violat-
 3. it is not the case that h(w)=r for all w ∈ W ;    ing any qualifying number restrictions. Also, the domain of
 4. if h(w)=2r,forsomew    ∈  W ,thenh(v)=2r,for      such a model is eventually built from the objects {x}∪Γ.As
    all v ∈ W .                                       already mentioned, matching successors are the most crucial
                                                                               (   T )
We call (W, f, g, h) an extended quasistate witness and the ingredient to the deﬁnition of C0, -trees.
set of triples Q(W, f, g, h)={(f(v),g(v),h(v)) | v ∈ W } Deﬁnition 5 ((C0, T )-tree). Let τ =(N,E,G,n0) beatu-
an extended quasistate.ElementsofQ(W, f, g, h) are called ple such that (N,E) is a tree with root n0 ∈ N and G a
extended types and etp(C0, T ) denotes the set of all extended mapping of τ’s nodes to extended quasistates. Then τ is a
types for C0 and T . We say that Q(W, f, g, h) realizes a (C0, T )-tree if:
               ∈  (  )            ∈
concept C if C   f w   for some w   W  ; we say that    1. G(n0) realizes C0;
Q(W, f, g, h) is root if h(w)=2ε for all w ∈ W .
                                                        2. G(n0) is root;
Intuitively, given a node labeled with the extended quasistate 3. for all n ∈ N, the pair (G(n), {G(m) | (n, m) ∈ E}) is
       (        )                   (    )
witness W, f, g, h , the quasistate witness W, f describes a matching successor.
the node which is labeled with the extended quasistate, (W, g)
describes the predecessor of this node, and h describes the Note that the matching successor witnesses induced by the
                                                      matching successors consisting of the extended quasistates
role connections between the two nodes. Conditions 1 to 4                                   (   T )
ensure that the mapping h assigns roles in a way that respects associated with a node and its children in the C0, -tree do
the semantics of modal operators. To fully understand these not necessarily share the same set W . This poses a difﬁculty
                                      3  ≤   ≤  2     when showing that (C0, T )-trees are proper abstractions of
conditions, note that we assume an ordering r r  r                    T
between roles which allows us to use a single role in the ex- models of C0 and : when we want to convert such a tree
tended quasistate to capture all the implied roles. The dummy into an interpretation, we need to decide on a common set of
role ε is intended only for use with the root object, which does worlds W . This difﬁculty can be overcome using the follow-
not have a predecessor.                               ing lemma, which shows that we can assume that all extended
  We now introduce the concept of a matching successor. quasistate witnesses are based on sets of world W of identical
The main difﬁculty is to properly capture the effects of qual- cardinality.
iﬁed number restrictions ( nrC) which constrain the pos- Lemma 6 (Compatible Matching Successor). There exists an
sible combinations of extended quasistates in (C0, T )-trees: inﬁnite cardinal α such that the following holds: for every

                                                IJCAI-07
                                                   220                                   xy1     y2    ···   yl yl+1  ··· ym−1  ym    ···   yn yn+1  ··· ∈Γ
                              w   νx    ν1 ν2          νl νl+1      νm−1  νννn+1               ···
                                                        ⏐
                                                        
                                                          world w is replaced by worlds {v1,...,vl}

                              v1  νx    ν1 ν           ν  νl+1      νm−1

                              v2  νx    ν  ν2 νννl+1                νm−1
                                   .            .                .
                                   .            .                .

                              vl  νx    ν           ν  νl νl+1      νm−1

                                      Figure 1: Reducing the size of a Matching Successor Witness.

            matching successor witness (W, Γ,x,e), there is a matching To prove Lemma 8, we need to construct the required slim
            successor witness (W , Γ,x,e) such that             matching successor witness (W , Γ,x,e) from (W, Γ,x,e).
                                                                                             
              • (   Γ    )    (   Γ    )                        To this end, we choose a set Γ ⊆ Γ and a function μ that
                 W,  ,x,e and  W ,  ,x,e deﬁne the same matching                           ( )           ∈ Γ
                successor and;                                    associates an extended type μ y with every y such that
                                                                    •   ( ) ∈ (           )
              • for all y ∈ Γ ∪{x}   and all extended types ν ∈       μ y    Q W, fy,gy,hy and
                                                                                                         
                Q(W  ,fy,gy,hy), we have:                           • if ν ∈ Q(W, fz,gz,hz) for some z ∈ Γ \ Γ then we
                                                                                 
                                                                  have |{y ∈ Γ | μ(y)=ν}| = maxC0,T +1.
                   |{w ∈ W  | (fy(w),gy(w),hy(w)) = ν}| = α.
                                                                  The function μ tells us which objects in Γ can, in every par-
            Intuitively, the Lemma is proved by replicating elements of ticular world w, be used to fulﬁll number restrictions that
            W  a sufﬁcient number of times. When all extended quasis- have been originally fulﬁlled by (extended types of) objects
                            (   T )                                      
            tate witnesses for a C0, -tree are based on a set of worlds in Γ \ Γ .
            of identical cardinality, we can connect these extended qua- The set Γ, in turn, is the basis to constructing a slim wit-
            sistate witnesses to a model by simply permuting the set W ness as it can always be chosen in a way such that |Γ|≤
            in an appropriate way. In this way, we can prove the difﬁcult                      n
                                                                  |etp(C0, T )|·(maxC0,T +1) ≤ n·2 ·(maxC0,T +1). Finally,
            right-to-left direction of the following theorem.     for a witness in which |Γ| is bounded as above, we can simply
            Theorem 7. C0 is satisﬁable w.r.t. T iff a (C0, T )-tree exists. eliminate superﬂuous worlds of W to obtain a slim witness.
                                                                                                                   2n
                                                                  This can be done by keeping at most |etp(C0, T )|≤n · 2
                                                                                          { }∪Γ
            3.2  Decidability and Complexity of S5ALCQI           worlds for each element of x    ; those worlds can be
            We now develop an effective procedure to check whether chosen from W independently.
                                                                    The crucial step of the actual construction is illustrated
            there exists a (C0, T )-tree for a given concept C0 and TBox
                                                                  in Figure 1: consider a particular world w. In the origi-
            T . We also show that the procedure runs in 2-EXPTIME.
            Since it is easy to see that the number of all possible match- nal witness the number restrictions in the parent object are
                         (    )                                   fulﬁlled, e.g., by the objects yl+1,...,yn with ym,...,yn
            ing successors q, Q is 3-exponential, we cannot simply                      Γ
            generate all of them and check whether they give rise to a falling outside of the set . Assume ﬁrst, for simplicity,
            (   T )                                    (   T )    that the objects ym,...,yn have been assigned a common ex-
             C0,  -tree. Instead, we start by showing that if a C0, -                                    ∈ Γ
            tree exists, then there is one with slim matching successors tended type ν. We then pick objects y1,...,yl such that
                                                                  μ(y1)=···   = μ(yl)=ν.Sincen    − m  +1  ≤ maxC0,T
            witnesses only, i.e., all matching successors in this tree are                                          
                                                                  we can always ﬁnd l ≤ maxC0,T +1of such objects in Γ
            witnessed by matching successor witnesses whose size is at                                              
                                                    max      =    such that l = n − m +2; follows from the deﬁnition of Γ .
            most exponential. In the rest of the paper, let C0,T
                                                                  Thus we can transform the old witness to a new one as de-
                             m,andn  = |cl(C0, T )|.
              (mrC)∈cl(C0,T )                                    picted in Figure 1. Whenever more than one extended type is
            Lemma 8.  Let (W, Γ,x,e) be a matching successor witness associated with ym,...,yn in the original witness, we simply
            for a matching successor (q, Q). Then there is a Q ⊆ Q and pick objects in Γ with an appropriate matching μ value and
            a matching successor witness (W , Γ,x,e) for (q, Q) such proceed similarly to the above example. To construct a slim
                         2n                                                                          
            that: |Γ |≤n · 2 · (maxC0,T +1), and |W |≤(1 + |Γ |) · matching successor witness we ﬁx the set Γ and apply this
            n · 22n.                                              transformation to all w ∈ W independently. Note that the
                                                                  transformation preserves quasistates associated with all ob-
            We call a matching successor witness slim if it satisﬁes the Γ         S5
            cardinality bounds given in the above Lemma. We call a jects in (hence all modalities are preserved) and that all
            matching successor slim if it has a slim matching successor number restrictions are met.
            witness.                                              Lemma 9.  There is a procedure that runs in 2-EXPTIME to

                                                            IJCAI-07
                                                               221generate all slim matching successors.                done in 2-EXPTIME by Lemma 9. Since emptiness of loop-
We simply use a brute-force approach to enumerate all can- ing automata can be checked in polynomial time, the overall
                                                                                       S5
didates for slim matching successor witnesses up to exponen- decision procedure for satisﬁability in ALCQI runs in 2-
tially sized Γ and W and test for satisfaction of the conditions EXPTIME. This holds regardless of whether numbers inside
in Deﬁnition 4.                                       number restrictions are coded in unary or in binary.
  As the next step, we show that whenever a (C0, T )-tree ex- Theorem 14. Satisﬁability in S5ALCQI w.r.t TBoxes is de-
ists, then there is a (C0, T )-tree constructed solely from slim cidable and 2-EXPTIME-complete.
matching successors, i.e., (G(n), {G(m) | (n, m) ∈ E}) is
                                                      The lower bound in Theorem 14 is obtained by reducing the
a slim matching successor for all n ∈ N. We call such a
                                                      word problem of exponentially space-bounded, alternating
(C0, T )-tree slim.
                                                      Turing machines. Since the reduction does not use inverse
Lemma 10.  For any C0 and T , a slim (C0, T )-tree exists role and qualifying number restrictions, we also obtain a 2-
          (   T )
whenever a C0,  -tree exists.                         EXPTIME  lower bound for satisﬁability on S5ALC .
Since the children in a slim matching successor are a subset Corollary 15. Satisﬁability in S5ALC w.r.t TBoxes is decid-
of the children in the original matching successor, it is easy able and 2-EXPTIME-complete.
to convert an arbitrary (C0, T )-tree into a slim one.
  Finally, to check whether a slim (C0, T )-tree exists we de-
                         A
ﬁne a looping tree automaton C0,T that accepts exactly the 4 Capturing Conceptual Schemata
slim (C0, T )-trees. To check satisﬁability of C0 w.r.t. T ,it
                                                      It is known that the TDL ALCQIUS is able to capture the
then sufﬁces to check whether this looping automaton accepts
                                                      temporal conceptual model ERVT, a TER model that sup-
at least one such tree. This observation yields a 2-EXPTIME
                                                      ports timestamping and evolution constraints, IS-A links, dis-
decision procedure for satisﬁability in S5ALCQI as the empti-
                                                      jointness, covering, and participation constraints [Artale et
ness problem for looping tree automata is decidable in time
                                                      al., 2003].InERVT, timestamping is implemented using
linear in the size of the automaton [Vardi and Wolper, 1986].
                                                      a marking approach as sketched in the introduction. The
  We use extended quasistates as states of the automaton
                                                      translation of atemporal constructs is similar to the one us-
AC0,T and slim matching successors to deﬁne the transition
                                                      ing ALCQIUS;see[Artale  et al., 2003] for full details and
relation. Since C0, T -trees do not have a constant branch-
                                                      examples. In the following we brieﬂy recall the translation
ing degree, we use amorphous looping automata which are
                                                      of atemporal constructs and then show that S5ALCQI is sufﬁ-
similar to the automata model introduced in [Kupferman and
                                                      cient to capture the fragment of ERVT that has timestamping
Vardi, 2001] except that in our case the branching degree is
                                                      as the only temporal construct.
bounded and thus the transition relation can be represented
                                                        When translating ERVT to TDLs, entities —denoting
ﬁnitely in a trivial way.                                                                     E
                                                      sets of abstract objects—are mapped into concept names AE
Deﬁnition 11 (Looping Tree Automaton). A looping tree au- and attributes P —denoting functions associating mandatory
tomaton A =(Q, M, I, δ) for an M-labeled tree is deﬁned concrete properties of entities—are mapped into roles names
                                      ⊆
by a set Q of states, an alphabet M,asetI Q of initial rP interpreted as total functions, which is enforced by the
                           ⊆   ×    × 2Q
states, and a transition relation δ Q M  .            GCI (= 1   rP ).InS5ALCQI  , unrestricted entities and
Let T =(N,E,,r)   be a tree with root r ∈ N and label- attributes need no special treatment. Properties of snapshot
ing function  : N → M.Arun   of A on T is a mapping  or temporary entities and attributes are captured as follows:
γ : N →   Q such that γ(r) ∈ I and (γ(α),(α), {γ(β) |
                                                              AE   2AE          snapshot entity
(α, β) ∈ E}) ∈ δ for all α ∈ N. A looping automaton A
                                                              AE   3¬AE         temporary entity
accepts those labeled trees T for which there exists a run of
                                                              AE  ∃2rP  .      snapshot attribute
A on T.
                                                              AE  ∀2rP  .⊥      temporary attribute
We construct an automaton for C0 and T as follows.
                                                      Relationships—n-ary relations between abstract objects—are
Deﬁnition 12. Let C0 be a concept and T an S5ALCQI    translated using reiﬁcation: each n-ary relationship R is
                          A      =(         )
TBox. The looping automaton C0,T    Q, M, I, δ is de- translated into a concept name AR with n global role names
ﬁned by setting M = Q  = etp(C0, T ), I := {q ∈ Q |                                           I,w
                                                      r1,...,rn. Intuitively, for each instance x ∈ AR , the tuple
q realizes C0 and q is root},andδ to the set of those tuples                  I,w
                      Q                               (y1,...,yn) with (x, yi) ∈ r is a tuple in the relationship
(q, q, Q) such that Q ∈ 2 and (q, Q) is a slim matching                       i
                                                      R at a time point w. To ensure that every instance of AR gives
successor for C0 and T .
                                                      rise to a unique tuple in R,weuseGCIs(= 1  ri ),
The following Lemma states that the obtained looping au- for 1 ≤ i ≤ n. To capture snapshot relationships, we assert
tomata behaves as expected.                           AR    2AR, while for temporary relationships, we assert
                                                           3¬
Lemma 13.  τ is a slim (C0, T )-tree iff τ is accepted by AR   AR in the TBox.
AC ,T .                                                 Note that the latter GCIs do not fully capture tempo-
   0                                                  rary relationships. As an example, consider the interpreta-
It is easily seen that there are at most 2-EXP many extended                                     I,w1
                                                      tion I =({w1,w2},  I), with Δ={a, a  ,b,c}, A    =
quasistates and thus AC ,T has at most 2-EXP many states.                                         R
                    0                                 { }   I,w2 =  { }  I,w1 = {(   )}  I,w1 =  {(  )}
To construct the transition function of the automaton, we a , AR     a , r1        a, b , r2       a, c ,
                                                       I,w2               I,w2     
need to construct all slim matching successors which can be r1 = {(a ,b)},andr2 = {(a ,c)}. Although the GCI

                                                IJCAI-07
                                                   222