                           Intelligent Multimedia Indexing and Retrieval 
                 through Multi-source Information Extraction and Merging* 


                Jan Kuper§, Horacio Saggion^ Hamish Cunningham^ Thierry Declerck*, 

                 Franciska de Jong§, Dennis Reidsma^, Yorick Wilks*, Peter Wittenburg8 

   5 Department of Computer Science, University of Twente, The Netherlands; * Department of Computer Science, 
      University of Sheffield, Sheffield, UK; *DFKI GMbH, Saarbruecken, Germany; "Max Planck Institute for 
   Psycholinguistics, Nijmegen, The Netherlands email: jankuper@cs.utwente.nl, saggion@dcs.shef.ac.uk 

                        Abstract                               such as automatic indexing [De Jong et al, 2000], classifi•
                                                               cation [Sable and Hatzivassiloglou, 1999], or understanding 
     This paper reports work on automated meta-data            [Srihari, 1995] of visual records. 
     creation for multimedia content. The approach re•           In this paper, we present an integrated solution to the 
     sults in the generation of a conceptual index of 
                                                               problem of multimedia indexing and search: the MUM1S1 
     the content which may then be searched via se•            concept. Our solution consists of using information ex•
     mantic categories instead of keywords. The nov•           tracted from different sources (structured, semi-structured, 
     elty of the work is to exploit multiple sources of        free, etc.), modalities (text, speech), and languages (English, 
     information relating to video content (in this case       German, Dutch) all describing the same event to carry out 
     the rich range of sources covering important sports       data-base population, indexing, and search. The novelty of 
     events). News, commentaries and web reports cov•          our approach is not only the use of these 'heterogeneous' 
     ering international football games in multiple lan•       sources of information but also the combination or cross-
     guages and multiple modalities is analysed and the        source fusion of the information obtained from the separate 
     resultant data merged. This merging process leads         sources. Single-document, single-language information ex•
     to increased accuracy relative to individual sources.     traction is carried out by independent systems that share a 
                                                               semantic model and multi-lingual lexicon of the domain. The 
1 Introduction                                                 results of all information extraction systems are merged by a 
                                                               process of alignment and rule-based reasoning that also uses 
Multimedia repositories of moving images, texts, and speech    the semantic model. In the rest of this paper we describe in 
are becoming increasingly available. This together with the    detail the context of the project, and each of the modules in•
needs for 'video-on-demand' systems requires fine-grain in•    volved in the automatic derivation of annotations. However, 
dexing and retrieval mechanisms allowing users access to       the emphasis is on the merging component. 
specific segments of the repositories containing specific types 
of information. Annotation of video is usually carried out by  2 The MUM1S Project 
humans following strict guidelines. Video material is usually 
annotated with 'meta-data' such as names of the people in•     In MUM1S various software components operate off-line to 
volved in the production of the visual record, places, dates,  generate formal annotations from multi-source linguistic data 
and keywords that capture the essential content of what is     in Dutch, English, and German to produce a composite time-
depicted. Still, there are a few problems with human annota•   coded index of the events on the multimedia programme. The 
tion. Firstly, the cost and time involved in the production of domain chosen for tuning the software components and for 
fine-grained semantic "surrogates" of the programme is ex•     testing is football. 
tremely high; secondly, humans are rather subjective when        A corpus of collected textual data in the three languages 
assigning descriptions to visual records; and thirdly, the level was used to build a multi-lingual lexicon and shared ontol•
of annotation required to satisfy a user's needs can hardly be ogy of the football domain. Based on this shared model, 
achieved with the use of mere keywords. In order to tackle     three different off-line Information Extraction components, 
these problems, indexing methods based on image process•       one per language, were developed (see section 3). They are 
ing have been developed [Chang et al, 1998]. Content-based     used to extract the key events and actors from football re•
indexing and retrieval of visual records is based on features  ports and to produce XML output. A merging component or 
such as colour, texture, and shape. Yet visual understanding   cross-document co-reference mechanism has been developed 
is not well advanced and is very difficult even in closed do•  to merge the information produced by the three IE systems 
mains. As a consequence, various ways to explore the use       (see section 4). Audio material is being analysed by Phicos 
of collateral linginstic material have been studied for tasks  [Steinbiss et al, 1993], an HMM-based recognition system, 

   "Funded by EC's 5th Framework HLT Programme under grant        1 Multimedia Indexing and Searching Environment, see 
number 1ST-1999-10651                                          http://parlevink.cs.utwente.nl/projects/mumis/ 


INFORMATION EXTRACTION                                                                                               409                                                               ing events under single time stamps. Another very valuable 
                                                              source for the generation of the annotations are the spoken 
                                                              transcriptions that, even with the many errors they contain, 
                                                              still provide exact temporal information. 

                                                              3 Extracting Information from 
                                                                   Heterogeneous Sources 
                                                              Information extraction is the process of mapping natural lan•
                                                              guage into template-like structures representing the key (se•
                                                              mantic) information from the text. These structures can be 
                                                              used to populate a database, used for summarization pur•
                                                              poses, or as a semantic index as in our approach. Key to the 
                                                              information extraction process is the notion of "domain", sce•
                                                              nario or template that represents what information should be 
                                                              extracted. IE has received a lot of attention in the last decade, 
                                                              fuelled by the availability of on-line texts and linguistic re•
 Table 1: Different accounts of the same event in different lan• sources and the development of the Message Understanding 
 guages                                                       Conferences [Grishman and Sundheim, 1996]. Traditionally, 
                                                              IE applications have tended to concentrate on a small number 
                                                              of events (typically one), MUMIS addresses the challenge of 
 in order to obtain transcriptions of the fooiball commentaries multi-event extraction. 
 (spontaneous speech). It uses acoustic models, word-based       Multi-lingual IE has been tried in the M-LaSIE system 
 language models (unigram and bigram) and a lexicon. For      [Gaizauskas et al, 1997], where the same underlying com•
 Dutch, English, and German different recognition systems     ponents and a bi-lingual dictionary are used for two different 
have been developed (i.e., different phone sets, lexicons, and languages (English and French). MUMIS differs from that 
language models are used).                                    system in that it operates with three different off-line infor•
   JPEG keyframe extraction from MPEG movies around a         mation extraction components, one per language, that pro•
set of pre-defined time marks - result of the information ex• duce the same "language-free" representation. In this paper 
traction component - is being carried out to populate the     we give only a brief description of the English and German 
database. The on-line part of MUMIS consists of a state of    IE systems. 
the art user interface allowing the user to query the multime•
dia database. The interface makes use of the lexica in the    3.1 Extraction from English Sources 
three target languages and domain ontology to assist the user 
                                                              IE from English sources is based on the combination of 
while entering his/her query. The hits of the query are indi•
                                                              GATE    components for finite state transduction [Cunning•
cated to the user as thumbnails in the story board together with    2
                                                              ham et al., 2002] and Prolog components for parsing and 
extra information about each of the retrieved events. The user 
                                                              discourse interpretation. The components of the system are: 
can select a particular fragment and play it. 
                                                              tokeniser, segmenter, gazetteer lookup (based on lists of 
                                                              entities of the domain), semantic tagger, shallow pronom•
2.1 Domain and Ontology 
                                                              inal co-referencer, part-of-speech tagger, lemmatiser, chart 
An analysis of the domain and a user study led us to propose  parser, discourse interpreter (ontology-based co-referencer), 
31 types of event for a football match {kick-off, substitution, and template extractor. These components are adapted and 
goal, foul, red card, yellow card, etc.) that need to be identi• combined to produce four different system configurations for 
fied in the sources in order to produce a semantic index. The processing different text-types and modalities (transcriptions, 
following elements associated with these events are extracted: formal texts, semi-formal texts, and free texts). The analy•
players, teams, times, scores, and locations on the pitch.    sis of formal texts and transcriptions is being done with finite 
   An ontology has been developed for these events and their  state components because the very nature of these linguistic 
actors, it contains some 300 concept nodes related as an 'is-a' descriptions make appropriate the use of shallow natural lan•
hierarchy. The link between the concepts and the three lan•   guage processing techniques. For example, in order to recog•
guages consists of a flexible XML format which maps con•      nise a substitution in a formal text it is enough to identify 
cepts into lexical entries.                                   players and their affiliations, time stamps, perform shallow 
   Sources used for information extraction are: formal texts, co-reference and identification of a number of regular expres•
tickers, commentaries, and audio transcriptions (see Table 1). sions to extract the relevant information. In our system, reg•
Ticker reports are particularly important in the generation of ular expressions operate on annotations (not on strings) and 
formal annotations. These texts are a verbal account of events produce semantic information. We make use of the Java An•
over time stamps. They also follow a specific text structure  notation Pattern Engine (JAPE) formalism [Cunningham et 
consisting of a 'ticker header', in which information about   al., 2002] to code our regular grammar. Below, we present 
lists of players and the result of the game is usually stated, 

and 'ticker sections' grouping together sentences describ•       2GATE is a free architecture for natural language engineering. 


410                                                                                       INFORMATION EXTRACTION one example of the use of JAPE that accurately identify sub•
stitutions in speech transcriptions: 


Complex linguistic descriptions are fully analysed because 
of the need to identify logical subjects and objects as well 
as to solve pronouns and definite expressions (e.g., "the 
Barcelona striker") relying on domain knowledge encoded in 
the ontology of the domain. Domain knowledge establishes, 
for example, that the two players involved in a substitution 
belong to the same team. This semantic constraint is used 
in cases such as "he is replaced by Ince" to infer that the 
antecedent of the pronoun "he" belongs to the "English" 
team (because "Ince" does).                                             Table 2: Semantic annotation in SCHUG 
   Logic-based information extraction rules operate on log•
ical forms produced by the parser and enriched during dis•
course interpretation. They rely on the ontology to check con• this particular team can be extracted from additional texts or 
straints (e.g., type checking, ontological distance, etc.). The meta-data. In this way, information not present in the text di•
following logic-based rule is used to extract the participants rectly can be added by additional information extraction and 
of a substitution when syntactic and semantic information is   reasoning. 
available:                                                       Since formal texts require only little linguistic analysis, but 
                                                               rather an accurate domain-specific interpretation of the jargon 
                                                               used, a module has been defined within SCHUG, which in a 
                                                               first step maps the formal texts onto an XML annotation, giv•
                                                               ing the domain semantic of the expressions in the text (the 
Msubj' and iobj represent the logical subject and object       approach taken for formal texts is similar to the one followed 
of an event. Note that, contrary to the regular case, the      by the English IE system). In a second step SCHUG merges 
'lsubj' and iobj' relations, being semantic in nature, are long all the XML annotated formal texts about one game. Those 
distance relations.                                            merged annotations are generated at a level that requires only 
                                                               little linguistic analysis, and basically reflect domain specific 
3.2 Extraction from German Sources                             information about actors and events involved in the text. The 
The German IE system is based on an integrated set of lin•     SCHUG module applied at this level also extracts meta-data 
guistic tools called SCHUG: Shallow and Chunk based Uni•       information: name of the game, date and time of the game, in•
fication Grammar [Declerck, 2002]. The chunking proce•         termediate and final scores etc. This is quite important, since 
dure of SCHUG consists of a rule-based sequence of cas•        the meta-data can guide the use of the annotations produced 
cades (based on the work by [Abney, 1996]), which pro•         so far for supporting linguistic analysis and information ex•
duces a rich linguistic representation, including grammatical  traction applied to more complex documents. 
functions and resolution of co-reference and ellipsis. In or•
der to detect these accurately, an analysis of the clauses of  4 Merging 
a sentence is required. Clauses are subparts of a sentence 
that correspond to a (possibly complex) semantic unit. Each    Merging, also known as cross-document co-reference [Bagga 
clause contains a main verb with its complements (grammat•     and Baldwin, 1999], is the process of deciding whether two 
ical functions) and possibly other chunks (modifiers).         linguistic descriptions from different sources refer to the 
  Applied to the football domain, SCHUG inspects the com•      same entity or event. The merging component in MUMIS 
mon MUMIS ontology and enriches the linguistic annotation      combines the partial information as extracted from various 
produced with domain-specific information encoded in the       sources, such that more complete annotations can be ob•
ontology. Below (see Table 2) we show one example of the       tained. Radev and McKeown [1998] developed a knowledge-
semantic annotation generated by SCHUG when applied to         based multi-document summarization system based on in•
an on-line ticker text (game England-Germany). Here, vari•     formation extraction and merging of single 'terrorist' events. 
ous relations (player, location, etc.) and events {free-kick, fail The novelty of our approach consists in applying merging to 
to score a goal) that are relevant to the football domain are  multiple events extracted from multiple sources. 
recognised.                                                      As is to be expected, complete recognition of events in nat•
                                                               ural language sentences is extremely difficult. Often, events 
Some relations are not explicitly mentioned, but can still be  will be only partially recognised. The merging component of 
inferred by the MUMIS system. For example, the team for        the MUMIS project aims to fill in missing aspects of events 
which "Ziege" is playing can be inferred from the ontological  with information gathered from other documents. For exam•
information that a player is part of a team and the instance of ple, the Dutch information extraction system recognised in 


INFORMATION EXTRACTION                                                                                               411  document A on the match Netherlands-Yugoslavia from the 
 European championships 2000 that a save was performed in 
 the 31st minute. In addition, it recognised the names of two 
 players: Van der Sar (the Dutch goalkeeper) and Mihajlovic 
 (a Yugoslavian player), but it could not figure out which of  Figure 1: Two document alignment. Vertical lines denote 
 these two players performed the save. In document B it        documents, numbers are time stamps, thin lines indicate pos•
 recognised a free-kick in the 30th minute, and the names of   sible bindings, thick lines denote strongest bindings. 
 the same two players. Again, it did not succeed in finding out 
 which player took the free-kick. 
   The fact that the same two players are involved, plus the 
 small difference between the time-stamps, strongly suggests 
 that both descriptions are about the same event in reality. The 
 merging part of the MUM1S project matches these partial data 
together, and concludes that it was Mihajlovic who took the 
free-kick, followed by a save by Van der Sar. 
   The merging component consists of several parts which 
will be described in more detail below. 

4.1 Scenes 
Given the example above, it is clear that matching together in•
dividual events from two different documents is not the right 
approach: a save event cannot be matcled with a free-kick 
event, they are two totally different events. Besides, it is clear 
that players' names will play an important role in the match•  Figure 2: Finding complete subgraphs. The graph as a whole 
ing of information from one document with information from     is found by the alignment process. Inside 3 complete sub•
another document. In order to take players' names into con•    graphs are found (two triangles indicated by the thick lines, 
sideration, an unknown event was introduced, such that if it   and one single node). 
was not clear what a player did, this could be represented by 
letting that player perform this unknown event (the informa•
tion extraction systems provide this information). 
   Now the event is still the fundamental concept, but the       In order to choose the best matchings, the algorithm starts 
merging process aims at matching together groups of events     by selecting two scenes s\ and s2 such that the binding be•
instead of single events. Such a group of events is called a   tween s1 and S2 is (one of) the strongest. In general, such 
scene. The author of a text is considered as a "semantic fil•  a choice will remove other bindings, in particular the bind•
ter", which determines which events should be taken together   ings between .si and .s2 with other scenes. Since these two 
in the same scene. If events are mentioned in the same text    describe the same fragment of the game, scenes before s1 can 
fragment, they belong to the same scene. In the ticker doc•    now no longer match scenes after s2 (and vice versa). That 
uments this does not give rise to ambiguities, since their text is to say, bindings which "cross" the matching of s1 and s2 
fragments are clearly distinguished from each other (see Ta•   are removed. Thus the possible bindings are cut in two parts, 
ble 1).                                                        and the algorithm continues recursively with both halves, un•
                                                               til all choices have been made. This two document algorithm 
4.2 Two Document Alignment                                     is applied to every pair of documents. 
The merging algorithm compares all the scenes extracted 
from document A with all the scenes extracted from docu•       4.3 Multi Document Alignment 
ment B, and examines whether or not a scene from docu•
ment A might be matched with a scene from document B.          The next step is to join connected scenes from various docu•
There are several aspects to be taken into account: players in• ments together. Start with a set consisting of one (arbitrary) 
volved in the scenes, distance between time stamps, whether    scene, and extend this set by those scenes which are con•
the scenes contain the same events or not, etc.                nected to the starting scene. Repeat this for all the scenes 
  A scene from document A may match more than one scene        added to the set until no further extension is found. This set of 
from document B (see Figure 1).                                scenes, together with the bindings between the scenes (chosen 
  The strength of a matching can be calculated in different    by the two document algorithm) naturally form a connected 
ways, and it will not be surprising that the number of players graph. 
involved in both scenes will be of great influence. This in•     Repeat this graph building procedure for the remaining 
fluence is that great, that taking only the number of common   scenes, until all scenes are included in a graph. Notice, that 
players' names as a measure of the strength of a binding, gave such a graph may consist of one scene only. Notice also, that 
the best results. We restricted matching of scenes to those    a graph may contain more scenes than there are documents, 
scenes which were not further than (arbitrarily) five minutes  since scenes may be connected through a sequence of two 
apart.                                                         document matches. 


412                                                                                         INFORMATION EXTRACTION 4.4 Complete Sub-graphs 
Ideally, a graph should be complete, expressing that every two 
scenes in the graph do match, and thus all scenes do contain 
some common information. That is to say, the scenes in a 
complete graph are all about the same fragment during the 
football game which is described in the documents. However, 
in practice not every graph which results from the procedure 
above, is complete (see Figure 2). 
   Scenes may partially overlap, and thus give rise to se•
quences of connections where the first and the last arc no 
longer connected. We isolate the strongest complete sub•
graphs from every non-complete graph, since such a sub•
graph describes one fragment in reality. A given (non-
complete) graph is divided into its strongest complete sub•
graphs by going through all the bindings in the graph, ordered Figure 3: Merging. Bottom left is the result of merging all 
by their strength (starting with the strongest one), and adding information in all nodes of the graph. Bottom right is the 
scenes and edges to a sub-graph whenever possible without      remaining information that could not be decided upon (in this 
violating the completeness of this sub-graph. If that is not   case nothing). 
possible, a new sub-graph is started, and some bindings may 
be removed. The final result is a set of complete graphs of 
matching scenes from many documents, such that the scenes      chosen semantics in MUMIS are not the same. For example, a 
inside a graph describe the same fragment in reality.          clearance and a save are two different events according to the 
                                                               MUMIS semantics, but an author may well use these terms 
4.5 Rules                                                      in a way different from the MUMIS semantics. Therefore 
Consider the example given before, about the save event and    the relationships between such concepts are expressed in an 
the free-kick event, with the players Van der Sar and Miha-    ontology, such that rules may use sub-typing or super-typing 
jlovic. These scenes are now in the same graph, and thus may   relationships between concepts. 
be combined (see Figure 3). However, not every combina•
tion will be correct, for example, Mihajlovic and Van der Sar  4.6 Scenarios 
will not both take the free-kick. Also, it will not be correct After merging the scenes extracted from the various docu•
to let Van der Sar (the Dutch keeper) take the free kick, and  ments into more complete scenes, the order of the events 
Mihajlovic perform the save. In order to combine this partial  within a scene may be incorrect with respect to the order as 
information into scenes containing complete events, rules are 
                                                               it was in reality. The merging process itself does not take the 
needed. In the MUMIS project several kinds of rules, all ex•
                                                               ordering of events into account, and besides, authors often 
pressing some domain knowledge, have been developed. A 
                                                               mention events in the opposite order. For example, a player 
first kind are the event internal rules, for example, rules say•
                                                               scores after a corner - but the scoring is mentioned first. 
ing that the two players involved in a substitution event be•
                                                                 Based on the original texts in the source documents, a se•
long to the same team, or that a keeper typically will not take 
                                                               ries of scenarios is extracted, describing typical orders in 
a corner. 
                                                               which events occur [Schank and Abelson, 1977]. 
   A second kind of rule takes into account the role of the 
teams in the fragment, i.e., whether a team is attacking or 
                                                               4.7 Evaluation 
defending at that moment. To determine whether a team is 
attacking or defending, all players involved in the scene are  Given the limited availability of background information on 
checked for their normal position in the field. Then events    players (to which team they belong, on what position they 
arc characterised as offensive events (such as corner, shot on play, etc.), the merging component could only be tested in a 
goal), defensive events (save, clearance), and neutral events  case study. The match Netherlands-Yugoslavia from the Eu•
(throw-in, yellow card). The second kind of rule makes sure    ropean championships in 2000 to perform such a case study. 
that offensive events are performed by players from the at•    Based on this example, the results of the merging approach 
tacking team, and defensive events are combined with payers    are very promising. 
from the defending team.                                         The result of the alignment process applied to this match 
  A third kind of rule makes sure that players will not per•   produced 63 complete graphs, of which 28 consist of only 
form impossible combinations of events, e.g., the player who   one node (a scene), containing information from one source 
takes a corner will (unless he's very fast) not deliver a shot- text only. Looking at the original texts, only five of these one-
on-goal as well.                                               scene graphs might have been combined with other graphs, 
  To apply these rules, a background database of player in•    the main problem being that some texts mention some in•
formation is created, containing names of players, their nor•  formation in one scene, whereas other documents divide the 
mal position in the field, the team they belong to, etc.       same information over several scenes. In such cases the align•
   Yet another kind of rule is based on an ontolgy of events   ment algorithm chooses the best match, leaving the other part 
and is used to unify certain events which according to the     unmatched. 


INFORMATION EXTRACTION                                                                                                413 