                Reflection Patterns for Interactive Knowledge Capture∗ 

                                          Jihie Kim 
                  Information Sciences Institute, University of Southern California 
                         4676 Admiralty Way, Marina del Rey, CA 90292 
                                         jihie@isi.edu 


                   Abstract                      • The system should recognize dynamic changes in the 
                                                 problem solving and decide how to guide users in modify-
    Current knowledge acquisition tools have limited ing and using relevant k-items.     
    understanding of how users enter knowledge and 
    how acquired knowledge is used, and provide lim-
    ited assistance in organizing various knowledge au- 2  ECHO: Reflection Patterns for Interactive 
    thoring tasks. In this paper, we present a novel ex- Knowledge Acquisition 
    tension to existing knowledge acquisition tools 
    where the system 1) captures the episodes of In this paper, we present a novel extension to existing KA 
    knowledge acquisition and knowledge use through tools where the system adds an additional layer to existing 
    a set of declarative reflection patterns 2) performs tools and explicitly keeps track of knowledge acquisition 
    assessment on how to improve the future knowl- and knowledge use episodes through a set of declarative 
    edge acquisition and knowledge use based on cap- reflection patterns. Reflection patterns allow the system to 
    tured episodes, and 3) provides assistance to the be aware of interesting knowledge acquisition and knowl-
    users by combining the assessment results.   edge use episodes (called meta-events) that the system can 
                                                 make use of in assisting users. Each meta-event is a se-
 1 Introduction                                  quence of basic knowledge acquisition and knowledge use 
                                                 events such as the user ignored a suggestion and then the 
 Knowledge acquisition (KA) remains a key challenge to problem solving failed. The system assesses the levels of 
 knowledge-based AI applications. There have been increas- confidence in providing a suggestion based on its supporting 
 ing interests in supporting end users (i.e., ordinary users and opposing meta-events captured in the reflection pat-
 who do not have computer science background) directly terns.  Any changes that are noticed (e.g. confident k-item 
 enter complex problem solving knowledge on how to per- became inconsistent with problem solving results) and asso-
 form tasks. Although these techniques have been applied in ciated k-item modifications are explicitly captured in the 
 building sizable knowledge bases in some cases, detailed reflection patterns and are used in guiding the user. 
 analyses of the user interactions reveal that existing KA We have built a system called Echo (mEta-Cognitive His-
 tools provide limited assistance in organizing and executing tory analysis and Organization) that provides these capabili-
 various knowledge authoring tasks [Kim and Gil 2000].   ties. Echo dynamically captures a set of meta-events by 
 Systems do not reflect on how users perform KA tasks, how matching the reflection patterns against the episodes of how 
 acquired knowledge (called k-items) is tested and used, and different types of k-items are acquired, modified and used 
how future k-items should be built based on past experience. over time.  The captured meta-events affect how the sugges-
Users themselves have to keep track of the past mistakes, tions to the user are provided (i.e. how confident it is on the 
current status, potential new problems, and progresses made suggestion) as well as the content of the suggestions. 
over time in order to decide the best options among possible A prototype system has been developed for a domain of 
courses of actions.  The challenges in supporting these re- interactive scheduling where the user incrementally builds 
flective capabilities include:                   scheduling constraints and the user entered constraints assist 
• The system should be self-aware, accessing and reasoning users during scheduling.  Since scheduling constraints can 
on interesting aspects of knowledge acquisition and knowl- change over time, the system should be able to assist users 
edge use in assisting users.                     in making associated modifications. The details of the sys-
• The system should relate the current situation to similar tem are described in (Kim 2005).  
situations in the past and assess the levels of confidence in In developing reflection patterns and determining which 
pursuing alternative options based on the relations.  meta-events the system needs to keep track of we have ana-
                                                 lyzed typical ways in which failures can occur in interactive 
                                                  knowledge capture and use.  The reflection patterns are built 
   ∗ The support of IJCAI, Inc. is acknowledged. help users avoid those failures. Figure 1 shows the paths  that Echo exploit currently. Depending on a particular need - incorrect definitions or modifications of similar k-items  re-
 of a given KA system and its undesirable paths, we can in- sulting in further failures 
 clude other meta-events in the reflection patterns and adjust - k-item definitions and modifications resulting in successes 
 the assistance provided by the system.          The above algorithm is represented by a set of declarative 
                                                 reflection patterns described in [Kim 2005].  
                     successful                                   assessment: usefulness of the 
                    problem solving                               current Tom’s meeting time 
                                                                  constraint (k-item-1)
                                       add
                                                        . . .     - k-item-1 conflicts with the current 
   incorrect   correctly             useful k-items               result
    use of      use      correct delete                           - k-item-1 has been successfully 
         D                                                        used
   k-items     k-items   k-items useful 
                               KItems
                  env. C           A                               assessment : need of modification 
                 changes                                           to Tom’s meeting time constraint 
   failures due to                                                 due to changes 
                                                                                        Suggest
                                                                   - Carpool change may affect Tom’s 
   incorrect use of               failures due to                                      Modification of
                                                                   meeting time   
                                    missing                                             k-item-1
     k-items                 B                    assessment: need of modification 
                                    k-items
                  failures due to                 to Mary’s meeting time due to 
                                                  changes 
           incorrect incorrect k-items            - Carpool change affected Mary’s assessment: how to define k-items 
                              add       A         meeting time     for Tom’s meeting time to avoid 
          modification       incorrect                             potential failures 
                             k-items                               - k-item-1 was modified once due to a 
          Figure 1: Paths that lead to failures.                   failure: conflict with soccer practice    
Existing KA systems make use of these implicitly. That is, Figure 2: relations between assessments 
consideration of the above failures not explicit in the design Figure 2 shows how different assessments assist a k-item 
and they are reflected in the implementation of the tool. modification. In this case, Echo predicts that k-item-1 needs 
Example-based validation approaches refine k-items collec- to be modified because it is less confident about the useful-
tively, and cannot tell ‘when’ and ‘how’ k-items can be im- ness of the k-item (due to the current conflict) and more 
proved and ‘how’ they should be used.            confident on potential changes needed  The suggestions 
The above steps can be enhanced by exploiting related include how the system predicts the k-item can be modified 
meta-events. In particular, we make use of predictive as- based on relevant past modifications (i.e. consideration of 
sessment of similar situations and assessment on dynamic soccer practice time). 
changes including how k-items can be improved.  
Algorithm                                        3.  Preliminary Results  
 A. assess likeliness of potential failures due to missing k-  items We performed a preliminary evaluation of Echo with a set 
  by collecting and relating meta-events of      of synthetic scenarios with varying user interactions and 
   - steps failed without k-item assistance      mistakes. We compare two KA systems where both of them 
   - how similar steps failed without k-item assistance use the same episodes of problem solving and problem 
   - how similar steps were assisted by k-items 
                                                 changes but one of them was enhanced with Echo’s reflec-
   and produce suggestions to create new k-items based on 
   - assessments on how to create k-items (see E) tion patterns. The results show that with Echo, the KA sys-
 B. assess likeliness of potential failures due to incorrect k- item tem can reduce the number of incorrect suggestions and the 
   definitions by collecting and relating meta-events of  number of problem solving failures.  
                                                    Average per scenario With reflection Without reflection 
   - inconsistencies with the current problem solving result         patterns   patterns
   - the degree of inconsistencies with valid past results   
   - inconsistencies with confident k-items         Avg # decisions assisted with k- 24.0 (84.0) 22.03 (82.03)
   and produce suggestions to modify k-items based on  items(# total decisions)
   - assessments on how to modify k-items (see E)   Avg # wrong user decisions 8 8

 C. assess likeliness of potential failures due to changes by collect-  Avg # additional user mistakes 2.73 5.97
   ing and relating the meta-events of  
                                                    Avg # k-items creation or 4.87 4.34
   - how similar k-items were modified in similar situations   modification
   - modification in similar situations led to successes  Avg # sugg 13.83 (10.27) 13.0 (0)
   - the user agreed to modify k-items in similar situations  (Avg # confident sugg)
   - the user specified when to modify k-items      Avg # wrong sugg 0.90       3.07
      and produce suggestions to modify k-items based on  Avg # failures 4.10   6.73
   - assessments on how to modify k-items (see E) 
                                                        Table 1. With and without reflection patterns 
 D. assess likeliness of potential failures when k-items are   ig-
    nored by collecting and relating the meta-events of  
   - consistencies between k-items and current result References 
   - consistencies between k-items  with past valid results [Kim 2005] Reflection Patterns for Interactive Knowledge 
   - inconsistent decisions resulting in failures  Capture,http://www.isi.edu/~jihie/papers/echo-RP.pdf. 
   - consistent decisions resulting in successes [Kim & Gil 2000] Acquiring Problem-Solving Knowledge 
   and produce suggestions to use k-items based on the assessment 
 E. assess how to create or modify k-items by collecting and relat- from End Users: Putting Interdependency Models to the 
    ing the meta-events of                        Test. Proceedings of AAAI-2000. 