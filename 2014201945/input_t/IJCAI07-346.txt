               Topological Mapping through Distributed, Passive Sensors

                                  Dimitri Marinakis, Gregory Dudek
                           Centre for Intelligent Machines, McGill University
                        3480 University St, Montreal, Quebec, Canada H3A 2A7
                                   {dmarinak,dudek}@cim.mcgill.ca

                    Abstract
                                                                                                 C
    In this paper we address the problem of inferring                   C
    the topology, or inter-node navigability, of a sen-     A        B              A       B
    sor network given non-discriminating observations
    of activity in the environment. By exploiting mo-            DE                     D        E
    tion present in the environment, our approach is             (a)                      (b)
    able to recover a probabilistic model of the sen-
    sor network connectivity graph and the underlying Figure 1: Example of a sensor network layout (a) and corre-
    trafﬁc trends. We employ a reasoning system made  sponding topology (b).
    up of a stochastic Expectation Maximization algo-
    rithm and a higher level search strategy employing
    the principle of Occam’s Razor to look for the sim-
                                                      to ﬁnd a global solution that optimizes a more abstract objec-
    plest solution explaining the data. The technique is                                            1
    assessed through numerical simulations and exper- tive function based on the principle of Occam’s Razor.
    iments conducted on a real sensor network.          The ﬁnal output of our approach is a probabilistic model
                                                      of the sensor network connectivity graph and the underlying
                                                      trafﬁc trends. The simplest application of this work would al-
1  Introduction                                       low a set of sensors to be “dropped” into an environment and
                                                      to automatically learn the topology of their layout. This au-
In this paper, we are interested in recovering a topologi- tonomous calibration ability can be considered a step towards
cal representation of a sensor network embedded region that the larger goal of self-conﬁguring intelligent systems. The
identiﬁes physical inter-sensor connectivity from the point of information could be used in the self-calibration of a moni-
view of an agent navigating the environment (ﬁgure 1); as op- toring application or for route-planning purposes in a hybrid
posed to a description of the network’s wireless communica- system employing a mobile robot. Additionally, applications
tion connectivity (the conventional use of the word topology that log data for ofﬂine analysis should be able to beneﬁt from
in wireless networks).                                our technique. For example, a vehicle monitoring network
  We assume that we have no prior knowledge of the rela- distributed about a city could help make decisions about road
tive locations of the sensors and that we have only unlabelled improvements which might best alleviate congestion.
observations of activity in the environment (i.e. we make the The topology of a sensor network, as we deﬁne it, must
pessimistic assumption that the objects being observed can- take into account the spatial constraints of the environment as
not be distinguished from one another). We must use ob- they determine the inter-node connectivity parameters. The
servational data returned from our sensors to understand the topological mapping problem has been well explored in mo-
motion of agents present in the environment. By inferring bile robotics [Shatkay and Kaelbling, 1997][Choset and Na-
underlying patterns in their motions we can then recover the gatani, 2001][Remolina and Kuipers, 2004][Ranganathan
relationships between the sensors of our network.     and Dellaert, 2005]. Most sensor network related inves-
  Our approach employs a reasoning system that is built on tigations, however, have been more recent [Makris et al.,
a fundamental topology inference algorithm that takes the 2004][Marinakis and Dudek, 2006]; the outcome is gener-
sensor observations and environmental assumptions as in- ally a graph where vertices represent embedded sensors in
puts and returns the network parameters. This algorithm the region and edges indicate navigability. By combining this
is formulated using Monte Carlo Expectation Maximization topological description with any additional metric informa-
(MCEM), but it depends on ﬁxed values for certain numerical tion obtainable from the surrounding environment, further in-
parameters that represent aprioriknowledge regarding trafﬁc
patterns in the environment. The reasoning system searches 1Occam’s Razor is the principle enunciated by William of Occam
over the input parameter space of the fundamental algorithm that the simplest explanation is the best.

                                                IJCAI-07
                                                  2147formation regarding obstructions and motion corridors could sors is described as a directed graph G =(V,E),wherethe
be inferred. For example, two spatially proximal nodes that vertices V = vi represent the locations where sensors are de-
were not topologically adjacent would suggest a barrier of ployed, and the edges E = ei,j represent the connectivity
some sort.                                            between them; an edge ei,j denotes a path from the position
  While much of the research conducted on sensor networks of sensor vi to the position of sensor vj. The motion of each
is based on developing distributed and efﬁcient algorithms of the N agents in this graph can be described in terms of their
appropriate for networks of low-powered sensor platforms, transition probability across each of the edges An = {aij },
recently there has been a shift towards more complex ap- as well as a temporal distribution indicating the duration of
proaches incorporating advanced probabilistic techniques and each transition Dn. The observations O = {ot} are a list of
graphical models [Ihler et al., 2005][Paskin et al., 2005]. events detected at arbitrary times from the various vertices of
The traditional sensor network assumption of homogenous the graph, which indicate the likely presence of one of the
systems of impoverished nodes is making way for tiered N agents at that position at that time. In other words, each
architectures that incorporate network components of some observation is identiﬁably generated by one of the sensors.
computational sophistication [Dantu and Sukhatme, 2006]. The goal of our work is to estimate the parameters de-
Note that a hierarchical arrangement based on computational scribing this semi-Markov process based on a number of as-
power holds true for several real world sensor networks, es- sumptions. We assume that the behavior of the agents can
pecially in data collection systems [Wang et al., 2003]. be approximated as being homogeneous; i.e. the motion of
  One problem in sensor networks that occasionally requires all agents are described by the same A and D. In addition,
above average computational effort is the processing of dis- we must make some assumptions about the distribution of the
tributed and information-poor observations. For example, in inter-vertex transition times. Generally, we make the assump-
[Songhwai Oh and Sastry, 2006], event detections alone were tion that the delays are normally distributed and bounded
used for the tracking of multiple targets using Markov Chain within a ﬁxed range. We will show later, however, that we
Monte Carlo (MCMC). Similarily, [Pasula et al., 1999] ap- relax this assumption in some situations.
proached a trafﬁc monitoring problem using limited sensor Given the observations O and the vertices V , the problem
data observations through a stochastic sampling technique. is to estimate the network connectivity parameters A and D,
  A related problem domain that generally employs a com- subsequently referred to as θ.
plex probabilistic framework and computationally intensive
techniques is the simultaneous localization and mapping 3 Fundamental Topology Inference Algorithm
(SLAM) problem in mobile robotics. Recently hybrid robot The fundamental topology inference algorithm used by our
/ sensor network systems have been employed to address technique infers the connectivity of a sensor network given
                             [                 ]
SLAM  issues. Examples include Rekleitis et al., 2005 in non-discriminating observations. It assumes knowledge of
                                     [
their use of an extended Kalman ﬁlter, and Djugash et al., the number of agents in the environment and additionally, re-
    ]
2006 who incorporate inter-sensor range data from a de- quires some prior information regarding motion patterns in
ployed sensor network in their approach.              the system. The inference algorithm is based on the statistical
  In remainder of this paper we describe a computationally technique of Expectation Maximization (EM). It constructs
heavy but powerful approach for constructing a topologi- plausible trajectories of agent motions based on current esti-
cal representation of a network embedded region based on mates of connectivity parameters (E Step), and then updates
distributed observations collected from passive, information- the parameters to maximum likelihood estimates based on the
poor sensors. Our approach builds on some recent work sampled trajectories (M Step). In this section, we will brieﬂy
[Marinakis et al., 2005][Marinakis and Dudek, 2006] that outline the methodology behind this technique; full details
has shown the validity of an MCEM-based algorithm for sen- can be found in [Marinakis and Dudek, 2006].
sor network topology inference. This technique uses only The algorithm simultaneously converges toward both the
detection events from the deployed sensors and is based on correct observation data correspondences and the correct net-
reconstructing plausible agents trajectories. However, the al- work parameters by iterating over the following two steps:
gorithm requires signiﬁcant prior knowledge regarding local
trafﬁc patterns that limit its general applicability. In the ap- 1. The E-Step: which calculates the expected log likelihood
proach presented here, we incorporate the fundamental algo- of the complete data given the current parameter guess:
                                                                                                
rithm developed in this previous work into a higher level rea-       (i−1)                     (i−1)
soning system that is able to remove much of its reliance on   Q  θ, θ    = E  log p(O, Z|θ)|O, θ
prior assumptions.
                                                          where O is the vector of binary observations collected
                                                          by each sensor, and Z represents a hidden variable that
2  Problem Description                                    determines the data correspondence between the obser-
We describe the problem of topology inference in terms of vations and agents moving throughout the system.
the inference of a weighted directed graph which captures 2. The M-Step: which then updates our current parameter
the spatial relationships between the positions of the sen- guess with a value that maximizes the expected log like-
sors’ nodes. The motion of multiple agents moving asyn-   lihood:                          
                                                                       (i)              (i−1)
chronously through a sensor network embedded region can               θ  =argmaxQ    θ, θ
be modeled as a semi-Markov process. The network of sen-                       θ

                                                IJCAI-07
                                                  2148                                                
  The E-Step is calculated by approximating Q θ, θ(i−1) ﬁnd reasonable solutions. We construct a heuristic evalua-
                                   (m)    m
with M samples of an ownership vector L = {li } which tion function that quantitatively assesses a potential solution
uniquely assigns the agent i to the observation oi in sample based on the principle of Occam’s Razor. The topology infer-
m:                                                  ence algorithm takes the following inputs: the observations
                        M                            O; the assumed number of agents in the environment N;and
        (i)           1           (m)
       θ  =argmax           log p(L  ,O|θ)            the SSLLH  parameter. The outputs of the algorithm are the
                θ
                     M  m=1                           network parameters θ and the ratio of data Rdata incorpo-
       (m)                                    (i−1)   rated into the parameter updates:
where L    is drawn using the previously estimated θ
according to a MCMC sampling technique. At every itera-          (θ, Rdata) ← alg(O,N,SSLLH)
tion, the M samples of the ownership vector L are used to
re-estimate the connectivity parameter θ (the M-Step). The Different input values result in different environmental as-
algorithm continues to iterate over the E-Step and the M-Step sumptions and, hence, produce different outputs.
until subsequent iterations result in very small changes to θ. We have created a metric that attempts to assess the valid-
  Markov Chain Monte Carlo sampling is used to assign each ity of a solution by making the assumption that a good solu-
of the observations to one of the agents. Given some guess tion both explains the majority of the data and is as simple as
of the connectivity parameter θ and the current state in the possible. This principle, known as Occam’s razor, states, “if
Markov Chain speciﬁed by the current observation assign- presented with a choice between indifferent alternatives, then
ment L, proposals are generated by reassigning a randomly one ought to select the simplest one.” The concept is a com-
selected observation to a new agent selected uniformly at mon theme in computer science and underlies a number of
random. This new data association L is then accepted or approaches in AI; e.g. hypothesis selection in decision trees
rejected based on an acceptance probability which is deter- and Bayesian classiﬁers.
mined by the Metropolis algorithm.                      Our simplicity metric incorporates a measure of the sim-
  The technique uses an inter-vertex delay model that allows plicity of the transition matrix and the amount of data ex-
for the possibility of agent transitions to and from sources and plained by the solution. We measure the simplicity of a transi-
sinks in the environment. In addition to maintaining a ver- tion matrix by rewarding it in inverse proportion to how close
                                                      it is to a uniform belief of transition probabilities:
tex that represents each sensor in the network, the algorithm                   
assumes an additional vertex that represents the greater envi-                         β
                                                                       Asimp =     (ai)
ronment outside the monitored region: a source/sink node.A                     a ∈A
mixture model is employed during the E-Step of the iterative                    i
EM  process in which potential changes to agent trajectories where β determines the degree of the reward. We measure the
are evaluated. An inter-vertex delay time is assumed to arise utility of a given data use ratio by constructing an adjusted
from either a Gaussian distribution or from a uniform distri- data ratio that attempts to reﬂect our belief in the solution as
bution of ﬁxed likelihood.                            a function of the data used. The adjusted data ratio should
  The data assigned to the Gaussian distribution are assumed incorporate the fact that some small portion of discarded data
to be generated by “through-trafﬁc” and are used to during the is actually optimal, but that our belief tails off rapidly as the
M-Step to update our belief of the inter-node delay times and discarded portion grows:
transition likelihoods. However, the data ﬁt to the uniform
                                                                        |# Explained Observations|
distribution are used only for updating the belief of transitions
                                                                Rdata =   |                 |
to and from the source/sink node for the associated vertices.              # Total Observations
                                                                                1        2
  The portion of data ﬁt to each component of the mixture                      − τ (Rdata−γ)
model is controlled through a a tunable parameter, called            Radj =exp
Source Sink Log Likelihood (SSLLH), that determines the where γ and τ describe the shape of the belief curve (ﬁgure
threshold probability necessary for the delay data to be in- 2). The ﬁnal simplicity metric incorporates a weighted com-
corporated into parameter updates. The probability for an bination of Asimp and Radj:
inter-vertex delay is ﬁrst calculated given the current belief of                 κ ∗      λ
the (Gaussian) delay distribution. If this probability is lower    Qsimp =(Asimp)    (Radj)
than the SSLLH then this motion is interpreted as a transition where κ and λ reﬂect the relative weights assigned to the two
made via the source/sink node and the transition is not used portions.
to update the network parameters associated with the origin With the construction of the simplicity metric Qsimp,we
and destination vertices. The value assigned to the SSLLH have shifted our dependence from speciﬁc aprioriassump-
parameter determines how easily the algorithm discards out- tions that must be made on a case to case basis. Instead, we
liers and, hence, provides a compromise between robustness depend on more general assumptions regarding the attributes
to observational noise and a tendency to discard useful data. of a believable solution for this problem domain.

4  Automatic Parameter Selection                      5   Simulation Results
Our reasoning system treats the fundamental topology infer- In this section, we attempt to validate our general approach
ence algorithm described in the previous section as a ‘black for selecting nearly optimal input parameters for the funda-
box’ and attempts to search over its input parameter space to mental topology inference algorithm by using attributes of

                                                IJCAI-07
                                                  2149                 1
                    Adjusted Ratio                                1
                0.8 line y=x
                                                                                  No Noise
                0.6
                                                                 0.8              Moderate Noise
                0.4

                0.2                                              0.6
                Adjusted  Data Use Ratio

                 0
                 0  0.2 0.4 0.6 0.8 1                                       Correct
                      Data Use Ratio                             0.4

Figure 2: Example relationship between Rdata and Radj with       0.2


γ =0.9 and τ =0.1.                                              Squared  Error of Transition Matrix
                                                                  0
                                                                  1   2   3   4  5   6   7   8
                                                                        Assumed Number of Agents
                β   γ    τ   κ   λ                                            (a)
                2  0.9  0.2  2   1

                                                                 0.7
Table 1: Table of values used to shape the simplicity quotient
                                                                 0.6
Qsimp.
                                                                 0.5
                                                                                  No Noise
                                                                 0.4              Moderate Noise

the solution it produces. We select parameters deﬁning the       0.3          Correct
Qsimp metric based both on domain knowledge and experi-
                                                                 0.2
mental methods (Table 1).                                       Simplicity  Quotient
  In order to justify these parameter values and to assess       0.1

the effectiveness of this approach, we conducted a number         0
                                                                  0      2     4      6      8
of simulations in which we varied the input parameters and              Assumed Number of Agents
looked for a correlation between the performance of the algo-                 (b)
rithm and the simplicity metric.
  Experiments were conducted by simulating agent trafﬁc          0.5
                                                                 0.45 No Noise
through an environment represented as a planar graph. The             Moderate Noise
simulation tool takes as input the number of agents in the       0.4
system and a weighted graph where the edge weights are pro-      0.35
                                                                 0.3

portional to mean transit times between the nodes. The out-      0.25

put is a list of observations generated by randomly walking      0.2

the agents through the environment. Two types of noise were      0.15

modeled in order reﬂect observations collected from realis-      0.1
tic trafﬁc patterns. First, a ‘white’ noise was generated by     0.05
                                                                Squared  Error of Transition Matrix
                                                                  0
removing a percentage of correct observations and replacing       −25  −20  −15  −10   −5    0
them with randomly generated spurious observations. Sec-                SSLLH Parameter Setting
                                                                              (c)
ond, a more systematic noise was generated by taking a per-
centage of inter-vertex transitions and increasing the Gaus-
sian distributed delay time between them by an additional de-         No Noise
lay value selected uniformly at random. The range of this        0.65 Moderate Noise
additional delay time was selected to be from 0 to 20 times
the average normal delay time.                                   0.6
  For each experiment, the results were obtained by calcu-       0.55
lating the squared error between the true A and inferred A
                                                                 0.5

transition matrix:                                             Simplicity  Quotient
                                     2                          0.45
           ErrA  =           (aij − aij )
                           
                   aij ∈A,a ∈A                                   0.4
                         ij                                       −25  −20  −15  −10   −5    0
                                                                        SSLLH Parameter Setting
  Input parameters that resulted in good algorithm perfor-                    (d)
mance also resulted in solutions that generated high Qsimp
quotient values (ﬁgure 3). When the error in the inferred tran- Figure 3: The effect of varying assumed input parameters on
sition matrix was plotted against the value obtained for the performance and the simplicity quotient. Results are aver-
simplicity quotient Qsimp for a number of simulations, there aged over 20 graphs using 4 simulated agents on 12 node,
was evidence of a deﬁnite correspondence (ﬁgure 4). The ef- 48 edge graphs with 4000 observations. Simulations labeled
fect appeared robust to moderate levels of observational noise ‘Moderate Noise’ had 5 per cent of both white noise and sys-
and different sizes of graphs. This result gives support for our tematic noise added to the observations. For charts a) and b)
adoption of Occam’s Razor as a mechanism for selecting in- SSLLH was set to -5.0 while for charts c) and d) the assumed
put parameters.                                       number of agents was set to 4.

                                                IJCAI-07
                                                  2150          2                                           during a six and a half hour period from 10:00am to 4:30 pm
                             No Noise                 on a weekday. In total, approximately 4700 time-stamped
                             Moderate Noise           events were collected.
         1.5                                            To determine appropriate input parameters for our infer-
                                                      ence algorithm we conducted an exhaustive search over the
                                                                                        −    −
          1                                           range of N =2, .., 6 and SSLLH =   7, .., 3.Wethen
                                                      chose the output values that maximized our Qsimp metric.
                                                      (We used the same shaping parameters for the Qsimp metric
         0.5                                          that were veriﬁed through simulations.) The maximizing ar-
                                                      guments were: N =5and   SSLLH   =  −5. Therefore, we
        Squared  Error in Transition Matrix
          0                                           selected the solution generated by these parameter values as
           0    0.2   0.4   0.6   0.8   1
                    Simplicty Quotient                our inferred network.
                                                        Except for a few small differences, the network parameters
Figure 4: The mean error in the inferred transition matrix el- inferred by our topology inference algorithm closely corre-
                                                      sponded to the ground truth topology. Figure 6 compares the
ements plotted against Qsimp for data obtained from the sim-
ulator with 4 true agents from 4 random graphs of 12 nodes, analytically determined and inferred topological maps. Dis-
48 edges and 4000 observations. Input parameters to the al- regarding reﬂexive links, the difference between the inferred
gorithm were varied: assumed number of agents from 2 to and ‘ground truth’ results amounted to a Hamming error of 2.
7; and SSLLH from -2 to -7. Trials labeled ‘Moderate Noise’ The two signiﬁcant errors are: an extra edge found between
                                                      sensors  and  ; and a missing one-way edge from sensor
contained 5 per cent of both white noise and systematic noise. A  B                                    D
                                                      to I. Additionally, the connections to the inferred source/sink
                                                      node occur primarily for boundary nodes (ﬁgure 6(c) ) and are
                                                      therefore consistent with an analytical assessment of the traf-
  The accuracy of the solution we obtain depends heavily on ﬁc patterns. Since trafﬁc commonly enters and exits the mon-
the assumed number of agents in the environment. The lowest itored region via one of the boundary nodes, the inference
error was consistently observed when the assumed number of algorithm should commonly employ the source/sink node in
agents was set to the correct value, and generally, the closer order bring the agent back into the system.
to the correct value this parameter was set, the better the re-
sults. Over-estimating the assumed number of agents had less 7Conclusion
impact on accuracy than under-estimation.             In this paper we presented a method for inferring the topol-
  A correctly tuned SSLLH parameter was also important to ogy of a sensor network given non-discriminating observa-
the accuracy of the ﬁnal solution. As the input value for this tions of activity in the monitored region. Our technique
parameter was increased, there appeared to be a “phase tran- recovers the network connectivity information opportunisti-
sition” in the accuracy of the results. Past a certain threshold, cally through the exploitation of existing motion. Our work
the error suddenly increased dramatically. Interestingly, the improves considerably on earlier related efforts for topology
best results for both the inferred mean delay times (not pre- inference which require prior knowledge regarding motion
sented here) and transition likelihoods seems to be obtained in the environment. It is worth noting that our ﬁnal tech-
just before this sudden degradation in performance.   nique recovers a much more complete description of network
  While, the shaping of the Qsimp metric is ongoing work, connectivity than just a topological map of the environment.
the current parameter values are adequate to demonstrate the Additionally, we learn information regarding inter-node de-
correlation between the correctness and simplicity of the in- lay distributions, inter-node transition likelihoods, and other
ferred transition matrix. In our experimental work, described statistics regarding motion patterns in the system.
in the next section, we took advantage of this correlation to
select appropriate input parameters since the ‘correct’ values References
were unknown.                                         [Choset and Nagatani, 2001] Howie Choset and K. Na-
                                                         gatani. Topological simultaneous localization and map-
6  Experimental Results                                  ping (SLAM): toward exact localization without explicit
                                                         localization. IEEE Transactions on Robotics and Automa-
In order to test our technique under real-world conditions, tion, 17(2):125 – 137, April 2001.
we setup an experiment using a real sensor network of nine
nodes and analyzed the results using our approach. The sen- [Dantu and Sukhatme, 2006] Karthik Dantu and Gaurav S.
sor nodes were built up of photocell-based sensors running on Sukhatme. Rethinking data-fusion based services in sen-
low-powered commercial devices and vision-based sensors  sor networks. In The Third IEEE Workshop on Embedded
running on single board computers. Both types of sensors Networked Sensors, 2006.
were programmed to act as simple motion detectors sending [Djugash et al., 2006] Joseph Djugash, George Kantor, San-
event messages to a central server, which logged the origin jiv Singh, and Wei Zhang. Range-only slam for robots
and time of the activity.                                operating cooperatively with sensor networks. In Proc. of
  The experiment was conducted in the hallways of one wing the International Conference on Robotics and Automation,
of an ofﬁce building (ﬁgure 5) and the data were collected May 2006.

                                                IJCAI-07
                                                  2151