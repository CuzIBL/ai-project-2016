  Reasoning about soft constraints and conditional preferences: complexity results 
                                      and approximation techniques* 

              C. Domshlak                   F.Rossi and K.B.Venable T.Walsh 
      Dept. of Computer Science                 Dept. of Mathematics Cork Constraint Computation Centre 
           Cornell University                    University of Padova University College Cork 
            Ithaca, NY, USA                          Padova, Italy Cork, Ireland 
        dcarmel@cs.cornell.edu            {frossi,kvenable}@math.unipd.it tw@4c.ucc.ie 

                        Abstract                                 Soft constraints [Bistarelli et al, 1997; Schiex et al, 1995] 
                                                               are one of the main methods for dealing with preferences in 
     Many real life optimization problems contain both         constraint optimization. Each assignment to the variables of a 
     hard and soft constraints, as well as qualitative con•    constraint is annotated with a level of its desirability, and the 
     ditional preferences. However, there is no single         desirability of a complete assignment is computed by a com•
     formalism to specify all three kinds of informa•          bination operator applied to the "local" preference values. 
     tion. We therefore propose a framework, based             Whilst soft constraints are very expressive, and have a power•
     on both CP-nets and soft constraints, that handles        ful computational machinery, they are not good at modeling 
     both hard and soft constraints as well as conditional     and solving the sort of conditional preference statements that 
     preferences efficiently and uniformly. We study           occur in the real world. Moreover, soft constraints are based 
     the complexity of testing the consistency of pref•        on quantitative measures of preference, which tends to make 
     erence statements, and show how soft constraints          preference elicitation more difficult. 
     can faithfully approximate the semantics of condi•
                                                                 Qualitative user preferences have been widely studied in 
     tional preference statements whilst improving the 
                                                               decision-theoretic Al [Doyle and Thomason, 1999]. Of par•
     computational complexity. 
                                                               ticular interest are CP-nets [Boutilier et al, 1999]. These 
                                                               model statements of qualitative and conditional preference 
1 Introduction and Motivation                                  such as "I prefer a red dress to a yellow dress", or "If the 
                                                               car is convertible, I prefer a soft top to a hard top". These 
Representing and reasoning about preferences is an area of     are interpreted under the ceteris paribus (that is, "all else 
increasing interest in theoretical and applied Al. In many     being equal") assumption. Preference elicitation in such 
real life problems, we have both hard and soft constraints,    a framework is intuitive, independent of the problem con•
as well as qualitative conditional preferences. For example,   straints, and suitable for naive users. However, the Achilles 
in a product configuration problem, the producer may have      heel of CP-nets and other sophisticated qualitative prefer•
hard and soft constraints, while the user has a set of con•    ence models [Lang, 2002] is the complexity of reasoning with 
ditional preferences. Until now, there has been no single      them [Domshlak and Brafman, 2002; Boutilier et al, 2002]. 
formalism which allows all these different kinds of informa•
                                                                 Motivated by a product configuration application [Sabin 
tion to be specified efficiently and reasoned with effectively. 
                                                               and Weigel, 1998], we have developed a framework to reason 
For example, soft constraint solvers [Bistarelli et al, 1997; 
                                                               simultaneously about qualitative conditional preference state•
Schiex et al, 1995] are most suited for reasoning about the 
                                                               ments and hard and soft constraints. In product configuration, 
hard and soft constraints, while CP-nets [Boutilicr et al, 
                                                               the producer has hard (e.g., component compatibility) and 
1999] are most suited for representing qualitative conditional 
                                                               soft (e.g., supply time) constraints, while the customer has 
preference statements. In this paper, we exploit a connec•
                                                               preferences over the product features. We first investigate the 
tion between these two approaches, and define a framework 
                                                               complexity of reasoning about qualitative preference state•
based on both CP-nets and soft constraints which can effi•
                                                               ments, addressing in particular preferential consistency. To 
ciently handle both constraints and preferences. 
                                                               tackle the complexity of preference reasoning, we then intro•
   *This research was partially funded by AFOSR, grant F49620- duce two approximation schemes based on soft constraints. 
01-1-0076 (Intelligent Information Systems Institute, Cornell Uni• To the best of our knowledge, this work provides the first 
versity) and F49620-01-1-0361 (MURI grant on Cooperative Con•  connection between the CP-nets and soft constraints machin•
trol of Distributed Autonomous Vehicles in Adversarial Environ•
                                                               ery. In addition, for product configuration problems or any 
ments), DARPA, F30602-00-2-0530 (Controlling Computational 
Cost: Structure, Phase Transitions and Randomization) and F30602- problem with both hard and soft quantitative constraints as 
00-2-0558 (Confi guring Wireless Transmission and Decentralized well as qualitative conditional preferences, this framework 
Data Processing for Generic Sensor Networks), the Italian MIUR lets us treat the three kinds of information in a unifying en•
projects NAPOLI and COVER, the ASI (Italian Space Agency)      vironment. Finally, we compare the two approximations in 
project ARISCOM and Science Foundation Ireland.                terms of both expressivity and complexity. 


CONSTRAINTS                                                                                                           215  2 Formalisms for Describing Preferences 
 2.1 Soft constraints 
 There are many formalisms for describing soft constraints. 
 We use the c-semi-ring formalism [Bistarelli et al, 1997],            Figure 1: The CP-net graph for the example. 
 which is equivalent to the valued-CSP formalism when total 
 orders are used [Bistarelli et ai, 1996], as this generalizes 
 many of the others. In brief, a soft constraint associates each preference 0.4". Of course, the former statement provides 
 instantiation of its variables with a value from a partially or• less information, but it does not require careful selection of 
 dered set. We also supply operations for combining (x) and    preference values to maintain consistency. Moreover, soft 
                                                               constraints do not naturally represent conditional preferences, 
                                                               as in "If they serve meat, then 1 prefer red wine to white 
                                                               wine". It is easy to see that both qualitative statements and 
                                                               conditions are essential ingredients in many applications. 
                                                                 CP-nets [Boutilier et al, 1999] are a graphical model for 
                                                               compactly representing conditional and qualitative prefer•
                                                               ence relations. They exploit conditional preferential indepen•
                                                               dence by structuring a user's preferences under the ceteris 
                                                               paribus assumption. Informally, CP-nets are sets of condi•
                                                               tional ceteris paribus (CP) preference statements. For in•
                                                               stance, the statement "I prefer red wine to white wine if meat 
                                                               is served." asserts that, given two meals that differ only in 
                                                               the kind of wine served and both containing meat, the meal 
                                                               with a red wine is preferable to the meal with a white wine. 
                                                               Many philosophers (see [Hansson, 2001] for an overview) 
                                                               and AI researchers [Doyle and Wellman, 1994], have argued 
                                                               that most of our preferences are of this type. 


 tion to an SCSP is a complete assignment to its variables. 
 The preference value associated with a solution is obtained 
 by multiplying the preference values of the projections of 
 the solution to each constraint. One solution is better than 
 another if its preference value is higher in the partial order. 
 Finding an optimal solution for an SCSP is an NP-complete 
 problem. On the other hand, given two solutions, checking 
 whether one is preferable is easy: we compute the semi-ring 
 values of the two solutions and compare the resulting values. 

 2.2 CP-nets 
 Soft constraints are the main tool for representing and rea•
soning about preferences in constraint satisfaction problems. 
However, they require the choice of a semi-ring value for each 
variable assignment in each constraint. They are therefore a 
quantitative method for expressing preferences. In many ap•
plications, it is more natural for users to express preferences 
via generic qualitative (usually partial) preference relations 
over variable assignments. For example, it is often more in•
tuitive for the user to say "I prefer red wine to white wine", 
rather than "Red wine has preference 0.7 and white wine has 


216                                                                                                      CONSTRAINTS 3 Consistency and Satisfiability                                 While testing satisfiability is hard in general, Theorem 2 
                                                               presents a wide class of statement sets that can be tested for 
Given a set of preference statements extracted from a user,    satisfiability in polynomial time. 
we might be interested in testing consistency of the induced 
preference relation. In general, there is no single notion of 
preferential consistency [Hansson, 2001]. In [Boutilier et al. Theorem 2 A set of conditional preference statements Vt, 
                                                          9    whose dependency graph is acyclic and has bounded node 
 1999], a CP-net N was considered consistent iff the partial or•
                                                               in-degree can be tested for satisfiability in polynomial time. 
dering induced by N is asymmetric, i.e. there exist at least 
one total ordering of the outcomes consistent with . How•
ever, in many situations, we can ignore cycles in the prefer•
ence relation, as long as these do not prevent a rational choice, 
i.e. there exist an outcome that is not dominated by any other 
outcome. In what follows, we refer to this as satisfiability^. It 
is easy to see that satisfiability is strictly weaker than asym•
metry, and that asymmetry implies satisfiability. We will con•
sider two cases: When the set of preference statements in•
duces a CP-net and, more generally, when preferences can 
take any form (and may not induce a CP-net). 
   When defines an acyclic CP-net, the partial order in•
duced by is asymmetric [Boutilier et al, 1999]. How•
ever, for cyclic CP-nets, asymmetry is not guaranteed. In 
the more general case, we are given a set of conditional 
preference statements without any guarantee that they define 
a CP-net. Let the dependence graph of be defined sim•
ilarly to the graphs of CP-nets: the nodes stand for prob•
lem features, and a directed arc goes from iff 
contains a statement expressing preference on the values of 
Xj conditioned on the value of Xi. For example, the set 
                                    does not induce a CP-
net (the two conditionals are not mutually exclusive), and the 
preference relation induced by is not asymmetric, despite 
the fact that the dependence graph of is acyclic. 
   Note that while asymmetry implies satisfiability, the re•
verse does not hold in general. For example, the set above 
is not asymmetric, but it is satisfiable (the assignment acb is 
undominated). Given such a satisfiable set of statements, we 
can prompt the user with one of the undominated assignments 
without further refinement of its preference relation. Theo•
rem 1 shows that, in general, determining satisfiability of a 
set of statements is NP-complete. On the other hand, even 
for CP-nets, determining asymmetry is not known to be in 
NP [Domshlak and Brafman, 2002]. 

Theorem 1 SATISFIABILITY of a set of conditional prefer•
ence statements is NP-complete.                                clauses of the formula the proof of Theorem 1). However, 
                                                               when at most one condition is allowed in each preference 
Proof: Membership in NP is straightforward, as an assign•      statement, and the features are boolean, then SATISFIABIL•
ment is a polynomial-size witness that can be checked for      ITY can be reduced to 2-SAT, and thus tested in polynomial 
non-dominance in time linear in the size of . To show hard•    time. Further study of additional tractable cases is clearly of 
ness, we reduce 3-SAT to our problem: Given a 3-cnf formula    both theoretical and practical interest. 
F, for each clausewe construct the condi•
tional preference statement: _ This set of                     4 Approximating CP-nets with Soft 
conditional preferences is satisfiable iff the original original   Constraints 
formula F is satisfiable. D 
                                                               In addition to testing consistency and determining preferen•
   'in preference logic [Hansson, 2001], these notions of Consis• tially optimal outcomes, we can be interested in the preferen•
tency as satisfi ability" and Consistency as asymmetry" correspond tial comparison of two outcomes. Unfortunately, determining 
to the notions of eligibility and restrictable eligibility, respectively. dominance between a pair of outcomes with respect to a set 
However, we will use the former terms as they seem more intuitive. of qualitative preferential statements under the ceteris paribus 


CONSTRAINTS                                                                                                           217 assumption is PSPACE-complete in general [Lang, 2002], and 
is NP-hard even for acyclic CP-nets [Domshlak and Brafman, 
2002]. However, given a set of preference statements, in•
stead of using a preference relation induced by , one can 
use an approximation achieving tractability while 
sacrificing precision to some degree. Clearly, different ap•
proximations are not equally good, as they can be 
characterized by the precision with respect to time com•
plexity of generating », and time complexity of comparing 
outcomes with respect to ^>. In addition, it is vital that >> 
faithfully extends (i.e. should entail We 
call this information preserving. Another desirable property 
of approximations is that of preserving the ceteris paribus 
property (we call this the cp-condition for short). 
   For acyclic CP-nets, two approximations that are informa•
tion preserving have been introduced, both comparing out•
comes in time linear in the number of features. The first 
is based on the relative position of the features in the CP-
net graph [Boutilier et al, 2002]. This approximation does 
not require any preprocessing of the CP-net. However, it 
is problematic when there are hard constraints. The sec•
ond, based on UCP-nets [Boutilier et al 2001], can be used 
as a quantitative approximation of acyclic CP-nets. UCP-
nets resemble weighted CSPs, and thus they can be used 
in constraint optimization using the soft constraints machin•
ery. However, generating UCP-nets is exponential in the size 
of CP-net node's Markov family2, and thus in the CP-net 
node out-degree. An additional related work is described in 
LMcGeachie and Doyle, 2002], where a numerical value func•
tion is constructed using graph-theoretic techniques by exam•
ining the graph of the preference relation induced by a set of 
preference statements. Note that this framework is also com•
putationally hard, except for some special cases. 
  Here we study approximating CP-nets via soft constraints 
(SCSPs). This allows us to use the rich machinery under•
lying SCSPs to answer comparison queries in linear time. 
Moreover, this provides us a uniform framework to combine 
user preferences with both hard and soft constraints. Given 
an acyclic CP-net, we construct a corresponding SCSP in 
two steps. First, we build a constraint graph, which we call 
SC-net. Second, we compute the preferences and weights 
for the constraints in the SC-net, and this computation de•
pends on the actual semi-ring framework being used. Here 
we present and discuss two alternative semi-ring frameworks, 
based on min+ and SLO (Soft constraint Lexicographic Or•
dering) semi-rings, respectively. In both cases, our compu•
tation of preferences and weights ensures information pre•
serving and satisfies the cp-condition. We illustrate the con•
struction of the SCSP using the example in Figure 2, which 
continues our running example from Figure 1. 

  Given a CP-net N, the corresponding SC-net Nc has two 
types of nodes: First, each feature is represented 
in Nc by a node Vx that stands for a SCSP variable with 
                 , Second, for each featuresuch 
                    we have a nodewith 
                                Edges in correspond to 

   2 Markov family of a node X contains X, its parents and children, 
and the parents of its children. 


218                                                                                                      CONSTRAINTS                                                               Theorem 4 (Complexity) Given an acyclic CP-net N with 
                                                              the node in-degree bounded by a constant, the construction of 
                                                              the corresponding SC-net based weighted SCSP Nc is poly•
                                                              nomial in the size ofN. 

                                                              Proof: If the CP-net has n nodes then the number of vertices 
                                                              V of the derived SC-net is at most 2n. In fact, in the SC-net 
                                                              a node representing a feature appears at most once and there 
                                                              is at most one node representing its parents. If the number of 
  We now prove that our algorithm for weight computation      edges of the CP-net is e, then the number of edges E in the 
ensures the cp-condition on the resulting set of soft con•    SC-net (including hard and soft edges) is at most e + n, since 
straints, and this also implies preserving the ordering infor• each edge in the CP-net corresponds to at most one constraint, 
mation with respect to the original CP-net.                   and each feature in the CP-net generates at most one new soft 


                                                                 Since the min+ approximation is a total ordering, it is a lin•
                                                              earization of the original partial ordering. In compensation, 
                                                              however, preferential comparison is now linear time. 
                                                              4.2 SLO soft constraints 


CONSTRAINTS                                                                                                          219 