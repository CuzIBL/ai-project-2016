                         abduction hypotheses conﬁrmation∗          marco alberti marco gavanelli evelina lamma paola mello paolo torroni                               endif  university ferrara  saragat    ferrara italy                                malbertim gavanellielammaingunifeit                deis  university bologna  viale risorgimento    bologna italy                                      pmelloptorronideisuniboit      introduction                                         operational semantics abductive proofprocedure  abductive logic programming alp extension  builds iff proven sound relevant  logic programming formalise hypothetical reasoning class programs implemented using constraint  typically distinguishes facts deﬁned static handling rules integrated javabased hy  theory known true false potentially true ab pothetical reasoning alberti et al   ducible atoms hypotheses    applications distinction ade  dynamic alp  quate capture dynamics knowledge reasoning alp kakas et al  tuple hkb ic ai  confronted environment evolution turn kb logic program set predicates called ab  hypotheses gain lose strength events happen ducibles deﬁned kb ic set formulae  world example medical domain called integrity constraints abductive explanation  kind hypothetical reasoning diagnostic inference goal set ∆ ⊆ st kb ∪∆  kb ∪∆  ic  model symptoms observations diseases di new dynamically upcoming events encoded atoms  rectly measurable hypotheses test results new possibly hdescr time descr ground term represent  upcoming symptoms instead ing event time integer representing time  interpreted hypotheses conﬁrmable events    event happened events recorded set    abductive derivation veriﬁes goal using deduction called history hap containing atoms dynamic  logic programming possibly assuming abductive logic program dalp sequence alps  abducibles true order process each grounded given history write dalphap  verge meaningful explanation abductive theory indicate abductive logic program obtained ground  mally comes set integrity constraints ic ing dalp history hap history dynami  required hypotheses consistent ic cally grows during computation new events happen    extended framework distinguish instance dalp hap framework queried  classes abducible literals hypotheses classically goal contain predicates deﬁned  derstood expectations events expectations kb abducibles abductive computation produces  “positive” conﬁrmed certain events occurring set ∆ hypotheses partitioned sets general hy  “negative” conﬁrmed certain events occurring potheses ∆a expectations exp containing positive    propose new language deﬁne abductive logic pro expectations form edescr time atoms  grams expectations inspired iff proof procedure negative expectations endescr time atoms  fung kowalski  semantics extends  typically expectations contain variables  classical alp language permits express ab clp constraints imposed variable quantiﬁcation  ducible hypotheses expectations variables existential expectations universal en expecta  straints new framework model reason tions unless variable used outside expec  number concrete application scenaria frame tation explicit negation applied expectations  work permits reason deadlines express constraints universally quantiﬁed variables  correctly handle expectations universal quantiﬁca sidered quantiﬁer restrictions instance enpx  tion typically happens negative expectations “the   semantics ∀x enpx  patient expected show symptom times” declarative semantics dalp hap based                                                        ground version considers clplike constraints deﬁned    ∗this work partially funded information society tech  nologies programme european commission ist source events modelled imagined   socs project miur cofin  projects queue  sviluppo veriﬁca di sistemi multiagente basati sulla logica each abducible predicate ∈ en abducible  la gestione la negoziazione automatica dei diritti sulle opere predicate ¬a implicitly deﬁned represent negation  dell’ingegno digitali aspetti giuridici informatici integrity constraint ∀x¬ax ax → falsepredicates abductive explanation entail patient’s temperature oc alter  goal satisfy integrity constraints           natively caused disease case red spots        compkb   ∪ ∆a ∪ exp  ∪ hap             expected appear patient’s skin  days fi        compkb   ∪ ∆a ∪ exp  ∪ hap     ic        nally cause provided exam gives                                                        positive result  iff proof procedure symbol  stands symptoms ← diseased ∧ diseased  three valued entailment comp stands completion ∧entemt  ∧      sets expectations instance dalp hap symptoms ← diseased t∧  select ones consistent respect expec ered spots ∧  ≤    tations event expected symptoms ← diseased ∧ eexamr   happen happen conﬁrmed      initial goal observation symptoms                                                               disease  deﬁnition  set exp econsistent iff each ground model  classical abducible expectations  term        ep enp ⊆ exp               used corroborate explanations    given history hap set expectations exp notice twofold use expectations sec  ﬁrmed each ground term        ond clause expectation deﬁnes event      comphap   ∪ exp  ∪ ep → hp                support diagnosis ered spots                                          false                       ∪enp →  ¬hp                 simply deﬁnes expected course illness order                                                        diagnosis corroborated eexamr   write dalphap≈∆a∪expg      equations  hold intended suggestion physician exam    operational semantics extension iff each request information  state deﬁned tuple deﬁning conﬁrmed disconﬁrmed combinations abducible literals reﬁned  pending expectations resolvent set means ics example result exam  abduced literals expectations constraint store positive assume patient affected                                           hap  set partially solved integrity constraints  disease hexamr  → diseased    derivation sequence nodes tj initial dynamic occurrence events drive generation  node contains goal initial resolvent selection abductive explanations query  nodes tj   obtained applying symptoms  three alternative explanations  set transitions quiescence                    diseased  ∀t entemt                                                              disease             deﬁnition  starting instance dalphapi             ∃t≤ red spots  exists successful derivation goal iff proof tree diseased  eexamr    root node consistent leaf node tn event htem  happens ﬁrst set contains dis  exists tn ground variable assignment conﬁrmed expectation ∀t  entemt    constraints satisﬁed case write ruled deadline ≤  event red spots                             hapf                       does happen second set excluded                 dalphapi  ∼∆a∪expg                                                        remains acceptable    transitions iff enlarged finally integrity constraints suggest possible cures  clp speciﬁc transitions accommodating warn consequences taking certain drugs  cepts hypotheses conﬁrmation evolving history        diseased → easpirin    clpfd solver extended dealing         ∨etemt  ∧   ∧     universally quantiﬁed variables quantiﬁer restrictions  instance given expectations ∀xenpx   conclusions  ∃y epy  solver able infer ∃y ≥epy  presented sciff abductive proofprocedure able  best knowledge proofprocedure side proposing explanations infer expectations  able abduce atoms containing universally quantiﬁed vari happening events expectations abducibles  ables handles constraints la clp uni expressive contain universally quantiﬁed variables  versally quantiﬁed variables                         possibly clp constraints represent requests    proved soundness allowed dalps             information expected evolution sciff                                                        able process dynamically incoming events conﬁrm  theorem  given dalphapi    ground goal              hap                                       expectations providing corroboration abduced hypotheses  dalphapi   ∼∆    alphap≈∆g                                                        references    case study                                         alberti et al  alberti chesani gavanelli  conclude example medical domain  lamma mello torroni compliance veriﬁcation  show main contributions work dynamic agent interaction logicbased software tool applied artiﬁcial  tection new facts conﬁrmation hypotheses intelligence  appear  events suppose symptom caused three fung kowalski  fung kowalski  types diseases let disease acceptable explanation iff proof procedure abductive logic programming journal  patient affected case logic programming – november                                                                          proof based correspondence drawn sciff kakas et al  ac kakas ra kowalski toni ab  iff transitions exploits soundness results iff ductive logic programming log comput – 
