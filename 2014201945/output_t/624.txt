    parametric hierarchical planner experimenting abstraction techniques                               giuliano armano giancarlo cherchi eloisa vargiu                             department electrical electronical engineering                                              university cagliari                                               cagliari italy                                      armano cherchi vargiu dieeunicait                            abstract                          entities belonging level superior translation                                                          rules given pddllike format explicitly defined       paper presents parametric devised                                                          support abstractions       implemented perform hierarchical plan•                                                           experiments performed classical       ning delegating actual search exter•                                                         planning domains widely acknowledged planning       nal planner parameter level ab•                                                         community specifically tailored ab•      straction including ground aimed                                                          straction better assess significance results       giving better insight ex•                                                         three different planners used performing       ploitation abstract spaces used                                                          experiments       solving complex planning problems compari•                                                           remainder paper organized follows       sons instances                                                          relevant work planning abstraction       hierarchical planner non hierarchical                                                          briefly recalled reader better insight       counterparts improve significance                                                          issues deemed relevant overall architecture       results three different planners se•                                                         illustrated including semiautomatic       lected used performing experiments                                                          technique developed generating abstract spaces       facilitate setting experimental envi•                                                         subsequently experiments described results       ronments novel semiautomatic technique                                                          discussed finally conclusions drawn future       used generate abstraction hierarchies starting                                                          work outlined       groundlevel domain descriptions       described                                          related work    introduction                                         building ordered set abstractions controlling                                                          search proven effective approach dealing   experimental evidence humans repeatedly                                                          complexity planning tasks technique   use abstractions solving different kinds prob•                                                         requires original search space mapped cor•  lems stillings et ai  justifying research                                                          responding abstract spaces irrelevant details   field automated hierarchical planning                                                          disregarded different levels granularity     apparent abstraction usually effective                                                            main abstraction mechanisms studied   simple problems overhead introduced                                                          literature action statebased   need going forth abstract spaces                                                          combines group actions form macrooperators   performing search words enforcing                                                          korf  exploits representations   abstraction simple problems end wasting                                                          domain given lower level signifi•  computational resources certain assumptions                                                          forms rely relaxed models obtained drop•  abstraction significantly reduce search time                                                          ping operators applicability conditions sacerdoti   applied complex problems knoblock                                                            ii reduced models obtained com•    order investigate impact abstraction                                                         pletely removing certain conditions problem   mechanisms search complexity devised                                                          space knoblock  models preserving   implemented hierarchical wrapper able embody                                                          provability plans hold ground level per•  domainindependent planner provided compliance                                                          form weakening original problem space   strips subset pddl  standard mcder                                                         suffering drawback introducing false solu•  mott et al  ensured embodied planner                                                          tions abstract levels giunchiglia walsh   exploited level hierarchy each level                                                             characterized definitions suitable decoup•                                                           knoblocks abstraction hierarchies each predi•  ling levels guaranteed using domain                                                        cate associated unique level abstraction   specific rules establish correspondence                                                                                                    planning according constraints imposed ordered   ground level goal obtained translating   monotonicity property knoblock  hier• downward effects note initial state each   archy obtained progressively removing certain refinement depends previous refinement   predicates domain problem space        refinements performed according order     general perspective let assume abstrac• specified abstract plan avoid incidental dele•  tions occur types predicates operators tion subgoals attained during previous refine•  relaxed models typical example predicatebased ments added list subgoals results   abstraction macrooperators example translating downward effects current ab•  operatorbased abstraction                            stract operator refined                                                            attempt refine current abstract solution    architecture                                  fails invoked abstract solution                                                           unless number abstract solutions far ex•  called hwq standing paramet• ceeds given threshold abstract solution   ric hierarchical wrapper note square brackets successfully refined ensure completeness   indicating ability embed ex• algorithm overall search performed ground   ternal planner planner notation level process ends ground solution   hwp shall used denote instance hw able overall search fails   exploit planning capabilities     figure  illustrates architecture fo•  extending pddl dealing   cusing main components engine      abstraction   embedded planner devoted controlling   communication adjacent levels problem corresponding domain described   exploited perform planning given level accordance standard pddl  syntax using   abstraction                                       define problem define domain statements re•    domainindependent planner embodied      spectively bidirectional communica•  provided compliance  tion occurs adjacent levels extension   strips subset pddl  standard ensured    standard pddl devised adopted                                                            precisely syntactic construct define hierar•                                                        chy introduced encapsulates ordered set                                                         domains corresponding set map•                                                        pings adjacent levels abstraction                                                         mappings given term types predicates op•                                                        erators three subfields introduced                                                           types  predicates  actions represent                                                         abstraction dimensions general form                                                         construct   figure  architecture                                                            define hierarchy     supports multiplelevel hierar•    domains domainname   chy sake simplicity following as•   imapping srcdomam dstdomain   sume abstract level exists giving rise  types typesdef   twolevel ground abstract hierarchical descrip• predicates predicatesdef   tion                                                       tactions actionsdef       planning algorithm                              following notation adopted  types field   instantiated external planner hwp   represent clause mapping types   takes inputs groundlevel problem structured   description corresponding domain including set          abstracttype groundtype   rules used mapping ground abstract   states viceversa fact perform planning dif• specifies groundtype   ferent levels abstraction engine hw op• abstracttype performing upward translations   erate bidirectional translations upwards down•  disregard type following notation used   wards permit communication adjacent levels     solution given problem engine   hwp translates init goal sections     limitations existing planners   ground abstract level invoked search process incrementally querying solution   abstract solution subsequently each abstract op• simulated preliminarily querying abstract solutions   erator refined repeatedly invoking refine•   released incrementally demand   ment abstract operator performed activating       planning                                                                                                         tabic  heuristics pruning operators graph                      nil groundtype                         action remains unchanged parame•                                                             ters disregarded     following notation adopted       action removed   predicates field represent clause mapping        action expressed combination actions   predicates                                                belonging ground domain                                                              new operator defined scratch                                                           generating abstractions                                                          facilitate setting abstract spaces alterna•    specifies groundpredicate pre•      tive handcoded approach used armano et ai   served going upward viceversa note  novel semiautomatic technique generating   differences exist mapping predicate adja• abstraction hierarchies starting groundlevel domain   cent levels corresponding clause omitted  descriptions devised adopted     disregard predicate performing upward       particular perspective performing abstrac•  translations following notation used          tion basically involves executing steps searching                                                          macrooperator schemata through priori poste•  nil                                                   riori analysis ii selecting schemata evi•   groundpredicate pl     tl         denced far translating abstract operators                                                            subsection concentrate task find•    specifies groundpredicate translated ing macrooperator schemata apriori   abstractlevel predicate                     analysis performed given domain problem     addition abstractpredicate expressed     adopting aposteriori technique illustrated   logical combination groundlevel predicates armano vargiu  aimed finding macro    build set operators operator schemata according postmortem analysis   abstract domain actions field kinds performed plan chunks   mapping expressed                                                                                                    planning   step performed algorithm building ing graph blocksworld domain resulting   pruning directed graph nodes represent   macrooperator schemata  used concate•  operators edges represent relations  nation pickupstack unstackputdown pickup  effects source node preconditions desti• stackunstack   nation node particular each source node   each destination node representing operators defined   given domain corresponding edge labeled   pair nonnegative numbers denoted   pair accounts predicates estab•  lish negate preconditions   worth noting source destination node co•  incide giving rise selfreference     pruning performed according domain  independent heuristics reported table  note figure  directed graph pruning representing static   pruned graph does contain edges labeled relations operators blocksworld domain   corresponding operators completely independent                                                            step ii performed selecting subset re•    point promising macrooperator                                                          sulting macrooperator schemata translating   schemata easily extracted pruned graph                                                          abstract operators principle generating ab•  each path related candidate macrooperator                                                          stract operator deterministic task reason                                                        current implementation mecha•                                                         nism completely automated neverthe•                                                         simplest way generating abstract operator                                                          consists deleting abstract level predicates                                                          occur preconditions effects                                                          selected macrooperator process influences                                                          influenced translation rules apply                                                          types predicates instance absence                                                          predicate precondition effect induced ab•  figure  directed graph pruning representing static stract operator entails deletion abstract level   relations operators blocksworld domain  blocksworld example macrooperator                                                          schemata disregarded stackunstack      example let consider wellknown blocks                                                        pickupputdown alter state   world domain encompassing operators stack pick•                                                         domain resulting set effects fact   unstack putdown corresponding graph shown                                                          apparent composed complementary   figure  bearing mind mechanism                                                          actions   applied operators pairs let concentrate   instance relation holds stack  worth pointing approach described   source node pickup destination node          used generating abstractions tai•    considering effects stack operator lored given problem simply adding dummy                                                          operator representing goals problem    holding                                    goal operator preconditions set   clear                                       effects representing logic conjunct   clear                                             predicates characterize goal input problem   handempty                                            way sequences deemed relevant solve                                               problem easily evidence end                                                          goal operator   preconditions pickup operator                                                           experimental results    clear    ontable                                          current prototype imple•  handempty                                            mented experiments performed                                                          three planners graphplan blum furst    label corresponding edge pair    blackbox kautz selman  lpg ger  apparent stack establishes preconditions  evini serina  following gp bb   pickup negating                       lpg shall used denote graphplan     pruning activity figure  shows result• blackbox lpg algorithms hwgp                                                                 interested finding macrooperators                                                             account selfreferences       planning                                                                                                hwbb hwlpg shall used denote     compares cpu time each planner set    hierarchical counterparts                            problems taken aips planning competitions      assess capability abstraction improve dashes show problem instances solved    search performed tests domains taken corresponding adopted time      mps planning competi•   bound    tions long  bacchus  long  elevator elevator experiments show gp bb    logistics blocksworld gripper zenotravel experi• cpu time increases rapidly trying solve    ments conducted machine powered intel problems increasing length hwgp    celeron cpu working  mhz equipped    hwbb solving problems greater regularity    mb ram time bound  cpu seconds    relation number steps cpu    adopted                                    time remains exponential lpg able solve long                                                          plans short time doing away need                                              hw          resort hwlpg          gp         bb hw           lpg                 gp                         lpg                         elevator                                                                                                                                                                             logistics                                                                                                                                   figure  cpu time comparisons blocksworld domain                                     logistics domain gp easily solves problems                       blocksworld                       certain length unable solve problems                                                      imposed time limits given threshold ex•                            ceeded hand hwgp succeeds solving                                   problems increasing length encountering                                 difficulties bb performs better hwbb                                        small problems hwbbj outperforms bb                                                          complex problems lpg able solve long plans                                                                         seconds unknown reasons lpg                                          able refine abstract operator invoked                                       engine hw lpg                                           blocksworld tests performed domain reveal                       zenotravel                        similar trend gp hwgp                                 performs slightly better bb performs                                   better hw bb simple problems                                      hwbb outperforms bb problems medium com•                                    plexity lpg able solve problems solution                                                                                      length limited  steps domain hwlpg                                                                                        clearly outperforms lpg complex problems                        gripper                                                                                                                                                        table  performance comparison bb gp lpg   hierarchical counterparts        domains structured according   ground abstract level having gen• figure  cpu time comparisons blocksworld domain   erated following approach described previous  zenotravel unfortunately domain gp    subsection each domain tests per• hwgp able successfully tackle    formed characterized increasing complexity table  problems domain improvement hwbb                                                                                                    planning 
