            computational aspects analyzing social network dynamics                 chris barrett    harry hunt iii      madhav marathe        ravi                    daniel rosenkrantz      richard stearns      mayur thakur                              abstract                            following examples present motivation                                                        problems considered paper      motivated applications spread epi      demics propagation inﬂuence social  example  consider contact network popula      networks propose formal model analyz   tion city nodes represent individuals      ing dynamics networks model      edges represent contact individuals      stochastic version discrete dynamical sys edge nodes corresponding individuals      tems using model formulate study    come contact each during certain period      computational complexity fundamental   time want study spread epidemics popu      problems called reachability predecessor ex lation best control popular method mod                                                                                                     istence problems arise context eling spread epidemics sir model eubank et al                                                                  cial networks point implications   acronym stands susceptibleinfected      results computational models recovered three possible states each individual      hopﬁeld networks communicating ﬁnite state ma   sume simplicity total population ﬁxed      chines systolic arrays                       births deaths time susceptible node                                                        infected certain probability depending                                                        number infected neighbors given time step                                                        tletst denote fraction susceptible individuals    introduction motivation                        denote fraction infected individuals rt denote                                                        fraction recovered individuals context  growing importance social networks analysis                                                        terest study questions following form given positive  dynamics networks attracting attention                                                        numbers  α    β     positive  researchers paper propose multiagentbased                                                        integer τ probability event “it  τ β”  mal model social network dynamics study funda                                                        ditioned event “it α”atleastp question  mental analysis problems arising context                                                        example reachability problem formal model  abstract view social network dynamics model each                                                        considered paper  individual agent social network represented  node underlying undirected graph edges example  second example consider social  graph model dependencies agents depending ﬂuence network edge individuals denotes  context edge underlying graph denote exert certain degree inﬂuence each  “knows” relationship “can infected by” relationship suppose company wants market new product using  “lives close to” relationship “has common interests” rela word mouth advertising kempe et al thecom  tionship each node state stochastic pany’s goal identify suitable initial subset individ  transition function evaluates each time step com uals free samples sent prob  pute value state time step inputs ability number individuals idea  transition function node state node propagate stepsisatleastn reasonable  neighbors underlying graph   model propagation stochastic process individ                                                        uals use different criteria decide par         network dynamics simulation science laboratory vir ticipate propagation example represents  ginia bioinformatics institute virginia tech blacksburg va             cbarrett mmarathevbivtedu            general form predecessor existence problem studied   email                                        paper    department science university albany–  suny albany ny   email hunt ravi djr       formally model dynamics social networks using dis  rescsalbanyedu                                   crete dynamical systems refer model stochas    department science university missouri– tic synchronous dynamical ssyds each ssyds  rolla rolla mo  email thakurkumredu       domain speciﬁed pair                                                    ijcai                                                    gve undirected graph nodes each node version problem mentioned example  use  having state value domain graph repre reachability denote problem study vari  sents topological structure social network set ant problem called treachability problem   fffn collection stochastic interaction integer speciﬁed problem  functions fi denotes stochastic local stance goal determine starting  transition function associated node vi  ≤ ≤ na reach steps probability  conﬁguration ssyds nvector bbbn predecessor existence problem denoted pre  bi ∈ value state node vi  ≤ ≤ given dynamical conﬁguration    single ssyds transition conﬁguration probability value question  obtained updating state each node syn ﬁguration c starting c reach  chronously using corresponding local transition function step probability ab   ≤ ≤ inputs function fi state stract version problem discussed example   values node vi neighbors vi each example  addresses tstep predecessors  combination inputs fi each element θ func ≥ thepre problem concerned ﬁnding immediate  tion fi speciﬁes probability state value vi step predecessors  θ each combination inputs sum proba sequential dynamical systems sdss nodes  bilities assigned fi values θ ∈  date states given sequential order syn    clarify notion stochastic local transition chronously considered literature    functions used consider node vi let vi  vi   example barret et al stochastic version    vir represent neighbors vi gforanyj tlet sdss denoted ssdss deﬁned manner sim    sj denote state node vj time local transition ilar ssydss results presented paper  function fi node vi satisﬁes following equation applicable ssdss             t−      t−           t−  prst  θ   θs    θ    θ                            ir    ir               summary results                                   fi θ θi θir θ reachability ssydss ssdss                                                        versions reachability problem denoted    generalized phase space ps ssyds di                                                        reachability   treachability ssydss  rected graph deﬁned follows node ps                                                      deﬁned previous section show ver  each conﬁguration  directed edge                                         node representing conﬁguration c representing sions hard complexity class rspace  ﬁguration probability reach sult proven showing stochastic dynamical  c step strictly greater zero gen efﬁciently simulate linear space bounded probabilistic  erally directed edge c associated turing machine hardness results hold  positive number  p≤  representing probability underlying graph simple path minor mod  onestep transition probability value di iﬁcation proof hardness result shown  rected each edge generalized phase space represents hold ssdss nodes update states sequen                                                        tially results point unless complexity  markov chain dynamical note dy                   namical boolean domain nodes classes rspace coincide efﬁcient way  number possible conﬁgurations size predicting behavior stochastic dynamical                                                          contrast stochastic dynamical systems reach  markov chain exponential size underlying dy                       namical reason known results markov ability problems rspace hard corresponding  chains directly used obtain results obtained reachability problems deterministic discrete dynamical                                                                                                         paper                                        systems complete dspace barret et al                                                                                 ⊆              generalized phase space directed known rspace dspace   saks  edge c say c predecessor zhou  known exponent  ﬁguration general conﬁguration generalized phase reduced  reasonable complex  space multiple predecessors                 ity theoretic assumptions reachability problems stochas    goal analysis problem determine tic systems harder corresponding problems  given ssyds speciﬁed property consider deterministic systems  analysis problems context dynamical systems predecessor existence ssydss  reachability predecessor existenceasmen                                                        show predecessor existence abbreviated pre  tioned earlier study analysis problems useful problem ssydss ﬁnite domain solved  obtaining understanding dynamics social net polynomial time following conditions hold  works deﬁnitions problems considered paper treewidth maximum node degree underlying  given    reachability problem given dynamical  deﬁnitions complexity classes used paper  conﬁgurations probability value refer reader papadimitriou   question starting reach deﬁnitions treewidth related terms refer  probability abstract general reader bodlaender                                                     ijcai                                                    graph bounded ii number distinct prob  machine reaches accepting rejecting  ability values used specifying probability distributions ﬁguration halts  local transition functions bounded algorithm given probabilistic onspace bounded turing machine  based dynamic programming result halts moves input string  extended ssdss                                    say accepts probability event    noted pre problem remains np  reaches accepting conﬁguration starting ini  complete deterministic dynamical systems tial conﬁguration input onewaytoview  treewidth maximum node degree unbounded computation proof tree leaf nodes  barrett et al consequence problem labeled accepting rejecting conﬁgurations  mains computationally intractable stochastic dynam root initial conﬁguration each internal node ex  ical systems                                 actly children labels edges    results reachability predecessor existence noting probability transition conﬁguration  problems initiate study stochastic discrete dynam probability reaching leaf node terminating  ical systems graphs bounded treewidth known ﬁguration denoted prl product weights  dca radius equivalently viewed syn edges unique path root leaf                                                     chronous dynamical systems graphs treewidth probability accepting input string l∈a prlwhere  barrett et al ssydss treewidth bounded set leaves marked accepting  graphs viewed generalized stochastic ca                                                        theorem  exists constant μ  applications computational models            reachability   reachability  problems ssydss  ssydss viewed stochastic analogs systolic net ssdss rspacenhard following  works kung  ssydss closely related restrictions hold underlying graph simple path  stochastic ca wolfram theyalsoserveasaformal  pathwidth treewidth  particular  model studying problems context multiagent degree each node ii size domain  systems wooldridge  addition ssydss state values each node μ iii number  related known computational models including distinct local transition functions three  discrete recurrent hopﬁeld networks orponen   used machine learning pattern recognition proof sketch sketch proof treachability  current communicating ﬁnite state machines harel et al problem ssydss proof reachability similar                                                                       Σ Σ            used model verify distributed sys let        qqf  denote linear space  tems hardness results reachability problems bounded probabilistic turing machine ﬁnite                                                                   Σ                   Σ ⊂ Σ  ssydss immediately imply analogous results each set states tape alphabet input al                                                                  ∈                       ∈  models                                         phabet   initial state qf ﬁnal ac                                                        cepting state transition relation given cur    complexity reachability ssydss          rent state current symbol scanned readwrite                                                        head speciﬁes state symbol written     ssdss                                              cell scanned head direction head  section show reachability problems ment left right tape cell stay cell  ssydss ssdss hard complexity class relation speciﬁes moves each probability  rspacen proof shows problem remains  let  aa input string given  computationally intractable simple ssydss ss  c end markers  dss systems underlying graph simple ﬁguration instantaneous description id consists  path                                                current state contents tape cells po    mentioned earlier establish complexity result sition head machine starts head  showing given linear space bounded probabilistic tape cell containing  id time zero  turing machine tm simulated appropriate  qaaan  assume loss  ssyds recall deﬁnitions related probabilistic generality accepts replaces symbols  tms                                                  tape cells end markers symbol      probabilistic turing machine papadimitriou  moves head cell containing  halts state qf   tm consisting ﬁnite control readwrite tape ﬁnal id  qf        id  initially contains input string ﬁnite control time τ denoted idτ    accepting state rejecting state collection given input string create ssyds smx     coin tossing states conﬁguration turing ma set conﬁgurations include smx  chine speciﬁes state ﬁnite control description constructed ≥ ifm starting  contents tape position head reaches conﬁguration steps probability pthen    tape conﬁguration accepting rejecting cointossing smx starting reaches conﬁguration steps  state ﬁnite control accepting rejecting coin probability    tossing respectively transition relation turing ma underlying graph gve smx simple path                                                                                                     th  chine coin tossing conﬁguration nodes  node vi corresponds tape  exactly possible moves each probability cell  ≤ ≤ node vi adjacent nodes vi−                                                    ijcai                                                    vi exceptions node adjacent function produces output  node node vn adjacent node vn−thestate state corresponding node use syds  each node vi takes value domain Σ ∪ × Σ ∪ note deterministic synchronous dynamical refer  × Σ ×                                       ence barrett et al presents polynomial time algo    τ  ≥  astepofm     transforms idτ  rithm pre problem sydss boolean  idτ  probabilistically captured main underlying graph treewidth bounded  collection local probabilistic transition functions  each node computes symmetric function algo  fffn  fi function node vi  ≤ ≤ rithm relies approach used barrett et al  follows ssyds simulates each step begin sketch algorithm reference  steps let idτccj− cj cjcn                                                         theorem  barrett et al pre problem  cj denotes current state content tape                                                        sydss boolean domain underlying graph  cell cj head currently scanning cell node                                                        treewidth bounded each node computes symmetric  corresponding cell vj ﬁrst step nodes                                                        function solved polynomial time  vj make deterministic copy contents  change state node vj does coin toss mod                                                    proof sketch let given syds underlying  iﬁes cj cj σ σ denotes outcome coin         toss   note idτ identi graph ve treewidth known                                                        tree decomposition xi  ∈  cal idτ possibly cj− cj  cjlet                                                        constructed time polynomial size  three values dj− dj dj probability                                                         binary tree  aj− aj aj probability  note aj dj                                                                                                          values encode head location correspondingly each node children bodlaender                                                            given node tree decomposition syds  step nodes ssyds vj− vj vj                                                        nodes referred explicit nodes ifagiven  copy state vj goes dj aj vj− goes dj−                                                                                      explicit node explicit node parent   aj− vj goes dj aj depending coin                                           toss value σ moves deterministic node referred inherited node  probability reaching conﬁguration  does occur parent iitisreferredtoasanorig  steps                                        inating node set explicit nodes occurring                                                        subtree rooted explicit nodes    seen smx reaches conﬁguration prob  ability  iff accepts probability referred hidden nodes loss generality                                                        assumed number nodes fewer   size domain smx constant depends  Σ                                      children number nodes                                                          let conﬁguration speciﬁed given instance    possible formulate reachability problems pre problem consider given node  family ﬁnal conﬁgurations speciﬁed question tree decomposition suppose α given assignment state  reach conﬁgurations values explicit nodes β given assignment  given probability example family consists state values hidden nodes combined  conﬁgurations nodes state signment α ∪ β said viable hidden  value  context studying spread epidemics node evaluation local transition function  social networks family conﬁgurations rep fw gives value cw using value βw  resent situations large section population value α ∪ βu neighbor combined  infected slightly modifying proof theo assignment α ∪ β said strongly viable  rem possible show corresponding reachability condition holds node hidden                           problem remains rspace hard                       node originating node                                                          given node tree decomposition given    results predecessor existence                   assignment β states hidden nodes ideﬁne  section develops polynomial time algorithm function hβ  xi −→ nwheren set natural  pre problem restricted forms stochastic dynamical sys numbers follows ∈ xi  tems main result section following                                                            hβy number hidden nodes  theorem  consider class ssydss boolean y∈e βw  domain satisfying following conditions degree                                                        value hβy number hidden nodes  each node underlying graph bounded                                                        old value input parameter computation new  treewidth underlying graph bounded num                                                        value yandβw  ber distinct probability values used specifying                                                          given node tree decomposition given  stochastic node functions bounded pre problem                                                        assignment  states explicit nodes deﬁne  ssydss solved polynomial time                   α                                                                                        set hα set functions xi    proof theorem based known exists assignment β states hidden nodes  sult restricted class deterministic sydss deter  ministic syds each local transition function determinis boolean function symmetric value depends  tic each combination inputs function number inputs                                                     ijcai                                                    satisfying following conditions α ∪ β viable probability values used specify fi ρρ  ρtthen  hβ                                    Γi represents number distinct values collection    let maximum node degree given ρ  − ρρ  − ρ  ρt  − ρt  β ∈ xi maximum possible value hβy show construct deterministic syds  maximum possible value xi boolean domain stochastic syds sthe  treewidth function hβ represented table underlying graph gve constructed follows  entries each entry integer value begin contains copy nodes edges  range  through upper bound hα each node vi  ≤ ≤ create                                                                                                                                        Γi  additional nodes let vi  vi   vi  denote    pre problem solved using bottomup additional nodes called auxiliary nodes associated  dynamic programming decomposition tree each vi each auxiliary node vi associated  node  table entry each assignment α probability value speciﬁcation stochastic local                                                                                                 states explicit nodes computed value transition function fi each nodes vi   ≤ ≤                                       α      entry each assignment α set letj refer adjacent vifurtherifvi adjacent vi  vi   vi  entire table node treewidth constant               ≤  ≤                                                        each nodes vi  adjacent vi   size table each node decomposition tree                                                        vi   vi finally node denoted  polynomial number nodes underlying  edge each auxiliary node                                                                                 graph ve  using facts shown created  bottomup computation tables nodes local transition functions nodes cho  carried polynomial time                       sen follows each node vi  ≤ ≤ local tran    obtain polynomial time algorithm alluded sition function gi constant function outputs   statement theorem  need extend dynamic input each node vi local transition functions                                                                                                         programming algorithm general class symmetric auxiliary nodes vi chosen follows let vi  functions rsymmetric functions boolean func denote state value node vi speciﬁed ﬁnal                                                        ﬁguration each  ≤ ≤ consider auxiliary  tion rsymmetric inputs partitioned                                          classes value function depends node vi andletρj denote probability associated vi                                                                                            number ’s each class note let ni denote set neighbors vi  xthe                                                                                               symmetric function symmetric maximum deterministic local transition function outputs                                               Δ                                               node degree underlying graph syds following conditions holds  each node function Δ  symmetric following                                                                                initial value vi  input combina  lemma shows result theorem  extended                                        case each node computes symmetric func tion formed values assigned nodes ni                                                                        tion corresponding algorithm obtained modifying transition vi vi  probability assigned fi equals                                                        ρj  dynamic programming outline given proof                    orem  details omitted space reasons initial value vi  input combina                                                                                                                                                          tion formed values assigned nodes ni  lemma   pre problem sydss boolean                   domain underlying graph treewidth bounded transition vi vi  probability assigned fi does  each node computes rsymmetric function ≥  equal ρj  solved polynomial time                       local transition function gx node deﬁned                                                        follows let nx denote set neighbors    state main idea proof construction nx set auxiliary nodes                                                         ∈ nx deﬁne function ηw follows state  orem  pre problem ssydss satisfying                                                        value  ηwotherwiseηw proba  ditions theorem  efﬁciently reduced pre  problem deterministic sydss boolean domain bility value associated auxiliary node wthevalueof                                                        function equal  Πw∈n   ≥   each local transition function rsymmetric                                η                                                            probability threshold speciﬁed  ≥   underlying graph bounded treewidth                                                            pre problem instance ssyds  problem solved polynomial time                         lemma  theorem  follow sketch    ﬁnal conﬁguration   value   reduction                                       nodes completes reduction    let ssyds satisfying conditions theo seen reduction carried polynomial time  rem  let denote given conﬁguration following lemma points properties  need determine predecessor construction  probability pletk Δ ﬁxed values denote lemma  graph treewidth bounded  treewidth maximum node degree each local transition functions rsymmetric  lying graph gve denoting  consider stochastic syds conﬁguration  node viandletΓi ﬁxed value denote total num predecessor probability  ber probability values used specify stochastic lo predecessor conﬁguration  cal transition function fi vi note distinct deterministic syds                                                    ijcai                                                    
