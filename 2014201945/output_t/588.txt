       waiting relocation strategies online stochastic vehicle routing                                   russell bent pascal van hentenryck                                             brown university                                         rbentpvhcsbrownedu                          abstract                          using samplingbased approach idea generate                                                        scenarios consisting existing sampled customers      paper considers online stochastic multiple ve solve scenarios using large neighborhood search shaw      hicle routing time windows requests  make online decisions based scenario      arrive dynamically goal maximize lutions compared online stochastic problems      number serviced customers contrary ear    packet scheduling chang et al  reservation      lier algorithms vehicles known systems benoist et al  online stochastic vehicle rout      customers paper investigates waiting ing introduces additional difﬁculty takes time serve      location strategies vehicles wait request serving request involves moving cus      current location relocate arbitrary sites tomer processing request addition rout      experimental results show waiting reloca ing plan scenario schedule “sampled” customer      tion strategies dramatically improve customer contrast actual request vehicle      service especially problems highly dy occurs applications best proceed      namic contain late requests deci   situation arises key issue studied paper      sions wait relocate exploit    bent van hentenryck took conservative ap      problemspeciﬁc features obtained proach issue algorithm reviewed sub      including choices online algorithm sequently ﬁrst ﬁlters “sampled” customers      necessarily suboptimal ofﬂine setting     plans leaving actual requests vehicles                                                        come idle sent actual customers chosen    introduction                                       ﬁltered solutions scenarios apparently design  vehicle routing time windows hard combinatorial decision motivated fact sampled customers  optimization problem important applications actually place request fact  distribution transportation scheduling received sampled customer served scenario solution pro  considerable attention decades sophisticated vides insight nature uncertainty solutions  algorithms available ﬁnd nearoptimal solutions key contribution paper propose novel  reasonable time recent years attention shifted strategies waiting relocation address issue  line andor stochastic versions problem stochastic better exploit stochastic information online vehicle routing  online versions motivated inherent uncertain waiting strategy recognizes beneﬁcial  ties arising industrial problems technological vehicle wait current location instead moving  velopments onboard computers communication known customer relocation strategy goes step  systems transportation systems opportunity vehicles customer locations  update plans vehicle deployed requests placed new strategies make    online stochastic problems customers arrive dynami fundamental contributions  cally algorithm proceeds each customer request • vehicles wait relocate  time window during served al  time during algorithm execution  gorithm decide accept reject request trasts earlier approaches larsen et al   arrival accepted online algorithm serve van hemert  waiting relocation points  request online algorithm typically black deﬁned priori using knowledge distribution  boxes available make decisions optimization algorithm clustering customers heuristics  deterministic version problem conditional • decisions wait systemati  sampling procedure generate future requests chang cally derived stochastic information wait  et al  benoist et al     online stochastic vehicle routing ﬁrst studied bent paper contains comparison online stochas  van hentenryck  bent van hentenryck tic optimization pomdp approaches                                                     ijcai                                                                                                                                          n      ing relocation simply make available online customer capacities qρ qci routing      algorithms decisions necessarily suboptimal plan tuple routes ρρm each vehicle      ofﬂine setting contrasts heuristics dis each customer appears use      tribute waiting time routing plans mitrovic custρ custγ denote customers route ρ      minic et al  mitrovicminic laporte  aplanγ routing plan assigns unique successor pre      use stochastic information          decessor each served customer depot plan γ                                                        successor site denoted predecessor    • decision wait relocate solely relies sce       −      nario solutions speciﬁc properties distribu denoted       tion used blackbox strategies departure times routing plans prescribe departure      naturally transfer variety applications times vehicles departure times typically                                                        uniquely deﬁned vehicle depart different times  experimental results show waiting relocation speciﬁc customers visit assigned customers  strategies produce dramatic improvements customer deadline addition routing plan solution  service compared earlier algorithms bridging consist assignment σ  → starting  gap online solution ofﬂine posteriori times customers  solution uncertainty revealed im  provements particularly impressive highly dynamic vehicle routing problem position  stances late customers particular chal vehicle routing problem solution vehicle  lenging earlier algorithms                       routing problem time windows vrptw routing    rest paper organized follows sections – plan γ ρρm starting time assignment σ sat  present ofﬂine online problems sections – present isfying capacity time window constraints  online stochastic algorithm stepwise reﬁnements   ⎧                                                                 ⎪ qρj ≤                 ≤ ≤  cluding waiting relocation strategies section   ⎪                                                                 ⎨ σc − pc ≤ lcc        ∈ custγ  presents problem instances experimental results                                                         cγ ≡    σc ≥ maxec                                                                 ⎪     −       −                                                                 ⎩⎪  σc dc   pcc  ∈ custγ    ofﬂine problem                                            σcdc ≤ loc      ∈ custγ  input data  vehicle routing problem speciﬁed objective ﬁnd solution maximizing number  number customers visited pool ve served customers custγ objective function dif  hicles each customer makes request served fers optimization criterion used solomon bench  time window takes capacity vehi marks goal minimize number vehi  cle each vehicle starts depot serves customers cles case ties minimize total travel time  return depot deadline         highlights difference strategic planning    each problem contains set customers depot operational decision making maximizing number  othesets sites ∪o travel time                                                      served customers difﬁcult problems considered  sites denoted  each request associated cost associated relocating waiting fac  customer each customer makes tored travel time negligible  request use customer request interchangeably  request demand qc ≥  service time pc ≥  notations nonempty sequence firsts  each instance pool identical vehicles capacity lasts denote ﬁrst element nonempty                                                        sequence concatenation sequences  each vehicle starts depot                                                      −    each customer time window speciﬁed interval denoted  sifs sequence preﬁx                                                                −  −                              −     eclc satisfying ec ≤ lc time window repre sthens denotes sufﬁx   sents earliest latest possible arrival times vehicle sequence set filters denotes  serving customer words service customer sequence obtained removing elements  start early ec late lc customer  served ec vehicle arriving early  online problem  serve wait site time ec beginning                                                     online problem requests arrive dynamically al  service depot time window el   gorithm proceeds online algorithm maintains par  represents earliest departure latest possible return      −      −       −                                                        tial routing plan γ  ρ ρm consisting par  vehicles typically denotes beginning day                                                        tial route ρi each vehicle maintains par  deadline vehicles return tial assignment σ− starting times customers                                                             −  routing plans optimization algorithms vehicle routing custγ  lastρlastρm times spec  typically return routing plan speciﬁes order ify vehicle serving given customer departed  each vehicle visits customers vehicle route route customer vehicle customers  short starts depot serves customers returns vehicles departure times  depot customer appears route served  route sequence o ccno ci ∈ online algorithms disposal optimiza  ci distinct capacity route ρ sum tion algorithm given set customer requests                                                     ijcai                                                                      a                                                   Γ  online algorithm      rrh                       chooserequest   ρt          ←                                                         ρ                                                   ←   ri     σ ←  σ⊥                                            ∈     Γ ←  generatesolutionsρσr                    fr ←      ∈                                            ρ ∈ Γ          ←                                   Γ         acceptrequests   ρt−σt−rt  t−        ← firstfilterρ − ρtf        Γ ←  updateplansρt−σt− Γ                 fr ←  fr        idleρt−σt−                                return argmaxr ∈  fr          st ← chooserequestρt−  Γ              ρt ← ρt−  st                              figure  consensus online stochastic routing             σt ←  σt−lastρt− ←                                                        determines accept new requests ar             Γ ←ρ   ∈ Γ  firstρ − ρt−st                                                         rived plans accommodate new         ρt ← ρt−                                                        accepted requests line  removed Γitisim             σt ←  σt−                                                        portant stress plan ∈ Γ able       Γ ←  Γ ∪ generatesolutionsρtσt                                                         accommodate requests through insertion    return ρhσh                                                        placement equivalent sampled customer                                                        wise algorithm provide necessary service guar  generatesolutionsρtσt     Γ ←∅                                              antees paper customers accepted greedily    repeat                                             routing plan accommodate using stochastic                                                        information acceptingrejecting did bring signiﬁcant           ← samplet                                                        improvements algorithm determines           Γ ← Γ ∪oρtσt atr      time                                   vehicle idle service completed    return Γ                                          customer ρt− given departure times σt−if                                                        vehicle busy traveling servicing customer            figure  online stochastic routing         ρt− routing plan departure times remain                                                        lines – algorithm simply continues generating         −   −      −  −                           apairγ  σ  oγ σ  returns routing plan γ  plans line  vehicle idle algo    −         −                        ρ  ρ ρm  ρm maximizing custγ  satisfy rithm chooses request st serve using plans Γ line  ing c−γwherec−   denotes problemspeciﬁc  augments routing plan line  departure times  straints time windows each customer line  updates Γ remove plans incompatible       −  custγ  lastρlastρm tightened decisions line  useful review  σ−cσ−c online algorithms use proce details algorithm  dure samplet conditionally sample request distribu                                                          • vehicle idle time plan ssk  tion time time horizon                     departure times σ    rest paper describes online stochastic algo  rithms stepwise reﬁnements using algorithms bent ∨ maxσsk−dsk−skeskpsk ≤  van hentenryck basis clearly identify  contributions algorithms presented single ve words vehicle idle route  hicle generalization multiple vehicles obtained customers ﬁnished serving cus  naturally using pointwise decisions bent van henten tomer sk time  ryck                                           • algorithm assigns departure time cus                                                            tomer ρt− time line  vehicle    online vehicle routing                                 parts customer st time                                                          • routing plan ρ visits customer st  present generic online routing algorithm                    Γ  vehicle routing plan simply vehi removed decisions incom  cle route use terms interchangeably generic patible ρt line   online algorithm depicted figure  maintains set figure  depicts generate plans line  func  plans Γ representing scenario solutions used make tion generatesolutions generates scenario sam  decisions course computation time pling distribution time horizon time  algorithm maintains partial routing plan ρt vehicles return depot line   associated departure times σtandrt requests calls optimization algorithm routing plan  come available finally algorithm assumes set departure times time remains specify  requests available start computation make decisions figure  shows implement function  implementation includes service guarantees chooserequest obtain consensus algorithm  request accepted served               bent van hentenryck details    lines – initialize partial routing plan depar algorithm considers known requests line   ture times line  generates initial set plans used initializes evaluations lines – considers  decisions body algorithm lines – ﬁrst each routing plan ρ ∈ Γ line  retrieves request served                                                     ijcai                                                                            Γ                                                Γ  chooserequestcw   ρt                            chooserequestcr    ρt                                                               ∈ customers     ←   ai                                           ∈ ∪⊥                                        fr ←     fr ←                                           ρ ∈ Γ    ρ ∈ Γ                                             ← firstρ − ρt                                                                  ←       ← firstρ − ρt                                             ∈                                           return argmaxr ∈ customers fr                  ←                                                  figure  consensus relocation strategy         f⊥ ← f⊥    return argmaxr ∈ ∪⊥  fr                   mitrovicminic laporte  beauty al                                                        gorithm presented choice  figure  consensus algorithm waiting strategy wait fully automatic guided scenarios  ρ increments credit line  request  best evaluation selected line           relocation strategy    important emphasize critical point imple waiting strategy recognizes beneﬁcial                      ∈ Γ                          mentation solution ρ routing plan ρ ρt− ρ    wait current location instead serving accepted  starting partial route ρt− followed sequence request especially appropriate problems  quests coming sampling consequence bottleneck minimize travel times reason  guarantee request served ve ably easy serve customers challenge                                        ∈  hicle ρ  actual request  maximizing number served requests appealing  sampled customer s∈  precisely im                                                       explore relocation strategy consider moving  plementation figure  uses filterρ prune plan                                                       location sampled customers difﬁculty  ρ  requests  guarantees determine figure  proposes                  filter ρ   returns real customer natural relocation strategy fundamental idea avoid  vehicle departs customer requested service differentiating accepted sampled customers                                                        vehicle simply moves request best evaluation    waiting strategy                                 lines – initialize evaluation customers lines –  algorithm bent van hentenryck ﬁlters  increments ﬁrst request line  selects request  sampled customers selecting request conser best evaluation selected request  vative approach ensures vehicle moves accepted sampled request  known customer sampled request section investi relocation strategy beneﬁcial improving  gates waiting strategy based recognition number served requests anticipates future  beneﬁcial vehicle wait current location quests positions vehicle serve quickly  stead serving customers eagerly instance fact advantageous minimizing travel times  solution ρ scenario time starts sampled locations requests materi  customer                                     alize observe relocate                                                      fully automatic systematically derived scenario            ρ  ρt−  ρ ∧  firstρ  ∈             solutions contrasts approaches larsen                                                        et al  van hemert  relocation points  indicates beneﬁcial wait sampled                                                        created using heuristics based priori information spe  request materialize case served                                                        ciﬁc problems instances distributions  fore ﬁrst accepted customer difﬁculty decide  wait systematic fashion given algorithm  solved multiple scenarios differ  experimental results  ent customers serve routing plans figure  experiments compare algo  depicts natural implementation key idea add wait rithms bent van hentenryck  action ⊥ accepted requests considering plan  ρ ∈ Γ algorithm retrieves request serve benchmarks online vehiclerouting problems  scenario line  case accepted request generated solomon benchmarks solomon  ∈  evaluation incremented collection challenging vehiclerouting problems  sampled customer r∈  evaluation wait action  customers solved opti  incremented implementation selects element mally stochastic versions developed bent  ∪⊥with best evaluation van hentenryck details  accepted request wait action online generic rout view salient features benchmarks problems  ing algorithm generalized slightly wait divided classes  through  degree dy  request wait action algorithm modiﬁes namism dod problem ratio number  routing plan departure times             stochastic customers number total customers    waiting heuristics attracted considerable attention class  problems characterized early arriving requests  recently instance mitrovicminic et al  class  problems late arriving requests                                                     ijcai                                                    class mixes class   three classes aver  age dod  class  considers problems late  arriving customers class  average dod   class  considers problems higher proportion  stochastic customers average dod inall  problems expected number customers   algorithms  results compare local optimization  lo consensus regret algorithms  clude waiting relocation strategies algorithm lo  generalization parallel tabusearch algorithm gen  dreau et al  generates multiple routing plans  accepted customers plans used accept  reject new customers select decisions each time  step lo close algorithm main difference  stochastic information exploited  figure  unserviced customers regret  sensus algorithms cwandcr fully described  paper algorithm originally proposed bent  van hentenryck cw cr respectively  include waiting relocation strategies regret al  gorithms rwandrr improved consensus  algorithms using suboptimality approximation eval  uate value scheduling each request vehi  cles described bent van hentenryck  use simple fast suboptimality approx  imation details described bent et al   consider decision choosing customer serve  vehicle let st customer route  vehicle time evaluate regret cus  tomer vehicle suboptimality approxima  tion determines feasible swap st  case regret zero                                                             figure  unserviced customers consensus  swap violates timewindow constraints regret                                                                                         initial plans online process online stochastic al dod grows improvement signiﬁcant indicat  gorithms generate solve  scenarios select deci ing importance using relocation set instances  sions time  algorithms generate solve  subsequent results characterize precisely  additional samples create plans given set decisions relocation strategy paramount importance algorithm                                                        rw  time  scenarios generated solved ahead quite effective general dominated                                                        rr  time number scenarios arbitrarily large depend dod increases similar results observed                                                                                 cw      cr  ing application each optimization allocated consensus algorithms  general  minute during online execution each optimization serve fewer customers regret counterparts  runs  seconds uses lns procedure shaw results class  figure  depicts results class    algorithms executed amd athlon  highlight best second best result each problem   processor mb ram running linux each  boldface italics respectively algorithms rr rw  instances run  times account nondeter reasonably close small dods performs best  ministic nature algorithms results omit  words “in average” brevity                                                                 dod   lo     cw   cr      rw   rr                                                                      results figures   summarize results                                                                               regret consensus algorithms regarding number           unserviced customers customers served                                                                               ofﬂine posteriori problems ﬁgures depict results           speciﬁc instances linear regression each class                                                                               algorithms speciﬁc results cropped graph           extent maintain readability main result                                                                               standing behavior rr regret algorithm                                                                               location strategy interpolations seen           algorithm rr dominates algorithms dods   improvements increase substantially  figure  unserviced customers class                                                      ijcai                                                    
