              learning value predictors speculative execution                                     information gathering plans                                       greg barish craig knoblock                       university southern california  information sciences institute                                admiralty way marina del rey ca                                          barish knoblockisiedu                          abstract                          sponds particular value vv future receipt hx                                                          lead prediction vy result plan nor•      speculative execution information gathering     mally queries source   subsequently source       plans dramatically reduce effect                                                                                          sz vv parallelized si       source io latencies overall performance       queried parallel speculatively unfortu•      utility speculation closely tied nately caching major drawbacks does       accurately data values predicted     scale domain hints large sec•      runtime caching approach       ond drawback inability deal novel previ•      used issue future predictions scales    ously unseen hints obvious relationship       poorly large data sources unable    exists hint predicted value       make intelligent predictions given previously                                                            paper present alternative caching       unseen input data obvious                                                          involves automatically learning predictors combine       relationship past input output                                                          classification transduction order generate pre•      generated paper novel                                                          dictions hints approach succeeds cach•      way combine classification transduction                                                          ing fails predictors learned usually consume       efficient accurate value predic•                                                         space demanded caching capa•      tion strategy capable issuing predictions                                                          ble making reasonable predictions presented       previously unseen hints show                                                          novel hints leading better speedups       approach results significant speedups                                                          specifically work contributes following       plans query multiple sources sources       require multipage navigation                       • algorithm learns efficient transducers capa•                                                             ble variety string transformations    introduction                                           • algorithm combines classification trans•                                                             duction learn value predictors   performance web information gathering plans   rest paper organized follows   suffer io latencies associated remote section briefly reviews information gathering pro•  sources queried plans single slow web      vides motivating example speculative execution   source bottleneck entire plan lead poor  section  classification transduc•  execution time plan requires multiple queries  tion used build efficient intelligent predic•  source multiple sources    tors section  describes learning algorithms   performance worse overhead combine techniques section  describes experimen•  function slowest sequence sources queried   tal results using approach finally section  de•    multiple queries required speculative plan tails related work   execution barish knoblock used   dramatically reduce impact aggregate source laten•  cies idea involves using data seen early plan exe•  preliminaries   cution basis issuing predictions data likely web information gathering plans retrieve combine   needed during later parts execution allows manipulate data located remote web sources   data dependency chains plan broken plans consist partiallyordered graph operators   parallelized leading significant speedups         oott connected producerconsumer fashion each     maximize utility speculative execution  operator consumes set inputs aap fetches data   good value prediction strategy necessary basic performs computation based input pro•  problem involves able use hint  duces outputs bbq types operators   basis issuing predicted value approach in• used information gathering plans vary   volves caching note particular hint hx corre• retrieve perform computations data       al data integration                                                                                      better illustrate web information gathering plan    consider example plan carlnfo shown figure     given constraints car type pricing carlnfo lo•  cates make model median price clos•  est specified retrieves review   car web site consumerguidecom   plan consists wrapper operators fetch                                                                     figure  carlnfo transformed speculative execution   extract data various parts remote source    specifically plan involves querying carsdi        based iterative analysis expensive path   rectcom car make model having median           execute plan example possible   price closest specified querying consumer       result transforming plan figure  speculative   guide resulting make model retrieving        execution shown figure    link summary page car using link        shown speculate operator receives copies   provided search results retrieving  data sent operators executing earlier plan   review using link provided summary page           based hints receives speculate generate                                                                 predicted values later operators transmit•                                                                ted immediately operators earlier                                                                 later parts plan parallelized ear•                                                                lier operators finish executing speculate assess                                                                 initial predictions correct                                                                 forward results confirm operator en•                 figure  carlnfo plan                     sures speculative data does prematurely exit   example input sedan  car re•       plan cause irreversible action occur   turned honda accord summary url car        finally notice figure  shows speculation   httpcgcomsummhtm review          cascading speculation operator drive   url httpcgcomfullhtml re•      speculation operator leading greater   view url review text extracted                   degrees parallelism arbitrary speedups      existing research information agent executors              result transformation shown figure    barish knoblock network query engines         execution proceed follows input data   hellerstein et al  naughton et al  ives et al     sedan  result retrieval    suggested number techniques effi•      initial search results parallel predicted   cient execution information gathering plans       make model  drive predictions   systems work principle streaming data        summary fullreview urls retrievals   flow executes plan operators fast data     three speculative executed predic•  dependencies allow supports pipelining data        tions correct resulting execution time re•  operators despite benefits streaming          duced plus overhead speculate maxi•  dataflow plan execution slow       mum speedup  average speedup   binding pattern relationships sources         depends average accuracy prediction   plan example notice steps      greater accuracy higher average speedup   dependent steps precede   plan figure  executed sequentially prof•       value prediction strategies   little benefit streaming dataflow                                                                 caching used implement value prediction   each source figure  average latency                                                                 speculatively executing plans carlnfo unfortu•  average plan execution time summation                                                                 nately caching does allow predictions issued   source latencies                                                                  unseen hints result average accuracy    speculative plan execution                                prediction low domain possible hints                                                                 large trying achieve better accuracy   speculative execution technique used       conditions require significant amounts mem•  overcome effects aggregate latencies informa•    ory section hybrid approach   tion gathering plans containing multiple binding patterns    consisting classification transduction results     described barish knoblock plan         intelligent spaceefficient prediction strategy   transformed capable speculative plan exe•  cution insertion additional operators           classification   speculate confirm  various points plan                                                                 classification involves extracting knowledge set                                                                 data instances describes attributes        sake brevity abbreviated urls asso• instances associated set target classes       ciated consumerguidecom retain key given set instances classification rules       aspects structure                                learned future instances classified cor                                                                                                al data integration  rectly learned classifier make reason•      finite sets corresponding input output alphabets     able predictions new instances  combination       statetransition function maps    attribute values previously seen       output function maps    ability classification accommodate new instances    interested particular type sequential transducer    intriguing speculative execution information       called psubsequential transducer allows    gathering plans unlike caching possi•    output symbols appended output exist   ble make predictions novel hints                     final state transition arc      example consider prediction make          value prediction transduction makes sense web    model car carlnfo plan turns         information gathering plans primarily    carsdirectcom returns answer honda accord         web sources organize information web requests    sedan does types      http queries standardized case   coupe price range association       web sources use predictable hierarchies    make model multiple criteria combinations         catalog information example carlnfo exam•  occurs somewhat frequently carsdirectcom                  ple summary url  honda accord      classification effective technique     httpcgcomsummhtm review   caching prediction make model         httpcgcomfullhtm notice urls use   consider prediction car based type price          piece dynamic information                   type  price       car                           different ways learning transduction                 sedan    saturn series                    predict future review urls corresponding sum•                sedan     honda accord                      mary urls previously seen transducers                 sedan      vw beetle                        allow predict http queries example                 coupe    saturn series                   http query ibm stock chart                 coupe     honda accord                      httpfinanceyahoo comqsibmdc exploiting                 coupe      vw beetle                                                                  regularity url structure pre•     data cache contain con•                                                                 dict url cisco systems csco chart   trast classifier like ld quinlan  induce   following decision tree                                     paper define new types transducers                                                                  extend traditional definition psubsequential           pri    saturn series            pri                                             transducers highlevel transducer called            pri    honda accord                    value transducer describes construct pre•           pri    vw beetle                        dicted value based regularity transformations      presented instance previously seen       observed set examples past hints values   sedan  cache classifier           value transducers build predicted value through sub•  result prediction honda accord           stringlevel operations insert classify transduce   presented new instance           insert constructs static parts predicted values   coupe  cache unable make            classify categorizes hint information pre•  prediction contrast classifier issue cor•   dicted value finally transduce transforms hint infor•  rect prediction honda accord errors          mation predicted value transduce uses   classification caught automatically later exe•     second type special transducer hint transducer   cution confirm operator                                operations accept copy replace upper      decision tree space efficient        lower function individual characters hint   cache data cache requires stor•       perform transformation im•  ing  unique values decision tree requires          plies respect predicted value   storing  values just shown plus informa•       illustrate consider transducers shown figure   tion required tree structure attribute value    predicting fullreview url carlnfo ex•  conditions iepri                                  ample figure  shows value transducer performs      short classifiers decision trees function   highlevel operations  insertion substrings   better spaceefficient predictors         lowerlevel transduction second transducer   worst case each instance corresponds unique        abbreviated form uses accept copy opera  class classifier simply emulates cache       al data integration                                                                                                  tions transform hint value proper algorithm learning classifier achieved    point predicted value step builds     decision tree induction algorithms ld quinlan    httpcgcomfulir second step copies      learning sd template hint transform­    step appends htm       ing transducer require unique algorithms      short transducers lend value predic­  tion way information stored que­       learning templates string sets    ried web sources natural fit         learning vt requires identifying template    urls strings result simple trans­   target value describes parts static    formations earlier input transducers space       parts dynamic each static replaced    efficient learned occupy finite size    insert operations each dynamic    applied endless number inputs overall       candidate transduction classification    web content queried directly instead re­        identify sd template use approach based    quiring initial query navigation        longest common subsequence lcs set    transducers serve compact predictors capitalize    values lcs identification algorithm similar    regularity web queries source structure           described hirschberg  applied                                                                  set answer values iterate through     unifying learning algorithm                               lcs each answer value determine set possi­                                                                 ble staticdynamic templates fit answer    section present algorithms induce value                                                                  templates common kept     transducers vts combine classification                                                                  set returned valid algo­   transduction predictors speculative execution                                                                  rithm implements learnsdtemplate    information gathering plans predictors learned                                                                  shown    represent hybridization classification   transduction caching classifiers default                                                                   function learnsdtemplate returns template   caches feature key         input set strings   particularly good indicator resulting value             tmpl        learn vt general approach consists             les  getlcss                                                                   seq θ       each attribute answer tuple identify       tmplset           sd template distinguishes static dynamic        foreach string         parts target string analyzing regularity    curtmplset  extracttemplates les         values attribute answers         tmplset  tmplset curtmplset                                                                   tmplset       each static add insert arc vt         tmpl — choose member tmplset  valid        each dynamic determine transduction          return tmpl                                                                   end  learnsdtemplate          used add transduce arc vt      transducer classify dynamic        learning hint transducers         based relevant attributes hint    learn hint transducer ht make use sd        add classify arc vt                            template identification instead identifying   implemented algorithm lkarnvalue              template fits answers identify templates   transducer shown algorithm takes set          fit hints based template construct   hints set corresponding answers returns vt        ht accepts static parts hint string per­  fits data                                            forms characterlevel transformation dynamic                                                                  parts sketch algorithm implements    function learnvaluetransducer                              learnhinttransduckr shown         returns valuetransducer    input set hints set answers               function learnhinttransducer returns hinttransducer    vtθ                                                         input set hints set resulting strings    tmpl  learnsdtemplate                                use lcs identify static parts    foreach element tmpl                                     foreach hs pair    static element                                      extraction replacing static chars token    add insert evalue arc vt                                 align based lowercased string edit distance    dynamic element                                annotate character level operations    da  set dynamic strings tmpl element   end    ht learnhinttransducer  da                           build reg expr fits annotations using lcs    ht                                                         add transduce ht arc vt                                 return general predictive transducer based                                                                   accepts static sequences necessary     learnclassifier  da                                      transduces dynamic sequences    add classify arc vt                                      return vt                                                    return     end  learnvaluetransducer                                                                    end  learnhinttransducer                                                                                                   al data integration                                                               fication phone number state transduction initial   example suppose prior hints dr joe smith dr jane     state facts page detailed demographics page   thomas corresponded values joesjanet algo•         learning predictors instances drawn   rithm identify static hints re• typical distributions domain example   write hints using accept operation aaaajoe    instances replnfo drawn list addresses   smith aaaajane thomas refers operation       individuals contributed presidential campaigns   accept align each hint value based      obtained fec  distribution closely ap•  string edit distance annotate character operations   proximates geographic population distribution   required transformation observed values resulting similarly phone numbers used phonelnfo came   aaaaalccrldddd aaaaalcccrlddddd                        distribution numbers common names   use lcs build regular expression       implemented speculative execution theseus   alcrld fitting examples        streaming dataflow web information gather•  ht partial form shown figure                           ing tests involved thousands requests                                                                 ran plans using theseus local copies rele•                                                                vant data simulated network latencies during re•                                                                trieval doing assumed each source la•                                                                tency  seconds note particular latency cho•                                                                sen does matter  speedups                                                                    results focus three measurements      figure  partial form ht names example                                                                 shown table  show average number examples                                                                 required order learn correct transducer required    experimental results                                        each plans notice replnfo required                                                                 phonelnfo carlnfo higher   evaluate approach value prediction com•         likelihood examples sharing dy•  pared caching three sample plans          namic data common  extracted   benefit speculative execution plans          lcsbased algorithm static element   chosen query multiple sources andor multi•  ple times source order retrieve information   possible query directly plans nor•  mally require sequential execution specu•  lative execution significant speedup possible     plans included carlnfo   described replnfo phone info replnfo based                 table  learning correct transducer   plan described barish knoblock que•  ries site votesmartorg issue positions          second set results shown figure  focuses   federal representatives particular ninedigit zip  accuracy classification measured   code plan involves three queries list    fold crossvalidation sample data data   representatives desired zip code navigation    test fold training folds ex•  profile page each member navigation         pected domains larger sets discrete target classes   corresponding issue positions page phonelnfo simi•      replnfo required examples   lar plan takes phone number does reverse       smaller numbers classes like phonelnfo   lookup number superpagescom            final set results show learning   state origin queries census quick        described resulted better average plan execution   factscensusgov demographics state   querying census additional navigation re•  quired initial summary page   state corresponding demographics details page     three modified speculative execution   results similar shown figure    learned predictors each based data observed   during execution learning offline   each execution future executions benefit   resulting predictors carlnfo predictors   described involved classification makemodelyear   car summary page transduction summary   review page replnfo required classification ninedigit   zip political district page transduction district   issue positions page finally phonelnfo required classi•      al data integration                                                                                                 
