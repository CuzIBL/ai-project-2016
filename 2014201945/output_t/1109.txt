                               handling alternative activities                     resourceconstrained project scheduling problems                          jurgen¨ kuster  dietmar jannach    gerhard friedrich                                      university klagenfurt austria                       department business informatics application systems                                jkuster dietmar gerhardiﬁtunikluacat                        abstract                            resourceconstrained project scheduling problem                                                        rcpsp błazewicz et al  brucker et al       context operative disruption management provides generic wellestablished framework      decision support systems evaluate typ formal description scheduling problems generalizing      ically manifold options responding distur  productionspeciﬁc job shop ﬂow shop open shop prob      bances temporal shift activities al lems imposes restrictions number enti      location alternative resources assessed ties resource type way activities connected      application generic scheduling frameworks  characteristics resource requirements ex      resourceconstrained project schedul istence various highly efﬁcient algorithms solution      ing problem rcpsp switches   kolisch hartmann  proves rcpsp      process variant usually sup area intensive research      ported corresponding models                                                          rescheduling dm problems solved      represent common way repairing broken                                                        framework provided rcpsp regards po      schedules practical domains paper                                                        tential process variations exist possibilities      show rcpsp extended                                                        alternative execution paths rcpsp      concept alternative activities making pos                                                        impossible overcome previously decision      sible model search alternative process                                                        certain process variant during optimization best      execution paths formal description                                                        knowledge approach ﬂexibility      conceptual extension show gen                                                        multimode rcpsp mrcpsp hartmann      eralized rescheduling problems solved                                                         example through deﬁnition various execu      novel genetic algorithm summarize promis                                                        tion modes activity possible consider changes      ing results detailed evaluation                                                        durations associated resource requirements                                                        obvious concept mode alternations sufﬁcient    introduction                                       description entire range potential variations  disruption management dm yu qi  clausen research dm context rcpsp mainly  et al  process responding unforeseen focused responding disruptions way rescheduling  disturbance occurring during execution planned artigues et al  propose approach insert unex  scheduled operations aimed selection appro pected activity given schedule elkhyari et al   priate repair actions help track use explanations cope overconstrained networks  minimize negative impact typically associated dis dynamic scheduling problems zhu et al  present hy  ruption forms interventions distinguished brid mixed integer programmingconstraint propagation ap                                                        proach handling various classes disruptions    • rescheduling corresponds shift scheduled starting trast works focus mere rescheduling      times change allocation resource entities extend scope available options making      activities particularly relevant domains switches different process variants possible      set operations ﬁxed process variability purpose propose extend rcpsp      given production processes form typical example concept alternative activities section  formal    • process variation corresponds switch scription conceptual extension modeling example      previously chosen process variant domain air trafﬁc management provided      form modiﬁcation applied practical section  propose novel genetic algorithm ga      mains insert remove activities change execution solution problem speciﬁc crossover mutation      orders example project scheduling supply operators discussed promising results      chain management typically characterized ex detailed evaluation finally section  summarizes contri      istence various predeﬁned process variants    butions paper                                                    ijcai                                                      conceptual extension rcpsp                incorporate concept alternative activities    alternative activities                           framework rcpsp consequently propose com                                                        pact intuitive way modeling process execution variants  base approach deﬁning alternative execution paths independent underlying search procedure  concept alternative activities activity dependen extended resourceconstrained project scheduling  cies expressive power constructs illustrated problem xrcpsp concept alternative activities  modeling examples typical process variations implemented through distinction active    • mode alternation corresponds change du active activities ones actually consid      ration resource requirements associated ered resulting schedule activating deactivating      activity basically each execution mode repre activities possible change activation state      sented separate alternative activity example model note each potential combination active ele      sequence three modes shall dis ments forms individual instance classical rcpsp      tinguished alternative activities possible apply wellestablished methods activity      considered instead                          sequence optimization                                                          formally xrcpsp described follows    •      dynamic insertionremoval activities pos process composed set potential activities      sibility activity dependencies required     ﬁrst element repre      activity considered dependent activity sent abstract start end activities duration      executed scheduled  require resources each remaining      example shall possible dynamically insert ac nonnegative duration di assigned active activities      tivity sequence sufﬁcient grouped subset aa inactive activities contained      sider alternatives arbitrary scheduled operation set difference aa execution activities      activity example variant dependent set renewable resource types   available      execution each type exists constant ck    • potential order change described alternative units various forms activity dependency described      versions involved process steps variant repre use following constructs      sents original optional position • precedence constraints order activities      activity example shall possible swap scribed use precedence constraints existence        sequence      correspond                                            pij states activity ﬁnished      original alternative positions start  accordance    • serializationparallelization operations based distinction active inactive activities      alternative activities different precedence contains potentially relevant constraints      relations associated variant predecessor pij        groups relations      activity ex predecessor successor currently active      ample shall possible parallelize se • resource requirements resource requirements      quence sufﬁces consider versions scribe relation activities resources ac                 predecessor represents option tivity requires constant qik units      serial execution necessarily scheduled resource type execution      represents option parallel execution sets distinguished contains potentially    applying concept alternative activities parts relevant dependencies qik  dm problem – selection scheduling oper groups requirements active activities  ations – combined single conceptual model potential activation state modiﬁcations associated  implies  detached process deﬁnitions need pendencies described use following constructs  synchronized  particularly efﬁcient algorithms                                                          •  applied problem solving bart´ak            activity substitutions xij contained set                                                            potential activity substitutions itrepresentsale    extended resourceconstrained project            gal form process variation activate aafor       scheduling problem                                   deactivation replaces  regards consideration alternative activities • activity dependenciesconstraints activation  scheduling problems little research far deactivation activity impact  important approaches area state activities describes dependen                                                                                                      constraintdirected scheduling beck fox  base cies elements  mij mij   work introduction xornodes pex indicates activity deactivated  probability existence variables constraint graph deactivation  mij indicates  propose speciﬁc pexbased propagators heuristics deactivated activation iand  solving extended problems                       mij     indicates activated    contrast work aims extending  deactivation note constraints  scope constraintdirected scheduling approaches goal deﬁned carefully order avoid inconsistencies                                                    ijcai                                                       presented xrcpsp  generalization  mrcpsp generalizes classical rcpsp   table  xrcpsp description aircraft turnaround  hartmann  mrcpsp formulated    set  content  xrcpsp regards formulation xrcpsp    bus firebrigade  mrcpsp limitations mrcpsps observed       start deb debb fue fuep  cat cle cler  formulation preserves activities precedence ins boa end  constraints resource constraints xrcpsp possi start deb start debb deb   fue  ble following properties hold                        deb   fuep   deb   cat deb    cle                                                               deb  cler debb   fue debb   fuep                                                                                                       ij       ji                           deb    cat deb    cle deb    cle                                                                                           xij xjk  xik                         fue boa fue    end cat boa cle                                                                                xij   pik   pjk                            boa cle  ins ins boa boa end                                                                                                  xij   pki   pkj                            deb       bus deb        bus fue                                                               firebrigade                                                                                                                                              deb deb   fue fue   cle cle     possible onedirectional mode sub cler ins cler ins  stitutions mrcpsp  activity execution mode  direct substitute ones  ac  tivity replacements possible exactly po inspected cabin crew prior boarding  sition changes activity execution order process accelerated parallelizing fueling  deﬁned  activity dependencies described boarding ﬁre brigade present supervision  different execution modes possible table  summarizes central elements correspond  dynamically insert remove activities              ing xrcpsp particularly activity durations resource ca    result solving xrcpsp combination pacities omitted based simpliﬁed form notation  model activation state sequence active activities  ijstands pij inkfor qik nij  schedule represented vector starting times xij ijfor xij xjiijfor mij    ββ  βn set active activities process steps represented ﬁrst three letters  considered valid following criteria fulﬁlled associated activity names potential process variations    • activation state validity activation state associ expressed use alternative activities ﬁrst                                                        available options corresponds mode alternation      ated schedule valid                        derived original valid activation state through possible mrcpsp deb characterized reduced      application substitutions deﬁned  satis time additional resource requirements second op                                                      tion corresponds combination mode alternation      fying constraints deﬁned                                        •                                                 activity insertion cle takes time connected      starting times validity let set activities optional activity ins cabin inspection op      carried time staring times β  βn tion corresponds parallelization process steps      valid  βi  aβi di βj                                                            fue   necessarily executed prior boarding      pij     qik ck       additional resource requirements associated      note criteria correspond ones      deﬁning schedule validity context rcpsp  solving xrcpsp    modeling exemplary process                    application xrcpsp dm based compre  section illustrated framework hensive model describing baseline schedule valid  xrcpsp applied formal description realistic process variants following steps performed  processes purpose aircraft turnaround –asthe occurrence disruption  schedule updated ac  process aircrafts typically through airport cordingly  based schedule evaluation function fs  touchdown takeoff – considered simpliﬁed ver corresponding objective minimization maximiza  sion corresponding combination core processes tion optimization performed unlike scheduling prob  deﬁned carr  plane reaches ﬁnal po lems mainly minimization total process ex  sition incoming passengers leave aircraft deboarding ecution time socalled makespan common  prepared ﬂight during fueling cleaning goals dm minimization costs earliness tardi  catering executed simultaneously outgo ness interventions deviation original sched  ing passengers enter aircraft boarding plane ule typically aspects combined  fi  ﬁnally leaves position heading runway    nally difference original optimized    apart inherent options rescheduling three forms schedule interpreted set interventions apply  variations assumed available adaptation central relevance second step fo  process response disruptions deboarding cus optimization xrcpsp section  accelerated through assignment additional buses regards choice approach identiﬁcation  second cleaning shortened exchange cabin optimal combination activation state activity starting                                                    ijcai                                                    times mentioned practical relevance proximity algorithm  mutate λ  original schedule suggests use incremental local search  randomly generated value   θ  algorithms performance usually represents  rearrange λ applying rcpspspeciﬁc mutation  crucial factor operative process dm   particularly genetic algorithms perform rcpsp  select arbitrary xij iλ  kolisch hartmann  present evaluate  replace λ  evolutionary algorithm solution xrcpsp  end                                                          return λ    evolutionary algorithm  representation                                                                                             complexity associated direct modiﬁcation denoting set activities λi itisﬁrst                                                        checked rcpspspeciﬁc operator applied  time values common approach use sort                               abstract solution representation during optimization kolisch line  possible batransition                                                        set txis initialized coping different list  hartmann  hindi et al  decided  use activity lists λ precedence feasible list el tents describes substitutions applied                                                      conversion λb λaletxi set sub  ements  describing order active activities                                      shall added schedule associated serial sched stitutions led original set   ule generation scheme each operation scheduled ear deﬁned combination substitutions exclu                                                        sive inversion substitutions exclusive  liest possible time way each valid λ converted λ  valid schedule unambiguously                  λb line  substitutions necessar                                                        ily directly reversible case λb  initialization                                        directly transformed λa size unequal  original schedule converted corresponding size symmetric difference xaxb activity  activity list easily λ obtained simply sorting active lists considered incompatible crossover different  activities scheduled starting times represents selection parent lists line   legal option performing intervention child activity list λ initialized clone λb  fore considered ﬁrst element ﬁrst generation repetitive replacement procedure started line    solutions initial population generated long λ contains replaceable elements terms  application mutation operator λ spective substitutions applied note dependencies                                                           observed precedence feasibility  crossover                                             secured shifting successors righthand side  elements contained parent activity lists λa predecessors application substitutions  λb equal wellelaborated rcpspspeciﬁc results inconsistency activities activated  crossover operators applied hartmann  deactivated time contradicting depen  hindi et al  examples kolisch hartmann dencies  replacement operator called line    comprehensive overview fails λa λb considered incompatible crossover  tents λa λb differ list combination difﬁcult different parent activity lists selected                                                                                  algorithm  summarizes crossover operator based example λa deb  fue cle cat boa                                                                                        idea λa steers selection elements contained λb deb  cat cle  ins boa fue process                                                                                                child λb determines respective order modeled transition set cle cle                                                                                                guarantees valid activity lists generated fue fue deduced xa debdeb                                                                                                                                                xb   deb deb   cle cle  fuefue                                                            crossover results λdebb cat cle fue boa   algorithm  crossover λaλb    aa ab                                     mutation     apply rcpspspeciﬁc crossover operator           xrcpspspeciﬁc version mutation operator                                                 scribed algorithm  apart changes order     txa     xb    xij     xji   xb xa            activities potential process variations considered      txaxb             return incompatible    certain probability θ activation state left     λλb                                              modiﬁed rcpspspeciﬁc mutation operator                                                   applied random modiﬁcation λ references       changed false                                  mentioned crossover arbitrary       iλ  xij                            placement selected element contained activity         replace λ                       list regards application associated dependen         changed true                                cies precedence constraints observed      end                                         fitness selection    changed                                    quality activity list evaluated converting   end                                            corresponding schedule analyzing associated   return λ                                          costs use predeﬁned schedule evaluation function                                                    ijcai                                                      table  portion identiﬁed optimization potential tapped genetic algorithm limited time          limit    process complexity  resource complexity      leftshifts     baseline schedule  overall                    low       high       low        high       yes            tight     wide           sec                                    small           sec                                            sec                                      large    sec                                              sec                                       way activity lists comparable each step • tightwide baseline schedule distribution start  evolution new generation derived previous ing times incorporated slack time  combining best individuals survivors combined parameter tight wide schedule  new ones children generated through application activities start earliest possible point  crossover mutation ﬁttest activity lists order processes executed simultaneously  avoid convergence local optimum randomly  replace individual members generated population small large problem instances distinguished                                                        consist process containing   initial activity list λ probability replace  ments decreasing continuing progress evolution process containing  activities each problem class   signiﬁcant role randomness selection instances sizes generated random aver  mutation solutions sure exact optimum age activities execution alter  identiﬁed ga inﬁnite time horizon natives mentioned section  associated each case                                                        disruption injected immediately start execution    computational experiments                        doubling durations half activities                                                          currently benchmark data available dm  algorithm implemented javabased problems possible compare proposed ga  rescheduling engine realization rcpspspeciﬁc existing approaches instead fast convergence sched  operators based ga proposed hartmann  ule quality optimal good solution  currently instances testset genera illustrated table  summarizes identiﬁed  tors reactive scheduling problems available policella optimization potential tapped limited time  rasconi  framework parameterized genera each small instances ﬁrst exact optimum  tion dm problems developed normalized identiﬁed based deterministic procedure difference  versions network complexity resource factor resource costs associated disrupted schedule sΔ  strength proposed kolisch et al aswellaspa optimal schedule deﬁnes optimization poten  rameters describing characteristics baseline schedules tial evaluation ga  runs conducted  disruptions used deﬁne problem structure each generated cases each regarded time    generated instances consist baseline schedule limits let denote schedule resulting limited  disruption occurring during execution based pos optimization ﬁgures listed table  correspond  sibility assign date δi activity                fsΔ   fs                                                        average value Δ       basically reveal  goal optimization minimize sum overall              fs    fs                                                        case optimum identiﬁed  process tardiness max βi di  δi number  schedule modiﬁcations each modiﬁcation assumed ﬁrst   seconds optimization  cause three times costs time unit tardiness use powerful exact methods    regards complexity aspects following conﬁgura laborie  recent approach hard scheduling prob  tions used generate  different problem classes lems considered size tractable reasonable                                                        time hartmann  alcaraz et al  alternative    • lowhigh process complexity based parameter procedure chosen large instances instead      speciﬁed scheduled activities identifying actual optimum best solution      linked precedence constraints  during  ga runs  additional run lim    • lowhigh resource complexity aspects resource ited  minutes taken reference approach      requirements resource availability combined motivated observation large improvements      parameter low resource complexity corresponds mainly ﬁrst generations typi      existence requirements availability cal development costs associated best known      resource entities high complexity opposite schedule  minutes depicted figure  cor                                                        respondingly ﬁgures listed table  show close    • withwithout leftshifts activity scheduled ga best known solution         start earlier did original schedule seconds following observations      considered leftshift modiﬁcations      valid deﬁned assignment appro used problem instances detailed evaluation results      priate lower bounds activity starting times obtained httprcpspserversideatijcaihtml                                                    ijcai                                                    
