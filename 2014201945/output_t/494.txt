                               kernels prolog ground terms                                  andrea passerini     paolo frasconi                  dipartimento di sistemi informatica universita degli studi di firenze                                       httpwwwdsiuniﬁitneural                        abstract                            • ∈ ∈ ks  κs κ                                                             × → ir valid kernel constants      family kernels untyped      typed prolog ground terms show    • compound terms differ      applied learning structured domains pre   ent arities functors  fs     sn      senting experimental results qspr task           gt     tm                                                                            ks  ιf               introduction                                                             ι  × → ir valid kernel functors  starting seminal work haussler convolution • compound terms  kernels haussler  researchers proposed                                                            arity functor  fs     sn   kernels discrete data structures sequences trees                                                            ft     tn  graphs gartner¨  review recently ker                                                                                         nels complex individuals deﬁned using higher                                                                                               ks  ιf  ks    order logic abstractions gartner¨ et al  family                                        kernels developed paper originates special                         ization ﬁrstorder logic kernels designed                                                          • cases ks    work individuals represented prolog ground terms  reasons specialization simplic κ ι atomic kernels operate non  ity prolog representations provide simpler representational structured symbols special useful case atomic  framework sufﬁciency useful higher order structures match kernel δ deﬁned δx    δx   sets simulated prolog types    troduced practice prolog based representations suf ﬁner level granularity deﬁnition ground term  ﬁciently expressive application domains legacy kernels gained use typed terms extra  inductive logic programming systems knowledge ﬂexibility necessary specify different kernel func  bases actually based ﬁrst order logic prolog tions associated constants different type numer  supported language extendibility ﬁrstorder logic pro ical vs categorical necessary order  grams extended deal uncertainty through specify different kernels associated different arguments  use probability resulting models stochastic compound terms approach introducing types sim  bayesian logic programs raedt kersting ilar proposed lakshman reddy    review extensions interesting note ranked set type constructors type signa                                                                                                            context machine learning                   ture function arity form τ×     ×τn → τ    develop variants kernel typed untyped ≥  number arguments τ     τk ∈  terms present formulation allows obtain relatively types τ  ∈ type result functions ar  simple proof positive deﬁniteness based showing ity  signature ⊥ → τ  interpreted  kernels terms special case convolution kernels constants type τ  type signature predicate  haussler  ﬁnally present experimental evidence arity form τ×     ×τn → Ω Ω ∈  usefulness kernels learning boiling point type booleans write  τ assert term  alkanes chemical structure             type τ denote set typed ground terms    kernels prolog ground terms                     ⊂ set typed constants set                                                        typed functors finally introduce possibly set  begin kernels untyped terms given program distinguished type signatures ⊂ useful  denote herbrand universe set specify adhoc kernel functions certain compound terms  ground terms formed symbols   ⊂  set constants ranked set deﬁnition  kernels typed terms kernel  functors                                             typed terms deﬁned inductively follows    deﬁnition  kernels untyped terms kernel  • ∈ ∈  τ  τ ks  κτ  tween terms function  × → ir     κτ  × → ir valid kernel constants  deﬁned inductively follows                            type τ                                                                                           ch    • compound terms          ch    ch                             type different arities functors signatures                                                                                                            fs     sn  gt     tm  ch     ch                                                                                 σ×     ×σn → τ   τ×     ×τm → τ                          ch   ch                                                                   ch   ch                     ks  ιτ                                                 ch ch  ch         ιτ   × → ir valid kernel functors      construct terms type τ                       chhhcchhhchhhcchhhchhhchhh    • compound terms  figure  ground term representation alkane      type arity functor  fs     sn                                                ft     tn  τ×     ×τn → τ  fig  addressed task using kernel ridge regression                                                κτ××τn→τ               shawetaylor cristianini  kernel                                                           τ×     ×τn → τ  ∈   untyped terms def  match kernel functors car        ks                                                               bon atoms null kernel constants hydrogen atoms                  ι   ks                   τ                                way kernel measures number carbon atoms                                                    corresponding positions additional source    • cases ks                     formation extracted depths trees representing                                                        molecules summed product term kernel    case numerical constants examples use                                                        obtaining informed kernel finally employed  ful kernels include κ  exp−γx −                     real                                gaussian kernel performance  κ    minx   real                                                 evaluated fold cross validation procedure hyperpa  theorem   kernel functions prolog ground terms rameters gaussian width regularization  given deﬁnitions   positive deﬁnite pd parameter chosen holdout procedure train  proof sketch let introduce following decomposition ing set ﬁrst fold kept ﬁxed successive   structure shawetaylor cristianini   fold cross validation procedure using kernel  hx ki  set functors obtained average mean square error  celsius degrees                                                                                                       using error reduced  degrees                                                        results comparable produced highly tuned     st term having functor networks developed bianucci et al                  tuple arguments arity acknowledgements  immediately veriﬁed kernel function wish thank luc raedt fruitful discussions  eq   correspond direct sum decomposition research supported eu grant april ii contract n◦  kernel associated decomposition structure   miur grant                                              ι kf  δf gδn mk  given      sn      tn   references                                                      bianucci et al  bianucci micheli sper                                           ksi ti                    duti starita application cascade correlation                                                       networks structures chemistry appl intell –  kernels closed direct sum pd    pd proof follows haussler’s decompo raedt kersting  raedt kerst  sition framework haussler  induction using ing probabilistic logic learning sigkdd explor newsl  base step fact κ valid kernel constants –     proof kernels typed terms def  pd                                                                          obtained similarly replacing functor arities type signatures gartner¨ et al  gartner¨ jw lloyd pa flach  decomposition structure                         kernels distances structured data machine learn    alternative forms typed untyped kernels ob ing –   tained replacing sums products eq   gartner¨  gartner¨ survey kernels structured  keeping rest deﬁnitions unchanged data sigkdd explor newsl –   kernels closed tensor product positive deﬁniteness haussler  haussler convolution kernels dis  proven using technique theorem   crete structures technical report ucsccrl                                                           university california santa cruz     experimental evaluation                                                        lakshman reddy  tk lakshman    kernel tested quantitative structure  reddy typed prolog semantic reconstruction  property relationship qspr prediction task pre mycrofto’keefe type proc islp’  dicting boiling point alkanes given chemical struc                                                        shawetaylor cristianini  shawetaylor  ture alkanes represented ordered rooted trees                                                           cristianini kernel methods pattern analysis cam  ing simple procedure bianucci et al  trees                                                           bridge university press   easily encoded prolog ground terms shown
