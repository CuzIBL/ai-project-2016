  progression situation calculus action theories incomplete information                                     stavros vassos   hector levesque                                      department science                                           university toronto                                          toronto canada                               stavroshectorcstorontoedu                        abstract                          formed fundamental reasoning problem nec                                                        essary prerequisite forms reasoning dynamic      paper propose new progression mecha domains planning highlevel program execution      nism restricted form incomplete knowledge projection problem solved regression      formulated basic action theory situation progression lin  generally agreed regres      calculus speciﬁcally focus functional ﬂu sion impractical number actions large      ents deal directly possible values lakemeyer levesque       ﬂuents values affected   formalisms based logic represent general      physical sensing actions method  form incomplete knowledge straightforward way      propose logically complete cal  require systems based form theorem      culated efﬁciently using database techniques proving quite typical practical implementations      certain reasonable assumptions                   formalisms forego generality insist                                                        complete knowledge employ inference mecha    introduction                                       nism logically incomplete situation calculus                                                        approach taken practical implementa  paper deals problem getting robot agent tions golog agent programming language levesque  reason efﬁciently action change fol et al  giacomo levesque   lowing three conditions                              taken liu levesque  incomplete knowl    agent incomplete knowledge certain chang edge dealt using logically incomplete form pro      ingvaluesintheworldﬂuents                      gression flux implementation ﬂuent calculus                                                        thielscher  incomplete knowledge dealt using    agent physical worldchanging sens                                                        constraint rules logically incomplete constraint solver      ing knowledgeproducing actions disposal                                                          paper propose new progression mechanism    agent longlived performed thou restricted form incomplete knowledge formulated      sands millions actions date        basic action theory situation calculus speciﬁcally  conditions typical robots agents op focus functional ﬂuents deal directly pos  erate autonomously long periods time sible values ﬂuents values  agents roleplaying games example agent affected physical sensing actions approach  know relative locations agents impor handles restricted form functional localeffect action  tant objects able sense agents theories generalizes liu levesque account  objects nearby challenge reason efﬁciently progression logically complete action theories  overall state world setting taking context complete complete knowl  account sensed edge context contextdependent successor  large number actions performed           state axioms method calculated efﬁciently using    signiﬁcant body work logical formalisms database techniques related antova et al   dynamic domains appropriate certain reasonable assumptions knowledge  situation calculus mccarthy hayes theevent logical formalism handles progression  calculus kowalski sergot  ﬂuent calcu projection task way logically complete  lus thielscher  logical terms seek efﬁcient practical three conditions listed  solution projection problem reiter  given rest paper organized follows sec  action theory speciﬁes preconditions effects tion  review situation calculus notation  actions including sensing knowledge base deﬁnitions projection progression section   initial state world determine discuss notion possible value deﬁne local  dition holds given sequence actions effect bounded action theories section  present                                                    ijcai                                                    progression mechanism localeffect bounded theories  set uniquenames axioms constants  section  discuss complexity approach domain closure axiom sort object  section  discuss related work finally section  actions sensing results use  draw conclusions discuss future work          terminology giacomo et al ahistory                                                        sequence ar · · anrn each ai ground    situation calculus theories progression        action term ri constant represents action’s                                                        sensing outcome assume nonsensing actions  situation calculus mccarthy hayes                                    ﬁrstorder language limited secondorder features return ﬁxed result cweuseend abbreviation  speciﬁcally designed representing dynamically changing ground situation term corresponds hthisis                                                        deﬁned follows endh history  worlds language disjoint sorts actions situations  ·                   objects                        end   end  similarly set                                                        atoms sensing results      situation represents world history sequence ac                                                                                          abbreviation srai endhi  ri   ≤ ≤ nwhere  tions constant used denote initial situation                          ·  ·          actions performed sequences actions hi subhistory action ai ar  ai−ri−   built using function symbol doa situationsuppressed expression formula lan                                                        guage possand sr situation arguments  notes successor situation resulting performing ac          tion situation saﬂuent predicate function suppressed φ σ denotes situation calculus formula ob                                                        tained φ restoring situation argument σ  argument situation value change                                    situation situation actions need executable ﬂuents φweusea range fg                                                      range faprimitive ﬂuent term ground term  situations predicate poss states action                                       executable situation actions sensing results mentions ﬂuent symbol                                                      primitive atom mentions primitive  function sr denotes sensing result action                       executed situation scherl levesque  ﬂuent term primitive                                                        mula sentence formula sentence mentions    restrict attention situation calculus lan                                                        primitive atoms note quantiﬁcation allowed prim  guage includes function symbols sr                                                        itive formulas variable appears argu  described predicate symbol poss ﬁnite num                                                        ment ﬂuent finally use τu denote situation  ber functional ﬂuent symbols ﬁnite number action                                                        suppressed primitive ﬂuent term  function symbols arguments sort object                                                          notation projection task reiter  fol  ﬁnite number constant symbols sort object                                                        lowing given history situationsuppressed sentence    formulate action theories                                                        φ determine d∪sh  φendhwepro  world changes result available actions                                                        pose solve certain restricted action theories using  focus variant basic action theories reiter                                                        form progression deﬁne lines lin   action theory following form                                                        reiter  liu levesque leti                                                                                      dap ∪dss ∪dsr  ∪duna  ∪d  ∪dfnd  ∪e         standard model iff satisﬁes                                                                                                                                                                   deﬁnition  let  standard model        set action precondition axioms ac        ap                                              successor model  wrt worldchanging ac      tion symbol form possays ≡ Π ys                                                                    tion ae iff   standard model                                                                                              dss set successor state axioms ssas primitive ﬂuent atom fcds  fcds iff      each ﬂuent symbol form fx doa  ≡ iΦf c aeds sensing action ae                                                                                                      Φf x ssas characterize conditions result successor model iff stan                                                                               ﬂuent speciﬁc value situation doa dard model  fcds iff fcds      function situation                     iΘae bs                                                                          dsr set sensingresult axioms sras deﬁnition  progression wrt aeb iff                                                                                 each action symbol form sraysr ≡ standard models exactly successor models      Θayrs sras relate sensing outcomes ﬂuents wrt aeb      duna set uniquenames axioms actions step progression solution step projection      ax  ayandaxay ⊃ x  y         sense d∪sh consistent                                                                                                                                        d∪sh    φendh iff  φs    set axioms describing initial situation           fnd consists axioms equality set  possible values bounded action theories      main independent foundational axioms formally      deﬁne legal situations                           assuming ﬂuent functional                                                        single value assume value    relational ﬂuents represented functional ﬂuents known example say value ﬂuent age  forced values truefalse nonﬂuent functions situation    contain fol  predicates formalized unchanging ﬂuents reiter  lowing disjunction age ∨ age ∨ age     omitting leading universal quantiﬁers  say    possible values                                                    ijcai                                                    ﬂuent age example suppose possible values ﬂuent terms ensure  following sentence                  correctly captures constraints       ∨    ∧    ∨     ∧              ﬂuents restrict form basic action theory                                        main idea bounded action theory  case ﬂuents each possible val explicitly list initial possible values  ues constraint ﬂuents according grouping bodies  consider pair  fg  pos successor state sensingresult axioms suitable                                                                                      sible values         generally specifying new grouping known  following deﬁnition                                  ﬂuents action performed accurately                                                                                   deﬁnition  let τ tuple distinct situationsuppressed captured new grouping   primitive ﬂuent terms ﬁnite set constant tuples  deﬁnition  let  ττ k set tuples  cc n each length τ set possi situationsuppressed primitive ﬂuent terms                                                                                                          ble values τat history iff smallest set primitive ﬂuent term appears exactly τi say  d∪s                                                                            τ  ci end  each element localeffect bounded iff following hold  possible value τ                                                            αsαks for each ithereisa                               d∪s                                                                  note set inconsistent   set constant tuples αi c∈c τi c    say sentence possibly true mean  each successor state axiom form  entailed possible value ﬂuents                         ss  sentence taking account ﬂuents       fx doa  ≡ γf x vs ∨                                                                                                     grouped constraints                            fx sv ∧ ¬∃v γf x  deﬁnition  let history let φ situation γ x disjunction formulas γi x                                                                                             suppressed primitive sentence let ττ k beaset    form ∃za  ay ∧ ψyy contains x ∪v  tuples situationsuppressed primitive ﬂuent terms z remaining variables yandψ primitive  primitive ﬂuent term φ appears exactly τi formula called context γi x  say φ possibly true history wrt iff φ                                      φ φ each τ ∈treplaced possible  each sensing result axiom dsr form                                                                       ≡ Θ            Θ       values tuple  ττn  replaced  ccn  sr y     yr  yr  replacing each term τi corresponding ci       primitive formula    say φ known true wrt iff ¬φ                                                           each precondition axiom  dap   form  possibly true wrt                                                             possays ≡ ΠayswhereΠay primitive    hard sentence φ known true formula  iff possible value ﬂuents substituted                                                          each action symbol sensing action  φ obtained entailed thing worldchanging action appears exclusively ex                                   d∪s      saying φ end entailed      actly sra ssas respectively  depends group ﬂuent terms tuples                                                         action symbol appears γf appear  example  consider theory containing sen    γ ﬂuent appears γ   tence gleth history let φ                                following                   localeffect bounded action theories property                                                        pair ground action term ae sensing    d∪sh    φendh                                      Θ         Π                                                         sult e e primitive sentences    φ known true wrt          γi x aev logically equivalent x  c ∧  ∧ φ    φ known true wrt  fg                                                                    c contained e φ primitive sentence                                       going   look   theories restricted action ae changes  possible values independently including cases value ﬂuent term fcthenc contained ar   gfort    fg  hand guments action  look possible values  fg  rule                cases                                         progression using databases    idea ﬂuent terms taking values independently                                                        givenanactiontheoryd  localeffect bounded  related weak disjunctive knowledge prop                                                        use database represent possible values  erty deﬁned petrick levesque  petrick                                                         each τ way capture models dthenwe  epistemic setting situation calculus account                                                        deﬁne procedure prog transforms database  generalizes idea allowing tuples ﬂuent terms                                                        represents progression    proposing paper method                                                          ﬁrst review basic notions relational database  computing progression incomplete knowledge uses                                                        theory let ﬁrstorder language ﬁnite number    note notion possibility epistemic ﬂavor predicate symbols ﬁnite number constant symbols  distinct physical possibility action execution char database instance language ﬁrstorder  acterized poss                                    structure domain  interpreted                                                    ijcai                                                      φ  dbqΘae                                   each ∈fdo         ·   · ··· ·                                                                τ  τ τ      τk                                   each γf x γf x mentions       rτ rτk relation names φ       c  subset e corresponds x     t−ττk  τ                                element e corresponds      −                             rτ rτk  rτ                           u  element mentions fc                                                                       extension                                  ∧                                     rτ  φ                             φ     ru ξ u  dbq  γf x e                                                              φ−  φ context formula negated      figure  progress wrt sensing action ae                                                                            φ column corresponding                                                                  ξfc replaced value rows  identity each constant interpreted let x y −  −i   tuples variables xrelation ﬁnite set  φ                                                                 τ  τ · τ · ··· · τk  mappings ζ x write ζ x →c                                                                                                              rτ rτk relation names φ  let φ formula free variables x xxn      t−                                                                                    ττk  τ  answer φ wrt xrelation                            −                                                                                        rτ rτk  rτ            →c                                                              −      φ       ζ  x          φ ζ ζ xn                    extension rτ ∪                                                            end  deﬁnition  let language constants                                                          end  each τ ∈t relation rτ arity                                        τ wedeﬁne   thedatabase represents     figure  progress wrt worldchanging action ae  database instance language interpretation  each rτ set constant tuples appear result pair d∪saeb consistent let  corresponding αs ∈d item  deﬁnition     database represents progiaeb    following deﬁnition shows transform primi represents progression wrt aeb  tive situation calculus formula φ query dbqφ proof theorem  follows following lemma  need use set new variables assume property bounded theories listed item  def  mapping ξ primitive ﬂuent terms inition  implies processing ﬂuents  variables each term mapped distinct variable main loop figure  order  deﬁnition  let φ situationsuppressed primitive lemma  let φ situationsuppressed primitive sen              mula let φ φ each primitive ﬂuent term replaced tence φ possibly true history wrt                                                 corresponding variable wrt mapping ξlett ⊆t  iff exists standard model satisﬁes φs                                   smallest set τ ∈t element τ iff dbqφi nonempty  appears φwedeﬁnedbqφ  formula                                                         conclude section example                                                         rτ ξτ ∧ φ                   example  consider following scenario agent                  τ∈t                                 lives fantasy world role playing game agent                                                        trapped inside dungeon order                                                   progression prog e  unlock main door climb unfortunately  works sensing action ﬂuents af main door unlocked casting magical spell                           Θ       fected appear e  use concate particular agent cast spell                   ∈t  nation τi mention ﬂuent terms room magical orb hidden  construct new relation tuples relation dungeon spell effect finally                            Θ      answers query dbq e  progression agent ﬁnd magical orb knows  worldchanging action complex each ﬂuent hidden rooms dungeon                                                term c potentially given value action e ac simplicity use three functional ﬂuents represent                             ∈t                      cording γf  collect τi contain c scenario hero orb door hold location  ﬂuent term context concatenate agent location orb state door respec  gether make new τ assign rτ tuple tively use actions goy agent moves room  possible values terms using new value casty agent casts spell magically instructs           c context true previous values door change state use constants cl op  context false                            represent state door closed open  deﬁnition  let database ae ground ac rooms  tion term sensing result procedure let action theory consists  progiaeb deﬁned follows                sentences door  cls orb  ∨ orb  rsand                                                        herors dap consists precondition axioms    sensing action figure  Π       Π                        worldchanging action use figure  cast true ss consists ssas                                                        γ  vs  gov γ vs false  ready present main result                   hero                    orb                                                        γdoora vs  castv ∧∃zhero  ∧ orb   theorem  progression let localeffect action localeffect bounded  agent orb door  ory bounded aeb actionsensing contextcomplete following ﬁgure shows                                                    ijcai                                                    database represents transformed database hero example  avoided aug  applying prog action castopandafter menting prog check ﬁnal step  applying prog times gor castop updated ﬂuents possible value                                                        stored separately finally following proof com  hero   orb  door   hero  orb door   hero  orb door                                                        plexity result gfk liu levesque  note         cl        op         op      size largest relation                       cl        op      stated assumptions complexity progiaeb                                                            depth dand    note three steps progression ﬂuent door ln                        exactly possible value op intended    finally justify concerns approach bet  related work  ter just calculating possible worlds reader main differences approach  imagine large number ﬂuents related work literature work  unknown value doors objects data functional ﬂuents intuition comes  base remains unchanged detailed discussion follows restricted forms incomplete knowledge functional ﬂuents                                                        possible values attractive alternative    complexity analysis                                malism relational ﬂuents son baral                                                         liu levesque  clear handle infor  ﬁrst review results complexity database               ∨        ∨           queries certain form guarded fragment gf mation form age    age        age  smallest set formulas existentially quantiﬁed using general method unrestricted disjunctions  subformula φ conjoined guard atom contain computational problems way  ing free variables φ andr´eka et al ingott handling disjunctions using database possible  lob et al  gf extended kguarded fragment values similar ideas antova et al                                                         actions progression handled  gfk atoms jointly act guard  database size domain relations limitation approach forced                                                        represent primitive ﬂuent terms language  sorted φ ∈ gfk formula size lthenφi  computed time olnk liu levesque  theories dealing essentially propo    complexity progiaeb dominated sitional insist action does affect  evaluation database queries form dbqφby  ﬂuent context approach liu levesque  deﬁnition  follows dbqφ kguarded  does suffer limitations  mula number relation names appear progression mechanism logically correct  dbqφ theory let width like weak progression mechanism employed  maximum  depth maximum length liu levesque logically complete                           Θ                    ories contextcomplete example theories  formulas γf x yr bydeﬁni  tion  following                         handle better illustrated end section                                                           approach similar spirit                  theorem   let   localeffect action theory flux implementing ﬂuent calculus theo                     bounded   e actionsensing result pair ries thielscher flux express incomplete knowl                                let  database represents  complex edge form ﬁnite domain arithmetic constraints                        ity prog e ln   wherel depth  handled constraint handling rules fr¨uhwirth                                      width  size        incomplete knowledge progressed fluxnew    tractability approach relies assumption constraints represent progression appended  width small constant note constraint store ﬂuents remain unknown  width bounded calling depth stantly progressed “chain” stored constraints  issue saw example  larger apart affecting efﬁciency reasoning  progression step performed relations lead failure lack memory resources  joined updated database eventually flux efﬁcient computing progression  lead exponential blowup size database state action executed appending constraints    expect realworld domains problematic longlived agents  small upperbound number primitive ﬂuent terms similar approach funge  deal  unknown mutually constrained ing realvalued functional ﬂuents unlike approach  tory need appear relation ialso funge’s does provide mechanism joining  assuming constant upperbound number ﬂuents related  possible values single ﬂuent history straint related approaches doing approximate pro  size largest relation bounded gression action theories include approximate logical ﬁl  large constant                                tering amir russell  approximation se    current deﬁnition prog size mantics extension action language son  lations optimal ﬂuents baral  finally idea reasoning possible val  known true stored separate relation ues applied iterative planner levesque                                                     ijcai                                                    
