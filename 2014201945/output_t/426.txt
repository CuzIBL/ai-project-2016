                                    propagate right thing                       preferences speedup constraint solving             christian bessiere anais fabre                           ulrich junker                   lirmmcnrs umr                                  ilog sa                            rue ada                             route des dolines                   montpellier cedex                        valbonne                    bessierefabrelirmmfr                         ujunkerilogfr                          abstract                          argue preferences possible way achiev•                                                         ing stated jon doyle doyle  preferences       present algorithm prefac limits arc                                                          play different roles need represent desider•      consistency ac preferred choices tree                                                          ata user preferences preferences control reason•      search procedure makes constraint solv•                                                         ing meaning preferred inferences domain reduc•      ing efficient changing pruning                                                          tions noninteresting deductions left apart       shape search tree arc consistency                                                          preferred additional information added       scalable usable real                                                           easily apply idea typical backtrack tree       world constraint satisfaction problems con•                                                         search algorithms maintain arc consistency solv•      figuration scheduling prefac di•                                                         ing constraint satisfaction problem crucial question       rectly computes preferred solution treelike                                                          algorithm needs achieve arc consis•      constraint satisfaction problems                                                          tency remove values maximal                                                          arcconsistent domains schiex el al     introduction                                         shown fails algorithm preserved   decades considerable research effort al simply constructs arcconsistent domains reduc•  spent studying complexity reasoning ing computation effort average paper show   problem solving identification tractable cases search algorithm preserve search strategy   important goal research overall pruning  search algorithm uses vari•  problem solved polynomial algorithm able value ordering heuristics described   search effort reduced polynomial algorithms static preference ordering variables values   sufficient realworld ai systems face  construct arcconsistent domains contain   challenges interactivity realtime preferred values condition example met   examples constraint satisfaction achieving arc configuration problems junker mailharro    consistency costly tractable second condition needs careful adaption defini•                                                         tion arc consistency elaborated paper      webbased configuration systems provide re•      sponse seconds serving multiple users cut propagation effort each search       arc consistency ac appropriate tech• node changing search tree leads over•      nique handle compatibility constraints gain search tree explored completely       expensive presence large product catalogs   happens interested solution best so•                                                         lution given time frame preferred solutions defined      constraintbased approaches problems   junker  arc consistency scal•      scheduling vehicle routing personnel planning of• able dependent size domains opens       maintain bound consistency constraints in• exciting perspectives largescale constraint programming       volving time variables large domains introduce preferences section  use de•      consequence complex rules breaks resttimes fine directed constraint graph section  discuss arc       daysoff provide poor propagation consistency preferred values sections         improved arc consistency                    introducing preferred supports section  present al•  examples illustrate domain reduction does de• gorithm prefac section    velop power realworld applications con•  straint programming pruning power indirectly solution  preferred solutions   quality traded short response times certain cir•                                                         paper consider constraint satisfaction problems   cumstances tradeoff avoided fo•                                                         following form let set variables set   cuses right deductions computations paper                                                          values constraint arity kc sequence vari•      fabres work carried during stay ilog ables xc  xkt relation rc       constraints                                                                                             set tuples  let set constraints   triple xd called constraint network      solution constraint network mapping   variables values each constraint sat•  isfied constraints   constraint satisfaction problem csp involves finding   solution constraint network      alternatively represent tuples sets assign•  ments form  variable  value   tuple form let   set assignments  furthermore                                                    figure  directed constraint graphs     let rc set  rc represen•  tation facilitate definitions permits straightforward         preferencebased constraint graph   logical characterization constraint                                                                          order preferred solution search procedure                                                                           chooses values important variables                                                                           later cases anticipate preferred so•     suppose following kinds preferences           lution construct constraint propagation procedure   given each variable introduce strict partial or•       procedure does follow constraints   der possible values order                         order variables used search procedure   represent user preferences occurring configuration                                                                              order illustrate consider bipartite constraint   problems cf junker mailharro  example                                                                           graph connects constraints variables sup•  user prefer red car white car projecting pref•                                                                          pose variable connected constraint   erences criteria decision variables junker                                                                            important variable search assign value   produces order price minimized try                                                                           cause domain reduction say   cheaper choices furthermore consider strict par•                                                                          preferences ■ variables impose order con•  tial order variables example                                                                           straint graph example say arc   state choosing color important choos•                                                                          leads arc leads   ing seat material            sequel suppose search procedure follows   preferences described junker mailharro               generalize idea arbitrary constraints par•  chooses variable value                                 tial orders each constraint consider vbest   preferences given statically correspond           variables xc input variables   static variable value ordering heuristics           variables called output variables arcs lead input   usually sufficient configuration problems                          variables constraint output vari•                                                                          ables     use preferences define preferred solu•  tion choose linearization orders              definition  let xdc constraint network   form total orders super•                             strict partial order variables variable   sets strict partial orders consider ranking           constraint called input variable iff                   variables corresponds             variable st variable   order consider                                              called output variable iff input variable   solutions compare lexicographically                  directed constraint graph csp bipartite graph                                                                           having nodes set arcs st                                                                           input variable st output variable                                                                                                                                                  each constraint input output                                                                           variables cf figure  variables comparable                                                                                                                                              constraint output variable sink   definition  solution constraint network                   directed graph each constraint   xdc preferred solution ofv iff exist lineariza­          input variable consequence constraint   tions                                                            source directed graph general graph guar•  best solution wrt lexicographical order defined          anteed acyclic satisfies following properties                                                                           needed proofs  variables      preferred solutions correspond extreme solu•            set sources constraint graph   tions junker  obtained variables          output variable constraint   criteria search procedure follows preferences          sources variables  ranking   solution preferred solution notion        variables linearization each output   preferred solution helps forecast solution         variable each constraint preceded input   certain cases                                                          variable constraint ranking                                                                                                                             constraints  arc consistency     typical systematic search procedure solving csps pro•  ceeds follows each search node picks assignment   — variable creates successor nodes    paper   assume variable eliminated csp   successor node preprocessing step iff single   possible value usually search procedure select   arbitrary assignment set assignments   tries anticipate certain cases subtree   assignment does contain solution assign•                    figure  activating best values supports   ment detected eliminated search   procedure maintains set possible assignments   considers elements each solution charac•                arc consistency preferred values   terized subset assigns exactly value each          maintaining arc consistency prunes search tree follows   variable satisfies constraints consequence   variable assignment solution exists            pi current csp arcconsistent fail occurs     search backtrack sequel write ax             value arcconsistent variable   set possible values                                        search procedure assign inside current      assignments eliminated lack sup•                   subtree   port constraint                                                                            general desirable eliminate values pos•  definition  set assignments support —            sible determine applying algorithm   iff  element                                          acfamily worstcase complexity                                                                            binary constraints domains contain thousands el•  let set supports  pa•                   ements case typical scheduling problems   interested search procedures maintain arc            configuration problems large catalogs maintaining   consistency work set assignments           arc consistency longer feasible practice   supports subsets relevant                                                                               interestingly necessary eliminate assign•  constraints                                                                            ments  schiex et al  try construct   definition  let set assignments subset              small arcconsistent set succeeds prunning rule     arcconsistent set iff ad non             pi triggered lead saving time search                                             constraints       nodes arcconsistent want extend   exists support             policy pruning rule case original search   subset                                                             procedure uses given preferences variables                                                                            values order select assignment each search state   arcconsistent set contains single assignment              search procedure pick variable try   each variable corresponds single solution             possible values starting best value   arcconsistent set exists csp solution other•                                                                           maximal arcconsistent set en•  wise unique maximal arcconsistent set                                                                            sure eliminated constructing subset   superset arcconsistent sets including solutions                                                                            ensure      alternatively consider set assignments              subset   know belong solution                 instead doing pure elimination process interleave                                                                            construction elimination steps determine set                                                                         activated assignments called focus set eliminated                                                                            assignments sets grow during process   easily translated reflexive monotonic op•           purpose obtain arcconsistent set set   erator eliminates additional assignments                           sufficient search procedure properties                                                                            satisfied  variable                                                                            noneliminated values search proce•                                                                           dure pick — assignment   fixedpoint theory tells transitive closure          activate  activated assignment does sup•  operator unique minimal set satisfying equation              port constraint eliminated  sup•   consequence set assignments              ports activated noneliminated assignments   eliminated unique maximal set                          contain activated noneliminated elements    satisfying item  def  each variable assignment          need guarantee contains value   maximal arcconsistent assignment               variable arcconsistent set exists variables   variable assignment arcconsistent as•              reached sources constraints activate best   signment exists case solution exists                       values sources directed constraint graph       constraints                                                                                                                                                                                                                                     constraints                                                                build arcconsistent set assignments neces•                                                                 sarily maximal base prefac ac bessiere                                                                   keeping discussion simple exploit                                                                  bidirectionality supports bessiere et al                                                                     ac assigns ordering values domain                                                                    variable checks support small•                                                                 est respect ordering each assignment                                                                    xi  each constraint prove                                                                   currently viable xj  small•       figure  preferred solution stable activation      est support xi — cxixj xi  added                                                                             list assignments currently having xj                                                                   smallest support removed domain xj      given preferred solution guarantee each                                                                  ac looks support domain xj   assignment preferred support constraints how•    each assignment   certain assignments solution preferred                                                                    prefac uses domain order  chosen linearization   supports preferred solution                                                                  looking supports domain variable     proposition  let solution suppose           xi furthermore prefac seeks supports elements   strict total orders each assignment —      current set activated noneliminated values   source direct constraint graph best assign• uses following data structure   ment unique maximal arcconsistent set                                                                    • each variable fixed initial domain  ordered   activated assignments input variables constraint                                                                                                                        containing values   preferred support preferred                                                                       violate unary constraints  set   solution                                                                                                                                                                        contains values      constructing stable activation choose preferred       removed arc consistency   supports result preferred solution                                                                    • arcconsistent set built algorithm   proposition  suppose strict total                                                                    • each contains   orders let sm activation sequence let                                                                       assignments currently supported              defined def  each preferred                                                    support  constraint st input                                                                    • set pending contains tuples xiaxjb   variable  unsupported                                                                       support xt  sought                                                                          rxixj means values xj   preferred solution                                            better removed      condition proposition  satisfied al•  prefac uses subprocedures algorithm  procedure   ways activating preferred supports second condition                                                                  activatexia adds assignment xi    met csps special structure example consider   set current activated values initializes data structure   binary constraint network directed constraint  cs puts pending information needed look   graph forms tree cf figure  case acti•                                                                 supports  constraints involving xt   vate supports assignments input variables                                                                  function bestsupx xj  looks best support   assignments output variables each variable                                                                  xi  preferred know   output variable single constraint result                                                                  support better equal   example interesting certain car configuration prob•                                                                   depending status  input variable   lems permits efficiently account certain       xj                             user preferences                                                prefac works follows start initializing      preferred solutions obtained trivial cases     dx each line  algorithm  activate best                                                                  value best variable line  tuples xj   proposition  suppose strict total                                                                  taken pending set line     orders preferred solution containing best                                                                  active line  seek new support   values variables equal activations input variable seek support   produced preferred supports                                ensure preferred support lines                                                                    seek support activated    algorithm prefac                                            noneliminated elements line  exists seek   section present prefac algorithm comput•  new best support line  following def  exists   ing arcconsistent set binary constraint network   activate store fact supports   xdc algorithm activates supports unsupported      lines   support exists xt —   elements meets requirements definitions      remove line    proposition  algorithm nonbinary constraints     wipe stops procedure line  xi source   derived prefac follows princi•      directed constraint graph best value     ples lazy arc consistency schiex et al  order                best ax  best value       constraints                                                                                                            
