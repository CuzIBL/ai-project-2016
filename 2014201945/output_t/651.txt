 sequential bundlebid singlesale auction algorithms decentralized control         sven koenig                craig tovey              xiaoming zheng               ilgaz sungur            usc           georgia institute technology         usc                        usc     science    industrial systems engineering science   industrial systems engineering      skoeniguscedu         ctoveyisyegatechedu       xiaominzuscedu            sunguruscedu                          abstract                          team cost ssi auctions tends larger                                                        combinatorial auctions agents      study auctionlike algorithms distributed al synergies tasks account bids reduce      location tasks cooperating agents reduce team cost ssi auctions extend assign      team cost sequential singleitem auction algorithms      generalize assign additional additional tasks agents during each round      task during each round increases similarity sequential bundlebid singlesale  singleitem auction al      combinatorial auction algorithms show gorithms short ssi auctions bundles consist      given number additional tasks assigned dur rounds tasks assigned agents      ing each round agent needs submit during each round agents bid bundles      stant number bids round runtime win tasks auctioneer assigns additional tasks      ner determination linear number agents agents making ssi auctions bundles similar com      communication winner determination costs binatorial auctions expect team cost ssi auctions      depend number tasks scale large bundles smaller standard ssi auc      number tasks small bundle sizes demon tions agents synergies tasks      strate empirically team cost sequential bundle      bid singlesale  singleitem auction algorithms account bids paper develop gen      substantially smaller bundles multi eral theory ssi auctions bundles proving      agent routing problems capacity constraints implemented small bundle sizes                                                        greatly increasing communication winner determina                                                        tion costs standard ssi auctions    introduction  study distributed allocation tasks cooperating  taskallocation problem  agents each task assigned exactly formalize taskallocation problems task  agent team cost small  team performance allocation problem consists set agents                                                                               high auction algorithms promise solve combina     set tasks         tuple                                                                                     ⊆   torial taskassignment problems small communication    pairwise disjoint bundles ai forall  computation costs agents compress information  task assigned agent  small number bids compute parallel partial solution taskallocation problem                                                                                              cagentt   exchange dias et al  ideal combinatorial meaning agent performs tasks ai let  auctions consist single round tasks cost needed agent ∈ perform tasks                                                            assigned agents agents bid bundles  sets ⊆  called agent cost synergies                                                                    cagentt cagentt   tasks auctioneer assigns tasks agents tasks       does necessarily                                                             cagentt  ∪     ∩   ∅  allows agents synergies tasks equal                  cost  account bids results minimal team cost partial solution called team cost depends team objec  incurs prohibitively large communication winner deter tive paper consider different team objectives                                                                                               cagentt   mination costs communication winner determina team cost partial solution a∈a                                                                                    max     cagentt   tion costs remain large agents bid selected bun team objective minisum a∈a  dles berhault et al  researchers team objective minimax use cteam special opera  recently advocated sequential singleitem auctions ssi auc tor shorthand sum max operator depend                                                                                      cteamcagentt   tions instead lagoudakis et al  ssi auctions consist ing team objective write a∈a make  rounds tasks assigned agents notation independent team objective partial                                                                       ∪       boutilier et al  fatima  during each round solution a∈a   each task  agents bid unallocated tasks auctioneer signed exactly agent complete solution task  signs additional task agent incurs small allocation problem want ﬁnd complete solution  communication winner determination costs taskallocation problem small team cost                                                    ijcai                                                                                                            consider round ssi auction bun                                                        dles assume agent ∈ assigned                                                        tasks ta ⊆ previous rounds ∈                                                          ∪a∈ata set unassigned tasks leave                                                        “unassigned” following readability                                                        unassigned tasks bid subsequently assigned bid                                                        triple agent bundle bid cost  numerical                                                        value bid bid use ba denote                                                        agent bt denote bundle bids bc denote          figure  multiagent routing problem         bid cost explain exactly bids agents sub                                                        mit including bid bids                                                        win    multiagent routing                                  bidding phase set submitted bids satisﬁes  study multiagent routing problems examples task  ∈ holds ba ∈ bt ⊆ uand                                                                                                  allocation problems shown figure  multiagent rout   bt≤k  ∈ ⊆  ing problems taskallocation problems tasks   ≤k exists exactly bid ∈                                                                            visit given targets exactly agent each terrain ba  bt   each agent bids nonempty  locations agents locations targets bundles tasks minisum team objective  known agent cost agent visit set given tar  cagentt ∪b −cagentt                                                             ba    ba    ba     ba  words agent  gets corresponds smallest travel distance needed visit bids increase agent cost tasks assigned  targets current location synergies additionally assigned tasks bids  tasks example smallest travel distance needed similar previous work marginalcost bidding  visit closeby targets typically smaller sum tractnet sandholm  minimax team objective  travel distances needed visit each target individu  cagentt ∪b                                                             ba    ba   words agent bids agent  ally multiagent routing standard task robot teams cost tasks assigned additionally assigned  needs solved example demining tasks bids  searchandrescue taking rock probes moon winner determination phase each collection b ⊆                                                                                                    multiagent routing capacity constraints agent bids potentially winning iff  ba  bt∩b  ∅                                                                                               perform arbitrary number tasks multiagent rout ∈    ∪b∈b bt mink   ing problems capacity constraints standard test potentially winning collection bids  domains agent coordination auctions dias et al different agents bids agent   multiagent routing capacity constraints ev express synergies cover exactly tasks tasks  ery agent perform given number tasks  case number tasks smaller term  capacity example given number rock covers case number tasks smaller  probes drill bit useless wear bundle size denote set potentially win  tear multiagent routing problems capacity constraints ning collections bids auctioneer evaluates  novel applications agent coordination auctions potentially winning collection b ⊆ bids accord                                                                      cteamb                                                        ing value b∈b called evaluation cost                                                        minisum minimax team objectives winning    ssi auctions bundles                                                                                                                            collection bw ∈ bids satisﬁes ∈  develop blend combinatorial sequential team      team                                                            ≤                                                            b∈bw    b∈b   winning collection bids  singleitem auctions ssi auctions sequen smallest evaluation cost potentially winning col  tial bundlebid singlesale  singleitem auction algorithms lections bids collection bids chosen  short ssi auctions bundles solve taskallocation                                                        auctioneer assigns additional tasks bt agent ba  problems initially tasks unassigned ssi auctions ∈  point time agent ∈  bundles consist rounds tasks                                                            assigned tasks tabwta ∪ bt exists ∈ bw  assigned agents execute tasks  aandt  signed during each round agents bid non                                                                   explain expect bidding winner  bundles unassigned tasks bidding phase determination rules result small team cost  auctioneer assigns exactly additional tasks                                                        team cost worse standard ssi auc  agents tasks case number tasks smaller tions  agent different agents winner deter  mination phase bundle size                                                        theorem   b   ∈    holds                                                                                                                                                      cteamcagentt  ≤ cteamcagentt      solve multiagent routing problems unknown terrain a∈a   a∈a            making assumptions unknown terrain minisum minimax team objectives  sumption traversable making effect “known”  solvable auctions runs auction reallocate proof let potentially winning collec                                                                                 cteamb ≤  cteamb  unvisited targets agents assumption turned tions bids show b∈x b∈y implies                                                        cteamcagentt ≤  cteamcagentt   wrong needed revised                 a∈a              a∈a          consider                                                    ijcai                                                                                   cteamcagentt                     mink − k u−k  minisum team objective adding a∈a    node depth                   leaf bid tree                                                                                                      sides inequality yields inequality deﬁnition depth negative term u−k covers    cagentt ∪  − cagentt                        possibly case number tasks smaller bundle  bundle tasks bid agent collection size each edge node question                                                              bids consider minimax team objective def children labeled tasks contained         cteamcagentt  max    cagentt   inition a∈a                a∈a               bundle completes construction bid trees  maxmax         cagentt  max     cagentt     ∪          a∈aba∈x        a∈aba∈x             agent submits bids bundles label nodes   maxmax       cagentt  max      cagentt ∪                a∈a          a∈aba∈x         bid trees calculating bid costs  xa     second argument    evalu  bundle label nodes course results  ation cost  collection   bids    bid number bids agent constant                              cteamcagentt     equality     similarly a∈a                  ssi auctions given bundle size  maxmax    cagentt  max      cagentt  ∪             a∈a         a∈aba∈y              ﬁrst argument identical ﬁrst                                                        theorem  winner determination phase assigns  second evaluation cost collection                                                        mink additional tasks modulo tie breaking  bids inequality inequality implies   team agent         team agent                        agents matter agents bid nonempty  ∈    ≤ ∈     inequality                                        bundles tasks submit bids bundles                                                         bid trees    words each round ssi auctions bundles  signs mink additional tasks agents team proof sketch assume agents bid nonempty bun  cost assignment small possible ssi dles tasks winning collection bids  auctions bundles perform hillclimbing resulting  show achieve team cost agents  team cost expected small unfortunately bid bundles bid trees obviously team  communication winner determination costs ssi auc cost smaller agents bid bundles bid  tions bundles described far large trees subset nonempty bundles tasks  number bids kthorder polynomial num need show larger end  ber tasks problem communication consider arbitrary winning bid ∈ bundle bt  winner determination costs bottlenecks ssi auc bid tree agent ba show replace                                                                                            tions bundles especially auctioneer bid bid bundle bid bid tree  centralized ssi auctions scale large numbers collection bids remains potentially winning bid cost                                                              tasks small bundle sizes show bid larger bid cost bid implies  modify ssi auctions bundles continue substitution increase team cost cteam operator  sign additional tasks agents during each monotonically increasing arguments similar substitutions  round modulo tie breaking given bundle bids  necessary bids  size agent needs submit constant number bundles bid trees agents proves theorem                                                                                                                                                                                                ∪      bids round runtime winner determination prove property consider tasks ∈w  linear number agents independent number winning bids bid following prop                                                                     b            b   tasks main contribution paper erties hold bid tree  bids                                                                     b     haps surprising ssi auctions bundles similar agent  bids number                                                              b ∩  ∅  ideal combinatorial auctions winner determination tasks  task assigned agent                                                           b ≤  known nphard needs approximated  bid cost new bid larger bid  hoos boutilier  result fact cost previous bid achieve properties choosing                                                                 agents bid bundles tasks ssi auctions bid smallest bid cost bids btth  bundles bundles ideal combinatorial auc bid tree agent ba bundles contain tasks asfol  tions idea modiﬁcation agents lows start root btth bid tree agent ba current  need submit bids bundles tasks node bundle current node does contain tasks  bundles chance winning                pick bid bundle choose task                                                        contained bundle ties broken arbitrarily    bidding phase                                      follow edge labeled task current node                                                        children repeat procedure guaranteed  explain exactly bundles agents need bid reach node bundle does contain tasks  determine bids submit round ssi contains mink −b  u−b  tasks th tree                                                                                          auction bundle size  agent constructs bid trees depth mink −b  u−b  bundle node bun              ≤ k ≤                 k                                   each          each node th bid tree dle smallest bid cost does contain tasks                       k  labeled bundle tasks each edge labeled stated properties construction bid trees  atask thekth bid tree recursively constructed starting  root consider node bid tree la example consider multiagent routing problem  beled bundle smallest bid cost capacity constraints shown figure  mini  bundles k tasks contain tasks max team objective agents targets located  label edges root node question each real line epsilon small positive tiebreaking constant                                                    ijcai                                                                           ε    ε    figure  multiagent routing problem capacities              tt tt tt ttt         −   −   −   −   −    −                                                        table  bid costs                                                        figure  bid trees ssi auctions bundle size three  table  shows bid costs agents bundles fig  ure  shows bid trees agent during ﬁrst round  ssi auction bundle size three example bun  dle targets lowest bid agent  root bid tree tt bundle lowest  bid agent bundles targets different  target child root bid tree  tt similarly bundle lowest bid agent  bundles targets different target  second child root bid tree figure  bid trees ssi auctions bundle size  tt overall agent bids nonempty bundles                                                   three targets figure  shows bid trees agent number targets bundle size previous number new number  during ﬁrst round ssi auction bundle size               bids       bids  consequently agent bids bundles tt                          half nonempty bundles                                                                                                           targets example agent does bid single                       tasks ones lowest secondlowest                         bid cost table  demonstrates substantial reduction                                                                                                           number bids agent different bundle sizes case                         tasks                                                                                                                                                                                                                                                    winner determination phase                                                                                                                                                     use refer bids agents                                                                                                                             bundles bid trees number                                 bids small clear auctioneer deter                             winning bids small runtime follow                                                                                                                                   ing construct winnerdetermination rule linear                                 number bids linear number agents  independent number tasks ssi auctions  table  reduction number bids  ﬁxed bundle size curious construction  justiﬁcation winnerdetermination rule  complicated bundle construction    items note consistent portfolio potentially winning                                                        collection bids ﬁnd winning collection bids auc  theorem  auctioneer determine winning bids tioneer constructs search tree each sequence each node  runtime linear number bids  search tree given sequence sl labeled port                                                        folio sequence each edge labeled constraint    proof sketch auctioneer needs assign mink ad kinds  “t ∈ bjt”foragivent ∈ given  ditional tasks agents ﬁrst ﬁnds different nondecreasing  ≤ ≤  “bja  ba bjt  bt”foragivenb ∈  sequences positive integers sum mink bt  sj given  ≤ ≤ search tree given  example three sequences mink sequence sl recursively constructed starting  a≥ sequences    root consider node search tree labeled port  sequences  each sequence folio bl smallest evaluation cost port  represents possible set winning bid sizes number folios satisfy constraints label edges root  sequences  portfolio node question follows constraint “t ∈ bjt”  sequence sl collection bids bl portfolio needs satisfy ∈ bit   bi ∈ bit  si  ≤ ≤ portfolio  ≤ ≤  ∈ bit constraint “bja  ba  sistent iff bia  bja bit ∩bjt  ∅  ≤ ij≤ bjt  bt” portfolio needs satisfy bia  ba  agent gets bid bids form partition bit  bt   ≤ ≤  bia  ba                                                    ijcai                                                    bit ∩ bt  ∅ node deleted search tree example consider multiagent routing prob  portfolio satisﬁes constraints each node consistent port lem capacity constraints shown figure   folio leaf auctioneer chooses  ≤ ≤ minimax team objective particular example ssi  bia  bja bit ∩ bjt  ∅  ≤ ≤ auctions larger bundle sizes result smaller   generate constraints label edges node team cost myopic  question children  “t ∈ bjt” constraint each guaranteed general  ssi auctions bundle size   ≤ ≤  each ∈ bit  “bja  ba auctioneer automatically assigns ad  bjt  bt” constraint each  ≤ ≤ each ∈ ditional target targets assigned agents following  bia  ba bt  sj justiﬁcation constraints order round  agent assigned target round  agent  satisﬁed bid assigned target round  agent assigned  agent bia portfolio bid portfo target write ← ← ←  lio bundle includes task ∈ bit largest travel distance agent  makespan  case substitute bid bi bid ith position  −   ssi auctions bundle size  resulting potentially winning bid increasing evalu auctioneer cautious assigns additional  ation cost completes construction search trees target targets assigned agents following  winning collection bids portfolio bl der parentheses enclose targets assigned  smallest evaluation cost consistent portfolios label ← tt ← ta ← ← tthemakespan  nodes search trees construction search trees  −  slightly smaller makespan  sequences search trees depth ssi auctions bundle size makespan ssi  search tree given sequence sl  auctions bundle size auctioneer assigns  each constraint imposes additional restriction additional targets possible  −  slightly  portfolio portfolio satisfy  constraints larger makespan ssi auctions bundle size  number children node each search tree auctioneer assigns additional target  each search tree oo  nodes portfo reason auctioneer assigns additional  lio each node determined time ob ﬁnding target experiments  ssi auctions bundle  bid smallest bid cost satisﬁes constraints indepen size three auctioneer assigns additional  dently each position portfolio consequently runtime target targets assigned agents following order  winner determination × × obob ← ta ← tt ← ← ← tthe                                                        makespan  minimal team cost    consider multiagent routing problem                                                        bundle size equals number targets smaller  capacity constraints shown figure  figure  shows                                                        makespan ssi auctions bundle size  corresponding search trees ﬁrst round ssi auc  tion bundle size three underlined bids used  generate constraints consistent portfolios annotated  experiments  evaluation cost                           evaluate beneﬁt ssi auctions bundles                                                        multiagent routing problems known eightneighbor pla    reﬁnement                                          nar grids size  ×  square cells  auctioneer cautious assign additional blocked unblocked grids resembled ofﬁce environ  task mink tasks round ments shown figure  averaged results  smallest agent cost case bidding phase changes  instances ofﬁce environment randomly  follows agent needs bid tasks closed doors solved multiagent routing problems  larger bundles bids bids agent capacity constraints using ssi auctions bundles  cost single tasks increases number bids agents stopped bidding number tasks assigned  constant usually small example consider reached capacity set capacities  multiagent routing problem capacity constraints agents ratio number targets agents  shown figure  figures   show agent agent needs determine bid costs bids deter  bids tasks larger bundles bids bids submit determine each bid cost  during ﬁrst round ssi auctions bundle sizes multiagent routing problems needs solve version  three does need submit additional tsp problem does need return initial lo  bids during ﬁrst round winner determination phase cation calculating smallest travel distance needed  changes follows auctioneer ﬁrst determines win visit targets current location nphard prob  ning collection bids  determines lem calculations need approximated                               agent      agent        run fast purpose used combination  bid ∈ task ∈  ≤                                ba         ba     b ∈     t ∈ b                                 twoopt cheapestinsertion heuristics experiments              task smallest agent table  tabulates team cost ssi auctions bun  cost equivalently bid cost winning tasks dle sizes three approximations  does comparing bids agent b task t                                   ∈      ∈                                                       choosing smallest similar results holds minisum team objective  bid cost ties broken arbitrarily assigns results ssi auctions bundle size auctioneer  additional task bidding agent ba       assigns additional target slightly different                                                    ijcai                                                    
