                          lifted firstorder probabilistic inference                           rodrigo salvo braz      eyal amir    dan roth                                university illinois urbanachampaign                                      department science                                 goodwin ave urbana il                            brazuiucedu       eyaldanrcsuiucedu                        abstract                          stantiate random variable patient                                                        necessary reason individuals gen      probabilistic inference algorithms speci eral level provided knows population size order      ﬁed processed propositional level answer query shorter time      decade proposals algorithms accept      ing ﬁrstorder speciﬁcations presented   scenario possible devise way      inference stage operate using available model answer query consid      propositional representation level poole ering each individual require manual       presented method perform inference di devising process speciﬁc model query ques      rectly ﬁrstorder level method tion missing date algorithm receive      limited special cases paper present general ﬁrstorder model automatically answer queries      ﬁrst exact inference algorithm operates directly like computional waste      ﬁrstorder level applied ﬁrst step direction given poole       ﬁrstorder model speciﬁed language gen proposes generalized version variable elimina      eralizes undirected graphical models exper tion algorithm zhang poole  lifted      iments show superior performance comparison    deals groups random variables ﬁrstorder level      propositional exact inference               algorithm receives speciﬁcation parameter                                                        ized random variables stand instantiations    introduction                                       eliminates way equivalent                                                        cheaper eliminating instantiations  probabilistic inference algorithms widely employed ar                                                                                    tiﬁcial intelligence accept algorithm poole   works  ﬁrstorder speciﬁcations models abstract particular type model elimination op  classes objects requiring instead propositional ones eration inversion elimination requires  longer redundant speciﬁed vari special conditions explained later special conditions  able variable                                     met carefully chosen elimination order    decade proposals algorithms accept ings certain cases ordering exists inversion  ing ﬁrstorder speciﬁcations presented ngo elimination applied steps introduces  haddawy  ng subrahmanian  jaeger  need type elimination counting elimination  kersting raedt  friedman et al  pfeffer applied costs putting  et al  poole  anderson et al  richardson operations present ﬁrst algorithm capable  domingos  laskey  based dealing ﬁrstorder probabilistic model op  theoretic framework halpern  erates directly ﬁrstorder representations resort  solutions perform inference propositional level ing propositional level show algorithm  dealing random variables instantiated correct provide experimental results comparing  ﬁrstorder parameterized variables ﬁrstorder spec propositional algorithm  iﬁcation usually relevant random variables  present propositional version domains large  number objects costly essentially  motivation  necessary example medical application  large population people infected certain disease probabilistic model set random variables  model probability death person ﬁned set dependencies each subset  person disease answer query “what variables propositional model each dependency  probability die disease” algo explicitly refers variables affects example  rithm depends propositionalization sider markov network involving potential function factor                                         propositional model formed possible instantiations                                                              logical variables following poole                          ¡                        ¢  epidemic ∧ sick      parameterized factors parfactors           φepidemic sick   epidemic ∧ ¬sick      semantics immediately provides inference al                         ¡                         £               gorithm representation                                                        apply regular propositional inference al    fact type potential function common gorithm propositionalized model  paper deﬁne “if α β p” mean overkill example order solve query                                                            deathjohnsickjohn necessary                          ¡                              ¢    α ∧ β                                                        sider instantiations erson  john ignoring            φv arα β   − α ∧ ¬β                              ¡                             values consider general queries                          £              sickp ersondeathp erson                                                        quire instantiations order solved  α β boolean formulas binary random vari                                                        extreme example beneﬁt directly using  ables arα β set random variables                                                        ﬁrstorder representation given adding parfactor  omitted assumed  “β p”                                                        “if                          ” model  “if  β p” “if α β q” stands deathp erson    somedeath                                                        considering query                      tree  “if α β p” “if ¬α β q” write                  somedeathepidemics  model readable fashion                  width propositionalized graphical model popu                                                        lation size query fact answered time    epidemic sick    sick death   independent population size similar example                                                        shown ﬁg  desirable algorithm  practical problems factor holds performing lifted inference inference directly  different sets variables requiring propositional models  repeat factor times modulo speciﬁc variables ﬁrstorder level instantiates parfactors nec  involved each time example wish track essary  each member population sick distinct languages mentioned allow parameterized  variables sickjohn sickmary     speciﬁcations probabilistic models corre  write                                                 sponding ﬁrstorder inference algorithm provided                                                        inference performed generating proposition            epidemic    sick john                                             alized form model using regular propositional          sickjohn deathjohn             ference algorithms systems like          epidemic sickmary                spook  pfeffer et al  beneﬁt ﬁrstorder          sickmary deathmary          structure ways paper present al                                                        gorithm performs exact lifted inference ﬁrstorder  renders model speciﬁcation unnecessarily complex models  redundant inference algorithm useful allow deterministic constraints  sider each factors separately logical variables parfactors example  structure exploited    currently common way dealing sit sickp erson ∧ roommatep erson erson  uations original model use each sepa sickp erson  erson  erson   rate object case each person needed  does help different instances factor need diabetesp erson  erson  john ∧ erson  mary  used time case answer  query sickjohn ∧ sickmary example constraint erson  erson ﬁrst factor states  situations procedures speciﬁc given model instantiations satisfying condition  manually tailored time consuming solution considered second factor potential     natural way problem specify recurring random variable diabetesp erson assigned  factors parameterized way allow ex instantiations erson distinct john  press succint way       mary           epidemic sickp erson            sickp erson deathp erson         language notation semantics  erson notation words starting language semantics essentially  capital typed logical variable assuming value poole  markov network                                                        speciﬁed ﬁrstorder language allows parameterized  set people involved problem semantics             representation simply equivalent random variables similar markov logic                                                        networks richardson domingos  parfactor    reason deﬁne model “conditional” poten triad φ representing applications potential  tial function usual conditional probabilities function φ instantiations tuple logical atoms  concern markov networks undirected models  paper                                      poole discusses aspects directed models howevera  according assignments logical variables procedure foveg  atoms satisfy constraint formula set parfactors set random variables query  point restrict constraints ﬁnite  rv  return  number solutions ﬁnite models  ← shatterg ﬁgure   prevents using function symbols –  ← findeliminableg                                                                  rv  rv  intersect   section  example  represented parfactor ←  ∈                                                                                 ge¯ ←  ge   φ φ appropriate potential function                                                             ← eliminatege  sickp ersonroommatep erson sickp erson                                                                          ←  ∪ ge¯   erson  erson                            return foveg    note way committed “if    then”  construction used simply notation speciﬁc procedure findeliminableg                                                         set parfactors rv  shattered  type potential function potential function allowed           ⊂                                                                 choose ag   random variables multivalued binary  ← ∈  rv rv intersect                                                                                                                   lv  lv ge inversioneliminable    just regular undirected graphical models return  joint probability distribution determined product  return findcounteliminableg  potential functions given assignment random vari  ables instantiations atoms parfactors procedure eliminateg                                                         set parfactors ⊂ rv  ground atoms difference                                                               ← ag   ﬁrstorder model product involves instantiations      ΘgΘg                                                               ←     φ          fusion section   parfactors given set parfactors joint distribution  g∈g                                                                       lv  lv inversioneliminable  deﬁned                                                                                                                                   return parfactor  ¡ φga θ  cg                                                            return                 rv ∝     φgagθ                                               vi                                                                          ¡                                                                            ¡  · · ·        φ                                                                         nu                                  g∈g θ∈Θg                           detailed section   rv set random variables ground procedure findcounteliminableg   atoms involved instantiations parfactors Θg set parfactors ⊆ rv ⊆ ag   set assignments substitutions logical  age  ground countingeliminable  variables satisfy constraint solutions return                                                            choose nonground atom ∈   constraint φg potential function ag tuple                                                                                return findcounteliminableg ∪  atoms agθ instantiation tuple given  assignment θ logical variables                                                            figure  firstorder variable elimination algorithm    notation include parfactor cg  straint set parfactors ag atoms      total constraint      set     cg                    vg∈g cg     Θg             variable elimination ve zhang poole  algo  solutions cg object α lv α rv α rithm calculates total marginal dividing  sets logical random variables α respectively smaller partial marginalizations each single variable  finally sets parfactors implicitly assumed main contribution paper ﬁrstorder version  standardized apart logical variables renamed ve fove shown figure  works simi  necessary logical variable used lar way eliminating maybe atoms  parfactor set                                 respective constraints each step advantage fove                                                        eliminating atom associated constraints    inference                                          effectively eliminating groundings lifted  inference problem given set random variables way cost independent number  ground atoms representing query calculate mar groundings  ginal probability given model queries involving  condition issued adding parfactors representing  fove correctness  condition                              show fove correct algorithm works                                                        following way suppose want eliminate atoms                 ∝      φg                    set given step write                         rv gq                                                                   ∝   ¢    φg  prv gq summation assignments ran         rv gq      dom variables φg shorthand notation                                                                                    ¢                                                                          ¢            φgeφge¯   righthand side equation                                 rv gqrv rv        calculating summation brute force intractable                                                                                          ¢  use independencies model               ¢       φge¯     φge  efﬁciently propositional models way doing       rv gqrv    rv ewhere rv set random variables resulting shattering      instantiations ge subset parfactors                                                                            ¢         ¢    ¡ ¢        ¢  depending rv ge¯  ge                           ¡   φgagθ    φgagθn                                                                            eθ            eθn                                                                                             represent        φge  potential                                             prv                                                                                                                                                               ¢  single parfactor deﬁned φg                      ¢  φgagθ        φga θ eθ                                                                      θ∈Θg eθ          θ∈Θg eθ        φgag θ reduce original marginal  qθ∈Θg                                                                                                                                                                                                                           ¢  φ θ renaming  prv  gq φg marginal model  ge¯ ∪                            involves fewer random variables                              θ∈Θg                                                                                                                                                 φaθ  φg                                                                            θ∈Θg                                ¢             ¢  ∝  ¢    φg               φge¯     φge         rv gq      rv gqrv   rv                                                                                                    new parfactor φ   cg tuple                                                       atoms distinct  φaθ  φ  θ              ¢                                                                                                     φge¯ φg                                                          peθ         rv gqrv                                cg constraint formula                                                            note initial sum products product                                      ¢             ¢       φge¯ ∪        φg         sums inversion elimination note         rv gqrv           rv gq            sum providing φ assignments parame                                                        terized random variables elimination method                                                        does depend number groundings    ways described calculating par number assignments parameterized random variable  factor φg      φg    inversion smaller                          prv                       condition lv  lv essential method  elimination  counting elimination  preferable                                                        work guarantees random variables  does depend number objects                                                        summed onetoone correspondence instan  domain words size rv                                                        tiations condition taken account  method requires certain conditions explained later                                                      poole  method eliminates random variables  impossible satisfy atoms                                                     query inversion elimination   favorable depends size                                          rv        proof make clear al  better propositionalization                                                        ways possible numerical contradiction  possible ﬁnd applied                                                        trying answer query px ∧ qy  ∧     subsections assume ge type type  replaced equivalent parfactor operation called px py  suitable inversion elimination cor  fusion explained section  left rect answer ≈  eliminating px qy                                                         inversion produces ≈   problem expressing prv φg parfactor    finally assume parfactors query  counting elimination  shattered explained section  main property ﬁnd atom satisfying conditions  shattered parfactors query atoms inversion elimination resort counting elimina  groundings identical completely dis tion based counting arguments  joint matters explained inversion counting elimination set atoms  counting elimination explained                                                        remaining atoms consequently ge                                                        ground ﬁnd set                                                        nonground atoms set try ﬁnd    inversion elimination                            smallest cost method depends                                                        size rv note counting elimination                                                        justiﬁed     implies inversion  inversion elimination assumes unary set eliminable                     set logical vari proper let remaining atoms     lv  lv      lv α                                          ables α let θ    θn enumeration Θg ground                                                                                                                                                                                   ¢                                                                       ¢   φg           φgeθ θ                                                                                            rv      rv θ∈Θg                 ¢      ¢   φg          φgagθ                                                                                                     rv     rv θ∈Θg                                                   ¢       φgeθ                                                                                     rv θ∈Θg                      ¢               ¢  · · · φgagθ    φgagθn                eθ   eθ                                                            term deﬁnes potential function φ                              ¢               ¢  φgagθ · · · φgagθn              result obtained counting elimination new par                                                                                     eθ           eθn                       factor  φ     order calculate term present counting argu ej θ know  ment given assignment rv                  option rj cases emθ  ej θ                                                        make choice cases                                                                                                                     emθ   ej θ choice emθ                 φ eθ   φ  avi                                                  ej θ information available                                         θ∈Θg                                       em  ej identical uniﬁable stated                                                        reasoning  grouping applications φg vi          vk different assignments eθ vi                                                                                                                                                                                                                       vi                                                                           ¢     ¢  set different eθ’s assigned vi                         ¢   φg    · · ·    nn φgvi     assume moment fact just atom                                                            rv       nu           means vi’s possible values                              vi  stances note qi φgvi function vi     words matters                                                                instances assigned vi given assignment vi  ynsji −   em  ej  rm  rj   rv different assignments  induce different vectors     vk induce                                                                                        vector     vn denoted product sj ssj  rj  nsj vector corre  given vector  number assign sponding counting assigments ssj  rj                                                         ments inducing multinomial coefﬁcient nsji number random variables rj assigned  particular case binary variable vij    rv  rv  group assignments finally consider case condition                                                                  atoms   lv  ∩ lv    ∅  according write                                                                                                                        satisﬁed reduce case previous                                                                                         multiplying away logical variables violating                                                                                   ni                        ¢             ¢   φg       φgvi               dition multiply logical variable vector z¯ away                                                                                                                  rv                                 parfactor calculate new parfactor  φ                                                                                                                           ah removal logi                                                                      ¯                                                           cal variables  clv hz¯ θ ∈ Θh                                                                                                                                        φ θ       ¯ φhahθ θ cw¯  restriction    let consider case contains multi          qθ ∈cz                                                        vector logical variables w¯  deﬁned  ple atoms let     en enumeration                                                        straint ∃v¯ v¯  lv  w¯  simply      rn respective groundings let                                                        mula describing solutions restricted variables  sume atoms em ej groundings                                                        w¯ equational formulas function symbols  rm rj identical disjoint condition satisﬁed  shattered sets parfactors discussed  simpliﬁed equational formula quantiﬁers  assume atoms identical multiplying away expensive operation depends  uniﬁable according cg granted directly domain size currently working  shattered sets parfactors demand sophisticated counting arguments minimize use  atoms em ej lv em ∩ lv ej   ∅  leaving case false later         fusion    let     su enumeration rj   ≤ ≤  sequence unique ’s consider each explain set parfactors replaced                                                      single equivalent parfactor fsg  φ    assignment composition assignments each si                                                                                                                    Θg Θg  write                                                 φ agθ  qg∈g  φgagθ        θ ∈ Θg                                                                                                                                                                                                          vi                                                   ΘgΘg                          ¢    ¢           ¢   φg     · · ·   φgvi                 φg         φgagθ         φgagθ                rv         su                                 g∈g θ∈Θg         g∈g θ∈Θg                                                                                                                                                           ΘgΘg                                                                        φgagθ    vi number eθ’s assigned vi vi  tuple assignment eθ  calculated choosing  θ∈Θg g∈g                                                                                                                                          each component vij  random variables rj          φ agθ  φfsg    assigned vij choice fashion  θ∈Θg  atoms share logical variables  simply  number random variables  unless                                                      crucial step replace each origi  component vim  em  ej  rm   rj  committed random variable rj nal set constraint solutions Θg global constraint  reason important know lution set Θg happens each original instantiation  beginning emθ random variable parfactor instantiated ΘgΘg times                                                        power ΘgΘg preserves original                               n···nn     deﬁned        nn             potential value                                  nnn
