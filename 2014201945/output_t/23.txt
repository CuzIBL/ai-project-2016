                         state space search riskaverse agents               patrice perny                   olivier spanjaard               louisxavier storme       lip  university paris      lip  university paris       lip  university paris               place jussieu                    place jussieu                   place jussieu       paris cedex  france      paris cedex  france       paris cedex  france          patricepernylipfr           olivierspanjaardlipfr       louisxavierstormelipfr                        abstract                          transitioncosts example costs time dependent                                                        representable random variables sda∗ algorithm      investigate search problems risk state introduced determine preferred paths accord      space graphs aim ﬁnding optimal      ing stochastic dominance partial order wellman et al      paths riskaverse agents consider prob    extension algorithm speciﬁcally designed      lems uncertainty existence cope uncertainty multiple criteria      different scenarios known probabilities  proposed wurman wellman       different impacts costs solutionpaths                                                          consider variation search prob      consider various nonlinear decision criteria eu                                                        lem uncertainty concerns search “robust”      rdu yaari express risk averse preferences                                                        solutionpaths introduced kouvelis yu       provide general optimization procedure                                                        der total uncertainty corresponds situations costs      criteria based pathranking algorithm      applied scalarized valuation graph paths depend different possible scenarios states                                                        world different viewpoints discordant sources      consider partial preference models like second                                                        information roughly speaking aim determine      order stochastic dominance ssd propose      multiobjective search algorithm determine ssd paths “reasonnable” cost scenarios risk                                                        probabilities known problem generalizes      optimal paths finally numerical performance                                                        search “lowcostlowrisk” paths let consider      algorithms presented discussed                                                        simple example    introduction                                       example   consider network pictured figure                                                         initial state  goal node  assume  various problems investigated artiﬁcial intelligence                                                        scenarios known probabilities relevant  formalized shortest path problems implicit state space concerning trafﬁc yielding different sets costs  graph pathplanning mobile robots vlsi layout                                                                               network each path associated vector  ternet searching starting given state want                                                                                           xx cost scenario        termine optimal sequence admissible actions allowing                                                                                                      transitions state state goal state reached                                                                                                 optimality refers minimization sev                                                                                                  eral cost functions attached transitions representing dis                                                                                        using costdistributions  pp  tances times energy consumptionsfor problems                                                                  ∗     ∗                    want determine solutions paths associated  structive search algorithms like hart et al                                     ε                   lowrisk costdistributions  pearl  single objective problems moa∗ mul  tiobjective problems stewart white iii                                                                                     proposed performing implicit enumeration feasible                                                                                                                  lutions                                                                                                                                                                       important source complexity pathplanning prob       lems uncertainty attached elements prob                                                                                                                         lem situations consequences actions                      certain transitions known probabilities                                                                                                     knowledge current state imperfect                       partial observability finally costs transitions                                                                                                              uncertain studies concentrate                                                                                                                            ﬁrst sources uncertainty important litterature                                    mdps pomdps puterman  kaebling et  al  focus uncertainty attached figure  scenarios problem representation                                                    ijcai                                                      simple problem prove hard solve n solutionpath path goal node γ ∈ Γ  larger instances coexistence difﬁculties paper assume exists  combinatorial nature solution space existence solutionpath  conﬂicting scenarios costs important following classical scheme robust optimization kou  note vectorvalued path problem introduced velis yu  consider ﬁnite set   reduced standard shortest path problem lin ssm possible scenarios each having possibly  ear scalarization costvectors loosing signiﬁcant different impact transitioncosts scenario  information assume example arcs graph dependent valuation  × → giving arc  plotted left figure  valued accoding ∈ scenario ∈ cost va tran  expected cost each path receives weight sition represented costs path supposed                                ∗  wx ppx   px algorithm used additive allows valuation extended                                  scalars weights output  depending rel arcs paths setting path scenario                                               ative value path vp a∈p va sequel assume  easily shown using right figure  cost solution path upper bounded positive  images solutionpaths plotted valuation space constant                                                                                          belong costvector xxm ∈   associated  boundary convex hull grey triangle images each path graph way component  paths excluded set potential winners   ileti denote probability scenario                                                                               m  long linear criterion used satisfactory si pi ≥  pi            presents wellbalanced proﬁle pre apathp costvector represented distribu                 ferred riskaverse agent similarly tion xxm ppmletl set probabilis                        prefers  depending probabilities tic distributions having ﬁnite support mthecost    example  shows limitations linear aggregation each path random variable characterized law  functions decisionmaking risk nonconvex px ∈l deﬁned ⊆ mbypx bp ∈  mains overcome difﬁculty need resort  xs ∈ random variable expected                                                                                    m  sophisticated decision criteria compare cost distributions value given ex pixi cumulative  term risk introduced decision theory function fx given fx zp ∈  xs ≤  decision criteria escape linearity introducing trans ∈ associated decumulative function  formation costs expected utility model eu denoted gx z− fx  von neumann morgenstern  introducing  probabilitytransformation yaari’s model yaari   decision criteria riskaverse agents  rankdependent utility model rdu ﬁeld decision making risk concept risk  quiggin  alternatively partial comparison models aversion widely investigated ﬁrst framework  including idea risk used agent’s util eu theory general frameworks roughly  ity function known secondorder stochastic dom speaking riskaversion amounts preferring solution  inance ssd aim paper incorporate guaranteed cost risky solution  models search algorithms determine lowrisk solution expected cost formalized pratt arrow pratt  paths implicit graphs                              arrow  deﬁne weak riskaversion weak    paper organized follows section  intro preference relation  follows  duce preliminary formal material decision crite                                                        deﬁnition  agent said weakly riskaverse  ria modelling risksensitive decision behaviours section                                   propose general optimization procedure ﬁnd distribution  considers                                                                              best paths respect criteria section  pro good xiee  pose multiobjective search algorithm determination eu theory riskaversion means agent’s util  ssdoptimal paths finally numerical experiments al ity function payoffs increasing concavetheco  gorithms given section                       efﬁcient riskaversion agent measured                                                        −uxux arrow  context counterpart    problem formulation                                eu given expected weight function    notations deﬁnitions                                                  m                                                                                                                                                           ew          piw xi               consider state space graph  na                                ﬁnite set nodes possible states set arcs  representing feasible transitions nodes formally → strictly increasing function                            ∈ nn ∈ sn sn ⊆   wxi represents subjective weight disutility  set successors node nodes reached attached cost xi agent criterion ewx  feasible elementary transition ∈ minimized represents disutility cost dis  denotes source graph initial state Γ ⊆ tribution ew model risk aversion means choos  subset goal nodes ps Γ set paths ing increasing convex equation   goal node γ ∈ Γandpn n set paths linking ewex ≤ ewx ∈l                                                    ijcai                                                      despite intuitive appeal eu theory does explain perny  enumerate solutionpaths implicit  rational decision making behaviors violation graph increasing order costs expliciting step   savage’s sure thing principle ellsberg  led need establish following result  researchers sophisticate deﬁnition expected utility proposition  nondecreasing probability transfor  popular generalizations eu let men mations ϕ   ϕq ≥ ∈   tion rank dependent utility introduced quiggin  nondecreasing convex weight functions  reformulated context follows  ∈lwe rdwx   ≥ ex                       rdw   x                                  proof xi ≥ xi m−              m−                 −                     ϕ gx  xi  xi   xi          nondecreasing wxi − wxi ≥                                                                   −                             ≥   represents permutation    equation  ϕ                                                            ∈                      ≤  ≤ xm ϕ nondecreasing probability trans  implies rdw                                                                 ≥          m−               −       formation function proper agent ϕ   w i gx xi xi   xi                                                      −                               ϕ      andw weight function assigning subjective  gxx    gx  xm − xm  disutility real costs criterion interpreted fol m−                                                              gx xi− − gx xi wxi  lows weight path costdistribution                   m−                                                         pwx pmwxm       piwxi  wx probability  weight increase                                                                                  ewx   ≥ wex  convexity            wx wx probability mass ϕgx                                                                            applies wx wx probability let  denotes set elemen                                                                               Γ  mass ϕgx wzz tary solutionpaths    cost distributions                                                                                           ≤     ≤  rdw known yaari’s model yaari             indexed way                                                                                                      weak riskaversion obtained yaari’s model  ≤ ex  each distribution yields cost xi                                                              choosing probability transformation ϕp ≥ vp si probability pi mthese                                                                           ∈   holds rdw provided  quence paths jr generated imple  function convex quiggin  hand menting ranking algorithm step  initial graph                                                                                           ϕ  identity function rdw boils  na using scalar valuation  → deﬁned                                                                                                 ew considering probabilities         piv si  value path                                                                          qi  gx xi  ki pk   −  graph linearity expectation  rdw criterion rewritten follows              assume during enumeration reach                                                                                    ≥         βk                m−                                  step kapathp        rdw       rdwx        ϕqi − ϕqi wxi       βk index rdwoptimal path                                                                             ϕqmwxm                           enumeration stopped thanks  equation observing qi − qi  pi proposition  wexk ≥ rdwxβk ∈  rdw reduces ew ϕzz rwhereβk index rdwminimal path  rdw generalizes ew yaari’s model pkthenp βk rdwminimal solution  sake generality consider rdw sequel path ps Γ  investigate following problem                                                        proof  know   βk rdwminimal  rdw   search problem  want determine rdw    kﬁrst detected paths show  optimal distribution set cost distributions paths solutionpath lower weight accord  ps Γ                                           ing rdwforallj       ∈k                                                                               problem nphard choosing wxx     rdwx     ≥  wex   thanks proposition                                                                  ≥                         ≥  ϕ    ϕxfor     ∈  mweget                 implies                                                                              βk                    rdwxxm      maxi  xi rdw  minimization   wex    ≥   rdwx         rdwx      ≥  vector valued graph reduces minmax shortest path rdwxβk shows βk rdwminimal  problem proved nphard murthy      ps Γ                                                                                              propositions   show ranked enumeration  searchwithrdw                                        solutionpaths performed step  interrupted  nonlinear criteria rdw breaks bellman loosing rdwoptimal solution establishes  principle directly resort dynamic program admissibility steps algorithm numerical tests  ming compute optimal paths overcome difﬁculty formed different instances presented section   propose exact algorithm proceeds three steps dicate stopping condition activated early   linear scalarization cost arc deﬁned enumeration shows practical efﬁciency pro  expected value cost distribution  ranking enumera posed algorithm  tion paths increasing order expected costs  stop  ping condition stops enumeration prove  dominancebased search  rdwoptimal distribution step  functions rdw ew provide sharp evaluation crite  formed ka∗ extension a∗ proposed galand ria require precise knowledge agent’s attitude                                                    ijcai                                                    risk assess disutility function interestingly relations fsd ssd dominance  section consider demanding models allowing relations equivalently deﬁned  wellfounded discrimination distributions                          ˇ        ˇ                                                             fsd  ⇔  ∀p ∈   gxp ≤ gy                                                                                     ˇ       ˇ    dominance relations                                   ssd  ⇔  ∀p ∈   gxp ≤ gy    primary dominance concept compare cost distributions   ˇ      ˇ                                                        gx   inverse functions deﬁned  following                                                                                                         ˇ   inf   ∈         ≤      ∈    deﬁnition  ∈l functional dominance     gx             gx                                                                    ˇ     ˇ          ∈    deﬁned fd ⇔ ∀s ∈ xs ≤               gx      gx  dq       relation fd dominance relation   ﬁnite context discrete distribu                                                                            ˇ                              ﬁned sequel set  optimal distributions ⊆ tion gx gx step functions gx                ∈    ∀  ∈          ⇒                   ˇ                                     ˇ    deﬁned                     gx  piecewise linear functions function gx    probabilities scenarios known functional known lorenz function commonly used                                                        equality ordering positive random variables muliere  dominance reﬁned ﬁrst order stochastic dominance                                                        scarsini  illustration consider example   deﬁned follows                                                                    ˇ                                                          wehavegx     pp    deﬁnition  ∈l order stochastic          ˇ                                                        ∈   gx pp ∈    dominance relation deﬁned                       ˇ            ∈    ˇ                 ⇔  ∀ ∈          ≤               gx          gx              fsd          gx    gy                              ˇ        ˇ                                                        ∈   gx ≤ gx  actually usual deﬁnition fsd involves cumulative                                                                                                   ssd   conﬁrms intuition path  distributions fx applied payoffs instead decumulative                                                                                 cost   risky path cost    functions gx applied costs deﬁnition  fsd                                                          dominance relations introduced subsection  means assigns probability events                                                        ing transitive sets fdoptimal elements fsdoptimal  type “the cost path z”                                                        elements ssdoptimal elements  natural consider good                                                        sets nested thanks following impli  fsd                                                         cations fd    ⇒   fsd    fsd    ⇒    relation fsd clearly related ew model ssd  distributions ∈linexam                                                                                             fsd  ewx ≤ ewy  increas ple         ing weight function quiggin thisgivesanice        set fdoptimal ele                                                                                interpretation deﬁnition  eu theory use ments  set fsdoptimal el  ful consequence agent ewminimizer ements set ssdoptimal elements                                                                   increasing weight function preferred solutions  section devoted following  necessarily belong set fsdoptimal solutions ssd search problem want determine ssdoptimal  richer dominance relation considered  distributions set cost distributions paths ps Γ  deﬁnition  ∈l second order stochastic each solutionpath  dominance relation deﬁned follows                                                ssd ⇔  ∀z ∈ mgxz ≤ gy            problem complexity                                            ∈                assess complexity search ﬁrst make explicit  gx      gx  dy             link ssd generalized lorenz dominance  stochastic dominance acknowledged standard way deﬁned marshall olkin  generalized lorenz  characterizing riskaverse behaviors independently dominance denoted gld sequel based deﬁ  utility model example rotschild stiglitz  nition lorenz vector lxlxlmx  machina pratt  provide axiomatic character vector xxm lkx sum  izations ssd terms risk using “mean preserving greatest components relation gld deﬁned  spreads” consequence agent said strongly follows gld lx pareto dominates lyie  riskaverse prefers ssd lkx ≤ lky mnowifpi    ssd  natural interpretation eu theory mthen ssd deﬁned equation  distribu  ssd  ewx ≤ ewy  increas tions reduces lorenz dominance corresponding cost                                                                              ˇ  ing convex weight function quiggin asanice vectors lkxmgx km particular  consequence know agent riskaverse case equally probable scenarios ssd search problem  ewminimizer preferred solutions necessarily reduces search lorenz nondominated paths np  long set ssdoptimal solutions applies hard problem shown perny spanjaard   rdw  provided φq ≥ ∈   function shows ssd search problem nphard  convex directly follows result quiggin          ∗   shows outside eu theory ssd ap  ssda algorithm  pears natural preference relation riskaverse agents consider example  assume scenarios  used ﬁrst efﬁcient ﬁltering risky paths equal probabilities preferred subpath                                                    ijcai                                                                                                                        node  node      cost xp   costvector ∈  label chosen                                                                       open  preferred path     cost xp   instance minimize ew convex function        ssd     goal nodes priority rule guarantees expand  case subsection  equally probable scenar labels attached ssdoptimal paths  ios lxp   lxp    ob pruning pruning labels directly  viously   pareto dominates   appending ssd relation shown beginning subsec                                         path    xp    respectively tion following pruning rules used                                  yields path  ∪  cost   path  rule  node nalabel ∈ open pruned exists                                       ∪p     lx  pareto dom label  node g fd g  inates lx     ssd     rule essentially moa∗ justiﬁed  constitutes preference reversal illustrates viola fact fdoptimality does satisfy bellman princi  tion bellman principle invalidating direct dynamic ple fd dominance implies ssd dominance la  programming approach optimal path  lost dur bels pruned like necessarily lead fddominated paths                   ing search pruned node     lead ssdoptimal solution paths    problem overcome knowing rule  label  ∈ open pruned ∈                                                                                   ssdoptimal paths fdoptimal ii fdoptimality exists  ∈ sol g  ssd rule allows  satisﬁes bellman principle iii set scenarios early elimination uninteresting labels keeping admis  ing ﬁnite fdoptimality cost distributions sibility algorithm provided heuristic admissible  paretooptimality costvectors ssdoptimal distribu ∀n ∈ ∀h∗ ∈ h∗n ∃h ∈ hn st fd h∗  tions obtained stages  generate admissible ∗ ∈ ∗ ex  fdoptimal solutionpaths using multiobjective a∗ moa∗ ists ∈   gh fd gh∗  ∗  stewart white iii  mandow la cruz  implies ssd ∗ g ssd ∗   eliminate ssddominated solutions output set transitivity ssd  fdoptimal solutions numerous note deciding ssd performed                                                                                           ˇ         ˇ  efﬁcient focus directly ssdoptimal solutions dur constant time functions gx gy  ing search reason introduce reﬁnement piecewise linear indicated section  compar         ∗           ∗  moa  called ssda direct determination ssd ison amounts test pareto dominance union set  optimal solutions                                    break points functions cardinality    moa∗ ssda∗   expands vectorvalued labels upper bounded  tached subpaths nodes note unlike termination process kept running set open  scalar case possibly exists pareto non remaining subpath able  dominated paths distinct costvectors reach given reach new ssdoptimal solution path construction  node labels associate node ssda∗ develops subgraph developped moa∗  each step search set generated labels termination derives termination moa∗  divided disjoint sets set open expanded  labels set closed expanded labels  numerical tests  label selected expansion attached solution  path stored set sol initially open contains various tests performed evaluate perfor  label attached subpath node closed mance algorithms randomly generated graphs dif  sol essential features ferent sizes number nodes graphs varies                                                                                                   ssda∗ algorithm                                 number arcs                                                                        output determines set ssdoptimal solutionpaths nodes   nodes cost vectors integers  solutionpaths distribution ssdoptimal randomly drawn interval   algorithms  paths distribution implemented computational experiments  path stored using standard bookkeeping tech carried pentium iv cpu ghz pc  niques                                                 table  presents average performance algorithms                        ∗  heuristics like moa aset hn  heuristic cost different classes instances characterized nodes  vectors used node maybeonthepath  number nodes graph number sce  nondominated solution set estimates narios each class average performance com  set h∗n nondominated costs paths Γ puted  different instances class  priority direct search use setvalued label ssd average number ssdoptimal distributions                                                      tssd average time seconds solve ssd search  evaluation function deﬁned way                 ∗  label  estimates set ∗ nondominated costs problem ssda  results given table  show                                                        average number ssdoptimal distributions increases  solution paths extending subpath associated                                          ∗  set  computed possible combinations slowly size graph ssda com  gh   ∈  hnwhereg  denotes value putation times show good efﬁciency  sec  subpath associated  node  onds worst cases rightmost columns table   attached each step search ssda∗ expands label concern performance determining rdwoptimal paths                                                                                     open  contains ssdoptimal wzz ϕpp  wegivegentheaver                                                    ijcai                                                    
