                      abstractionbased action ordering planning                               maria fox    derek long     julie porteous                             department information sciences                                  university strathclyde glasgow uk                          abstract                          makes underlying symmetric structure ac                                                        cessible subset available symmetries efﬁ      planning problems contain collections     ciently identiﬁed using automatic techniques fox long      symmetric objects actions structures     observed di      render difﬁcult solve efﬁciently rectly accessible symmetries ones      shown detection exploitation sym useful exploit      metric structure planning problems dramat   happens structures planning problem      ically reduce size search space quite symmetric treating      time taken ﬁnd solution present idea symmetric increase efﬁciency search al      using abstraction problem domain symmetries revealed application appro      veal symmetric structure guide navigation priate abstraction domain term      search space show effective refers fact associated symmetry      domains little accessible longs abstracted domain unsound      symmetric structure available pruning proac respect original domain symmetries      tive exploitation represents ﬂexible powerful exploited positive way suggest best develop      alternative symmetrybreaking strategies ex plan using pruning compromise      ploited earlier work planning csps completeness paper consider application      notion symmetry deﬁned results certain simple abstraction property      presented showing proactive exploitation al based abstraction reveal form symmetry      symmetry improve performance    show effectively exploited solve      heuristic forward search planner                 original problem begin simple motivating exam                                                        ple present deﬁnitions examples support                                                        following discussion extension    introduction                                       ff enables proactive exploitation symmetric prob  symmetries frequently occur search problems lem structure discuss collection results obtained  planning problems joslin roy  fox long strips domains used  planning competition   rintanen  csps roy pachet  gent  smith  roneydougal et al  model    identifying symmetry  checking ip dill  audemard benhamou   consider problem transporting number crates   techniques developed symmetry location depots domain fox  breaking improve search performance emphasis long  crates stacked different piles  using symmetries prune search spaces sug initial state moved new conﬁgurations  gest branches pursue paper propose use solution plan involve unstacking crates loading  symmetries direct forward search ffstyle transport delivering unloading  planner positive way show proactive use abstract level precise locations crates  symmetries lead signiﬁcant performance improve ignored crates treated symmetric  ments variety planning domains           subplans required crates    automatic identiﬁcation symmetries goal conﬁgurations  problem nphard complexity identi fact cargoes start stacked different piles  ﬁcation problem researchers working symmetry means automatically identiﬁed func  broken symmetries hand expressing speciﬁc symmetry tionally equivalent fox long  furthermore  breaking constraints modelling problem gent initial conﬁgurations different  smith  ip dill  roneydougal et al identiﬁed symmetric sense exploited joslin   planning domain models structured way roy  high degree symmetryin structure problem immedi special subclass conﬁguration symmetries contains  ately accessible automatic analysis crates symmetries proved  symmetric symmetric abstract fruitful existing exploitations symmetries fox  ing speciﬁc domain objects related long   class generated  crate doesn’t matter pairwise transpositions set symmetric objects  losing sight properties op deﬁnition  conﬁguration symmetry   posed having distinguish oigc functional symmetry permutation  collection objects case crates group  acting subset constants  symmetrical reason need perform    operations objects during course  propertybased abstraction  eventual solution plan    say actions symmetric symmetries seen consequence form  different instances operator objects abstraction abstraction renders certain groups actions  corresponding argument positions symmetric objects structures equivalent specifying details  abstracted domain stategy favours relationships differentiate problems  selection actions symmetric actions applying abstraction remove distinctions  applied plan           objects lead discovery new potential symmetries                                                        present base domain observation                                                        leads make following deﬁnition    symmetries planning domains                                                        deﬁnition  abstraction planning problem  section develop formal framework deﬁning mapping new planning problem  symmetries planning problems begin familiar  deﬁnitions planning domain planning problem deﬁnition deliberately permissive  plan symmetries studied decades math wish exclude possible abstractions general  ematicians groups adopt grouptheoretic considering compositional mappings com  characterisation deﬁning each symmetry permutation ponents constructed applying abstraction  preserves equivalence domain conﬁgurations dependently different components following  applied elements groups act deﬁnition formalises propertybased abstraction described  objects domain                                  earlier properties ﬁrst deﬁned fox long                                                         property argument predicate pair contain  deﬁnition  planning problem tuple oigc ing predicate argument position index  set operator schemas set initial state denoted subscripting predicate  facts set goal propositions set containing argument position  constants appearing i∪g                                                        deﬁnition  following mapping propertybased  deﬁnition  plan planning problem oigc abstraction planning problem   sequence operator schemas each instantiated each proposition planning problem formed  constants each instantiated operator predicate applied arguments     xk  schema applied preceding state starting fpx     xk  px     pkxk unary tar  ﬁnal state satisﬁes                        predicates     pk called properties    ﬁrst symmetry consider form explored propertybased abstraction simpliﬁes structure  joslin roy joslin roy  subsequently problem removing linkage pairs objects  sidered rintanen rintanen                  considering problem union separate projec                                                        tions original problem each constant  deﬁnition  conﬁguration symmetry planning prob effect abstracting objects play roles  lem  oigc group acting constants respect objects  action elements initial apply abstraction planning problem  goal states invariant plan remains valid identify symmetry abstracted problem symmetry  plan                                           useful relationship original problem  deﬁnition requires plan remain valid deﬁnition  given planning problem abstrac  der action elements symmetry does tion mapping planning problem symmetry  require plan invariant example called symmetry respect  sider simple blocks problem illustrated ﬁgure  abstraction  group id cedf  conﬁguration symmetry  valid plans remain valid plans abstractions throw away structure  invariant transpositions problem abstracted domain useful connection  rearrange steps plan        original domain practice interested ab                                                        stractions preserve signiﬁcant structure original    identity element denoted id elements ex problem way structure preserved  pressed standard cycle notation groups    behaviour plans abstraction                                                        makegraphp                                                                               input planning problem                                               output coloured graph                                                          initialise graph               initial state     goal state               ∈         figure  simple example blocks problem         create vertex vc colour equal type                                                           add vc                                                           initialise set propositions qi                                                           propositions ∈                                                            contains  deﬁnition  abstraction planning problem   add qi  plan preserving plan fp plan  let props  bag properties qi    fp                                                   create vertex vqi colour equal qi props                                                          names properties props identify arities  propertybased abstraction problem necessar predicates types arguments  ily plan preserving each property available                                                          add vqi    abstracted domain deleted  create edge vc vqi  replaced cases set propositions  add  collapses single property solution  initialise set propositions qg  abstracted problem                                     propositions ∈                                                            contains  deﬁnition  symmetry planning problem      add qg  respect abstraction strong weak  let props  bag properties qg    symmetry plan preserving              create vertex vqg colour equal qgprops                                                          add vq    case identity symmetry                                                             create edge vc vqg  respect trivially strong symmetry   add    propertybased abstraction just abstraction func  return  tion reveals exploitable symmetries gen  eral abstraction process remove important constraints figure  construction coloured graph  original problem act guide                                                                                            solution original problem use                             guide abstraction chosen care rea                                                                                                                                                                                    cleara   clearc    cleare  son symmetries handled cautiously pruning          onba     onfc     onde                                                                                        onef  search space using symmetry likely      onab    oncd                                                                onab    oncd      onef  compromise completeness                                            onba     onde      onfc                                                                ontableb ontabled   ontablef                                                                                                     starting point identifying symmetries                                                                                                                    tween objects method used joslin roy joslin                                                                                                               roy  given planning problem build              graph representing object relationships initial figure  graph constructed makegraph blocks                                               goal states problem use nauty mckay  example nodes shape outline          graph automorphism discovery tool identify colour numbered   automorphisms graph key difference ap  proach way graph constructed given  planning problem approach identiﬁes subset having identiﬁed symmetries exist  symmetries domain construct coloured object level domain construct sym  graph represents abstraction problem metric relation actions described applica  propertybased abstraction construction performed tion propertybased abstraction described deﬁni  makegraph algorithm shown ﬁgure  nauty tion  allows identiﬁcation symmetry ﬁgure   used ﬁnd symmetries abstracted problem blocks tops stacks  colouring nodes distinguishes proper blocks bottoms stacks interpreta  ties arise propertybased abstraction described tion seen blocks  deﬁnition  nauty ﬁnds symmetries blocks tops three stacks  problem respect propertybased abstraction bases three new stacks goal    following theorem guarantees makegraph gen similarly beneath  erates functional symmetry respect blocks tops new stacks abstraction  propertybased abstraction proof omitted brevity fact groups blocks start different positions                                                        irrelevant symmetry behaviour  theorem  automorphisms graph  make    apparent  graphp planning problem restricted constants coloured graph construct problem  form functional symmetry respect shown ﬁgure  round nodes  blocks  propertybased abstraction                      problem nodes colour theblocks type considered share  actionselecthgash  unary type predicate each nodes  input heuristic value current state symmetry                                                           set proposed actions plan head  nected set propositions mention correspond  output extended plan head h’  ing block initial state set propositions  initialise vector vs counts each action  mention block goal state seen  actions  properties obtained propositions sets  actions  different corresponding nodes different colours  uses object uses object ∈  example nodes   different colours al  increment vsa  contain proposition colour node  sort according vs   contains property respect block prop                                                           heuristic value   erty colour node  contains property  respect block property             h’  ha                                                           return h’    output nauty generators graph  automorphism group restricted domain objects                                                        figure  modiﬁed version ff favouring symmetric ac  output problem vertices                                                           tion choices  vertices        symmetry obtained ﬁrst applying  propertybased abstraction blocks world problem  exploitation symmetry information  applying nauty resulting graph belongs work described paper explored  abstracted problem detailed relationships simple strategy symmetry information used  tween particular blocks removed seen heuristic guide selection proposed action  blocks interchangeable property choices during plan generation ff performs forward state  based abstraction blocks interestingly space search each stage proposes actions apply  particular simple example collections blocks current state amend action selection strategy ff  interchangeable plan property favour actions symmetric actions selected  based abstraction plan preserving case al earlier plan positive exploitation symme  symmetry strong deﬁned deﬁnition  try use symmetric structure problem                                                        propose prune action choices    proactive symmetry exploitation                      heuristic prefers actions use objects sym                                                        metrical objects appeared actions ear  existing work exploiting symmetry search prob lier plan exploits observation sym  lems exploitation negative sense metric objects each require treatment plan likely  used prune search space order avoid search require symmetric treatment  ing symmetrically equivalent parts search space heuristic straightforward implement ff  useful space searched each stage during plan generation current plan  fruitlessly symmetry implies symmetri consists actions applied far  cally equivalent parts space prove fruit initial state current state stage set pos  various approaches used prune search sible actions proposed ff helpful  space including introduction symmetry breaking actions occur ﬁrst layer relaxed  straints problem encoding technique plan current state immediately applicable  used planning context joslin roy  current state ff normally chooses  rintanen  forcing ordering applying relaxed distance measure states  symmetric choices example monitoring choices produce choosing ﬁrst helpful action produces  search machinery pruning equivalent choices state closest goal modify strategy ff  arise approach followed fox long  uses selecting ordering helpful ac   long fox  context cer tions use objects symmetrical  tain heuristic search strategies utility approaches appeared actions plan far visited ﬁrst  signiﬁcantly reduced particular forward search selection strategy consequence  approach ff effectively breaks symmetries actions improve heuristic distance selected  tracking action choices beneﬁt modiﬁed strategy modify heuristic esti  obtained avoiding consideration symmetric ac mate order actions record each action  tion choices during breadthﬁrst search plateau pruning count number symmetric objects uses sort  symmetric branches appears likely useful heuris actions descending order count ties  tic search planners systematic search planners broken using ff’s standard action selection strategy nec    order exploit symmetry heuristic search planners essary modiﬁcations action selection step shown  propose alternative strategy pruning approach ﬁgure   cases action choices available symmetric illustrate use symmetry information ff ver  choices adopted sion  ffv consider simple depots example pﬁle  propose encourage choices                   ipc archive following sets objects  action  symmetric args                    score          distributordepot                                                                                             ferry        distributordepot depotdistributor        gripper                                                                  rovers                                                                  depots        hoisthoist                                     driverlog                                                            freecell        hoisthoist cratecrate     table  scoring helpful actions symmetric arguments                                                                      symmetric according properties initial ff  symmetry  goal states problem pallet pallet pallet  cratecrate crate crate truck truck depot  distributor hoist hoist hoist intermedi  ate point during plan generation plan contains follow    ing actions                                                                                                                                                       drivetruckdistributordepot                                         ff version       drivetruckdepotdistributor      drivetruckdepotdistributor                          figure  comparison states visited      lifthoistcratecratedistributor      loadhoistcratetruckdistributor                                                        techniques discover  symmetric objects    set helpful actions proposed ff point problems results show obtain signiﬁcant  plan contains                                    advantages artiﬁcial natural domains      drivetruckdistributor distributor      gripper results present randomly generated prob      drivetruckdistributordepot             lems number balls number grippers      lifthoistcratepalletdistributor      vary ferry problems randomly generated      lifthoistcratepalletdepot            varying numbers ferries cars increasing numbers      lifthoistcratecratedistributor                                                        grippers ferries problems reduces num    scores associated actions obtained                                                        ber times sail helpful action  counting number corresponding pairs symmetric ar                                                        increases relative density choicepoints  guments each action occurence                                                        symmetric actions available begin pre  action plan far scoring increment                                                        senting graphs results comparing numbers states ex  score case argument helpful action                                                        plored time taken includes time required  identical corresponding argument earlier action                                                        carry symmetry analysis  want encourage acting objects  symmetric set                                          figure  shows comparison performances ff                                                        ffvsymm terms number states vis    consider helpful actions turn scoring                                                        ited search plot logscaled middle  shown ﬁgure  heuristic choose                                                        three lines represents equal performance lines  actions weighted  case lift action selected                                                        represent  performance difference side equal  likely competing drive action highly                                                        points line represent performance advan  valued distance heuristic undoes effect                                                        tage ffvsymm seen ﬁve free  immediately preceding step                                                        cell problems rovers problem problems total    seen strategy forcing planner                                                        solved  efﬁciently ffv  commit earlier actions proved success                                                        trast problems solved   ful symmetrical objects needed lift crate                                                        efﬁciently ffvsymm  crate crate symmetric good idea  thing crate                      figure  shows comparative time performance prob                                                        lems taken domains plot sta                                                        tistical reported exclude instances solved    experimental results                               second reasons ﬁrstly noise ef  section report results experiments compare fects measurements severe values small  performance planner ffv hoffmann nebel secondly implementation symmetry analysis   hoffmann  version planner optimised speed making overhead relatively  uses symmetry information positive heuristic distorted penalty small problems line repre  ciding action apply refer planner sents equal performance points line represent  ffvsymm consider domains better performance ffvsymm seen ff  artiﬁcially constructed contain high degree directly ex outperforms ffvsymm cases  ploitable symmetry whilst remaining natu conﬁrm statistical signiﬁcance results  ral domains taken ipc competition bench marks used wilcoxonmannwhitney matched pairs signed  group depots driverlog rovers freecell ranks test test appropriate matched pairs  little directly exploitable symmetry — existing ttest distribution differences performance
