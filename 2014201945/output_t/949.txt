             incorporating      folding  rule   inductive   logic  programming                                           david  rosenblueth                    instituto investigaciones en matematicas´ aplicadas en sistemas                                universidad  nacional  autonoma´  mexico´                                     apdo     mexico´                                                  mexico                                            drosenblservidorunammx                                                                             ¦                            abstract                          expressions ¦¨  “ ” denotes equality vari                                                        able renaming          inductive logic programming systems                                                                                                                                                                     used fold clauses folding rule infers ¥          operators reorganizing program far inferred                                                                 ¥   ¥   ¥      ¥                                                                          ¨                                                                         ¨                                                                            ¢                          ¢                                                                                             £          intraconstruction operator cigol          £                                                                       ¨    ¥ ¨          ¡         ¥            time similar reorganizing    ¡¨                                                                                                      ¢    ¢                     ¢     ¢                                                                                                                                                                                                                                £                           £                                                                          ¤                          ¤                                                                               ¥                           ¥                                                                          ¨                               operator called “folding rule” developed           ¨©¨                                                                                                                ¢                                                                                      program transformation argue                             ¤                                                                                         ¥                                                                                             advantages using extended folding rule                      ¡              reorganizing operator inductiveinference sys ¡ ¡¨©¨¡    addition syn      tems extended folding rule allows     tactic restrictions soundness refer reader          inductiveinference recognize  pettorossi proietti  application folding                                                                      ¨  ¥    ¥       alreadylearned concepts increase replaces ¥           efﬁciently execution inferred programs       observe rule limitation requiring                                                                                                                                                                                           ¥      ¥                                                                                                                                                  clauses folded ¨  head                                                                                      ¢                                                                                  ¤        introduction                                       body instance                                                                                     ¨   ¥                                                           bodies deﬁnition ¥   ﬁrst glance inductive logic program hand folding advantage allowing      ming ilp logic program transformation lpt                                                                      ¥      ¥                                                                                                                                        clauses ¨  drawn previous pro  opposite objectives ilp interested generalizing gram pettorossi et al   examples lpt careful preserve correctness nev able perform comparison intra  ertheless ilp operators like intraconstruction construction assume intraconstruction consists  operator cigol generalize instead reor parts ﬁrst “invention” predicate  ganize program far inferred suggests looking clausereorganization proper second      logic program transformation rules obtain better nongener                                                                            ¥ ¨          ¡     ¥                                                                     ¡¨                                                                                                                       ¢      alizing operators ilp                                         ¢                                                                                                                                                                                                                                                                     ¤                                                                     ¤                                                                                                            ¥                                                                        ¥                                                                                                                                                                                                                                                                       ¨   ¨                                lpt  rule called “folding” pettorossi proietti   ¨                                                                                                                   ¢                                                                                   reminiscent intraconstruction impor                    ¤                                                                                         ¥                                                                             ¡                                                                                         tant differences example intraconstruction pro                                                                                                                                                      ¢                                                                                             ¢                                                                                                      ¢                                                                                                        duces deﬁnition new predicate “concept” fold                                                                                                                              ¤                                                                                             ¤                                                                                                     ¤                                                                                        ¥        ¥¥                                                                                                ¥                                                                                                                                                                                                       ¨  ¨                                                                                                          ing receives input deﬁnition sepa                  msg                       rate dedicated rule creating deﬁnition reason              ¡¥¨                                                                                                      separate rule lpt derivation efﬁ                                                                                                           ¡¥                                                                                                ¨                                                                                              ¢      ciently executable programs closely related able ¢                                                                                                                                                           ¤                          ¤                                                                                                                                                ¥   ¨      ¥                                                                                     fold using alreadyexisting deﬁnition                          ¨        researchers developed reorganizing operators application second intraconstruction                                                                      ¨   ¥    ¥   ilp operators instance sys replaces ¥  compared folding  tems devised muggleton banerji ling rouveirol deﬁnition clauses unit clauses ar      puget selected muggleton’s intraconstruction gument places terms undo generalization                                                                                ¥  ¨   ¥    representative operators performing comparison resolving ¥  introduc  folding main ideas comparison ing new deﬁnition constraints relevant      carry similar operators                                             ¢                                           ¢                wish recognize alreadyinferred concept                                                               £                                             ¤         ¡ denote atoms   denote   interested increasing efﬁciency execution  tuples atoms assume deﬁnite logic programs inferred program important able      msg ¥§¦©¨   ¦   denotes speciﬁc generalization relax limitations   common    extension folding              folding intraconstruction unable derive         intraconstruction                                 desired concept                                                                                               ¥§   illustration showing need increasing efﬁ      arch ¥¥ beam      column            ciency inferred program consider stringmatching able derive concise version arch   problem problem consists ﬁnding occurrences important concept      occurrence string called pattern different                                                                                             ¥       string called text suppose pat    gateway ¥¥§ beam     column                  ¢    tern string  ¡   following examples recently extended ordinary folding rule      text having occurrence pattern overcome limitations folding rosenblueth                             ¢¦§                           £                                  extension viewed common generalization                          ¥¤   ¦                           ¥                                                                 ¢¦§                       ordinary folding intraconstruction                         £                                                                    ¢                            ¢                                                                   £                             £                          ¥¥¤   ¦   ¨                                                                          ¨      ¥ ¨          ¡          ¥                                                                 ¡¨                                                                                                                                         ¢     ¢                                                                ¢    ¢                                                                                                                                                                                                                                                                £                                                               £                                                                                                  ¤      apply absorption deriving                                 ¤                                                                                                            ¥                                                                      ¥                                                                                                                                                                                                            ¨ ¨  ¨   ¨                                                                                            ¨                                                                     §                                                                                                          ¢                                                                     ¢                        £          £                                                                                                                                                                                                                                                                     ¤                                                                     ¤                          ¥¤   ©    ¥§                           ¥                                                                                                                             ¡        ¥                                                             ¡       ¥                                                                                                                                                                                                           ¨ ¨  ¨   ¨                                                                                            ¨                                                                                                                              ¢                                                                                  example                                                                ¤                                                                                         ¥                                                                                  ¡                                ¢     ¢ §                         £                          ¨¤  ¨   ¨                               ¥                                                                                                          ¢             ¢        ¢                                                                                                                                                                        ¤             ¤       ¤                                                                                 ¥¥ ¨  ¨ ¥  ©         allows apply absorption inferring                  ¥       msg                                                                                       ¥§¡     ¡                                                                         ¡                                                                                       ¨ ¨¨                               §                           ¢                                                   msg                         £         £                                                                                                      ¢                                                                                                      £                          ¥¤ ©    ¥§                           ¥                                                                                                                                                                                                                                                                                                   acts variables occurring            clauses    regarded representing acts variables occurring ¡ occurring                                                               ¢                                                  ¢    ¢                                                              £                                             ¥     ¡                                                                                                                                                                                            ¥                                                                                            ﬁnitestate automaton accepting language           headonly variables  addition      clauses nondeterministic program preserve syntactic conditions © developed ordinary  quiring quadratic time worst case ﬁnd oc multipleclause folding pettorossi proietti       currence pattern note program main point folding rule computation                                                                             converted deterministic version intraconstruction substitutions  way soundness  reason need able apply intra preserved distinguish kinds headonly vari      construction inventing new predicate ap able instantiation coverage taking function sym                                                                                                            ¢                                                                                                            plication alreadyexisting predicates represent edges                                          ¤                                                                                                       ¥                                                                 bol variable substitutions                                                                          ¢       ¢                                                                                                                                                         ¤      going backwards corresponding automaton allow          ¤                                                                  ¥ ¥ ¨  ¨ ¥         ©                                                            msg                            matching  ing use alreadyexisting deﬁnitions accompanied taking function symbol corresponding position      possible violation conditions intraconstruction clause singleclause folding         ¡   ’s required form         contributions poster rosenblueth                                                     limitation suggests using ordinary folding pet  comparison folding intraconstruction                         torossi proietti  rule operator reper  development inductively inferred example pro                                                toire ilp fact pettorossi et al  show grams currently investigating possibility em  determinize program similar just                                                        bedding folding rule cigol  ferred absorption given speciﬁcation user  folding rule plays central role          references    ordinary folding rule pettorossi proietti   adequate inductive logic programming pettorossi proietti  alberto pettorossi maur      observed rule requires set atoms izio proietti transformation logic programs dov                                                 ¢                                         match bodies deﬁnition ¤  gabbay hogger robinson editors hand                                                               book logic artiﬁcial intelligence logic program                                       ¨   ¥    each clause folded ¥      illustration suppose inductive ming volume  pages – oxford university press      inference inferred following description                                     §                                §                                                                           ¨¤       ¤    arch example arch ¥¥ beam given pettorossi et al  alberto pettorossi maurizio proi      later                                                   etti sophie renault enhancing partial deduction                            §                    §                                          unfoldfold rules proc th int workshop              ¥¤ ©      ¤ ©            ¥§            arch ¥¥    beam           brick block            logic program synthesis transformation pages –                                                                              column ¥                stockholm sweden  springerverlag lecture                  §                                            notes science                 ¥¤        column ¥                      §                                     rosenblueth  david rosenblueth multiple                ¥¥¤ ©               ¥      ¥                            column         brick block   column                                                           clause folding rule using instantiation generalization      add example                               submitted fundamenta informaticae special issue                                 §                             §                                 program transformation                           ¨¤        ¤                     arch ¥¥ beam                   
