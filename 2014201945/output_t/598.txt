       incremental tractable reasoning qualitative temporal constraints                                                        alfonso gerevini                   dea  universita degli studi di brescia branze  brescia italy                                              gereviniingunibsit                               abstract                               fullydynamic version deal assertions                                                                  retractions typically worstcase performance      applications temporal reasoning in­                                                                 algorithm dynamic problem specified terms      terested reasoning incrementally particular given                                                                  amortized complexity single operation assertion re­     csp temporal constrains new constraint                                                                  traction defined average runtime oper­     want maintain certain properties extended csp                                                                  ation worstcase sequence operations tarjan       solution recomputing                                                                    large majority algorithms devel­     scratch point algebra pa interval algebra                                                                  oped reasoning tractable classes qualitative tem­     ia wellknown frameworks qualitative tem­                                                                 poral constraints static paper investigate      poral reasoning existing algorithms pa                                                                  incremental version reasoning problems pa      known tractable fragments ia ord                                                                 ordhorn discussing behavior existing techniques      horn designed static reasoning                                                                  proposing new ones given sequence input      paper study incremental version funda­                                                                 constraints involving variables incremental algorithms      mental problems temporal reasoning proposing new                                                                  improve total runtime required processing using ex­     algorithms amortize complexity process­                                                                 isting techniques factor       ing sequence input constraints analyzing                                                                    section  necessary background pa      role pathconsistency incremental satisfiability                                                                  section  analyzing use pathconsistency      propose algorithms maintaining solution csp                                                                  algorithm incremental satisfiability checking propose      pa ordhorn minimal labels                                                                  new incremental algorithms finding solution csp      csp pa algorithms improve complexity                                                                  pa ordhorn computing minimal      using existing techniques factor                                                                  labels csp pa finally section  briefly dis­     number variables involved csp                                                                  cuss fullydynamic version problems considered                                                                  mention results future work    introduction                                                                   background pa ia   constraintbased qualitative temporal reasoning widely   studied area ai prominent approaches      vilain kautzs point algebra  consists three   allens interval algebra ia  vilain        basic relations time points possible   kautzs point algebra pa  given csp tempo­       unions  universal rela­  ral constraints fundamental reasoning problems deciding   tion relations allens interval algebra   satisfiability csp finding solution computing  consists thirteen basic relations temporal   minimal labels problems arc nphard      intervals possible unions relations   ia polynomial pa frag­     relation pa ia closed operations union   ments ia nebel  burckert  ordhorn          intersection difference converse composi­  subalgebra unique maximal tractable subclass     tion operations defined standard   ia containing basic relations                      way composition relations derived      applications temporal reasoning in­       transitivity tables basic relations pa ia   terested dynamic online reasoning instance        qualitative temporal constraint satisfaction problem   given initial possibly csp temporal constraints briefly temporal csp context set constraints   new constraint asserted want maintain  kind xru cither point variables   solution csp recomputing scratch interval variables parelation   using static algorithm                                    point variables iarelation      design algorithms dynamic polynomial prob­         given temporal csp pa ia funda­  lems important research field operation research  mental reasoning problem deciding satisfiability    theoretical science ausiello et ai      satisfiable exists solution   dynamic problem semidynamic fully         assignment temporal values variables ratio­  dynamic semidynamic version deal informa­     nal numbers point variables pairs rational numbers   tion incrementally given decrementally retracted interval variables constraints  satis      temporal reasoning                                                                                                     fied problem deciding satisfiability   graph csp topological sort vertices      called psat pa isat ia       graph easily derive scenario csp    problem finding solution called psol       enforcing pathconsistency temporal csp requires    pa isol                               cubic time sufficient decide psat fladkin      related reasoning problem finding scenario re­  maddux  does solve pmin order    fines given temporal csp scenario csp satisfi  solve pmin csp pa addition enforce path   able refinement constraints pairs    consistency need identify particular variable    variables basic relations csp refinement    constraint subsets path consistent csp containing      involve variables            constraint refined subsets    pair variables xy called forbidden subgraphs ivan beek                          scenario satisfiable temporal   diamonds gerevini schubert     csp pa ia identifies total order point in­     regarding ia tractable fragments iden­   terval endpoint variables csp consistent tified simple interval algebra sia van beek     constraints scenario point interval ladkin maddux  formed iarelations   endpoint variables interpretation translated conjunction paconstraints be­   mapped position clearly derive    tween interval endpoints reasoning problems csp   solution csp just assigning points end     sia solved applying corresponding al­  points numbers consistent relative order    gorithms patranslation interesting      temporal csp involving variables pro­          tractable fragment ia nebel biirckerts ordhorn   cessed using cubic time algorithm refines equiv­  class  ordhorn subsumes sia unique   alent path consistent csp montanari  csp path     maximal tractable subalgebra ia containing basic   consistent subset constraints involving three  relations each constraint ordhorn trans­  variables relation        lated set disjunctions paconstraints form   stronger equal subset composition   endpoints in­                                                          tervals literal type       temporal csp minimal pair variables   given temporal csp ordhorn denote   relation strongest relations  csp paconstraints formed unary disjunctions   entailed csp each basic paconstraints point translation interval con­     relation exists scenario csp    straints    rij refined problem computing         like psat isat ordhorn decided cubic   minimal csp pmin pa imin ia                      time using pathconsistency algorithm isol ord     computational point view pa ia dif­     horn solved square time input csp known   ferent properties reasoning problems introduced     path consistentgerevini cristani  cubic   polynomial pa nphard ia vi      time ligozat    lain kautz  particular psat psol       rest paper incremental version rea­  solved time using van beeks method            soning problems temporal csp indicated adding   pmin requires time ivan beek  gerevini               prefix corresponding static problem   schubert  techniques use graphbased repre­     incremental version psol ipsol   sentation csp gerevini schubert   loss generality assume initial temporal csp al­  called temporally labeled graph tlgraph tlgraph    ready involves variables possibly constrained   graph set labeled edges each edge connects    universal relation amortized complexity anal­  pair distinct vertices representing point variables ysis based input sequences length quadratic   temporal csp edges directed la­     number variables assumptions discussed   beled undirected labeled constraints          extended version paper gerevini    represented pair constraints van beeks method   finding scenario satisfiable csp paconstrains  incremental tractable reasoning   based identifying strongly connected components   pathconsistency ipsat iisat   scc tlgraph representing csp cormen et    using edges each scc collapsed        van beeks method solving psat requires   single vertex representing equivalent class vari­ quadratic time consider incremental version   ables interpreted temporal value   problem ipsat enforcing pathconsistency turns   omit edges resultant graph obtain      efficient simple iterative application   directed acyclic graph induced precedence  van beeks static algorithm fact use path                                                                consistency algorithm like given figure  pc       loss generality assume information proposed allen  slightly reformu­  provided universal relation lated improved vilain kautz  bessiere   pair variables                    incrementally process sequence pa     assign integer points position     points second position solution topological sort dag linear order vertices   derive total order scenario trivial way successor graph precedes win                                                                                                  temporal reasoning temporal reasoning                                                                                                                                                                            figure  example revision topological sort                                                                            set variables equal adding                                                                                  directed solid arcs represent edges prece                                                                           dence graph collapsing variables                                                                            dashed arrows indicate shift performed steps                                                                             incrementalpasol                                                                              anticipated particular variable added                                                                            shift backward number positions equal                                                                            number items currently given value                                                                            shift steps  subroutine steps                                                                             forward variables positions                                                                            occupied variables shifted backward notice                                                                            updatetsorttxu terminates relative                                                                            order variables entered                                                                            shifted backward changed revised                                                                            topological sort figure  shows simple example                                                                               xry induces new equalities                                                                            variables possibly represented                                                                            form equivalence class step  collapses ver­                                                                           tices precedence graph corresponding                                                                            variables single representative vertex transfer­                                                                           ring incoming outgoing edges collapsed                                                                            vertices order update need reorder                                                                            variables                                                                            collapsed variables topologically ordered using                                                                            step  assigned positions                                                                                                steps   shrinks shifting                                                                            backward variables appearing starting                                                                            position shift equal num­                                                                           ber variables vertices eliminated                                                                            figure  gives example illustrating steps          updatetsort similar technique used marchetti el         theorem  incrementalpasol solves ipsol   ai  context algorithm detecting cycles       total time number temporal vari•  dag                                                                     ables                                                                                                                  temporal reasoning figure  types diamonds generated   new constraint  directed undirected edges represent   constraints minimal csp cases               cases       proof sketch correctness algorithm follows   theorem  discussion description algo­  rithm theorem  step  requires total time   costly steps   requiring time   performed times input sequence     algorithm ipmin   simple use van beeks static algorithm pmin af­  ter each constraint assertion solve ipmin requires   total time section propose algorithm solv­  ing ipmin incrementalpamin requiring total   time best possible worstcase complexity bound      order maintain csp pa minimal new   paconstraint given addition enforce path  consistency need identify remove possibly     diamonds generated figure    diamonds consist constraints type clearly   new constraint generate additional diamonds                            relation   minimal csp         let minimal csp ∑ii ∑i path con­         theorem  incrementalpamin solves ipmin     sistent csp total time number temporal vari•            new constraint propagation gen­ ables   erate new constraints easy new       proof sketch algorithm eliminates new   possible diamonds involve new            diamonds correctness follows theorem  fact   constraints order make minimal suffices      path consistent csp pa diamond mini­  identify eliminate diamonds involving  mal gerevini schubert  complexity follows   constraints figure  shows possible types    theorem  fact total number pairs   diamonds generated new constraint        enter            note cases   symmetric   reduced case analogously           algorithm iisol ordhorn      propagation                             gerevini cristani  showed isol path   rise new constraints order    consistent csp ordhorn solved   make minimal suffices identify eliminate new    time using solution translation figure    diamonds involving                                             gives algorithm solving iisol exploits      algorithm solving ipmin given figure    property uses incrementalpasol algorithm   uses modification ipc called pc like ipci     requires total time application sketch   revision ipc track certain constraints gen­ known static algorithm each time new constraint as­  erated propagation xry ipc adds pairs      serted requires total time cost reduced   variables relation refined list         total time using ipc combined gerevini    global variable initialized steps   cristanis algorithm order worse   incrementalpamin list containing xy        complexity algorithm presented   pair pair variables added      algorithm uses modification ipc called ipc   subroutine revise ipc modification revise      revision ipc track certain con­  step  perform following additional steps   straints generated propagation new input con­  update                                                   straint given path consistent cspof        temporal reasoning                                                                                                    
