                     knowledgebased anytime computation                     abdelillah mouaddib                      shlomo zilberstein              iut lenscrilcrininria                 science department                 rue luniversite              university massachusetts                   lens cedex prance                  amherst ma  usa                     mouaddiblensliflfr                    shlomocsumassedu                        abstract                          avoid problems ai community con•                                                     structed general paradigms anytime algo•      paper describes realtime decision•     rithms dean boddy  horvitz  designto      making model combines expressiveness  time garvey lesser  various types pro•      flexibility knowledgebased systems gressive reasoning techniques winston  mouad•      realtime advantages anytime algorithms dib et  approach con•      anytime algorithms offer simple means     struct special architectures particular problem do•      intelligent trade com• mains guardian monitoring       putation time quality results previ•   patients condition intensive care unit hayesroth       ous attempts develop knowledgebased any•   et  general paradigms anytime       time algorithms failed produce consistent  algorithms particular increasingly used ai ap•      predictable improvement quality time  plications easy construct monitor       performance profiles efficiently combined produce       output quality function time hard larger realtime systems zilberstein  success•      exploit flexibility anytime algorithms ful control anytime algorithms require use per•      model progressive reasoning pre• formance profiles dependency output       sented based hierarchy reason• quality computation time knowledgebased anytime       ing units allow gradual improvement algorithms proposed past       decision quality predictable manner  exhibit high correlation computation time       result important step ap•    output quality performance profiles       plication knowledgebased systems time  constructed use anytime algorithms       critical domains                              limited                                                        paper model knowledgebased    introduction                                     progressive reasoning meets requirements                                                      wellbehaved anytime algorithm model consists   paper describes realtime decisionmaking model rulebased language associated inference   combines expressiveness flexibility mechanism problem solving performed iter•  knowledgebased systems realtime advantages ative process produces quickly solution   anytime algorithms application knowledge refines stepbystep interrupted control   based systems realtime domains process con• mechanism section  problem   trol automated navigation systems medical monitor• constructing knowledgebased anytime algorithms   ing robotics important problem artificial difficulties current solutions problem   intelligence major difficulty solving problem section  describes model progressive reasoning   arises realtime domains require continuous opera• section  application   tion predictable performance knowledgebased model collision avoidance conclude   systems rely timeconsuming algorithms highly summary contribution work future   variable performance performance variability lim• research directions   ited application knowledgebased systems real  time domains                                                       anytime computation     author continues collaborate crinnria   september  address batiment loria bp  knowledgebased systems    vandoeuvre france email amouaddiloriafr     support author provided na• section presents advantages anytime algo•  tional science foundation grant iri rithms realtime decision making section                                                                         mouaddib zilberstein   scribes efforts develop knowledgebased sys• mains successful example guardian    tems anytime algorithms explains difficulty monitoring patients condition intensive    combining paradigms                    care unit hayesroth et  inte•                                                      grates perceptual capabilities realtime reasoning     anytime algorithms                             action closer approach patient moni•                                                      toring developed ash et al  sys•   anytime algorithms algorithms quality re• tem exhibits anytime behavior accomplished orga•   sults improve gradually computation time increases nizing actions hierarchical structure result    offer tradeoff resource consump• integrated guardian provide    tion output quality quality results pro• response slower deliberative methods    duced anytime algorithms measured complete tasks work described paper    level certainty accuracy specificity performance extends hierarchical decomposition approach gen•   profile dean boddy  probabilistic descrip• eral knowledgebased systems motivation best    tion dependency output quality computation summarized conclusion survey    time zilberstein russell generalized notion cap•   turing dependency input quality using con• concluded main reasons    ditional performance profiles used  situation expert systems developers     optimally compose realtime systems using library tried apply traditional tools    anytime algorithms zilberstein  solve applications suited    composition problem important distinction  tools specifically built realtime monitor•   types anytime algorithms inter• ing control applications need built    ruption contract algorithms interruptible algo• immediate goal development    rithm interrupted time produce results highperformance inference engines    quality described performance profile guarantee response times    contract algorithm offers similar tradeoff    computation time quality results  knowledgebased anytime    know total allocation time advance interrupt• computation    ible algorithms flexible                                                       knowledgebased systems rely inference engine    complicated construct zilberstein  solved                                                       combined body declarative knowledge    problem general construction produces in•                                                      relevant knowledge varies situation    terruptible version given contract algorithm                                                       situation hard predict problem solving    requires small constant penalty subsequently                                                       progress function time naive im•   set programming tools composition monitor•                                                      plementation progressive reasoning techniques does    ing anytime algorithms developed grass                                                       lead wellbehaved anytime algorithms    zilberstein                                                        section attempts construct anytime      introduction late anytime al• knowledgebased systems limitations    gorithms applied realtime problems                                                         elkan  presents abductive strategy dis•   mobile robot navigation medical diagnosis monitor•                                                      covering revising plausible plans approach    ing information gathering modelbased diagnosis                                                       candidate plans quickly allowing    addition anytime algorithms de•                                                      depend assumptions formalism makes explicit    veloped evaluation probabilistic networks                                                       antecedents rules status default    dynamic programming technique                                                       conditions candidate plans refined incrementally    successful area knowledgebased systems                                                       trying justify assumptions de•                                                      pend implementation model replaces     realtime knowledgebased systems              standard depthfirst exploration strategy prolog     comprehensive survey realtime knowledge iterativedeepening version result anytime    based systems laffey et  authors concluded algorithm incremental approximate planning    currently ad hoc techniques used making pointed earlier hard per•   produce response specified time inter• formance profile planner context    val unfortunately changed particular domain knowledge performance    survey conducted primary method  inference engine theorem prover going highly    achieving realtime performance based cases dependent particular query hard predict    speeding individual algorithms generateand advance difficulty measure quality    test manner method slows development results meaningful way model progressive    realtime systems makes inefficient reasoning addresses successfully issues    operating dynamic environments                   smith liu  propose monotone query pro•     approach deal problem   cessing algorithm derives approximate answers di•   develop specialized architectures particular do• rectly relational algebra query expressions ap     knowledge base technology proximate relation standard relation  subset computation time quality results offered   cartesian product domains progressive reasoning systems   partitioned blocks certain set                                                        section explains progressive reasoning works   possible set   cup                                                       major issues progressive reasoning   algorithm assumes information stored                                                      hierarchical organization knowledge control   database complete input data precise                                                      evolution solution quality cover issues   incomplete answer query generated                                                      describing conceptual model   time complete processing query                                                      implementation properties implementation   relation read accessi•                                                     based great guaranteed reasoning time   ble                                                      model mouaddib et      vrbsky liu implemented approximate   query processing algorithm called approx•  conceptual model   imate vrbsky liu  operation associ•  ated each leaf node tree approximate distinctive features progressive reasoning ap•  read returns segment requested relation proach result combination  generic   time approximate relational algebra used or• knowledge representation language facilitates pro•  der evaluate tree initially certain set gressive problem solving  control mechanism   approximate object possible set progressively feeds data knowledge in•  complete range values particular object ference engine using preference criterion   each approximateread better approximate answer knowledge represented using rulebased language   query produced exact answer returned refers data set attributes progressive   allowed run completion        problem solving process assumes     approximate suffers problem     solutions different qualities each represents   elkans approximate planning technique dif• intermediate approximate view final solution   ficulty derive performance profile transition solution precise   dependence contents database using additional attributes rules   complexity query hard evalu• precise previously used each rule   ate quality approximate relation represent change current solution adding deleting mod•  quantitatively summarize existing knowledge ifying attributes contained current solution   based techniques hard convert anytime algo• process shown schematically figure    rithms wide variability performance improve•  ment time      progressive reasoning   progressive reasoning important technique de•  sign knowledgebased systems exhibit highly pre•  dictable timequality tradeoff technique uses multi•  level deliberation order gradually transform ap•  proximate solution precise mapping   set inputs problem instance set outputs   solution based progressive exploration data   knowledge progressive reasoning pro• figure  schematic structure progressive reason•  gressive exploration facilitated using hierarchical ing   structure input elements defined weights   systems designer attaches each input according organization defined preference criterion   importance correspondingly knowledge orga• representing accuracy attributes specified   nized hierarchical way mapping especially systems designer attributes preference crite•  suitable domains reasoner uses abstraction rion allows solution represented different   structure search space hierarchical plan• levels preference criterion named crit  ning  problems require result ex• icality knoblock et al  generalized   pressed varying levels modelbased notion granularity great model use   diagnosis                                        certainty attributes control progressive manip•    furthermore organization important factor ulation data granularity based   reducing unpredictability knowledgebased sys• attributes preference criterion preference criterion   tems limiting knowledge data rules computed automatically shown   focus each level hierarchy section preference criterion defines aggre•  result characterize precisely tradeoff gations attributes aggregations rules                                                                        mouaddib zilberstein  figure  single execution cycle consists reason•  ing cycle evaluation cycle distinct level   reasoning     reasoning cycles   each reasoning cycle consists using region   package rules corresponding current level rea•  soning approach limits relevant data   knowledge each level reasoning performed   exploring rules current package attributes   current region cycle reasoning consists   activating relevant rules execution rules modi•  fies quality solution evaluated   end each cycle quality unsatisfactory   execution cycle activated process re•  peated quality satisfactory deadline   reached     evaluation cycle   end each reasoning cycle evaluator judges   quality actual solution decides   improvement needed reason•  ing required evaluator decides   pursued level necessary change   reasoning level use precise attributes quality   evaluated based multidimensional criterion   measures level completeness certainty preci•  sion solution evaluator checks   completeness certainty insufficient case   reasoning cycle level executed   evaluator verifies precision quality   solution acceptable solution returned   process terminates evaluator      knowledge base technology completeness certainty evaluation fails   processing resumes level li evaluation suc•  ceeds deadline reached evaluation   succeeds evaluator invokes level order   improve precision solution     construction reasoning levels li guaran•  tees improvement solution quality sys•  tem moves level true   attributes computed new level li   precise contained current result   level li deletes current solution attributes   judged incorrect current level granularity   example attribute time contains value   replaced level granularity   takes minutes account value hlmin   quality solution slrea preferred        application collision avoidance         consider problem collision avoidance railway   network assume railway network consists   horizontal railway tracks vertical tracks each   used train each horizontal track in•  tersects vertical ones main objective   prevent trains colliding each   crossings needs detect potential   collisions optimally modify speeds train   avoid chance collision rest section   describes great model used construct   collision avoidance mouaddib       collision avoidance progressive         reasoning   implementation collision avoidance task   achieved using different levels approximation depend•  ing time available deadline de•  fined time remaining collision oc•  cur domain different policies   avoid collision control   train qualitative manner stop slow speed   compute actual speed various levels pre•  cision different constraints taken account   passenger comfort means acceleration   slowing limited timetable   each train priorities timedependent utilities   different trains   capture types knowledge used com•  ponents great follows       • set data attributes defined       — speed tendency nextcross distance railpri      ority maxspeed minspeed timetable     • context situation defined       — controlcollision context set                     mouaddib zilberstein  
