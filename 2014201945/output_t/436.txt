                        compilation stratiﬁed belief bases                          linear possibilistic logic policies            salem benferhat                      safa yahi                       habiba drias    crilcnrs universit´e d’artois          universit´e usthb          institut national d’informatique            rue jean souvraz            bp  elalia bab ezzouar             bp oued smar        lens cedex france           algiers algeria            algiers algeria      benferhatcrilunivartoisfr        yahisafagmailcom                   driasinidz                        abstract                          proach williams  linear order approach nebel                                                         examples approaches use consis      developing efﬁcient approaches reasoning  tent subbases rescher’s notion acceptable subbases      der inconsistency important issue ap rescher  brewka’s preferred subtheories brewka      plications methods proposed  lexicographical benferhat et al       compile possibly inconsistent weighted strat lehmann       iﬁed bases paper focuses wellknown                                                          paper mainly focus linear order      linear order possibilistic logic strategies pro                                                        possibilistic logic policies given stratiﬁed belief base      vides way compiling stratiﬁed belief base                                                        Σssk   contains prioritized formulas      order able process inference                                                        stratum sk contains prioritized formulas      polynomial time resulting extra compilation                                                        possibilistic logic takes account ﬁrst consistent      cost low particular number addi                                                        strata stops inconsistency met nebel nebel      tional variables added original stratiﬁed                                                         elaborated liberal way select consis      bases corresponds exactly number priority                                                        tent subbase inconsistency occurs strata kwe      levels existing base compi                                                        stratum concerned inconsistency      lation approach allows efﬁcient computation                                                        continue add strata lower certainty consistency      weighted possibilistic conclusions possibilistic                                                        preserved      conditioning                                                          practical point view reasoning inconsis                                                        tency hard problem nebel  deciding    introduction                                       inference stratiﬁed belief base respect pos                                                                          Δp        integrating pieces information coming different pos sibilistic policy  log complete problem  sibly conﬂicting sources lead reason inconsis deciding inference respect linear order                                                                Δp  tent formulae case classical inference policy complete  used exploit given belief base incon address problem use knowledge com  sistent base formula inferred ex falso quodlibet pilation knowledge compilation key direction  sequitur principle                                  search artiﬁcial intelligence selman hkautz     approaches proposed order reason cadoli donini  darwiche marquis  inconsistency trivialization consists preprocessing offline knowledge base  consist weakening inference relation der make inference easier online  paraconsistant logics weaken available beliefs like key issue possibilistic logic determine  wellknown coherence basedapproaches rescher level uncertainty associated formulas  manor                                          derived inconsistent knowledge base im    coherencebased approaches characterized portant issue compute ”possibilistic conditioning”  following steps formulas incon like possibilistic networks given evidence  sistent belief base Σ order restore consistency provided form conjunction literals term  operation results consistent subbases Σ need evaluate impact evidence cer  ii use classical entailment consistent subbases tainty degrees variables generally formulas  deﬁne plausible conclusions knowledge base Σ knowledge bases  priorities attached pieces knowledge available paper propose efﬁcient way compile strat  task coping inconsistency simpliﬁed iﬁed belief bases respect linear order possi  priorities information solve conﬂicts bilistic logic policies order support possibilistic    examples prioritized coherence approaches se ditioning computation weights associated  lect consistent subbase possibilistic logic ap concluded formulas need track encode  proach  dubois et al  williams’ adjustment ap weights associated formulas obtained adding                                                    ijcai                                                    new variables previously exist ignored formally  ing works darwiche marquis  costemarquis                                       marquis  benferhat prade              deﬁnition  let Σ  ssk sbb set Σpo    main advantage approach resulting ex                       Σ                                                        preferred subbases wrt possibilistic policy  tra compilation cost low number            s−                                                        singleton  si smallest index st  additional variables needed compiling stratiﬁed knowl s                                                             si inconsistent Σ consistent Σpo Σ  edge bases linear order possibilistic policy  equal number strata belief base benferhat linear order policy keeps information  prade  compilation method proposed does stop ﬁrst level meets inconsistency  compile possibilistic bases linear order policy inconsistency encountered current stratum  approach needs add binary clauses dropped process moves stratum  based idea forgetting variables limits tar formally  compilation languages exploited deﬁnition  let Σ  ssk sbb set Σlo  does support possibilistic conditioning                                   Σ                                                        preferred subbases wrt linear order policy    remainder paper organized follows sec                                                                                          the singleton si wheresi deﬁned si  si  tion  introduces stratiﬁed belief bases correspond ∪ i−          ∅  ing inference relations wrt linear order possibilistic si sj consistent  logic policies deﬁne associate weights example  let Σssss  inferred conclusions notion possibilistic condition  ∨  ing brief background knowledge compilation  ¬a  section  compilation method case  ¬b ∨  linear order policy section  section  adapt  ∨  method compile possibilistic knowledge bases •  ∪                       ∪  ∪  show handle weighted possibilistic inference relation consistent accord                                                            ing possibilistic policy stop ﬁrst stratum  possibilistic conditioning section  provides com                            Σ        ∪      parative studies concludes paper                 meet inconsistency po                                                               ∨ ¬a                                                          •    stratiﬁed belief bases                                 linear order policy delete continue                                                            treatment strata ∪ ∪  consider ﬁnite propositional language denoted  sistent Σlo  ∪s ∪s  a∨b ¬a b∨d  denotes classical consequence relation greek letters Φ Ψ                                                        deﬁnition  let Σssk  sbb Ψ afor  representformulas  ⊥ denote constants true                                                        mula  false respectively    stratiﬁed belief base set formulae equipped • Ψ consequence Σ wrt possibilistic policy  total preorder formally                                denoted Σ po ΨiffΣpo Ψ                                                          • Ψ                   Σ  deﬁnition  stratiﬁed belief base sbb shortΣ    consequence wrt linear order policy                                                            denoted Σ lo ΨiffΣlo Ψ  ﬁnite sequence  skwheresi kisa  stratum containing propositional formulas having example  let consider stratiﬁed belief base Σ  priority level reliable formulas given example  ﬁrst inference relation  stratum sj ji                               instance Σ po second                                                                Σ   according coherencebased approaches inference example   lo  stratiﬁed belief base considered step pro easy lo goes po  cess consisting ﬁrst generating preferred consistent each propositional formula ΨifΣ po Ψ Σ lo Ψ  subbases Σ using classical inference  depending entailment principle used     key issue possibilistic logic compute                                                        certainty degree associated inferred formulas    policies selection subbases deﬁnition  let Σssk stratiﬁed belief base  sidered especially possibilistic policy dubois et al Ψ formula Ψ weighted consequence Σ   linear order policy nebel  inclusion degree denoted Σ Ψiiff  preference policy brewka  lexicographical ∪ ∪ si consistent  policy benferhat et al  focus ∪ ∪ si Ψ  possibilistic linear order policies        ji  ∪ ∪ sj Ψ    idea possibilistic logic policy start lastly possibilistic logic interested com  formulas having highest priority level propagate puting possibilistic conditioning  prioritized formulas possible maintaining deﬁnition  let consistent term Ψ conclu  consistency stop ﬁrst priority level meet sion conditioning Σ rank iff Σ ∪  ewe  inconsistency formulas level Ψiwheres new high important stratum                                                    ijcai                                                      possibilistic conditioning inference important concept  compiling stratiﬁed belief bases  possibilistic theory extent logical coun linear order policy  terpart possibilistic propagation algorithms possibilistic  networks                                             classical way compile sbb linear order resp                                                        possibilistic logic policy consists ﬁrst generating pre    following nebel  lang  deciding possi                                                      ferred consistent subbase respect policy step  bilistic inference Δolog ncomplete  needs                                                                                     comes solve Δ complete resp Δolog  log calls sat solver linear order                                                        complete problem compile resulting classical  expensive computational point view                                                      base target compilation language stress  deciding Δ complete means                                                       effort exploited handling possibilis  cided polynomial time using np oracles nebel                                                         tic logic policy approach appropriate  refer reader papadimitriou  details                                                        compute weighted possibilistic conclusions possibilistic  computational complexity                                                        conditioning                                                          method relies propositional encoding sbb    knowledge compilation                              adding new variables number equal                                                        number strata proceed compiling  key motivation knowledge compilation propositional encoding target compilation language  knowledge base modiﬁed generating polynomial time base corresponds  base used answer queries cadoli donini linear order policy possibilistic   survey idea knowledge compilation additional variables deleted ﬁnal result  split query answering phases                                                          propositional encoding stratiﬁed belief    • ﬁrst knowledge base preprocessed obtain  base      appropriate data structure phase called offline                                                        let Σssn   sbb ﬁrst step com      reasoning                                        pilation method consists encoding given base    • second phase called online reasoning classical propositional base denoted kΣ encoding      sists answering queries using data structure gener takes advantage recently proposed benferhat      ated during ﬁrst phase                       prade  handling extension possibilistic                                                        logic  target compilation language class formulas fact each stratum si introduce new propo  tractable clause deduction stated sitional variable ai intuitively ai means like  language permits achieving clausal deduction “the situation ai abnormal“ each formula Φij  polynomial time                                   stratum si correspond propositional formula    initially wellknown prime implicates language pi Φij ∨ ai read “Φij true situation  short target compilation language aiabnormal”  compilation methods focus recently darwiche paper Φij ∨ ai used encoding  marquis considered darwiche marquis  fact certainty degree priority rank Φij  target compilation languages languages ai use abnormal predicates used  special cases nnf  normal negation form language nonmonotonic formalisms mccarthy   obtained imposing properties nnf formula deﬁnition  let Σ  ssk sbb proposi  formula constructed literals using conjunction tional encoding associated Σ denoted kΣisthe  disjunction operators properties list propositional knowledge base deﬁned  decomposability determinism smoothness decision order      k                                                                  Σ              Φij ∨                                                               Φij ∈si                                                              note generally number strata sbb    resulting target compilation languages dnf low cost propositional encoding  dnnf ddnnf sddnnf fbdd obdd obdd             propose low  mods pi ip additionally compared terms                                                                                            Σ  spacial efﬁciency succinctness criteria example  let consider sbb given exam  terms set logical queries transformations ple  let aaa propositional variables  support polynomial time                           associated strata sss respectively using                                                        deﬁnition propositional knowledge base asso    exception pi dnnf succinct           Σ  target compilation languages fact known ciated  pi succinct dnnf unknown kΣ   ∨ ∨ ¬a ∨ ac∨ ¬b ∨  dnnf succinct pi sentence dnnf ∨ ∨ ab∨ ∨ ae∨  decomposable nnf nnf sentence satisfying  decomposability property each conjunction sen  conditioning  tence conjuncts share variables darwiche review section operation conditioning                                                  useful approach                                                    ijcai                                                    deﬁnition  conditioning propositional formula Ψ case Φij retained ai∨Φij replaced ⊥∨Φij  consistent term conjunction literalsγ denoted equivalent Φij   cdΨ γ formula obtained Ψ substituting ev let illustrate algorithm following ex  ery literal γ Ψ  consistent γby⊥ ample                                             example   let Σsss   example  instance                        ¬a ∨                                                            ¬           ¬  ∨¬      •                            Ψ¬   ∧¬  ∨  ∧                      conditioning formula           easy check      term γ  ¬a ∧ cdΨγ gives ∧¬b ∨                                                            Σ     ¬  ∨     ¬ ∨¬         ∧                                                 lo             • conditioning formula term  ∧    let aa three propositional variables associ      ¬b cdΨa∧¬b gives  ⊥∧  ∨ ⊥∧c             ated ss respectively                                                        kΣ   ¬a ∨b ∨aa∨a  ¬b ∨ac∨a  ¬b ∨¬d ∨a                                                                                           dnnf  following darwiche marquis  target let  dnnf let compute compΣ   weget                                                                  dnnf  compilation language considered darwiche mar   compΣ         dnnfkΣ¬b       ∧ ∧ ∨  quis  satisﬁes conditioning means given ∨ ∧ ∧ ∨ ∧ ¬d ∨  aformulaΨ  consistent term γ                                                          • ﬁrst iteration   struct polytime formula belongs equiv ←      ¬      ∧    ∧  ∧ ¬  ∨     alent cdΨγ                                            cd                                                                        • second iteration  implies  remark   following cdΨ γ γ lit                                                               ←             ∧  ∧ ¬  ∨     eral atom negated atom                            cd                                                                     • iteration     compiling linear based knowledge bases                ← cdk  ¬ab   ∧ ∧¬d                            Σ  given stratiﬁed belief base  deﬁne compilation easily check equivalent Σlo  respect given target compilation language                                                        proposition  algorithm  achieved polynomial time  shown following deﬁnition                                                                                             size compΣ  propositional base  deﬁnition  let Σ  ssk stratiﬁed belief base turned algorithm  belongs target compilation lan  kΣ propositional encoding using deﬁnition  let guage  target compilation language compilation Σ                                                        corresponding proof follows target  wrt denoted comp  compilation kΣ                         Σ                              compilation language satisﬁes conditioning dar  ckΣ                                                        wiche marquis  means cdk ai    propose following algorithm provides     ¬  achieved polynomial time                                                      cd                                       efﬁcient way generate Σlo using compΣ condi belongs addition ai clause deduction  tioning                                              test  ai achieved polynomial time                                                           Σlo belongs target compilation language    algorithm  computing Σlo                          inference stratiﬁed belief base Σ interpreted                                                                                   data compΣ                                         linear order policy falls Δ queries    result compilation Σlo                      cnf form    begin                                                 important note cost induced      ←                                                                                compΣ                                         computation compΣ  cost compi    ←                                    lation propositional base kΣ language cthe        ai ← cdk ai                   choice target compilation language determined         ← cdk  ¬ai                          concision dnnf interesting       end                                              languages case    return    end                                                    computing possibilistic conclusions                                                            possibilistic conditioning  proposition  propositional knowledge base returned  computing possibilistic inference  algorithm  equivalent Σlo given deﬁnition                                                         compiling possibilistic knowledge bases recently    proposition  shows equivalence knowledge base achieved benferhat prade  section  returned algorithm  Σlo let brieﬂy explain propose alternative approach offers ad  algorithm proceeds stratum stratum generates vantages respect existing ones related works  progressively compiled base wrt linear order policy section contrary approach proposed benferhat  test step  checks stratum si inconsis prade  approach does add binary clauses  tent previously accepted beliefs case approach ﬂexible supports tar  formulas stratum ignored replacing ai ∨Φij compilation languages lastly approach allows  ∨Φij  equivalent tautology computation possibilistic conditioning                                                    ijcai                                                      fact suggest deriving algorithm   check Σ Ψi using deﬁnition   algorithm  meet inconsistency Ψ consequence Σ degree using algorithm  ﬁrst time suppress current stratum responsible   inconsistency remaining strata      example   let Σsss                                                            ¬a ∨   ¬b    algorithm   computing Σpo                                                                    Σ                                                        let check possibilistic consequence    data compΣ                                         degree check Σ leta                           Σpo    result compilation                          three propositional variables associated respectively    begin                                               three strata knowledge base Σ  ¬ ∨      ←                                                                                                   compΣ                                         ∨     ∨   ∨   ¬ ∨  let          ←                                                                                                                                    dnnf                    ≤     ai                                            dnnf      ∧  ∨ ¬ ∧    ∧  ∧          ←        ¬                                         compΣ                              cd   ai                                       ∨  ∧   ∨ ¬ ∧    ∧ ¬ ∨  ∧           ←                                                                          end                                               • ﬁrst iteration  ← cdk ¬a ≡    ≤                                          a∧b∧a  ∧c∨¬c∧a  ∨¬a∧a ∧¬b∨b∧a        ←  cdk ai                                       ←          ←                                                           • second iteration  ← cdk ¬a        end                                                            ≡ a∧b∧a  ∧c  consequence ← true    return                                               stops loop deduce possibilistic    end                                                     consequence Σ degree                                                           given stratiﬁed belief base Σ compiled  proposition  propositional knowledge returned                              Σ                             compΣ  show exploit compila  algorithm  equivalent po given deﬁnition  tion effort order support corresponding possibilistic  belongs algorithm  runs polynomial time conditioning given observation polynomial time  example  let consider sbb Σ given exam substitute algorithm  line  ple  easily check Σpo  ¬a ∨     ”while  ai ≤ consequence  false”       dnnf  compΣ       ¬b ∧ ∧ ∨ ∨ ∧ ∧ ∨ ∧   ¬d ∨ second iteration meeting ”while  ¬e ∨ ai ≤ consequence   inconsistency process linear order false”  policy  b∧a∧¬d∨a  remaining clearly adapted algorithm runs polynomial time  strata ignored ← cdk ab∧a  belongs target compilation language  easily check equivalent Σpo         ¬a ∨ ai clause check captures possi                                                        bilistic conditioning    compiling weighted consequences       possibilistic conditioning                          related works conclusions                                                  simple adaptation exploit compΣ paper proposed method compiling strat  order decide weighted possibilistic inference relation iﬁed belief bases respect possibilistic linear  polynomial time shown following algorithm order policies cost proposed method low                                                        number new variables introduce equal    algorithm   computing weighted conclusions        number strata generally negligible com                  data compΣ acnfformulaΨ                           pared number formulas instance furthermore    result degree associated Ψ                  method qualiﬁed ﬂexible permits ex    begin                                               ploit efﬁciently existing propositional compilers                 ←  compΣ                                         addition repartitioning stratiﬁed belief base permut    consequence ← false                             ing strata priority levels efﬁciently    ←                                               recompilation cost change ranks     ai ≤ consequence  false   individual formulas unless attach variable                                                     mula        ←  cdk  ¬ai                                 proposed compilation possibilistic logic        Ψthen consequence ← true           knowledge bases support weighted conclusions pos          ←                                 sibilistic conditioning        end                                               method favorably compared work    consequence  true                            concerned compiling stratiﬁed belief bases note ﬁrst     thenΨ consequence Σ degree        contrary existing approaches method allows     Ψ consequence Σ                   compute weighted conclusion possibilistic conditioning    end                                                 compiled stratiﬁed belief base                                                        compilation cost let mention method proposed                                                    ijcai                                                    
