            gunsat greedy local search algorithm unsatisﬁability                        gilles audemard∗                               laurent simon           univ d’artois cril  cnrs fre         univ parissud lri  cnrs umr                        lens                        inriafuturs orsay                 audemardcrilunivartoisfr                         simonlrifr                          abstract                          formalism resolution proofs search space state                                                        oftheart complete sat solvers terribly efﬁcient prac      local search algorithms satisﬁability testing tice efﬁcient solver based resolution      best methods large number prob defeat stateoftheart resolutionbased solvers doing      lems despite tremendous progresses observed   propose make greedy walk resolution      complete search algorithms years search space each step local search algo      intrinsic limit does allow rithm try compute ”better” neighbour proof      address unsat problems years ago    proof differs previous ones      question challenged community     clauses added resolution      answer possible use local search algo removed ﬁnd neighbour approximate num      rithm unsat formulae propose ﬁrst  ber ﬁltered models proof achieved      approach addressing issue beat score given pairs literals depending frequen      best resolutionbased complete methods deﬁne  cies formula show experimental      landscape search approximating  investigation use higher reasoning mechanism based      number ﬁltered clauses resolution proof fur extended resolution robinson  unit propaga      thermore add highlevel reasoning mechanism  tion lookahead leberre  key make new      based extended resolution unit propaga    challenging approach possible resolutionbased      tion lookahead make new challenging  methods efﬁcient way solving quantiﬁed      approach possible new algorithm tends   boolean formulae qbf believe algorithm      ﬁrst step challenging prob ﬁrst step challenging problems build      lems obtaining short proofs unsat problems   real localsearch algorithm qbf obtain short proofs      build real localsearch algorithm qbf  unsat problems qbf ones                                                          paper organised follows start introducing    introduction                                       deﬁnitions notations section  discuss                                                        previous works local search unsat problems  years lot impressive progresses present new approach conclude provide  practical solving satisﬁability testing experiments  sat methods address typical npcomplete  problem divided categories complete ones  preliminaries deﬁnitions  usually based davis logemann loveland pro                                                               cedure davis et al  moskewicz et al  let          set boolean variablesaliteral                                                                              ¬x  prove formula satisﬁable incomplete solvers variable negation iaclause disjunction                                                                  ∨  ∨  called onesided solvers answer literals   ni aunit clause monoliteral                                                                                                 Σ  instance given property generally satisﬁable clause restricted single literal formula                                                                                  Σ  based local search perform junctive normal form cnf conjunction clauses                                                        Σc    ∧  ∧  stochastic walk search space selman et al         mthesat   decision problem deﬁned                                                                             Σ  hoos stutzle  methods good follows given formula cnf assignment                                                                    Σ         Σ  sults certain classes problems like random sat prob variables satisﬁed clauses                                                          Σ  lems leberre simon                         satisﬁed     selman et al  challenged local search                                                          local search sat problems  community quest efﬁcient local search algorithm                                                        local search algorithms sat problems use stochastic  unsatisﬁable formulae propose ﬁrst success                      Σ  ful approach called gunsat pushes local search walk total interpretations variables                                                        signed each step ﬂip try reduce number    ∗supported anr “planevo” project nojc    unsatisﬁable clauses certain conditions                                                    ijcai                                                     algorithm  general scheme local search sat solver val  shown simple generalisation res    data    Σ cnf formula                            olution rule called multiresolution allowed scaleup    result  sat model unknown resolution based solvers essentially compilation                                                        purpose resolutionbased solvers help mea    begin                                                        sure performances gunsat efﬁcient asolver       maxtries                                                        based resolution rule beat          choose random interpretation          maxflips                        extended resolution             model Σ return sat      known number necessary clauses              neighbouri                          exponential prove refutation general resolution proof          end                                           restrictions imposed order resolu       end                                              tions steps case known pigeon hole       return unknown                                  problem haken  urquhart problems urquhart    end                                                         random problems chv´atal sze                                                        mer´edi  notice prob                                                        lems need large clauses unbounded size resolu  total interpretation chosen neighbours cur              ⊥  rent differ literal value given tion proof producing  lot instances allowing  number steps restart jump large clauses generated essential  landscape escape phase recall algorithm  striking notice soon al                                                        lows introduction new variables during proof like  general scheme local search algorithms sat    lot improvements proposed literature lemmas theorem proving short proofs                                                                                   like tabu search use different heuristics ﬁnd problems exist tseitin  introduced principle                                                        extended resolution rule Σ formula applica  interpretations interested reader refer hoos                      Σ∧e  ⇔  ∨l   stutzle  detailed coverage methods tion rule allows consider   instead                                                        fresh variable appearing Σandl                                                                      Σ    resolution proofs                                literals  rule looks simple                                                        proof known stronger extended reso  resolution rule allows deduce new clause called lution despite simplicity theoretical interests  solvent help clauses plays central role practical applications extended resolution used mod  works based clausal representations boolean ern sat solvers works implicitly use restriction  formulae like preprocessing steps e´en biere  like symmetry breaking algorithm based introduction                                                        new variables work simon del val   deﬁnition  robinson  let ∨ ∨ ∨ viewed restriction rule nodes  ¬x  ∨ ∨ ∨ bm clauses graph representation formula viewed new  clause ∨ ∨ ∨ ∨ bm called propositional variables end prob  resolvent clauses performing resolution lem remains rule looks simple choose  variable note  ⊗ rule     pair literals extend    apply resolution rule times including  resolvent clauses derive new clause obtained clause  local search unsat problems  proved resolution                              discussion previous works present gunsat                                                        new local search algorithm unsat checking  deﬁnition  resolution proof robinson  let Σ  cnf formula resolution proof clause succes  previous work  sion clause  ccck  ck challenges proposed years ago selman et  ≤ following conditions holds          al  work address    • ∈ Σ                                             ﬁfth challenge ”design practical stochastic local search                                                      procedure proving unsatisﬁability”    •∃cmcn  ∈ miand   ni ci  cm ⊗ cn                                                        hybrid solvers    clause ⊥ proved resolution previous works incomplete algorithms  formula Σ unsatisﬁable resolution proof satisﬁability hybrid solvers  complete refutation restrictions general resolution ex methods use classical local search solver record  ist answer sat unsat questions like goods based resolvent general case  ordered resolution practice resolutionbased methods improve performance satisﬁable problems  solvers suitable knowledge compilation problem fang ruml  shen zhang   atics preprocessing prime implicates computation  new qbf solving relative fail  sat checking directional resolution dechter rish ure direct dpll extensions effort   famous restriction based ﬁnding new methods based resolution local  known work davis putnam  simon del search solver walkqsat gent et al                                                     ijcai                                                     algorithm  gunsat                                    let ci  ∨ ∨ lni clause formula Σfor                                                               ≥                              n−ni    data    Σ cnf formula                            st   clear clause ﬁlter    result  unsat derivation ⊥   potential models            known                               ﬁrst measure depth  approximation estimates    begin                                               number ﬁltered models considering clauses indepen                                                                                         n−ni       maxtries                           dently each clause length weights                                                              weight proof measured          maxflips                                                                                 Σ   wni             saturationΣ  returns unsat            clear ﬁltered models                return unsat                           independent measure gives inaccurate indica             Σ  maxsize                      tion quality current proof remains trying                removeoneclauseΣ                    produce short clauses possible             addoneclauseΣ                           depth  approximation ﬁx granularity             addextendedvariablesΣ                  literals maintaining estimation number ﬁl                                                                                                         simplifylookaheadΣ                    tered models each literal each literal wemaysum          end                                           weight clauses occurs considering                                                                         ≥          n−ni          replace Σ vital clauses           aclause  length   ﬁlter     models                                                                   ¬l        n−       end                                              contain    potential models sup       return unknown                                  pose ﬁltered models separately equally    end                                                 distributed literals clause strong                                                        sumption estimation based clause                                                                                          n−ni                                                        ci                     wni                                                          allows literal ﬁlter      ni  models  distinct phases ﬁrst complete algorithm based containing ¬l through reﬁnement depth  dpll qbf second use local search quickly clear occurs clauses ∧ ∧¬q  ﬁnd models incomplete solver prove va scoring scheme particularly inappropriate  lidity invalidity qbf formula way important locality common variables  prove                                             account  ranger                                                  approximation depth  does gran                                                        ularity pairs literals clause ci length  ranger prestwich lynce  local search     n−n                                                        ni         algorithm unsat problems looks similar      ﬁltered models supposed equally dis                                                        tributed nini −  pairs literals occurring  gunsat recent work arbitrary resolution               formed order generate large number shortest each pair   appearing credited weight                                                                   n−−ni                                                        wni                                      ll  possible clauses fast possible avoid combinatorial   nini−  score pair literal  explosion remove clauses deﬁned sum weights clauses noted  gunsat  powerful reasoning mechanism sll score sc clause sum scores  ﬁnest heuristic guide moves ranger simpler pairs literals contains remaining sec  performs moves second                  tions used indices depth                                                           deeper approximation higher cost main    skeleton local search algorithm           tain reﬁne measurement considering  solver gunsat large skeleton triplet literals explicit representation pos  classical local search algorithms intuitively algo sible triplets literals quickly unpracticable real  rithm remove add new clauses set clauses istic unsat benchmarks  Σtryingtoderive⊥ resolution rule prob  lem ensure algorithm able perform remark  clauses scoring given clause ci score  greedy moves search space fundamental sci   nini − wni ci nearly  add higher level reasoning mechanism ensure good prac ﬁlter models composed negation literals  tical results gunsat algorithm detailed later clause long kept proof  given algorithm                                  opposite sci   nini − wni                                                        little hope clause great importance    inside gunsat                                    current proof  estimation number ﬁltered clauses  given set clauses Σ built variables want ap greedy moves  proximate total number potential models scoring scheme pairs clauses  directly ﬁltered potential ones mea try improve total sum clauses scores Σ  sure based explicit information com algorithm look large clauses lot frequent  putational effort obtain polynomially bounded pairs occur completely opposite goal  need exactly count number instead trying improve measurement  models clearly harder conphard problem proof we’ll focus quadruplets pairs order  initially facing                              derive ⊥ need step proof ¬l                                                    ijcai                                                    Σ perform saturation unitclause prop subsumed clause Σ simply  agation each step moves later tautology pair score improved  case occurs ﬁnd literals pairs quadruplet iteratively tried  clauses ∨ ¬l ∨ ∨¬l ¬l ∨¬l gunsat fails pairs best quadruplet sec  derived Σ words we’ll try im ond quadruplet tried  prove scores pairs built vari addoneclause does  ables called quadruplets noted xx                                                        removing  useless clauses  want localise quadruplets pairs high score                                                        seen clause scoring preferred sim  deﬁne score sqxx quadruplet                                                        ple measurement clause length localise useless ones  sum squares scores pairs sqxx                                                     mechanism allows large clauses Σes  sll  s¬ll  sl ¬l  s¬l ¬l                                                        pecially ﬁlter large number  enhance score best scored quadru                                                        pairs essential vital clauses Σ  plets greedy                                                        ensure preserving unsatisﬁability vi  neighbourhood                                         tal clauses initial clauses clause previously  adding clause c ∈ Σ Σ Σ   c deﬁne subsumed vital clauses forced algorithm  neighbourhood deduction mechanism binary clauses step performed  restricted correct polynomially bounded removeoneclause  complete method reduce gunsat finding random start  single complete sat solver check Σ  ⊥and                                                        described gunsat skeleton random start general  add Σ                                                       iteration algorithm differ removing    chose use resolution mechanism noted                                                    res   clauses each step during random start initialisation  deﬁned Σ       iff  ⊗                         res                            clauses removed subsumed clause order  occur Σ rule simple                                                        ﬁll proof maxsize clauses  facing huge neighbourhood illustrate  let’s random ksat formula given ratio  reﬁnements                  ×   variables     clauses ﬁrst essential add three powerful mechanisms  each literal occurs average krn times krn                                                        gunsat  order make competitive resolution  clauses derived resolution                      nkr                        based reasoning systems ﬁrst essential reﬁnement  formula         potential clauses concerns subsumptions adding new clause   variables sat formula threshold                                                     perform forwardbackward subsumption detection zhang     potential moves rank random    moves huge neighbourhood lead blind  search unsatisﬁability hope beat ordered binary clause saturation  resolutionbased algorithms like dechter rish  power binary clause saturation exploited  simon del val                              success bacchus  preprocessing purposes                                                        each step walk binary clauses related  finding bests greedy moves                                                        pairs literals special treatment  explicit exploration neighbourhood impossible saturation each time new binary clause  practice know advance Σ resolutions set binary clauses  increase score bests quadruplets try formed saturate Σ order exploit  increase score pairs     power equivalency literal search performed clauses    let xx best scored quadruplet Σ increasing                                                        ∨¬l ¬l ∨l Σ occurrences  score pairs ll amounts adding                                                        replaced tagged new potential extended  new clause containing short clauses grant                                                 variable used search      higher score preferred performing binary clause saturation algo  score new clause taken account                                                        rithm ﬁnd new unary clauses literal  add short clause high score clause propagated formula unit propagation  probably considered useless iteration                                                        clauses containing deleted clauses containing ¬l  algorithm looking short clause shortened inconsistency step  lowest possible score ﬁlter new potential models returned main algorithm    looking new clause lweﬁrst  try localise pivot variable we’ll perform extended resolution  resolution rule pivot exists slp   algorithm tried increase score given  s¬p   choose clause cp containing pair literals manytimes success chose  clause c¬p containing ¬p ltoprevent adopt tricky solution really pays use extended res  new clause having high score try gen olution er artiﬁcially increase score pair  erate new clause clauses having lowest literals  scores restrictions possible extended rule ⇔ ∨ encoded three  produce new clause containing instance clauses ¬e∨l ∨l e∨¬l e∨¬l necessary                                                    ijcai                                                    addextendedvariable                                              basic      lh         er       lh  er                            step add fresh variable           tf    tf    tf    tf  adding three clauses Σ course ensured aim                                                                                                    pair literals appear extended aim           rule we’ll section  simple rule gives                                                                               aim                    good results practice                                                                                                                         jnh                      look ahead techniques                                                                                                                             xor                            patented st˚almarck method st˚almarck                                          gives good results practice structured benchmarks  uses powerful look ahead technique detect equivalen table  results structured instances gives  cies literals inconsistency uses centage solved instances  launches instance  reformulation initial formula based set triplets means time seconds averaged successful runs  ⇔ ⇔ ⇔ ⇒ formulae ini gives averaged total number ﬂips  tially written cnf power method par  tially captured unitpropogation lookahead lh leberre                     lh  er                                                                                tf                                                                              enhance power gunsat added lh tech                             niques pairs literals possible values pairs                                                                                                 iteratively propagated Σ searching implied                   unit propagations literal Σ set ⊥                                           Σ  ¬l                                               tries lh proved  unary clause                         ¬l added Σ                                                                 restarting                                            table  sat random instances  each category contains   gunsat fails derive ⊥ Σ maxflips   instances each instance solved  times  steps restart performed clauses binary ones  set vital clauses removed ensure gun  sat explore search space added dubois dequen  random instances outperform  random number cut ties quadruplets having gunsat want compare resolutionbased  scores given  each restart followed new ran solvers  dom generation quadruplets random numbers clauses compared  versions solver basic  containing extended variables deleted lookahead lh extended resolution  each restart including binary ones                  er lher    particularity local search algorithm em  phasised unit propagation binary clause sat  structured instances                               Σ  uration subsumption deletion evolve starts table  reports results obtained gunsat structured  restarts hopefully Σ evolve simpler problems report original dr performances  simpler formula                                      dechter rish   runs  ﬁn                                                        ished memory allocation error  instances    experimental evaluation                            solved aim  xor zres simon del                                                        val  able solve aimhalfaimbut  results obtained xeon ghz gb                                                        failedtosolveaim  jnh able solve  memory gunsat  prototype written java lot                                                        xor  instances ability handle large set  optimisations planned java api linkedlist data                                                        highly structured clauses  structure instance used greatly improved  addition current implementation use explicit repre clear proposed reﬁnements lookahead ex  sentation pairs costly operation tended resolution especially combination provide  planning manipulate topm best pairs literals realistic local search solver unsat problems  versions    weak points selected instances  random instances  restricted number clauses variables table  reports results random instances different  aim xor jnh furthermore like local search algo number variables   different ratio   rithms gunsat lot parameters tune   report results erlh  improved near future chose versions gunsat able solve   form  restarts ﬁx number ﬂips  times instances solver dr solve instances  initial number clauses                            zres solves instances  variables threshold    previously said purpose  seconds average prestwich lynce   compare gunsat stateoftheart sat solvers clear reports bad results random instances ranger  conﬂict learning solvers like zchaff moskewicz et hard examples resolution based algorithms  al  structured instances solvers like kcnfs gunsat lher showed promising results comparison                                                    ijcai                                                    
