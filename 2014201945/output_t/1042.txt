               general framework reasoning inconsistency                       subrahmanian                              leila amgoud            science dept umiacs                         irit  cnrs                    university maryland                        route narbonne                college park maryland                  toulouse cedex  france                        vscsumdedu                                amgoudiritfr                        abstract                            aims paper      numerous logics developed reason      propose uniﬁed framework reasoning      ing inconsistency differ logic consistency captures existing approaches      apply ii criteria used    special case provides easy basis comparison      draw inferences paper propose gen    apply framework using logic monotonic      eral framework reasoning inconsistency      nonmonotonic including ones inconsistency      wide variety logics including ones  management studied temporal      inconsistency resolution methods    probabilistic logics      studied various temporal epistemic log      ics start tarski scott’s axiomatiza   allow endusers bring domain knowledge      tion logics drop monotonicity require  bear allowing voice opinion works      ments believe strong ai      manager decided right      logic deﬁne concept option    words account pref      options sets formulas closed erences enduser      consistent according notion consequence    propose efﬁcient algorithms computing pre      consistency show deﬁning      ferred options      appropriate preference relation options                                                          building dana scott’s celebrated      capture existing works brewka’s                                                        tions abstract logic start simple example      subtheories provide algorithms com                                                        illustrate conﬂicts end resolved      pute preferred options                                                        different ways human beings important al                                                        low endusers bring knowledge bear    introduction                                       resolves conﬂicts  inconsistency management intensely studied vari example  salary example suppose university payroll  ous parts ai slightly disguised form poole  says john’s salary university  pinkas  rescher manor  gardenfors personnel database says addition   example default logics reiter  use syn axiom says exactly salary                                                                                                       base  tax distinguish strict facts default rules simple way model theory denoted sal   identify different extensions default logic poten  tial ways “making sense” seemingly conﬂicting infor  mation likewise inheritance networks touretzkey  salaryjohn ←                           deﬁne extensions based analyzing paths network salaryjohn ←                            using notions speciﬁcity resolve conﬂicts argu         s  ←   salaryx ∧ salaryx s  mentation frameworks dung  study different ways                                               argument proposition base                                                        sal    obviously inconsistent suppose   deﬁnitely  determine arguments defeat ar                                                        known true bank manager considering john  guments effort decide reasonably                                                        loan choose number determine maximal  cluded excellent works provide priori                                                        loan john qualiﬁes national tax agency  ﬂict resolution mechanism user uses based                                                        use ﬁgure send john letter asking  papers committed semantics                                                        underpaid taxes  implemented little say matter  users querying kbs unlikely bank manager tax ofﬁcer making  experts classical logic let default logics attempt ﬁnd truth far   argumentation methods                               making different decisions based facts                                                    ijcai                                                       rest paper proceeds follows section   applying classical entailment choice pre  recall scott’s notion logic scott  ferred subbases  section  deﬁne general framework reasoning rest paper assume  inconsistency scott logic section  shows arbitrary ﬁxed monotonic nonmonotonic logic  adapt general framework particular case cn  consistent bases section  show existing works basic idea framework construct  retrieved general framework section  presents options deﬁne preference relation  examples general framework applied options preferred options intended support  logics temporal probabilistic logics conclusions drawn inconsistent knowledge  section  develop algorithms compute optimal options base intuitively option set formulas  based various types monotonicity assumptions consistent closed wrt consequence logic cn  objective function note lack space                                                                                              clude proofs  version paper contain deﬁnition  options option set elements                                                         proofs                                                                                                      •ois consistent    scott’s abstract consequence operation               •ois closed  cno  dana scott scott  deﬁnes abstract logic consist let optl set options built  set members called wellformed formulas cn  consequence operator cn cn function                                                      les illustrate concept  powerset lto intuitively cnx returns set  formulas logical consequences according example  let propositional language let k⊆  logic question satisﬁes following axioms knowledge base  → ¬b following                                                        options instance built  cna  expansion  ⊆ cnx                                                         cn¬b  cna  →   cna →  idempotence cncnx    cnx                       cna ¬b  cna  monotonicity ⊆  ⇒ cnx  ⊆ cny                 framework reasoning inconsistency three  coherence cn∅                                  components set options built                                                        considered logic preference relation options  easy known monotonic logics entailment mechanism  propositional logic shoenﬁeld  ﬁrst order logic                                                                                          cn  shoenﬁeld  modal logic temporal logic fuzzy logic deﬁnition  general framework let ﬁxed  probabilistic logic bacchus  viewed logic general framework reasoning inconsistency                                                                  cn          optl   ∼    special case scott’s notion abstract logic non logic triple         monotonic logics introduced ai satisfy mono • optl set options built cn                                                     tonicity axiom marek et al marek et al  • ⊆optl×optl       partial total preorder  deﬁned notion nonmonotone rule systems  reﬂexive transitive  extend scott’s ideas nonmonotonic logics dropping    optl  monotonicity axiom remainder paper •∼      →  optl entailment mechanism  drop monotonicity axiom cn ﬁxed second important concept general frame  deﬁne notion consistency follows             work preference relation   options                                                                                 deﬁnition  consistency let ⊆l consistent       means option  preferred                                                            logic cn iff cnx                            relation captures idea options                                                        better instance user              says consistent iff set consequences decided preferred options satisfy  set formed formulas note coherence requirements imposed developer conﬂict                         cn       ∅  requirement characterizing forces consis management instance example  user  tent  reasonable pretty reasonable logic chooses certain options options salary  saying intuitively consistent   minimal salary maximal based needs                                                        approaches handling inconsistency maximal    general framework handling                   consistent subsets inconsistent knowledge base     inconsistency                                      important role consider kb                                                          ∧ → →¬c three maximal  section proposes general framework handling                                                        sistent subsets mcs  → →¬c  consistency logic reasoning inconsistent represent kb default theory Δw  knowledge bases process follows three steps                      ∧ a→c b→¬c                                                          ∅    ∧  a→c  b→¬c     constructing consistent subbases                 three extensions corresponding three maximal    selecting subbases preferred ones consistent subsets argue mcs      called preferred subbases                        extension corresponding weak                                                     ijcai                                                     included weakening formula knowledge base section shows associate set  ∧ instead dropping altogether            preferred options inconsistent knowledge base                                                        deﬁnition  say option handles iff sub  component framework mechanism                                                                                       set ⊆ksuch   cnk   let base function  selecting inferences drawn knowledge                                                                                       returns option subbase  baseo  base framework set inferences                                                            option consistent requirement  great importance ensures framework delivers intuitively option handles iff closure                                                                                           safe conclusions                                     subset clearly subset consistent    set inferences generally computed dif consistent virtue option                                                                    ferent preferred options let o set preferred  cnk                 options  oi ∈ optl  oj ∈ optl oj                                                     example  handling inconsistent default logic theories       different entailment mechanisms deﬁned let consider default logic base logic suppose  selecting inferences drawn examples consider default theory Δw                                                                     mechanisms                                         researchers default logic                 optl   ∼                   o                ¬p  deﬁnition  let              framework      consider theory inconsistent exten                               ψ                set preferred options let element  sion valid options Δ ∅ ∅                                                universal criterion l∼ψ iff ψ ∈oi ∀oi ∈o   ψ   Δ ∅ user specify preference relation      called universal consequence              prefers Δ shows framework applied                                                       default logic  argumentative criterion l∼ψ iff ∃oi ∈o                                 ψ ∈oi oj ∈o    ¬ψ ∈oj ψ called deﬁnition  suppose optl   ∼  general frame      argumentative consequence                work reasoning inconsistency logic cn  show set inferences using uni suppose inconsistent knowledge base optimal  versal criterion option language option member o∈optl  entailment mechanism included •ohandles  preferred option                                       •                      o  ∈ optl                              optl   ∼                            option          handles  proposition  let              framework built       o   monotonic logic cn    •        ψ ψ                                   deﬁnition says reasoning      set      universal consequence                                      optl                                    consistent knowledge base  look set      option                                                                                                                     optimal options handle     •∀oi  ∈o    ψ ψ universal conseq ⊆ oi                                                        example   let return example  suppose use                     ψ ψ  proof sketch let       universal consequence                                       deﬁnition element belongs options course assume options closed    o              c⊆o     ∀o  ∈o     consequently                            usual ﬁrst order consequence let say three            ∈o                                   each       option consistent options preferred options language  subset oi consistent similarly                                                         •                 sco          ⊆oi cnc ⊆oi  ∀oi ∈o  consequently      suppose score   option sum  cnc ⊆caccording deﬁnition universal    multiset saljohns ∈oi case score  consequences closed consequently   option                                                   say oi  oj   scoi ≤                                                            scoj case option handles  similarly show set argumentative conse                                                            corresponds bank manager’s viewpoint  quences option valid entailment mecha  nism                                                   • hand suppose say oi  oj iff                                                            scoi ≥ scoj case optimal option  proposition  let  optl   ∼   framework built                                                            handles — corresponds view  monotonic logic cn set ψ ψ argu                                                            rule saying salary wrong  mentative consequence option optl                                                            database john paid  following criterion valid entailment projects simultaneously salary charged  mechanism set consequences returned project  inconsistent option                                                          • consider case change scoring            l∼ψ     ∃o  ∈o           ψ ∈o  example         iff                       method say scoimins  saljohns ∈                                                            oi   case scok sco    optimal options handle inconsistency              scok let suppose prefer  preceding section developed concepts ence relation says oi  oj iff scoi ≥ scoj  option preferred option logic cnhow optimal option corresponds  deﬁned way independent exactly tax agency’s viewpoint                                                    ijcai                                                                                                                                         general framework optimally han •∀si ∈ inclk ∃o∈o      cnsi  dling inconsistency powerful  used handle                                                             •∀oi  ∈o    ∃ ∈ inclk  oi  cns  inconsistencies different ways based prefer  ence relation options deﬁned                 new applications framework    link existing approaches                      section show through following examples                                                        abstract framework used reasoning  kinds approaches proposed literature                                                        inconsistency using temporal logic probabilis  solving problem inconsistency ﬁrst                                                        tic logic  sists revising knowledge base restoring consis  tency second approach accepts inconsistency copes example  consider temporal logic theory    ﬁrst approach initiated rescher manor operator denotes “next time instant” operator   proposes formulas knowledge ﬁrst rule says true time true time  base order consistent subbases standard temporal logic model theory inconsis  original base plausible conclusions obtained tent  applying classical entailment subbases  follows consider case propositional bases                                                                               →b                     knowledge base ﬂat formulas weighted                                                                               maximal consistent subbases built                                                                    let knowledge base inconsistent             ¬b                               sn set maximal set inclusion consis                                                          choose consider just three options   tent subbases show subbases correspond cn    cn    cn    preferred options framework pref                                        sup  erence relation   options monotonic let ﬁrst pose associate numeric score each  deﬁne notion monotonicity                    formula describing weight source provided                                                        formula let say scores  respectively  deﬁnition  monotonic relation relation said weight option oi sum scores  monotonic iff ⊆lifx ⊆                 ∩o                                                ⊆                   formulas          iff score greater    said antimonotonic iff               equal score oj case best option  proposition  let  optl   ∼   framework    monotonic let inconsistent knowledge                                                       example   consider probabilistic logic bacchus   base set preferredoptimal options                                                                                      theory   consisting three formulas             •∀si ∃o∈o       cnsi                  suppose consider op                  •∀oi  ∈o    ∃         oi  cns                   tions assign single nonempty probability interval                                                                                                                                                   atoms     case prioritized knowledge bases brewka pro                                                        let diffaaabsl   −  labsu   − let  posed brewka  deﬁnition preferred sub                                                        say score option  given  bases basic idea bases                                                                  ka∈t diffa  suppose say option oi  oj iff  important information account possible                                                        scoreoi ≤ scoreoj intuitively means  text knowledge base supposed stratiﬁed                                                        preferring options change lower upper bounds   kn  ∪∪kn formulas                                                        little possible case   preferred  strata equally preferred formulas strata ki                                                        option  preferred formulas kj ij                                                                                                      deﬁnition  let  ∪ ∪kn knowledge base    reader tempted think given    ∪ ∪                                      inconsistent optimal option exist              preferred subbase              cn∅  ∀j ∪ ∪ sj maximal setinclusion worst case option                     ∪ ∪k                          correct require cn∅  consistent subbase                             optl  inclk   denotes set preferred subbases         show order capture results ap  proach needs deﬁne appropriate preference rela  algorithms compute optimal options  tion options                                     handle inconsistency  deﬁnition  let inconsistent knowledge base section develop procedures ﬁnd optimal options  ok  set options handle let ∈ logic cn varying set assumptions  ok    iff baseo ∈ inclk baseo ∈  ﬁrst deﬁne means formula compatible  inclk                                              given set formulas  proposition  let  optl   ∼   framework deﬁnition  given consistent set ⊆land formula    deﬁned deﬁnition  let inconsis ∈l say compatible iff ∪f   tent knowledge base o set preferredoptimal consistent use notation compx denote set  options                                        formulas compatible                                                    ijcai                                                       develop iterative ﬁxpoint computational proce procedure cooantil cn optcall   dure ﬁnd optimal option                                todo    cn∅                                                                  sol                         cn                                            deﬁnition  suppose       logic subset         todo  ∅    preference relation options deﬁne         pick ∈ todo  st  ∃y ∈ todo st  operator Γk associated maps sets options cny   cnx  sets options follows                                       todo   todo−x                                                                        ∈ optl  Γ xx       ∪cny    ∪f    ∈ compy  ∩k∧                                                                                              sol  sol  −y  ∈ sol                 ∈                                        ∪x                                                                    todo  todo   ∪    words Γkx works follows                            cnx    ∪f            ∈                                                                        compx  ∩k    • picks set expand                                                                                                        endwhile    • ﬁnds ∈ compy  ∩k                       return preferred member sol    • closes ∪f  adds answer      Γkx                                         intuitively procedure cooanti generates ⊆inclusion                                                                                                 optl    clearly operator Γk monotone inclusion — minimal closed consistent subsets  repeated application Γk yields ﬁxpoint ing procedure chooses best ones                                                                            cn∅     optl  deﬁned follows                            starts checking                                                               returned antimonotonicity                                                          ﬁnds formulas compatible each                                   Γk     ∅                           mula ﬁnds logical consequences ﬁnds                Γi  Γi    ∪ Γ  Γi                 option handles adds sol deletes                       k                                 sol                                                   ω                                   option     worse according                  Γk        Γk                         procedure continued                                                        pruning occurs step  algorithm anti                                                                         proposition  suppose cn logic subset monotonicity exploited algorithm pro                                            ceeds greedy fashion choosing best                                                        best sets todo expand step       Γ     monotonic                                    reader think ﬁrst solution       ω    Γk ﬁxpoint γk                            procedure optimal unfortunately                  ω                                     case antimonotonicity merely states    set Γk consistent                                                        ⊆o   →o    possible  hold    note ﬁxpoint Γk set ⊆o   ω                                                           antimonotonic case  Γk starts iteration generate ⊆minimal options deciding  set set containing set fortunately                                      ω                 best  make concrete statements Γk                                                        proposition  suppose cn logic optl   ∼   proposition  suppose cn logic optl   ∼                                                       general framework reasoning inconsistency  general framework handling inconsistency set wffs suppose   antimonotonic  set wffs optimal option handles iff                                                                                                    coo      o∈optl   ∩ Γω                                      optimal option handle                                                     antil cn optl                                ω                                                   return    ∈ optl ∩ Γk                                                            cooantil cn optl   returns  result suggests immediate algorithm ﬁnd optimal option handles  optimal option regardless preference  lation monotonic                             just case antimonotonic   preference rela                                                        tions improve coonaive algorithm      procedure coonaivel cn optl                         Γω                                           monotonic coomon  algorithm assumes                                                                              ∩ optl                             monotonicity  works similar manner         return o∈x o ∈  cooanti  starts eliminates members      o o                                  cnk  instead starting iteration set                                                        coomon  algorithm uses notion deletion candi    reason inefﬁciency coonaive date  makes assumptions preference relation  preference relation known example deﬁnition  suppose cn logic set  monotone antimonotone better wffs set ⊆kis deletion candidate iff  cooanti  shows    assumed                                                           cnk−y    ⊂kand  antimonotone better coonaive                                                           cnk−y    consistent                                                    ijcai                                                     
