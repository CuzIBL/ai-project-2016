                              continuous time particle filtering                 brenda ng                         avi pfeffer                   richard dearden           harvard university                harvard university            university birmingham         cambridge ma                cambridge ma              birmingham tt uk        bmngeecsharvardedu              avieecsharvardedu          rwdeardencsbhamacuk                        abstract                          case discrete approaches                                                        largely proven unhelpful washington et al       present continuoustime particle ﬁlter     reason use hybrid model state representation      ctpf – extension discretetime particle particle ﬁltering state estimation      ﬁlter monitoring continuoustime dynamic sys   probabilistic hybrid automata phas hofbaur      tems methods apply hybrid systems    williams  commonly used representing hybrid      taining discrete continuous variables systems diagnosis state estimation representa      dynamics discrete state governed tions similar expressive power pha model      markov jump process observations dis consists set discrete modes set contin      crete process intermittent irregular uous variables each mode set differential equations      discrete process observed ctpf sam  describes continuous behavior mode transitions      ples trajectory underlying markov jump   modes stochastic transition matrix represents      process trajectory used estimate probability state s time given      continuous variables using dynam  state time transition probabilities      ics determined discrete state trajectory depend values continuous variables      use unscented kalmanbucy ﬁlter han      problem applying pha model sim      dle nonlinearities continuous time present ilar representations systems assump      results showing ctpf stable tion transition matrix applied ﬁxed time intervals      formance discretetime particle ﬁltering sufﬁcient evolution im      discretetime algorithm allowed plies discrete transition occur interval      date times ctpf present   doesn’t matter interval transi      method online learning markov jump   tion occurs assumptions lead problems      process model governs discrete states   make model unwieldy force single                                                        transition matrix represent effects multiple discrete                                                        transitions second reduce efﬁciency forcing model    introduction                                       steps small assumptions reason  work described directly motivated problems able continuous time model avoids assumptions  encountered creating state estimation allowing state updates performed new ob   experimental mars rover nasa ames research cen  servation arrives signiﬁcant event occurs  ter willeke dearden  robotic sys approach build continuoustime model  tems contains numerous sensors report section  differen  formance sensors produce telemetry different rates tial equation model governing continuous behav  frequently rates vary time result using ior discrete mode discrete state  ﬁxed timestep state estimator example kalman ﬁlter transitions represented continuoustime markov jump  extremely difﬁcult paper continuous process set transition probabilities  time state estimation algorithm based particle ﬁltering each discrete mode distribution long  handle telemetry arriving different rates changes remain mode transitioning  behavior observations said use particle ﬁltering track sys  update model behavior improve perfor tem state section  efﬁciency make possi  mance detect gradual degradation ble track large systems use raoblackwellized particle    state estimation typically using discrete di ﬁlters doucet et al discrete mode  agnosis algorithms livingstone williams nayak sampled just standard particle ﬁlter continu   recently using hybrid representations ous state tracked using unscented kalmanbucy ﬁlter  discrete approach suited domains work addresses key challenge mode  occasional transitions relatively stable states changes rover systems observ  sensor readings tend reliable unfortunately able directly commanded changes moving fromstopped driving observable occurrence                         stuck                                                                            terrain left wheel                                                                                        left bogey angle  faults mode transitions triggered environ                   left middle wheel    ment continuous state produce telemetry di                       stuck left rocker angle  rectly inferred effects     solar energy level left wheel  tinuous behavior algorithm developed            sunny     stuck                                                                      rainy  speed      rover roll angle  address difﬁculties continuoustime particle ﬁlter                   stuck                                                                      ground stickiness  described section                                                      right wheel    major advantage continuoustime approach                         stuck right rocker angle                                                                                 right middle wheel  allows resourcebounded computation                             right bogey angle                                                                            rockiness right wheel    cost single update higher discrete                    stuck  update kalmanbucy ﬁlter equations com  putation need performed new observations ar figure  rover ctbn note ctbn contain cycles  rive computation limited observations  ignored sufﬁcient computation available update value let zi denote value zt interval τiτi  estimate discrete approaches update during time span τiτi variables xt follow  formed each time step telemetry arrived nonlinear dynamics given    section  discuss parameters                 continuoustime markov jump process learned ob                                                                                       dt     zi                   serving section  applies approach sim  ulated rover model presented section              observations yt given                                                                         yt  hzi xt utvt                 continuoustime hybridstate processes                                                        wt ∼n  Φt vt ∼n Ψt respective  continuoustime hybridstate process consists interact process measurement noise ut control input  ing discretestate continuousstate random variables work assume variables zt    discretestate variables zt evolve according dynam observed random discrete points time  ics described continuoustime markov jump processes hand yt observed frequently noisy                                            markov jump process random variable  measurements true continuous state xt  parametrized time ∈  ∞ zt starts initial state  remains state random time  continuoustime rover model  fore makes transition different state time  stays particular state exponentially distributed testbed use continuoustime rover model  markovian property process                rover employs rockerbogey suspension    mathematically markov jump process zt character wheels each side wheels attached  ized intensity matrix                          bogey pivots center center                                                      bogey attached rocker attached main                       −q                            −q                      rover chassis rear wheels motion bogey                                                                                   cause rocker pivot differential axle                                                    mechanism centers rover chassis left                                                        right sets wheels rocker angles bogey                                                        angles infer rover orientation wheel            zt∆t  jzt   qij  lim                    i  qi    qij   heights relative rover chassis       ∆t→         ∆t                                               ji       interested reasoning rover wheel dy                                                        namics effects weather terrain ground condi  qij transition rate deﬁnes probability tions faulty wheel behavior model consists   time unit makes transition state state variables  transient variables groups                                               state  total transition rate state  state variables  model background conditions                                              time process stays state dis  directly model rover background variables                                              tributed according exponential distribution  model environmental factors weather terrain ground  qi exp−qit process leaves state enters                                 qij                    rockiness ground stickiness rover variables  state probability pij    oth                                 qij                  model solar energy level available rover rover  erwise paper assume process stationary speed wheel heights wheel stuck conditions  intensity matrix times   rover roll angle ctbn structure shown figure     recent work nodelman  et al  introduced   model comprises  binary ternary discrete vari  continuoustime bayesian networks ctbns way fac ables  continuous variables observable dis  torize markov jump processes discretevalued variables crete variables sunny rainy errain rockiness  work extends inference hybridstate processes observation variables sparse time points cor    instantiation zt corresponds unique set equa responds situations rover takes measurements  tions govern dynamics continuous variables surroundings plan navigation manage power  xt let ττ denote times zt changes sumption wheel stuck states observed areinferred observations continuous wheel variables increases number particles required achieve decent  wheel stuck condition frequently induced accuracy increases making pf expensive  rover travels high speed ground rocky lution tracking complex highdimensional systems    rover dynamics adapted kinematic anal raoblackwellization doucet et al technique  ysis hacot  wheels receive input improves pf analytically marginalizing  proportional height perturbation induced ter variables method especially applicable  rain change middle wheel height proportional main structure rover model factorized  difference middle wheel height                                                                           ps     taken relative rover body experiences roll tor              t−  sional rotation uneven terrain illustrate system’s pxtzt xt−pztst−pst−yt−dst−   nonlinearity equation middle wheel height                                                    raoblackwellized particle filtering rbpf       zm   κ cosΘ  sinθb  − sinθb  β       used sample lowerdimensional discrete     dt                                                                                       distribution continuous distribution subsequently                           Θt roll angle θt bogey angle computed using kalman ﬁlter  β constant parameters physical rover model  change wheel deﬁned similar manner  unscented kalmanbucy ﬁlter                                       κ  each wheel proportionality constant dependent kalman ﬁlter grewal andrews  efﬁcient  speed wheel stuck speed recursive method ﬁnds leastsquare estimate  affected availability solar energy ground sur state discretetime linear stochastic process gaus  face characteristics stickiness rockiness sian noise kalmanbucy ﬁlter continuoustime    noisy measurements continuous variables counterpart discretetime kalman ﬁlter uses differ  model bogey rocker angles observed fre                                                        ential equation generate estimate xˆt continuous  quently discrete observations bogey angle                                                        state generates estimate yˆt observa  determined middle wheel heights                                                        tion generates pt covariance state estimate  rocker angle depends middle wheel heights                                                        error xt − xˆt rt covariance yt − yˆt update  bogey angle                                                        pt uses differential equation given estimates                                                        probability observation yt given normal dis    preliminaries                                      tribution mean yˆt covariance rt  let hybrid state represented st  zt xt kalmanbucy ﬁlter assumes linear transition model  denote yt history observations time  observation model handle nonlinear models  time aim track probability pstyt adopt approach similar discretetime unscented  given state true state conditioned kalman ﬁlter ukf wan van der merwe   sequence past observations yt probability distribu extend kalmanbucy ﬁlter applying unscented  tion referred belief state recursively transformation julier uhlman  state esti  estimated given previous belief state pst−yt− mation unscented kalmanbucy ﬁlter ukbisa  current observation yt                           continuoustime ﬁlter allows nonlinear models ukb                                 pstyt−             used rbpf approximation kalmanbucy ﬁl             pstytpytst                     ter approximation introduces bias does provide                               pytyt−                                                       theoretical guarantee variance reduced rbpf  pstyt−    pstst−pst−yt−dst−  computation integral leads intractabil  continuoustime particle ﬁlter  ity smallest conditional linear gaussian models  result resort approximate inference methods continuoustime particle ﬁlter ctpf perform  compute updated belief state                  update each time discrete observation received                                                        discretestate process observed updates triggered    particle ﬁltering                                asynchronous request update technically  particle ﬁltering pf doucet et al approximates  treated way observing discretestate process  discrete sum particles samples possible states vacuous observation new observation received  drawn distribution                         time tn previous observation time tn−an                                                        update means generating particles state tn using                           n                                                   particles generated tn− assume observations                pstyt ≈     δs                                                                 discretestate processes sparse intermittent                                                    make assumption observations come regular inter  δ· denotes dirac delta function difﬁ vals observations coincide discrete tran  cult sample pstyt directly importance sampling sitions let ζn observation time tn observe    used particles drawn tractable ζn entirety ztn orζn assignment val    proposal distribution each particle weighted ac ues subset variables ztn orζn vacuous  count bias variance increases state space assigning values variables case                                                             say value agrees observation ζn assigns  let number particles                                                               value variables assigned ζn        let  number discrete observations                                                            high level ctpf works follows   dynamics propagation                   dating n− sample trajectory      markov jump process time interval n−tn               th                                                             let ζn observation  results set time points τ  tn−ττk  tn                                                             let tn observed time ζn  changes value let zi denote value                                                             simulate markov jump process  interval τiτi perform raoblackwellization                                                             let τ  tn−  obtain updates continuous variables through                              th                                                            let value particle time tn−  sequence intervals starting ττ ending                                                            τi tn  τk−τk propagating estimate mean variance                                                                        γ        pdf ftqz   exp−qz  continuous variables using ukb time pe    sample                                                                                 τi  γtn  riod τiτi continuous dynamics governed                                                               let τi  τi  γ  value propagate continuous variables                                       compute probability trajectory used    sample using intensity matrix  particle weight repeat process obtain set                                                                       τ        zm   weighted particles time tn resample  let  let                                                                    ←   new set unweighted particles                                                                                           disagrees ζn reject particle    behavior markov jump process governing                                                                  let  characterized intensity matrix process gen  propagate continuous variables  erating trajectory markov jump process time       xˆ                                                          let tn− tn− mean covariance   n− follows each particle time n− let                           mth                                             τ                     continuous variables particle time n−  value particle set  n−                wm   use intensity matrix sample time ex  let                                                            −   ponential distribution fzi tqzi exp−qzi obtain                                                                 let δδ−  length time γ changes value τ iγtnwe               times                                                                 continuous observations τiτi  sample zi intensity matrix continue loop                                                              let δ  τi δ  τi  setting τi  τi  γ know  zi tn                                 ζ                             −   value agrees evidence particle kept           ˆ          ˆ                                                                 compute xδj  pδj  yδj rδj  rejected                                                               ˆ                                                                    using ukb beginning xδj pδj     jump process proceed prop              dynamics determined zi  agate continuous variables through time points                         ˆ                                                                    ←    ×nyδj   yδj rδj   ττk observations     ˆm        ˆ                                                            let     xtn ptn  tinuous variables interval τiτi propagate                                                          resampling  τi τi need consider observations                                                                                       wm ← pw  times let δ τi δ τi δδ−  normalize    wm  time points continuous observations  select new particles probability                                                                      received loop through intervals δ jδj turn   xˆ      each interval propagate mean variance  continuous variables forward using ukb obtain                                                                 figure  continuoustime particle ﬁlter  probability observation time δ given                                         ˆ  predictive density pyδj yδδj yδj  yδj rδj         ˆ                                                  learning  yδj rδj estimate covariance    δj ukb multiply probability realworld applications know exact  observations time points δj τiτi parametrization zt instead prior distri  τi obtain probability sequence obser bution intensity matrices qz need ﬁne tune  vations weight particle     estimate qz observations zt                                                                                 repeat procedure each particles case model random variable                                                                                     φq    time tn− each particle consists candidate markov jump attribute probability distribution space                                                                                  process each discrete variable zt mean admissible intensity matrices  observations                                                                                      φq    covariance continuous variables markov exponentially distributed model gamma dis  jump process candidates far ground truth tribution gamma exponential conjugates                                                                                   lead poor tracking continuous variables assume the elements distributed according                                                                     incorrect parametrization continuousstate dynamics qij ∼ Γ αij                   qz                                                                βi     prior distribution given  particles associated illﬁt markov jump processes                                                                             m   low weights resampled                                  αij − −qij βi                                                                    φqz  ∝       qij                    pseudocode ctpf shown figure                             ji                                                        figure  shows experiment comparing ctpf                                              ζ    arrival discretestate observation nwe discretetime particle ﬁlter dtpf results shown av                                simulate markov jump process time interval eraged  runs ﬁrst graph shows performance                                          n−     compute likelihood ctpf  particles  updates comparing es                       m                              timate continuous state variables produced                              nij −qij ri               lqz        qij                   ctpf actual value variable ctpf                       ji                         dates discrete variables infrequent intervals dtpf                                                        forms update equallyspaced intervals ﬁxed preset  nij number transitions state time granularity algorithms perform continuous infer                                             process  time spent state during process  ence ukb ukf intermediate time points cor  update qzdistribution              responding continuous variables observed                        m                               plotted points estimates intermediate                               α  −                                 ij  ij   −qij riβi  points graph ctpf consistently able   ψqzlqφq            qij                               ji                        track variable through different mode changes                                                     second graph dtpf shows dtpf’s performance using  arrival discretestate observation number particles number updates                                                       ctpf dtpf worse tracking  sample qij ∼ Γ      nij  αij  instantiation                 riβi                                  does particularly poorly time  time  ctpf  qz reﬂects updated distribution         performs dtpf able perform updates precisely    learning procedure integrated algorithm  needed  follows sample qz ∼ φqz right line  dtpf considerably faster ctpf does  perform qzdistribution update prescribed equa require solving differential equations exacerbated  tions  line  pseudocode     slow matlab implementation kalmanbucy ﬁlter    procedure like magic compared welloptimized implementation kalman  using statistics generated simulating qz ﬁlter expect difference lessen efﬁcient  obtain updated estimate qz reason works implementation ctpf nonetheless ran experiments  qzs previous set particles allowed dtpf running time ctpf  chance accepted set particles ﬁrst allowed dtpf use particles ctpf  trajectory disagrees discrete observation ζ maintaining number updates results  rejected second trajectories weighted dtpf  particles  updates shown dtpf  probability continuous observations graph figure  number updates  weighted particles resampled trajectory sufﬁcient dtpf track variables increasing  new intensity matrix agrees observations number particles does particularly help al  likely kept way set intensity lowed dtpf update frequently ctpf use  matrices kept inﬂuenced observations number particles results  particles  discrete continuous                          updates shown fourth graph labeled    learning approaches explored nodel dtpf dtpf results show signiﬁcant improvement  man et al  parameter learning ctbns performance dtpf dtpf does  bladt sørensen  statistical inference dis form ctpf continuous variables os  cretely observed markov jump processes ap cillating rapidly furthermore variance  proaches ofﬂine learning approaches sequence estimates dtpf higher produced ctpf  discretetime observations assumed known priori figure  shows results learning matrix  learning process approach integrates online learn small model results quite promising ﬁrst  ing particle ﬁltering framework graph compares estimation error achieved ctpf  advantage continuous observations eliminating poor learning matrix ctpf using true ma  candidates qz advantage allows relatively quick trix sets ctpf experiments used  particles  convergence neighborhood true value error ctpf learning comes close                                                        ctpf learning  time steps second                                                                                              experimental results                               graph shows distance learned matrix                                                        true matrix time computed sum element  evaluate performance ctpf algorithm sim wise differences matrices graph shows  ulated small model rover model small model learned matrix converging true matrix  consists discrete ternary variable continuous state lastly tested ctpf algorithm main applica  variables continuous observation variables depend tion continuoustime rover model despite nonlin  ing state discretevalued process continuous earity model ctpf able track wheel heights  behavior linear polynomial sinusoidal relatively  particles results ctpf  low dimensionality small model makes feasible ference averaged  runs presented figure   compare discretetime particle ﬁlter evalu graph rover wheel tracking error mainly  ate performance learning procedure        incorrect estimation wheel stuck variable
