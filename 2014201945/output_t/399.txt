    contract algorithms robots rays unifying scheduling problems               daniel bernstein                       lev finkelstein                     shlomo zilberstein         dept science            science department              dept science         university massachusetts                   technion—iit                    university massachusetts             amherst ma                        haifa  israel                   amherst ma              berncsumassedu                      levcstechnionacil                 shlomocsumass                               abstract                               contract algorithms anytime algorithms re•                                                                 quire deadline input prior start execution        study apparently different formally           contract algorithms assumptions re•       similar scheduling problems problem in•       sults produced given deadline contrast        volves contract algorithms trade run       familiar interruptible algorithms queried        time solution quality long       point during execution flexible inter       available run time known advance prob•         ruptible algorithms contract algorithms typically use simpler        lem schedule contract algorithms run par•     data structures making easier implement main•       allel processors condition inter•      tain example al game playing programs based        ruption occur time interruption      heuristic search programs allowed deliberation        solution number problems         time usually known advance used set internal        requested schedules compared terms          parameters example planning algorithms per•       acceleration ratio worstcase measure      form statespace abstraction algorithms run        efficiency provide schedule prove op       time controlled setting abstraction level        timality particular class schedules       start execution        second problem involves multiple robots searching           problem stated follows given        goal multiple rays search strate•        instances optimization problem contract        gics compared terms timecompetitive ra•        algorithm problem mprocessor ma•       tio ratio total search time time       chine run algorithm interruption oc•       robot traverse directly       cur time solution requested        goal demonstrate search strategies       problem instances given constraints want        contract schedules formally equivalent addi•      good general strategy scheduling runs algorithm        tion class schedules derive formula     processors        relating acceleration ratio schedule                                                                    case problem instance processor        timecompetitive ratio corresponding search                                                                  russell zilberstein  suggested iteratively doubling        strategy                                                                  contract lengths schedule interruption                                                                  time contract completed exists                                                                  length factor acceleration    introduction                                                                  ratio schedule worstcase measure efficiency   paper demonstrate connection prob•   zilberstein et al  showed schedule achieve   lems initially unrelated involves comput• acceleration ratio   ing solutions multiple problems condition   generalization multiple problem instances   solution problems requested    considered zilberstein et al  generaliza•  time challenges type arise design intelligent tion scheduling contracts parallel processors bernstein   user interfaces information prefetching systems medi•    et al  optimal acceleration ratios derived   cal diagnosis systems second problem involves multiple    cases general multiprocessor multiinstance   robots searching unknown environment goal prob•      case previously studied paper pro•  lems nature arise robotics space exploration   vide schedule case prove schedule   following paragraphs problems    optimal restricted interesting class   contribution                         schedules optimality proof nontrivial extension     problem concerns anytime algorithms horvitz      previous proofs contains lemma generalization    dean boddy  russell zilberstein     monotone convergence principle   produce solutions different qualities depending      work closely related horvitzs continual   available computation time specifically focus     computation framework horvitz  framework       scheduling                                                                                                            computation performed limited knowledge    deadline desired result assump•   tions underlying frameworks different con•   tinual computation framework limited knowledge comes    form probability distributions contrast use    acceleration ratio does require probabilistic information    furthermore contract algorithms parallel processing    considered continual computation      contract scheduling results directly applied    robot search problem problem robots search    goal located intersecting rays aim    minimize timecompetitive ratio worst   case ratio total time spent searching time    single robot traverse directly goal optimal ratio figure  scheduling contract algorithm three processors    onerobot case derived previously baezayates    create twoproblem multiinterruptible algorithm    etal       address general multirobot case search    strategies formally equivalent contract schedules    class schedules derive formula relating accel•  eration ratio schedule timecompetitive ratio    corresponding search strategy optimal timecompetitive    ratio derived corollary      work draw precise connection   contract scheduling multirobot search   provide nontrivial results multirobot case kao   al  studied multirobot problem used dif•   ferent performance measure minimized distance  competitive ratio worstcase ratio total   distance traveled during search distance   origin goal      scheduling contract algorithm    problem description   anytime algorithm applied optimization   problem instance time produces solution   realvalued quality function qa called             note depends omit subscript   performance profile general does know al•      dependence schedule implicit through•  gorithms performance profile concept     paper ease notation schedule   performance profile useful reasoning anytime     index ordering correspond completion time or•  algorithms assume performance profile       dering furthermore contracts complete   anytime algorithm problem instance defined   exact time formal statement condi•        nondecreasing function oft                    tions equivalent      distinctions different types anytime algo•    schedule   rithms arise different assumptions param•    ensures time solution available   eters known prior execution     each problem instance   known advance algorithm called contract         compare schedules use worstcase metric called   known advance algorithm called interrupt acceleration ratio acceleration ratio tells   ible case unknown say   faster constructed algorithm need run order   algorithm multiinterruptible acts like mul• ensure quality query time problem   tiple interruptible algorithms running parallel           known dedicated processor assigned producing      suppose contract algorithm run   result intuitively measures schedule handles   machine processors unknown deadline     uncertainty problem instance interruption   solution problem instances requested   time   setup requires multiinterruptible algorithm    formally defining acceleration ratio state   create scheduling contracts way progress technical details problem present   continually each problem instance inter•     definitions view contract   ruption query result returned longest completes time solution available returned   completed contract dedicated desired problem instance interruption time second assume                                                                                                             scheduling   precise definition acceleration ratio         section provide schedule optimal   restricted interesting class schedules   state precise terms properties delineate show equality holds assume contrary derive   class schedules consideration schedules having  contradiction fact defined   three properties called cyclic schedules   smallest constant enforcing inequality     property states problem instances arc com•      pleted roundrobin manner sensible     show   desired problem instance unknown   prove nonproblemroundrobin schedule   equally good problemroundrobin schedule   property  problemroundrobin mod                  each leftcontinuous piece                                                             wise constant pieces delimited time points                                                                 leftcontinuous piecewise linear     property states lengths contracts                                                                 increasing local maxima occur   each problem instance increase time given                                                                 points gk times play role supre  performance profiles nondecrcasing                                                                 mum   beneficial use schedule doesnt satisfy                                                                   finally   property property   prove difficulty lies having satisfy   problemroundrobin property mentioned   like able remove useless contracts schedule   way guaranteeing     follows problemroundrobin lengthincreasing   resulting schedule problemroundrobin      properties fact contracts finish                                                                 exact time    property  lengthincreasing                                                                   conclude section define minimal accelera•                                                                         tion ratio processors  problems     final property states processors return results   roundrobin manner property does play   lower bound derivation used drawing connection   robot search problem introduce point infimum taken set cyclic schedules   ease exposition                                       following sections provide tight bounds                                                                 ratio   property  processorroundrobin mod                                                           exponential schedule     prove lemma allows cast acceleration    simple approach scheduling contract algorithms   ratio simpler terms considering cyclic    contract lengths increase exponentially consider   schedules proof following facts arc established schedule   acceleration ratio stated reference perfor•  mance profiles interruption times need   considered completion times interruption   easily verified cyclic schedule follow•  result returned contract index exactly ing theorem gives expression schedules accelera•  index current contract                           tion ratio       scheduling                                                                                                          theorem  acceleration ratio exponential sched•  ule         things note ratio just de•  rived number processors approaches infinity   tends intuitive adding processors   arbitrarily close omniscient algorithm num•  ber problems approaches infinity ratio tends infinity   finally ratio depends ratio problems pro•  cessors absolute numbers     turn showing cyclic schedule   achieve smaller ratio      lower bound   define function represent sum lengths   contracts finishing later contract finishes       derive inequality involving acceleration   ratio    lemma  cyclic schedules                                                                                                             scheduling                                                               figure  search problem three robots rays                                                                   speed search goal unknown location                                                                 rays figure  search ends soon                                                                 robots finds goal                                                                 robots cover rays finding good search strategy                                                                 nontrivial level search problem                                                                 different contract scheduling problem                                                                 provide precise description search                                                                 problem show contract scheduling results                                                                 applied                                                                    search infinite sequence search extents return                                                                 trips departing origin formally search strategy                                                                 triple                                                                    robot executing search extent                                                                  ray search extent takes place                                                                 length search extent adding con•                                                                ditions contract scheduling case exact                                                                 correspondence schedules search strategies                                                                 cyclic search strategy defined way cyclic                                                                 schedule                                                                    natural metric efficiency search strategy                                                                 timecompetitive ratio worstcase ratio total                                                                 time spent searching time required single robot                                                                 traverse directly goal assume goal                                                                 considered discovered robot actually moves                                                                 assume location goal                                                                 search extent rays                                                                 means each ray consider locations                                                                     formally defining timecompetitive ratio need                                                                 introduce new function explain use defini•  combining inequality theorem  desired                                                                 tion let define index search ex•  result                                                                  tent goes past point ray means goal    multirobot search rays                                  located point ray during search ex•                                                                tent total search time through extent   results previous section directly ap•              factor results search extents going   plied formally similar problem involving multiple robots rays search ends soon   searching goal problem described follows    goal extent does completion   initially robots stand intersection rays subtract leads   robots moving continuous fashion      following formal definition timecompetitive ratio       scheduling                                                                                                          
