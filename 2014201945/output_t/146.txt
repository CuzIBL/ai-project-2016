                       amalgams constraint satisfaction problems                    andrei bulatov eugeny skvortsov       oxford university computing laboratory ural state university ekaterinburg russia                     oxford uk skvortsovdcru            andreibulatovcomlaboxacuk                            abstract                          remains uninvestigated present paper fo•                                                         cuses class decomposition methods       standard practical techniques solving     cases restrict form al•      constraint satisfaction problems use various de•   lowed constraints specifying constraint language       composition methods represent problem    set allowed constraints constraint specified       combination smaller ones study gen•       relation constraint language just set relations       eral method decomposing constraint satisfaction set values natural ways decompose       problems constraint represented  restricted csp represent constraint       disjunction simpler constraints disjunction simpler constraints possibly       defined possibly smaller sets values smaller sets values say constraint language       problem amalgam decomposed                                                          amalgam constraint dis•      way particular cases construc                                                         junction constraint constraint       tion considered cohen et                                                           case components       al including amalgams problems                                                            main research direction study amalgams       disjoint sets values amalgams inde•                                                         course developing efficient algorithms solving corre•      pendent problems paper concentrate                                                          sponding constraint satisfaction problem       constraint classes determined relational clones                                                          shall complexity csp arising amalgam       study amalgams classes general                                                          determined automatically complexity com•      case arbitrary finite sets values com•                                                         ponents research problem deal       pletely characterise amalgams form solv•                                                         tractability problem conditions problem       able polynomial time provide efficient algo•                                                         arising amalgam tractable problem called       rithms                                                          tractable solved polynomial time                                                          tackle algorithmic problem design efficient algorithms                                                          tractable amalgams    introduction                                                            naturally expected algorithms amalgams tend   constraint satisfaction problem csp aim use algorithms components especially ones   assignment set variables subject specified con• known unfortunately general connection be•  straints csp provides generic approach various com• tween constraint languages amalgam ex•  binatorial problems frequently appearing artificial intelli• pressed usual constraint techniques strongly depends   gence science including propositional sat• properties particular constraint languages solu•  isfiability problem variables assigned tions research problems expected nontrivial   boolean values graphtheoretical problems scheduling prob• amalgams introduced cohen et al    lems temporal spatial reasoning database theory used icohen et                                             amalgams considered simplest case     general csp npcomplete montanari  how• sets values languages disjoint case   time complexity practical problems amalgam corresponding problem trivially re•  considerably decreased representing problem com• ducible problems components solves   bination smaller problems decomposition methods algorithmic problem tractability problem   intensively studied implemented ex• amalgam gives rise tractable problem   isting constraint solvers deals hyper components certain properties interaction con•  graph associated problem instance gottlob straint languages yield reduction amalgam   et al   dechter pearl  freuder  components cohen et al  later cohen et   date highly developed possibility decompo• al properties socalled independence   sition constraints cohen et al   constraint languages identified number       constraints                                                                                              previously unknown tractable constraint languages    represented amalgams simple studied in­   dependent constraint languages                               columns matrices represent tuples relations      shown jeavons tractabil                                                                 qa qb quasiorder    ity constraint satisfaction problem arising con­   straint language implies tractability problem example  cohen et ab let set    relational clone generated language rea­ integers set congruences form     sonable strategy concentrate relational clones mod treated unary relations chinese remainder    arbitrary constraint languages paper solve   theorem implies tractable amalgam con­   tractability algorithmic problems amalgams re­ sists expressions form  mod ra     lational clones completely characterise tractable amal­   mod results cohen et al tractable    gams provide efficient algorithms case char­ example means able recognised    acterisation criteria stated terms properties polynomial time consistency    components amalgam second tractability                                                                                mod    mod     certain constraint language element set values                                                                                 mod         mod     language reflects interaction components                                    characterisation reducing algorithms                 mod     use schaefers dichotomy theorem boolean constraints      concerned following problems    schaefer       paper heavily use algebraic tech­     problem  tractability problem csp    nique csp developed jeavons jeavons et   tractable                                                            problem  algorithmic problem polynomial time                                                                  algorithm tractable csp      preliminaries                                               fact properties amalgam strongly depend nei­    basic definitions                                         ther properties original constraint languages                                                                  way interact example  contains re­   let finite set set ntuples elements                                                                                                          lations arity amalgam    denoted  subset  called nary relation                                                              restrict class constraint languages    set finitary relations called constraint                                                                  studied    language    definition  let constraint language set        relational clones    cspr combinatorial decision problem        problem cspt sets   stance triple  set vari­  variables possible values subject certain constraints   ables set constraints pairs form elements constraints said      list variables length mc called  implicit arise interaction constraints specified   constraint scope rncary relation ccdled   problem jeavons   constraint relation question exists  implicit constraint relations make use   solution mapping ψ — ψs €  natural correspondence relations predicates                                                  nary relation set nary predicate pe                                                                  true tuple usually   example  instance graph qcolorability con­                                                                 distinguish relation corresponding predicate   sists graph question vertices                                                                  freely use terminology existential order formula   labelled colours adjacent vertices                                                                                                        said primitive   assigned different colours                                                                  positive pp quantifierfree  conjunction      problem corresponds                                                                 atomic formulas   element set colours   disequality relation                                 definition  relation implicit relation constraint                                                                  language set expressed ppformula   constraint language said tractable npcomplete  involving relations equality relation   problem cspr tractable npcomplete                constraint language said relational clone      introduce central notion paper           contains implicit constraint relations   definition  let ta tb constraint languages sets       relational clone implicit constraint relations   respectively amalgam ta tb defined     called relational clone generated   constraint language                                   example  intersection relations arity                cartesian product expressible ppformulas                        arity   example  let  acdb  bcd ta    qa tb  qb qaqb partial orders                                                                                                              constraints notion relational clone considerably simplifies   theorem  schaefer schaefer  constraint lan•  analysis constraint satisfaction problems view    guage element set tractable pol   following result links complexity constraint lan• contains operations listed proposition other•  guage relational clone generates                   wise npcomplete   theorem  jeavons let constraint lan•  guage finite set finite cspt           tractable amalgams   polynomial time reducible cspt                                                                  section complete solution problems    result motivates restricting problems  class amalgams relational clones section   relational clones                                             ab finite sets relational   example  continuation reconsider constraint lan•        clones respectively reduce problems    guage example  results cohen et al        case   prove npcompleteness results   implies tractable larger amal•              case concentrate tractable cases present   gam includes constraints form mod mv           solving algorithm cases    mod members                                                                   result    invariance properties constraints                       assume contain relations arity   advantage considering relational clones     contains constant oper•  admit concise description terms algebraic                                                                  ation tractable proposition    invariance properties poschel kaluznin  jeavons                                                                    case completely investigated    mary operation  set preserves nary                                                                  cohen et al   relation invariant   polymor  phism                                         proposition cohen et al      tuple belongs csp polynomial time reducible cspra   given set operations set relations                                                                  csprb tractable   invariant operation denoted inv   conversely set relations set operations ra  rb tractable   preserving relation denoted pol ev•      assume nonempty   ery relational clone represented form inv   certain set operations poschel kaluznin     proposition  jeavons et al  jeavons hl    view theorem  complexity finite     unary polymorphism constraint language   constraint language depends polymorphisms      need operations particular types rise  mial time equivalent cspt   tractable problem classes                                                                  denote restriction unary operation    definition  let finite set operation   called                                                         set following statement straightforward                                                                  proposition  unary polymorphism                                                                  polymorphisms respectively                                                                                             polynomial time equivalent        • majority operation ternary fxxy       amalgam tractable poly•                                                                 morphism      • affine                                                                 complete         — operations abelian group          restrict case   proposition  jeavons et al    con•     let case need notation termi•  straint language finite set pol contains op•    nology   eration following types constant semilattice  definition  relational clone   affine majority tractable                         monolithic ifcon  complexity constraint languages elemcnt set   tains unary relation   completely characterised schaefer  outstand•   let denote relational clone generated set   ing result known schaefers dichotomy theorem                                                                                            obviously   making use proposition  algebraic version schae                                                                                                                                            defined analogously   fers theorem derived jeavons et al         note earlier papers jeavons jeavons et al specify length tuple  be•   term ac operation used                          cause clear context       constraints                                                                                                               following definition introduce auxiliary re•   lational clone element set  ab de•   scribes interaction components amalgam    annary relation                                        define cor•  responding predicate true   variable called   distinguished     definition  metaclone defined set     split problem   relations expressible through ppformula form                                                                  transform problem amalgam interac•                                                                 tion components transparent   conjunction predicates      • • •ym z• • • zk distinguished variables      metaclone defined similar way   lemma  metaclones relational clones   position state main result paper   theorem  let       monolithic tractable   tractable         monolithic ra  rb   tractable tractable   hard thatthere•  fore theorem  tractable   tractable converse inclusion follows lemma    proved straightforward calculation                   polynomial time reducible   rb finally sections  show reduce     lemma  ra monolithic poly•  nomial time reducible   proof let ra monolithic set proof   claims   claim   unary polymor•  phismsuch      let  list unary polymorphisms   ra   sup•  pose ra monolithic ra    polymorphism hx xn   hb         say                                                       ji         lemma  equivalent   operation polymor•  phism ra poschel kaluznin  ha   contradiction   claim  ra invariant constant operation     sincefor                implies              choosing element   continuing process   eventually obtain operation fx                                                                   solving split problem   required constant   operation   claim  implies nonempty   claim  operation aub   polymorphism                                                                                                             constraints constraints                                                                                                           
