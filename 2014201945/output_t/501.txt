          coupling csp decomposition methods diagnosis algorithms                                             treestructured systems                            markus stumptner franz wotawa                    university south australia technische universitat graz               advanced computing research centre institute software technology st             mawson lakes sa adelaide australia  graz inffeldgasse austria                     mstcsunisaeduau wotawaisttugrazat                             abstract                                 combination aided fact subar                                                                eas tend use constraint satisfaction problems csps        decomposition methods used convert general        representation choice diagnosis computation        constraint satisfaction problems equivalent      work fattah dechter  stumptner wotawa        treestructured problem solved ef•       mauss tatar  focuses relational com•       fectively recently diagnosis algorithms tree      bination different constraint relations prob•       structured systems introduced         lem reformulation work views csps cyclic hyper       prerequisites coupling algorithms        graphs broken tree structures        outcome decomposition methods              csp comprises set variables do•       analyzed limiting diagnostic ap•                                                                mains set constraints constraint ci tuple        plicability paper generalize tree        scope         set tuples        algorithm show use hypertree decom•                                                                                                             values variables si assume functions tpl        position outcomes input algorithm com•      scope constraints return set tuples        pute diagnoses general diagnosis problem                                                                 scope respectively each constraint ci restricts possible                                                                 values variables respect values vari•   introduction                                                ables scopefor example digital circuit                                                                 figure  represented following constraints   development effective algorithms diagnosing large   complex systems remains key issues model  based reasoning nonetheless apart various additional   optimizations control strategies kleer    main architectures consistencybased diagnosis sys•  tems tms kleer williams  hitting sets   computation reiter  remained remarkably sta•  ble late years num•  ber algorithms published exploited advantageous   structural properties systems diagnosed sig•  nificant computational speedups fattah dechter    stumptner wotawa   enabling fast diagno•  sis large treestructured systems     recognized early combination tree  oriented algorithms principle combined   second class algorithms aiming decomposition   cyclic problems equivalent treestructured problems  solution csp assignment values vari•  faster solution algorithms brought bear fat• ables satisfy given constraints values   tah dechter darwiche  direction  elements variables domain variable assignment   profits recent new results relating different decom•  la       li    isa   position algorithms gottlob et al  analyzing solution csp  la      performance gottlob et al   paper joins        constraint   strands tying link recent work prob•    satisfied   lem decomposition tree algorithm stumptner        standard approach computing solutions csps   wotawa                                                 backtracking algorithms worst case expo•                                                                nential number variables specific      work partially supported austrian science fund   fwf project grants pnf inf           note constraints arc components tabular      authors listed alphabetical order                  representation equality constraint connections                                                                                                                diagnosis                                                               techniques restrict examination hyper•                                                                 tree decomposition note result decomposition                                                                  method hypertree                                                                    gottlob et al  hypertree decomposition char•                                                                 acterized follows hypertree hypergraph triple                                                                                             rooted tree vertices                                                                 edges labeling functions associate                                                                  each vertex set variables                                                                   set constraints edgesh define                                                                 subtreeof asand                                                                  denotes subtree rooted                                                                 denote root hypertree roott                                                                     based definitions hypertree decompo•                                                                 sition hypergraph defined hypertree hd —                                                                           — tv satisfies following                                                                 conditions                                                                       each edge edgesh exists                                                                      varh          figure  hypergraph representing constraints         each variable                                                                      induces connected subtree     class csps solution computed polynomial time     each   class comprises csps acyclic corre•  sponding hypergraph hypergraph csp eas•          each   ily constructed mapping variables csp ver•  tices constraint scopes hyperedges csp     say edgesh strongly covered   acyclic hypergraph solved effectively backtrack   hd exists vertex varh   free manner traversing graph leafs    hypertree decomposition hd hyper•  root computing possible value tuples secondly    graph complete decomposition edge ff   traversing graph root leafs selecting  strongly covered hd note possible   tuple node solution hypergraph correspond• make incomplete decomposition complete adding new   ing fig  cyclic figure                        vertices decomposition gottlob et al gave      rest paper recapitulate decomposition    algorithm computing complete hypertree decomposi•  methods present version tree fits meth•     tions   ods show interaction decomposition tree        note unlike decomposition methods bi  present extension algorithm used   connected component decomposition hinge decomposi•  extended domains presented mauss tatar      tion general unique hypertree decomposition                                                                 given csp figure  shows possible hypertree de•   decomposition methods                                       compositions hypergraph depicted figure    different decomposition methods pub•  lished recently hypertree decomposition method       diagnosis tree   gottlob et al structurebased de•  composition methods make compute treestructured sys•  tems general csps elimination cycles      self contained briefly recapitulate tree algo•  csp cycle eliminated applying relational al• rithm stumptner wotawa  introduced tree   gebra join operation constraints cycle algorithm extension tree algorithm al•  blindly joining constraints cycle result expo• gorithms work treestructured constraint systems op•  nential costs computing tuples joined constraint posed tree requires constraints mathe•  key property different decomposition methods  matical functions tree imposes limitations con•  different techniques use select constraints straints tree uses following auxiliary functions asso•  joined gottlob et al  compared different decompo•  ciated constraints constr denotes tuples con•  sition methods respect width maximum straint val denotes tuples remaining application   number constraints joined hypertree  tree diags denotes diagnoses correspond   decomposition superior respect width hy• given tuple accordingly csp used di•  pertree decomposition seen generalization  agnosis purpose represent tuples each                                                                 constraint diagnoses correspond each tu•                                                                ple example small circuit figure  rep•                                                                resented following csp       diagnosis                                                                                                                                                                               figure  alternate hypertree decompositions figure                                                                     algorithm tree hd diagsize                                                                  computes diagnoses prespecified size given                                                                  treestructured diagnosis                                                                  input decomposition hd edges root vertex                                                                  prespecified diagnosis size diagsize                                                                  output diagnoses each value tuple          tuples form tables in•  tended match tuples explicitly given   table note constraint represents connection   assumed correct   returns set diagnosis      original description tree algorithm                                                                    tree algorithm called using root hy•  based underlying assumption leaf vertices                                                                  pertree result decomposition argument   tree correspond diagnosis component as•                                                                 execution computed diagnoses diay   sumption impact description algorithm                                                                  column tuples associated root   empirical results constraints given                                                                    tree algorithm correctly computes diagnoses   algorithm satisfy requirement diagnoses                                                                  given size following requirements arc fulfilled   size number faulty components larger specified   returned way remove         constraint used tree vertices   diagnoses set tuples requirement did        induced subtree variable connected   constitute hindrance stumptner wotawa       theorem  correctness tree algorithm correctly   did deal csps resulting decomposition        computes diagnoses prespecified size   explicitly generalize tree interact decomposition                                                                    proof proof induction size tree   algorithms present modified version removes                                                                 base step each leaf tree lines   requirement                                                                       tree executed lines tu•     following operations used tree semijoin           ples contradict given observations diag•       constraints cartesian product combining          noses larger specified size removed tuples   sets diagnoses                                       corresponding diagnoses removed                       cardinality restriction  remov•     steps prevent tree computing diagno•  ing diagnoses set diagnoses size greater     sis diagnoses prespecified size   given value                                             computed leafs                                                                                                                 diagnosis hypothesis assume tree correctly computes di•           algorithm diags function indexed        agnoses trees size smaller                corresponding vertex hypertree correspond•                                                                ing constraint function stands relational join   induction step prove tree correctly com•                                                                  relational projection diagnoses combined        putes diagnoses trees size steps                                                                 constraint fully captured given vertex hyper•       reduce number diagnoses tuples con•                                                                tree considered constraint        tradict observations removed diagnoses                                                                 fully captured hypertree vertex        larger prespecified values removed tu•                                                                information lost procedure        ples corresponding diagnosis set        removed influence result    example join constraints lead        step  tree algorithm called recursively be•  following constraint  tuples re•       cause induction hypothesis algorithm returns taining constants course         correct diagnoses each tuple remains prove        combination tuples tuple cur•       rent node correctly tuple joins        line  considered diagnosis        combined diagnosis child vertices line         process lead correct result        tree correctly computes diagnoses step             using arguments show   tree allows computing diagnoses providing   diagnoses each vertex hypertree computed   omit actual proof     theorem  completeness tree algorithm com•  putes diagnoses prespecified size     remaining issue determine conditions   decomposition method satisfy order used   tree examine computation join   relation tree vertices comprise   constraint      decomposition joining constraints   example hypertree decomposition result   figure order apply tree         example join operation cartesian prod•  compute tuples constraints occur   uct resulting relation course large   vertex tuples computed   during computation diagnoses using tree tu•  joining constraints second computing diagnoses   ples generally eliminated given obser•  diags each tuple joined constraint combining    vations prespecificd maximum diagnosis size   diagnoses associated corresponding tuples    illustrate assume set obser•  original constraints following algorithm computes    vations arc   join relation constraint hypertree vertex     searching single diagnoses diagsize —  us•                                                                ing decomposition figure tree called                                                                 vertex constraint  executing lines   algorithm joinrelation                                                                                                                                   including semijoin results removal tu•  computes join hypertree vertex                                                                 ples fit operations constraint    input hypertree vertex                                                                                                                                                        given   output coiistr diags function vertex                                                                      tree recursively called vertex                                                                 resulting following relation substantially                                                                 smaller computed join relation vertex                                                                 ail entries original tables replaced                                                                   avoiding duplicated entries ta•                                                                ble recursively tree leads                                                                 computation following relation vertex second                                                                 table       diagnosis                                                                                                                                                                            resulting hypertree decomposition cyclic                                                                  exists variable used subtrees                                                                  parent case process computes                                                                  solution view subtrees independent problems                                                                  tree fail compute correct out•                                                                 come conditions hypertree decomposition                                                                  relaxed affecting result condition                                                                   obeyed means nodes contain variables                                                                  constrained affect efficiency algo•                                                                 rithm node relations include cartesian product                                                                  values variables correctness                                                                  condition  obeyed means variable                                                                  contained                                                                  constraint associated relational terms                                                                  projected away means subtree going                                                                  restrictive execution leading excess tuples                                                                  decomposition required complete                                                                  constraints contain exist unprojected form      step tree continues computation line        vertex combining diagnoses      conditions true hypertree decomposition    removing tuples diagnoses larger diagsize    gottlob et ai biconnected components freuder    following relation                        hinge decomposition gyssens et al  tree                                                                  clustering dechter pearl                                                                      following algorithm summarizes combined use                                                                  tree decomposition method compute diag•                                                                 noses csp form described section  given                                                                  csp using decomposition method fulfills                                                                  properties theorem                                                                    apply decomposition compute                                                                        hypertree tv corresponding hypergraph                                                                   joinrelationf end                                                                   treeroott                                                                   return diagsrooft        diagnosis single diagnosis      precompilation performance overall algorithm    example                                                  decomposition algorithm examined gottlob                                                                  et al  required costs joining con•    putting                                     straints using joinrelation algorithm diagnosis time                                                                  running time tree performance scalability    order make use tree general csps      tree studied stumptner wotawa      apply decomposition method apply algorithm     note tree run time depends size rela•   resulting acyclic problem section summarize tions stored vertices resulting hypertree    requirements placed decomposition method          size depends number constraints                                                                  joined turn corresponds width de•   theorem  tree computes consistent diagnoses                                                                  composed using decomposition method   given possibly cyclic csp vd applied                                                                  provides smaller width leads hypertrees tree    decomposition hdofvdc produced de•                                                                 performs better    composition method following properties      decomposition result hypertree hd    extension intensional relations        complete                                                                  stumptner wotawa  mentioned pos•     vertices use given variable form                                                                  sibility use extensional relations constraint        connected subtree hypertree hd                                                                  specifications tree tree algorithm com•     proof sketch consider each condition turn      puted functions equations infinite domains do•  discussed previous section decomposition method    mains require different interpretation operators   produce complete decomposition constraint  used joining relations associated nodes   strongly covered prerequisite cor• tree conceptually changed   rect working join algorithm concerning condition     show definition tree algorithm fits   assume condition satisfied  requirements show adopting notation   does induce connected                            used basic computational operations aggrega•  subtree implies subtree tion paradigm described mauss tatar                                                                                                                  diagnosis 
