                                       improving lrtak                                   carlos hernández pedro meseguer                              institut d’investigació en intelligència artificial                              consejo superior investigaciones científicas                                  campus uab  bellaterra spain                                   chernanpedroiiiacsices                        abstract                             preliminaries     identify weak points lrtakal    state space defined xaisa     gorithm propagation heuristic changes finite graph    cost function associates     solve    present  new  algorithm       each arc positive finite cost  start state     lrtalsk based selection  set goal states finite set states     dating interior states local space   xx  finite set arcs each arc     current state keeps good theoretical prop vw represents action execution causes agent     erties lrtak improving substantially  state space undirected     performance related lookahead depth action  exists inverse      greater  provide experimental evidence cost cx ycy kn cost path     benefits new algorithm realtime     state successors state     benchmarks respect existing approaches    succxyx  heuristic function                                                           associates each state approximation hxofthe     introduction                                      cost path goal hg  gthe                                                        exact cost hx minimum cost goal  realtime search interleaves planning action execution                                                        admissible iff   hx  hx consistent iff   online manner allows face search problems                                                         hx  cxwhw states  succx path  domains incomplete information impossi                           ble perform classical search approach            xn hxi  hxi  optimal                                                          lrta korf  realtime search algorithm    realtime agent limited time planify                                                        complete set reasonable assumptions lrta  action perform limited time explore                                                        improves performance successive trials  relatively small search space                                                        problem recording better heuristic estimates hxis  current state called local space                                                        admissible number trials hx converges    paper considers weak points updating  mechanism lrtak algorithm hernandez    exact values optimal path each step lrta                                                        updates heuristic estimation current state make  meseguer     purpose   present                                                        consistent values successors bonnet  lrta   based local space selection updating        ls                                              geffner  originally lrta performs update  local space selection learningoriented local space                                                        step versions perform update step  divided interior frontier updating  frontier interior states kind lookahead  each state updated initial heuristic  lrtak  admissible remains admissible updating  lrtak hernandez meseguer  lrta  lrtalsk keeps good properties lrtak     based algorithm consistently propagates heuristic    paper structure follows section  expose changes states step following bounded propa  basic concepts used section  gation strategy heuristic current state  weak  points lrtak section  present    changes heuristic successors change  lrtalsk explaining lookahead update mecha reconsidered updating heuristic  nisms section  relate lrtalsk lookahead successor changes successors reconsid  greater  section  provide experimental ered propagation mechanism  sults finally section  extract  conclusions bounded reconsider states step updating                                                        strategy maintains heuristic admissibility lrtak                                                        inherits good properties lrta fact lrtak      leave universidad católica la santísima concep reduces lrta experimentally lrtak  ción caupolicán  concepción chile                                                      ijcai                                                     improves significantly respect lrta                                                            lrtalsk      updating mechanism implemented queue   maintains states reconsidered trying solve weak points propose new algo   updating identified weak points        rithm lrtalsk based notion local space                                                         current state formally local space pair                                                                                                    enters reconsideration happen set interior states set      hy does change wasted effort     frontier states satisfying surrounds inmediate                                                                                     state enter making completely    lrtalsk selects local      updatings reaching final value space current state updates interior      possible perform single updating state states each state updated circum    order states enter combined stances prove interior state change      value parameter affect final result heuristic number interior states upperbounded                                                         initial heuristic admissible lrtalskmain   example figure  states tains admissibility inherits good properties   left column number update iteration lrta lrtak   numbers states heuristic values moving   state successor costs  sucessors revised  selecting local space   leftright order current state iteration  shows want local space current state   initial heuristic values iteration  hd changes   interior states high chance update   iteration  hc changes  iteration heuristic propose following method    hb does change iteration  hd changes    iteration  hc does change itera  set      current state   tions changes process stops  loop    enters times updated twice extract state qifw goal exit loop oth   updated   final result erwise check looking succw   pends entering order left successor goes hw going change hwminvsuccwi   states enter order producing hvcwv expression updating   heuristic estimates figure  ii agent moves dition include succw    right successor  set surrounds inmediate completely   goes states causing heuristic   values equal iteration  agent moves example let apply strategy figure    revisiting         starts dsincehdminvsuccd hv       hernandez meseguer  required checks successors adding dsince   dates previously visited states case hcminvsuccci hv   checks successors   weak point  solved use supports  belong ithatisb  hb   version lrtak called lrtak minvsuccbi hv   possible add states   updates state just previously visited states itheni dandf heuristic initially   case supports partially solve issue   consistent interior states local space built                                                         previous method change heuristic                                                         proven following result                                                           proposition  heuristic initially consistent starting                                                         lrta k update state  iter bcd                      iter bcd                      bcd                              proof induction number states iifi                                                                                    current state case hx updated                                               construction satisfies updating condition                                                                        let assume proposition  let prove                                                                                 ipletz        argminvsuccz hv                     ii             iii          czv   satisfies updating condition                                                         struction  ileti’  –z i’  state    figure  example lrtak updating iiifsucces i’ updated updated passing    sors enter leftright order state revis                                                         holdytoh newy holdyhnewy    ited iii example lrtalsk updating          causes updated consider cases                                                          argminvsuccz czvhv initial heuristic                                                         consistent hz  czyholdyczyhnewy                                                         satisfies updating condition hz change             support usage does consider ties straightfor   argminvsuccz czvhv   yifw   i’ satis   ward develop support management including ties  fies updating condition construction  i’                                                       ijcai                                                     passed holdwtohneww holdwhneww proposition  state updated lrtakisalso  initial minimum know czyholdyczw updated lrtalsk  hneww hz  czyholdyczwhneww  satisfies updating condition hz change proof direct omitted space reasons     lrtak reaches interior states selection updating strategies weak points  successor changing state enters queue lrtak solved partial totally regarding point   limit length k                                                  qed heuristic consistent interior states change                                                        heuristic estimator propositions   heuristic  heuristic admissible consistent inte just admissible internal states change exam  rior states change instance consider states ple section  point  totally solved  abcd linear chain heuristic values     dating strategy considers state point  current state previous method generate   solved final result depend  hb change  hc change order successors considered value                                                        parameter lrtalsk performs better usage   updating local space                          lrtak non repeated states high    lrtalsk updates interior states follows chance change expect value                                                        depend successor  loop                            ordering heuristic consistent updating interior    calculate pair connected states   nodes local space locally consistent agent deci       succi  argmin    succv sions locally optimal pemberton korf       cv  hw                                     important new update method makes    update hi  cif  hf                       aggressive learning  lrtak   remove  include                  lrtak updates state considering successors                                                        lrtalsk considers successors fron  forexampleinfigurei dandf  tier states update lrtalsk greater  sults each iteration new updating appear fig update lrtak instance updating  ure  iii iteration  fc hc changes  hdinfigurei goes     iteration  fd hd changes     steps figure  iii hd goes   step  process stops update keeps admissibility proved                                                          algorithm    proposition  initial heuristic admissible lrtalsk algorithm based lrta similar  updating interior states heuristic remains admissible lrtak algorithm appears figure  main                                                        differences lrta appear lrtalstrial  proof let  argmin    succv cv whw procedure calling selectionupdatels proce   connected frontier state fitwillbeup dure performs selection updating local space  dated satisfies updating condition construction current state procedure selectionup  optimal path goal passes through datels performs selection local space  successor distinguish cases              updates select local space queue keeps                                                        states candidates included initialized  j updating                                current state                                                        states entered controlled counter    hici  hf                                 cont following loop executed contains        ci  hj                 minimum cvw  hw states cont equal state extracted        ci  hj    admissible                state   argminwsuccv   hwcv com        hi              optimal path        puted hv satisfies updating condition enters                                                        counter increments successors     contains goals optimal path enters position  point pass through fbep state optimal path enters exiting loop contains states  belongs interior state optimal path states local space se  just updating                         lected interior states updated follows pair                                                          argmin vi wf wsuccv hwcv selected hiis    hici  hj                                 updated exits enters        cq  hpi minimum    cvw  hw      heuristic increases compleneteness        ki  hp     ki includes cq    holds theorem  korf  heuristic admissibility        ki  hp    admissible                maintained convergence optimal paths guar        hi                            optimal path anteed terms lrta theorem  korf                                                         lrtalsk inherits good properties lrta  cases hihi remains admissible            qed                                                      ijcai                                                    procedure lrtalsk sg               frontier local space finds obstacle    each  hx   hx                     process repeated lrtabased algo    repeat                                              rithms agent moves best successor     lrtalstrialx sg                     figure  shows example goaldirected navigation     does change                           task grid legal moves north south east west                                                        moves cost     three different algorithms  procedure lrtalstrialx sg             lrta   rtaa lookahead  lrts                                                               ls                                                   parameters  t lookahead  visibility                                           radius bulitko lee  black cells obsta      selectupdatelsx                             cles initial heuristic manhattan distance                argminwsuccx hw  cxwbreak ties randomly current state indicated circle similar looka                   executea                 head lrta   expands states set interior                                                                    ls                                                   states contains  states                                                           states changes heuristic updating ob  procedure selectupdatels                       tains heuristic informed rtaa lrts                                         cont                           updating mechanism  lrta  general                                                                                          ls       cont                               method possible use different loo             extractfirstq                               kahead mechanisms like rtta lrts       argminwsuccv    hw  cv     hv  hy  cv                                                  experimental results                   cont  cont                                    compare lrtalsk versus lrtak addition                       each succv                            compare lrtalsk rtaa lrts algorithms                addlastqw       lookahead greater  benchmarks use                                                   fourconnected grids                                    •   grid grids size  obstacles                                          placed randomly type grid heuristics tend                                                 slightly misleading       argmin vi wf wsuccv hw  cv •  grid grids size  obstacles     hi   maxhi ci  hf                      placed randomly type grid heuristics                                                  misleading                                              •   maze acyclic mazes size corridor                                                            structure generated depthfirst search               figure  lrtalsk algorithm              heuristics misleading                                                          results averaged  different instances                                                        grids mazes start goal state chosen ran     lookahead local space                         domly assuring path start goal                                                        actions cost  initial heuristic use man  realtime agents restrict planning local space koe hattan distance visibility radius agent   nig  basically agent performs three steps loo sults presented percentage respect value  kahead local space ii updating local space row  terms total search time solution cost trials  iii moving local space                      convergence number updated states time step    lookahead rta lrta korf  knight   convergence optimal path   lrts bulitko lee  local space                                                          comparing lrtalsk lrtak consider  determined depth search horizon search trial convergence optimal paths results conver  tree rooted current state explored breadthfirst gence optimal paths appear table  lcm  depth lrta version koenig  algorithm pemberton korf  included  rtaa koenig likhachev  local space lcm updating mechanism lrtak  determined bounded version limiting num supports limitation entrances queue  ber states enter closed lrtalsktriesto                                                        lrtalsk converges optimal paths cost  states change updating process number trials total time lrtak values  lookahead limited parameter maximum tested   grid total time  states enter set interior states updating                                                          respect time step lrtalsk obtains  approaches updating current state better results lrtak  grid  like lrts maxmin rule updating interior                                                        lrtalsk requires slightly memory lrtak  states local space like rtaa update states grid   lrtak  andlcm  closed lrtalsk regarding moving  cost number trials convergence  known environments free space assumption assumed lrtak improves lcm time use  koenig et al  rtaa agent tries                                                        supports lrtalsk   similar results cost                                                      ijcai                                                    number trials convergence requiring time benchmarks clear winner  lrtak lcm    grid time  lrtalsk performs better lrts memory usage  step observe worse heuristic information lrts wins second unclear  better results lrtalsk obtains values lrtalsk rtaa  grid lrtals  improves lrta steps  trials requires running time  conclusions  extra overhead lrtalsk lrtak  minimizing vs argument counterbalances trying solve inefficiencies lrtak propaga  benefits steps trials                     tion developed lrtalsk new realtime search                                                        algorithm based selection update local    results trial appear table  lrtalsk ob  tains solution cost lrtak tested space composed interior frontier states number  values   maze  interior states upperbounded lrtalsk                                                        dates interior states heuristic values frontier  respect time lrtalsk obtains better solution  maze grid lrtak grid lrtak    states performs kind lookahead varying  shows better results total time time step trying depth heuristic initially consistent interior states  improve  running  time   developed    updated experimentally show lrtalsk  lrta   kpath updates states improves lrtak lookahead  improves        ls                                              rtaa lrts lookahead greater   visited previously like lrtakandlcm lrtalsk  path improves cost solution total time  small values improvement larger references  worse heuristic information grid improves bonnet geffner  blai bonet hector geffner    maze improves      learning depthfirst search unified approach  fact explained follows free space heuristic search deterministic nondeterministic  assumption lrtalsk perform inefficient use settings application mdps proc int  updating states blocked appear conf automated planning scheduling uk   solution great states maze  blocked better update states current path bulitko lee  vadim bulitko greg lee  results show considering memory lrta kuses      learning real time search unifying framework                                            ls             journal ai research    memory lrtakandlrtalskpath  increasing lcm              hernandez meseguer  carlos hernández    comparing lookahead algorithms results pedro meseguer lrtak  proc th int  trial appear table  comparing lrtalskand         joint conference artificial intelligence –  rtaa obtains costs equal better edimburgh scotland juny   grid maze values knight  kevin knight reactive agents    rtaa obtains slightly better costs grid   better deliberative ones proc th  rtaa takes time finding solution values int joint conference artificial intelligence    benchmarks  considering time step                                                        koenig likhachev  sven koenig maxim  lrtalsk requires smaller time values  benchmarks maze      likhachev realtime adaptive proc int  maze   rtaa uses mem     joint conference autonomous agents multi                                                           agent systems   ory lrtalsk rtaa uses memory  values lrts uses radius circle centered koenig et al  sven koenig craig tovey  current state lookahead parameter lrtalskand yury smirnov performance bounds planning  rtaa use number states consider ad  unknown terrain artificial intelligence    vance perform fair comparison use lrts                           parameters    lookahead values generate koenig  sven koenig agentcentered search  circles including states lookahead                                                           artificial intelligence magazine      lrtalsk rtaa lrts does show good  formance terms cost time solution respect koenig  sven koenig comparison fast search  lrtalsk lrts uses memory lrtalsk     methods realtime situated agents proc th  smaller time step                               int joint conference autonomous agents    summary lrtalsk shows better performance   multiagent systems    lrtak trial convergence optimal korf  richard korf realtime heuristic search arti  paths updating previously visited states ficial intelligence –   improve performance heuristic quality good                                                        pemberton korf  joseph pemberton richard  advisable update state bad quality heu                                                           korf making locally optimal decisions graphs  ristics safer update visited states trial                                                           cycles tech rep  comp sc dep ucla   lrtalsk performs equal better rtaa                                                      ijcai                                                    
