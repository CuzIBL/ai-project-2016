                                keys nominate concrete domains                    carsten lutz carlos areces ian horrocks ulrike sattler            inst theoretical science inria lorraine dept science              technical university dresden nancy university manchester                          germany france uk            lastnametcsinftudresdende carlosarecesloriafr horrockscsmanacuk                             abstract                                 paper extend wellknown dls concrete                                                                  domains accv shoqd baader hanschke        description logics dls combine knowledge                                                                   horrocks sattler  key constraints        representation abstract logical level                                                                  analyse complexity reasoning resulting log•       interface concrete domains numbers                                                                  ics allokd shoqkd show allowing        strings propose extend dls                                                                  complex concepts occur key constraints dramatically        key constraints allow expression state•                                                                 increases complexity alld pspace       ments like citizens uniquely identified                                                                  complete undecidable restricting key con•       social security number based idea                                                                  straints atomic concepts human        introduce number natural description logics                                                                  example yields nexptlmlhard formalism        present undecidability results tight nex                                                                 simple ptlme concrete domains show        ptlme complexity bounds                                                                  variants result depend characteristics                                                                  key constraints number concrete features    introduction                                                 path length effect consistent observa•                                                                 tion pspace upper bound accv robust   description logics dls family popular knowledge                                                                  lutz    representation formalisms expressive dls combine   powerful logical languages interface concrete do•     additionally prove nexptime bounds   mains integers reals strings builtin predicates tight presenting tableau algorithms allokv    substringof lutz bl used   shoqkv key admissible concrete domains   form descriptions employee working govern•    np key admissibility simple natural prop•  ment earning boss combine abstract   erty chosen devise tableau algorithms   logical components working government     potential implemented efficient reasoners   components using concrete domains predicates      shown behave practise horrocks   numerical comparison earnings                             et al  space restrictions sketch                                                                  proofs refer lutz et al  details     dls concrete domains turned useful   reasoning conceptual database models lutz   basis expressive ontology languages horrocks    preliminaries   et al   far able ex•                                                               formally introduce description logic   press key constraints constraints expressing fact                                                                  allokd   certain concrete features uniquely determine identity   instances certain class concrete feature so• definition  concrete domain pair   cial security number ssn serve key citizens  set set predicate names each   combination identification number    predicate associated arity   manufacturer serve key vehicles con•      nary predicate   straints important databases realistic on•                         pairwise disjoint countably in•  tology applications dl context key constraints     finite sets concept names nominate role names con•  far considered logical nonconcrete do•     crete features assume nr countably infinite     mains borgida weddell  calvanese et       subset naf abstract features path composition   khizder et al  toman weddell                            abstract features     easy concrete keys express nominate   concrete feature let concrete domain set   concepts interpreted singleton sets closely re• allokdconcepts smallest set   lated oneof operator ssn key hu• concept nominal concept ii   man ssn keyfor human concept human ssn       concepts role concrete feature                                   instance        paths predicate arity       description logics                                                                                                      following expressions concepts             definition  let concrete domain dconjunction                                                                  finite predicate conjunction form          key definiton expression uk keyfor                      paths concept finite set key   definitions called key box                               pi nary predicate                                                                  variables pconjunction satisfiable iff exists   usual use denote arbitrary propositional tau•                                                                 function  mapping variables elements   tology paper consider frag•  ments logic allokv a£cov obtained          each say   allokd admitting key boxes disal•          concrete domain admissible iff contains   lowing use nominals obtain fragment accv      td  ii closed negation iii                                                                  satisfiability pconjunctions decidable refer   alcod alckd allokd                                                                  satisfiability dconjunctions dsatisfiability      description logic alcokd equipped   tarskistyle settheoretic semantics seman•    shall makes considerable differ•  tics introduce standard inference problems concept    ence wrt complexity decidability restrict key boxes   satisfiability concept subsumption                        various ways convenient introduce                                                                  following notions   definition  interpretation pair       nonempty set called domain in•     definition  key box called boolean concepts   terpretation function interpretation function maps each  appearing key definitions boolean combinations                                                                 concept names pathfree key definitions   concept subset ci  each nominal                                                                  form gn keyfor  sim•  singleton subset  each role subset                    each abstract feature  partial function ple pathfree boolean unary key box                       each concrete feature partial key definitions form keyfor con•                                                                cept called pathfree subconccpts form   function      ifis path de•                                                 concrete features   fined interpretation function                          emphasize key box necessarily boolean   extended arbitrary concepts follows                 pathfree key box general sim•                                                                ilarly emphasize key box necessarily unary                                                                 key box key box nary key box                                                                    lower complexity bounds                                                                 section present lower complexity bounds dls                                                                 concrete domains key boxes nominals start                                                                 showing satisfiability allk vconcepts wrt gen•                                                                eral key boxes undecidable interesting concrete                                                                 domains discouraging result relativized fact   interpretation model concept iff             shown section  restriction boolean key                                                                 boxes recovers decidability prove satisfiabil•  satisfies key definition keyfor   forn implies                                  ity pathfree allkdconcepts wrt simple key boxes   —  model key box iff satisfies key   nexptlmehard concrete domains   definitions concept satisfiable wrt key box holds restrict unary key boxes fi•  iff common model subsumed         nally identify concrete domain allod  concept wrt written                        concept satisfiability key boxes nexp  models tlmehard                                                                    undecidability allkdconcept satisfiability wrt   wellknown dls providing negation sub    general key boxes proved reduction undecidable   sumption reduced unsatisfiability vice versa post correspondence problem pcp post    itf unsatisfiable wrt sat•  isfiable wrt kz iff concentrate         definition  instance pcp given finite   concept satisfiability investigating complexity   nonempty list pairs words   reasoning reduction implies corresponding   alphabet  sequence integerswith   bounds subsumption complementary complexity        called solution iff   class usually conexptime paper                    problem decide given instance     devising decision procedures dls     solution   tied particular concrete domain admissibility con• reduction uses admissible concrete domain intro•  crete domain usually serves welldefined interface be•   duced lutz  domain set words   tween decision procedure concrete domain reasoners    £ predicates express concatenation words   baader hanschke  lutz                     each pcp instance define                                                                                                     description logics concept cp unary key box kp solu•       domain element concrete domain values   tion iff cp satisfiable wrt kp intuitively cp kp                enforce    enforce infinite aary tree each node represents analogously  key def•  sequences integers potential solution role  inition obvi•  key box guarantee tree infinite depth ously ensures uniqueness positions reduction   concrete features used store left right concate• concept pathfree dsatisfiability easily seen   nations corresponding potential solutions concate• ptlme obtain following   nation predicates concrete domain used                                                                  theorem  satisfiability ptlme satisfiability   compute finally inequality predicate provided                                                                  pathfree alccdconcepts wrt simple key boxes   used guarantee potential solutions nexrtlmehard   solution known wsatisfiability   ptlme lutz obtain following theorem        somewhat artificial concrete domain replaced                                                                  natural concrete domains proposed litera•  theorem  exists concrete domain                                                                  ture baader hanschke  haarslev moller    dsatisfiability ptlme satisfiability allkd                                                                 lutz dj suffices provides unary   concepts wrt general unary key boxes undecidable                                                                  predicates denoting disjoint singleton sets   shown lutz  lutz et  reduction   easily adapted natural concrete domains       second reduction uses complex concrete do•  numerical ones based integers providing predicates  main stores bit vectors   equality zero binary equality addition   single bits translate position ij   multiplication                                                element concepts xl yk single bit vector                                                                  length   stored bvsuccessor      establish lower bounds allkv                                                                  bv concrete feature replaced    boolean key boxes allod results                                                                  concrete features used reduction each bit   obtained using nexptlmecompletc variant                                                                 single feature bv suffices use simple   known undecidable domino problem knuth                                                                   unary key box bv keyfor ensure uniqueness posi•  definition  domino triple                                                                  tions reduction concept pathfree lutz   finite set tile types repre•                   et al  shown dosatisfiability ptlme   sent horizontal vertical matching conditions   domino initial condi•                            theorem  satisfiability ptlme satisfiability   tion mapping  pathfree alckdconcepts wrt simple unary key boxes   solution   following                          nexptimehard   holds artificial concrete domain replaced                                                                  natural ones simulate bit vectors using inte•                                                         gers necessary operations bit vectors unary     variant domino problem nexptime              predicates „ interger ternary addition   complete lutz  three nexptime lower bounds         predicate—for details sec lutz et al    obtained using suitable admissible concrete do•       lower bound concerned dl alcov   mains reduce domino prob•          absence key boxes need different reduction   lem precisely simplest concrete domain used   strategy complex concrete domain     reduction allkdiconcept satisfiability wrt     extends socalled domino arrays allow store   boolean nary key boxes slightly complex        tiling torus single concrete domain value   used reduction acckdconcept satisfiabil•     ensure uniqueness positions using single   ity wrt boolean unary key boxes powerful      nominal computationally concrete domain   concrete domain used reduction allod       simple ptlme longer suffices   concept satisfiability key boxes                      use pathfree concepts     idea underlying three reductions use concept   theorem     satisfiability ptlme satisfiability   namesto represent positions                                                                                                              ofalcod  concepts nexptlmehard                 torus domain element representing                position expresses lth bit   binary coding  expresses ilh       reasoning procedures   bit  use standard methods enforce   tableaubased decision procedures con•  exists domain element position torus   cept satisfiability dls concrete domains nomi  main difference three reductions en•  nals keys aslccajtconcepts wrt   sured position represented different domain  boolean key boxes algorithm yields nexptime up•  elements—we uniqueness positions                 complexity bound matching lower bounds established     reduction uses simple concrete do•        section  second procedure shookd wrt     main based set  pro•         pathfree key boxes yields tight nexptime up•  vides unary predicates   negations unique•     complexity bound shoqkd extension   ness positions ensured translating position dl shoqd introduced horrocks sattler        description logics                                                                                                     pan horrocks  provides wealth ex•       box use clc abbreviation set    pressive possibilities transitive roles role hierar•   chies nominals qualifying number restrictions general    tboxes pathfree concrete domain constructor    pathfree key boxes pathfreeness shoqktys con•         complexity alcokv    crete domain constructor crucial decidability more•   start presentation alcokd tableau algo•  allows admit general boolean   rithm introducing underlying data structure   key boxes      tableau algorithms decide satisfiability input   definition  let oa oc disjoint countably in•  concept case wrt input key box attempting finite sets abstract concrete nodes completion tree   construct model starting initial data structure alcokdconcept key box finite   induced input concept algorithm repeatedly ap•     labeled tree vavce set nodes   plies completion rules eventually algorithm finds va oa vc oc nodes vc leaves   obvious contradiction encounters contradictionfree each node va tree labeled subset ca   situation completion rules applicable    clc each edge va labeled   case input concept unsatisfiable role ca occurring each edge   case satisfiable                             va vc labeled concrete      existing tableau algorithms dls concrete do•       feature la occurring   mains use admissibility interface tab•        vavcec va use levta   leau algorithm concrete domain reasoner lutz    denote depth occurs starting root   baader hanschke  presence keys           node depth  completion accokv  knowing given         concept key box tuple   conjunction satisfiable concrete domain reasoner     completion tree   provide information variables    function mapping each arity appearing   value solutions example consider concrete       subset linear ordering va   domainand nconjunction                                    levxa impliesis equivalence                                    obviously solution    relation vc      identifies variables vv informa• let  va vc completion tree node   tion passed concrete domain reasoner va rsuccessor node va   tableau algorithm presence key boxes  la  similarly node vc gsuccessor   impact satisfiability input concept la  paths notion   information transfer reveals unsatisfiability      usuccessor defined obvious way                                                                  intuitively relation  records equalities concrete   formalize requirement strengthen notion ad• nodes during model construction   missibility keyadmissibility                           process relation  induces equivalence relation   definition  concrete domain keyadmissible iff  abstract nodes turn yields equivalence rela•      contains closed                           tion concrete nodes   negation iii exists algorithm takes input                                                                 definition  let  completion   dconjunction returns clash unsatisfiable oth•                                                                concept key box    erwise nondeterministically outputs equivalence relation                                                                 let equivalence relation va each    set variables used exists                                                                  nr node    node  solution  following property                                                                                                                         exists node va                              equivalence relation    isuccessor paths notion  neighbor   henceforth called concrete equivalence say ex     defined analogously   tended vsatisfiability np exists algorithm   running polynomial time   easily seen concrete domain ad•  missible provides equality predicate key  admissible lutz et      following assume concepts input   concept occuring key boxes negation nor•  mal form nnf negation occurs concept   names nominals concrete domain admissi•  ble alcckdconcept converted   equivalent nnf lutz et al   use   denote result converting concept nnf   subc denote set subconcepts subc   denote set subconcepts concepts occurring key                                                                                                     description logics finally setand define xor       neighbors    intuitively    domain element constructed model similarly    relation concrete nodes      let keyadmissible concrete domain de•  cide satisfiability alcokvconcept wrt   boolean key box nnf tableau algo•  rithm started initial completion                       maps each occurring     introduce operation used completion rules    add new nodes completion trees   definition  let completion     element oa called   fresh does appear use following    notions       arb let fresh nr   write  arb denote completion   obtained adding setting la —    inserted intosuch         implies lev  lev                                                                      figure  completion rules accokv     agx let fresh    write  agx denote completion   obtained adding ax setting        say completion concrete domain satisfi  lax                                                     able iff conjunction   nesting  omit brackets writing   brc path   fresh   denote completion obtained     satisfiable  contains clash iff anand   taking fresh nodes setting                              ansuch thatii                                                                  thatand                                                                  iii concrete domain satisfiable does                                                                  contain clash called clashfree complete    completion rules given figure  assume   completion rule applicable   newly introduced nodes fresh tableau algorithm pseudocode nota•   rch rules nondeterministic upper rules  tion check denotes algorithm computing concrete   wellknown existing tableau algorithms alcd       equivalences described definition    concept satisfiability cf example flutz dl    define procedure sats       deserves comment considers neighbors                rsuccessors relates nodes denoting                contains clash return unsatisfiable   domain element      rules necessary dealing key boxes        compute   choose rule rch cf hollunder baader               horrocks et al  guesses abstract node          contains clash return unsatisfiable   satisfies case occurring key definition          complete return satisfiable                                                                       apply completion rule yielding    having neighbors paths ul key definition   rp rule deals equalities abstract nodes         return sats   recorded relation           algorithm realizes tight coupling con•  element node labels identi• crete domain reasoner tableau algorithm con•  cal choose representative each equivalence class   crete domain reasoner finds concrete nodes equal   node minimal wrt  make sure       tableau algorithm use deduce com•  representatives node label contains labels putation equalities con•  nodes represents                                           crete nodes concrete domain reasoner return                                                                  check equalities  forth   definition  let  completion                    similar interplay takes place course re•  concept key box cursion steps equalities concrete nodes provided       description logics                                                                                                    
