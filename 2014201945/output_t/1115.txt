                  backbone guided local search maximum satisfiability                                  weixiong zhang ananda rangan moshe looks                                   department science engineering                                            washington university st louis                                                st louis mo  usa                                               email zhangcsewustledu                               abstract                               clauses number variables cv ratio increases be•                                                                 yond critical value  random sats begin be•       maximum satisfiability maxsat general          come unsatisfiablc computational cost problem        difficult solve satisfiability sat    increases abruptly    backbone problem        paper investigate effectiveness  set variables fixed values optimal solutions        walksat best local search algorithms de•      problem hardness sat maxsat deter•       signed sat maxsat show walksat          mined backbone size problem  addition        effective maxsat effectiveness     backbones random sat maxsat small        degrades problem constrained           large phase transitions  second direction focused        develop novel method exploits back•       developing efficient sat solvers noticeable re•       bone information local minima walk           sults line walksat local search algorithm         sat applies backbone information differ•       variants  best sat solvers        ent ways improve performance walk          used practice problems planning        sat algorithm new algorithm backbone                                                                    problem fundamental practical importance        guided walksat bgwalksat large random sat                                                                  algorithm design utilize problem structure proper•       maxsat problems instances                                                                  ties phase transitions backbones cope high        satlib bgwalksat significantly improves walk                                                                 complexity improve algorithm performance current        sats performance                                                                  research problem limited  developed trans•                                                                 formation method exploit phase transitions tree search    introduction                                                  designed method incorporate estimated backbone vari•  satisfiability sat archetypical combinatorial problem ables systematic search sat  proposed heuristic   sat involves set boolean variables set clauses backbone sampling method generating initial assignments   form disjunction literals variables nega• local search using estimated backbone sampling   tions clause satisfied literals set true scheme studied research   problem satisfied clauses satisfied   paper develop novel method exploit struc•  problem decide variable assignment exists sat• ture local minima reached effective local search algo•  isfies clauses clauses satisfiable rithm effective approach utilize structure infor•  goal maximize satisfied clauses problem be• mation improve performance local search algorithm   comes maximum sat maxsat optimization problem       focus maxsat research   sat maxsat literals clause denoted ksat     develop new method study performance   maxksat known ksat greater walksat designed sat maxsat sec•  npcomplete maxksat np     tion  show walksat effective random max  hard  maxsat general difficult solve  sat finding high quality local minima close optimal   sat realworld problems scheduling pattern     addition local minima reached walksat appear   recognition multiagent cooperation coordination   form large clusters optimal solutions results    formulated solved sat maxsat            show performance walksat degrades    recent years witnessed significant progress     strainedness maxsat increases carry   sat maxsat directions un•     analysis purpose developing new method   derstanding properties phase transitions back•  result significance knowl•  bones      phase transitions refer dramatic edge walksat analyzed overconstrained   changes problem property critical parameter     steiner tree problems    problem changes important phase transition re•       main contribution paper innovative method   sults random sat ratio number    exploits solution structure combinatorial problem      research supported nsf grants iis improve performance local search algorithm   itreia darpa cooperative agree•   walksat section  inspired recent research   ments fc                   phase transitions backbones sat maxsat     satisfiability                                                                                                        performance results walksat    paper directly apply new method walksat    ideas techniques developed gen•   eral applicable combinatorial problems local    search algorithms      briefly main ideas use backbone information   make biased moves local search use local minima   approximate optimal solutions extracting backbone in•   formation frequencies literals appearing local   minima called pseudobackbone frequencies new ap•  proach applies pseudobackbone frequencies heuristic   selecting variable flip each step walksat algo•  rithm biased moves guide search regions   possibly having optimal solutions effectiveness   method partially effectiveness walksat find•  ing optimal high quality approximate solutions   resulting algorithm backbone guided walksat bgwalk  sat demonstrate evaluate experimentally effective• maxsat instances different sizes comparable nor•  ness bgwalksat large random maxsat instances                                                                  malize given problem divide hamming   real problems satlib  section                                                                   distance number variables resulting hamming    walksat algorithm                                        distance variable divide cost difference                                                                  number clauses giving cost difference clause   walksat randomized algorithm starts creating                                                                  use normalized quality measures construct   initial random variable assignment assignment                                                                  landscape local minima reached walksat   generation repeatedly makes selecting                                                                    nearest optimal assignment optimal solu•  variable flipping value true false vice versa                                                                  tions required extended dpll al•  finds satisfying assignment reaches predefined                                                                  gorithm  sat finding optimal solutions ex  maximal number flips each attempt called try                                                                  pensive restricted relatively small maxsat   restart procedure repeats maximal number tries                                                                  problems experiments used problems  vari  executed                                                                  ables cv ratios     capture prob•     select variable effect flipping variable as•                                                                 lems different constrainedness regions problems   sessed flipping variable make unsatisfied clauses                                                                  randomly generated uniformly picking three literals with•  satisfied number clauses unsatisfied                                                                  replacement clause discarding duplicate clauses   flipping variable breakcount variable                                                                  walksat set noise ratio  number tries   current assignment walksat attempts flip variable                                                                  problem  cutoff parameter  gener•  zero breakcount trying make assignment worse                                                                  ated  problems each cv ratio   current variable zero breakcount                                                                    quality local minima walksat summarized   walksat selects unsatisfied clause randomly                                                                  figure  xy planes show correlation   unsatisfied clauses called clause pick vari•                                                                 normalized hamming distance normalized cost differ•  able zero breakcount walksat picks variable                                                                  ence origins figures correspond global minima   randomly ones qualify zero breakcount                                                                  each point xy plane represents possible local mini•  variable exists walksat makes random choice                                                                  mum visited walksat vertical axis mea•  probability chooses randomly variable                                                                  sures number local minima reached walksat aver•  ones involved called noise pick probability                                                                  aged  instances each  tries run    — picks variable breakcount breaking   tie arbitrarily multiple choices exist called greedy pick shown figures walksat performs     flow chart try walksat figure   underconstrained critically constrained problems   shaded rectangles contain random choices analyze  global minima shown   walksat takes three parameters run number tries points axes indicated arrows figures there•  maximal number flips each try cutoff parameter fore walksat effective finding optimal solutions un•  probability noise ratio noise pick                     derconstrained critically constrained problems                                                                  number local minima global minima de•   performance walksat                                       creases   average cv ratio   turn effectiveness walksat maxsat par•   increases   indicating effectiveness   ticularly maxsat measure local minimum         walksat decreases number decreases     ways cost difference local mini•   overconstrained problems cv ratios equal    mum optimal solution nonzero cost     figures result indicates walksat   second measure hamming distance local    effective finding optimal solutions problem   minimum optimal solution nearest introduce   constraints increase   nearest hamming distance capture minimal number       distribution local minima walksat exhibits bell   flips required turn local minimum optimal so• surface overconstrained problems figures   lution furthermore make quality measures    importantly summit bell surface shifts away                                                                                                       satisfiability                                                                  unfortunately exact backbone frequencies hard come                                                                  finding optimal solution idea                                                                  bypass problem inspired effectiveness high                                                                  performance local search algorithms walksat                                                                  analysis performance walksat section  showed                                                                  walksat optimal solutions                                                                 constrained critically constrained maxsat                                                                  reach near optimal solutions close optimal                                                                  near optimal local minima form large clusters op•                                                                 timal solutions local minima walksat                                                                  common structures shared optimal so•                                                                 lutions use local minima                                                                  optimal solutions compute pseudobackbone frequencies                                                                  estimation true backbone frequencies                                                                  general approach backbone guided local search bgls                                                                    ideas applied local search                                                                  algorithms actual application problem algo•                                                                 rithm specific local search algorithms operate dif•                                                                 ferently different problems research consider                                                                  maxsat walksat algorithm                                                                   backbone guided walksat bgwalksat    optima solutions  point xy plane application bgls maxsat walksat leads   problems constrained cv ratio increases backbone guided walksat bgwalksat algorithm similar   number optimal solutions decreases    walksat bgwalksat runs total tries addition bg•  indistinguishable large number suboptimal solutions walksat splits total tries phases   result search space rugged local  estimation phase runs tries original walksat collect   minima walksat trapped                        local minima compute pseudobackbone frequencies      despite difficulty overconstrained problems walksat section  second backbone guided search phase runs   fairly effective able reach local minima   tries variable selection guided   close optimal solutions cv ratio  figure pseudobackbone frequencies newly discovered local   instance large number local minima landed      minima added pool local minima   walksat peak point bell surface normalized update pseudobackbone frequencies   cost difference optimal solutions   variable   consider backbone guided moves biased moves   problems equivalent approximately     discussed section  shown figure  walksat   constraints violated optimal solution overcon• makes uniformly random choices ran•  strained problems walksat normally executed mul•  dom initial assignment generation instead uniformly ran•  tiple tries best local minimum reach usually domly choosing variable setting arbitrary value   better frequent local minima                   view pseudobackbone frequencies approxi•     closer examination results figures mate probability distribution variable assignments   indicates nearly linear correlation cost differ• samples variable assignments initial assignments   ence hamming distance observation implies   distribution scheme called heuristic backbone   local minimum small cost likely share    sampling    larger common structure optimal solution similar      second random choice walksat random clause   phenomenon traveling salesman problem called        pick choosing unsatisfied clause apply idea   big valley  exploit new search   backbone frequencies extend concept pseudo  algorithm described section                       backbone clause frequencies measure frequencies    backbone guided local search                                 clauses satisfied local minima picking                                                                  clause set unsatisfied clauses choose based    main idea                                              pseudobackbone clause frequency example given   optimal solutions problem known   three unsatisfied clauses pseudobackbone   provide useful clue variable set ex• frequencies   respectively choose   ample variable backbone fixed probability proba•  value optimal solutions obviously variable bility probability    set value fact extend concept back•   remaining three random choices involved selecting   bone backbone frequency frequency variablevalue  variable uniformly particular set choice picks   pair literal sat optimal solutions indication variable set zero breakcount variables cho•  variable particular value sen clause unshaded rectangle figure  second   exploited heuristic selecting variables val• directly variables involved   ues local search walksat general variable set variables breakcount   value pair likely swapped current picking variable uniformly particular set   state higher backbone frequency pair make biased selection based variables pseudobackbone     satisfiability                                                                                                      frequencies consider example three literals constructing pseudobackbone specifically run       chosen clause backbone frequencies    walksat dynamic noise  short runs construct     respectively want flip      pseudobackbone followed  long runs backbone guided    literal appears local minima           local search each  times long short run    frequency  versus  pick     frequencies                                               experimental results    respectively                                             analyze performance bgwalksat max   pseudobackbone frequencies                                sat benchmark suite empirical evaluation consists   performance backbone guided local search depends        different types problems randomly generated prob•   largely quality pseudobackbone frequencies      lems problems converted realworld applications   ways compute pseudobackbone fre•    satlib  included satisfiable unsatisfiable prob•  quencies simplest method consider lem instances used walksat implementation henry   available local minima global optima kautz developed bgwalksat   frequency variablevalue pair ap•                 random ensembles   pears local minima pseudobackbone frequency  experiments investigate effects biased   specifically frequency moves random choices walksat section    method average counting                             places walksat makes uniformly random choices      imperative note local minima   rectangles figure  experimental results   equal quality lower quality local minimum usually con•      showed biased random choice picking variable   tains backbone variables higher quality    zero breakcount selected clause unshaded rectan•  reliable contribute   gle figure  effect reason   pseudobackbone frequencies zero breakcount variable exists usually available   discount contribution local minimum based     meaning biased moves occur   cost local minimum cost                consider biased random choice rest paper   compute pseudobackbone frequency experiments generated random maxsat in•                                              words    stances  variables three different cv ratios   pseudobackbone frequency reciprocally weighted       generated  instances each   costs local minima involved  cv ratios tested various noise ratios     method cost reciprocal average counting             increment  walksat dynamic    walksat bgwalksat dynamic noise                   noise each run regardless configuration allowed   limitation walksat family algorithms    total million flips   dependence manually set noise parameter far        walksat static noise cutoff parameter set   mechanisms proposed resolve issue sat     flips algorithm run  different   autowaksat  uses preliminary probing stage estimate  starting points tested different ratios lengths   optimal value noise parameter walksat  backbone estimation phase actual backbone search   dynamic noise  automatically adjusts noise level phase bgwalksat ratio    search progresses successfully combined method    provide best results results shown walksat   dynamic noise strategy sat maxsat          run  tries collect initial set local min•    idea dynamic noise simple start search   ima obtain pseudobackbone frequencies bgwalksat   noise parameter equal zero examine number vi•   run remaining  tries new local minima   olations current state flips        added update pseudobackbone frequencies  tries   number clauses instance number violations   experimentally compared methods comput•  decreased time checked flips ago ing pseudobackbone frequencies section  average   search assumed stagnated noise level counting ac method generally worse cost recip•  increased current noise                        rocal average counting crac method random problems   level noise level decreased              space limitations report results   discrepancy formulas increasing de•    crac method   creasing noise level based observations    little impact biased moves cv ratio   walksat behaves noise parameter high com•      walksat able optimal solutions   pared behaves parameter low     tries problems figure  shows results   following  set                 random maxsat  variable cv ratios    effective wide range sat max    comparing walksat bgwalksat biased noise   sat instances                                                 pick biased greedy pick bias moves combining biased     dynamic noise designed tested walksats cut    noise pick greedy pick clause pick assignment genera•  parameter set infinity random restarts tion error bars figures correspond confi•  setting use walksat dynamic noise   dence intervals shown biased greedy pick effective   experiments section unfortunately setting low noise levels leads degraded performance higher   incompatible backbone guided walksat requires  noise levels biased noise pick hand greater   random restarts order construct pseudobackbone effect noise level increases direct relationship   overcome devised compromise parameter set•    noise level frequency noise picking bi•  tings allow dynamic noise function effectively ased assignment generation clause pick                                                                                                       satisfiability                                                                table  walksat vs bgwalksat easier satisfiable problems                                                                  walksat bgwalksat runs resulting satisfying                                                                  solutions  algorithms better results                                                                  underlined bold                                                                            problem                 walksat  bgwalksat                                                                           bwlargec                                                                               bwlarged                                                                                                par                                                                                                     par                            figure  quality improvement random maxsat using bi•                par                                                                                                     par                            ased noise pick biased greedy pick combination              par                        —   biased noise pick greedy pick clause pick assignment              qg                          generation combined bias                                              qg                                                                                                   qg                                                                                                   qg                                                                                                    qg                                                                                                                            little effect walksats performance data shown how•                                   combined strategies provide   improvements shown      tested walksat bgwalksat dynamic noise     solved method runs table    instances good results fairly un•   results unsatisfiable instances presented table    surprising class instances walksat performs    results show bgwalksat significantly outperforms   best low noise ratio dynamic noise begins walksat cases easier satisfiable instances table    noise ratio set zero raises needed bgwalksat finds satisfying solutions walksat   noise parameter fluctuated low levels av• parity par quasigroup qg classes produces similar   erage  cv cv noise level       results walksat blocksworld instances harder satis•  exceeded  time solutions walk   fiable instances table  bgwalksat outperforms walksat   sat dynamic noise good best solutions  instances half percent   walksat static noise cv     worse contrast overall average gain    worse cv combining dynamic noise bg•         unstatisfiable instances table  bg•  walksat average noise level slightly lower giving  walksat produces impressive gains longmult instances   cv  cv increased number    ssa overall average gain  un•  random restarts restart satisfiable quasigroup instances shown performance   period rapid improvement noise level remains    similar walksat performance bgwalksat   zero performance bgwalksat dynamic noise     worse walksat unsatisfiable   similar bgwalksat best static noise cv  instances studied   slightly worst cv                         glaring failure bgwalksat instances                                                                  pl instances satencoded graph    real problem instances                                                                  coloring problems serve illustrate important point   investigate bgwalksat improves walksat         described section  believe method effec•  problems satlib  used conjunction      tive exploits big valley structure solution   dynamic noise test problems include satencoding     space graph coloring problems exhibit particular   instances random hard graph coloring problems       type symmetry solution structures opaque   satencoded blocks world planning bounded model check•        local search methods walksat example color•  ing interval series problem details ing red nodes green green nodes red results   problems website chose prob•      identical solution radically different encoding   lems  variables discarded    single big valley bury   easily solved walksat bgwalksat                 true backbone information lead degraded per•     considered satisfiable unsatisfiable problems    formance presumably bgwalksats performance suffer   ran walksat bgwalksat using dynamic noise      instances type symmetry   total  million flips compared  million   results random instances interestingly bgwalksat     conclusions   exhibited superior performance wide range real in•  developed novel general method exploits back•  stances methods biasedmoves utiliz•      bone information improving performance local   ing pseudobackbone disabled results presented    search algorithm demonstrated analyzed new   use backboneguided noise pick backboneguided    method called bgwalksat maxsat using walksat   clause pick averagecounting ac method results    algorithm static dynamic noise strategies   runs each algorithm instance experi•   main ideas extract backbone information local min•  ments best static noise shown produced similar  ima use directly fix discrepancy cur•  results                                                       rent state optimal solutions guide walksat      viewing results useful divide satis• regions search space likely contain optimal   fiable instances categories easier instances solutions comparison existing local search meth•  solved table  harder ones ods focus costs states search space    satisfiability                                                                                                     
