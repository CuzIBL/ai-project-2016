              generalizing plans new environments relational mdps                    carlos guestrin daphne koller chris gearhart neal kanodia                                 science department stanford university                                  guestrin koller cmg nkanodiacsstanfordedu                           abstract      longstanding goal planning research ability gen•     eralize plans developed set environments      new similar environment minimal replanning      generalization reduce planning time al•     low tackle larger domains ones tractable      direct planning paper present approach      generalization problem based new framework re•     lational markov decision processes rmdps rmdp      model set similar environments representing ob•                                                         figure  freecraft strategic domain  peasants barrack      jects instances different classes order generalize                                                          castle forest gold  footmen enemy executing      plans multiple environments define approximate                                                          generalized policy computed algorithm      value function specified terms classes objects      multiagent setting classes agents classbased research   earlier traditional planning       approximate value function optimized relative sam• problem challenging unclear      pled subset environments computed using efficient translate solution obtained domain an•     linear programming method prove polynomial mdp solutions assign values andor actions states      number sampled environments suffices achieve perfor•     mance close performance achievable optimizing different mdps freecraft scenarios typ•     entire space experimental results show ically quite different different set      method generalizes plans successfully new significantly number states actions cases      larger environments minimal loss performance rel• mapping solution welldefined      ative environmentspecific planning demonstrate approach based insight domains      approach real strategic war game     described terms objects relations                                                          particular domain involve multiple objects    introduction                                         classes different tasks domain typ•  planning methods optimize plan agent ically involve different sets objects related each   fixed environment realworld settings different ways example freecraft different tasks   agent face multiple environments lifetime involve different numbers peasants footmen ene•  experience environment help perform mies define notion relational mdp   minimal replanning   rmdp based probabilistic relational model prm      consider example agent designed play strate• framework  rmdp particular domain pro•  gic war game freecraft game shown vides general schema entire suite environments   fig  open source version popular warcraft worlds domain specifies set classes   game game agent faced scenar• dynamics rewards object given class   ios each scenario control set agents units depend state object related objects   different skills order defeat opponent sce• use class structure rmdp define value   narios share basic elements resources gold function generalized domain   wood units peasants collect resources begin assumption value function   build structures footmen fight enemy units wellapproximated sum value subfunctions   structures barracks used train foot• different objects domain value global   men each scenario composed basic build• freecraft state approximated sum terms correspond•  ing blocks differ terms map layout types ing state individual peasants footmen gold   units available amounts resources like assume individual objects class   agent learn experience playing sce• similar value function define notion   narios enabling tackle new scenarios significant classbased value function each class associ•  amounts replanning particular like agent ated class subfunction objects class   generalize simple scenarios allowing deal value subfunction class overall value   scenarios complex effective planner function particular environment sum value sub     idea generalization longstanding goal functions individual objects domain   markov decision process mdp reinforcement learning set value subfunctions different classes imme      probabilistic planning                                                                                 diately determines value function new environment          specifies set objects de•  domain used acting com• noted ol example world containing  peasants   pute set class subfunctions based subset environ•   ments apply replanning peasantl building barracks      provide optimality criterion evaluating class peasant lbuildtarget  barrackl   based value function distribution environments dynamics rewards rmdp de•  show principle optimized using linear pro• fined schema level each class schema   gram learn value function optimizing specifies action ca sev•  relative sample environments encountered eral values doni example doni  agent prove polynomial number sampled en• wait harvest build each class associ•  vironments suffice construct classbased value function ated transition model  specifies proba•  close obtainable entire distribution bility distribution state object class   environments finally show improve given current state action taken    quality approximation automatically discover• states actions objects linked   ing subclasses objects similar value functions                                               present experiments systems admin• example status barrack barrackstaz   istration task freecraft tasks results show depends status previous time step   successfully generalize classbased value func• task performed peasant build   tions importantly approach obtains effective poli• barrackbuiltbytask wood gold   cies problems significantly larger planning algo•                                                           transition model conditioned state clt   rithm handle                         general entire set objects set                                                         peasants linked barrack provide    relational markov decision processes                compact specification transition model de•  relational mdp defines dynamics rewards pend state unbounded number variables   level template task domain given particu• deal issue using idea aggregation    lar environment domain defines specific mdp freecraft model uses count aggregator   instantiated environment prm framework probability barrackstatus transitions unbuilt    domain defined schema speci• built depends barrackbuiltbytask  built num•  fies set object classes each class               ber peasants barrackbuilby task build   associated set state variables       finally define rewards class level as•                   state object sume simplicity rewards associated   class each state variable cs domain possible states individual objects adding global dependencies   values doni define sc set possible    possible complicates planning significantly define   states object possible assignments reward function represents con•  state variables                                 tribution reward object example      example freecraft domain            reward function associated enemy class   classes peasant footman gold          specifies reward  state enemy object   class peasant state variable           dead enemystate  dead   assume   task domain dompeasanttask  reward each object bounded   waiting mining harvesting building state     given world rmdp uniquely defines ground fac•  variable health domain three values tored mdp transition model specified usual   case speasant  •    values each dynamic bayesian network dbn  random vari•  combination values task health            ables factored mdp state variables in•    schema specifies set links  dividual objects os each each               each class representing links ob• state given point   jects domain each link cl range        time vector defining states individual objects   example peasant objects linked barrack world subset variables model de•  objects peasantbuildtarget  barrack   fine sx instantiation corresponds   global gold wood resource objects com• variables ground dbn transition dy•  plex situation link relate instances namics specifies dependence variables time   class denote example              variables time parents variable    enemymyjfootmen indicates instance          state variables objects linked    enemy class related footman instances example peasants random     particular instance schema defined variables peasantltask peasanttask barracklstato   world specifying set objects each class use parents time variable barracklstatus          denote objects class de•   time variables barrackl status peasant ltask   note total set objects world spec• peasanttask goldl woodl   ifies links objects fixed transition model instances   time each link cl each class  ostatus variables                                                                                    probabilistic planning  figure  freecraft tactical domain schema resulting fac•   tored mdp world  footmen  enemies    barrack objects share conditional probability dis•   tribution note each specific barrack depends    particular peasants linked actual parents    dbn status variables different barrack    objects different      reward function simply sum reward func•   tions individual objects        reward function enemy class described    overall reward function given state     times number dead enemies state      remains specify actions ground mdp    rmdp specifies set possible actions object    world setting single action taken    time step agent choose object    act action perform object    set actions ground mdp simply union        domoi setting multiple actions    performed parallel say multiagent setting    possible perform action object domain    step set actions ground mdp setting state space exponentially large    vector specifying action object domoi state each joint assignment random variables    intermediate cases allowing degrees parallelism os object exponential number units   possible simplicity presentation focus mul• freecraft scenario multiagent problem number   tiagent case freecraft action assign• actions exponential number agents   ment action unit                      lp exponential number variables   example  freecraft tactical domain consider sim• exponential number constraints exact solu•  plified version freecraft schema illustrated tion linear program infeasible   fig classes units partici•          address issue using assumption   pate game value function wellapproximated sum   footman enemy classes state  local value subfunctions associated individual    variable each health domain domhealth        objects model approximation special    healthy wounded footman class contains         case factored linear value function approach used   singlevalued link footmanmyjenemy enemy  associate value subfunction   transition model footmans health  object simply local value function   depend health enemy                     depend state individual object sa                          footmans enemy     example local value subfunction   dead probability footman be• enemy object enemy  associate numeric value   come wounded die significantly higher foot• each assignment variable enemy jhealth richer   man choose attack enemy each foot•    approximation associate value function pairs   man associated action footmana se•   small subsets closely related objects   lects enemy attacking consequence                                                          world requires small extension basic representation       model action change link structure omit details lack space       probabilistic planning                                                                                                                                        does help provide value function objects                                                          worlds especially worlds different sets objects                                                             obtain generalization build intuition dif•                                                         ferent objects class behave similarly share                                                          transition model reward function dif•                                                         fer interactions objects local contri•                                                         bution value function similar example                                                          reasonable assume different footmen                                                          similar longterm chance killing enemies restrict                                                          class value functions requiring objects                                                          given class share local value subfunction                                                             formally define classbased local value subfunc•                                                         tion each class assume parameteriza•                                                         tion value function welldefined object                                                          assumption holds trivially scope                                                          simply simply parameter each as•     linear approximation value function signment dom local value function    lp approach adapted use value function rep• depend states neighboring objects    resentation  lp variables local compo• define parameterization accordingly example    nents individual local value functions        parameter each possible joint state                                                          linked footmanenemy pair specifically defin•                                                      ing separate subfunctions de•   example lp variable each joint fine classbased subfunction contri•   assignment fihealth elhealth represent com• bution footmanl global value function    ponents similar lp variables included         fhealthelhealth similarly footman    components                                     contribute fhealth ehealth      constraint each global state classbased value function defines specific value func•   each global action                                    tion each world sum classbased local                                                          value functions objects                                                                                                                transformation effect reducing number    free variables lp number objects times value function depends set objects    number parameters required objects local world local value functions involve related ob•   value function constraint each jects links importantly ob•   global state action exponentially large number jects class contribute function      guestrin koller parr  gkp show summation  argument function object    certain cases exponentially large lp solved state specific object neighbors    efficiently exactly particular compact solution given state contributions different objects    applies mdp factored represented class differ footman local    dbn approximate value function decomposed value subfunction parameters dead footman    weighted linear combination local basis functions lower contribution alive    assumptions gkp present decomposi•   tion lp grows exponentially induced  finding generalized mdp solutions    tree width graph determined complexity classlevel value function easily generalize    process dynamics locality basis function worlds as•     approach applies easily structure sume single set local classbased value functions    dbn representing process dynamics highly fac• good approximation wide range worlds as•   tored defined local interactions objects simi• suming set value functions act    larly value functions local involving single ob• new world replanning described step    jects groups closely related objects induced fig  simply define worldspecific value function    width resulting graph problems quite small  use act    allowing techniques gkp applied efficiently optimize way maximizes                                                          value entire set worlds formalize intuition    generalizing value functions                         assume probability distribution   approach provides principled way worlds agent encounters want sin•   decomposing highdimensional value function certain gle set classbased local value functions    types domains does help address generaliza• good fit distribution worlds view task    tion problem local value function objects world optimizing single metalevel mdp          nature chooses world rest dynam• worlds resulting classbased value func•   ics determined  precisely state tion used worlds sampled    space transi•                                     start sampling set worlds according   tion model obvious initial state nature define lp terms worlds   chooses world according initial state   possible worlds each world   according initial starting distribution lp contain set constraints form presented    states remaining evolution according eq  note worlds constraints share       dynamics example nature choose number variables represent classbased value function                                                          complete lp given    footmen enemies define links   yields welldefined mdpeg                variables    lp formulation                                        minimize   metamdp allows formalize task finding   generalized solution entire class mdps specifically   wish optimize classlevel parameters subject   single ground mdp entire      address problem using similar lp solu•  tion used single world sec    variables simply parameters local classlevel value   subfunctions    constraints recall objectbased lp formulation    constraint each state each action vector                                                            generalized solution state space marginalization vari•   union state spaces possible worlds ables each world constraints   constraint set union constraint form ones sec  sampled   sets each world each actions    worlds apply lp decomposition techniques                                                          gkp each world solve lp efficiently gener•                                                         alization algorithm summarized step  fig                                                           solution obtained lp sampled worlds    value function world defined general equal obtained worlds   class level eq  principle considered simultaneously show   additional constraint state natural quality approximations close sufficient num•  choice state relevance weights constraint elimi• ber worlds sampled specifically polynomial   nated objective function              number sampled worlds guarantee high                                                          probability quality value function approximation       minimize  obtained sampling worlds close obtained                                                          considering possible worlds                                                          theorem  consider following classbased value func•  models potential number   objects infinite make objective tions each parameters obtained lp   function unbounded prevent problem assume possible worlds minimizing eq  subject con•  goes zero sufficiently fast num•   straints obtained lp sampled   ber objects tends infinity understand assump• worlds  optimal value function meta  tion consider following generative process selecting mdp number sampled worlds polynomial   worlds number objects chosen according                           error bounded         classes links each object cho•  sen according using decomposition   intuitive assump•                                                         probability    tion described formalized                                                                     distribution               maximum perobject reward   number objects chosen arbitrarily long   bounded exponentially decaying function    proof omitted lack space online ver•                                                         sion paper uses techniques developed    sampling worlds                                    farias van roy  analyzing constraint sampling   main problem formulation size general mdps important differ•  lp — size objective number con• ences analysis includes error introduced   straints — grows number worlds sampling objective case sum   situations grows exponentially number possible subset worlds   objects infinite practical approach ad• lp metamdp issue previously ad•  dress problem sample reasonable number dressed second algorithm farias van roy re•  worlds distribution solve lp  lies assumption constraints sampled according       probabilistic planning                                                                                 
