                                    pushing     el   envelope                           franz baader    sebastian brandt     carsten lutz                                 intitute theoretical science                                           tu dresden germany                                      lastnametcsinftudresdende                          abstract                            reasons need expres                                                        sive dls supporting gcis applications mid      recently shown small descrip dl community mainly given quest      tion logic dl el allows conjunction  ﬁnding tractable dls instead investigated      existential restrictions better algorithmic expressive dls reasoning worstcase intractable      properties counterpart fl allows goal ﬁnd practical subsumption algorithms      conjunction value restrictions algorithms easy implement optimize      subsumption problem fl    which—though worstcase exponential worse—      tractable presence acyclic tboxes behave practice horrocks et al       mains tractable el general concept   line research resulted availability highly      inclusion axioms gcis hand ex  optimized dl systems expressive dls horrocks       tend positive result el identifying set haarslev moller¨  successful applications      expressive means added el notably recommendation wc dl      sacriﬁcing tractability hand based language owl horrocks et al  ontology      show basically additions typical language semantic web                      el      dl constructors  gcis make subsump         recently choice value restrictions sine qua non      tion intractable cases exptime dls reconsidered hand shown      complete addition show subsumption   dl el allows conjunction existential      fl  gcis exptimecomplete                                                       restrictions better algorithmic properties fl sub                                                        sumption el stays tractable wrt acyclic cyclic                                                        tboxes baader presence gcis    introduction                                       brandt  hand applications  quest tractable polynomialtime decidable value restrictions needed ex  scription logics dls started pressive power el small extensions thereof appear  ﬁrst intractability results dls shown brachman sufﬁcient fact snomed systematized nomen  levesque  nebel  recently restricted clature medicine employs el spackman   dls extending basic language fl allows acyclic tbox large parts galen medical knowledge  conjunction value restrictions ∀rc main rea base expressed el gcis transitive  son clarifying logical status property roles rector horrocks  finally gene ontol  arcs semantic networks slots frames decision ogy consortium  seen acyclic el tbox  taken arcsslots read value restrictions transitive role  existential restrictions ∃rc            motivated positive complexity results cited    subsumption concept descriptions trac use extensions el applications start  tability barrier investigated early dl el gcis investigate effect com  donini et al  soon terminologies plexity subsumption problem caused ad  tboxes taken consideration tractability turned dition standard dl constructors available ontology lan  unattainable simplest form acyclic guages like owl prove subsumption problem  tboxes subsumption fl languages ex remains tractable adding concept  tending conphard nebel  subsumption fl disjointness statements nominals singleton concepts  pspacecomplete wrt cyclic tboxes baader  restricted form concrete domains references num  kazakov nivelle  show pa bers strings restricted form rolevalue maps  exptimecomplete presence  general concept inclusion axioms gcis sup adding arbitrary rolevalue maps el known cause  ported modern dl systems                      decidability baader aname         syntax    semantics                      syntax lower table  note                    ∆i                             ﬁnite set gcis commonly called general tbox          ⊥       ∅                              use term cbox presence ris inter  nominal            ai                           pretation model cbox each gci ri                                                       conjunction       ∩                           conditions given column table                                                     satisﬁed deﬁnition semantics ris symbol  existential            ∈∆    ∃y ∈ ∆                 ∃rc                                “◦” denotes composition binary relations  restriction                ∈ ∧ ∈                                                           main inference problem considered paper                                             dj                         ∈∆    ∃y     yk ∈ ∆                            concrete   pf     fk                        subsumption given el   concept descriptions                           fi  yi  ≤ ≤ ∧  domain         ∈                                say subsumed wrt cbox vc                                 ∈                                    yk         iff ci ⊆ di models                               gci                ⊆                          remarks regarding expressivity el              ◦ · · · ◦ ◦ · · · ◦ ⊆  ri            rk       rk                   order restrict attention subsump                                                        tion el expressive reduce standard          table  syntax semantics el        reasoning tasks concept satisﬁability abox consistency                                                        stance problem subsumption problem vice versa  express transitivity rightidentity rule baader et al  second ris generalize three means                                            quired medical applications spackman   expressivity important ontology applications role hier  prove basically additions standard dl archies transitive roles expressed  structors lead intractability subsumption problem writing ◦ socalled rightidentity rules ◦  cases exptimehardness proofs important medical applications spackman  technical details accompanying  horrocks sattler  concept                                 technical report baader et al                  combination gcis used express disjointness                                                                                        ⊥                              el                      complex concept descriptions   says    description logic                              disjoint finally unique assumption individ  dls concept descriptions inductively deﬁned ual names enforced writing ⊥  help set constructors starting set nc concept relevant individual names  names set nr role names possibly set ni  individual names section introduce extension  tractability el  el  el concept descriptions formed using                                                        polynomialtime subsumption al  constructors shown upper table                                                         gorithm el introduce appropriate normal  general use denote individual names                                                        form cboxes given cbox use bcc denote  denote role names denote concept                                                        smallest set concept descriptions contains  descriptions                                                        concept  concept names used concept    concrete domain constructor provides interface                                                        scriptions form pf       appearing  socalled concrete domains permits reference                                                                                  normal form  strings integers formally concrete domain pair  ∆d pd ∆d set pd set predicate names  gcis following forms                                                                   ∈           ∈     ∪ ⊥  each ∈ associated arity   exten  bcc   bcc        sion pd ⊆ ∆dn provide link dl                                                                                    ∃rc  concrete domain introduce set feature names nf             ∃rc      table  denotes predicate concrete domain                                                                      el        fk feature names dl       role inclusions form ◦  equipped number concrete domains     dn                                                    introducing new concept role names cbox  ∆ ∩ ∆  ∅  ≤  ≤ want                                                                               turned normalized cbox conservative  stress use particular concrete domains                                               el                  el                   extension  model model   write           instead                 model extended model                     el          semantics            nconcept descrip appropriately choosing interpretations additional                                             ·i  tions deﬁned terms interpretation  ∆   concept role names baader et al  shown  domain ∆i nonempty set individuals                                                      transformation actually linear time  terpretation function · maps each concept ∈ nc                                                                          yielding normalized cbox  size linear  subset ∆  each role ∈ nr binary rela                                                      size   tion ∆  each individual ∈ ni individual                                                    lemma    subsumption wrt cboxes el   ∈ ∆  each feature ∈ nf partial function                                      ∆        ∆   extension · arbitrary duced linear time subsumption wrt normalized cboxes                ≤i≤n                                     el  concept descriptionss inductively deﬁned shown   column table                               following cboxes assumed normalized    el  constraint box cbox ﬁnite set general developing subsumption algorithm normalized  concept inclusions gcis role inclusions ris el cboxes restrict attention subsumption                    cr ∈ sc ∈ ∈ sc                                                        bcc deﬁned follows  iff       sc  sc ∪                                                            ck ∈ bcc               ∈             ∈      ∈   cr sc       sc          •    individual       sc  sc ∪                                                          • cj cj ∈ rrj rj ∈ rc  ≤            ∈        ∃   ∈         ∈   cr  sc    rd     rr         •          rr  rr ∪                                                                                  second rules cr cr use notion conjsic   cr ∈ rr ∈ sd ∃rd ∈                                                                   ∈                                         satisﬁability implication concrete domain          sc                                   predicate concrete domain  elconcept       sc  sc ∪                                                                                                              description pf     fn viewed atomic ﬁrst   cr ∈ rr ⊥ ∈ sd ⊥ ∈ sc       order formula variables     fn makes sense       sc  sc ∪ ⊥                          consider boolean combinations atomic formulae           ∈     ∩                      ⊆            talk formula satisﬁable   cr   sc  sd   sd sc                                                                 ∪                                ﬁrstorder interpretation       sc  sc sd                                                                                                                       mula implies set Γ el     dn   cr conj sc unsatisﬁable dj ⊥ ∈ sc concept descriptions  ≤ ≤ deﬁne       sc  sc ∪ ⊥                                                             conjΓ                    pf     fk   cr conj sc implies pf     fk ∈ bcc dj                                                                                                                                                                     ∈     ∈p          pf     fk ∈ sc                                pffk Γ       sc  sc ∪ pf     fk                                                        rules cr cr executable polynomial                                                                        ∈        ∈   cr pf     fk     fk  sc  time satisﬁability implication concrete domains                                                                                             ∈     fs  ft ⊥ ∈ sc      decidable polynominal time       sc  sc ∪ ⊥                          algorithm complete impose               ∈        ∈          ∈                additional condition concrete domains concrete   cr rr    rs                     rs  rs ∪                     domain   padmissible iff                                                                                                     ∈            ∈         ◦     ∈          satisﬁability implication decidable poly   cr rr rr            nominal time         ∈ rr       rr  rir ∪                     convex conjunction atoms form                                                            pf     fk implies disjunction atoms                table  completion rules                   implies disjuncts    concept names fact vc iff vc let show rules table  yield poly                                                                                               c∪a  new concept names nomial algorithm subsumption el     dn  subsumption algorithm computes subsumption provided concrete domains     dn  given concept names wrt normalized input admissible  cbox classiﬁes simultaneously computes following lemma easy consequence facts  subsumption relationships pairs concept each rule application adds element  names occurring                                 sets sc ⊆ bcc  ∪  ⊥ rc ⊆  bcc × bcc    let cbox normal form classiﬁed ii cardinality bcc polynomial size                                                                         use rc denote set role names used iii relation computed using polytime graph  algorithm computes                                    reachability iv concrete domains padmissible    • mapping bcc subset bcc ∪ ⊥ lemma  normalized cbox rules table                                                         applied polynomial number times each rule    • mapping rc binary relation bcc                                                        application polynomial  intuition mappings make implicit subsump  tion relationships explicit following sense     lemma shows subsumption relationships                                                        concept names occurring determined  ∈ sc implies vc                    completion algorithm terminated            ∈                    ∃  rr implies rd                lemma    let mapping obtained applica  algorithm mappings initialized follows tion rules table  normalized cbox                                                        terminated let concept names occurring    • sc   each ∈ bcc                                                        vc iff following conditions holds    • rr  ∅ each ∈ rc                                                          • sa ∩ ⊥  ∅  sets sc rr extended applying                                                          • ∈ bcc ⊥ ∈ sa  completion rules shown table  rule applies    rules use abbreviations need ifdirection lemma soundness immediately fol  introduced cr uses relation  ⊆ bcc ×   lows fact satisﬁed initialdeﬁnition application rules preserves  syntax semantics  trivial rules consider negation ¬c ∆i  ci  cr ∈ sc ∩ sd vc disjunction    ci ∪ di                                  ∃   · · · ∃                                                         implies     rk−d    value restriction ∀rc  ∀y  ∈ → ∈     vc ∃r  · · · ∃r −                                                                                    individual  atleast restriction   ∈ ∆  ∈  ≥  second case implies                     ∈       ∈  ≤   model ﬁrst case implies nonempty atmost restriction   ∆                                                                       ∃ −      ∃       ∈  ∧  ∈    model nonempty inverse roles      vc implies vc shows                                                                  table  additional constructors  rule cr sound preserves    show onlyifdirection lemma assume proved lutz  show  conditions hold use computed baader et al  convex                                                  mappings construct model ⊆ proposition  padmissible  bi  basically domain ∆i model consists                                                          interesting concrete domains  elements ∈ bcc  identify                                                      allow refer concrete numbers strings concepts  elements bcc individual                                                        use properties concrete predicates rea  ∈ sc ∩ sd interpretation concept                                                        soning predicates available concrete  role names determined ∈ bcc concept                                                      domains restricted unfortunately padmissibility     ∈ bcc   ∈ sc                                                      fragile property extend  role ∈ iff ∈ rr finally                                                        interesting predicates losing padmissibility  interpretation feature names determined                                                        illustration consider extension  assignments satisfying conjunctions conjsc                 ≤q                                                        concrete domain     extends additional  baader et al  detailed description                              ≤q                                                        unary predicates ≤qq∈q    conjunction  construction proof yields countermodel                                                          implies disjunction ≤f ∨ im  subsumption relationship vc                                           ≤                                                        plying disjuncts convex    sum shown following tractability result                            ∗              ∗                                                          consider concrete domain domain Σ                                                                                                 ∗  theorem  let     dn padmissible concrete ﬁnite alphabet Σ ∈ Σ  unary                              eld          mains  subsumption                wrt  predicates prefs suﬀs semantics  cboxes decided polynomial time                                                                   s∗        ∈ ∗                                                                              prefs        Σ   preﬁx  padmissibile nonadmissible concrete domains                s∗        ∈ ∗                                                                             suﬀs         Σ   sufﬁx    order   obtain concrete dls     form                                   ∗                                                      let Σ         conjunction suﬀ  el           theorem  ap                                                                                               implies disjunction pref ∨    ∨ pref  plies need concrete domains padmissible                                  following introduce concrete domains implying disjuncts  padmissible show small extensions                          el  longer padmissible                                     intractable extensions      gcis    concrete domain   pq domain set section consider sublanguage el el  rational numbers set predicates pq consists restrict attention general tboxes ﬁnite sets  following predicates                          gcis recall el obtained el dropping    • unary predicate                  concept constructors conjunction existential restric                                                                                                el    •                                  ∈              tion show extension      unary predicates each            basically typical dl constructor present el    • binary predicate                              sults intractability subsumption wrt general tboxes                                                        syntax semantics additional constructors used    • binary predicate each ∈                                                   section table  denotes          ∈                                                           cardinality set    concrete domain deﬁned Σ∗ ps Σ addition subsumption problem  iso  latin character set ps consistes consider satisﬁability problem concept descrip  following predicates                             tion satisﬁable wrt general tbox iff exists                                                                                                               ∗                  model   ∅ previous section    • unary predicate  Σ                                                         restrict attention satisﬁabilitysubsumption    •                             ∈   ∗      unary predicate each Σ               concept names wrt general tboxes    • binary predicate                                                         atomic negation    •                                ∈  ∗                     ¬                                          ¬      binary predicate concw each Σ      let el  extension el negation let el                                                               ¬      concw                             obtained el restricting applicability nega                                                                                                   ¬  polynomiality reasoning shown reduction tion concept names atomic negation el  linear programming polynomiality reasoning tational variant dl alc exptimecompleteness ofsatisﬁability subsumption alc wrt general tboxes nonpadmissible concrete domains                              ¬  schild  carries el  exptimecompleteness padmissibility concrete domains sufﬁ                      ¬  carries el  ¬c complex cient condition polynomiality reasoning el  replaced ¬a new concept add necessary nonconvex concrete domain  gcis                             subsumption eld exptimehard eld                  ¬                                                      el                          theorem  el   satisﬁability subsumption wrt extension concrete domain                                                         proof uses stronger version theorem  show  general tboxes exptimecomplete                                                        subsumption concept names wrt restricted elu tboxes  disjunction                                           exptimecomplete restricted elu tbox  let elu extension el disjunction subsump general el tbox extended single gci form  tion elu wrt general tboxes exptime elu baader et al   fragment alc obtain matching exptime lower subsumption problem restricted elu tboxes                                 ¬                                                        bound reduce satisﬁability el  wrt general tboxes reduced subsumption el follows let                                                                                               elu  subsumption elu wrt general tboxes end let concept names restricted tbox                                    ¬                 convex satisﬁable conjunction  concept general el tbox each                                                      atoms form pf     fk implies disjunction  concept occurring  new concept ∨    ∨  occurring  ﬁx additional new    atoms disjuncts  concept general tbox ∗ obtained assume minimal counterexample                           ¬                          minimal know does imply    replacing each subconcept  adding ∨   ∨  following gcis                                        each ai satiﬁable                                                        each assignment values satisﬁes    •   each ∈                                                       satisﬁes ∨  ∨am ii assignment satisfy    • ∃rl                                         ing ∨  ∨am iii assignment                                                                        ∨    ∨                    ∗  note ∃rl equivalent ¬l ∀r¬l satisfying    let ob                                                        tained replacing single gci  ensures acts concept connected coun                                                                           ai       easy  termodels vt ∗ using observation hard                                                        vt iff vt ∗  verify satisﬁable wrt iff vt ∗                                                                                                     theorem  elu subsumption wrt general tboxes theorem  nonconvex concrete domain  sub                                                                  el   exptimecomplete                                     sumption     wrt general tboxes exptimehard                                                        example theorem applies nonconvex concrete  atleast restrictions        ≥                                               domains introduced section   let el  extension el atleast restrictions                                      ≥  form   subsumption el  wrt general inverse roles                              ≥  tboxes exptime el  fragment alc  let eli extension el inverse roles show  extended number restrictions giacomo lenz subsumption eli wrt general tboxes pspace  erini  establish matching lower bound reduc hard reducing satisﬁability ale wrt primitive tboxes                                                        ale         el  ing subsumption elu wrt general tboxes let   extends   value restrictions atomic negation  concept names general elu tbox primitive tboxes ﬁnite sets gcis lefthand side  loss generality assume concept inclusions concept satisﬁability problem known  following forms                 pspacecomplete calvanese                                                           let  concept primitive ale tbox                ∃              ∃                                        rc          rd              assume loss generality contains                              concept inclusions following forms    concept names        ¬b   ∃rb  ∀rb                 ∗                       ≥  resulting tbox  convert el  cbox                                                                         concept names new  simulate each gci   introducing new                                           ∗                                                      cept deﬁne general eli tbox consist  concept names new role putting                                                        following gcis                   ∃ra ∃rb                       •  ∈        ∃ra                    concept form ∃rb                                                          • ∃ −              ∀    ∈  easy vt iff vt ∗                rb                       ≥                                       •                ¬   ∈  theorem  el    subsumption wrt general tboxes             exptimecomplete                                       • ∃rl  interested reader note similar reductions case elu concept inclusion ∃rl  used show exptimecompleteness el extended equivalent ¬l ∀r¬l ensures acts  role constructors negation union transitive concept connected countermodels vt ∗  closure                                              additionally ∃r−a clearly equivalent ∀rb
