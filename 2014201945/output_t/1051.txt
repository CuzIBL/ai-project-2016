                      mining closed sets multirelational data            gemma garriga∗                   roni khardon†                     luc raedt‡       dept science         dept science           machine learning lab  uni politecnica catalunya spain    tufts university usa        university freiburg germany      garrigalsiupcedu                 ronicstuftsedu          lucderaedtcskuleuvenbe                        abstract                          exist various possible settings approaches em                                                        ploy θsubsumption subgraph homomorphism graph      investigate problem mining closed sets  setting deﬁne frequency patterns dehaspe      multirelational databases previous work  toivonen  employ object identity sub      troduced different semantics associated algo sumption subgraph isomorphism malerba lisi       rithms mining closed sets multirelational nijssen kok  variation exist      databases insight implications mining single interpretation graph multiple      semantic choices relationships   interpretations finally authors raedt      lacking investigation shows ramon  raedt dehaspe  restrict im      semantic choices important   plication relation used deﬁning closures rangerestricted      imply different properties turn affect clauses addition differences notion      range algorithms sets closed set coupled closure operator takes      particular question sem set calculates closure way      inal lcm algorithm uno et al upgraded  deﬁne closures literature gives impression      multirelational problems lcm attrac different choices unimportant algorith      tive run time linear number mic issues studied independently semantics      closed sets does need store outputs investigation shows impression false se      order avoid duplicates provide posi  mantics matter      tive answer question seman investigation follows seminal paper uno et al      tic choices report experiments evaluate  utilized semantic properties itemset case      scalability applicability upgraded al provide effective enumeration algorithm closed      gorithm benchmark problems                    sets named lcm linear time closed pattern miner                                                        paper systematically explore different semantics    introduction                                       mining closed sets multirelational databases study                                                        effect applicability lcm results identify  problem mining frequent itemsets topic three types behaviors arise follows  intensive research agrawal et al  goethals deﬁnitions specify set closed  zaki  han et al  number make hard specify closure operator case  sets huge common efﬁcient deﬁnitions used closegraph yan han   strict search closed itemsets bastide et al  farmer nijssen kok  result setting  zaki  set closed supersets limited methods search applying reﬁnements  strictly lower frequency database collection fre bfs dfs mode closed set  quent closed sets contains information overall secondly stronger deﬁnitions specify closure op  collection frequent itemsets smaller erator yielding unique closures case enu  growing mining structured data merate closed sets iteratively extending closed sets  graphs generally multirelational databases “parent” search focused  notion closed sets imported setting warmr raedt ramon  richer setup raedt ramon  yan han   dehaspe toivonen  jimi maloberti   general agreement ap suzuki  follow normal ﬁrst order logic seman  propriate semantics closed multirelational patterns tics setting contribute enumeration algo    ∗partly supported mecd spanish goverment through grant rithm generalizing lcm just like simple algo  ap eu ihp marie curie fellowship rithms algorithm store previously discovered sets    †partly supported nsf grant iis research avoid duplicates output inducing memory  semester fellowship award tufts university      requirement    ‡partly supported eu ist fet project iq finally deﬁnitions provide unique closures  katholieke universiteit leuven                       each closed pattern unique “parent” closed pattern                                                    ijcai                                                     case claudien raedt dehaspe  each interpretation contributes element  setting semantics speciﬁed using substitutions cover set  variables clause case provide general single interpretation si setting database  ization lcm algorithm uno et al  does single conjunction natural notion coverage  need store previous sets    space constraints proofs details  omitted paper                                  coverssic dbθc    db  substitution θ                                                          notice cover set includes substitutions    problem deﬁnition basic insights               interpretations deﬁnitions   problems consider assume given  notions subsumption given  database db language patterns notion   different semantics liθ setting  “frequency” measuring pattern occurs learns interpretations using θsubsumption closely  database databases pattern expressed logi corresponds setting employed warmr dehaspe  cal notation assume familiarity basic notions toivonen  jimi maloberti suzuki  logic lloyd  following introduces lioi employs oisubsumption instead employed  tation terminology                               closegraph yan han  farmer nijssen    atom expression form pttn kok  finally siθ sioi settings learn  relation arity each ti term constant single interpretation shall siθ closely corre  variable paper employs conjunctions ∧···∧an sponds claudien’s setting raedt dehaspe   data terms atoms concrete objects problem ﬁnding frequent queries ﬁnding  refer interpretations conjunctions serve queries ∈lwhose frequency freqc db ≥  patterns terms variables ﬁxed threshold natural notion frequency  referred queries notice relations freqc dbcoversc db easy fre  arity  conjunctions correspond itemsets notice quency antimonotonic li setting adding  binary predicate consider atom conjunction decrease frequency  capturing edge relation graph graphs graph important property used frequent set miners  patterns form special case relational patterns                    shall represent conjunctions list notation remark  freq db antimonotonic                                                        si setting   consider query qx  aan conjunction atom pbyc                                                         subsumes  qxpx   interpretation  refer conjunction results adding            element conjunction index ci  substitution                                                        qxpx substitutions  preﬁx cie aaiasubstitution θ   vtvntn maps variables terms result si setting use notion relative fre  applying substitution θ expression expression quency deﬁned relfreqc dbfreqc dbdv  cθ variables vi simultaneously replaced domain set constants  corresponding term ti θ                  number variables appearing relative frequency                                                        tuitively appealing antimonotonic si setting    semantics frequent sets  relate data query employ subsumption remark  note data li set  inductive logic programming notions popular ting modify slightly interpret si                                                        setting standard transformation inductive  θsubsumption plotkin  θsubsumes logic programming example consider dataset                                             ⊆      exists substitution cθ interpretations paqa bqa                                                                 oisubsumption  malerba lisi  oi      add identiﬁer argument each pred                                                                                                               subsumes exists substitution icate collapse data interpretation db                                                                                             θ  vcvncn cθ ⊆ ci ia iab iac id ief  easy                                                                                                    different terms occurring          freqli db    coversli db   anti                                                        monotonic case case    refer cases subsumption denoted choice frequency criterion use   want identify substitution witness  ing subsumption say  substitution θ  closures  applied graphs notion corresponds subgraph  homomorphism subgraph isomorphism finding frequent itemsets special case frequent pat    forms databases considered learning tern mining li case mining frequent item  multiple interpretations li setting database sets patterns redundant typi  tains set interpretations case natural notion cally interested closed patterns consider item                                                                                               coverage                                           sets   thenfreq db                                                        freqa ddb item  said imply wrt          coversli dbd  ∈ dbc               database deﬁne                                                    ijcai                                                     deﬁnition  conjunction implies atom  semantics properties icp vary partic  database db denoted db   →  ular result unique algorithm  coversc dbcoversc pdb                      terminate case result  rules form → denote relational associa deﬁned  tion rules hold  cent conﬁdence example  consider using θsubsumption dataset  understood implications satisﬁed conjunc  pattern rxx implies  tions database expressions correspond rxxrxx rxxrxx  lational association rules called query extensions intro rxx add chain size  duced warmr dehaspe toivonen  case closure ﬁnite size procedure  database consists single interpretation does terminate  make sense allow atoms contain variables  appear reason resulting substitutions θsubsumption necessary restrict  comparable cf remark  case atoms added initial conjunction section   imposes rangerestriction requirement raedt gives solution gets problem abstracting  ramon  states contains variables properties itemset case different perspec  constants appearing resulting expression tive section  gives different solution si setting  simpliﬁed rangerestricted clause → cor presenting brieﬂy consider lioi set  responds pattern type induced claudien raedt ting used closegraph yan han  farmer  dehaspe                                    nijssen kok  closure procedure guar    itemset case closure set items deﬁned anteed terminate results need unique  set items existence tuple implied example  consider conjunctions  existence continuing illustration ver  ify closure wrt speciﬁed tuples ae ae  alternative characterization closed itemsets states ae  closure itemset corresponds intersection  tuples database subsumed itemset zaki database represents edgelabeled graphs   note intersecting itemsets corresponds com consider calculating closure  ennathen  puting minimally general generalizations patterns icp add ennb closed set enna  play important role work    ennb hand add ennc    itemset case motivates iterative closure proce closed set ennaennc  dure icp deﬁned note procedure em  ploys reﬁnement operator ρ computes atoms  normal form  added conjunction notice condition                                                       relational frequent pattern mining algorithms employ  db   →  interpreted according dif                                                        normalform based ordering patterns avoid investi  ferent semantics                                                        gating pattern use following                                                                                          closureinput pattern  qqnρ ref operator order similar nijssen kok   assume                                                        predicates constants ordered alphabetically    c ←                                                        addition employ special set variables zzz    repeat                                             ordered according index impose constants           findanatomp  ∈ ρc st db  c →              ←                                     smaller variables order atoms                                                induced order lists composed predicate      atom                                                       ﬁrst element list arguments following    output                                           order conjunctions induced order lists    ﬁrst consider general reﬁnement operator ρg im atoms conjunction listed order                                      ∈    poses restrictions  deﬁnition  normal form normal form nfc  theorems using normal form require following conjunction variables xxu cθ θ   syntactic version input output reﬁnement                                                       substitution xxu new variables                                                   operator assume uses variables zzu  cθ minimal order conjunctions  new variables introduced form contigu substitutions type   ous sequences starting xm does change  semantics does restrict form reﬁnements clearly normal form conjunction unique  refer case ρg section  assume normal form satisﬁes following useful properties  icp uses ρg following notion natural                                                        lemma    let qqqn conjunction  deﬁnition  closed conjunctions atoms conjunc mal form ≤ qqi normal form                 closure   tion closed                              ii inand subset indices ij                                                                  ≤             icp algorithm deﬁnes closure nondeterministic way   jk qqi preﬁx normal form                                                                            depend order atom additions depending qqiqj qjk                                                     ijcai                                                     liθthelgg      closure                             rellcminput closed pattern  way deﬁne closures itemset case inter  frequent return  secting covered tuples equivalent liθ set  closed pattern table return  ting apply wellknown lgg operator introduced storec closed pattern table                                                           output  plotkin thelgg ss conjunction atoms                                                         reﬁnements ∈ ρgc  θsubsumes sands                             ∅  addition conjunction s θsubsumes    coversli                                                        orcoversli           coversli  ss holds  plotkin  proved                                                                    skip reﬁnement  lgg deﬁned provided efﬁcient algorithm                                                                                            calculate nfclosurelggc  calculating lgg conjunctions note                         reduce lgg sets conjunctions        rellcmc      simply calculate lgg iteratively adding conjunction  return  time result process unique variable rellcm stores previously discovered closed sets  renaming regardless order adding conjunctions table way avoids calling procedure twice  downside size lgg grow set uses depth ﬁrst search each closed conjunc  product sizes input conjunctions total tion reﬁned possible ways closed algorithm  size grow exponentially number conjunctions checks resulting closed set discov                                                        ered output reﬁned identify  deﬁnition  lgg closure let conjunction db closed conjunctions algorithm started              closure                        database    lgg     lgg coversli db       ing rellcmclosure∅ clearly conjunction                                                        algorithm closed following theorem guar  note generalization lcm using idea lgg                                                        antees completeness closed conjunction  reported arimura uno  setting                                                        output algorithm  specialized ordered tree patterns matching rela  tion corresponds oi subsumption interestingly theorem    ∅ closed conjunction normal                                                                                                setting size lgg small          form closed conjunction literal                                                                                                  employ formal concept analysis fca ganter ∈ ρgc  nfclosurelggc  wille  show lgg closure produces ga                                              db          clearly run algorithm number calls  lois connection consider formal context   rellcm exactly number closed sets  set possible conjunctions par                  db                                    number calls linear discover patterns  tial orders ⊆  and   lwedeﬁneψc          maximum number patterns discovered  coversli db φslggs   ∈land      bounded branching factor reﬁnement operator  ⊆ db                                               times number closed sets  theorem  mappings φ ⊆ ψ  form galois                                                         si range restricted closures  connection speciﬁcally  ⊆ ⇒ φs   φs   ⊆ ψφsc   c ⇒  ψc ⊆ ψc    consider si setting θ oi sub   φψc                                          sumption argued section  need impose                                                        rangerestriction deﬁning closures icp  theorem  compositions Δ ψ · φ Δφ   · ψ   algorithm employs operator ρrrc gener  closure operators satisfy monotonicity ate atoms containing terms occurring                            ⇒  Δc   Δc   extensivity  Δc deﬁnition  range restricted closure closurerrc  idempotency ΔΔc  Δc                         closurec ρrr                                                                               closure        using result closed conjunctions formalized lemma shows rr behaved  coinciding closure Δccthe lemma  conjunction atoms qifdb   result establishes set interpretations → db →  database unique conjunction subsump complete generalization lcm need ensure  tion equivalence speciﬁc conjunction satis each conjunction unique parent algo  ﬁed number closed queries ﬁnite rithm does need store enumerated conjunctions  number interpretations database db  order avoid duplicates rellcm need    develop algorithm rellcm upgrades reﬁned notion closure extension following  ﬁrst algorithm uno et al  liθ case need generalizes corresponding ideas uno et al   notion closure extension allows directly  closed conjunction                    deﬁnition  core preﬁx let conjunction                                                        mal form core preﬁx corec preﬁx pr  deﬁnition  closure extension conjunction c nfc coverspr dbcoversnfcdb                                extension conjunction closurelggc notice working si setting cov   ∈        ρg                                              ers pr variables                                                    ijcai                                                                                                             min         rellcm                rellcmoi  deﬁnition  preﬁx preserving closure extension let  freq   closed   freq cf    closed  freq  cf  qqn closed conjunction normal form             conjunction c ppcextension                                                                                               nfclosurerrc ∈ ρgcie                                                                                          obtained adding atom taking closure             normalizing  atom satisﬁes pqforallq ∈ corecnote    table  effect decreasing minimum frequency thresh  normal form requires check old nctrer  variables patterns  larger atom corec     maximum depth bound   normal form operation deﬁning c does change  variables normal form                                                        nally note results section hold  reorder atoms rename atoms                                                        sioi siθ settings  let cjqqj preﬁx qjwhere  qj largest atom st qj cjp  preﬁx c means core preﬁx preserved  experimental evaluation  new atom appear qj         present empirical evaluation rellcm al  following statements show closures cores gorithm datasets experiments run pc  wellbehaved ppcextensions deﬁne unique parents pentium iv emt mhz linux   lemma   consider conjunction normal form    ﬁrst dataset nctr estrogen receptor binding  subset c  ⊆    corec atom  p∈     database nctrer containing  molecules including                                                        bond structures each molecule separate structure  closurerrcclosurerrc    ⊆  closurerrc                                                        natural li setting data viewed   closurerrc    closurerrcorecp                                                        db     dn discussed remark   closurerrcorecc                                                        embed data si setting suitable rellcm    worth noting  lemma vio doing use coversli db                                                   lated lgg closure cases coversli tion frequency use proper coverssic ∪idi          core    coversli       closures different   implication closure calculation  theorem   let closed conjunction c ppc ﬁrst investigate effect increasing frequency  extension obtained condition deﬁnition  threshold nctrer dataset patterns  coreccjp cj given condition tain  variables depth bound  table  sum  deﬁnition    let c closed conjunction marizes results rellcm relclm ob  normal form let corecl ject identity rellcmoi table reports number  junction atom  let closurerrl patterns each case associated run time paren                            let nfcthenc  ppcextension theses table gives results enumerating fre  conjunction holds         quent queries using levelwise style algo    caveat consider set closed rithm ﬁrst observation oi restriction  patterns inﬁnite adding variable changes substantially decreases number frequent closed                                                        sets partly explains speed systems using  semantics conjunction employ  “depth bound” patterns searched algorithm striction reported literature effect                                                        ing closures calculate compression factor cf  started calling rellcmclosure∅          closed                                                        − freq × semantic settings  rellcminput closed pattern  qqn          closures decrease number patterns runtime     violates depth bound return               investigate effect increasing number     frequent return                  variables nctrer dataset ﬁxed threshold     output                                           maximum  depth bound   results     reﬁnements ∈ ρgc          summarized table  rellcmoi   andstp         greater atoms corec scales better rellcm increasing            coverssic  ∅                    number variables use closures signiﬁ             skip reﬁnement                       cantly reduces number patterns runtime                                          calculate nfclosurerrc   observe cf  increases vari   letcjqqjwhere                           ables considered example closed                   qj largest atom qj structures enumerated captures active molecules                 cjp preﬁx c         dsstox idsxactivexatomx ‘c‘atomx ‘o‘                                                        rellcmc                    bondx singlebondx double    return                                                           direct comparison previous carmr raedt    previous section number calls rellcm ramon  possible forces use syntac  exactly number closed sets notice ppc tic constraints rellcm forbids outputs different  extension restriction reduces branching factor fi httpwwwepagovncctdsstoxsdf nctrerhtml                                                    ijcai                                                     
