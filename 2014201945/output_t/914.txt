                                  range     roots   constraints                          specifying    counting      occurrence      problems∗    christian bessiere   emmanuel    hebrard       brahim  hnich        zeynep   kiziltan        toby  walsh   lirmmcnrs           nicta   unsw            ucc                 deis           nicta    unsw  montpelier france     sydney australia           ireland       univ di bologna  italy sydney  australia  bessierelirmmfr   ehebrardnictacomau   brahimcuccie    zkiziltandeisuniboit twcseunsweduau                          abstract                          generalized arcconsistency nphard decomposition                                                          method obtain polynomial propagation algorithm        propose simple declarative language spec                                                          remaining cases show decomposition hinders        ifying wide range counting occurrence                                                          propagation exists specialized polyno        constraints speciﬁcation language exe                                                          mial propagation algorithm global constraints        cutable immediately provides polyno                                                          implemented integrated solver language        mial propagation algorithm illustrate ca                                                           attractive case provide generic        pabilities language specify dozen                                                          means propagating counting occurrence constraints        global constraints taken literature ob                                                          absence specialized algorithm experiments        serve three outcomes achieve general                                                          demonstrate efﬁcient effective way rea        ized arcconsistency achieve general                                                          son counting occurrence constraints practice        ized arcconsistency achieving generalized arc        consistency nphard achieve gener        alized arcconsistency specialized propagation  formal  background        algorithms polynomial time experi  constraint satisfaction problem consists set vari        ments demonstrate speciﬁcation language ables each ﬁnite domain values set        efﬁcient effective practice       straints specifying allowed combinations values subsets                                                          variables use capital letters variables      introduction                                       lower case values di write                                                          dx  domain variable solution    global constraints central success constraint pro signment values variables satisfying constraints    gramming global constraints allow users specify patterns variable ground assigned value consider    occur problems exploit efﬁcient ef integer set variables constraint deﬁned    fective propagation algorithms pruning search space integer set variables set variable    common  types global constraints counting represented lower bound lbs    occurrence constraints occurrence constraints place restric tains deﬁnite elements upper bound ubs    tions occurrences particular values instance contains deﬁnite potential elements each set variable    wish ensure value used set vari equivalent sequence  variables representing    ables occurs second set counting constraints characteristic function variable sequence  iff    hand restrict number values variables meet corresponding element set    ing condition example want limit given constraint bound support tuple    number distinct values assigned set variables assigns each integer variable value minimum    different counting occurrences constraints pro maximum each set variable set lower    posed help model wide range problems especially upper bounds satisﬁes hybrid support                                               involving resources example regin´  tuple assigns each integer variable value    beldiceanu contejean  regin´  beldiceanu domain each set variable set lower                                  beldiceanu et al                      upper bounds satisﬁes involves inte      show constraints speciﬁed ger variables hybrid support support constraint    using simple declarative language speciﬁcation lan                                                          bound consistent bc iff each integer variable xi    guage executable decomposes constraints minimum maximum values belong bound support    simple primitives polynomial propa                                                          each set variable sj  values ubsj belong    gation algorithms cases show decompo bound support values lbs     sition does hinder propagation cases achieving                                                                                              long sj bound supports constraint hybrid      ∗       brahim hnich currently supported science foundation ire consistent hc iff each integer variable xi value    land grant pic                    dxi belongs hybrid support each set vari                                                                                                −  able sj  values ubsj  belong sj holds roots       hybrid support values lbsj belong sj   roots        holds  hybrid supports constraint involving integer vari range        xi assigned   ables generalized arc consistent gac iff each variable associated report discuss propagate  xi value dxi belongs support        global constraints enforcing hc range    enforcing hybrid consistency constraint equiva straint polynomial ond  · lbt  al  lent enforcing gac set variables represented gorithm maximum domain size xi en  characteristic function variables inte forcing bc roots constraint ond unfortunately  ger variables hybrid consistency reduces generalized arc enforcing hc roots constraint nphard neverthe  consistency variables set variables hybrid cases needed polynomial example  consistency reduces bound consistency             xi ground ground enforcing hc    compare local consistency properties applied rootsx  xn  ond  sets logically equivalent constraints  debruyne bessiere  local consistency property  range constraints  Φ strong Ψ iff given domains Φ                                                        associated report present catalog containing  holds Ψ holds Φ stronger Ψ                                                         global constraints beldiceanu  speciﬁed  iff Φ strong Ψ vice versa Φ                                                        simple language room present just  equivalent Ψ iff Φ strong Ψ                                                        important constraints subsequent  vice versa Φ incomparable Ψ iff Φ                                                        three sections list global constraints  strong Ψ vice versa                                                        speciﬁed using range constraints using roots constraints    total function set set denoted                                                        using range roots constraints   −→ domain range  set elements domain  different  image ∈ −j   fi  image  set ⊆ fs      fi whilst alldifferent   constraint forces sequence vari                                  si∈s                  ables different values each  domain set ⊆ −t   −j                                        sj∈t            straint useful wide range problems allocation  view set variables xn                                                    activities different slots timetabling problem  function    −→ si dxi propagated efﬁciently regin´   value xi                                          decomposed single range constraint      speciﬁcation   language                                    alldifferentx   xn iff  propose simple declarative language      rangex   xn    ∧    specify different counting occurrence constraints special important case constraint  speciﬁcation language executable permits                                                        permutation constraint alldifferent  decompose each global constraint primitive constraint additionally know set values  straints each associated polynomial prop taken sequence variables permutation  agation algorithm cases decomposition does values  decomposed  hinder propagation cases enforcing local                                                        using single range constraint  sistency global constraint intractable decom  position method obtain polynomial propagation                                                                     permutationx   iff  algorithm speciﬁcation language consists simple non                             global constraints integer variables like ≤ sim       rangex  xn    ple nonglobal constraints set variables like ⊆ decomposition permutation constraint ob   special global constraints acting se viously does hinder propagation decomposi  quences variables roots range                tion alldifferent range constraint does    given function representing set variables addition hc range decomposition incomparable  xn range constraint holds iff set variable ac decomposition alldifferent uses  range function restricted indices belonging clique binary inequality constraints able  second set variable                               obtain pruning using decompositions          rangex  xn  iff       theorem   gac permutation   equivalent hc    roots constraint holds iff set indices decomposition range gac alldifferent  map element                               stronger hc decomposition range                                        −              ac decomposition alldifferent binary         rootsx  xn  iff        equalities incomparable hc decomposition    roots range  exact inverses range range  straint hold corresponding roots constraint proof consider  ∈        ∈  vice versa instance range          ⊆ ⊆     thenrangex        introduce yj ∈ −y ϕ model iff uses  hc alldifferentx gac   constraint satisfying assignment true iff xi   sider ∈   ∈                                                              ac     way propagate uses constraint decompose  rangex     hc consider using range constraints  ∈      ∈   ⊆ ⊆      rangex             usesx  xn  ym iff  hc        ac                                                            rangex   xn    ∧  result holds immediately                                                                                                                                     rangey  ym    ∧ ⊆    number  values                                  enforcing hc decomposition polynomial  nvalue  constraint useful wide range problems surprisingly hinders propagation  involving resources counts number distinct val polynomial algorithm nphard problem  ues used sequence variables pachet roy                                                         theorem   gac  uses stronger hc  nvaluex   holds iff    ≤ ≤                                                    composition  alldifferent constraint special case  nvalue  constraint  unfortunately proof consider ∈     ∈      nphard general enforce gac nvalue constraint ∈    ∈   ∈   ∈  bessiere et al  logn   decomposition hc gac uses prunes  algorithm enforce level consistency similar bc  domain  domain   beldiceanu  alternative simpler way decomposition simple method obtain poly  implement constraint range constraint nomial propagation algorithm            nvaluex  xn iff                      roots  constraints          rangex  xn    ∧   range constraints useful specify constraints                                                        values used sequence variables roots constraint    hc decomposition incomparable bc                                                        hand useful specify constraints  nvalue  constraint                                                        variables taking particular values  theorem  bc  nvalue  incomparable hc  decomposition                                          global cardinality  proof consider  ∈    ∈      global cardinality constraint introduced regin´     ∈       ⊆     ⊆         constrains number times values used  rangex       consider generalization number oc  hc enforcing bc nvaluex  currences value integer variable  prunes                                 gccx  xn  dm  om holds iff    consider ∈    ∈       xi  dj   oj gcc constraint  nvaluex bc enforcing hc  decomposed set roots constraints  rangex     makes  ⊆ ⊆    cause    fail                    gccx  xn  dm  om iff                                                                ∀i  rootsx     ∧      uses                                                                                     beldiceanu et al propagation algorithms achiev enforcing hc roots constraints polynomial  ing gac bc proposed usedby constraint sets di ground enforcing gac general                                                              cc  usedbyx   xn  ym holds iff multiset ized constraint nphard enforce gac  values assigned  ym subset multiset xi bc oj polynomial time using special                                                                                        values assigned  xn introduce vari ized algorithm quimper et al    ant usedby constraint called uses constraint achieved decomposition   ses                    xn   ym holds iff set values theorem  gac xi bc oj gcc  signed  ym subset set values assigned constraint stronger hc decomposition using   xn usedby takes account num roots constraints  ber times value used uses does unlike  usedby  constraint enforcing gac uses nphard proof sets represented bounds hc                                                        decomposition prune oj bc does                              ses  theorem  enforcing gac    nphard           gcc show strictness consider ∈    proof  reduce sat problem deciding ∈    di  ∈    uses constraint solution finding support decomposition hc  ⊆ ⊆     nphard consider formula ϕ boolean variables  ⊆ ⊆  enforcing gac xi  clauses each boolean variable introduce vari bc oj gcc constraint prune    able xi ∈ −i each clause cj  ∨ ¬y ∨                       example illustrates whilst global number variables using particular value whilst  straints expressed terms roots range atleast puts lower bound decomposed  global constraints like gcc ing roots constraint hindering propagation  worth developing specialized propagation algorithms  theless roots range provide means propagation  range   roots  constraints  constraints absence specialised algorithms                                                        global constraints need roots range                                               straints speciﬁcations    constraint introduced chip help   assign nvalues  model resource allocation problems like car sequencing bin packing knapsack problems wish  beldiceanu contejean  counts number assign value bin each item place  variables using values given set amongx  xn constraints values appearing each bin   dm holds iff   xi ∈  dm stance steel slab design problem prob    decomposition using global cardinality constraint csplib assign colors slabs orders  gcc introduced regin´  follows       limited number colors each slab                                                        assignnvalues         holds iff            amongx   xn  dm iff                                                                                          yi  xi  ≤ each beldiceanu   gccx  xn  dm  om ∧ oi  decomposed set roots range constraints      unfortunately decomposition hinders propagation    assignnvaluesx    xn  yn iff  theorem  gac    stronger gac      ∀j  rootsx  xn sj  ∧  decomposition using gcc                                                              rangey  yn sj  tj ∧ tj  ≤  proof consider                                         ∈      ∈               decomposition hinders propagation considers val            decomposition gac en             ∈                                    ues separately constraint generalizes  forcing gac amongx prunes                                                         nvalue  enforcing gac nphard decomposition                                                                          method obtain polynomial propagation algorithm    alternative way propagate constraint  decompose using roots constraint               common                                                        generalization alldifferent         amongx      iff                                                    straints introduced beldiceanu  common         rootsx     ∧                                                     constraint commonn   xn  ym en    polynomial enforce hc case roots sures   ∃j xi  yj    ∃i xi  yj   constraint target set ground decomposition variables xi values common yj  does hinder propagation potentially variables yj takes values common xi prove  attractive method implement constraint  expect enforce gac constraint                                                        nphard general  theorem  gac   equivalent hc                                                                                    ommon  composition using roots                              theorem   enforcing gac       nphard  proof    sketch suppose   decomposition   proof  use transformation sat                                                        sider formula ϕ boolean variables clauses  rootsx  xn  dm                                                         each boolean variable introduce variable xi ∈  hc variables xi divide three categories                                                        −i each clause cj  ∨ ¬y ∨ introduce  domain contains elements  dm  minn vars domain contain yj ∈ −y let ∈    ϕ                                                        model iff common constraint solution  elements − maxn vars                                                  domain contains elements set xi literals true model                                                          way propagate common constraint decom  outside consider value variable xi ﬁrst  category construct support value assign pose range roots constraints  remaining variables ﬁrst category values                                                                commonn    xn  ym iff   dm total number assigned values  minn assign sufﬁcient number variables        rangey  ym    ∧  second category values  dm        rootsx  xn  ∧  ∧  bring count minn assign       rangex   xn    ∧  remaining unassigned xj values outside  dm                                                                rootsy    ∧   finally assign minn support constructed                   variables categories similar way enforcing hc decomposition polynomial  value minn maxn  composition offers simple promising method    atmost   atleast  constraints closely propagate common constraint surprisingly  lated atmost   constraint puts upper bound composition hinders propagationtheorem  gac  common   stronger hc enforcing hc  decomposition polynomial   decomposition                                        ground equivalent enforcing gac  proof consider     ∈   ∈ domain  constraint    ∈   hybrid consistency decomposi contiguity constraint ensures sequence  tion enforces  ⊆ ⊆        variables taking value  appear contiguously  pruning xi yj  enforcing gac discrete form convexity constraint  commonn   prunes  troduced maher  model hardware conﬁguration                    problem decomposed roots constraint    symmetric  different                                                              contiguityx  xn iff  certain domains need ﬁnd symmetric solutions                                                              rootsx    ∧  example sports scheduling problems team                 assigned play second team    maxs  ∧   mins ∧   −    assigned play ﬁrst symalldiffx  xn en polynomial enforce hc case  sures  iff  regin´  decomposed                                                    roots  constraint unfortunately decomposition hinders  set roots range constraints                                                        propagation consider ∈   ∈  hc                                                        decomposition enforce   ⊆ ⊆          symalldiffx   xn iff                                                         ∈  ∈     prun      rangex  xn     ∧                                                        ing happen xi enforcing gac                        ∀i  rootsx   xn si ∧ xi ∈ si ∧ si   contiguityx  xn prune     polynomial enforce hc cases roots whilst roots range specify concepts quite dis  constraint alldifferent constraint tant counting occurrences like convexity dis  effective use specialized propagation algorithm crete derivatives need algorithmic  like regin´                           ideas propagate effectively  theorem  gac  symalldiff  stronger hc  decomposition                                       experiments  proof consider ∈   ∈   ∈   three sections demonstrate global   ⊆ ⊆    ⊆ ⊆    ⊆ ⊆   straints speciﬁed terms roots range  decomposition hc enforcing gac straints argued speciﬁcations exe  symalldiffx  detect unsatisﬁability  cutable certain cases provide efﬁcient effective    knowledge constraint integrated propagation algorithms section support ar  constraint solver decomposition provides gument means experiments  means propagation symalldiff constraint                                                                  gccsum        gccroots        roots                                                         size                                counting   occurrence                                                                                                                range  roots constraints useful specifying                                                                                     wide range counting occurence constraints nev            ertheless expressive power permits use specify            constraints    element  constraint introduced van hentenryck table  mystery shopper instance run  minutes  carillon  indexes array variable time limit fails cpu time averaged  precisely elementi  xn holds iff xi  instances solved each method  use constraint look price com  ponent included conﬁguration problem element  used model mystery shopper problem cheng  constraint decomposed range constraint et al  helmut simonis appears csplib  hindering propagation                            model contains gcc constraint number                                                          constraints ilog’s solver contains gcc        elementi  xn iff     ∧                                                         constraint implement                 range             ∈    ∧   ∈   ∧                           gcc sum  constraint directly roots     wish channel variable se gives models gccsum gccroots resp  quence  variables representing possible values taken consider model roots variation  variable domainx  xm constraint gccroots decompose gcc constraint using  troduced refalo  ensures  iff xi   roots order generate range instances used  decomposed roots constraint            following protocol duration weeks num                                                        ber varieties shoppers visits salelady number        domainx   xm iff                    areas set  original problem number        rootsx  xm  ∧   ∧ ∈   saleladies takes value      
