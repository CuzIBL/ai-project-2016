tractability result reasoning incomplete firstorder knowledge bases                                           yongmei liu hector levesque                                             department science                                                   university toronto                                             toronto canada ms                                               yliu hector cstorontoedu                               abstract                                 rest paper organized follows                                                                  section review proper kbs prove new property        previous work levesque proposed extension                                                                  locality define answers open queries        classical databases allow certain                                                                  section  review complexity database query evalu­       form incomplete firstorder knowledge                                                                  ation present polynomial time algorithm evaluating        extension sufficient make logical de­                                                                 kguarded formulas section  show use al­       duction undecidable proposed alterna­                                                                 gorithm evaluate queries wrt proper kbs obtain        tive reasoning scheme desirable logical prop­                                                                 tractability result section  illustrate query eval­       erties claimed proof                                                                  uation method proper kbs example queries        reasoning implemented efficiently using                                                                  finally section  future work        database techniques projections joins        paper substantiate claim show        adapt bottomup database query evalu­       ation algorithm purpose obtaining        tractability result comparable exist        databases      introduction   argued levesque  deductive   technique efficient feasible knowledge bases   kbs size seemingly required commonsense rea­  soning deduction underlying classical database query   evaluation databases re­  stricted serve representational scheme common  sense reasoning require things com­  plete knowledge domain levesque proposed gener­  alization databases called proper knowledge bases   allow limited form incomplete knowledge despite   limitations deduction problem proper   kbs longer decidablc levesque proposed al­  ternative reasoning procedure proper kbs logi­  cally sound query certain normal form    illustrate idea proper kb imagine scenario in­  logically complete argued      volving robot security guard keeping track occupants   possible implement large kbs using database      rooms building robot some­  techniques proof given                       entered left room going room     paper examine proper kbs procedure     occupants express robot   closely prove tractability result type know using proper kb   logical reasoning comparable exist   classical database query evaluation particular adapt   bottomup database retrieval algorithm case proper   kbs show cases     possible reason efficiently incomplete knowl­      think beliefs initial state world   edge logically sound complete way     possible generalize notion proper kb deal   efficiently database                         state change section  discussion       automated reasoning                                                                                                     note information expressed traditional   database leave open occupants   room  hand facts requiring disjunction ex­  istential quantification expressed proper   kb room having three occupants      hard problem determining   sentence logically entailed proper kb   undecidable kb reduces   classical validity levesque  proposed reasoning   procedure instead given proper kb query re­  turns three values  known false  known true     unknown follows                                                                   proof follows theorem taking  bijection                                                                 swaps leaves rest constants unchanged ■                                                                    locality        invariance renaming   difficulty arises attempting reason   proper kbs fact unlike databases   fix domain advance upper bound                                                                  answers open queries       behave allow define   finite versions answers open queries shown   notation let formula set formulas let    bijection use denote each          classical validity problem undecidable   function symbols                                                                                                  automated reasoning                                                                 naturally research efforts gone finding                                                                 classes queries proven tractable                                                                 worst cases earliest result form yan­                                                                nakakis  showed acyclic conjunctive queries                                                                 evaluated polynomial time result ex­                                                                tended ways extension chekuri                                                                 rajaraman  showed conjunctive queries                                                                 bounded tree width tractable later gottlob et al                                                                  introduced notion hypertree width showed                                                                 conjunctive queries bounded hypertree width                                                                 tractable bounded hypertree width generalizes notions                                                                 acyclicity bounded treewidth recently flum et al                                                                  generalized notions acyclicity bounded                                                                 treewidth conjunctive queries nonrecursive stratified                                                                 datalog nrsd known expres­                                                                sive power firstorder logic showed acyclic    complexity database queries                          bounded treewidth nrsd tractable inspired                                                                 work gottlob et al  extended notion hypertree    overview                                               width nrsd obtained nice logical characterization   complexity query evaluation main   hypertree width showed kguarded fragment   pursuits database theory traditionally com­ firstorder logic expressive power nrsd   plexity measures combined complexity data complexity     hypertree width kguardcd firstorder logic   vardi  combined complexity measured terms       turns largest tractable class queries far   combined size database query chan­  dra merlin  proved combined complexity      evaluation algorithm   conjunctive queries queries expressed firstorder for­  mulas form   atoms npcomplete vardi proved com­  bined complexity firstorder queries pspacecomplete   main factor responsible high complexity   size query size database   contrary situation practice normally eval­  uate small queries large databases data complexity   measures complexity query evaluation solely terms   size database treats size query section introduce kguarded fragment £   constant folk result firstorder queries evalu­ explicitly present polynomial algorithm evaluating   ated time size database  kguarded formulas databases analyze com­  size query data complexity firstorder plexity use algorithm evaluate kguarded for­  queries ptme complexity hardly    mulas respect proper kbs   qualify tractable exponent small say      yannakakis  suggest parameter­  ized complexity downey fellows    appropriate complexity measure database query evalua­  tion query evaluation fixedparameter tractable   computable function   —► constant   problem solved time  • nc    size query database respectively   papadimitriou yannakakis  proved param­  eterized complexity conjunctive queries wlcomplete   likely fixedparameter tractable re­  fer reader grohe  survey parameterized   complexity database theory     database query evaluation general hard note cguarded sentence strictly kguarded   respect combined parameterized complexity      evaluation algorithm strictly  database queries work quite practice    guarded formula query turns formula   large databases careful examination hard­  ness results show depend queries   somewhat atypical applications databases represent­  ing graphs queries asking existence cliques       automated reasoning                                                                                                      evaluation algorithm worstcase time com­      complexity    plexity exponential fixed algo­ section consider hard compute    rithm polynomial impractical large surprisingly easier database query evaluation                                                                  significant reasonable assump­                                                                 tions harder      presenting evaluation algorithm recall   basic notions relational database theory database    intractability results    instance simply logical structure interpretation theorem  combined complexity nphard   finite domain let structure domain     conjunctive queries ps pacehard firstorder   let sets variables xrelation   queries parameterized complexity hard                                                                  conjunctive queries                                                                  proof proof essentially database                                                                  query evaluation conjunctive queries reduction                                                                  clique problem firstorder queries reduction                                                                  qbf quantified boolean formula ■                                                                     tractability result       algorithm computing answers       relation subset obtained   joins guards size nk     present examples transformation sec­  assuming relations start sorted form results tion note following correctness result   operations kept sorted form computed time    time overall ln  ■  positive resp negative occurrence                                                              scope resp odd number negations                                                                                                   automated reasoning    theorem says finite version answers   open queries correspond exactly answers   database constructed consequence   locality following lemma                                                                     proof follows previous corollary fact                                                                 logically sound complete queries nf ■                                                                   note bounds identical database coun­                                                                terparts modulo factor cases                                                                 small large kb expect                                                                 large ep databaselike cases                                                                 relational corelational case                                                                 relational corelational following                                                                      example                                                                 illustrate query evaluation work proper                                                                 kbs return example robotic scenario mentioned                                                                 section involving predicate ln person room                                                                 example en given relational                                                                 form ein given unrestricted form make                                                                 things interesting assume predicates                                                                 mgr personperson saying person man­                                                                ager second employees                                                                 assume mgr given closed database predicate                                                                 cmppersonperson saying persons                                                                 compatible assume robot knows      obtain tractability result open queries proper                                                                 people compatible   pairs   kbs need ensure database queries con­                                                                pairs robot knows pairs compatible   struct kguarded use eval procedure                                                                       example querieswith guards underlined         main complexity result       automated reasoning                                                                                                   
