                            shape classiﬁcation retrieval                                    graham mcneill sethu vijayakumar                                institute perception action behavior                 school informatics university edinburgh edinburgh uk eh jz                     email gjmcneillsmsedacuk sethuvijayakumaredacuk                          abstract                          shape matching required transformations represent                                                        chosen deﬁnition shape operations      present novel correspondencebased tech     leave shape unchanged      nique efﬁcient shape classiﬁcation retrieval paper introduce simple generic technique      shape boundaries described set ad hoc shape classiﬁcation retrieval shapes represented      equally spaced points – avoiding need ex  potentially large number points boundaries      tract “landmark points” formulating corre points lie ﬁxed intervals terms distance      spondence problem terms simple generative boundary radial angle gives accurate ro      model able efﬁciently compute matches  bust description shape avoids somewhat arbitrary      incorporate scale translation rotation decision constitutes good point high compu      ﬂection invariance hierarchical scheme    tational cost associated using points reduced      likelihood cutoff provides additional speedup three ways firstly hierarchical approach avoids need      contrast shape descriptors concept consider possible label assignments secondly potential      mean prototype shape follows naturally correspondences considered simultaneously clear      setting enables model based classiﬁcation  winner emerges early computation finally      greatly reducing cost testing phase equal classiﬁcation problems algorithm produces class means      spacing points deﬁned terms ei   associated variances each point allows model      ther perimeter distance radial angle shown based classiﬁcation requiring fewer shape comparisons      combining leads improved classiﬁ testing stage considering distance angle      cationretrieval performance                     based descriptors accurately wider range                                                        shapes increase classiﬁcationretrieval accuracy    introduction                                       effectiveness method demonstrated bench                                                        mark data set compared stateoftheart methods  object recognition problems examples ﬁeld  easily disambiguated basis shape  opposed  features color texture classiﬁcation  objects extracted image database intuitively  method  formulated shape classiﬁcation task present wish develop generic techniques classifying  fast general algorithm classiﬁcation retrieval trieving shapes important issues consider  objects                                              firstly ultimate goal work large data sets    recent work area uses ﬁnite set computational expense important factor sec  points taken object’s boundary shape repre ondly shapes involved diverse large  sentation points selected basis maximal differences classes example class  curvature super  distance centroid zhang consist jagged shapes smoothly  et al  criteria deemed suitable class curved shapes implies overly speciﬁc models  shapes involved sophisticated approaches parameter shape variation avoided  ize boundary closed curve slide points  outline minimize objective function wang et al  shape correspondence   methods produce good results generally given shapes wish optimally align order  use expensive optimization algorithms alternative ﬁnd observe genuine differences shape shapes  ing ‘correct points’ simply place points roughly represented set points necessary ﬁnd  equal intervals boundary belongie et al belongie best match possible label assignments fig  et al  used approach effectively work paper use deﬁnition shape statistical shape anal  shape contexts                                       ysis dryden mardia  shape set    having chosen represent objects solve labelled points information invariant ro  correspondence problem order compare shapes tation scaling translation addition  illustrated fig valid set transformations consider reﬂection valid transformation allowingfigure  identical shapes left large symbols indicate figure  shapes class each described  corresponding points random assignment labels  points left  linear interpolation used aid visu  align shapes ﬁnd correct labels alization correspondence algorithm correctly cycles  correct transformations right                  labels shapes aligned right                                                                                                                                                                 dryden mardia   have ﬁxed cycling   basic transformations reﬂects lack prior knowl                         edge shape classes involved formulate unit sized shapes       correspondence problem probabilistic fashion        min dx y−w∗z  enable correspondences chosen minimal compu         Γst  tational cost                                        w∗ denotes conjugate transpose absorbing                                                        size normalization distance expression gives  correspondence algorithm                                                        expression procrustes distance                                         consider shapes each represented points                                  ∗                                                                           respective boundaries       and                      df w−                                   k×                                                               w∗wz∗z  yk ∈    shapes centered xj                                                        standard metric shape analysis substituting                                 assume generated indepen                                          ˆ                                                        df eq allows evaluate lm sˆ ˆt Γ  dently                                           ∈  −  ﬁnd mˆ  fig demonstrates               ∼           tσi                  correspondence algorithm applied identical shapes                  Γ jmk                     alignment achieved using procrustes ﬁt section  scaling parameter trans  expected shapes perfectly matched  lation vector Γ rotation matrix  reﬂection dealt fig shapes different examples class  later ∈k−  cycles labels points good match possible ﬁnding best correspon  finding maximum likelihood estimates mles dence  parameters restricted version matching prob invariance respect reﬂection incorporated  lem unlabelled sets investigated kent et al  distance computation worth mentioning  general case large number potential correspon procrustes distances directly incorporate reﬂection invari                                                                               dences make ﬁnding mles prohibitively expen ance mardia et al   unfortunately idea  sive dealing boundaries need compatible formulation correspondence prob                                                        lem simple example demonstrates imagine  consider cycling labels means  potential label assignments computational cost ﬂection  faced task corresponding                      ˆ ˆt                        shapes obviously unaware reﬂection  computing mles Γ ˆ ˆ acceptable   proceed label shapes anticlockwise direction    likelihood parameters written  reﬂection procrustes sense                                 −                    labels reﬂected points doing                                     ﬂip direction labels clockwise             Γ    πσ  exp  σ                                                               matched original reﬂection                                                        ﬂected labels run opposite directions                                                                         ∗                                                        reﬂection given ≡ ¯zz¯k operation                    k                                  changes direction labels clockwise reversing                                                                                                        yj − sΓxjmk  t           order entries zr ≡ ¯zkz¯  switches                                                    direction anticlockwise optimal correspondence                                                        zr normal appar  ﬁxed ∈  −  sˆ ˆt Γˆ values ent doubling computational expense signiﬁcantly  minimize dy  consequence assuming isotropic reduced tracking correspondence calculations  variance independence points exploit nonreﬂected shapes                                          closed form solution minimum reducing computational cost  written compactly using complex notation letting                                                      classiﬁcation retrieval problem require large  xj ≡  xjxj  →  xj  ixj ≡ zj ∈  shapes  number correspondences cost com  complex vectors → → ∈ ck following  puting correspondences dominated  number       reduce dimensions using                                               reduce number columns         coarse shape representation               zw                       using likelihood cutoff      figure  example speedup techniques affect dimensions outer product matrix  text details    boundary points used firstly number cycles fewer iterations ‘new’ points selected random  sider increase linearly secondly distance com w¯ w¯z boundary explored  putation used evaluate correspondence essentially quickly clearly threshold reached  dot product vectors ck accuracy perspective points needed incremental method  necessary large fortunately costly basic algorithm additional cost comes  given options reducing number updating different z∗z associated each la  cycles considered cost each distance com belling evaluating likelihood each stage  putation                                             partly avoided evaluating zw∗ blocks                   evaluate df necessary compute dot single columns points required  products w∗w z∗z w∗z values w∗w z∗z  ﬁnd best correspondence section  worth  change cycle value need com ing algorithm assign correspondences  puted cost corresponding basis minimum procrustes distance df   bother  dominated calculating dot product w∗ likelihoods fig shows evolution likeli  cycled versions equivalent summing hoods compared squared procrustes distances  diagonals outer product matrix zw∗ example typical problem likelihood approach magniﬁes best  summing leading diagonal gives value w∗z correspondences killsoff worst leading quicker                                                        choice cycle parameter recall eq  cycle value zero  fig following procedures                          reduce dimensions zw∗ computational isotropic variance σ  each point σ free parameter  cost algorithm                                affects quickly likelihoods peak single cy    number points used assumed large say cle value small variance encourages fast correspondence    avoid considering possible values selection fig right assumes little class vari  cycling parameter initially consider coarse represen ability note thresholding technique applicable  tation shapes using k kpoints say k correspondence algorithm used  points selecting ﬁfth point  dependent method reducing number  likelihoods  values cycling parameter m cycle values considered  evaluated normal reasonable assume shape descriptors  likely correspond shapes simi                                                        correspondence algorithm independent  lar way achieved using  points                                                        boundary points selected ﬁrst place   points come original  easy                                                        approach generic possible simple point selection  relate approximate correspondences true                                                        techniques used choose points roughly equal  shapes described  points ﬁnal correspon                                                        intervals boundary points equal increments  dences standard way cycle values                                                        radial angle centroid radii model chang et al  close approximated value investigated outer                    ×           ×              refer method perimeter shape  product matrix     ﬁrst                                                        descriptor radial descriptor  round correspondences fig ﬁne tuning stage                                                        cases line origin intercept boundary  small number potential  correspondences                                                        point make radial descriptor consis  evaluated overall cost greatly reduced                                                        tent boundary points close intercepts consid    regardless number points used                                   ∗                    ered point distant origin selected  shape matrix zw evaluated lead parts shape ignored  used compute procrustes distances results section  demonstrate advantage using  computing columns zw∗ incrementally like  lihoods possible cycles monitored discontinuing likelihood computation like  correspondence chosen exceeds given lihood drops given threshold increase  threshold cf fig approach captures intu speed algorithm  itive idea correspondences easier random subset centered shape approximately cen  ﬁnd likelihood threshold reached tered need update center incrementallyfigure  squared procrustes distances left normalized likelihoods middle shapes mouse  class different lines indicate distancelikelihood using given number points  equivalently computing  given number columns zw∗ decreasing σ exaggerates peaked proﬁle likelihoods right    suboptimal descriptor                                                        table  algorithm corresponding shapes given    shape model                                      class running class mean  correspondence technique discussed incor  porated nearest neighbor classiﬁer given test shape initialize µ  ﬁnal shape class  ﬁnd optimal correspondence training shape  cycles ﬁnal shape class  classify basis minimum procrustes distance    corresponding labels shape µ  requires ﬁnding large number correspondences prob    ﬁt shape µ  lem avoided using prototypes ideally   recompute µ using arithmetic mean each point  procrustes mean each class form set proto end  types deﬁnition mean follows naturally                      µ                                                         end fit shapes ﬁnal  deﬁnition df  deﬁned µ¯ ∈ µ¯                             n                                               µ¯  arg min  df zl µ                                  µ                            zzn shapes class bookstein  bookstein  proposed iterative method ﬁnd  ing µ¯ incorporating correspondence algorithm  method correspond shapes directly run  ning class mean procedure relies procrustes  ﬁt aligning shapes fitting transforms  sum squared distances corresponding points  equal df fig df zero perfect ﬁt  achieved fig df small shapes  similar reasonable ﬁt possible ﬁt figure  left class mean bold class ex  given                                         amples ﬁtted mean using  points interpolated                          ∗     ∗                  zfit  wzz                 visualization right class mean scatter correspond                                                        ing points positions  algorithm ﬁnding correspondences mean  given class shown table  shapes succes  sively corresponded ﬁtted running mean      isotropic covariance replaced sample covariance ma    given mean sample covariance matrices cal trix each point thinking shapes sets points  culated each point ﬁnal class model consists mean                          shape  independent points each associated test shape   assigned class    variance matrix fig shows algorithm applied using maximum likelihood ml  objects class                                                    k                                                                cx  arg  max     fxj µcj Σcj                                                                             cc    shape classiﬁcation                                                         likely correspondence ﬁt test shape                                          k×                                                        number classes µcµck ∈  each class mean described section                     ×                                                        mean class Σcj ∈ sample covariance  classiﬁcation model ﬁnding correspondences eq µ  · µ    modiﬁed points assumed independent cj   cj Σcj pdf bivariate normal                                                        distribution nµcj Σcj    µ¯ calculated analytically correct labels  knownsee dryden mardia                computed during training phase                                                      table  classiﬁcation performance thirty class                                                        data set  number points perimeter descriptor used                                                                                                                                                      neighbor                                                                     ml                                                                             table  classiﬁcation performance seventy class                                                        data set                                                                           perimeter  radial  combined                                                              neighbor                                                                          ml                        figure  example boundaries mpeg data set                                                        reason slightly poorer results data set    evaluation results                             classes perimeter descriptor                                                        deﬁnitely suitable despite generally inferior  proposed technique tested benchmark mpeg formance radial descriptor table  middle column   shape database latecki et al  consists  performs signiﬁcantly better classes sug  classes  observations each class pixels lying gests using descriptors improve classiﬁcation  closed boundary extracted clockwise direction using accuracy demonstrate naive combination  matlab’s image processing toolbox bound descriptors enhance performance ml clas  aries shown fig data used figs  siﬁer modiﬁed follows each descriptor perimeter    ﬁrst principle component points radial gives vector classconditional likelihoods  aligned xaxis helps reduce problem test shape vectors normalized each  ‘subinterval shifts’ producing artiﬁcially high procrustes sum given class maximum  distance similar shapes – particulary small                                                      didate likelihoods used classiﬁcation reﬂects  shape described points using perimeter assumption descriptor conﬁdent predic  radial descriptor described section  initially tion correct clear normalize distances  present results using speedup techniques nearest neighbor classiﬁer assume major  impact explored section           ity shapes bear resemblance test shape                                                        rise meaningless correspondences distances    leaveoneout shape classiﬁcation                malization carried minimum entries  thirty class subset mpeg database recently each distance vector  total number shapes dis  used kunttu et al  work multiscale tance used classiﬁcation minimum  fourier descriptors approach outperformed stan didate distances section  ﬁx    dard contour fourier descriptor various classiﬁcation tasks results table  show small rise classiﬁcation ac  using leaveoneout classiﬁcation nearest neighbor curacy combined case perimeter case  classiﬁer achieved  accuracy depending evidently increase performance limited al  length shape descriptor use perimeter descrip ready high performance perimeter descriptor  tor data set testing procedure leave simplicity normalization technique  oneout nearest neighbor enable direct comparison  results test shapes ﬁtted training shapes  bullseye test shape retrieval  ing correspondence method described section   nearest neighbor training shape closest test shape frequently used test shape retrieval enables  terms procrustes distance results shown compare algorithm best perform  ﬁrst row table  classiﬁcation accuracy slightly better ing shape retrieval techniques single shape presented  kunttu et al  results consistent query matches retrieved  wide range tests carried using entire data set  test shape removed task  ml method described section  results given repeated each shape number correct matches                                                        maximum possible  noted perfect  row table  prototype based technique                ×  accurate nearest neighbor classiﬁer formance results     matches results  quires fewer correspondences   versus given percentage perfect score ﬁrst   test shape                                   rows table  show result proposed technique    ﬁrst column table  shows corresponding ing perimeter radial descriptors speedups  sults seventy class data set  used bullseye score computed using                                                        combined approach described nearest neighbor clas    classiﬁcation using distance nearest prototype ac siﬁcation previous section results shown  curate ml classiﬁer indicates pointwise row table  super  notes best  scatter mean sufﬁciently ‘tight’ produce covari forming algorithms test scored   ance matrices accurately reﬂect withinclass variability  naive combination simple descriptors
