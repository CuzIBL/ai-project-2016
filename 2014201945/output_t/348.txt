       regretbased utility elicitation constraintbased decision problems        craig boutilier            relu patrascu              pascal poupart           dale schuurmans  dept science  dept science  school science dept computing science     university toronto      university toronto     university waterloo      university alberta     ceblycstorontoedu       relucstorontoedu     ppoupartcsuwaterlooca      dalecsualbertaca                          abstract                          turing user preferences structure utility                                                        model known parameters utility model im      propose new methods preference elicitation precise given upper lower bounds adopting min      constraintbased optimization problems based use                    minimax regret speciﬁcally assume constraint imax regret model   robust decision      based optimization problem product conﬁguration respect utility uncertainty choosing minimax      objective function consumer prefer optimal conﬁguration solution user      ences unknown imprecisely speciﬁed assum gret adversary impose utility function      ing graphical utility model elicita consistent knowledge user’s preferences      tion strategies require user answer binary regret unacceptably high query user      bound queries utility model parameters formation preferences worstcase error      theoretically motivated algorithm provably reduce regret small zero optimality required      gret quickly terms number queries demon work elicit preferences using bound queries      strate practice heuristic strategies perform local form standard gamble queries —that provide      better able ﬁnd optimal nearoptimal      ﬁgurations far fewer queries                tighter upper lower bounds utility parameters—                                                        reasonably easy users assess                                                        studied extensively decision analysis literature    introduction                                       develop new strategies elicitation using bound  development automated decision software key queries aim reduce worstcase error  focus decision analysis   ai  guaranteed improvement decision quality  deal different users form preference elicitation queries possible include strategies good theo  undertaken order capture speciﬁc user prefer retical guarantees related polyhedral methods conjoint                                                                       ences sufﬁcient degree allow approximately op analysis    heuristic methods  timal decision taken work study prob perform better empirically show  lem preference elicitation constraintbased optimization strategies largely unaffected computational approxima  cbo cbo provides natural framework specifying tion required minimax solutions  solving decision problems conﬁguration  tasks  hard constraints capture options avail  problem formulation  able customer objective utility function assume charged making recom  ﬂects customer preferences explicit formulation math mending decision behalf user example conﬁgur  ematical program using soft constraint framework  ing multiattribute product consumer choice   successfully used model problems car options user preferences vary    unfortunately requirement complete utility infor appropriate conﬁguration requires inter  mation demanded cbo problematic instance act user determine preferences  users ability patience provide feasible alternatives make good possibly opti  utility information furthermore mal choice engage form  instances optimal decision approxima preference elicitation basic problem lies heart  tion thereof determined partial speciﬁca considerable work multiattribute utility theory    tion user’s utility function imperative  theory consumer choice conjoint anal  preference elicitation procedures designed focus ysis   approach differs classic approaches  relevant aspects problem ignoring important respects emphasize  feasible parts utility space utility outcomes provably importantly decision model elicitation strategies  dominated given current information                 driven minimax regret criterion present    framework follows assume set hard results ﬁrst need review previous work minimax  constraints graphical utility model   cap regret framework   optimization graphical utility models         paper adopt minimax regret criterion fol  following weassumeaﬁnitesetofattributes        lowing formulation  unlike bayesian methods                                                        minimax regret recommends decisions given set  xxxn   ﬁnite domains characterizing set  choices available decision maker consequences possible utility functions probabilistic prior  thereof say car options make suitable reasonable priors hard  engine size transmission type assignment ∈ mulate does require computational approxima  domx   referred state ease pre tions needed reasoning complex priors   sentation assume attributes boolean  minimax regret allows recommendation decisions  asetofhard constraints attributes each robust face utility function uncertainty                                                        provides tight bounds worstcase error ap  straint    deﬁned subset attributes  ⊂ induces set legal conﬁgurations pealing circumstances unlike schemes  tributes subset set products proffers speciﬁc decision say pareto optimal                                                        set previously attractive crite  proposed assume constraints represented  logical form expressed compactly rion realworld procurement settings                                                         regret effective focusing elicitation effort  ∧ ⊃¬x instance model  passat engine allow transmission speed priors available   manweletfeasx    denote subset feasible states suppose utility function cbo problem  satisfying                                         known constraints parameters form    suppose access user’s utility function bounds available decision recom   dom    →                                       mended  minimax regret decision criterion suggests                representing user’s strength prefer                              ence various conﬁgurations view adopt feasible assignment obtains mini                                                        mum maxregret maxregret largest quantity  willing pay constraintbased optimiza                       tion cbo problem ﬁnd optimal feasible state x∗ “regret” choosing allowing util                                                        ity function vary bounds formally let                 x∗ ∈ arg  max   ux                  denote set feasible utility functions refer pair                         x∈feasx                      hc uiwherec  set conﬁguration constraints                                                        imprecise cbo problemthepairwise regret state  multiattribute problems type generally                       sumes utility function structure   work respect feasible utility set deﬁned  adopt generalized additive independence gai model       rx umaxux     − ux        speciﬁcally assume utility function                   u∈u  written sum local utility functions factors regret choosing  small sets variables                         user instead adversary impose util                                                      ity function maximum regret decision                                                                                                                                    k≤k                                      mrx       max    rx                                                                                     x∈feasx  each function depends local family minimax regret feasible utility set  tributes xk ⊂ denote xk restriction state                                                                  mmru         min   mrx          attributes xk model attractive              x∈feasx  naturalness generality encompassing linear models   ucpnets  special cases problem ﬁnd information user’s utility function                                                        lies set minimaxoptimal decision x∗  ing optimal conﬁguration formulated integer x∗       x∗          program ip solved effectively st mr  mmr       minimizes worst                                                        case loss wrt possible realizations utility ∈u    minimax regret                                     computation minimax regret cbo problems requires                                                        care explicit minimization eq  infeasible  approaches elicitation focus obtaining tunately formulate manner exploits  utility information infeasible undesirable graphical structure utility model admitting  unnecessary extract complete utility function practice computationally tractable solution  proce  user  consequence make decisions dure  assumes imprecise cbo problem factors  face incompletely speciﬁed utility functions sev ≤ deﬁned local families xk parame                                                                                                     eral approaches proposed representing utility ters utility function denoted uxk  xk  uncertainty making decisions given uncer xk ranges domxk upper lower bounds  tainty example bayesian methods quantify uncertainty                                                        each parameters assumed denoted uxk↑  preferences probabilistically   techniques                                                        uxk↓ respectively effective computation pairwise  simply pose constraints set possible utility func gret max regret minimax regret possible exploiting  tions use various criteria ﬁnd reduce set structure constraints graphical utility model  cisions direct elicitation example  identify pareto optimal  dominant alternatives   constraints reﬂect knowledge user’s utility func   decisions minimize regret     tion generally obtained through elicitation elaborate                                                 τ  input imprecise cbo problem worstcase error tolerance  tion reﬁning initial bounds parameters minimax    compute minimax regret value mmr                  regret reaches acceptable level τ table  summarizes    repeat mmr τ                               general form interactive elicitation procedure       ask bound query utility parameter uxk  bound queries       uxk ≤ lower uxk↑       types queries consider bound queries       raise uxk↓                  ask user utility parameters lies       recompute mmr                                certain value positive response raises lower  table  general form interactive elicitation procedure bound parameter negative response lowers                                                        upper bound cases uncertainty reduced    particular minimax optimization eq  rewrit users difﬁculty assessing numerical pa  minimization inﬁnite number constraints rameters typically better comparing outcomes   constraint generation procedure used generate  bound query viewed local form  straints incrementally ﬁnitely active standard gamble query sgq commonly used decision  straints enumerated mixed integer programs mips analysis fact ask comparisons sgq  required solve main minimization gen speciﬁc state asks user prefers gamble  eration violated constraint compact best outcome occurs probability  number variables linear size number parameters worst x⊥ occurs probability  −  positive  gai model important property procedure                                                                  ∗                  sponse puts lower bound utility andanegative  generates optimal solution andanadversar response puts upper bound calibration attained  ial witness xw current xw assignment                    ∗                                  use common best worst outcomes queries  maximizes regret eq  variable eq  numerical assessment restricted evaluating proba  refer  algorithm details procedure bilities foundations queries pre  shown handle signiﬁcant practical problems generally cise using results fishburn  defer details space  generating constraints solution times ranging reasons  elicitation gai networks  fractions second  seconds          query strategies rely following deﬁnitions    practice minimax regret computed  tween elicitation queries critical minimax regret defn  let hc ui imprecise cbo problem opti  estimated relatively short period time say  seconds mistic state xoapessimistic state xpandamost uncertain  reason propose improvements pro state xmu states satisfying                                                                 cedure  speed regret computation elic     ∈ arg max   max  ux  itation mind  constraint generation procedure           x∈feasx u∈u  solving mip accelerated simply ﬁnding feasi   xp ∈ arg max   min ux  ble given current set constraints explicitly     x∈feasx u∈u                                                                                               searching minimax optimal given current constraints    xmu ∈ arg max    max  ux −   minimax regret computed incrementally gen             x∈feasx uu∈u  erating constraints anytime nature early stop  ping used effect violated optimistic state feasible state greatest upper  straints generated “early” solution bound utility pessimistic state greatest lower  provides lower bound true minimax regret bound utility uncertain state greatest dif  compute upper bound computing max regret ference upper lower bounds each  mip solved bounds tight states computed single optimization setting  provide good elicitation guidance  mini parameters utility model upper bounds  max regret problem solved receiving response lower bounds difference solving correspond  query similar solved posing query ing precise cbo problem  “seed” minimax procedure invoked framework goal elicitation strategy  query constraints generated previous step reduce minimax regret using queries possible  way typically extra constraints generated challenge select queries efﬁciently—avoiding  during each minimax computation                      tractabilities inherent outcome enumeration lookahead    focus use upper lower bounds reducing minimax regret effectively  utility parameters procedures described insist regret reaches zero provably optimal  adapted problems arbitrary linear constraints util solution stop regret reaches point improve  ity parameters handling constraints important ment outweighed cost interaction  comparison queries used user’s true value close query point feel  ground place turn elicitation      “roughly indifferent” case impose constraint                                                        true value “close” ε point                                                           focus bound queries queries quite natu    elicitation strategies                                                                                                                                       ral comparison queries ask state preferred   consider interactive process decision soft response imposes linear constraint utility parameters regret  ware queries user information utility func computation general form alluded  halve largest gap strategy                   utility parameter set x∗kk ≤ k∪xwk                                                        ≤                 ﬁrst query strategy consider halve largest gap  largest gap   queries midpoint  hlg strategy asks query midpoint largest corresponding utility interval intuitively                                                                                                 x∗  interval corresponding parameter xk swer query raise lower bound                                                                                      xw   largest gap upper lower bounds moti lower upper bound    pairwise                                                              x∗ xw  vated theoretical considerations based simple worst regret   reduced usually minimax regret  case bounds minimax regret deﬁne respectively course answer lowers upper bound                                                           x∗                                xw  gap utility parameter uxkthespan factor    raises lower bound                                                                             x∗ xw  maxspan utility model follows             pairwise regret      remains unchanged note                                                        minimax regret reduced                     ↑−u    ↓            gap    xk    xk                   experimented variant cs strat             spanf    max      gapxk        egy regret computed approximately ensure fast                       xk∈domxk                                                      interactive response imposing time bound computa          maxspanu      spanf                 tion described can’t sure                                                      minimax optimal solution early termination solution                                                        good guide querying process  quantity maxspan measures largest gap compute max regret anytime  upper lower utility bound regardless feasibility solution know quality solution  show quantity bounds minimax regret    upper bound minimax regret used                                                        natural termination criterion querying process  proposition  hc ui mmru ≤ maxspanu  mmru ≤  mrxo optimistic state xo  alternative strategies  mrxo ≤ maxspanu result follows    suggests obvious query strategy hlg method finally experimented strategies  bound query asked parameter brieﬂy optimistic query strategy com                                           p↑−p↓       putes optimistic state xo queries midpoint  largest gap midway point interval                               method ensures rapid reduction max regret    interval utility parameter largest gap                                                        tuitively optimistic xo useful adversarial choice  proposition  let uncertain utility model reﬁning information help reduce regret pes  parameters let  maxspanu logmε   simistic query strategy analogous relying intuition  queries hlg minimax regret greater ε  pessimistic choice useful preventing adversary                                                        making regret decision optimistic  worst case query strategy reduce regret pessimistic op strategy combines queries pa  quickly hlg furthermore classes utility rameter largest gap states  functions bound tight worstcase strategies computationally appealing require  conﬁguration constraints exist ensure regret standard cbo minimax optimization  reduced zero ﬁnitely queries strategy uncertain state mus strategy variant  similar heuristically motivated polyhedral methods hlg accounts feasibility compute  conjoint analysis used product design marketing  certain state xmu query midpoint parameter   fact hlg viewed special case xmu largest gap finally secondbest sb strat  method  polyhedra hyperrectangles egy based following intuition suppose                                                        optimistic state xo secondbest optimistic state xo    current solution strategy                    state secondhighest upper bound—this  hlg allows provide strong worstcase guaran computable single optimization ask  tees regret improvement “undirected” query reduced upper bound utility xo lower  siderations feasibility play role determining xo ensure regret reduced  queries ask alternative strategy focus attention adversary longer attain optimistic value  parameters participate deﬁning max regret lower bound xo raised level xo’s upper                     ∗                           minimax optimal adversarial witness bound terminate—knowing xo optimal  current recall witness maximizes regret like query xo xo’s upper bound neg     ∗   current solution cs query strategy asks ative response reduce regret positive response ensures                                                        xo optimal sb method “distributes” query                                                  p↑     denote upper lower bounds parameter relevant factor parameters asking bound queries  p↓ respectively    deﬁnition maxspan tightened account logi myopically optimal strategy computes aver  cal consistency assignments different factors restrict age regret reduction midpoint query each utility  ing attention feasible states wrt result holds parameter solving minimax problem each response    bound generally tight overlap factors each query asks query largest average  tight maxspan accounts logical consistency reduction approach generally infeasible testit small problems methods compare excellent anytime performance  queries aver                                                        age minimax regret dropped      empirical results                                  terestingly time bound  seconds imposed cs                                                        leading approximately minimax optimal solutions  tested effectiveness query strategies does affect query quality approximate solutions  variety problems each problem tested halve rise queries virtually effective optimal  largest gap hlg current solution cs current solution solutions cs strategy requires average  computationtime bound ﬁve seconds query query op strategy works  cs optimisticpessimistic op secondbest sb quires computation time query does  uncertain state mus compared need solve minimax problems verify termi  computationally demanding myopically optimal nation “periodically” reﬂected query compu  method small problems implemented tation time op cs fast  straint generation approach  used cplex used interactively problems size mus hlg  generic ip solver experiments considered realistic sb work nearly note hlg  domains—car rentals real estate—as randomly forms poorly fails account feasibility op  generated synthetic problems                         tions directing attention parts utility space    tested small synthetic problems allow com product exists polyhedral methods   parison heuristics strategy fig  reports  offer reasonable elicitation setting mus  average minimax regret  small synthetic problems signiﬁcantly outperforms hlg just reason  constructed randomly setting utility bounds realestate problem modeled  multivalued  variables each utility factor depends each prob variables  possible conﬁgurations fac  lem  attributes  values  tored utility model consists  local factors giving rise  factors depend  attributes simulate user                                                       utility parameters query performance shown  responses drawing random utility function each fig using regime cs  trial consistent bounds representing user’s prefer cs perform best time bound cs  ences responses queries generated using assuming                                                      effect quality cs strategy interestingly op  user accurately answers queries relative  results forms identically somewhat lower com  shown cases utility parameters drawn uni putational cost cs takes squery cs op  form distribution each interval drawn each methods reduces minimax regret   truncated gaussian centered midpoint interval optimal   queries sb fails  reﬂecting user somewhat likely true                                                       make progress hlg mus somewhat better  value near middle range cases ob tested query strategies larger randomly gen  serve op cs cs heuristics decrease minimax erated problems  variables domain size  regret rate close suggests op cs  utility factors three vari  cs computationally feasible promising alter ables each performance patterns realestate  natives computationally prohibitive strategy emerge cs cs op performing better    report experiments using strategies ex fig op performs slightly  cept larger synthetic problems realestate prob better cscs difference signiﬁcant  lem car rental problem taken  drawing users  uniform distributions gaussian results sim  ilar shape magnitude results  concluding remarks  averaged  trials carrental problem mod                                                        developed number query strategies elicit  eled  multivalued variables specify various                                                        ing bounds parameters graphical utility models  tributes car relevant typical rental decisions result                                                        purpose solving imprecise constraintbased optimiza  ing  possible conﬁgurations factored                                                        tion problems promising strategies cs  utility model consists  local factors each deﬁned                                                        op perform extremely requiring queries  ﬁve variables  utility parameters performance                                                        relative model size provide dramatic reductions  various query strategies depicted fig ini                                                        regret shown using approximation minimax  tial utility bounds set minimax regret roughly                                                        regret reduces interactive computation time levels required   optimal solution cs cs perform                                                        realtime response noticeable effect  extremely regret reduced zero                                                         formance cs op executed realtime  queries average importantly methods show                                                        does require intensive minimax computation    doing lookahead type stages fact plan extend research number directions  compute optimal query plan ksteps            like consider additional query types com    experiments show reasonably small variance ex parisons outcomes tackle associated computational  clude error bars legibility    like lot queries recall tational boundaries regretbased elicitation furthermore  problem large utility model  parameters  queries large typical consumer choice problems  intentionally choose problems large push compu reasonable high stakes conﬁguration applications
