                conservative extensions expressive description logics                                carsten lutz dirk walther frank wolter                        institut fur¨ theoretische informatik tu dresden germany                      department science university liverpool uk                          abstract                          wrt Γ adding does change ontology                                                        far concepts built concept role names      notion conservative extension plays    Γ concerned three examples ontology      central role ontology design integration  lated tasks understood terms conservative      used formalize ontology reﬁnements  extensions      safe mergings ontologies independent      modules inside ontology regarding reasoning   – ontology reﬁnement during ontology design frequent      support basic task decide task add details ontology      ontology conservative extension   sufﬁciently described intuitively reﬁne      recently proved prob ment impact unrelated parts      lem decidable exptimecomplete     ontology requirement formalized demand      tologies formulated basic description  ing reﬁned ontology conservative extension      logic alc consider expressive descrip   original wrt concept role names      tion logics begin map boundary     belong reﬁned        logics conservativity decid – ontology merging straightforward way inte      able prove grate ontologies simply union      conservative extensions exptimecomplete  merging compromise original ontologies      alcqi undecidable alcqio         possible formalization requirement demand      show conservative extensions deﬁned   united ontology conservative extension com      modeltheoretically terms ponent ontologies wrt set concept role names      sequence relation undecidable used respective components weaker formalizations      alc                                              obtained excluding signature concept role                                                        names interaction component    introduction                                       tologies expected intended                                                                                                       design integration ontologies formulated mod – deﬁning modules module inside ontology                                                        describes independent application domain  ern ontology languages owl challenge                           experience shows principled methodologies deﬁned subset conservative                                                        extension  wrt concept names role names  automated reasoning support required ensure     resulting ontologies wellstructured  recent pa belong   pers     conservative extensions identiﬁed basic reasoning task regarding conservative exten  crucial notion formalizing central tasks ontology sions follows given ontologies signature  design integration consequently conservative exten Γ decide ∪t conservative extension  sions play key role design integration method wrt Γ following refer task deciding  ologies  reasoning conservative extensions servative extensionsin decision problem investi  provide valuable support ontology designer   gated basic dl alc proved exptime    formally ontology ∪t conservative extension complete aim current paper investigate  ontology wrt signature Γ iff consequence servative extensions expressive dls ones  ∪t formulated Γ consequence tfor underlying ontology language owldl map  example assume ontologies formalized descrip boundary decidable undecidable main  tion logic dl owldl fragments  results follows alcqi extension alc  signature set concept role names ontology inverse roles qualifying number restrictions decid  dl tbox consequence tbox subsump ing conservative extensions exptime complete  tion relationship concepts follows difﬁcult alc ii extend  tbox intuitively ∪t conservative extension alcqi nominals conservative extensions result                                                    ijcai                                                                   syntax         semantics           set individuals interpretation function ·i                       −              −                                                             inverse role                                 maps each concept ∈ nc subset Δ  each                                                                                                                                ai              role ∈ nr binary relation Δ  each     nominal                                                          ∈                  ai ∈ Δi                      ¬c            Δi  ci             individual   ni individual       ex     negation                                                    ·i                               ci ∩ di             tension inverse roles arbitrary concepts deﬁned     conjunction                                        inductively shown column figure      atmost number            ∈ ri ∧                    nrc                              interpretation satisﬁes implication       restriction                      ∈ ≤n                                                        ci  ⊆ di  model tbox satisﬁes                                                        implications  concept satisﬁable relative        figure  syntax semantics alcqio                                                                                                         tbox exists model  ∅a                                                        concept subsumed concept relative tbox                                                        written    model satisﬁes  ing dl alcqio    undecidable shows                                                        implication    servative extensions owldl alcqio  fragment undecidable identiﬁes alcqi despite fact individual names closer  signiﬁcant fragment owldl conservative ex stants predicates henceforth use term predi                                                                                   ∪    ∪  tensions decidable                         cates refer elements nc nr niasignature                                                                                                      mathematical logic exist versions ﬁnite set predicates signature sig tbox                                                                                        conservative extensions based consequence set predicates occur  given description                                                                          Γ        lΓ  lation sketched alternative stronger version logic signature  use denote set                                                                                         Γ  deﬁned modeltheoretic way consider deciding concepts use predicates   kind conservative extensions show al  ready alc problem highly undecidable details deﬁnition  conservative extension let  proofs technical report   tboxes formulated dl let Γ ⊆ sigt sig                                                        nature ∪t Γconservative extension    preliminaries                                      cc ∈lΓ    iff ∪t                                                            dls concepts inductively deﬁned help set                                                          deciding conservative extensions means decide given  constructors starting set nc concept names set                                                        tboxes signature Γ ⊆ sigt  nr role names possibly set ni individual names                                                        ∪t Γconservative extension  paper consider dl alcqio frag  ments constructors available alcqio shown Γsigt simply drop Γ talk conser  figure  inverse constructor role vative extensions difﬁcult alternative  constructor remaining constructors concept deﬁnition conservative extensions follows ∪t  constructors figure  remainder paper Γconservative extension iff each concept ∈lΓ  use denote cardinality set denote satisﬁable relative satisﬁable relative ∪t  individual names denote roles role names concept ∈lΓ satisﬁable relative  inverses thereof denote concept names relative ∪t witnesses ∪t  denote possibly complex concepts inverse role conservative extension concept wit   r− set s−  usual use  abbreviation ness concept  arbitrary ﬁxed propositional tautology ⊥ ¬ let example conservative extensions   →      ↔                                 nrc       usual boolean abbreviations       description logic alcqi assume tbox formal  atleast restriction ¬ −  rc izing knowledge universities     nrc    nrc    nrc  ∃rc  existential restriction   rcand∀rc universal lecture  ∃has   subjectsubject ∃given bylecturer  restrictionfor  ¬c assume numbers  intro tcs      lecture  inside number restrictions coded binary    dl allows negation conjunction disjunc lecturer   professor  teachingassistant  tion universal existential restrictions called alc lecturer  ∃employed byuniversity                                                                                    −  availability additional constructors indicated university  ∀employed academic  admin  catenation corresponding letter stands number  restrictions stands inverse roles nominals upper describes university lectures saying  explains alcqio allows introductory lecture theoretical  fer sublanguages simple way              science tcs lecture lower describes    formulation ontologies description logics based universities employees suppose want  tboxes use terms reﬁne ontology concerned lec  interchangeably formally tbox ﬁnite set concept tures extend signature adding concept names  implications                                     automatatheory complexitytheory state    semantics alcqioconcepts deﬁned terms subjects discussed introductory tcs lec  interpretation Δi  ·i  domain Δi non ture say automata theory complexity theory                                                    ijcai                                                     different things                                 witness concepts model conservative extension                                                        stronger notion model conservative extensions   intro tcs   ∃has    subjectautomatatheory               ∃                                       query answering modulo ontologies case   intro tcs       subject complexitytheory         want ensure addition abox           ⊥automatatheory       complexitytheory                                                        signature answers queries  intuitively addition impact signature ttot ∪t ∪acoincide ∪a                                                                                ∪t  adds information lectures immedialy follows   model conservative  affect lower concerned extension does follow ∪t just  lectures intuition formally captured conserva deductive conservative extension  tive extensions choose Γ set predicates algorithmic viewpoint model conserva  used lower ∪t Γconservative tive extensions problematic choice show  extension lower affected highly undecidable basic description logic  addition choose Γ predicates alc extensions proof  upper ∪t Γconservative following result reduction semantic  extension witness concept                    sequence problem modal logic                                                                                introtcs       subject                 theorem   Πhard decide given                                                        alc  tboxes tbox ∪t model  considering cases conservative extensions                ontology designer verify modiﬁcation servative extension   changes tbox intended way    example shows conservative extensions  decidability alcqi  pend descripion logic tboxes  actually formulated alci seen Γ tight complexity bound deciding conservative  set predicates upper ∪t extensions alcqi use to denote length  Γconservative extension concept  denote size cd∈t   holds assumed alcqi underlying dl  tbox   allowed number restrictions witness concept  switch underlying dl alci ∪t theorem  exptimecomplete decide conserva  Γconservative extension Γ tive extensions alcqi case ∪t  section investigate purely modeltheoretic version conservative extension exists witness concept  convervative extension does depend lan length exponential ∪t  guage                                                computed time polynomial                                                        lower bound proved exactly way    model conservative extensions                                                        exptime lower bound conservative extensions  mathematical logic software speciﬁcation  alc  lower bounds alc sim  different kinds conservative extensions ply transfer alcqi necessary walk through  based consequence relation “” deﬁnition  proof  check works case  based models  simplicity alcqi following concentrate proving  formulate second notion case Γ upper bound established devising exptime al  sigt                                              gorithm convenience decides nonconservative ex                                                        tensions  deﬁnition  model conservative extension let                                                                                  alcqi  tboxes say ∪t model conserva   start reminding       tree model  tive extension iff model exists property precisely tree interpretation inter                                                                Δi   ·i   model ∪t obtained modifying pretation           equipped additional                                                               ⊆  Δi ×  Δi             Δi   interpretation predicates sigt  sigt lation            tree                                                                     −i          −                leaving predicates sigt ﬁxed               ii r∈n  ∪       ∪     iii                                                                                    alcqi  distinguish versions conservative extensions disjoint distinct roles                                                                                            section based “”adeductive conser cept satisﬁable relative tbox satisﬁable                                                                                    vative extension                                     tree model  model tree interpreta    notion model conservative extension strict tion  section talking interpretation  deductive ∪t model conservative model tbox mean tree interpretation  extension clearly deductive conservative develop algorithm deciding nonconservative ex                                                                  alcqi  extension converse does hold tensions  introduce new kind witness  consider tboxes                           nonconservativity new witnesses similar ﬁ                                                        nite tree interpretations easier work witness     ∃r∃s       ∃ra ∃s¬a                                                         concepts signature Γ let literal type Γ                                                                  Γ  ¬a  ∈ Γ ∩  hard ∪t deductive conservative subset lit             each                                                        ∈  Γ ∩  ∈    ¬a∈     Γ             extension alc alcqi language            iff        role role                                                        r− Γ                                                    ijcai                                                     deﬁnition  Γtree Γtree  ﬁnite given interpretation ∈ Δi  set                                   ∈  intransitive tree   each node       la              tt uc  ∈    ∈ ci   beled literal type lw Γ each edge w la                 cl                         beled Γrole lw  ⊆ set leafs type follows distinguish                                                 type conjunction members                                                        introduce witness existence Γtree              Γ  essentially tree ﬁnite tree interpretation equipped Γembeddable model model                                additional unary predicate denoting subset ∪t avoid writing sub superscripts                                                  Γ  leafs following deﬁnition provides way relate  assume input Γ ﬁxed  trees actual interpretations                                                        deﬁnition  root pair internal pair root pair  deﬁnition  Γembedding let  Γ consists ttype set ∪ttypes inter                                                                                                       tree root ∈  interpretation root ∈ nal pair →r consists Γrole ttypes    Δ  aΓembedding   →iis injection   function mapping each ∪ttype set    Δ                                           ∪ttypes    • fwd                                           intuitively each root internal pair encodes relevant infor                                                        mation possible embeddings Γtree models                                        • lvv  iff fvr fv  vv ∈ Γ ∪t precise notion realiz      roles                                          ability                            • ∈ lv iff fv ∈  ∈ ∈ litΓ deﬁnition  realizable root pair let                                                             Γ                            • ∈ d ∈ Δi fvri d tree root pair realized iff                                                                                                      Γrole range                       exist model root ∈ Γ                                                            embedding  →i  called Γembeddable Γembedding   →i                                                 ∪ttype ∈ iff exist                                                                                                                                                   model ∪t root ∈ Γembedding  deﬁnition illustrates Γtrees represent ﬁnite initial                                                             →i  potentially inﬁnite tree interpretations explains  predicate Γtrees marks leafs Γtree root pairs encode information possible embed  necessarily leafs tree interpretation dings Γtree models ∪t internal pairs  embed establish Γtrees witnesses encode information possible embeddings Γtree  nonconservativity                               rooted submodels models ∪t                                                        following tree interpretation ∈ Δi  write            ∪t                               lemma        conservative extension  wrt id denote subtree interpretation rooted  Γ iff exists Γtree  Γ                                                                                                         embeddable model model deﬁnition  realizable internal pair let                                                            Γ                     t →   ∪t                                                            tree internal pair                                                             realized iff  general idea algorithm follows                                                          •                         dd ∈ Δi  lemma  decide ∪t conservative   exist model                                                                       d ∈ ti dri ∈ ti            Γ  extension sufﬁces decide exists Γ                embedding                                                             →i  tree Γembeddable model                                                                                                 model ∪t algorithm alas • ∪ttypes  ∈ iff                                                                                                 conjecture cases smallest tree exist model ∪t ∈ Δ                                                                           exponential ∪t exponential ∈   ∈  Γembedding  algorithm simply try construct tree instead  →id                           Γ  check existence tree searching certain root internal pair realizable exists Γtree  witnesses existence tree realizes  troduce witnesses confused  Γ                                                     observe internal pairs store information   trees witnesses nonconservativity need    ∈ Δi                  troduce notion type                         element      root mapped                                                        comprise type t predecessor d                                                                                       deﬁnition  type let tbox use clt  unique role connects necessary  note smallest set contains concepts presence inverse roles number restrictions  closed single negations subconcepts  bears similarity double blocking technique  type subset clt                 tableau algorithms  note ucomponent                                                        internal pairs function set intu    •¬c  ∈ iff ∈ ¬c ∈ clt                                                         itively possible types models ∪t depend                                                                                       •  ∈ iff ∈ ∈  ∈ type predecessor models      clt                                              let algorithm lemma  deﬁ                                                        nition realizability exists realizable root pair                                                    ijcai                                                     form ∅ iff ∪t conservative extension                             Γ ⊆          Γ                                                  suppose tboxes    signature   sig   wrt  algorithm deciding nonconservative exten given  sions searches root pair easiest case                                                                            rr  root pair ∅ realized singleton Γtree Γtree  determine set  root pairs realized single                                                                Γ         rr  ∅  consists single node special case tested ton trees   reject input                                                                                         rr  ﬁrst test successful check   satisﬁed model  contains root                                                                         ∅  root pair ∅ realized nonsingleton pair     accept  tree  assume case  determine set internal pairs realizable  root each subtree rooted succe singleton Γtrees  ∅ reject input                                     ˆ    ˆ ˆ  sor node realizes internal pair →rˆ  tˆ   rˆ  lw w                    intuitively means  generate sequence sets internal                              ∅  check realization root pair based     pairs  alization internal pairs trees strictly smaller height                                                                                            similarly check realizability internal pairs          ri  ri ∪ri  Γ                                         Γ   tree based realizability internal pairs trees r  strictly smaller height based observations algo set internal pairs ob                                                             tained nonempty subset ri cardinal  rithm repeatedly generates internal pairs realized             Γ                                                          ity exceeding tt step   trees larger larger height pairs gen  ∪r                                                ∅               accept input exists  erated checks exists root pair                  ∅  realizable based generated internal pairs root pair       obtained                                                             step subset ri cardinality  following deﬁnition formalizes step algorithm          root pairs new internal pairs generated exceeding tt  root pair exists reject  existing set internal pairs                            input                       Γ         ∈             following tree   write                                                 Γ  denote subtree rooted                 figure  algorithm nonconservativeness wrt     deﬁnition  step let set internal pairs number internal pairs bounded double exponentially                           t →   root pair     resp internal pair        size ∪t step al  obtained step exists Γtree  gorithm stabilizes double exponentially   root                    rounds lemma  follows algo                                                       rithm exptime    • realizes resp →r                                                                                                         •       w ∈      ww                            theorem   algorithm figure  accepts input                      exists internal Γ ∪t                                    Γ                ˆ    ˆ ˆ                ˆ               iff     conservative extension  wrt      pair  →rˆ ∈rsuch     rˆ                                                        runs exponential time      lw  realized tw                                                         show upper bound size witness concepts  details algorithm given figure  stated theorem  proceed follows ﬁrst ob                                                        serve algorithm ﬁnds realizable root pair ∅                                   ×t∪t                                     Γ           mt   ×t ∪t×                      pair realized tree double expo                                                      nential depth single exponential outdegree second                                                                                Γ  intuitively considering subset ri cardinality show convert tree witness concept                                      Γ    tt means limit attention trees threeexponential size         degree  tt  justiﬁed following lemma                                                           undecidability  alcqio               ∪t                                lemma        conservative extension  show conservative extensions undecidable  wrt Γ exists root pair ∅ realized Γtree alcqio                                                              proof reduction following    outdegree tt                         decidable tiling problem  remains shown each step algorithm                                                        deﬁnition  domino thvrltb  carried effectively algorihm yields                                                         consists ﬁnite set tiles horizontal vertical  exptime  upper bound stated theorem  start                                                        matching relations ⊆ ×  sets ⊆  proof following lemma relies                                                        right tiles left tiles tiles tiles  fact satisﬁability alcqi relative tboxes                                                        lution triple τ ∈   decided exptime                                                         τ  − ×m   − →t                                                            following hold  lemma   checked exponential time                                                            τi jτi ∈          ≤  size root internal pair ob                            tained step set realizable internal pairs  τi jτi ∈  ≤ jm  ≤ mt                                                          τj ∈ τn ∈ ≤                                                    ijcai                                                     
