                 scalability study peertopeer consequence finding             adjiman    chatalic   goasdoue´   mc rousset    simon                        pcri cnrs  universit´e parissud lri – inria futurs                        bˆat   universit´e parissud orsay cedex france                                  adjimanchatalicfgmcrsimonlrifr                          abstract                          computed input provided query time                                                        reduced satisﬁability checking      peertopeer inference systems each peer    problem distributed reasoning considered pa      reason locally solicit acquain quite different problem reasoning par      tances sharing vocabulary pa  titions obtained decomposition theory dechter      studies theoretically experimentally rish  amir mcilraith  problem      problem computing proper prime implicates  centralized large theory given structure exploited      propositional peertopeer systems global compute best partitioning order optimize use      theory union peer theories partitionbased reasoning algorithm problem      known opposed partitionbased reasoning  theory union local theories                                                        known partition imposed pp architecture    introduction                                       existing algorithms amir mcilraith                                                                                            recently peertopeer pp systems received dechter rish  del val   appropriate  siderable attention underlying infrastructure consequence ﬁnding problem  appropriate scalable ﬂexible distributed appli section  deﬁnes formally pp inference problem ad  cations internet pp dressed paper section  describes distributed  centralized control hierarchical organization each consequence ﬁnding algorithm propose states  peer equivalent functionality cooperates properties section  accounts signiﬁcant experimental  peers order solve collective task study scalability approach section  describes  pp systems simple keywordbased ﬁle sharing sys related work conclude section   tems like napster httpwwwnapstercom gnutella  peertopeer inference problem deﬁnition  httpgnutellawegocom efﬁcient lookup ser peertopeer inference ppis network peer  vices chord stoica et al  invented theories each peer ﬁnite set formulas lan  recently schemabased peer data management systems like guage lp  consider case lp language  edutella nedjl et al  piazza halevy et al clauses built ﬁnite set propositional vari  proposed systems query answering com ables vp  called vocabulary  peers seman  plexity directly related expressivity formalism tically related having common shared variables  used state semantic mappings peers schemas respective vocabularies each peer knows lo  halevy et al scalability piazza far goes cal theory shares variables   peers relies wide range optimiza peers ppis acquaintances does necessar  tions mappings composition paths pruning tatarinov ily know peers shares variables  halevy  possible centralized storage new peer joins ppis simply declares acquaintances  schemas mappings global server      network peers knows sharing variables    paper make choice fully distributed ppis formalized acquaintance graph  superpeers edutella central  server piazza addition aim scaling deﬁnition  let  piin collection clausal                                                        theories respective vocabularies  let  thousands peers consider pp inference systems                                    vpi                                                                         acquaintance graph   graph  local theory each peer set clauses deﬁned ∪invpi                     set propositional variables each peer share Γ  acq set vertices acq ⊆  vocabulary peers investigate × × set labelled edges                                                                   acq                    reasoning task ﬁnding consequences certain form pi pj  ∈  ∈ vpi ∩ vpj  given input formula expressed using local vocabu labelled edge pi pj  expresses peers pi pj  lary peer reasoning task important appli know each sharing variable peer  cations diagnosis information integration output literal acql  denotes set peers sharing                    ¬f ∨  ¬f ∨                                                    query         immediately returned                      ¬f ∨ ∨                                      argetp                                                         shared literals splitted each shared                                kc                 literal subquery propagated neighbor peers shar                                       ¬k ∨                       ¬k ∨                           ing corresponding variable returned consequents         ¬i ∨              ¬c ∨                       ¬l ∨ ¬k ∨ pl                                       ¬pl ∨         subqueries respectively queued future recom                                lpl                    bination soon answer returned each                                                        subquery recombined transmitted new  figure  acquaintance graph tour operator example consequents querying peer process continues                                                        crementally consequents subqueries  variable each theory  consider subset turned  target variables vp ⊆ vp  supposed represent instance suppose transmitted peer  variables application goal given user consequents locally computed  clause provided input given peer ﬁnd ∨ e∈t argetp immediately returned  possible consequences input clause union local consequent shared transmitted  peer theories belong target language given produces clause ∈ argetp  set sp peers target language argetsp  transmitted returned remote conse  language clauses including clause involving quent initial query clause ∨  target variables peers sp shared variable shared variables splitted transmitted sep  target status peers sharing arately concerned neighbors transmitted  deﬁnition  let clausal theory clause returns queued combi  clause called prime implicate wrt iff ∪ nation similarly transmitted independently   clause m′ ∪  m′ share produced locally  m′  m′ ≡ called proper prime implicate l∈t argetp returned ﬁrst consequent  wrt iff prime implicate wrt  queued recombination ∨                                                        returned ﬁrst combined consequents initial  deﬁnition  let Γ  acq acquaintance graph query shared prop  modeling  piin collection agated clause ¬k ∨ pl produced  clausal theories respective target variables turn splitted asked pl returns  sequence ﬁnding problem given peer clause consequent asked ¬k happens  ∈ lp ﬁnd set proper prime implicates wrt complementary query process  sin pi belong argetp                section  reasoning branch contains    peers ppis knows union complementary literals detected using history  theories consequence ﬁnding problem mechanism closed  returned consequent  ppis new signiﬁcantly different conse combines returned pl   quence ﬁnding problem single global theory par turned ¬k new consequent ¬k ∨ pl  titioned pp setting each peer run transmits new consequent  reasoning algorithm locally independently lack space reasoning branches  able distribute reasoning task controls set consequents initial query eventually produced  acquaintances                            ∨ ∨ ∨ ∨ pl  example  let consider  peers figure  describ swers let note ∨ involve  ing tour operator expresses current far destinations target variables different peers implicates   kenya chile far destinations obtained partitionbased algorithms like amir  international destinations expensive mcilraith  compute consequents  concerned police regulations expresses passport belong target language single peer  required  international destinations focuses  sanitary conditions travelers expresses kenya  distributed consequence ﬁnding algorithm  yellow fever vaccination  strongly recommended  strong protection paludism taken distributed anytime consequence ﬁnding algorithm  accomodation occurs lodges describes presented adjiman et al pa  accommodation conditions  lodges kenya hotels selfcontained three main message  chile expresses antipaludism pro passing procedures implemented locally each  tection required accommodations equipped appro peer triggered reception query resp  priate antimosquito protections shared variables answer final message sent sender peer receiver  indicated edges acquaintance graph figure  peer denoted self executes procedure    target variables deﬁned  vp  vp  procedures handle history initialized     vp  vp  sequence history hist sequence triples    illustrate behavior distributed conse literal peer clause  quence ﬁnding algorithm detailed section  peer history ln pn cn     represents  receives query ﬁrst computes local consequents branch reasoning initiated propagation literal peer splitting clause algorithm  procedure handling queries takes care                                                        propagation literal   ∈ −  ci consequence li pi              self                                                          eceive uery  essage  li literal ci propagated pi                msenderself query hist                                                         ¯q   ∈ hist    reasoning initiated user denoted                                              particular peer user sending given peer mes  send mself sender answer self hist                                                          send self sender final self true hist  true  sage                      triggers procedure                                                muser query ∅                           ∈ self self  ∈ hist  receivequerymessagemuser query   ∅  send mself sender final self truehist true  locally executed  description procedures  use notations                             localself ← ∪ resolventq self    • literal q¯ denotes complementary literal   ∈ localself  resolventq  denotes set clauses obtained reso  send mself sender answer self hist   lution clause                     send mself sender final self truehist true    • clause peer  sc resp lc denotes   disjonction literals variables shared resp  localself ← ∈ localself lc ∈                                                              argetself  shared acquaintance  sc   ex                                                          ∈ localself sc    presses does contain shared variable      foreach ∈ localself    •  distribution operator sets clauses   send mself sender answer self chist  · · ·  sn  ∨ · · · ∨ cn ∈     cn ∈ sn   send mself sender final self truehist true                                              lp use l∈lsl denote sl · · · slp      main properties resulting distributed message  foreach ∈ localself  passing algorithm stated adjiman et al  sc    summarized follows                                       send mself sender answer self chist     algorithm sound answers returned                                                                foreach literal ∈ sc  implicates literal having triggered reasoning  ∈ argetself     algorithm terminates user notiﬁed     answerl self chist ←  termination crucial anytime algorithm            completeness algorithm guaranteed each     answerl self chist ← ∅  local theory saturated resolution acquaintance  finall self chist ← false  graph local theories common vari   foreach rp ∈ acql self  able exists acquaintance graph path      send mself rp query self chist  theories edges labeled algorithm  procedure handling answers returned  variable property satisﬁed algorithm consequent literal added history hist  applies does guarantee return proper receiveanswermessagemsenderself answer hist  prime implicates terminates                  hist form l′ sender c′ self chist′    note  returned algorithm lines    answerl′ hist ← answer l′ hist ∪    receivequerymessage    result← l∈scl′answerl hist  lc ∨  algorithm exploited checking satisﬁability hist′  ∅ u←user u← ﬁrst peer ′ hist′  global theory each join new peer sake foreach cs ∈ result                                                                                              ′  simplicity algorithm presented applying literals  send mself answer self chist  cs  clause handled splitting literals algorithm  procedure handling notiﬁcations answer com  recombining results obtained each literal using putation literal added hist completed      operator                                           receivefinalmessagemsenderself final hist true                                                        hist form l′ sender true self chist′    experimental analysis                               finall′ hist ← true                                                        ∈ sc finall hist  true  order study scalability issues pp algorithm  hist′  ∅ u←user u← ﬁrst peer ′ hist′  conducted signiﬁcant experimentation networks  send mself final self truehist′ true  composed  peers best knowledge  foreach ∈ sc  ﬁrst experimental study large ppis mo  answerl sender  self chist′ ← ∅  tivation twofold study deep wide  reasoning spreads network second evaluate node rewire each node given probability pr  time needed obtain answers check extent shown regular graphs pr    ppis able support trafﬁc load         uniform random graphs pr   graphs generated    want use infrastructure real web ap pr   ”small world” properties  plications chosen generate acquaintance graphs following experiments number shared vari  having socalled small world property admitted ables labelling each edge varies each  local  newman  general property social net theories clausal theory composed clauses length  works including web following watts strogatz  varying ratio clauses length  each local   start regular ring  nodes  edges ory generated steps  clauses length  areuniformly generated  variables proper            cdf queries’s depth  local theory  chosen target variables   add clauses involving shared variables length    denote cnf percentage clauses length    generate set mapping clauses each map    ping clause randomly generated picking variable   each peers negating probabilty   clause length  variable chosen  random variables peers                experiments conducted different                                                                                                cnf  platforms measurements concerning behavior                                 cnf                                                                                                cnf                                                                                                cnf  query processing number messages depth width                                      cnf                                                                                                cnf  each query processing used single run                                 cnf    ning  peers measurements consisting building   ratio queries depth smaller  reports peer traces easier perform data                                                               available single contrast time                             measurement deployed algorithm                   depth queries  cluster  heterogenous computers athlons gb figure  cumulative distribution function queries depth  ram  ghz  ghz   ghz scale recentered  −   experiments each running   peers randomly selected                             ing easy little remaining hard slow    results exhibit exponential distri growth observed timeout sideeffect  bution queries need long time complete bound query depth timeout previous  possible perform experimental experiments suggest exist queries  analysis introducing timeout parameter each query quiring long reasoning branches point outlined  labeled remaining time live decreased curve corresponding hardest cases    each time query needs traverse peer processed cnf   query depth   necessary timeout set  seconds  suggests hard processing appears    ﬁrst report distributed behavior query pro hard experiments reported  cessing measuring number peers involved seen exponential distribution values  query processing report time query observed acquaintance graphs regular ring  processing number answers              structure observed random graphs                                                        measured integration degree queries num    distributed behavior query processing         ber distinct peers involved query processing                                                        observed kind exponential distribution  measured distribution depth query pro                                                        values depth  smaller values   cessing potential width query depth peers repeated histories phenomenon  query maximum length reasoning branches observed random acquaintance graphs  veloped distributed algorithm returning answer closely related smallworld topology  width query estimates number neighbors                                                          figure  shows cumulative distribution function  solicited average processing query                                                        width queries each curve summarizes  runs    figure  shows cumulative distribution function                                                          cnf    queries  depth  queries make vary number                                                      solved locally  solved asking just  shared variables edge ratio cnf mapping                                                        neighbor   cnf    queries  clauses length  each point ﬁgure reports run                                                        solicit  neighbors average each soliciting   distinct query                                                        peers  chance result explains    curves show relatively small query depth                                                        combinatorial explosion observed hard instances  instance   cnf   query depth  greater  curves query experiments pointed direct impact                                                               value query processing surprising  depth greater  suggests algorithm cnf                                                        considering hardness clauses length  prime im  haves networks                                                        plicate computation experiments suggest ex    soon value cnf increases queries                                                        ponential distribution query depths short path  longer depths   cnf                                                           length peers acquaintance graphs  queries depth greater  maximum                                                        important repetition solicited peers large   focus three curves right sharp                                                        clustering coefﬁcient small world acquaintance graphs  threshold clearly appears showing three phases sharp  growth representing query processing small depth fol  lowed plateau slower growth small  time number answers  depth query processing ’plateau’ characteristics report time performance study algorithm  exponential distribution values process deployed real cluster  heterogeneous                   cdf queries’s width             average  answers produced                                                       quickly                                                      hard hard instances algorithm pro                                                       duces lot answers coming number different                                                        peers instance measured average  answers                                                    hard  answers hard problems                                                       represents large data addition                                                        hard instances  runs produced                                                    answer noticeable hard instance                                                     hard checking satisﬁability equivalent central                                                      ized theory formula corresponding centralized                                                        version distributed theories  variables                                                      clauses   length                                          cnf      ratio  queries width smaller                                     cnf  shown monasson et al                                          cnf                                         cnf formulas does restrict locality variables                                                     satunsat transition continuous                          width queries                                                                                                                discontinuous  like sat                                                        stances intuitively  random psat prob  figure  cumulative distribution function queries width                                                        lem shares characteristics random sat problems  scale recentered   axis                              −            −     let emphasize characteristics                                                        hard network   tran  computers based previous observations cho sition phase sat unsat instance monasson  sen focus  differents kinds acquaintance graphs et al  occurs mn mn  noted easy medium hard hard table  near transition phase conﬁrm                                                        hard instances practice course                             network                    comparison indicative variable               easy     medium     hard     hard   locality restriction standard model                                                cnf   cnf   cnf   cnf   summarize deployed real cluster hetero    stans     geneous computers algorithm scales    thans          th                                                hard instances shares characteristics large    ans     –          thans   –        formula crossover satsat                           satunsat transitions algorithm able gen     timeout                             erate large number answers reasonable time    answers                             majority runs    unsat                           table  characteristics query processing easy  hard networks                                      related work                                                        distributed message passing algorithm    values reported table  mean values scribed section  viewed distributed version   different queries each column show ordered linear deduction chang lee   time needed produce st th th th produce new target clauses extended siegel  answers query each mean time followed  order produce implicates given clause  centage initial queries taken account longing target language extended  averaging instance medium case  ﬁrst order case inoue  problem comput  queries produced  answers th ing new derived clauses aka hl Φiprime implicates cor  answer given average  seconds aver responds exactly problem computing proper prime  age does account queries did produce implicates wrt theory extensively studied   answers row mean time needed centralized case marquis  survey  produce answers including queries lead timeout pointed differences  percentage reported timeout row work amir mcilraith  peer  rows report mean number answers ratio topeer setting tree decomposition acquaintance graph  proven unsatisﬁable queries wrt network    possible second contrast partitionbased algo    surprising ﬁnd timeout rithms amir mcilraith  algorithm able  easy case known marquis  satisﬁability combine answers different peers order compute  checking prime implicates computation tractable implicates involving target variables different peers  sets clauses length  high partitioning modelbased diagnosis algorithm distributed em  global theory induced low value number bedded systems provan  exploits knowledge  shared variables witness “easy” cases reason distribution diagnose optimization  ing centralized theories point outline case purpose distributed atms mason johnson 
