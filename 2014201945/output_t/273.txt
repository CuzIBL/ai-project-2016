                 constraint partitioning solving planning problems                      trajectory constraints goal preferences∗             chihwei hsu benjamin wah               ruoyun huang yixin chen        dept electrical engineering    dept science engineering            coordinated science laboratory          washington university st louis           university illinois urbanachampaign            st louis mo  usa                    urbana il  usa                          rhcecwustledu              chsuwahmanipcrhcuiucedu                       chencsewustledu                        abstract                          π   st stsntnwheresi inter                                                        mediate state time ti trajectory constraint deﬁned      pddl    speciﬁcations include soft goals     logical formula respectively end      trajectory constraints distinguishing high true time time      quality plans feasible plans  trajectory trajectory constraint deﬁned en      solution space reduce complexity solv force formula enforce formulas      ing large pddl planning problem constraint    time trajectory clearly trajectory constraints      partitioning used decompose    pose challenges planning number      straints subproblems lower complex  actions facts increased      ity constraint locality soft goals view new features pddl problems study      trajectory constraints effectively ex paper partitionandresolve strategy solving      ploited existing subgoalpartitioning techniques problems efﬁciently planning problem represent      developed solving pddl problems        actions scheduled variables identify constraints      paper present improved partitionand mutual exclusion mutex goal state trajectory ac      resolve strategy supporting new features tions given possibly infeasible plan partition      pddl evaluate techniques resolving vi   constraints subproblems solve subproblems      olated global constraints optimizing goal prefer dividually existing modiﬁed planner resolve      ences achieving subgoals multivalued   violated global constraints subproblems      representation empirical results th inter                                                          constraint partitioning demonstrated      national planning competition ipc benchmarks                                                        effective technique solving large planning prob      show approach effective signiﬁ                                                        lems chen et al  each subproblem      cantly outperforms competing planners                                                        fraction original constraints signiﬁcant relax                                                        ation original problem lower complexity    introduction                                       compared original problem technique                                                        leads global constraints subproblems  plan quality major issue planning prob effectively resolved using extended saddle  lems traditional quality criteria pddl planning like point condition wah chen   makespan inadequate inspired real applications soft                                                          constraint partitioning approach components  goals trajectory constraints introduced                                                        problem representation ii attributes used partitioning  pddl speciﬁcations gerevini long                                                         iii partitioning algorithm iv subproblem formulation    soft goals used modeling goal preferences                                                        design each component depends problem rep  instance prefer storing crate depot storing                                                        resentation planner used solving subproblems  crate depot leads higher violation                                                        note variables constraints planning prob  cost plan metric value planning soft goals entails                                                        lem studied determined length  selection appropriate subset soft goals                                                        solution plan known directly  infeasible achieve worst case                                                        partition constraints clustering algorithm instead  exhaustive search needed identify best subset                                                        identify problemdependent attributes used    trajectory constraints hand hard                                                        characterize constraint localities initial possibly  soft constraints intermediate states during plan exe                                                        infeasible plan use attributes partition  cution used express temporal logic plan                                                        constraints initial plan subproblems good lo  ning identify good path feasi                                                        calities solving subproblems  ble paths goal state informally plan trajectory                                                          ipc benchmarks represented pddl edelkamp    ∗research supported national science foundation grant hoffmann  original partitionandresolve  iis                                          strategy sgplan chen et al  partitions                                                     ijcai                                                                                                                            partitioning strategy                                                                       section ﬁrst illustrate constraint locality                                                     pddl problem partitioned trajectory                                                     straints soft goals present partitioning algo              variable  id                                                      rithm results ipc benchmarks                                        constraint locality trajectory constraints                        constraint id                        soft goals  figure  constraintvariable structure depicting strong shown figure clustering constraints  constraint locality constraints ipc rovers pddl problem subgoals does lead high  propositional instance clustered subgoals straint locality goal section iden                                                        tify new problemindependent attributes allow pddl  straints benchmarks subgoals goals problems partitioned better constraint locality  benchmarks conjunctive list facts recall solution plan pddl problem rep  strong locality mutex constraints subgoals resented multivalued variables satisﬁes mutex trajec  each problem constraint locality measured tory goalstate constraints constraint  fraction constraints global span mul locality improved state variables goal  tiple subproblems problem partitioned fig state constraints called guidance variables used clus  ure  shows strong locality clustering constraints tering constraints subproblems goalstate  ipc roverspropositional instance gerevini et al representation conjunction facts partition   subgoals approach works andresolve approach sgplan applied directly  goal conjunctive list facts             figure illustrates constraintvariable distribution    subgoal partitioning effective cluster mutex constraints red points tpp  pddl domains presence soft goals trajectory qualitativepreferences ﬁve guidance variables  constraints lead constraint localities different represent stored quantity ﬁve products  observed pddl domains figure depicts constraint locality greatly improved figure  constraintvariable distribution clustering result unsatisfactory number  straints tppqualitativepreferences instance soft constraints blue points localized  soft goals trajectory constraints considered address issue cluster soft constraints  clustering result leads poor constraint locality guidance variables figures shows    clustering constraints ipc instances observe constraints clustered leading good  propositional representation binary facts sgplan constraint locality note constraints  usually requires superﬂuous facts obscures mu involve limited number guidance variables exhibit  texes example location truck tpp strong constraint locality section study  main represented binary facts like attruck granularity partitioning order reduce num  market  attruck market implicit ber global constraints  straints enforcing consistency represent addition good locality advantage using guid  constraints compactly use multivalued domain ance variables converted classical  formulation mdf paper based sas formal planning goals greatly reduces efforts implement  ism b¨ackstr¨om nebel  mdf used ing planner solving subproblem current plan  planners previous versions pddl including ners solve subproblems nonempty conﬂict  fast downward helmert  ip planner van den free goals explains arbitrarily  briel et al  representation makes implicit mu struct subproblems inconsistent goals constraints  texes explicit reduces number global constraints ing direct graph partitioning  subproblems instance location truck  denoted variable multiple values  proposed partitioning algorithm    main contributions paper design new based observation constraint locality associated  strategy clustering partitioning constraints guidance variables present section  pddl planning problems demonstration suc algorithm identifying guidance variables selecting  cess prototype planner based constraint locality suitable number partitions clustering constraints  observed partition mutexes hard soft trajectory variables algorithm requires  constraints planning problem loosely related sub straints expressed mdf implemented pre  problems multivalued state variables study processing engine following techniques helmert  various design options partitioning demonstrate  translating pddl representation mdf  improvements constraint locality handle features use mdf does introduce new types constraints  pddl develop new techniques global cause mutex mdf mutex pddl  subproblem levels optimizing goal preferences ﬁrst deﬁne guidance variables set vari  resolving trajectory mutex constraints       ables goalstate constraints values                                                     ijcai                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                variable  id                                                                                               mdf  variable id                  mdf  variable id                                                                                                                                   constraint id                   mdf constraint id                 mdf constraint id          na¨ıve clustering soft goals clustering mutexes guidance variables clustering mutex trajectory constraints  figure  constraintvariable distributions rearrangement tppqualitativepreferences instance  show different degrees constraint locality using three ways clustering constraints    variables determined satisfying hard goal table  tradeoffs number partitions trucks  constraints minimizing extent penalties timeconstraints instance  soft goal constraints deﬁne goal subproblem partitioning strategy partitioning bottleneck guidance  partial assignment set guidance variables  partitions       specify maximum number partitions  global constraints                                                                           avg  local const  number guidance variables                                                                number partitions important parameter subproblem                                                                              partitioning algorithm desirable enumer timesubproblem  sec   sec  sec  ate different numbers partitions study trade bottleneck  partitions  min bottleneck var  guidance var  offs best approach guidance  partitions   guidance variables                                                         subgoal subgoal partitioning  problemdependent features utilized employ  logical choice through identiﬁcation bottleneck vari  ables various planning domains limited objects titioning best respect bottleneck variables  sources mutexes actions want concurrently finally cluster guidance variables formulat  access treated bottleneck resources ing graph partitioning problem deﬁne node  limit parallelism speciﬁcally search group state graph guidance variable edge  variables type called bottleneck variablesthat nodes constraint variables  changes state variables depend include constraints automatically sat  example locations vehicles transportation isﬁed values guidance variables example  mains bottleneck variables action asserts imply stored goods level stored goods level true  location vehicle strategy set num determined value storedgoods level  ber partitions smaller number guidance value storedgoods level preferences  variables number bottleneck variables     soft constraints set weight edge    addition mdf analysis identify remove violation cost corresponding soft constraint  accompanying state variables order eliminate possibly apply competent graph partitioning software  redundant guidance bottleneck variables state metis httpglarosdtcumnedugkhome  variables values inferred values viewsmetis cluster constraints groups  state variables example oncrate depot im related minimal number global constraints  plies incrate depot given indepot depot true  depot storage area depot identiﬁca  results ipc benchmarks  tion possible action add oncrate depot section report evaluation results pro  add incrate depot delete incrate depot posed partitioning strategies ipc benchmarks  delete oncrate depot each candidate chosen qualitativepreferences track  state variable test values relation stances soft goals trajectory constraints ta  ship values state variables        ble  shows average fraction constraints    table  shows tradeoffs granularity ipc active global constraints initially three partitioning strate  truckstimeconstraints instance instance gies entries table zeroes parti  partitioned respect bottleneck variables result tioning domainstrategy combinations  conﬁrms claim section  time solving sub result shows partitioning based guidance vari  problem decreases three orders magnitude ables leads better constraint locality subgoal  number partitions number global constraints partitioning strategy controlling granularity  increased small number number avoid exorbitant resolution overheads locality  partitions increased partitioning weak subproblem complicated solved  respect guidance variables diminishing reduc partitioning address issue section   tion time solve subproblem number ing subproblemlevel decomposition techniques note  global constraints increased dramatically case par three partitioning strategies work storage                                                     ijcai                                                    table  fraction constraints active global planner ﬁrst decides values partitioning  straints initially averaged instances each guidance state vector partitioning constraints  ipc qualitativepreferences domain three partitioning metric value each assignment x estimated  strategies keys table                 solving following relaxed problem       domain      bottleneck guidance  subgoal                                                                                                            min   jx πjxx  jππ       tpp                                          π       openstacks                             subject  hπrx                     trucks                                                     x       storage                                                     rovers                                                                        π   stsntn deﬁnes plan trajec                                                        tory hπ set hard constraints rx value                                          techniques                                                     plan        penaltyvalue         studied      reachability test metric function jx π consists       evaluation    update strategy                                                                                                           global     jx value wholly inferred andjπ                                           constraint   value calculated evaluating plan trajectory                                           resolution                               π             global constraints subproblems          additional restriction  prune cases                                           handling                                          x                                           preferences  violation deduced                                                           ﬁnd best x heuristic search backtrack                                           constraint              π                           gn        partitioning ing π    unknown planning ends use      globallevel planning                 mdf      j˜xπ plan metric value relaxed plan xto                                                        estimate jxπ relaxed plan provided ba                                           granularity  sic planner modiﬁed metricff used reachability           pc       pn    pnc                                         control     tests jππ zero search reduces                                                        enumeration reachable assignments xinthat                                                                                           x                                           temporal     case solution optimal best                   basic planner             engine      general strategy does guarantee optimality              ffmcdc heuristic planner                                                            π                                           trajectory   basic planner does ensure optimality π                                            constraints    search decomposed goalstate          trajectory                        engine                    temporal                            constraints corresponding variables parti          constraints          search−space                     engine           engine               reduction   search     tioned disjoint sets number reach                                            space       able assignments exponential respect gener                                           reduction      subgoallevel planning                            ally limit number assignments explored space                                                        enumerated large decomposition            figure  architecture sgplan                                                          handling enumeration general trajectory                                                        straints difﬁcult involves number interme  main constraint locality strong diate states ﬁnal state  instances domain huge number large feasible space inconsistencies constraints  straints small fraction violated global constraints difﬁcult detect approach divide trajectory  need resolved iterations         constraints local global constraints hard local                                                        straints enforced basic planner global    architecture sgplan                            straints resolved penalty method follow sim                                                        ilar procedure resolving mutexes handling global  sgplan partitions planning problem subproblems level trajectory constraints soft constraints  each goal state ﬁnds feasible plan each satisﬁed compute plan metric end  figure  global level partitions problem each iteration record incumbent note  guidancebottlenecek variables resolves vio penalties used resolving constraint violations differ  lated global constraints local level calls modiﬁed preference weights used computing metric value  metricff planner solving each subproblem using vi  olated global constraints global preferences biases  subproblemlevel search    globallevel search                              basic planner mainly follows metricff’s heuristic algo                                                        rithm hoffmann  employs new heuristic func  sgplan solves planning problem formulated ob tion better handle new features pddl using mdf  jective constraints using penalty func implemented new heuristic similar  tion objective transformed constraint func fast downward helmert ourminimum causal  tions weighted penalties looks extended sad dependencycost mcdc heuristic employs complete  dle points esps function wah chen cursive depthﬁrst search generating heuristic plan  each iteration planner solves subproblem generating minimum cost pruning causal graphs  feasible plan satisﬁes local constraints contrast fast downward heuristic incomplete  minimize weighted violations global constraints prunes arcs causal graphs mcdc                                                     ijcai                                                    provides accurate heuristic plan efﬁciency table  slowdowns solving large ipc instances  compete metricff’s “ignoredeletelists” heuristic ﬁxed number partitions respect proposed  function use mcdc better deadend detector partitioning strategy                              ˜                                        proposed strategy    partitions  rx metricvalue estimator jx π                ipc instance                                                                      bming    implemented parser preprocessor tpppr         −−           supporting pddl domains synchronize checks   tppmt        −                                                                 tppmtc          −     −−−  constraints evaluation violation costs encode openstackspr         each constraint resp preference value artiﬁcial predi openstacksmt na        cate resp function constraints grounded quan storagepr   −−                                                                storageti      −−          tiﬁers compiled away during state transitions values storagetc         artiﬁcial ﬂuents derived existing trajec truckspr      −−  tory using axioms having encoding modiﬁ  trucksti                                                                      truckstc       −      −  cation allows perform breadthﬁrst search bfs pathwayspr na        satisfying constraints optimizing preferences pathwaysmt na                                                                 roverspr     −           improve efﬁciency bfs incorporate new    roversmt     −−−            −  heuristics constraint satisfaction metricff’s heuris pipesworldpr   −      tic function solution add artiﬁcial facts local pipesworldmt   −                                                                  bottleneck variables  guidance variables  constraints goal state subproblem compute ’−’ cpu time exceeding  minutes na bottleneck variables  combined heuristic value sum heuristic value  constraints subgoal table  number instances solved sgplan respect  meaningful sum heuristic values hard soft total number instances parenthesis each vari                                                             −  straints penalize soft globalconstraint violations ant  means instances domain mettime tpp  iteratively increasing weights                 openstacks includes metric metrictime    solving partitioned subproblem domain    prop mettime simp qual comp const  eliminate irrelevant actions search space tpp            identify relevant actions traversing causal graphs openstacks     −−  mdf ignoring actions useful trucks         achieving current subgoal variables prioritize storage                                                                pathways     −      −  actions cause inconsistent assignment mdf                                   −−  variables ﬁrst ﬁnding set bottleneck rovers                                                             pipesworld    −−            variables applying helpfulaction idea ff hoff  mann nebel  defer actions concur  rently change value bottleneck variables  metrictime similar problem structure    subproblems generated possible sub openstackspropositional strategy fails detect  problem complicated solved especially weak locality does ﬁnd bottleneck vari  proposed partitioning strategy chooses small number par ables beneﬁt partitioning domain  titions reducing grain size effective tangible instances easy  complexity resolving global constraints table  summarizes statistics ipc instances  instance subproblems ipc openstacks domain solved sgplan shows solve   trivial solve challenge resolve global instances unsolved instances  constraints case basic planner fails ﬁnd fea metrictimeconstraint track pipesworld domain  sible subplan use incremental planning hsu et al  metrictimeconstraint track weak performance  landmark analysis hoffmann et al  sgplan ineffective heuristics handling  compose subproblem manageable units      trajectory constraints logical formula                                                        quantitatively qualitatively                                                          pipesworld domain sgplan does    experimental results                               perform observed interesting features  ﬁrst evaluate performance proposed partition domain set guidance variables overlaps  ing strategy selects number partitions bottleneck variables unlike domains  minimum number bottleneck variables num bottleneck resp guidance variables strong causal  ber guidance variables test proposed strategy pendencies each identiﬁed locality  number large ipc instances select instances weaker density shared resources higher  domains preferences finally figure  compares performance sgplan  readily solved relaxing soft constraints domain variants competing planners    table  shows slowdowns solving each instance participated ipc experiments conducted  using ﬁxed number partitions respect ghz intel xeon linux time limit   proposed partitioning strategy shows pro minutes memory limit  gbytes results show  posed strategy usually best solving sgplan faster solve  openstacksmetrictime domain  openstacks   stances compared competing planners                                                     ijcai                                                    
