        uniﬁed    theory    structural    tractability     constraint    satisfaction                                    spread    cut  decomposition              david cohen                      peter jeavons                     marc  gyssens       dept   science          computing   laboratory              department   wni            royal  holloway                  oxford  university         limburgs   universitair centrum          university london         wolfson  building parks road         universitaire campus           egham  surrey uk                   oxford  uk               diepenbeek  belgium          dcohenrhulacuk          peterjeavonscomlaboxacuk         marcgyssenslucacbe                      abstract                            variety decomposition methods devel                                                        oped applied constraint satisfaction commu      paper introduce generic form struc                                                        nity database community examples include meth      tural decomposition constraint satisfaction                                                        ods based use treewidth freuder  cycle cut      problem guarded decomposi                                                        sets dechter pearl  treeclustering dechter      tion show existing decomposition                                                        pearl  hinges gyssens et al  cycle hypercut      methods characterized terms ﬁnding                                                        sets hypertrees gottlob et al  meth      guarded decompositions satisfying certain speci                                                        ods rely reducing given problem instance equiv      ﬁed additional conditions                                                        alent instance simpler structure      using guarded decomposition framework      solved efﬁciently      able deﬁne new form decompo       paper present generic abstract form decom      sition spread cut show  position guarded decomposition show      discovery width spreadcut decompositions earlier decomposition methods viewed      tractable each spread cut decom special cases guarded decomposition each character      position strongly generalize existing decomposi ized simple additional conditions      tions hypertrees finally exhibit family                                                          existing decomposition method based use      hypergraphs                                                              hypertrees gottlob et al   particular im      width best hypertree decomposition each                                                        portance shown strictly general       width best spread                                                      decomposition methods each      cut decomposition                                                        tractable discover hypertree decompositions                                                        width general framework presented al    introduction                                       lows identify new decomposition method based  constraint satisfaction problem consists set vari use structure spread cut show  ables assigned values subject certain spreadcut decompositions generalize methods  straints constraints restrict simultaneous assign previously shown generalized hypertree decomposi  ments certain speciﬁed subsets variables tions tractable each discover spread cut  realworld problems represented naturally decompositions width furthermore exhibit family  framework dechter  marriott stuckey  examples spreadcut decomposition method    similar problems arise ﬁeld relational databases obtains better decompositions hypertree decomposi  referred conjunctive query evaluation tion method  problems kolaitis vardi  techniques  developed paper applied directly  constraint satisfaction hypergraphs  conjunctive query evaluation problem shall pur  sue application                                tractability    decision problem general constraint satisfaction deﬁnition  csp instance triple  hv ci  problem nphard mackworth  motivates  search restricted subproblems tractable  solvable polynomialtime                   • ﬁnite set variables    paper considers subproblems constraint satis                                                          •  set called domain   faction problem shown tractable using  called structural methods decomposition methods • set constraints each constraint ∈ pair  methods rely exclusively using structural properties  hχ ρi χ ⊆ set variables called  instances words way constraints scope ρ ⊆ dχ set functions  overlap each                                       scope domain called relation ca solution csp instance  hv ci function                        restriction scope constraint                           ∈ functions relation                                                                                                               example  consider csp instance pag  hv ci                                                                                                                           instance variables each  signed value   subject  constraints  straints deﬁned follows→      note each constraint allows assignment  variables scope constraint does allow figure  hypergraph hag structure  three variables scope value  simulta csp instance pag deﬁned example   neously does allow assignments    straightforward calculation shows instance  exactly  ∗    solutions                          guarded   decompositions                                                        csp  instances set variables called  order study structural properties csp instances                                                        solution equivalent set solutions  way constraint scopes overlap each  need standard notion hypergraph   known tractable structural classes csp instances                                                        characterized showing instances contain  deﬁnition  hypergraph pair  hv ei transformed solution equivalent instances sim  arbitrary set called vertices set pler structure constraints transformed instances  subsets  called hyperedges            obtained calculating relational joins certain  deﬁnition  csp instance     hv ci  straint relations original instances projecting  structure  denoted σp  hypergraph new scopes general transforma  hv χ  hχ ρi ∈ ci                                tion scheme introduce following terminology    hypergraph class csp instances deﬁnition  guarded block hypergraph pair  structure denoted Ψh                          hλ χi guard λ set hyperedges                                                        block χ subset vertices guard  example  recall csp instance pag deﬁned exam  ple  structure pag hypergraph hag illus deﬁnition  csp instance  guarded  trated figure                                    block hλ χi σp  constraint generated hλ χi    set vertices hag set        constraint hχ ρi ρ projection χ  hyperedges hag following subsets relational join constraints scopes el  vertices             ements λ                                                               given csp instance  structure collection                                                        guarded blocks generate constraints each  indicated introduction decision problem guarded blocks obtain new collection  general constraint satisfaction problem nphard mack straints new csp instance cases  worth  considerable ﬁnd guarded blocks carefully chosen new instance  ing restricted problem classes instances solution equivalent  used solve   recognized solved polynomial time             property holds csp instance structure  deﬁnition  class csp instances called tractable collection guarded blocks called guarded  polynomial time algorithm decide membership decomposition formally deﬁned follows  polynomial time algorithm solves deﬁnition  set guarded blocks Ξ hypergraph  stances                                          called guarded decomposition    class csp instances called structural  csp instance  hv ci ∈ Ψh instance     h∈h  Ψh  class hypergraphs          hv ci set constraints generated                                                        members Ξ solution equivalent   simplify presentation assume paper  variable csp instance constrained determine given collection guarded  variable occurs scope constraint      blocks fact guarded decomposition theorem  gives simple efﬁcient way answer question tractable construction possible generate each  based following properties                        new constraints polynomial time  deﬁnition  guarded block hλ χi hypergraph tractable solution possible solve resulting  covers hyperedge contained χ         instances polynomial time    set guarded blocks Ξ hypergraph called tractable discovery possible obtain guarded  guarded cover each hyperedge covered  decomposition type considering given  guarded block Ξ                                  hypergraph discover decomposition    set guarded blocks Ξ hypergraph called exists polynomial time  complete guarded cover each hyperedge oc                                                         consider extra conditions imposed  curs guard guarded block Ξ covers                                                        guarded decomposition ensure each                                                         properties  theorem  set guarded blocks Ξ hypergraph  guarded decomposition complete  tractable construction  guarded cover                                  time complexity relational join operation ork                                                         number relations joined  proof let   set guarded blocks hypergraph             Ξ                                          maximum  number tuples relations                                                        ensure tractable construction property    suppose Ξ complete guarded cover sufﬁcient bound number constraint relations  choose ∈ guarded block hλ χi ∈ Ξ need combined using relational join operation  ∈ λ ⊆ χ construct instance bounding number hyperedges  pe structure witness fact Ξ guard guarded block used decomposition  guarded decomposition                                                        deﬁnition  width set guarded blocks    let domain pe     each edge  ∈  let constraint pe scope allow maximum number hyperedges guards  mappings finally let constraint pe ﬁxed value class guarded decompositions  scope ce allow mappings width tractable construction property  mapping assigns value  vertices  simultaneously                                         tractable solution    let hλ χi guarded block set Ξ ∈ λ way ensure new instances obtained using  constraint generated pe hλ χi allows guarded decomposition tractable solution prop  assignment hand ∈ λ choice erty ensure structure new instances  know ⊆ χ case observe acyclic beeri et al  property acyclic  projection ce proper subset allows deﬁned follows  signments constraint generated pe hλ χi  allows assignment                              deﬁnition  join tree hypergraph connected                                                        tree  nodes hyperedges    constraints generated pe elements  Ξ allow assignment resulting csp instance vertex occurs hyperedges                                                        occurs each node unique path  solution equivalent pe Ξ guarded  composition                                     necting  words set nodes                                                        occurs induces connected subtree     converse suppose Ξ complete guarded  cover let arbitrary csp instance struc hypergraph called acyclic join tree  ture show csp instance pΞ obtained theorem  gyssens et al  csp instance  taking constraints generated each element structure acyclic solved polynomial time  Ξ solution equivalent                                                         deﬁnition  join tree set guarded blocks Ξ    clearly solution solution                                         Ξ               connected tree  nodes elements Ξ  hand completeness Ξ construction pΞ                                                        vertex occurs blocks  projection solution pΞ edge ∈                                                        Ξ occurs each block unique path connecting  allowed constraint scope                                                         words set nodes  solution solution                 Ξ                                       occurs block induces connected subtree                                                           set guarded blocks acyclic join tree    tractability                                                        theorem  class acyclic guarded decompositions  shown guarded decompositions used tractable solution property using theorem   transform given csp instance solution equivalent deﬁnition  show acyclic guarded decom  stance different structure          position obtained arbitrary acyclic guarded    order able use guarded decompositions iden cover increasing width signiﬁcantly increas  tify tractable structural classes need impose addi ing number guarded blocks adding appropriate ad  tional conditions ensure following properties ditional guarded blocks make complete guarded covertheorem  set guarded blocks Ξ acyclic each cases listed query decom  guarded cover set Ξ ∪ ei  ∈ positions shown additional conditions  acyclic guarded decomposition             sufﬁcient ensure corresponding class acyclic  view result shall focus acyclic guarded cov guarded covers ∆ parameterized tractable  ers use deﬁne classes decompositions  cases query decompositions class csp                                                        stances c∆ tractable structural class    tractable discovery                                •  biconnectedcomponent decomposition hy  class hypergraphs having guarded cover   pergraph edgedeﬁned acyclic complete guarded  ﬁxed class ∆ width denoted c∆ cover Ξ satisfying articulation condition  deﬁnition  class guarded covers ∆ called                                                                  ∀ hλ χi  hλ χi ∈ Ξ χ ∩ χ ≤   parameterized tractable  each value exists  polynomialtime algorithm given hypergraph ∈ • cyclehypercutset decomposition hypergraph  c∆ returns guarded cover width    hv ei edgedeﬁned acyclic complete  given hypergraph ∈ c∆ reports failure   guarded cover Ξ satisfying simplicity condition  follows results ∆ class  acyclic guarded covers parameterized tractable         ∃c ⊆ ∀ hλ χi ∈ Ξ λ − ≤   c∆ tractable structural class csp                                                          •  hingetree decomposition hypergraph  stances each value                                                            edgedeﬁned acyclic complete guarded cover Ξ satis                                                            fying separation condition    known    tractable  structural classes  show existing decomposition methods  ∀ hλ χi  hλ χi ∈ Ξ ∃e ∈ λ ∩ λ χ ∩ χ ⊆  csp deﬁned terms ﬁnding acyclic guarded                                                          • cyclecutset decomposition hypergraph  covers particular special properties                                                            edgedeﬁned acyclic extended cover Ξ    ﬁrst note historical reasons existing                                                            hyperedge guarded block Ξ consists sin  composition methods csp make use extended                                                            gle vertex Ξ satisﬁes simplicity condition  guards contain vertices hyperedges able  present methods uniform way introduce  ∃c ⊆ ∀ hλ χi ∈ Ξ ∃e ∈ χ − ⊆  idea transforming csp instance adding unary                                                  constraint cv each variable cv   • query decomposition hypergraph  hv ei  corresponds extending structure instance pair hΞ Ξ complete edgedeﬁned acyclic  ensure includes hyperedge each variable    extended cover join tree Ξ satis  deﬁnition  let   hv ei hypergraph        ﬁes connectedness condition  guarded cover hypergraph hv ∪  ∈  ∀e ∈ hλ χi ∈ Ξ  ∈ λ connected  called extended cover  following result shows existence extended • hypertree decomposition hypergraph pair  cover width equivalent existence standard hΞ Ξ acyclic guarded cover  guarded cover width means extended covers rooted join tree Ξ satisﬁes following  simply notational convenience allow better scendant condition  decompositions    theorem  hypergraph acyclic extended       ∀ hλ χi ∈ Ξ       ∩            χi   ⊆ χ  cover width acyclic guarded cover                                                                                                                   e∈λ     hλiχii∈d λχ  width number guarded                                                                                                                                   blocks                                                   dhλχi set descendants hλ χi   note existing decomposition methods minimum  width hypertree decomposition  based guarded covers block exactly hypergraph called hypertree width  union edges guard  deﬁnition  guarded cover Ξ edgedeﬁned block  comparing decompositions  each guarded block Ξ exactly set vertices relative strengths different decomposition techniques  tained hyperedges guard                derived acyclic guarded covers compared using    characterize known structural decompo measures developed gottlob et al                                     sition methods gottlob et al  traditional deﬁ deﬁnition  let ∆ ∆ classes guarded  nitions terms corresponding class acyclic guarded covers say ∆ generalizes ∆ exists value  covers certain additional conditions            ε   c∆ ⊆ c∆  ε    notion parameterized tractable say ∆ strongly generalizes ∆ ∆ generalizes  ﬁned strictly weaker wellknown notion ∆ exists does exist ε    ﬁxed parameter tractable                             c∆ ⊆ c∆  εhypertrees shown strongly generalize special property guarded block relies χ  parameterized tractable classes decompositions ing “large enough” χ  ﬁned previous section gottlob et al  just vertex χcomponent component meet  recently shown hypertree width vertex λcomponents  hypergraph three times minimal possible restrict possible blocks given guard appropri                                                                 width acyclic guarded cover adler   follows ately polynomially bound number guarded  hypertrees strongly generalized blocks whilst getting effective decompositions mo  class acyclic guarded covers            tivates following deﬁnition    show section possible  deﬁne parameterized tractable class ∆ acyclic guarded deﬁnition  guarded block hλ χi hypergraph  covers families hypergraphs min unbroken components each χcomponent meets  imal width guarded cover ∆ smaller hy λcomponent ∩  ∈  pertree width constant factor improvement λ ⊆ χ  allows corresponding instances solved exponentially spread cuts acyclic guarded cover  faster using hypertree decompositions        guarded blocks unbroken components    deﬁnition  let ∆ ∆ classes guarded example  consider hypergraph hag deﬁned  covers say ∆ superior ∆ example  illustrated figure     c∆ rk ⊆ c∆    minimal width hypertree decomposition                                                                                                                           hag  three     spread   cuts                                         following set guarded  blocks spread                                                        cut hag   width        section deﬁne new class acyclic guarded            covers called spread cuts show classes instances      bounded spread cut width tractable spread  cuts superior hypertrees                    spread  cuts parameterized tractable    section write λ refer deﬁne canonical form guarded blocks  vertices set hyperedges λ λ  e∈λ unbroken components show hypergraph                                                      spread cut width spread cut width  deﬁnition  let  hv ei hypersgraphsand χ ⊆ each guarded block canonical  set vertices say hyperedges ∈  χadjacent ∩ ⊆ χ                             deﬁnition  let λ set hyperedges deﬁne     χpath connecting  sequence       label lλv vertex set hyperedge                                                          λcomponents include hyperedge containing      er  er  ei χadjacent ei             −                                            say guarded block hλ χi canonical each        −                                 set hyperedges ⊆ χconnected hyperedge ∈ λ vertices outside χ exactly  pair hyperedges χpath connecting particular label    set hyperedges hyperedge χcomponent ∀v ∈ − χ ∀w ∈ ∈ χ ↔ lλw  lλv  maximal nonempty χconnected subset    nonempty set vertices vertex χcomponent theorem  spread cut width                                                        spread cut width each guarded block  hyperedge χcomponent cχ                                                         canonical    cχ − χ                                                        proof space limitations outline  paper unless stated component  mean vertex component                              proof                                                          idea show guarded block hλ χi  example  consider hypergraph hag deﬁned unbroken components hyperedge ∈ λ  example  illustrated figure                 v∈e−χ lλv ≤  given fact start    consider guarded block hλ χi λ  spread cut each hyperedge each guard remove  χ                                   froms block vertex label vertices     three hyperedge  χcomponents     outside block straightforward show  result acyclic guarded cover  vertex χcomponents                 spread cut width each guarded block    hyperedge λcomponents  canonical  vertex using canonical form establish following    λcomponents                      result    notice each vertex χcomponent meets non theorem   spread cuts parameterized tractable  sempty intersection exactly vertex λcomponent                                                           easily shown using “robbers marshals”    open research question whethershypertrees characterization hypertree width gottlob et al   superior spreadcuts                              space restriction omit proof
