       new look semantics optimization methods cpnetworks                             ronen brafman                                   yannis dimopoulos                      dept science                           dept science                         bengurion university                                university cyprus                        beersheva  israel                             nicosia  cyprus                     brafmancsbguacil                                 yanniscsucyaccy                               abstract                               variable associated node depends vari•                                                                 ables associated parents node        preference elicitation bottleneck                                                                    cyclic cpnets emerge naturally set in•       decision support applications agent spec•                                                                 terdependent variables important        ification tasks cpnets designed make                                                                  example domshlak et al   note        preference elicitation process simpler in•                                                                 dependency emerge naturally webpage compo•       tuitive lay users graphically structuring                                                                  nents webpersonalization tool cyclic cpnetwork        set ceteris paribus cp preference statements                                                                  raise conceptual computational problems        preference statements people natural                                                                  satisfactory answers worse accord•       intuitive various contexts cpnets un•                                                                 ing standard semantics cpnets cyclic cpnets        derlying cyclic structure emerge naturally                                                                  inconsistent example domshlak brafman        inconsistent according current se•                                                                  shown preference ordering induced        mantics user required revise                                                                  simple cycle cycle does contain smaller cy•       paper show optimization queries                                                                  cles nodes inconsistent        meaningfully answered inconsistent                                                                  outcomes        networks troubling user requests                                                                  show strictly preferred   strictly pre•       revisions method focus•                                                                                                                  ferred addition acyclic networks        ing users revision process revisions truly                                                                  determine preferred outcome linear time        needed process provide formal seman•                                                                 face evidential constraints constraints fix        tics justifies approach introduce                                                                  value certain variables corresponding algorithm        new techniques computing optimal outcomes                                                                  known networks contain cycles                                                                    fact cyclic networks arc inconsistent raises    introduction                                                 practical concern user specifies incon•  ceteris paribus cp preference statements       sistent cyclic network ask revise network   natural intuitive preference statements     need provide information help   people make surprising drawn   obtain consistent network paper make prac•  attention researchers philosophy ai  tical contributions aimed improving process   doyle wellman  hanson  cp statements        show various optimization queries answered nat•  indicate preference value con•   urally network inconsistent according   text fixed background example statement      standard semantics cases additional burden   prefer apple pie chocolate cake dessert ceteris  placed user second revision required   paribus expresses fact given identical contexts  show notion partial model studied area    meals  differ dessert contain• logic programming used identify aspects   ing apple pie preferred containing chocolate model require revision   cake finer distinctions using conditional cp        pursuing practical goals make num•  statements example prefer red wine white wine    ber technical semantic contributions pro•  main course beef case preference  vide flexible semantics cpnets identical   red wine white wine restricted comparisons    current semantics networks con•  identical meals main course beef              siders consistent semantics justifies approach      cpnets iboutilier et al  graphical tool rep• generating optimal outcomes given networks incon•  resenting structuring set cp statements cp    sistent standard semantics second show   network consists graph describing preferential depen• answer optimization queries using various approaches   dency relationship different domain variables each    include reduction sat reduction logic programs   node annotated conditional preference table cpt extends current methods restricted acyclic   describes users preference different values  nets helps define notion partial outcome       qualitative reasoning                                                                                                    paper structured follows section  pro•    assignment pc example user    vide necessary background ceteris paribus preference   assess operating independent features    statements cpnets sections   closer  given processor type prefers linux given    look notion consistency cpnets problem  amd processor windows given intel processor    cyclic networks introduce suggest natural defini•  believes windows optimized   tion preferred model improved  intel processor linux better condi•  explain problem existence models    tional preferential independence standard notion multi  reduced csp problem section  discuss      attribute utility theory keeney raiffa    alternative translation nonmonotonic logic programs    cpnets   implications section  conclude   version paper available authors web  cpnets introduced boutilier et al tool   site contains proofs optimization method based cut• compactly intuitively representing qualitative pref•  set conditioning discussion constrained optimization erence relations graphical model exploits conditional   inference tasks comparison logic programs    preferential independence structuring decision makers   ordered disjunction fbrewka et ai                 preferences ceteris paribus equal se•                                                                 mantics cpnet model based notions    cpnets                                                      purely qualitative preferential independence bears sur•                                                                 face similarity bayesian nets pearl    start review ceteris paribus preference state•    nature relationship nodes cpnet   ments preferential independence followed defini•   generally quite weak compared probabilistic rela•  tion cpnets                                               tions bayes nets                                                                      during preference elicitation each variable ar    ceteris paribus preference statements                      variable set decision maker asked specify set   preference relation total preorder ranking  parent variables ar affect preferences   set outcomes given outcomes write                   values given particular value assignment   preferred write            decision maker able determine   strictly preferred                                   preference order domain denoted pa      types outcomes concerned consist      things equal   possible assignments set variables formally    information used create graph   assume given set variables                          cpnet each node immediate   corresponding domains  set                        predecessors given structural information decision   possible outcomes exam•                            maker asked explicitly specify preferences   ple context problem configuring personal   values each instantiation conditional   pc variables processor type screen   size operating screen size domain                     operating domain   windows windowsxp  each assignment set   variables specifies outcome  particular pc configura•  tion preference ordering outcomes speci•  fies ranking possible pc configurations     number possible outcomes exponential   set possible total orders doubly ex•  ponential explicit specification represen•  tation ranking realistic implicit   means describing preference relation notion   conditional preferential independence plays key role   representations intuitively conditionally pref•  erentially independent given yz disjoint   subsets fixed assignment ranking   values independent value formally let   partition let pz   conditionally preferentially independent given iff                          conditionally preferentially independent given       example consider network figure   conditionally preferentially independent given   variables boolean network three vari•                                                                 ables ab preferences un•       note notation difficulty using logical conditional preferences cs values depend   negation operator drawing packages use alternative values figure pref•  notations instead instead                          erence order induced cpnetwork pair                                                                                                qualitative reasoning                                                                                     figure  simple cycle cpnetwork                                                                                 obtained single improving flip natu•                                                                           rally definitions respect cpnetwork                                                                            fixed appropriate context                                                                              theorem  valid iff improving flipping                                                                            sequence      figure  cpnet corresponding preferential order immediate consequence following                                                                              consequence  valid iff improving flip•   outcomes valid iff path                      ping sequence hut improving flipping sequence    graph                                                        weak preference semantics                                          interesting theorem relates standard stronger se•                                                                           mantics semantics    according standard semantics preferences ex•   pressed cpt cpnet strict preferences               theorem  let cpnetwork consistent accord•  suggest viewing weak preferences using preorders                ing standard semantics satisfies    instead strict orders show leads semantics         cording semantics iff satisfies according   slightly weaker standard semantics             standard semantics   fact leads identical orderings cpnets con•  sistent according standard semantics formally                 theorem shows semantics direct extension                                                                            standard semantics understand better                                                                            soon look networks inconsistent according                                                                            standard semantics                                                                               finally define notion optimality context                                                                            cpnetwork possible definitions out•                                                                           come said strongly optimal iff                                                                            outcome holds outcome said                                                                            weakly optimal iff outcome                                                                                     holds case strictly bet•                                                                           ter outcome incomparable second                                                                            case outcomes preferred                                                                            outcome strictly preferred networks                                                                            consistent according standard semantics                                                                            unique best outcome strictly better   valid strict preference valid          outcome class net•  preference relation outcomes equally desir•             works optimal outcome   able model cpnetwork according              strongly weakly optimal class   semantics cpnets consistent according               computationally challenging identify con•  semantics                                                           centrate strongly optimal outcomes      semantics related syntactic no•  tion proof preference flipping sequence boutilier          optimality cyclic networks   et al  let outcome suppose as•  signs value user ranks lower                  semantics cpnets allows cycles   parental context satisfied improve             consistency acyclic cpnets guaranteed according   flipping value improving flipping                    standard semantics boutilier et al    sequence sequence outcomes                             networks unique optimal outcome remains true                                                                            introduce evidential constraints constraints        standard semantics                                   fix value variables       qualitative reasoning                                                                                                                      cyclic networks induce inconsistent cyclic    preference order according standard semantics ex•   ample consider network figure  contains cy•   cle size  called simple cycle domshlak braf   man  webpersonalization applications described    domshlak et al  naturally gives rise cyclic    structures variables correspond articles ads    content element online newspaper value    each variable indicates currently displayed    cpnet captures preferences editor regard•   ing presentation different elements users cur•   rent screen preferences usergenerated    content constraints lead personalized view takes    account users interests editors expertise pre•  ferred combinations news items example cp  net figure  review new toyota   vehicle testdrive new bmw series  car story   recent man united match story man   citys recent success suppose man united sponsored   toyota man city bmw editor pre•  fer display stories competing teams andor com•  panies screen expressed cpnet   figure  stipulating present   present present      domshlak brafman  shown          figure  outcome space cycle network   network consistent total order set   outcomes satisfies preferences embodied   network easy examine   figure  describes relationships different   possible outcomes nodes figure correspond   outcomes edges correspond legal improving sin•  gle flips example consider outcome abcd   lower lefthand side figure  given assigned   bs cpt  preferred value   edge abcld ablcld                                                                    figure  ordered outcome classes cycle network      figure  contains cycles making impos•  sible totally order elements consistently   apparent contains elements albcld   consist variables cpnetwork hor entry   ablcdl sense viewed optimal ele•    cp table variable add constraint   ments elements alblcldl abcd              denotes context assignment   sense viewed worst elements             parents preferred value      according semantics network induces      example cpnetwork figure  obtain   three classes outcomes described figure  out•      following propositional formula   comes each class equally preferred in•  comparable strict preference outcomes   belonging different classes important consequence    case figure  formula   clear candidates set optimal   outcomes outcomes class      semantics lenient allowing   specifications sense cyclic cycle con•  tains outcomes outcomes equally preferred   lemma  strongly optimal outcome cpnet iff   specification informative user needs   satisfies csp   informed fact example shows   cycle contain outcomes    algorithm does work weakly   standard semantics dismiss cpnetwork    optimal outcomes set outcomes   inconsistent semantics tolerant use   equally preferred strictly improved fig•  cpnet determine optimal outcome                   ures   show example network giving rise     turn computation optimal outcome         case relation outcome space induces   simple reduction csp problem sat problem      treatment centers strongly optimal out•  variables binary variables reduction comes simply refer optimal outcomes                                                                                                 qualitative reasoning                                                                npcomplete problems solved efficiently                                                                  practice stateofthe art systems smodels isurja                                                                 nen niemela  dlv idellarmi etal                                                                     alternative semantics normal logic programs                                                                  partial stable model semantics sacca zaniolo                                                                   threevalued semantics each atom as•                                                                 sume values true false undefined given three                                                                 valued assignment atomsp say partial                                                                  model each  rule head                                                                  contains literal body     figure  network strongly optimal outcome       reduct ps wrt partial model defined                                                                  program obtained deleting rule                                                                  negated atom ii         abdd    abcd    abcd   abcd            rule undefined atom occurs iii negated atom          abcd   abcd    abcd   abcd             bodv remaining rules partial model                                                                  called founded model maxi•                                                               mal founded model called partial stable model                                                                  hard program partial stable model         iabcd   abcd    abcd   abcd          abcd   abcd    abcd   abcd          figure  outcome classes network figure         lemma  implies problem finding single op•   timal outcome np cpnetwork acyclic    optimal outcome linear time boutilier et     result indicates linear time solution simple  intuition founded model similar be•   cycle nets variables binary result• hind stable model willing ignore cer•   ing csp instance sat laspvall et        tain variables rules participate partial                                                                  stable model try ignore variables     logic programs partial consistency                      wrt set inclusion    start background semantics logic        translating cpnets logic programs    programs followed reduction cpnet optimization   section translate cpnets nonmonotonic logic    logic programs using notion partial stable    programs showing onetoone correspondence    model logic program define corresponding no•   nets optimal outcomes stable models corre•   tion cpnet captures variables  sponding logic program    reasonable candidate optimal value        value assignment atoms atornsp denote    set atoms  assigned value true    set atoms assigned value false                                                                  theorem  strongly optimal outcome cpnet iff    reduct  logic program wrt assignment                                                                stable model corresponding logic program    logic program obtained deleting rule    negated atom ii                    note preferred values each prefer•   negated atom body remaining rules            ence statement participate translation cpnetwork      resulting program does contain negated atoms   logic program furthermore operator appears    called definite logic program let denote de•    choice rules set feature indicate   ductive closure definite logic program coin•     weak link cpnetworks nonmonotonic    cides minimal model stable model lgelfond     logic programs long version paper   lifschitz  logic program assignment       show case cpnetworks constraints    normal logic program                     operator plays central role translation   stable models problem decid•      relation cpnetworks logic programs   ing normal logic program stable model       stronger appear       qualitative reasoning                                                                                                
