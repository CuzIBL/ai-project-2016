                         mechanism design partial revelation                                    nathanael¨  hyaﬁl   craig boutilier                                nhyafilceblycstorontoedu                                      department science                                           university toronto                                     toronto ms canada                        abstract                          bot fully revealed relieving agents                                                        computational communicational burden      classic direct mechanisms require utility revelation important problem computational mechanism design      agents difﬁcult practical      multiattribute settings work study par paper consider design oneshot mech      tial revelation framework oneshot mecha anisms make decisions using partial type information      nisms each agent’s type space partitioned ﬁnite section  present model partial revelation      set partial types agents report partial survey models results inﬂuence approach      type type lies classic result emphasis tension partial revelation      implies implementation dominant strategies im dominant strategy implementation section  show      possible model ﬁrst show relaxation relaxing implementation bayesnash expost does      bayesnash implementation does circumvent      problem propose class partial revelation allow design “useful” partial revelation mech      mechanisms achieve approximate dominant strategy anisms consider approximate dominant incen      implementation computationally tractable tive compatibility potential gain misreport      algorithm myopically optimizing partitioning ing one’s partial type bounded deﬁne class regret      each agent’s type space reduce manipulability minimizing mechanisms section  chooses outcome      cial welfare loss allows automated design minimizes worstcase loss wrt social welfare      oneshot partial revelation mechanisms worstcase possible types declared partial types      guarantees manipulability efﬁciency  ﬁne payment schemes important proper                                                        ties mechanisms speciﬁcally approximate efﬁciency                                                        rationality incentive compatibility argue    introduction                                       suitability results hold partial types  important challenge facing ai design protocols quality approximation depends critically choice  through selfinterested agents interact achieve partial types section  deﬁne algorithm opti  desirable outcome negotiating outcome mize choice partial types allows tradeoff  maximizes social welfare consequence mechanism elicitation degree efﬁciency incen  design —which studies precisely problem tive compatibility loss taken regretbased mech  economic gametheoretic point view—has anisms optimization algorithm provide framework  important area study ai science automated design partial revelation mechanisms  broadly roughly speaking mechanism game intended explicitly address tradeoffs prelim  implement social choice function scf func inary computational experiments conﬁrm efﬁcacy  tion selects outcome function prefer approach defer proofs longer version paper  ences participating agents    key result mechanism design revelation princi  ple states mechanisms restricted incentive com  patible direct mechanisms agents fully reveal  background deﬁnitions  true type utility function outcomes instance  vickreyclarkegroves vcg mechanism begin essential background motivate  cial welfare maximization                            deﬁnitions use simple running example buyer    unfortunately direct type revelation problematic prac wishing purchase car seller wish facilitate  tice utility functions extremely difﬁcult negotiation agree car seller’s  agents compute effectively communicate inventory price paid buyer’s valuation  mechanism especially settings large multiattribute different cars seller’s cost known ideally  outcome spaces familiar example combinatorial auctions identify car maximizes surplus differ   design mechanisms utility functions ence buyer’s valuation seller’s cost                                                    ijcai                                                      mechanism design                                 nant strategies characterized efﬁcient allocation                                                        function groves payments   adopt standard quasilinear environment agents                                                                  x∗      − sw    x∗  aim choose outcome allocation      −i     −i     −i   −i    set possible allocations each agent ≤ functions hi  t−i → nontrivial settings  type ti drawn set ti valuation function vi  groves scheme class mechanisms im  x×ti  →  vix ti denoting value allocation plement scf dominant strategies follows  type ti cases we view ti encoding i’s famous results roberts  showed contains  utility function xlett  ti set type  outcomes valuations possible  vectors social welfare given ∈ sw scf implementable dominant strategies iff afﬁne    vix tilett−i denote type vector agents welfare maximizer afﬁne transformation social wel  iandsw  −ix   ji vjx tj  example fare green laffont  proved implement  buyer’s type tb determine valuation vbx tb afﬁne welfare maximizer use groves payments  transacted vehicle similarly seller cost implement social welfare maximization dominant  space possible types tb deﬁned number strategies elicit information  ways instance  tb set termine efﬁcient allocation generally fur                                                                                                     nvectors  ≤ ≤ constant vi denoting ther information determine groves payments  utility ith vehicle valuations  represented compactly instance buyer’s  partial revelation mechanisms  utility known linear respect small set car deﬁne partial type θi ⊆ ti agent subset                                                                                  θ  features tb kdimensional kn ’s types partial type vector includes partial type  type captured set parameters      each agent direct partial revelation mechanism prm                                                        mechanism action set ai set partial    mechanism consists set actions  aian  allocation function  → payment functions types Θi agent asked declare partial type  pi  →  intuitively mechanism offers action true type lies agents reveal partial  set ai chooses allocation based actions types notion truth telling relaxed somewhat  taken each agent assume quasilinear utilitythat deﬁnition  prm incentive compatible ic—under  agent i’s utility allocation payment ρi relevant equilibrium concept—if induces equilibrium  uixρitivix ti − ρi mechanism induces  strategies πi each agent ti ∈ πiti  bayesian game assuming probabilistic beliefs types words ic prm induce each agent  each agent adopts strategy πi  ti → ai associating port partial type contains true type ex  action type                                ample deﬁne partial type space buyer    goal mechanism design design imple deﬁning set rough bounds valuation each  ment scf  → instance social car cars having precise range  welfare maximization ft  arg max sw instance partial type assert vbcar  ∈  work focus social welfare maximization efﬁ     vbcar  ∈      cient allocation implementation depends equi limiting revelation partial types form allows  librium concept used speciﬁcally induces strategies πi buyer negotiate having precisely determine  each agent equilibrium oπt  ft valuation each car simply estimate roughly  ∈  say implements standard equilibrium partial types overlapping exhaustive  concepts lead dominant strategy ex postandbayesnash exhaustive incentive compatibility gen  implementation revelation principle allows fo erally possible overlapping truth  cus attention direct incentive compatible mechanisms ful report possible agent reason strategi  ai  ti each agent reveal type truthfully cally choose maintaining truthfulness  equilibrium example allow restriction possible types overlap  mechanisms ask car buyer seller report key results speciﬁcally incentive efﬁciency guarantees  complete valuation cost functions respectively require nonoverlapping types    groves scheme famous class mechanisms sume follows partial types exhaustive  quasilinear environments vcg instance general given partial type vector θ mechanism  social welfare maximization implemented domi able determine efﬁcient allocation x—the allo                                                        cation x∗t maximizes social welfare type    priors game prebayesian form  different various ∈ θ corollary roberts’ result  strict type uncertainty                          oneshot prm used dominant strategy    each agent dominant strategy strategy implementation unless partitioning each agent’s type  optimal matter induced game space each joint partial type θ determines unique  dominant strategy equilibrium implementation ex post maximizing x∗ ∈ θ dominant strategy implementa  equilibrium vector strategies π πi optimal tion realized general  types known assuming strategies                                                             π bayesnash equilibrium πi maximizes i’s utility auctionlike settings result holds scf satisfying  expectation others’ types                    independence irrelevant alternatives                                                     ijcai                                                      related work                                     allocations selected mechanism each deﬁne                                                                                                                                      θi  recent research examined methods involving limited xi xprxθi   prθ−iθi · proθiθ−ix    incremental elicitation types circumvent difﬁculties            θ−i  type revelation especially singlegood com  binatorial auctions work incremental elicitation section restrict partitions type  involves techniques elicit “just enough” information space “gridbased” each parameter’s space values                                                        split ﬁnite number intervals form lb ub  determine vcg outcome fully allocation pay lb  ub  ments fully maintaining incentive properties  derive following results  cas   mechanisms incremental theorem  valuation functions possible  ﬁt precisely framework generally allow ex bayesnash ic gridbased prm                                                                                       θ  post implementation issues pertaining approximate efﬁ                     θi                                                                      ∀i ∀θiθi  xi  xi def xi           ciency avoided altogether furthermore sequential                                                                        ∀i  xi  xj                    approach critical avoiding revelation unfortunately  information required fully determine property  states regardless report agent  vcg outcome considerable  enforcing ic posterior xi outcomes property  states  just implementing scf induces sig distribution agents alloca  niﬁcant cost                                     tion function deterministic selects alloca    alternatively elicit information deter tion each report vector mechanism trivial  approximately optimal outcome common approach triviality avoided allocations probabilistic  singleagent elicitation  sacriﬁcing decision quality properties restrictive  reduce elicitation effort adopt perspective proposition  bayesnash ic gridbased prm  recently used approach design sequen higher expected social welfare trivial mechanism  tial prms  leading approximate expost implementa picks allocation highest ex ante social  tion oneshot mechanisms presented paper welfare  stronger incentive properties approximate dominant imple proposition  exinterim fortiori expost individual  mentation allow interesting payment schemes rationality ir required expected sum payments  class approaches prms exempliﬁed prior bayesnash ic gridbased prm zero  ity games   models partial types elicited  exact approximate dominant strategy implementation sense partial revelation bayesnash imple  realized prms designed deal mentation strictly trivial useless achieves  agents having onedimensional “singleparameter” result mechanism revelation given  types example agents singleitem auction val expost equilibrium vector strategies  uation outcome speciﬁed parameter bayesnash equilibrium possible probabilistic priors  deed roberts’ result escaped restricting space results imply expost ic prm trivial  preferences severe fashion combinatorial auctions note gridbased restriction sufﬁcient condition  singleminded agents similarly restricted results hold currently looking  like model mechanisms generalize identifying necessary conditions example strongly  realistic valuation structures                   suspect partitioning type space convex partial                                                        types lead negative results    approximate ic considered                                                        results present  perspectives nisan ronen  show computational  approximation vcg destroy truthtelling manip  ulation approximate vcg computationally   regretbased prms  difﬁcult  inducing “practical” incentive compatibil partial revelation mechanism choose allocation  ity ic expectation high probability xθ each reported partial type θ ∈ Θ gen  demanded  finally attempt bound gain erally way ensures efﬁciency propose  agent achieve lying proposed exchanges use minimax regret   choose allocations asso   view approximate ic adopt ciated each partial type vector  class partial revelation mechanisms deﬁnition  pairwise regret decision respect  partitioning algorithm provide ﬁrst approach auto decision xˆ feasible type set θ                                         mated partial revelation mechanism design                  rx xˆθmaxswxˆ     − swx                                                                                 t∈θ                                                         mechanism regret choosing    bayesnash expost implementation              stead xˆ adversary impose type vector                                                          θ                                bayesnash context each agent probabilistic  maximum regret decision minimax                                                        regret feasible type set θ respectively  prior types prt−iti truthtelling                                                                     mrxθmaxrx       xˆθ           bayesnash equilibrium prm deﬁnes distri                      xˆ  bution reports partial types agents     mmr   minmrx                                                      θi                           θ               θ              each reports θi agent distribution xi                                                                    ijcai                                                      minimaxoptimal decision θ denoted x∗θisany theorem  let regretbased partial revelation mech  allocation minimizes eq  distributional infor anism partial type space Θ partial groves payment                                                                           ∗  mation set possible utility functions choosing functions piifmrx θθ ≤ ε each θ ∈ Θthenm  recommending minimaxoptimal decision x∗ minimizes εefﬁcient εdominant ic  worst case loss efﬁciency respect possible real words truth telling εdominant strategy equi  izations types ∈ θ refer regret maximizing                                        ε                                                    librium truth telling agent utility  ˆ eq  witness                      optimal regardless reports    recent approaches minimax regret optimization specialize partial groves payments partial  shown practical utility models factored clarke payments  convenient functional form generalized additive ∗        ∗                      ∗  dependence gai  utility uncertainty expressed piθ−i swx−iθ−i fiθ−i − sw−ix  fiθ−i  form linear constraints factored models ∗                                                          Θ−i  →  arbitrary function chooses  setting minimax regret optimization formulated   −i                                                        allocation based reports agents  linear mixedinteger program mip exponentially                                                        restriction allows following ir guarantee  constraints solved using iterative  straint generation procedure practice enumerates theorem  let regretbased partial revelation mech  small number active constraints            anism partial type space Θ partial clarke payments                                                                  ∗                                                        piifmrx  θθ ≤ ε each θ ∈ Θthenm εefﬁcient  deﬁnition  regretbased partial revelation mechanism ε                ε  mechanism allocation function chooses dominant ic expost ir  outcome minimizes max regret given revealed partial words agent incentive greater ε  type vector oθx∗θ θ ∈ Θ       participate mechanism    assume prm  each agent declares  provided intuitive justiﬁcation  partial type θi ∈ Θiandthatm regretbased use minimax regret determine allocation associated  chooses x∗θ minimax regret wrt social welfare revealed partial type proﬁle provide  declared type vector θ                           formal justiﬁcation use minimax regret respect                                                      incentive properties prms speciﬁcally par  observation  let  regretbased partial revelation tial groves clarke payment schemes worstcase manip  mechanism partial type space Θifmrx∗θθ ≤ ε         θ ∈          ε                               ulability possible type proﬁles exactly equal  each   Θthen   efﬁcient truthtelling agents greatest minimax regretlevel possible type pro    simply formalizes obvious fact max ﬁles show  gret mechanism choice bounded εthenifall                                                        proposition  let ﬁxed partial type space  agents reveal partial types truthfully assured         Θ                                                        regretbased prm wrt Θ using partial clarke pay  ε maximizing social welfare                                                                                                  ment scheme prm  wrt  using par    prms generally guarantee efﬁciency dif                                 Θ                                                        tial clarke scheme worstcase manipulability efﬁ  ferent type proﬁles partial type vector θ require                                                        ciency loss rationality violation great  different allocation choice maximize social welfare                                                        exist nonregretbased prms inequality  consequence result roberts means unable                                                        strict  implement “approximate” choice function dominant  strategies instead relax implementation concept words nonregret based scheme perform  natural fashion derive payment scheme ensures better regretbased scheme respect efﬁciency  approximate ir ic dominant strategies         loss obviously gain misreporting one’s partial type    consider following generalization groves payments incentive nonparticipation analog propo  given joint report θ θiθ−i agents corre sition holds regarding manipulability efﬁciency  sponding choice x∗ agent i’s payment             ing partial groves payment scheme                 ∗                    ∗                   “clarkestyle” restriction pay   piθpiθ−i hiθ−i − sw−ix   fiθ−i                                  ∗                                                        ment scheme quite general x−i fi arbitrary func  hi Θ−i → arbitrary function fi Θ−i → tions choice affect worstcase prop  ti function given partial type vector θ−i selects erties used reduce likelihood  type vector t−i set fiθ−i ∈ θ−i  rationality violation andor maximize rev    recall revelation fiθ−i complete enue mechanism reducing removing rationality  type vector t−i reported agents hi violation implies revenue loss tradeoff  particular t−i argument partial groves pay criteria attractive feature prms  ment scheme select arbitrary type each considerable scope optimization payment  agent consistent declared partial types apply scheme nature partial type revelation  standard groves payments eq  selected types dealing approximate incentive properties  differ each payment function pi arbitrary hi aware small deviation truth  functions depend partial types revealed par agent cause major changes mechanism’s alloca  tial groves payments require signiﬁcantly reve tion leading say large losses efﬁciency par  lation regretbased allocation tial groves payments agent gain ε compared                                                    ijcai                                                                                                                               θθiθn  revealing partial type truthfully settings              node   computational cost ﬁnding good lie especially given    considerable uncertainty value lie     θθiθn   θθiθn  certainty others’ types substantial    node                node    ε small worth cost  formal approximate incentive compatibility sufﬁcient  ensure practical exact incentive compatibility                                                             θθiθn θθiθn θθiθn θθiθn    develop sense difﬁculty associated manip  node     node      node     node   ulating mechanism consider agent able  compute untruthful strategy lie greater utility figure  example mechanism tree  truthtelling order exploit approximate incen  partial type optimization algorithm  tive guarantee ﬁrst determine true  value lie incurring valuation cognitive costs sim ofﬂine iterative myopic approach op  ilar revealing truthfully evaluating lie timization agent type space partitions myopic  requires considerable accurate information following senses each step focuses reducing  types strategies decent priors minimax regret joint partial type greatest regret  costliness computations time cognitive reﬁning splitting considering impact  computational resources implies manipulation partial types considers immediate  worthwhile unless bound ε quite loose incentive effects reﬁnement lookahead future splits  compatibility practice exact         simplify presentation ﬁrst naive com    similar argument regarding approximate putationally intensive method formulated terms deci  ir determining gain participating sion tree construction show modiﬁed  difﬁcult potential small loss worth tractable algorithm uses heuris  agent given savings mechanism provides tic function given partial type vector selects agent  revelation computational costs relative rev partial type split important realize  elation alternative finally given complexity splits “queries” agent—the mechanism  mechanism design settings cognitive computational sequential splitting partial type  communication costs accounted potential loss crease number partial types agent  efﬁciency acceptable tradeoff given high choose mechanism actually executed  level revelation required exactly efﬁcient mechanisms splits agents determined mechanism ask                                                        agents select partial types induced reﬁne                                                        ment process words ofﬂine construct par                                                        tial types used oneshot mechanism discuss    construction partial types                      heuristic function                                                          figure  illustrates creation partial types prm  far focused design regretbased prms terms decision tree construction outset  ﬁxed collection partial types se information available mechanism set possible  lection partial types critical performance guar types each agent given prior deﬁning initial  antees types determine partial type vector θθn θi  ti labels  gree regret incurred mechanism key design initial root node tree node  heuris  issue construction suitable set partial types tic function vector selects agent say agent  minimizes revelation maximum minimax regret  split agent’s partial type θ      ε                                                                            set heuristic reason reﬁned partial types θ θ  reasons choosing  ably tractable approach automated optimization particular split elaborated intuitively  type space partitioning class mechanisms split positive impact respect max regret  ﬁxed partition optimized reduction mechanism creates child nodes                                                                                           algorithm constitutes tractable approach corresponding partial type vectors θθiθn                                                            automated partial revelation mechanism design        θ θiθn nodes   figure     follows assume agent type simply new leaves tree correspond partial type vec  bounded nvector valuations each allocation ∈ tors used mechanism splitting process  dealing multiattribute outcome space al terminate point update partial type space                                                                                                   low agent’s typeutility function factored Θi agent  removing θ adding θ θ wethen  ing generalized additive independence representation  compute minimax regret level optimal allocation wit  utility parameterized local subutility functions ness single optimization new leaf nodes  small sets attributes ﬂat unfactored model given partial type vectors  parameters simply valuations allocations xwe multiple leaves heuristic function ﬁrst select  assume follows type space ti given leaf node splitting selecting split does  lower bounds parameters agent i’s utility selecting partial type vector leaf node greatest min  model focus partial types speciﬁed similarly  imax regret algorithm iterates fashion repeatedly                                                    ijcai                                                    
