                  learning minesweeper multirelational learning                       lourdes pefia castillo                            stefan wrobel                  ottovonguerickeuniversity                fraunhofer ais sankt augustin                      magdeburg germany                       university bonn germany                            abstract         minesweeper oneperson game looks       deceptively easy play average hu•                          man performance far optimal playing       game requires logical arithmetic probabilis•  figure  left available information board right       tic reasoning based spatial relationships seven tiles determined safe minem       board simply checking board state consis•      tency npcomplete problem given dif•      ficulty handcrafting strategies play safe given difficulty hand•      games ai researchers in•   crafting playing strategies games ai re•      terested automatically learning strategies searchers interested possibility au•      experience paper show  tomatically learning strategies experience how•      integrating certain techniques general pur• exception reinforcement learning tesauro       pose learning mio resulting  playing strategies heuristics used       capable inducing minesweeper playing strat•   game playing programs coded tuned hand in•      egy beats winning rate average human   stead automatically learned work use gen•      players addition discuss necessary     eral purpose ilp mio learn playing strategy       background knowledge present experimental re•     minesweeper multirelational learning ilp consists       sults demonstrating gain obtained tech• learning examples usually framework pro•      niques show strategy learned game vided clausal logic                                                            task learning rules deduce minesweeper moves                                                          proved arduous test current multirelational    introduction                                         learning systems paper recent opti•                                                         mizations make possible mio discover minesweeper   minesweeper popular oneplayer game written                                                          playing strategy experimental results obtained playing   robert donner ami curt johnson included                                                          minesweeper using strategy show better performance   microsoft windows©  beginning game                                                          obtained average nonexpert human players   player presented apx board containing pq tiles                                                            remainder paper organized follows   squares blank hidden tiles                                                          section discusses complexity game de•  mines distributed uniformly random board task                                                          scribes learning task section  describes background   player uncover tiles contain                                                          knowledge learning new techniques used   each turn player select three actions                                                          section  shows empirical results effectiveness   moves mark tile unmark tile                                                          learning techniques strategy obtained perfor•  uncover tile action tile contains                                                          mance game playing related work surveyed section    player loses number mines                                                          section  concludes   tile displayed   board depicted fig  left   number  located second row indicates  minesweeper   hidden blank   neighbouring tiles                                     minesweeper interesting     simplicity rules makes minesweeper minesweeper shown npcomplete simulat•  look deceptively easy playing game chal• ing boolean circuits minesweeper positions kaye    lenging player requires logic arithmetic reasoning kaye describes minesweeper consistency problem   perform certain moves given board state probabilis• problem determining pattern mines   tic reasoning minimize risk uncovering blank squares rise numbers seen given       learning                                                                                                 board partially filled numbers marked mines    determining data given consistent      realizes complexity game calculating    estimate size search space consider      board   mines case beginning    game player pq   tiles choose    tile uncover assuming    player does uncover  tiles    choose leads possible    sequences win game alternatively calculate   probability random player winning game    probability random player chooses tile    does contain      chance choose tile   probability random player winning game                    easiest playing level      measure complexity minesweeper   number games won average nonexpert human play•  ers estimate average human performance playing   minesweeper carried informal study study   persons played minesweeper   asked play times   board    mines participant told aim accuracy   speed study person won average    games standard deviation       learning task   minesweeper situations solved   nontrivial reasoning example consider fig  left  concept   available information board state   clausal theory minimizes classification   numbers careful analysis finds squares     error future instances background   fig  right contain square knowledge used   state blank tiles   determined know mines hidden                                                                   background knowledge   board minesweeper situations   available information identify safe square  background knowledge provides infor•  fig  best option available  mation domain given form logic   player make informed guess guess mini•  predicates facts rules clauses predicate de•    mizes risk blowing uncovering             scribed case argi in•     work consider learning task minesweeper  dicates arguments type background knowledge pro•  induction rules identify safe squares vided learning minesweeper shown   squares deduced given board     table  predicates background knowledge   state instance want learn rules clas• defined trying abstract concepts used hu•  sify blank tiles fig  safe     mans explaining minesweeper playing strate•                                                                 gies concepts obtained authors    learning tools                                           minesweeper playing experience minesweeper                                                                  pages web   machine learning possible choose propo  sitional representation form attributevalue tuples  predicates listed table  td determined   multirelational representation form logic pred• uncovered tile number   shown tile   icates multirelational representation expressive•  tv undetermined blank tile board board state   ness required concepts involved rea•      given list characters   zone list   soning minesweeper intuitive      determined tiles set set undetermined tiles to•  propositional reason use multirelational  gether number mines hidden tiles   learning learning task described usually mul• addition each symbol preceding argument denotes   tirelational learning takes input background knowl•  argument instantiated calling predi•                                                                 cate input argument instanti•  edge positive negative examples target                                                                  ated nonvariable term output argument       safe square blank tile given current board state uninstantiated indicates   contain                                         constant value output argument appear rule                                                                                                                  learning      predicate                                  description        zoneoflnteresttu board zone         returns zone tiles determined neighbours tu                                                   determined tiles share undetermined neighbour                                                   fig  center        totalminesleftboardint returns mines remained marked          allmineslnfringeboard set gives set tiles fringe remaining mines        sethasxminestd board zone set gives set undetermined neighbours td td zone                                                   number mines hidden sec fig  right        diffsethasxminessetl set set  returns set tiles setl set                                                   number mines hidden tiles set        insettu set true tu member set        lengthsetsetint true set contains int tiles        minesinsetsetint returns number mines hidden tiles set                                           table  minesweeper background knowledge                                                      effectiveness implement greedy search   mio exampledriven covering fig  in•      macros consists lookahead step   troduced pena castillo wrobel uses        macros combined each best evalu•  progollike declaration language pro       ated clauses arc selected selected clauses   gol muggleton  lower bounds search space    extended refined tries combine clauses   specific clause called clause      macros available selects best candidates   maximally specific clause entails covers positive  step repeated clause   example mio performs generaltospecific topdown       extended best candidates returned   ida korf  search clause add the•  ory addition mio selects stochastically examples active inductive learning   learns performs parallel search increase stabil• covering algorithm clause learned covers   ity exampledriven approach enforces type strict•  explains positive examples negative   ness three techniques arc implemented mio al•     ones domains games puzzles thou•  low learning minesweeper rules macrooperators     sands examples required contain possible   macros short reduce search space greedy search   game situations hand considering thousands   macros speed learning process active       examples evaluating rule slows learning pro•  learning guide exploration instance space       cess improve efficiency exploration                                                                  instance space active learning cohn et al  included   macros                                                                  mio   macros multirclational learning pena castillo wro•                                                                   active inductive learning consists following steps   bel formal technique reduce hypothesis                                                                  beginning mio learns randomly drawn ex•  space explored covering macro sequence                                                                  amples learned clauses gives   literals chosen clause created                                                                  clauses active learning server active learning server   based providerconsumer relationships liter•                                                                 returns mio counterexamples counterexamples   als literal provider output arguments                                                                  selected examples given random example generator   consumer receives input argument variable                                                                  random sampler mio iterates new exam•  provided literal clause pena                                                                  ples received server tests rules obtained ran•  wrobel show adding macros instead literals                                                                  domly drawn examples discards rules user  clause number clauses evaluated sig•                                                                 defined accuracy value collects new counterexamples   nificantly reduced                                                                  validation step server side avoids overfitting   greedy search macros                                      steps arc repeated userdefined maximum num•  pena castillo wrobel macros used      ber iterations reached counterexample   ida known greedy search explores av•        active inductive learning similar spirit integrative   erage nodes ida greedy search       windowing furnkranz  main differences   miss solution underestimates importance       approach random sampling dynamically   provider literals discriminative power    clientserver architecture used allows treat test•  nonetheless necessary introduce new variables      ing learning separated processes   known myopia problem macros add   literals clause reduce myopia      counterexample positive example covered set   greedy search allowing gain efficiency losing clauses negative example covered clause                                                                     overfitting refers obtaining results high classification      fringe refers blank tiles determined neighbour error new data despite null null training error       learning                                                                                                                figure  rule learned mio left highlighted tile safe center zoneoflntcrest corresponding highlighted    tile right applying difference operations sets determined tiles inside circle concluded tile  safe       empirical results                                           number times search interrupted                                                                  search limit active learning overfitting occurs     improvements obtained each technique                 erroneous rules obtained performance rules    experiments carried determine effects  obtained idam worse ida rules    rules obtained efficiency macros greedy mio macros explores larger hy•   search macros active inductive learning produce pothesis space ida  setting overfits    training examples randomly generate board configu•    training data limit maximum num•   rations blank tiles determined ber clauses explored search set settings ida    neighbour examples blank tile does contain   idam obtain riles running time    labeled safe labeled af• fastest setting algsm hrs    terwards contradictory examples removed exper•    rules learned    iments learning task learn rules identify safe table  shows rules highest winning rate    tiles rule discover mines learned using best  obtained using algsm alidam    setting using active learning macros greedy search extra rule obtained setting      completeness work ran progol muggle   extra rule does improve playing performance    ton firth  foil quinlan cameronjones     important feature rules learned mio     learning task mio failed    applied independently size board    make systems learn correct rules safe tiles pro• number mines rules vary complexity rule sl    gol search interrupted search limits implemented   rule ml correspond trivial situations deter•   maximum stack depth res•      mined tile needs mines mines marked    olutions steps set   respectively    determined tile needs mines blank    foil pruned determined literals needed    neighbours respectively    imply optimizations included mio in•      hand rule seen    deed necessary learn minesweeper playing strategy ta•   complex rules involves three determined tiles    ble  shows empirical results mio settings     deduce safe tile fig  left shows board state rule      experiments active learning performed     allows identify safe tile    seeds means training ex•    rule obtains zoneoflntcrest corresponding unde•  amples generated random sampler mio        termined tile considered fig  center applying   selects examples guide search exper•  difference operations sets determined three uncov•  iments active learning took random samples    ered tiles zoneoflnterest fig  right set   set examples used active learning exper•      obtained deduced tile  safe   iments size sample equal number   examples received mio performing active learning        game playing    positive  negative examples carried      evaluate performance game playing each set   extra experiment mio given complete set       rules obtained used each set rules playing   examples  positive  negative used ac•     strategy automatic minesweeper player calculated   tive learning server test mios rules select counterex• percentage games won player  random   amples experiment stopped mio ran     games table  playing conditions    days reduce running time experiments    ones presented human players begin•  set maximum number clauses explored search       ning player presented board    clauses                                                 mines uncover      table  shows each optimization added mio reduces   note minesweeper implementations   average number rules nodes explored search    hits                                                                                                                  learning table  performance various mio settings used learn rules safe tiles al  active learning gs  greedy search   ida  iterative deepening  macros                                               table  minesweeper rules learned mio          let analyze performance best rule set      pgms plays using equation strategy based find•  table   games player  moves      ing approximate solutions derived integer linear equations    random guesses  used rule sl       probabilities mentioned ramsdell  pgms   used rule  used rule  used rule ml       represents information available board set      addition examined effect adding probabilistic integer linear equations associated undetermined   reasoning experiment instructed player us•     tile variable value  tile hides   ing rules shown table  select tile mini•     equation generated each uncovered                                                                  tile adjacent undetermined tile each equation   mizes probability undetermined tile tu                                                                  form   set undetermined   rules applied equal                                                                  tiles number mines hidden  sim•  determined neighbour                                                                  plify notation equation written                returns number mines needed                                                                   total number hidden mines known additional equa•          returns number blank neighbours tj                                                                  tion simply equates number sum   time player guess selects tile mini•                                                                 undetermined tiles   mizes  player wins   random games                                                                    time tile determined safe board                                                                  changes propagated equations containing    related work                                                 new equation undetermined neighbours added    minesweeper playing programs                               addition ifare equations                                                                  proper subset  equation   minesweeper programs available        added determine tile safe   web programs learning programs playing      pgms iteratively applies following rules     programs authors embedded game        applicable   playing strategy programs john ramsdells   pgms quite successful winning   random   games   board  mines       learning                                                                                                               
