                          value ordering finding solutions                        barbara smith                                paula sturdy         cork constraint computation centre ireland       university huddersﬁeld uk                   bsmithcuccie                           psturdyhudacuk                          abstract                          selected instantiation values assigned se                                                        quence binary choices values assigned      ﬁnding solutions constraint satisfaction                                                        order vv  vk ﬁrst choice point creates alter      problem proving                                                        natives   ﬁrst left branch      search algorithm backtracks chronologically                                                      explored branch fails solutions required      forms way branches order   search backtracks choice point right branch      values assigned immaterial                                                        followed instead crucially constraint  propa      show values variable assigned                                                        gated second choice point created        instead sequence binary choice points                                                         mac algorithm allows      removal value just tried domain                                                        possibility backtracking trying   differ      variable propagated value ent variable assigned just different value      selected value ordering affect search possibility considered      effort show depends problem    binary branching subtrees resulting succes      constraints types constraints show sive assignments variable explored independently      savings search effort signiﬁcant propagating removal value current variable’s      given good value ordering                      domain right branch lead domain reduc                                                        tions propagation affect search future val    introduction                                       ues variable considered future  wellknown order variables instanti value removed domain order  ated make enormous difference search effort values assigned affect search                                                                      solving constraint satisfaction problem just smith  gives example value ordering af  lution required solutions value ordering fecting search ﬁnd solutions present  relatively neglected partly cheap generalpurpose extensive investigation explain value order                                                        ing affect search effort show depending  value ordering heuristics known partly                                      accepted value ordering important solu problem constraints saving search effort way  tions required solution          branching  given good value ordering    frost dechter  showed backjumping  value ordering effect search  search trees golomb ruler problem  lutions say “with backtracking order values examine effect value ordering  chosen makes difference problems ﬁnding solutions using variant golomb ruler  solution searching solutions” argument problem prob csplib golomb ruler marks  node corresponding variable created deﬁned set integers     search tree children correspond values xm− mm −  differences xj − xi  ≤  variable subtrees rooted children nodes ij≤ −  distinct length ruler xm−  explored independently ﬁnd solutions prove objective ﬁnd minimum length ruler modeling  subtree explored order problem discussed smith et al   makes difference overall search              create problem solution set xm−     argument assumes search tree formed minl −  minl minimum possible length  kway branching mitchell  variable model chosen search trees using ilog solver’s  values domain selected instantiation branches default binary branching instance problem  formed constraint solvers ilog solver small display value ordering makes  eclipse  default use search strategy similar signiﬁcant difference number backtracks  mac algorithm sabin freuder  particu chosen model quickest way solve  lar use way binary branching variable problem does expensive constraint propagation inorder reduce search auxiliary variables represent                                                                                  ∈  mm  −  differences marks ruler               ﬁned dij  xj − xi ij generalized arc                                                                                          ∈  sistency gac enforced ternary constraints using                ilog solver’s table constraints enforce gac                                                                                          ∈   alldifferent constraint difference variables  sum difference variables minimum value set                                                                                                  sum ﬁrst integers similarly length xm−−i                                 m− sum ﬁrst integers                                                                                ∈     ∈  duces maximum value xm−−i add constraint                      m−m− break reﬂection symmetry                                                                                                    ∈     ∈    search variables xx  xm− assigned                            order compare value ordering heuristics choosing                     smallest value domain largest choos        ∈    ∈    ing largest value sensible strategy ﬁnd                 ing minimum length golomb ruler length              ∈      ∈    known advance shows effect search                       changing value ordering                                              ∈       ∈      figure  shows search trees resulting proving                      mark golomb ruler length                            ∈     selected value orderings difference striking given                          conventional view value ordering reorders                                        search does affect overall search effort    black circles show failure detected                                                                              search backtracks values assigned increasing                        ∈   der backtracking right branch domain                                                                                                         variable reduced eliminated altogether           ∈        ∈   examine case initial constraint propagation                                reduces domains search variables                                                                                             ∈   ∈            backtracking  right branch ∈                                                                                       ∈   constraint propagation reduces    pairwise differences marks instance ex                                                                                      ∈   cluding assigned just   possible values differences                                                                                          ∈   ≤  symmetry constraint  value  assigned difference  −  means  enforcing gac alldifferent figure  search trees formed proving golomb  constraint difference variables makes inference ruler  marks length  using decreasing value order  branch ∈ considered increasing value order  hand values assigned decreasing order  domain right branch contains value   alldifferent constraint gac       problem shows effect using implementa                                                        tion kway branching ilog solver kway branching             increasing  decreasing   kway             nearly doubles number backtracks compared bi              order      order    branching           nary branching using increasing value order                                                  creasing order worse increasing order                                                allows signiﬁcantly search kway branching                                              larger instances                                          runtimes kway branching usually shorter                                     binary branching decreasing value ordering                                 search tree larger   kway branch                                                        ing takes  sec mhz celeron pc compared  table  number backtracks prove golomb  sec binary branching decreasing value  ruler marks length minl−  minl minimum dering increasing value ordering binary branching  possible length using binary branching increasing decreas signiﬁcantly faster  sec  ing value ordering kway branching                                                          explanation given earlier immediate failure                                                        right branch choice point     table  gives results larger instances ∈ depends global alldifferent constrainthowever alldifferent constraint treated • eliminate symmetry  clique binary  constraints constraints ij  cycle consisting nodes      xj − xi gac choosing smallest value                                                          •  prevent interchanging cycles  domain requires fewer backtracks prove insolubil  ity choosing largest value crucial constraints propagation follow removal value       xm− symmetry constraint domain variable case binary sym    dmm− equivalent   − metry constraints monotonic value removal  example analysed monotonic binary constraints propagate golomb rulers problem given clique  removal largest smallest value  constraints node variables removing value  domain variables reduce domain domain variable does affect vari  removing value effect van hen ables global alldifferent constraint  tenryck et al  given constraint xywith edge variables removing value affect  signed trying values increasing order domains instance values vari  means backtracking smallest value domain ables value occurs domain variables  removed right branch removal turn removing domain means  reduces domain variables assigned assigned immediate effect  lexicographic order case explains assign search variables node variables limited gac  ing values increasing order largest effect maintained ternary constraints linking edge  search                                               node variables                                                          tried different variable orders prob    graceful labeling graph                       lem each case binary branching used value  section consider effect value ordering ordering chooses value middle domain  monotonic constraints interaction takes number backtracks ﬁnd solutions                                                         variable ordering value ordering          way branching value chosen    problem determining graceful labelings smallest largest domain binary branching takes                                                                            graph shown figure  labeling nodes fewer backtracks way branching suggests  graph edges graceful assigns each node unique reduction search mainly symmetry  label    each edge xy labeled straints propagation constraints  fx − fy edge labels different     restricted largest smallest value    possible csp model variable each node  main  xx  xn each domain    variable table  shows results solving problem dif  each edge dd  dq each domain    ferent variable value orders lexicographic  constraints edge joins nodes  reverse lexicographic variable order use orders  xi − xj xx  xn different dd  dq respectively best worst assigning  edge variables assigned permutation values increasing order sturdy  incidentally  values  worthwhile enforce gac comparison demonstrates value order  different constraint alldifferent constraint node compensate poor variable order ﬁnding solutions  variables looser  variables  possible values necessary use order increasing  example figure  expressed  constraints creasing variables rightmost columns table  search variables xx  xn               results heuristic variable                                                        ders assigns values increasing order                                                                                                                       variables decreasing order                                                        comes variable                                                                                                                ordering assigned decreasing order  comes                                                                                                                  variable order assigned decreas                                                    ing order variables assigned reverse                                                        lexicographic order decreasing order variables best                                                                                                             table  shows heuristic good bet                                                                                                                          ter increasing decreasing order cases                                                        true variable orders tried  figure  graph gracefully labeled node numbers heuristic derived empirically trying increasing  correspond variables csp               decreasing order each variable range variable                                                        orders effect changing value order    symmetrically equivalent solutions eliminated                                                        single variable does depend value order cho  adding constraints model petrie smith                                                         sen variables best order given    •             eliminate complement symmetry variable order chosen independently each variable                                      −      symmetry replaces value           heuristic related binary symmetrybreaking    •  eliminate rotations constraints unless late variable order      reﬂections cycle consisting nodes     signing values ascending order lead reducing                  variable order           kway       increasing   decreasing     heuristic                                            branching      order         order                                             bt  sec     bt  sec     bt  sec    bt  sec             xxxxxxxxx                                     xxxxxxxxx                                   xxxxxxxxx                                     xxxxxxxxx                         table  finding graceful labelings graph figure  kway branching binary branching different value orderings    domains variables backtracking variables discussed hnich et al  value appears  assigned decreasing order appear mainly domain dj variable assigned  right  constraints backtracking largest value variable value appears domains  domain removed reduce current variable search variable  domains variables                           chosen backtracking propagation assign                                                        value variable    langford’s problem                                   smith  dualsdf ordering used                                                        chooses value appearing fewest domains corre  previous examples assigning values increas sponding dual variable smallest domain dualsdf  ing decreasing order reduces search effort consider shown better results increasing value order  ably comparison kway branching ﬁnding solutions choose value appear  monotonic binary constraints problem section ing domain search variable  problem monotonic constraints discussed explain good performance    langford’s problem prob csplib stated antiheuristic dualldf chooses value corresponding  follows “a sequence × integers consists dual variable largest domain choose value  tegers  each appearing times integer appearing domains unless alternative  consecutive occurrences integer  inte dualsdf expected search  gers consecutive occurrences integer  duction possible ﬁnding solutions dualldf rarely  possible sequences”             able reduce domains variables right    modeling problem csp discussed hnich et branch nearly bad kway branching  al  possible model nm variables each problem results table  conﬁrm  location sequence value represents integer  location value dj  ≤ ≤ nmisan    instance dualsdf  dualldf kway branching  integer interval nm representing fact oc                     currence div integer mod occurs location                    example  instance                            represent st nd rd oc  currences integer  appearing positions    table  number backtracks ﬁnd solutions three instances  sequence dual model problem variable langford’s problem using binary branching different value                                                                 xi  ≤ ≤ nm each occurrence each integer orders way branching  value position sequence occurrence  problem viewed permutation problem valid dualsdf reduces search effort ﬁnd solu                                  nm  sequence assigns permutation possible values tions compared kway branching good perfor                variables     nm ensure solution mance explained relation problem  permutation values sets variables included straints reduction search  model channeling constraints previous examples does make binary branch            iff    add constraints break sym ing costeffective terms runtime  metry given solution reversing  sequence assign values dd  dnm turn    value ordering heuristic problem devised  symmetry breaking during search  considering removing value domain shown effect value order search  variable dj backtracking affect variables solutions depends propagating removal  removal remove value domain −  value just tried right branch binary choice points  variables example  instance   symmetry breaking during search gent smith   and  values   constraints avoid assignments symmetric  assigned consequence assigning value  considered added dynamically during search right  deletions lead propagation branch additional constraints reinforce effect  possible propagation channeling constraints value order search demonstrate nqueens problem symmetries described gent       constraints  gac alldifferent constraints  smith                                                kway                           kway    basic program ilog solver user manual        branching        dualsdf        branching  variable xii    each row board bt    sec    bt     sec    bt     sec  representing queen row value each col                      umn three alldifferent constraints representing                      queens different columns different di                 agonals each possible directions sbds requires                speciﬁcation effect each symmetry assign               ment value variable instance nqueens            problem reﬂection topleft bottomright diagonal  symmetry transforms assignment xi  xj  table  number backtracks bt runtime ghz pen                                                                                      ﬁrst assignments      tium pc ﬁnd solutions queens problem symme  variable ordering heuristic chooses variable smallest try eliminated  domain using smallest value tiebreaker                                                                 increasing   anti  tracking alternative choice                                                                  order    promise   promise   dualsdf  symmetry remaining given assignment  sbds                                                                                           adds symmetric equivalent  tothe                                                                                          right branch constraints and   propagated choosing value                                                                                                                             using sbds eliminate symmetry                                                                                  queens problem compare value ordering heuristics                                                                              select values increasing order basis com                                                                          parison second use heuristic likely  scope sbds constraints prune table  number backtracks ﬁnd nonisomorphic solutions  mains future variables obvious best nqueens problem using different value ordering heuristics  value attacks unattacked squares  free squares backtracking plausible  increase likelihood sbds constraints pare heuristics kway branching case  remove opposite heuristic choosing value cause sbds depends binary branching antipromise  attacks fewest unattacked squares similar promise tended allow propagation sbds constraints                                  heuristic introduced geelen   duce search best heuristics dual  heuristics antipromise promise respectively finally sdf poor second best suggesting  use dualsdf langford’s problem taking account sbds constraints signiﬁcant alldifferent   xn assigned permutation values                                                      constraints allowing domain reductions right branch    permutation problem global alldifferent experience problem class shows pos  straint does domain pruning channeling sible design value ordering heuristics ﬁnding solu  constraints value removed tions considering propagation constraints added                                          main variables hnich et al       right branch during search removal    ﬁrst compare heuristics symmetry value just tried sbds constraints differences  eliminated results given table  effect search effort relatively small runtimes  value ordering depends alldifferent promise antipromise dualsdf similar  straints treated treated cliques binary creasing order fastest simplest implement      constraints value ordering effect                                                                                            original promise heuristic geelen   search effort table  gives results way branching signed ﬁnd ﬁrst solution quickly worth noting  binary branching heuristics version better antipromise  number backtracks marginally longer runtime spect ≤  promise usually ﬁnd ﬁrst solution    hand alldifferent constraints treated just backtracks antipromise increas                                                global constraints dualsdf requires search way ingly successful avoiding solutions instance  branching search binary branching heuris   promise ﬁnds solution  backtracks  tics reduction search comparison antipromise takes  million promise    way branching great overall symmetry slightly worse antipromise ﬁnding solutions  eliminated kway branching  constraints  fastest runtime maintaining gac alldifferent  straints timeconsuming especially gac  conclusions  reestablished each individual value variable mitchell  showed binary branching  tried binary branching                   search kway branching possibility    table  compares heuristics symmetry backtracking choice point assignment tried  problem eliminated using sbds com need value vari
