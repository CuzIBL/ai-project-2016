                   blog probabilistic models unknown objects∗    brian milch bhaskara marthi stuart russell david sontag daniel ong          andrey kolobov                                         science division                                          university california                                         berkeley ca                     milch bhaskara russell dsontag dlong karayacsberkeleyedu                        abstract                          explicitly represent objects relations                                                        fopls deal ﬁxed sets ob      paper introduces illustrates blog formal lan jects deal unknown objects limited ad hoc      guage deﬁning probability models worlds                                                        ways paper introduces blog bayesian logic      unknown objects identity uncertainty blog uniﬁes      extends existing approaches subject cer compact intuitive language deﬁning probability dis      tain acyclicity constraints blog model speciﬁes tributions outcomes varying sets objects      unique probability distribution ﬁrstorder model begin sec  three example problems each      structures contain varying unbounded num involves possible worlds varying object sets      bers objects furthermore complete inference algo identity uncertainty generative processes      rithms exist large fragment language produce worlds corresponding blog mod      introduce probabilistic form skolemization els sec  observes possible worlds naturally      handling evidence                                viewed model structures ﬁrstorder logic deﬁnes                                                        precisely set possible worlds corresponding blog                                                        model key idea generative process constructs    introduction                                       world adding objects existence properties  human beings ai systems convert sensory input pend objects created process  understanding what’s what’s going existence objects governed random  world make inferences variables just single population size variable sec   objects events underlie observations discusses blog model speciﬁes probability distribu  prespeciﬁed list objects given agent infer tion possible worlds  existence objects known initially exist sec  solves previously unnoticed “probabilistic    ai systems problem unknown objects skolemization” problem specify evidence  engineered away resolved preprocessing step objects—such radar blips—that didn’t know existed  important applications problem finally sec  brieﬂy discusses inference unbounded  unavoidable population estimation example involves come spaces stating sampling algorithm complete  counting population sampling randomly mea ness theorem large class blog models giving  suring object resampled experimental results particular model  pointless set objects known advance  record linkage task undertaken industry  examples   companies involves matching entries multi  ple databases companies exist uncertainty section examine three typical scenarios  mapping observations underlying objects known objects—simpliﬁed versions population estima  finally multitarget tracking systems perform data associa tion record linkage multitarget tracking problems men  tion connecting say radar blips hypothesized aircraft tioned each case provide short blog model    probability models tasks new bayesian combined suitable inference engine consti  models data association used  tutes working solution problem question  sittler  models written english example  urn contains unknown number balls—  mathematical notation converted hand special say number chosen poisson distribution balls  purpose code recent years formal representation lan equally likely blue green draw balls  guages graphical models pearl  led urn observing color each replacing  general inference algorithms sophisticated models tell identically colored balls apart furthermore  automated model selection structure learning sec  observed colors wrong probability   review ﬁrstorder probabilistic languages fopls balls urn ball drawn twice    ∗this work supported darpa award  blog model problem shown fig   nsf graduate research fellowship milch scribes stochastic process generating worlds ﬁrst  type color type ball type draw                     guaranteed citation cite cite cite cite   random color truecolorball                         researcher ∼ numresearchersdistrib   random ball balldrawndraw                          publication author  ∼ numpubsdistrib   random color obscolordraw                                                          titlep ∼ titleprior   guaranteed color blue green                         namer ∼ nameprior   guaranteed draw draw draw draw draw                                                          pubcitedc ∼ uniformpublication   ball ∼ poisson                                                          titlestringc ∼ titleobstitlepubcitedc   truecolorb ∼ tabularcpd               authorstringc ∼ authorobsnameauthorpubcitedc   balldrawnd ∼ uniformball                     citstringc ∼ citdistribtitlestringcauthorstringc   obscolord     balldrawnd  null         ∼ tabularcpd            figure  blog model ex  observed citations            truecolorballdrawnd                type function declarations omitted    figure  blog model urnandballs scenario ex   draws                                      area each time step starting   choose                                                        state position velocity each aircraft given state                                                        time −  each aircraft time step possibly  lines introduce types objects worlds—colors generate radar blip sourcer  timer   balls draws—and functions applied blip generated depends state  objects lines – specify objects exist aircraft—thus number objects world depends  each world world colors blue green certain objects’ attributes each step generate  draws guaranteed objects false alarm blips r′ sourcer′  null finally sample  hand different worlds different numbers balls position each blip given true state source  number balls exist chosen prior—a aircraft using default distribution falsealarm blip  poisson mean  each ball given color spec  iﬁed line  properties draws ﬁlled  syntax semantics possible worlds  choosing ball line  observed color ball  lines – probability generated world  outcomes ﬁrstorder model structures  product probabilities choices possible outcomes ex  through ex  structures  example  collection citations refer containing related objects treat formally  publications certain ﬁeld publications model structures ﬁrstorder logic model structure  searchers exist titles names wrote provides interpretations symbols ﬁrstorder lan  publication publication does each citation refer guage usually ﬁrstorder languages described having  simplicity just consider title authorname predicate function constant symbols conciseness  strings citations subject errors vari view symbols function symbols predicates just  ous kinds assume singleauthor publications functions return boolean value constants just                                                        zeroary functions    fig  shows blog model example based                                                          ex  language function symbols  model pasula et al  blog model                                                        truecolor   true color ball  balldrawn  ﬁnes following generative process sample                                                                                     ball drawn draw draw ﬁrst draw statisti  tal number researchers distribution                                                        cians use indexed families random variables  each researcher sample number publications                                                        truecolor  mainly matter taste  researcher sample publications’ titles researchers’     names appropriate prior distributions each ci  tation sample publication cited choosing uniformly  type aircraft type blip  random set publications sample title au  random rvector stateaircraft naturalnum  thor strings used each citation string corruption mod  random rvector apparentposblip  els conditioned true attributes cited publication  nonrandom naturalnum prednaturalnum  predecessor  ﬁnally generate citation string according format  generating aircraft sourceblip  ting model                                             generating naturalnum timeblip  example  unknown number aircraft exist  aircraft ∼ numaircraftdistrib  volume airspace aircraft’s state position veloc  statea                                                             ∼ initstate  ity each time step depends state previous time  ∼ statetransitionstatea predt  step observe area radar aircraft appear  blip source time   identical blips radar screen each blip gives approxi  ∼ detectiondistribstatea  mate position aircraft generated  blip bliptime   blips false detections aircraft  ∼ numfalsealarmsdistrib  detected aircraft exist trajectories  apparentposr                                                          blipsourcer  null ∼ falsealarmdistrib  aircraft observed           ∼ obsdistribstatesourcer timer    blog  model scenario fig  describes  following process ﬁrst sample number aircraft     figure  blog model ex   eliminate meaningless random variables use processes ﬁrst introduce generating function decla  typed free logical language object type rations lines – fig  unlike functions  functions partial each function sym generating functions source time val  bol type signature τ     τk τ return ues set object added generating function  type τ     τk argument types partial single argument type τ blip  function applied arguments outside domain returns example called τgenerating function  special value null type           generative steps add objects world described    truth ﬁrstorder sentence determined number statements instance line  fig  says  model structure corresponding language model each aircraft time step process adds  structure speciﬁes extension each type inter number blips sourcer  timer   pretation each function symbol                   general beginning number statement  deﬁnition  model structure ω typed free ﬁrstorder form τ     gk –     xk τ  language consists extension τω each type τ type     gk τgenerating functions     xk  arbitrary set interpretation fω each logical variables types generated ab initio                                                        generating functions    omitted  function symbol return type τ argument types                  ω                  ω           ω      fig  inclusion number statement means  τ     τk function τ × · · · × τk     ω                                                  each appropriately typed tuple objects      ok  τ ∪ null                                                                                                                                       appropriate types return types     gk gen    blog  model deﬁnes probability distribution erative process adds number possibly zero objects  particular set model structures ex  identity uncer             ω                              ω                         type τ gi  oi        tainty arises balldrawn draw equal object generation recursive instance  balldrawnω draw structure                    ω                                   model phylogenetic trees generating  set balls ball  vary structures function parent takes species returns species    outcomes ﬁxed object sets                   model speciation events number state                                                        ment begins species parent    blog  models ﬁxed object sets ﬁve kinds state view number statements declaratively  ments type declaration statements line   fig  introduces type certain types boolean deﬁnition  let ω model structure lm                                                         sider number statement type τ generating functions  naturalnum integer string real rkvector each                     ω                                                            gk object ∈ τ satisﬁes number statement  ≥  provided random function declaration                       ω                                                        applied     ok ω gi  oi        line  fig  speciﬁes type signature func ω  tion symbol values chosen randomly gen  null τgenerating functions  erative process nonrandom function deﬁnition note number statement type τ omits  line  fig  introduces function interpreta τgenerating functions function takes value  tion ﬁxed possible worlds implementation null objects satisfying number statement  interpretation given java class predecessor stance source null objects satisfying falsedetection  example guaranteed object statement line  number statement line  fig  blog model  fig  introduces names distinct objects exist contain number statements set  possible worlds builtin types obvious sets generating functions ensures each object ex  guaranteed objects constant symbols predeﬁned actly generation history tracing  set guaranteed objects type τ blog model generating functions  denoted gm τ finally each random function symbol set possible worlds Ωm set model struc  blog model includes dependency statement specifying tures constructed m’s generative process  values chosen function postpone complete picture explain  discussion dependency statements sec         objects added each step ob    ﬁrst kinds statements listed deﬁne par jects turns convenient deﬁne gen  ticular typed ﬁrstorder language lm model erated objects follows number statement  set possible worlds denoted Ωm  consists type τ generating functions     gk applied  model structures lm extension each type τ generating objects     ok generated objects tu  gm τ nonrandom function symbols including ples τ     gk ok         guaranteed constants given interpretations number objects generated ex     each random function tuple appropriately aircraft pairs aircraft  aircraft   typed guaranteed objects     ok deﬁne random blips generated aircraft nested tuples                                    ω  variable rv vf     ok ω      ok blip source aircraft  time   tuple en  possible worlds onetoone correspondence codes object’s generation history course purely  instantiations basic rvs joint distribution internal semantics remains invisible user  basic rvs deﬁnes distribution possible worlds set objects nested tuples type τ                                                        generated guaranteed objects ﬁnitely    unknown objects                                  cursive applications number statements called uni  general blog model deﬁnes generative process verse τ denoted um τ each possible world  objects added iteratively world extension τ subset um τdeﬁnition  blog model set possible     syntax semantics probabilities  worlds Ωm set model structures ω lm                               ω                          dependency statements    each type τ gm τ ⊆ τ ⊆ um τ    nonrandom functions speciﬁed interpretations dependency number statements specify exactly    each number statement  type τ   steps carried generative process consider      generating functions     gk each appropri dependency statement statea beginning line      ately typed tuple generating objects     ok  fig  statement applied basic rv                               ω                                                                              ω set objects τ satisfy num form vstate ∈ um aircraft ∈       ber statement applied generating objects   conditional distribution statea given                                                                             initstate      τ     gk ok        elementary cpd  given      natural number                                 elementary cpd statetransition takes    type τ each element τω satisﬁes statea predt argument elementary cpds      number statement applied objects ω    deﬁne distributions objects type rvector return    note  deﬁnition number objects type state implementation elementary cpds  generated given application number statement java classes method getprob returns proba  world ω ﬁnite number world bility particular value given list cpd arguments  tain inﬁnitely nonguaranteed objects number dependency statement begins function symbol  statements applied recursively triggered tuple logical variables     xk representing ar  natural number like ones generating radar blips ex  guments function number statement variables    ﬁxed set objects easy deﬁne set ba     xk represent generating objects case  sic rvs instantiation basic rvs uniquely rest statement consists sequence clauses                                                        statement abbreviated syntax  identiﬁed possible world achieve effect                                              unknown objects need kinds basic rvs      ﬁrst clause cond ∼  elemcpdarg                                                             argn cond portion formula lm  deﬁnition  blog model set vm basic                                                            xk occur free variables specifying  random variables consists                         dition clause used sample     • each random  function type signature  value basic rv precisely possible world      τ     τk each tuple objects     ok ∈ constructed far ω applicable clause ﬁrst      um  τ × · · · × um τk function application rv                                       ω                condition satisﬁed ω assuming mo      vf     ok ω equal     ok ment ω complete determine truth val          ok exist ω null false boolean ues conditions clause’s condition satisﬁed      rvs                                   basic rv refers objects exist ω     • each number statement type τ generating value set default false boolean functions      functions     gk return types τ     τk null functions zero number variables      each tuple objects     ok ∈ um τ×· · ·× condition clause just “true” string              number rv      um  τk               nτggk     ok ω “if true then” omitted      equal number objects satisfy number applicable clause each cpd argument evaluated      statement applied     ok ω         ω resulting values passed elementary    intuitively each step generative worldconstruction cpd simplest case arguments terms formu  process determines value basic variable crucial las lm  statea predt argument  result basic rvs following              set expression form τ  ϕ τ type  proposition  blog model complete  logical variable ϕ formula value                                                                                        ω  instantiation vm  model structure expression set objects ∈ τ ω satisﬁes  Ωm  consistent instantiation               ϕ bound formula ϕ just true    equating objects tuples  unneces   omitted case line  fig   sarily complicated helpful    require elementary cpds obey rules   deﬁne  bayes net   basic rvs    lated nonguaranteed objects cpd   sec    instance sole parent  assign positive probability objects exist  vapparentpos blip source aircraft  time   partially completed world ω allow elementary  vstate aircraft   elegant assign cpd assign positive probability nonguaranteed object  numbers objects generated exten object passed cpd argument second  sion each type each possible world simply elementary cpd “peek” tuple representations  preﬁx natural numbers speciﬁcally num objects passed invariant permuta  ber aircraft arbitrarily number radar blips tions nonguaranteed objects  lexicographically aircraft time step                                                          declarative semantics  basic rvs vapparentpos  representing ap  parent aircraft position blip  blip  gen far explained blog semantics procedurally  erated aircraft time step fact parents terms generative process facilitate knowledge  vapparentpos  include blip engineering development learning algorithms  state variables model deﬁning objects tuples like declarative semantics standard ap  yields simpler bayes net                      proach — used existing fopls — saythat blog model deﬁnes certain bayesian network bn deﬁnition  distribution Ωm satisﬁes blog  basic rvs section discuss ap model ﬁnite selfsupporting instantiation σ  proach needs modiﬁed blog                  varsσ ⊆ vm     write denote instantiation set rvs                σ                                                          varsσ σx denote value σ assigns  Ωσ  qnpxn  σxn  σxxn−  bn ﬁnite probability assigns each com                                                        Ωσ set possible worlds consistent σ  plete instantiation σ σ  qx∈varsσ px σx σpax                                                            xn numbering σ def   px cpd σpax σ restricted  parents inﬁnite bn write similar expres blog model welldeﬁned exactly prob  sion each ﬁnite instantiation σ closed par ability distribution satisﬁes recall bn  ent relation ∈ varsσ implies pax ⊆ varsσ deﬁned acyclic each variable ﬁnite set  bn acyclic each variable ﬁnitely cestors way saying each variable  cestors probability assignments deﬁne unique “reached” enumerating ancestors ﬁnite topolog  distribution kersting raedt            ically ordered list welldeﬁnedness criterion blog    difﬁculty bn corresponding blog similar deals ﬁnite selfsupporting instantiations  model variables inﬁnite parent sets instance ﬁnite topologically ordered lists variables  bn ex  inﬁnite number basic rvs theorem  let blog model suppose vm                                                                                   form vtruecolor ﬁnite number countably inﬁnite each ∈ vm  rvs represent outcomes balls ω ∈ Ωm  selfsupporting instantiation agrees  furthermore each vtruecolor rvs parent ω includes  welldeﬁned  each           rv balldrawn happens      vobscolor                                   theorem follows result milch et al     observed color draw depends directly                                                    deals distributions instantiations set  color ball       nodes inﬁnitely                  vobscolor                       rvs prop  makes connection instantia  parents model assigning probabilities ﬁnite                                                        tions possible worlds  stantiations closed parent relation does                                                          check criterion thm  holds partic  deﬁne unique distribution particular tells                                                        ular example need consider each basic rv ex           variables          vobscolor                                 number rv balls supported instan    required instantiations closed par tiation world selfsupporting  ent relation factors                                       px σx σpax           stantiation size each truecolorb rv depends  welldeﬁned need values x’s argument exists variables participate  parents order determine conditional distribution selfsupporting instantiations size similarly each   instance knowing vballdrawn  ball  balldrawn variable depends balls exist sam           ball       blue sufﬁcient determine      vtruecolor                                ple obscolord variable need know balldrawnd  distribution        colors                   vobscolor                        truecolorballdrawnd variables self  balls irrelevant context read supporting instantiations size similar arguments  contextspeciﬁc independence dependency state examples   course like  ment obscolor fig  noting instantiation                                                        algorithm checking blog model  vballdrawn  ball  vtruecolor ball   blue welldeﬁned criteria given thm  sec  ﬁrst  determines  value   sole cpd    argument   step direction  truecolorballdrawnd    say instantiation  supports variable  milch et al                      obscolor                              evidence queries  deﬁnition  instantiation σ supports basic rv                                                        welldeﬁned blog model deﬁnes distribution  form vf     ok np     ok possible  worlds consistent σ agree  objects model structures use arbitrary sentences lm                                                        evidence queries sentences      ok exist  applicable clause  dependency number statement values ex  user observes radar blips  cpd arguments clause                         referred terms language user                                                        assert evidence blips using existential quantiﬁers    note rvs nball  ex  supported make query form “did  instantiation generalize notion blip come aircraft blip”  closed parent relation              natural solution allow user extend lan                                                        guage evidence arrives adding constant symbols  deﬁnition  ﬁnite instantiation σ selfsupporting fer observed objects cases user observes  instantiated variables numbered     xn new objects introduces new symbols assigns  each ≤ restriction σ     xn− symbols objects uninformative order han  supports xn                                          dle cases blog includes special macro instance    deﬁnition lets semantics blog models given  radar blips time  assert  way meaningful corresponding bns blip timer    blip blip blip blip  contain inﬁnite parent sets write pv  σ  probability ’s dependency number statement assigns satisﬁed real rkvector types argu  value given instantiation σ supports  ments random functions return types generating functions
