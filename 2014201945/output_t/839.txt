    combining memory landmarks predictive state representations                          michael james    britton wolfe    satinder singh                                     science engineering                                           university michigan                                  mrjames bdwolfe bavejaumichedu                          abstract                          goal provide model class expressive                                                        psrs efﬁcient learning properties      recently proposed advantageous historybased models      models dynamical systems based        addition accelerating learning mpsrs ex      solely observable quantities predictive state ploit landmarks observations capture state      representations psrs type model uses uniquely “resetting” approximate state      predictions future observations capture learned model during prediction landmark      state dynamical psrs     observations encountered present method ﬁnd      use memory past observations propose   ing landmarks mpsrs develop basic theory mpsrs      model called memorypsrs uses mem    provide preliminary empirical results exploring rela      ories past predictions future tive efﬁciency learning mpsrs psrs      show use memories provides number      potential advantages reduce size  psrs memorypsrs      model comparison psr model addi      tion dynamical systems memories    psrs depart models dynamical systems      serve landmarks completely determine  representation state vector predictions      current state detection recognition outcomes tests performed dynamical      landmarks advantageous serve  test  ao akok sequence alternating      reset model gotten offtrack actions ai ∈ observations oj ∈ prediction      happens model learned sam   pt conditional probability observation se      ples paper develops memorypsrs    quence occurs given action sequence taken      use detection landmarks               pt  probo oka ak course prediction                                                        test dependent actions observations                                                        occurred far called history prediction test    introduction                                       history pth  probo okha ak  paper explores use types observable quanti psr’s state representation consists predictions  ties — history past observations predictions special set tests called core tests core tests  future observations — creating models complex dy special history predictions test  namical systems models use predictions future computed linear function predictions  observations capture state called predictive state repre core tests prediction vector pqh  ×   sentations psrs littman et al  shown vector predictions tests history  surprisingly expressive compact singh pqh psr’s representation state coun  et al  classical models partially observable terpart beliefstates pomdps observations  markov decision processes pomdps use hidden state korder markov models  variables models use observation history addition set core tests psr model param  korder markov models known expressive eters set n×n matrices mao n× vectors mao  widely applicable psrs pomdps model parameters allow linear computation  hand historybased models easier learn prediction test  ao    akok follows  data psrs pomdps paper pro                                                               pth  pqht                 pose extension psrs called memorypsrs mpsrs                        ao   ak−ok− akok  combines past observations memories predictions updating current state prediction vector action  future deﬁne state dynamical taken history observed accomplished                                                                                                  sutton tanner  recently proposed model         paoqh   pqh  mao                                                               pqhao                              combines memory predictions                                      paoh   pqh  maothe matrices mao vectors mao special form parameters set memories core tests each par      th   column mao ×  constant vector tition form basis mpsr models straightforward  computes prediction ao onestep extension rank each submatrix rank      th   core test qi ∈ test aoqi vector matrix worst case ranks submatri  mao constant ×  vector computes pre ces rank case resulting  diction onestep test  ao fact mpsr model parameters psr  model parameters meanings foundation model cases ranks submatrices  existing psr learning algorithms james singh  smaller rank resulting  rosencrantz et al  new mpsr learning mpsr model compact psr model  algorithm presented                             provide examples cases section  size                                                        model important model fewer parameters                           tests                        general efﬁcient require data                                                        learn test empirically section                                                    paper address question automat              φ  pt      pt                ically discovering useful ways partitioning histories                                                  instead assume partitions correspond history sufﬁxes                 es                                         ﬁxed length                                                                      deﬁnition memory  paper given mpsr               stor                                       using length sufﬁxes memory speciﬁc sequence               hi                  pt                length identiﬁes partition considering                 pt  hi                                                            history memories length memory                                                        just recent observation                                                        memories mpsr memories length                                                        memory recent actionobservation pair           figure  dynamics matrix        ∗ memories mpsr                                                        general set possible memories mpsr uses                                                        lengthk sufﬁxes set lengthk sequences alter  dynamics matrix                                nating actions observations end observation  theoretical development mpsrs best explained denote size set mk    ing dynamics matrix developed let µ    µmk represent distinct memories  singh et al  matrix shown figure  mpsr model let memory history denoted                                                                                                         µi  possible histories rows possible tests columns µh each memory µi corresponding submatrix  columns rows arranged test history length created partition histories corresponding µi  length lexicographic ordering entry core tests partition dµ referred µcore tests                                      th           th  dij   ptjhi prediction test distinguish core tests psr model  history correspondence sys µcore tests submatrices                                                          µ      µ               µ      µ  tem dynamics matrices dynamical systems rank     mk denoted     mk respectively  dimension corresponding dynamical prediction vector pqµhh contains predictions                                                                    µh  number core tests needed psr model µcore tests memory µh  core tests psr model correspond maximal set deﬁnition mpsr state mpsr state history  linearly independent columns similarly deﬁne denoted concatenation memory  notion core histories correspond maximal set prediction vector memory  linearly independent rows interested ﬁnite                                                        µh pqµhh mpsr state contains  dimensional systems assumption terribly restric                                                        memory past predictions future  tive pomdps underlying nominal states                                                        psr state contains predictions future  dynamical systems dimension deriva  tion psrs through use dynamics matrix deﬁnition mpsr update parameters each mem                                                                                           µi            µi  presented singh et al                      ory µi set matrices mao vectors mao                                                        subtle issue deﬁning parame  memorypsrs                                           ters case each submatrix separate dynam  central idea mpsrs partition set ical memory corresponding current                         submatrices    partitioning set history say µi action observe  tories rows tests columns each submatrix memory corresponding history hao dif      contains columns subset histories ferent µi lets say µj update parameters                                                          µi  memories enter picture use memory mao transform current prediction vector makes  past observations partition histories mem prediction µcore tests qµi history prediction  ory correspond partition elaborate later vector µcore tests qµj history hao note histo  note each submatrix rank ries belonging memory µi transition mem  core tests core histories modelupdate ory µj actionobservation pair ao uniquely deter                                                 µi  mined pair ao model parameter mao lemma  dynamical ﬁnite dimension  need explicitly reference memory µj choice ﬁxedlength sufﬁx memories size  deﬁne state update mpsrs follows resulting mpsr model number  taking action history observing          memories times size psr model                      paoqµj   pqµi ht µi       proof worst case rank each submatrices       pqµj hao                         ao                                        µ     µi                      paoh     pq mao         mpsr exactly rank dynamics                                                        matrix case happen ﬁnd different µcore                                              µi  µh  µi µhao  µj matrix mao tests each submatrix model each submatrix        µi     µj                µi           µi  size ×q   vector mao size × exactly large psr model  psrs update parameters mpsrs meaning                 th            µi        µi  instance column mao  × sized lemma holds matter chooses  constant parameter vector computes prediction memories choose memories use               th  test µcore test memory µj         constructing mpsr judiciously mean    mpsr model parameters allow linear computation minimize size resulting model  prediction test      history                                                  theorem  judicious choice memories size  follows                                                        corresponding mpsr dynamical                        µ     µk−     µk−          compact size psr dynamical        pth  pqh ma ma    ma                                    k− k−            furthermore exist dynamical systems  µ memory corresponding history µ choice memories leads mpsr model com  memory corresponding history hao      pact psr model dynamical    deﬁnition mpsr mpsr model deﬁned                         µ      µ              µ                                mk                    proof proof ﬁrst statement follows fact  tuple ha µ    µmk      µ pq ∅i  set actions set observations psr mpsr null set memories                                     µi                 prove second statement constructing dynamical  µ    µmk possible memories set µ  core tests memory µi set update parameters table  compares size mpsrs psrs    µi      µi  mao mao µi µ initial memory various standard test dynamical systems based pomdps  pqµ ∅ initial prediction vector           instances sufﬁx length used partition    special interesting case arises memory histories three problems cheese shuttle  serves state predictions needed fourthree mpsr compact psr    deﬁnition landmark given mpsr landmark  memory serves state sufﬁcient statistic  landmarks  tory landmarks quite beneﬁcial making accurate show landmarks equivalent memories  predictions discuss identiﬁcation landmarks µcore test furthermore  exploiting prediction section     prediction test landmark histories                                                        map landmark    basic theory mpsrs                              lemma   mpsr model dynamical  ﬁrst result show dynamical • memory landmark µcore test  possible ﬁnd µcore tests memories mpsr memory µcore set size  model set core tests corresponding psr landmark  model                                                          • histories map landmark prediction  lemma  let dynamical modeled psr  vector constant independent history  core tests exists mpsr model  each memory µi corresponding µ • histories map landmark prediction  core tests qµi satisfy qµi ⊂                           test constant independent history    proof provide constructive proof shows proof µ landmark predictions tests                  µi  derive subset recall columns fully determined µ known  linear combinations columns corresponding histories memory µ prediction test                           µi  consider submatrix memory µi histories means row dµ                            µi  case columns linear combinations identical rank dµ                                  µi  columns corresponding  exists µcore test exists µ   µi    ⊂                                                memory µ single µcore test qµ let hµ                                                        denote histories map memory µ ∈ hµ    paper don’t exploit lemma  reasons                       core tests psrs unique  case action hold paoh   im                                                                     µ    µ  learning model dynamical experience data plies pq mao   turn implies                                                           µ           µ             µ  psr model core tests begin pq   mao recall mao independent                                                  history prediction qµ independent                                                      determining µcore tests histories     table  comparison size psrs mpsrs                                                        algorithm proceeds iterations iteration algo                     core tests     param entries    rithm current set linearly independent µcore tests     problem                                                                             µi  µi                 psr     mpsr       psr    mpsr         histories each memory let ht tt  set     tiger                                      µcore histories µcore tests iteration mem     paint                                      ory µi µcore tests histories start     cheese                       set ﬁrst iteration set candidate tests     network                                  histories each iteration set candidate tests     bridge                           memory  µi set onestep tests ao pair     shuttle                            set aoextensions current µcore tests     three                     memory  µj µj memory action     float reset                               taken memory µi observed set candidate                                                        histories similarly generated ask oracle                                                        predictions candidate tests candidate  history calculation exploits fact predic tories compute rank oraclegenerated matrix  tion vector update parameters scalars        denoted xt linearly independent rows columns                                      µ                                    µi      µi    furthermore prediction independent xt new ht tt respectively selecting                               µ  history update vector mt test indepen new µcore tests histories include pre                                       µ   µ  dent history prediction pth  pq mt vious µcore tests histories stop iteration  history independent history rows rank xs rank xs− memories  dµ identical µ landmark    algorithm adaptation similar al                                                        gorithm determining core test histories psrs    landmarks come handy used james singh  just like psrs algorithm  learned — approximately correct guaranteed ﬁnd µcore tests histories  — model progressively drifting farther farther away just like psrs work empirical work  reality make longer longer term predictions far  model time observe landmark mem  ory reset prediction vector constant corre computing modelupdate parameters  sponding landmark irrespective actual observed discuss compute modelupdate matrix                                                          µ  history error prediction long mao ao pair memory µ deﬁne matrix  tests growing length test exploit memory µ contains predictions µcore  ability empirical results               tests µcore histories memory µ matrix                                                        rank computed algorithm let µj    learning mpsr models data                     memory achieved action taken memory µ                                                                             th           µ  section present algorithm learning mpsr observed column mao denoted                                                        constant parameter vector computes prediction  models data assumption algorithm            th  ability reset dynamical modeled aoextension µcore test denoted memory µj  initial state present algorithm stages let column vector predictions test µ  ﬁrst stage assume algorithm access core histories memory µ ask oracle entries                                                    equation  ax   oracle given history test return predic                           −  tion pth dynamical second stage rank invertible  use                                                        idea compute modelupdate parameter vector  show oracle replaced use sample µ  data dynamical reset wish mao  minimize sample data needed algo section show oracle needed  rithm attempt minimize number calls algorithm replaced using data dy  oracle ﬁrst stage algorithm relatively straight namical reset  forward adaptation mpsrs algorithm presented  james singh  psrs                        learning mpsrs sample data                                                        show obtain estimate prediction pth    oracle based algorithm                           went oracle previous algorithm  recall components mpsr µcore generate samples distribution pth ﬁrst tak  tests different memories modelupdate param ing action sequence reset observation  eters memories empirical work al sequence happens succeeded generating  ways use memories length clearly model param history don’t succeed generating history  eters memory depend choice µcore tests reset try succeed generat  memory recall µcore tests unique ing history action sequence test  process computing µcore tests update parameters observation sequence test happens test succeeds  each memory identical just discuss test fails estimate pth empirical  memory say µi                   success rate test history course ex                                                                                           psr mpsr learning tiger    psr mpsr learning paint   psr mpsr learning network                                                                                                   psr                                psr                               psr                     mpsr                               mpsr                              mpsr                                                                                                                                                    ng  error                                    e−                                                                                                         test     testing  error                     testing  error      e−                              e−                              e−                                                              total number samples            total number samples            total number samples                                                                                                psr mpsr learning bridge psr mpsr learning cheese  psr mpsr learning float−reset                                                                                                       psr                               psr                               psr                     mpsr                          mpsr                              mpsr                                                  mpsr landmarks           mpsr landmarks                                                                                    ng  error                                        ng  error                                                                                                                   e−                                                                                                                test     testing  error                                        test        e−                            e−                               e−                                                  total number samples           total number samples            total number samples                                                             psr mpsr learning shuttle    psr mpsr learning                                                                     psr                                 psr                    mpsr                             mpsr               mpsr landmarks                mpsr landmarks                                                ng  error                                        ng  error                                                                                     test                                        test      e−                               e−                                        total number samples             total number samples             figure  results running mpsr learning algorithms suite test problems text details    tremely wasteful number data samples needed second test oraclebased algorithm com  implement basic idea efﬁciently execut puting mpsrs ﬁnds exact mpsr models test  ing action sequence ht regardless observations efﬁcacy sampledata based learning algorithm  obtained mining data generated possible mpsrs finally interested using land  history test pairs extracted marks available reset prediction vectors during    problem occurs estimation technique process computing predictions long test sequences pro  sampled entries dynamics matrix vides measurable beneﬁt experiments  certainly result inaccurate calculations rank suite standard pomdpbased dynamical systems cas  needed oraclebased algorithm use sandra  used pomdplearning  robust rank calculation procedure developed psr learn psrlearning  ing algorithm james singh  central idea results presented memories  use number samples went each used mpsr models recent observation  entry matrix wish ﬁnd rank generate  threshold singular values obtained singular value  comparing psrs mpsrs  composition threshold conservative psrs mpsrs size model measured  fewer samples generally leads smaller rank terms number core tests µcore tests  samples included threshold number entries model parameters table   comes conservative calculated rank closer compares sizes psr mpsr models suite  straightforward calculation rank              test problems mpsrs number µcore tests                                                        each memory listed fully half test problems    empirical results                                  landmarks memories µcore test indicating  conducted experiments view validating fairly common situation  major ideas presented ﬁrst experiments number entries model parameters listed  meant compare relative size psrs mpsrs psrs mpsrs three problems cheese
