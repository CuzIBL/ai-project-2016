              relational knowledge predictive state representations                        david wingate vishal soni britton wolfe satinder singh                                     science engineering                               university michigan ann arbor mi                                wingatedsonivbdwolfebavejaumichedu                          abstract                          relational representations extensions allow psrs                                                        deal structured relational domains entail three natu      work predictive representations state  ral beneﬁts able express policies family      psrs focused learning planning domains way independent size state      structured domains example represented space example blocks world domain description      ﬂat pomdps paper extends psrs rep   policy independent number blocks      resent relational knowledge domains second express abstract knowledge ignoring irrel      use policies generalize differ evant properties observations blocks world color      ent tasks capture knowledge ignores irrele block impact manipulated      vant attributes objects represent policies allows generalize objects param      way independent size state eterize policies generalize multiple tasks      space using blocks world domain show   blocks world policy stacking block block      generalized predictions future com similar stacking block block      pactly capture relations objects  accomplish broaden language psrs      turn used naturally specify relationalstyle use represent knowledge psrs represent knowledge      options policies representation actionconditional predictions future      expressed solely terms actions observa mally captured notion test generalize      tions extensive semantics statistics tests include multiattribute observations deﬁne      observable quantities                      new types tests called “set tests” “indexical tests”                                                        show policies options precup et al     introduction                                       speciﬁed terms mappings generalized tests  models dynamical systems use predictive representa actions allows policies options general  tions state replace traditional notion state ize tests generalize finally show  usually latent unobservable quantity set statistics nonlinear psr naturally speciﬁed  future number results obtained generalized tests extensions psrs maintain key fea  predictive state representations psrs ture psrs knowledge including relational  case discrete observations example psrs littman knowledge extensive semantics based statistics  et al  shown just accurate expres observable quantities furthermore show  sive compact unstructured partially observable markov form extensions allow relational knowledge  decision processes pomdps case continuous ob maintained computed efﬁciently summary  servations linear dynamics predictive linear gaus paper advancing expressiveness psrs ex  sian model rudary et al  just expressive tending capture relational knowledge ad  compact celebrated kalman ﬁlter predictive dress relational learning planning  representations shown good bases generaliza  background motivation  tion rafols et al  learned directly  agent’s experience trajectories number different key idea psr represent state set tests  algorithms wiewiora  mccracken  bowling  represent possible future observations given possible  james  singh  date work psrs fo future actions psr maintains set core tests pre  cused state tracking parameter estimation ﬂat dictions state history allow  structured worlds general pomdps linear dy make correct predictions sequence future  namical systems                                      events    extend psrs different direction main contri controlled discrete dynamical example  butions extensions current stateoftheart pomdp each time step agent executes action  psrs allow sort generalization captured ai ∈aand receives observation oi ∈owe occasionally                                                    ijcai                                                    use multiattribute observations tuples denoted  structured questions  angle brackets                                      order exploit relational structure domains    history sequence alternating actions obser blocks world able ask questions fu         ···a  vations        describing agent’s experience ture stests pose questions motivate                  through timestep anstest  “sequence test” extensions psrs allow accomplish                                    aoao ···anon  just “test” denoted            goals generalization domains generalization  describes possible sequence future actions obser tasks generalization objects ex  vations note distinction superscripts sub amples  scripts test succeeds observations test                                                        • “what probability eye  obtained given test’s actions taken predic                                                  block b” negative question  tion test  ···a starting history                                                          answered stest deﬁned terms  probability succeed actions exe                                                          things things  cuted immediately following formally deﬁne pre                                                          represent “not block b” set  diction test history length pth                                                      observations motivates “set tests”  prom   om     ···omn                                                         aggregate multiple observations   ···amn   ease notation use  following shorthand set tests  tt ···tn • “what probability seeing red block                                    pt hpthpth ···ptnh column vector blue block” type question motivates ability  predictions tests history     ignore irrelevant attributes observations allows    psr state represented set predictions deal objects terms attributes  core tests predictions core tests comprise suf identities motivates set tests  ﬁcient statistic history used ways • “what probability seeing block moving  used compute prediction arbi seeing block unspeciﬁed  trary test littman et al  second used color” case color acting variable  maintain state follows given set core tests value blocks question  predictions pqh constitute state action motivates ability refer previous observations  observation updated prediction core test qi ∈ inspiration “indexical tests”  given                                                        asking answering sorts questions helps                            paoqih                 pqihao                            capture knowledge structure domain requires gen                             paoh                    eralizing language stests possibility allow  means maintain state need compute tests contain arbitrary questions represented arbitrary  predictions step tests ao onestep ex functions observations action answers                                                        predictions arbitrary tests efﬁciently  tensions aoqi core tests function pqh                                                        computable seek simpler way show                                                        generalized tests provide needed capability capturing    example blocks world                         relational knowledge computationally efﬁcient  blocks world structured domain typical relational set  tings simple world types  generalizing language tests  structure stest psrs leverage tests  use expressive                   section discusses generalizations standard stests    deﬁne partially observable blocks world ﬁrst deﬁne set tests replace single pos  agent eye focus different places viewing sible observation set acceptable observations  world side domain like grid world discuss indexical complemented indexical tests  discrete positions given position observation  set tests  block table represented φ  paper assume each block standard stests ask observation each  unique observation number occasionally timestep ask negative tests ignore irrelevant  consider versions each block yields multiattribute tributes want ask arbitrary sets observations  observation cases blocks color accomplish set tests  number “marked” bit explained section   suppose tests length    actions eye eye differ single observation ask “what                                                                             aφ stay finda saccade block probability  ” tests  currb action moves block eye look succeed given history answer pth  ing block clear table pth set tests generalize idea replacing single  eye stays specify pre observation arbitrary set observations deﬁne set                                                                     ok ⊆o         σk ∈ ok       postconditions actions assume agent observations  let  th member  executes invalid action fails state unchanged ok deﬁne test replaces kth observation ok  eye space given stack set ok  ao ···akok ···anon test                                                    ijcai                                                                      viewed set  tests individually denoted tj special efﬁciencies generalized tests case lin                                                                                     ear psrs allow predictions generalized tests  tj replaces σ  pth    ptjh                                                  computed time independent “complex    considerable ﬂexibility deﬁning sets                                                        ity” test explaining ﬁrst review  observations ask red objects construct set                                                        linear psrs  observations attribute “red”                                                          linear psr stest weight vector  limited replacing single observation set                                                        mt ∈    independent history prediction  observations replaced replace multiple pthmt pqh   observations resulting test includes combinations          means updating                                                     prediction single core test qi ∈ efﬁciently  elements sets example  σσ                                                 closedform history taking action    σσ test  “expands”                                            ing observation  clude primitive tests σa σ σa σ σa σ                                                                                      σa σ prediction sum pre            paoq     pqh                                                                pq hao            aoqi  dictions                                                                                                                                                        paoh     maopqh    systems consider ﬁnite set obser  vations complement observation deﬁned need know mao weights                                                                         ask negative tests let ¬o  oo  set onestep tests aoqi  weights  observations ok                           onestep extensions                                                          important computational aspect set tests    indexical tests                                  fact predictions computed lin                                                        ear operations particular set test  set test ask “what probability seeing                                                                                     weight vector mt pthmt  pqh let  red block red block” different kind                                                                       ···a  ···a  set observa  test needed ask “what probability seeing                                                        tions easy show  blocks each                                                                                                    unspeciﬁed color”                                    mt   manon man−on− ···   σk∈ok makσk ···mao    tests indexical tests indexical test                  q×q                                                      ith row mao ∈       case  replace single observation variable                                 aoqi                                                     multiple observations replaced sets compute  replace later observation variable                                          ao ···akxk ···af xk ···anon course multi weight vector replacing corresponding ao  ple observations replaced indexical variables appropriate sum                                                          prediction indexical test linear let   reused times                                 ao ···akxk ···af xk ···anon    default variable xk “match” observa                                                                                                    tion restrict match subset mt           manon ···makσk ···maf σk ···mao                                              observations case deﬁne domx  ⊆o            σk∈domxk  set acceptable observations xkfor  multiattribute observations xk vector variables case multiple reused complemented indexicals                                                  weight vector equation generalizes obvious way  xm  restrict allows  test observations match attributes outer sum valid joint settings indexical  ignoring attributes example variables                                                  weight vectors set indexical tests   x a x  restriction  domains succeed ﬁrst attribute independent history computed reused  time steps allow indexical variables bind onetime cost computing  tests                                         weights complexity using set indexical    let contrast indexical tests set tests earlier tests independent length test                                                    number observations aggregated equivalently  showed set test  expanded include  tests suppose let domxo index number stests aggregated complexity does                                                    depend number core tests  ical test tx  includes primitive tests                  σa σ σa σ prediction tx  sum predictions                                specifying options policies    natural deﬁne indexical analog comple generalized tests  mented set test complemented indexical test asks fol show generalized tests used spec  lowing kind question “what probability ify policies options three criteria success  action observation action outlined introduction involve use compact                                                ¬xk  different observation” allow scriptive policies ﬁrst complexity policy                     xk  test addition                            independent size domain second                                                        generalize multiple similar tasks show    linear psrs efﬁcient tests                   specifying options policies terms generalized  primary motivations restricting class tests automatically generalize way  generalized tests consider computational constituent tests                                                    ijcai                                                      specifying policies tests                     predicate  test              predicate  test                                                            ona bfindaadb     eye onaaφa  formally policy mapping states actions states clearafindaauφ eye aboveada  psr represented predictions core tests ¬ona bfindaad ¬b eye belowaua  pqh state vector rq policy ¬clearafindaau ¬φ  map rq    instead mapping pqh directly actions ﬁrst use figure  table predictive predicates used  state pqh compute predictions set addi  tional generalized tests map predictions  additional tests actions possible ways  predictive predicates core tests  way create list expressions involving traditional relational representation blocks world  tests associate action each expression execute deﬁnes predicates cleara ona  ﬁrst action expression true example equivalent constructs predictive predi            puφh  →   currtable            cates deﬁned predictively generalized tests pre           paφφh  →                             dictive predicates form building blocks deﬁning policies                default →                          options semantics entirely based statistics                                                        future observations  policy moves eye stack                      ≡    findao   pops blocks stack operates inde example test onab                                                           pendently number blocks domain            used deﬁne predictive pred                                                             ona                      pt     number blocks stack avoid notational clutter icate true onab                                                                              deterministic domains usually omit p·h test ﬁnds block  moves eye checks                                                                                               ≡    associated each test                            sees block  similarly test cleara                                                        findao   uo  φ used deﬁne pre    specifying options tests                    dictive predicate cleara true history  options temporally extended actions rep ptclearah ease exposition omit  resent example “walk doorway” “wait implied tests associated each predictive predi  light turns green” formally option speciﬁed cates just write ona instead ptonabh  set initiation states option available omit implied action observation labels writing  termination function speciﬁes probability ona bfindaadb track position eye  option terminate each timestep deﬁne three predictive predicates eye onaaφa  function state policy states      eye aboveada     eye belowauawe    specify initiation states termination function discuss complement predictive predicate  option policy terms tests option policy terms complemented set test example ¬ona  speciﬁed way global policy initiation findaad ¬b  states termination function speciﬁed emphasize predictive predicates actually  way each expression associated value      respectively associated action tests fig  summarizes predicates correspond  example using policy eq  allowing initiation ing tests  state using                                                       options policies        paφ o h ∧ puφh →                                 default  →            given predictive predicates begin deﬁne                                                        options policies accomplish abstract actions   termination condition option domain instance following option pop curr moves  pops blocks stack block matches cri table block current stack                           teria speciﬁed o  deﬁne pth ∧ option works independently number blocks  pth ≡ pthpth                             stack important deal stacks independently                                                        size state space    connecting relational knowledge     representations                                           option   pop curr  completed development generalized tests available ¬eye onφ  demonstrate applied  tailed example deﬁne predictive equivalents termination eye onφ  traditional relational predicates illustrate use      eye belowφ →   currtable  options policies ﬁrst goal consider    policy  ¬eye belowφ →    ona develop policy  complicated goal onx ∗ ∗ x ∗ ∗ satis given pop curr option rest predictive  ﬁed blocks color stacked regard predicates deﬁne option satisfy ona  color finally show pre idea policy ﬁnd block clear blocks  dictive predicates create nonlinear psr track state ﬁnd block clear block  world                                         block                                                    ijcai                                                               option   ona                                option   pop marked            available                                  available         termination  ona                            termination  marked ∧ eye belowφ                                                                         eye belowφ →   currtable              policy                                                                policy     eye onφ →         eye ona ∧ cleara ∧ clearb → currb                                                                             default  →        ¬eye ona ∧ cleara ∧ clearb → finda      eye onb ∧ cleara ∧¬clearb → pop curr          deﬁne option  pop untilooo     ¬eye onb ∧ cleara ∧¬clearb → findb         deﬁned eq  termination condition                eye ona ∧¬cleara →  pop curr        section  options help create                                                                 onx ∗ ∗ x ∗ ∗              ¬eye ona ∧¬cleara →   finda         policy                   idea ﬁnd block                                                        mark clear blocks ﬁnd                                                        block color clear    points worth noting policy each  policy compact independent size state  space works number blocks ex       option  onx ∗ ∗ x ∗ ∗  istence policy surprise policy                                                                  available  straightforward implementation standard relational pol  icy psr terms interesting psrs allow  termination onx ∗ ∗ x ∗ ∗  write policy purely observable quantities note  policy good stacking later   policy  parameterize policy generalize similar tasks clear∗ ∗ mark∧                                                              marked∧    sophisticated goal states                            eye belowφ →   curr∗ ∗ mark                                                           clear∗ ∗ mark∧  far used set tests showcase power   marked →   pop marked  indexical tests develop policies  phisticated goal states ﬁrst onx ∗ ∗ x ∗ ∗ clear∗ ∗ mark → find∗ ∗ ¬mark  satisﬁed blocks color eye on∗ ∗ mark → pop until∗ ∗ mark  stacked multiattribute observations eye ontable ∪ φ →  find∗ ∗ ∗  color number “marked” bit agent allowed        default  →   mark  mark blocks form visual memory block  marked time                                                          easily extend policy solve goal like    need make intuitive redeﬁnitions clar onred ∗ ∗ red ∗ ∗ replacing action  iﬁcations actions predicates basically allow ev option ﬁnds red block  erything observation set argument exam  ple findoi moves eye randomly block  parameterized policies options         oi  satisﬁes  each satisfactory block nonzero probabil far policies options generalize domains  ity reached predictive predicates similar objects generalize tasks ex       eye  onoia   oi eye aboveoidoi  deﬁne               φ                            ample policy achieving ona does generalize  eye belowoiuoi  predictive predicate lit                                                  stacking blocks each  tle different generalized test findo  tests predicates propositional nature  longer deterministic deﬁne true                                                  parameterize tests actions options obvi  pfindo    words ex ous way simply replace constant observations variables  istential relational query nonzero probability ona        ona bfindaadb                                                                                      object satisfying object variables long actions similarly param  satisfying oj clear predictive predicate similar                                                  eterized agent bind variables speciﬁc blocks  clearo findo    uφ                   obtain predictions policies ondemand    start constructing policy deﬁne indexical  test true marked block  nonlinear relational psr  color block eye looking             far tacitly assumed existence underlying     marked                                    psr capable predicting test show         x ∗ ¬mark find∗ ∗ mark x ∗ mark psr constructed using predictive predicates         φ                                              things needed psr set core tests    lets deﬁne pop marked state update mechanism  option pop blocks current stack represent core tests predictive predicates  block color marked block         blocks set core tests predicates represent                                                    ijcai                                                    
