     dynamic heuristics backtrack search treedecomposition csps                     philippe jegou´   samba ndojh ndiaye       cyril terrioux                                         lsis  umr cnrs                                  universit´epaulc´ezanne aixmarseille                                    avenue escadrille normandieniemen                                      marseille cedex  france                   philippejegou sambandojhndiaye cyrilterriouxunivcezannefr                        abstract                          et al  details rely notion                                                        treedecomposition constraint graph aim clus      paper deals methods exploiting tree    ter variables cluster arrangement tree      decomposition approaches solving constraint   pending instances expect signiﬁcant gain      networks consider practical efﬁciency wrt enumerative approaches works based      approaches deﬁning ﬁve classes vari approach present theoretical results gottlob et      able orders dynamic pre      al  j´egou terrioux  practical results      serve time complexity bound provided study approaches concentrat      ﬁne extensions theoretical time complexity ing btd method j´egou terrioux       bound increase dynamic aspect                                                      effective method proposed      ders deﬁne constant allowing extend   framework structural methods      classical bound oexpw ﬁrstly      oexpw    ﬁnally oexpw         problem ﬁnding best decomposition      k−s− ”treewidth” csp   studied literature ﬁrstly theoretical point      s− minimum size separators finally view recently studies realized ﬁeld      assess deﬁned theoretical extension time csp integrating quality parameter decomposition                                                                                                               complexity bound practical viewpoint      efﬁciency solving considered csp j´egou et al                                                          studies consider questions related                                                        efﬁcient use considered decompositions    introduction                                         paper deals question given tree  csp formalism constraint satisfaction problem offers decomposition study problem ﬁnding good orders  powerful framework representing solving efﬁciently variables exploiting decomposition presented  problems modeling problem csp consists j´egou terrioux  order variables  deﬁning set variables xxxn static compatible depth ﬁrst traversal  assigned respective ﬁnite domain satisfying set sociated cluster tree enumerative methods highlight  constraints express restrictions dif efﬁciency dynamic variable orders condi  ferent possible assignments solution assignment tions allow exploit dynamic way tree  variable satisﬁes constraints determining decomposition guarantee time complexity bound  solution exists npcomplete problem        propose ﬁve classes orders respecting conditions    usual method solving csps based backtrack giving freedom order variables dynamically  ing search order efﬁcient use ﬁlter consequently time complexity possess larger bounds                                                        oexpw   oexpw  −  s−where  ing techniques heuristics choosing variable                         −  value approach efﬁcient practice constant parameterize minimum size  exponential theoretical time complexity oedn separators based properties classes ex  stance having variables constraints largest ploit heuristics aim compute good order  domain values works developed clusters generally variables rely topo  order provide better theoretical complexity bounds ac logical semantic properties csp instance heuristics  cording particular features instance best known based expected number solutions enhance signiﬁ  complexity bounds given ”treewidth” csp cantly performances btd based  denoted parameter related topolog cluster size dynamic variable ordering heuristic  ical properties constraint graph represents provide similar improvements outperform  interactions variables constraints leads ﬁrst ones realworld instances finally report ex  time complexity ondw denoted oexpw  periments assess extensions based  different methods proposed reach bound time complexity bound  like treeclustering dechter pearl  gottlob paper organized follows section pro                                                    ijcai                                                     vides basic notions csps methods based tree search space visited soon  decompositions section  deﬁne classes consistency known possible using notion  variable orders preserve classical bounds structural good good consistent partial assignment  time complexity section  introduces extensions giving set variables separator intersection  new time complexity bounds section  devoted exper clusters csp located  imental results assess practical proposi separator consistent admits solution com  tions finally section  summarize work patible good necessary explore  outline future works                            know consistency thirdly parts                                                        search space visited know    preliminaries                                      current instantiation leads failure possible ap                                                        plying notion structural nogood structural nogood  constraint satisfaction problem csp deﬁned tu particular kind nogood justiﬁed structural proper  ple set xxn variables each ties constraints network csp located    variable xi takes values ﬁnite domain dxi nogood consistent nogood consistent  variables subject constraints given assignment separator graph  instance csp problem consists determin satisfy complexity bounds variable ordering  ing assignment each variable satisﬁes exploited btd related cluster ordering  each constraint problem npcomplete paper mally let consider treedecomposition et csp  loss generality consider binary constraints tree assume elements  constraints involve variables struc  ei  ∈ indexed wrt compatible numera  ture csp represented graph called tion numeration compatible preﬁx numeration  constraint graph vertices graph vari root called compatible numer  ables edge joins vertices corresponding ation order x variables ∀x ∈ ei  variables share constraint                         ∀y ∈ ej ij x  compatible enumeration    treeclustering dechter pearl  reference order numeration clusters gives partial order  method solving csps thanks structure variables variables ei assigned  straint graph based notion treedecomposition ej ij variables descent good  graphs robertson seymour letg  located subproblem rooted cluster  graph treedecomposition pair et containing good fact using goods nogoods allows    tree nodes edges  explore twice subproblems consistency incon  ei  ∈  family subsets each sistency current assignment known use  subset called cluster ei node veriﬁes good avoid visiting subtree known  ∪i∈i ei  ii each edge y∈c exists variables assigned consistently current  ∈ y⊆ei iii ∈ iifk assignment btd does assign effectively  path thenei ∩ ej ⊆ ek              considered consistent problems addi    width treedecomposition et equal tional work performed assign variables  maxi∈i ei−thetreewidth minimal width want provide solution j´egou terrioux  treedecompositions                named consistently assignable variables thanks good    assume treedecomposition mini   variables ej assigned variables ei  mal width time complexity treeclustering assigned consistently assignable thanks  oexpw space complexity reduced good complete order choose vari  onsds size largest minimal sepa able ordering heuristics inside cluster finally compatible  rators graph dechter fattah  note enumeration order variables given compatible  treeclustering does provide interesting results prac numeration clusters variable order each cluster  tical cases alternative approach based tree j´egou terrioux   presented results  decomposition graphs proposed j´egou ter obtained heuristics choice clus  rioux  method called btd backtracking ters choice variables traditional  treedecomposition provide dynamic order used inside clusters obviously  best empirical results obtained structural methods variable ordering great impact efﬁciency enu    btd  method proceeds enumerative search   merative methods study beneﬁts  guided static preestablished partial order induced variable orderings fully exploited btd neverthe  treedecomposition constraintnetwork ﬁrst guarantee time complexity bounds necessary  step btd consists computing treedecomposition respect conditions section deﬁne  obtained treedecomposition allows exploit structural classes orders guaranteeing complexity bounds  properties graph during search order prune  branches search tree distinguishes btd  dynamic orders  oexpw     classical techniques firstly order  signment variables induced considered tree ﬁrst version btd deﬁned compatible static  decomposition constraint graph secondly parts variable ordering prove possible consider                                                    ijcai                                                     dynamic orders loosing complexity bounds time complexity bound guaranteed  deﬁned classes contain orders dynamic class  orders guarantee bound  orders fact provided cluster order theorem  let enumeration order class   variable ordering inside each cluster                time complexity btd oexpw   let beacspandet   treedecomposition                                                        proof consider cluster ej cluster tree  graph exploit order σi subproblems                                      γ    prove assignment ej computed        ik rooted sons ij order                                                      let ei cluster parent ej suppose  variables deﬁne recursively following                                 −  ∩  classes orders three classes choose ﬁrst variables assigned                                                        order belongs class thevariables  cluster assign root clusters                                                    clusters path root ei  consider  subproblem rooted                                      problem                                             assigned subtree rooted                                                        consistent assignment ei ∩ ej computed latest                                   deﬁnition  begin search  try recur variables ei assigned  sively extend current assignment subproblem subproblem rooted ej solving subproblem leads                                          rooted assigning ﬁrst variables accord failure solution each case recorded good       γ                         σ                              ing    ik according         nogood let assignment ej compatible    • class  σi γi static compute σi γi assignment variables ei leading      statically starting search          ei ∩ ej pursued subproblem rooted ej                                                                                                                   computed twice variables ei ∩ ej    • class  σi static γi dynamic compute                                                        assigned time complexity oexpw        statically σi γi computed during search                                                        properties class  offer possibilities    • class  σi γi dynamic σi γi variable ordering possible choose cluster      computed during search σi computed wrt visit sons current cluster each      current assignment soon variables ei cluster variable ordering totally free section       assigned                                     propose natural extensions complexity bound    • class  enumerative dynamic order variable      ordering completely dynamic assignment  bounded extensions dynamic orders      der necessarily compatible enumeration order propose extensions based ability given      restriction cluster tree  heuristics choose variable assign  deﬁned classes form hierarchy class  cluster variables path rooted  ⊂ class  ⊂ class  ⊂ class                        cluster veriﬁes properties deﬁne  property class  let assignment ∈ ej − new classes orders extending class  propose  ei ∩ ej ei parent ej ∈ iff i∀v ∈ ei generalization treedecomposition deﬁnition  ∈              ∀p       σ   ≤ σ           ii let ip       iu st iu      ip    deﬁnition  let  graph positive  ∀v ∈p    ∈   ∀v ∈     γ ≤ γ ∈        iu     iii      st                  integer set directed kcovering treedecompositions    j´egou terrioux  experiments use class  treedecomposition et root cluster  orders formally orders class  compati deﬁned set treedecompositions et  ble order class  given verify                                 assignment  ﬁnd order  class  •  ⊆  e e                et  instantiates variables way       root cluster                                                          •∀e  ∈ e e ⊆   ∪  ∪ ∪       ∪  ∪  order does property gives class  class                 ir                                                               ∪     ⊂ e                   orders ability recording goods nogoods     ir−      ir path  ing prune branches way class  orders •e≤w           max      −                                                                                 ei∈e    class  gives complete freedom does  guarantee time complexity bound deﬁnition class   impossible record nogoods let cluster ej deﬁnition  let csp et tree  son cluster ei suppose enumeration order decomposition graph xc positive integer  assigns variables ei ei ∩ ejaswell variable order class  order class  variables clusters path  directed kcovering treedecomposition et                                               root cluster ilet  variable assign derive natural theorem  ei ∩ ej solving subtree rooted  ej leads failure impossible record nogood theorem  let enumeration order class                                                                               oexpw     ei ∩ ej consistently assigned try time complexity btd       values prove assignment ei ∩ ej proof proof similar given class   consistently extended subtree sub consider btd runs treedecomposition et  problem solution record good actually width     solution consistent extension assignment ei∩ej second extension possible exploiting during  good nogood recorded computed search dynamic computing treedecomposition                                                    ijcai                                                     use directed kcovering treedecompositions dur practice assess proposed strategies random  ing search time complexity bound changes partial structured csps order point best ones wrt  impossible record nogoods csp solving building random partial structured                                                                       deﬁnition  let csp  et   tree  stance class            ﬁrst step consists  decomposition graph xc positive integer producing randomly structured csp according model                      class                          described j´egou terrioux  structured  variable order    given assignment                             ﬁnd directed kcovering treedecomposition stance consists variables having values domain  et   et         ∀e  ∈ e e    ∪   ∪    constraint graph clique tree nc cliques                             ∪                                     size separator size does exceed        ir    ir path ﬁnd order                          et class  instantiates variables  each constraint forbids tuples second step                                                        removes randomly edges structured instance  way order does                                                        secondly experiment proposed heuristics bench                                       deﬁnition enforces use directed covering tree mark instances cp’ solver competition               et   et  decompositions             verify additional experimentations performed linuxbased pc           ∀e ∈ e e    ∪  ∪ ∪  condition                   ir  pentium iv ghz gb memory each consid            et                  et  separator     separator  denote   ered random partial structured instance class presented    s−                              et    minimum size separators               results average instances solved  limit  theorem  let enumeration order class  runtime  minutes random instances  min  time complexity btd oexpw  − s−    utes cp’ benchmark instances solver  proof let csp et treedecomposition stopped involved instance considered unsolved  graph root cluster prove denoted letter tables following  assignment set wk −s− variables tables letter means instance  path tree computed let solved requires gb memory  assignment containing  order variables j´egou et al  study performed triangu  assigned class  directed kcovering lation algorithms ﬁnd best way compute good                                                    treedecomposition wrt csp solving mcs tarjan  treedecomposition  et veriﬁes ∀ei ∈   e   ∪e   ∪∪e                          yannakakis  obtains best results easy              ir    ir apathin  size clusters et bound wksotheset implement use compute treedecompositions  covered clusters s− minimum study provide results obtained clas                         e e             et   sical enumerative algorithms like fc mac  size separators let iq path                                                       unable solve instances each class   covering  solving subproblem rooted                                                     minutes  assignment leads recording nogoods                               e                         lack place present efﬁcient  separators clusters root cluster  et                                         heuristics          contains    computed   • minexpa  contains ﬁrst variables search       heuristic based expected num             e                     et      ≥        ber partial solutions clusters smith   suppose root cluster                                                           size chooses root cluster minimizes   record nogood separator parent                                                         ratio expected number solutions  separator e e letb                                                      size cluster  new assignment try extend                                                          • sizeb  values nogoods computed ﬁrst          choose cluster maximum size root  variables assigned search cluster  stopped thanks nogood computed • minexps  heuristic similar minexp  prove assignment computed once ders son clusters according increasing value    note new deﬁned classes included hier ratio                                 ⊂          ij  archy presented section  class class jif    • minseps order son clusters according      ≤ ij≤                   ⊂              class  class               increasing size separator parent                           deﬁne value  approaches • nve  choose variables group good consists trying      choose dynamic variable ordering heuristic  reduce value parameter way en visit ﬁrst son cluster appears  hance space complexity bound observe variable heuristic order variables  grouping clusters large separators permits achieve unvisited son clusters  signiﬁcant reduction                              • minexpsdyn cluster visit minimizes                                                            ratio current expected number solutions    experimental study                                     size cluster current expected num                                                            ber solutions cluster modiﬁed ﬁltering  applying structural method instance generally                                                            domains unassigned variables  sumes instance presents particular topological  features study ﬁrst performed instances hav competition held during second international work  ing structure exploited structural methods shop constraint propagation implementation cp’                                                    ijcai                                                               csp                            class        class        class              class                                                                                      ncptable  parameters treedecomposition runtime random partial structured csps mdd  class  mdddyn classes                 csp                                        class          class               class            instance                                                                                                                                                                  qa                                                     qcpqwh                                                     qcpqwh                                       qwhqwh                                           qwhqwh                                           table  parameters treedecomposition runtime instances cp’ solver  competition mdd class  mdddyn classes        • nvsdyn similar nv visit ﬁrst son intersection greater value smax table  gives      cluster appears variable heuristic runtime btd class smax       order variables unvisited son clusters analyze value parameter observe  inside cluster heuristic used choosing vari value generally limited   neverthe                                                        csps       thevalueofk  able min domaindegree static version mdds class                                                         near  high value allows solve instances  dynamic mdddyn classes    table  shows runtime btd heuristics heuristics classes   improve sig  classes     class  good niﬁcantly results obtained impact dynamic                                                                      minexp     nv  sults results presented presents ity obvious heuristics solve                                                                                                   size  width computed treedecomposition max stances bad root cluster choice solve                                                                                                 minexp  imum size separators clearly observe class instances unsolved instance ob   orders obtain poor results behaviour surprising tains promising results son cluster ordering  static variable orders known inefﬁcient limited effect instances considered  compared dynamic ones dynamic strategy allows son clusters reducing possible choices im  make good choices taking account modiﬁcations pact expect important improvement  problem during search choices jus stances son clusters best results obtained                                                           minexp  minexp         size  minsep  tiﬁed static case explains good results        sdyn            obtains  classes   orders results show crucial similar results succeed solving instances  importance root cluster choice each heuristic class  calculus expected number solu  classes   fails solve average  instances tion assumes problem constraints independent  instances classes bad choice case problems considered                                                        size  minsep               minexp   minexp  root cluster note unsolved instances       outperform                sdyn  size minexp heuristics memory problems realworld problems dependent constraints  marked solved using class  order observe results table  rele  sep heuristic grouping variables merge cluster vance extending dynamic order merging clusters                                                    ijcai                                                     
