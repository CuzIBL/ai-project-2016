                                            goal   change             steven shapiro                  yves  lesperance´                hector  levesque          science  inst        dept  science       dept   science          university leipzig               york  university               university toronto             leipzig                       toronto                       toronto                germany                      mj    canada                ms     canada   shapiroinformatikunileipzigde       lesperancsyorkuca              hectorcstorontoedu                        abstract                          place ﬁrst deﬁne goals using accessibility relation                                                         picks situations agent wants      discussion belief case successor state axiom      change gardenfors¨  spohn   affected communicative actions request actions      goal change received attention   cause agents adopt goals cancelrequest ac      paper propose method goal change tions cause agents drop goals adopted      framework reiter’s  theory action following prior requests consider properties      situation calculus mccarthy hayes  axiomatization expansion contraction persistence      levesque et al  investigate prop finally identify restrictions accessibility rela      erties extend framework developed      tions positive negative introspection goals      shapiro et al  shapiro lesperance´ show restrictions persist asserted       goals goal expansion mod  initial situations      elled goal contraction                remainder paper organized follows                                                        sec  brief review situation calculus                                                        iter’s theory action shapiro et al’s  framework    introduction                                       representing knowledge expansion situation calcu                                                        lus sec  introduce framework goal change  commonsense abilities people possess abil sec  investigate properties framework  ity predict behaviour attribute goals sec  present example sec  conclude  beliefs assume act discuss related work suggest avenues future work  liefs achieve goals strategy endowing ma  chines similar ability explicitly model beliefs  representation action knowledge  goals agents assume acting achieve  goals accordance beliefs dynamic basis framework goal change action  environments beliefs goals agents likely ory reiter  based situation calculus mccarthy  change discussion hayes  levesque et al  situation calcu  lief change gardenfors¨  spohn  goal lus predicate calculus language representing dynam  change received attention paper ically changing domains situation represents possible  propose method specifying reasoning goal state domain set initial situations cor  change framework reiter’s  theory ac responding ways agents believe domain  tion situation calculus mccarthy hayes  initially actual initial state domain repre  levesque et al  inherit reiter’s solution sented distinguished initial situation constant  frame problem iterated goal change achieved seam term doa denotes unique situation results  lessly using sequences actions approach goal agent doing action situation situations  traction simpler approaches belief revision structured set trees root each  relies using history requests speciﬁca tree initial situation arcs actions se  tion entrenchment work extends framework quence actions produces situation called  veloped shapiro et al  shapiro lesperance´ tory situation  ≺ resp means   goals goal expansion modelled nonempty resp path situation situation  goal contraction                             initial situations deﬁned having history                                                              def                   model agents adopt goals requested inits  ¬∃a  doa   conﬂicting goal predicates functions value change  maintain goals unless explicitly requested situation situation argument situa  drop agent requested goal ﬁrst tion called ﬂuents instance use ﬂuentinroomagt represent fact agent agt change knowledge occurs moving  room situation effects actions ﬂuents doa known agents ac  deﬁned using successor state axioms reiter  tion successfully executed true  provide succinct representation effect axioms kalternative situations doa situations  frame axioms mccarthy hayes               result doing kalternative situation                                                                                                        quantifying formulae assume possible execute denoted possa   encoding formulae ﬁrstorder terms action informinfr agt φ idea mov  adapt giacomo et al’s  axioms purpose ing doinforminfr agt φ agt  omit details freely quantify knows action executed  formulae simplify notation ignore knows φ holds case kalternative  tails encoding use formulae directly instead situations doa agt situations result                                                        performing kalternative situation  terms represent use ψ denote formula                                              contain situation constants φ possible execute ones φ false  denote formula contain use usual say agent knows formula φ  φ ψ  resp denote formula results φ holds situations kaccessible                                                                   def                  substituting φ resp knowagt φ  ∀s kagt  ⊃ φs     axiomatize dynamic domain situation calculus following shapiro et al  say agent  use reiter’s  action theory consists  execute inform action knows content  successor state axioms each ﬂuent including action true  introduced  initial state axioms  initial state domain initial mental states axiom   agents  precondition axioms specify possinforminfr agt φ ≡ knowinfr φ  ditions distinguished predicate possa  holds physically possible execute action dealing knowledge belief  situation  unique names axioms actions assert initially reﬂexive  domainindependent foundational axioms adopt ones  given levesque et al  accommodate multiple axiom  inits ⊃ kagt  initial situations   axioms encode formulae terms         following scherl levesque assert initial                                                        situations krelated initial situations    moore  deﬁned possibleworlds semantics                                                        use initial state axiom purpose  logic knowledge situation calculus treating situa  tions possible worlds scherl levesque  adapted                                                                   agt            reiter’s theory action scherl levesque gave axiom    ∧ init  ⊃ init   successor state axiom states actions includ  ing sensing actions affect knowledge shapiro et al  axiom successor state axiom imply                                                        situations history krelated intro  adapted axiom handle multiple agents inform                                                       spection discussed sec   actions adopt kagt  used  denote situation agt thinks situation  actual situation note order situation argu  goal change  ments reversed convention modal logic ac  cessibility relations informinfr agt φ action just agent’s beliefs change goals  agent infr informing agent agt φ holds able change example agent’s owner requests  shapiro et al’s  successor state axiom agent’s goals change reﬂect                                                        request extend framework developed shapiro et                                                                                              axiom                                              al  shapiro lesperance´   goals                                                        goal expansion modelled goal contraction                    kagt  doa ≡                              following cohen levesque  model goals      ∃skagt ∧  doa ∧ possa ∧                                                       ing accessibility relation possible worlds situations          ∀infr φa  informinfr agt φ ⊃ φs                                                            say kalternative situation agt                                                                                       note action inform ac krelated agt kagt  holds drop agt  tion directed agt speciﬁcation ensures understood context                                                           note agents aware actions occur    using terms formulae underlying repre cluding inform actions broadcast model commu                                               sentation informinfr agt φ  informinfr agt φ  nication shapiro lesperance´  encrypted speech acts  φ φ term difﬁcult modify introduced ensuring intended recipient mes  representation equality holds φ φ rep sage know contents  resentations equivalent formulae adopt convention handle belief revision treatment belief  unbound variables universally quantiﬁed widest scope revision framework discussed shapiro et al case accessible worlds ones com noted konolige pollack   patible agent wants case cohen careful using deﬁnition goal suppose agent  levesque’s accessibility relation goals subset conjunctive goal ψ ∧ ψ according deﬁnition  accessibility relation beliefs constraint pre goal ψ ψ goals  cludes agent wanting believes impossi imagine rational agent working achieve  ble unless goals inconsistent case deﬁne juncts subgoal easy think circumstances  terms primitive accessibility relation achieving component conjunctive goal  intended model agent wants undesirable example goal hold  dependently knows deﬁne cohen ing bomb bomb defused want  levesque’s goal accessibility relation intersec true simultaneously goal  tion                                     holding bomb defused konolige    agent’s goals future oriented example pollack did intention modality consider  agent want property hold eventually formulae agent’s “only goals” formulae  agent’s goal form eventuallyψ formula true paths  ψ evaluate formulae respect path ogoalagt ψ def  situations single situation ∀s skagt ∧  ⊃  formulae path formulae cohen levesque used inﬁnite                     agt ≡ ψs  timelines evaluate formulae simplicity  evaluate path formulae respect ﬁnite paths situa successor state axiom                                                                          −          tions represent pairs situations agt  agt  resp deﬁned                                                                                                   corresponds “current denotes conditions added  time” path situations deﬁned sequence dropped resp action  situations history path formulae  tain situation constants exam axiom    ple ∃rinroomjohn now∧¬inroomjohn    agt doa ≡  used denote goal john eventually leaves agt ∨ agt ∧ ¬w −agt  room currently    relation like relation relation situa agent’s goals expanded requested  tions relates situations histories agent   relate situations different histories intuitively requestrequester agt ψ action occurs agt  agt holds situation agt considers adopt goal ψ unless currently conﬂicting  wants true actually true exam goal assume agents maximally cooperative  ple agent wants millionaire requestrequester agt ψ action                                                        cause agt drop paths ψ does hold  situations related agent millionaire                                     −  situations arbitrarily far future action taken account deﬁnition     recall situations accessibility relation −agt def                                                                          ones agent wants actualize independently ∃requester ψ  requestrequester agt ψ ∧  knows following cohen levesque want   ¬goalagt ¬ψ ∧ kagt ∧  ∧  goals agent compatible knows ¬ψdoa  situations agent wants actualize path                 situation agent considers possible according deﬁnition dropped   situations used determine goals requester ψ requestrequester agt ψ  agent accessible situations com action agt does conﬂicting goal goal                                                        ¬ψ kintersects ψ does  patible agent knows sense                                                                         hold path doa   reason check  kaccessible situation history say                                                                                      ¬ψ holds doa      kagtsintersects kagt     suppress agt understood context handle goals relative current time  deﬁne goals agt formulae true example ψ states action  situations accessible coffee need check action                                                      request getting coffee checked ¬ψ  kintersect situation                                                                                     action request action   goalagt ψ def                                   agent gets request ψ goal   ∀s sw agt ∧ kagt ∧  ⊃ ψs ¬ψ does adopt goal ψ              note corresponds “current situation” note according deﬁnition goal agent  current time path deﬁned               goal implies ¬ψ goal ¬ψ                                                                                                                                                     goalagt ψ  holds ∀s ψ  ⊃ ¬ψs  holds    operation used obtain goalagt ¬ψ holds words agent  quite intersection related operation ﬂicting goal implies ¬ψ ψ adopted goal                                                                                                       goal state inconsistent want ev                             erything simple way handling goal conﬂicts  interesting method credence    requests certain individuals requests certain types cancelrequest requester agt ψ  example agent gets request owner  conﬂicts previous request                    drop previous request adopt owner’s request    stead reserve sophisticated handling conﬂict                 ∗  ing requests future work                                                                                                                                              ∗    assume request actions possible exe                     cute executability conditions easily added    axiom  possrequestreqr agt ψ                   requestrequester agt ψ                                                                                    turn attention goal contraction sup  pose owner agent asks ψ           figure  example goal contraction  later changes mind owner able  tell agent stop working ψ use ac                                                        cause dropped  returned  tion cancelrequestrequester agt ψ purpose  action causes agt drop goal ψ         cancelrequestrequester  agt ψ                                                        action   executed          words  cancelrequest   action executed corre                                                                                                 agt cancelrequestrequester agt ψ   sponding request action occurred past                                                                                                           holds   following hold   agt   axiom  posscancelrequestreqr agt ψ ≡      dorequestrequester agt ψ                                                            dorequestreqr agt ψ              cancelrequestrequester  agt ψ            cancels                                                        requestrequester agt ψ  situation                                                             ∗  ∗     handle cancelrequest    actions determining  doa    dorequestrequester agt ψ  relation correspond ¬w −agt a∗ s∗ holds note  ing request  action happened  suppose    deﬁnition  work properly assume  cancelrequestrequester agt ψ action occurs situa request action history  tion restore relation way cancelled each cancelrequest assumption  corresponding request occurred starting just relaxed future work                                          ∗  ∗  request look situations doa                                             history remove situation satisﬁes  properties  −agt s∗ situations removed  reﬂect adoption subsequent request ﬁrst consider properties goal change let Σ                               ﬁne predicate cancelsa  says action sist foundational encoding unique names axioms                     cancels action  case cancelrequest axioms sections   show  actions cancel corresponding request’s           theory supports goal expansion agent does                                                        ¬ψ  goal request ψ causes adopt ψ                   def      cancelsa                                    goal       ∃reqr ψa  cancelrequestreqr agt ψ ∧       theorem                                  requestreqr agt ψ                Σ  ∀agt ψ requester s¬goalagt ¬ψ ⊃     deﬁne   states conditions        goalagt ψ dorequestrequester agt ψ  added  executed                                                           show conditions agent’s                                                                                                            agt def                             goals expanded agent goal ψ ψ                                                       requested agent agent knows request does       ∃siw agt  si ∧                                                        affect truth value ψ ψ does conﬂict           ∃adoa si  ∧ cancelsagt ∧                  ∗ ∗                ∗  ∗               agent’s goals goals expand include ψ               ∀a   doa si ≺ doa    ⊃                             −      ∗   ∗                         ¬w   agt          theorem    help explain deﬁnition refer fig  Σ  ∀a agt ψ ψ reqr                                                                                                       segment situation forest shown situation   ogoal  agt ψ   request  reqr agt ψ                                                                           ∧                      ∧  related related    knowagt ∀thenpossa ⊃  history action     ψnow ≡ ψdoa ∧  history requestrequester agt ψ suppose      goal  agt ψ                                                             ¬        ¬      ⊃  dropped request         ogoalagt ψ ∧ ψ doa  actions dorequestrequester agt ψ  examine persistence goals goal ψ  need following deﬁnitions transitivity  sists action cancel request euclideanness starting situation note order  agent knows ψ holds does change value situations reversed traditional deﬁnitions                                                                        def  theorem                                             ktransagt  ∀s skagt ∧ kagt ⊃                                                                                      kagt  Σ  ∀a agt ψ                                               def                                                         keucagt  ∀s  kagt  ∧ kagt  ⊃        goalagt ψ ∧                                                                                                                                                          kagt          ∀reqr ψ  cancelrequestreqr agt ψ  ∧                                                 knowagt ∀thenpossa ∧ ψnow ⊃                           ψdoa ⊃     theorem  scherl levesque  showed          goalagt ψ doa                        initially reﬂexive transitive euclidean                                                        successor state axiom guarantees properties    similar result “only goals”          preserved executable sequences actions                                                        sult carries show reﬂexivity pre  theorem                                                         served recall asserted initially reﬂexive   Σ  ∀a agt ψ                                  axiom  successor state axiom preserves         ogoalagt ψ ∧                             reﬂexivity executable sequences actions         ∀requester ψ                                                   requestrequester agt ψ  ⊃           theorem               goalagt ¬ψ ∧                                                              Σ  ∀agt sexecutables ⊃ kagt            cancelrequestrequester agt ψ  ∧         knowagt ∀thenpossa ⊃                                  def                                                                                executables  ∀a doa   ⊃ possa              ψnow ≡ ψdoa ⊃               ogoalagt ψ doa                                                          similarly initially transitive euclidean                                                        remains executable sequence actions    show property goal contraction sup  pose agent goal ψ just theorem   reqr requests ψ agent future situation  reqr cancels request ψ yielding situation Σ  ∀agt sinits ⊃ ktransagt ∧ keucagt ⊃  assume request agent ψ      ∀agt sexecutables ⊃ ktransagt ∧  reqr request cancelrequest           ∀agt sexecutables ⊃ keucagt  actions occurred assume ψ al  ways persists condition weakened assumed positive introspection goals need constraint  simplify proof show agent similar transitivity involves   goal ψ words request ψ constraint crosstransitivity  cancelled “only goals” persisted                                                              crosstransagt def  theorem                                                   ∀s skagt ∧ kagt ∧                                                                         agt   ∧  ⊃   Σ  ∀agt ψ ψ reqr ogoalagt ψ ∧                                                                                                           agt          dorequestreqr agt ψ   ∧                                                        docancelrequestreqr  agt ψ   ∧                                                        ∀s sdorequestreqr agt ψ   ∧ constraint satisﬁed transitive                                                               dorequestreqr agt ψ   ⊃   agents positive introspection goals                    ∧          ∀s∗ a∗                                     theorem                                             ∗  ∗            dorequestreqr agt ψ  ≺ doa   ∧                ∗ ∗                                      Σ  ∀agt ψktransagt ∧ crosstransagt ⊃            doa    ⊃                                                                      goalagt ψ ⊃             ¬∃reqr  ψ                 ∗                                                        knowagt goalagt ψ                 cancelrequestreqr    agt ψ  ∨                ∗                                       requestreqr  agt ψ  ∧          ∀a sψs ≡ ψdoa ⊃                                                         negative introspection goals need constraint            ogoalagt ψ                           similar euclideanness crosseuclideanness      just agents introspect knowledge want agents  crosseucagt def  able introspect goals agent goal ∀s skagt ∧ kagt ∧  does goal resp ψ know       agt ∧  ⊃  does resp ψ goal identify constraints               agt  yield properties constraints
