               reinforcement learning local shape game                              david silver richard sutton martin muller¨                                     department computing science                                            university alberta                                        edmonton canada tg                                 silver sutton mmuellercsualbertaca                        abstract                          effective fast compute easy interpret modify                                                        debug good convergence properties      explore application game      secondly weights trained temporal difference learn      reinforcement learning approach based lin ing selfplay world champion checkers program      ear evaluation function large numbers bi  chinook handtuned expert players  years      nary features strategy proved effective weights trained instead selfplay using tem      game playing programs reinforcement  poral difference learning algorithm program equalled      learning applications apply strategy performance original version  similar ap      creating million features based tem proach attained master level play chess  tdgammon      plates small fragments board achieved world class backgammon performance train      use temporal difference learning selfplay ingbytdandselfplay  program trained      method identiﬁes hundreds low level shapes tdλ selfplay outperformed expert handtuned ver      recognisable signiﬁcance expert players sion card game hearts  experience generated      provides quantitive estimates values selfplay used train weights world      analyse relative contributions performance champion othello scrabble programs using squares      templates different types sizes results regression domain speciﬁc solution respectively       show small translationinvariant templates       surprisingly effective assess performance   finally linear evaluation function combined      program playing average lib suitable search algorithm produce highperformance      erty player variety opponents         ×                                            game playing program minimax search variants particu         server linear evaluation  larly effective chess checkers othello backgammon      function appears outperform static eval     montecarlo simulation proven      uation functions incorporate substantial successful scrabble  hearts       domain knowledge                                   contrast games ancient oriental game                                                        proven particularly challenging strongest    introduction                                       programs currently play level human beginners  number notable successes artiﬁcial intelligence difﬁculty constructing suitable evaluation function                                                           attributed straightforward strategy linear evaluation   speculated uniquely difﬁcult  simple features trained temporal difference learn computers intuitive nature requires  ing combined suitable search algorithm games altogether different approach games accordingly  provide interesting case studies approach games new approaches tried limited success  varied chess checkers othello backgammon scrab paper return strategy  ble computers exceeded human levels performance successful domains apply develop  despite diversity domains best pro systematic approach representing intuitive knowl  grams share simple strategy                     edge using local shape features evaluate positions using    positions evaluated linear combination linear combination features learn weights  features each game position broken temporal difference learning selfplay finally incor  small local components material pawn structure king porate simple alphabeta search algorithm  safety chess  material mobility terms check  ers  conﬁgurations discs othello  checker counts  game  backgammon  single duplicate triplicate letter main rules simple black white players  rack leaves scrabble  card combina turns place single stone intersection  tions hearts  each case notable exception board stones moved played  backgammon linear evaluation function proven captured sets adjacent connected stones colour                                                    ijcai                                                                                                          achieved predicting expert moves approach                                                    led strong play practice focus                                                      mimicking evaluating understanding                                                    shapes encountered                                                        second approach train multilayer                                                      ceptron using temporal difference learning selfplay                                                          networks implicitly contain representation                                            local shape utilise weight sharing exploit natu                                                        ral symmetries board approach led  figure  black plays captures white stones stronger playing programs enzenberger’s neu  right playing common tesuji capture rogo iii  competitive commercial  white stone stones bottomleft form programs  ×  boards capacity shape  common joseki marked stone black play knowledge limited network architecture  according three proverbs onepoint jump knowledge learned directly interpreted modiﬁed  ponnuki hane head stones manner pattern databases  safety marked black stone depends context  safe topleft captured white  local shape representation  topright safe white bottomleft                                                        represent local shape template features                                                        board shape type deﬁned template size fea  known blocks intersections adjacent tures used template weight sharing technique  block called liberties block reduced zero used  liberties opponent captured removed template conﬁguration features rectangu  board figure end game each player’s score lar region board basic template speciﬁes colour  equal number stones captured plus black white each intersection rect  total number intersections known territorythat angle template matched given position rect  surrounded                                 angle board contains exactly conﬁguration                                                        template local shape feature simply returns binary    shape knowledge                              value indicating template matches current po  concept shape extremely important good sition  shape uses local stones efﬁciently maximise tactical advan use weight sharing exploit symmetries  tage professional players analyse positions using large vo board  rotationally reﬂectionally symmetric  cabulary shapes joseki corner patterns tesuji shapes share weights colour symmetry repre  tactical patterns occur variety different sented inverting colour stones evaluating  scales speciﬁc location board white invariances deﬁne class location  equally applicable board figure  ex dependent shapes second class location independent  ample joseki left figure speciﬁc shapes incorporates translation invariance weights  marked black stone  point tesuji shared local shape features  used location proverbs exist template regardless location board figure   shape knowledge example “ponnuki worth shows examples weight sharing classes   points” “the onepoint jump bad” “hane shape  head stones” figure                    each type shape possible templates exhaus    commercial programs rely heavily tively enumerated shape set template sizes  use pattern databases represent shape knowledge   ×  weights stored memory shapes  years devoted handencoding professional ex set template sizes  ×  larger storage  pertise form local pattern rules each pattern rec weights memory impractical instead  ommends played speciﬁc conﬁgura utilise hashed weight sharing unique zobrist hash   tion stones encountered board conﬁguration computed each location dependent location indepen  include additional features requirements dent shape bins created according available  liberties strength particular stone unfortunately memory weights shared shapes falling  pattern databases suffer knowledge acquisition bot hash bin resulting pseudorandom weight  tleneck expert shape knowledge hard quantify en sharing distribution shapes highly skewed  code interactions different patterns lead hope updates each hash bin dominated  unpredictable behaviour pattern databases instead frequently occurring shape idea similar  learned purely experience signiﬁcantly boost hashing methods used tile coding   robustness overall performance programs partial order shape sets deﬁne    prior work learning shape knowledge focussed predicate gij  shape set si general  predicting expert moves supervised learning local shape shape set sjand shape sets smaller tem    success rates  plates strictly general larger ones location                                                    ijcai                                                                                                                      ear combination local shape features φjk shape                                                                    sets corresponding weights θjk sigmoid                                                                    function σ squashes output desired range                                                                                          ⎛                 ⎞                                                                                          m nj                                                                                        ⎝                 ⎠                                                                               sσ           φjksθjk                                                                                                                                                                                                                                           weights θ initialised zero agent selects                                                                    moves greedy singleply search value func                                                                    tion breaking ties randomly agent plays                                                                    weights updated td algorithm                                                                    stepsize local shape features set                                                                    deﬁned each set equivalent proportion                                                                    credit normalising number parameters updated                                                                    each timestep                                                                                  δ     −               figure  examples location dependent location inde                                                   pendent weight sharing  ×  board                                α                                                                              Δθjk      δφjkv st − st                                                                                        mnj              independent shape sets strictly general location local shape features binary sub              dependent general shape set provides additional                                                                    set features need evaluated updated leads              information speciﬁc shape set provide                                                                                an efﬁcient    implementation              useful abstraction rapid learning                                  frequency shapes occur varies   time required evaluate              orders magnitude each shape sets sjthe date weights              total number weights set denoted njandthe              total number local shape features set matched  experiments learning shape  ×               position constant value nj figure  shows              breakdown total number frequency shape sets                                                                    trained goplaying agents coadaptive selfplay               ×  board                                                                    each adapting set weights defeat                                                                    approach offers advantages selfplay                learning algorithm                                 single agent utilises different gradients avoid local              principle set shape weights learned minima learned policies provide robust              purpose example connecting capturing surrounding formance comparison prevent games continuing              territory case weights learned directly excessive numbers moves agents allowed play              tribute winning game  ×  end each singlepoint eyes               game agent given reward win  test performance agent used simple tac              loss                                       tical algorithm opponent alp average liberty                value function πs deﬁned expected player evaluate position average number liberties              reward board position following policy πor opponent blocks subtracted average              equivalently probability winning game form player’s blocks ties broken randomly               approximation value function taking lin games selfplay  test games played each                                                                    agent pair alp                                                                      performed experiments each consisting                         template   location   location                        size     independent  dependent             separate runs  training games end train                                                            ing ﬁnal  test games played each agent                                                                                           ×                          ×                                 alp games played  boards learn                         ×                                 ing rate each experiment measured average                         ×                               number training games required agents exceed                         ×                              win rate alp during ongoing testing                         ×                            performance estimated average percentage                         ×                                wins agents during ﬁnal testing experiments                         ×                                  run α  exploration rate   during                         ×                                  training  during testing shape sets using hashed                         ×                                  weight sharing number bins set                                                                         ﬁrst set experiments agents trained using                 figure  number shapes each set  ×  just set shapes experiment each  ×                                                                 ijcai                                                                            location independent shape set  ×  location approximate canonical solution introduce              pendent shape set remaining experiments measured line cascade algorithm calculates multiple approxima              effect combining shape sets various degrees general tions value function each based different sub              ity each shape set si experiment run using set features each shape set si tderror δi cal              shape sets general sj  gji           culated based evaluation shape sets                individual shape sets  ×  shapes perform general si ignoring general shape sets              best figure  achieving  win rate just  corresponding value function approximation updated              games surpassing  win rate train according error              ing smaller shapes lack sufﬁcient representational power              ⎛                     ⎞              larger shapes numerous speciﬁc learned              m  nj                                                                                      ⎝                     ⎠              effectively training time location independent     visσ           gjiφjksθjk                    sets appear outperform location dependent sets learn                           considerably faster using small shapes training runs       δ     −               longer likely larger location dependent                                            shapes effective                                     α                shape sets combined      Δθjk      δjφjkvj st − vjst                                                                                       mnj              formance surpasses  win rate location independent              sets learn faster effectively mix calculating separate tderrors weights              ture different shapes appears robust successful general features approximate best representation pos              approach learning time slows approximately linearly sible just features simultaneously speciﬁc              number shape sets provide small features learn weights required locally correct              crease performance medium sized shapes        abstract representation prevents speciﬁc features                                                                    accumulating knowledge represented                                                                    general level leads canonical easily                board growing                                      interpreted weight vector              training time agent performing oneply search              ok × number moves  generalised shape features              length game increase quadratically board local shape features used far specify each              size training small boards lead signiﬁcantly faster tersection black white templates              learning knowledge learned transferred appro extended specify value additional features              priately larger boards                            each intersection provides simple mechanism                course knowledge transferred equiv corporating global knowledge increase expressive              alent features exist different board sizes ef power representation              fect features remains similar local shape features natural extension use liberty templateswhich              satisfy requirements local shape feature incorporate external liberty count each stone addi              small board aligned equivalent location tion colour external liberty liberty block              larger board relative corner position weights lies outside template corresponding count              each local shape feature initialised values learned measures zero exter              smaller board new local shape features nal liberty particular stone provides primitive              troduced centre larger board align measure stone’s strength local shape lo              shape smaller board initialised cal liberty feature returns binary value indicating              zero weights                                         liberty template matches current position                using procedure started learning  ×  board large number local liberty features use hashed              incremented board size win rate  weight sharing shapes              alp achieved agents                                                                       results                online cascade                                     conclude study shape knowledge evaluated                                                                    performance shapebased agents  ×               local shape features representation linearly variety established programs trained              pendent inclusion general shapes partial ﬁnal pair agents coadaptive selfplay using online              order introduces redundancy unique solu cascade technique board growing method described              tion giving deﬁnitive value each shape instead agents used shapes  ×   ×               large subspace optimal weight vectors           including location independent location dependent                deﬁning canonical optimal solution desirable shapes based local shape features local liberty              reasons firstly like goodness each shape features total  million weights              interpretable humans secondly canonical weight evaluate each agent’s performance connected              vector provides each weight independent meaning server played  games              preserved different board sizes example              using board growing procedure                  httpcgosboardspacenetxhtml                                                                ijcai                                                                figure  left percentage test wins alp training individual shape set  games right  number training games individual shape set required achieve  test wins alp left percentage  test wins using shape sets general right training games required  wins using shape sets  general     ×   minute time control time writ cgos program description games elo rating  ing server includes ﬁfty widely varying linearb shape features              programs each program assigned elo rating ac linearl   shape liberty features    cording performance server currently ranging linears shape features search     random player                                                               figure  cgos ratings attained trained agents  strongest current programs programs based static evalu  ation function little prior knowledge include alp   inﬂuence player  stronger programs  server incorporate sophisticated search algorithms stones corner bad surrounding corner                                                                                                       ×   complex handencoded knowledge                   good connected stones powerful                                                        shapes show value cutting opponent stones sep    agent trained local shape features attains rating           ×    signiﬁcantly outperforming simple static arate groups shapes demonstrate three different  evaluators server local liberty features used ways form eyes corner each specialisation  agent’s rating increases  figure  fi shape adds example playing stone  nally basic evaluation function combined corner bad playing connected stones corner  fullwidth iterativedeepening alphabeta search agent’s twice bad  performance increases                          greater sum parts                                                        weights learned million shapes agent’s     discussion                                       play exhibits global behaviours scope sin                                                        gle shape territory building control cor  shape knowledge learned agent figure  repre ners principle weakness local view board  sents broad library commonsense intuitions agent frequently play moves look beneﬁcial lo   ×  shapes encode basic value stone value cally miss overall direction game example  each intersection  ×  shapes show playing adding stones group hope survival                                                    ijcai                                                    
