            conjunctive query answering description logic                   shiq                          birte glimm ian horrocks carsten lutz uli sattler             school science              institute theoretical science            university manchester uk                       tu dresden germany                          abstract                          structures invariant guarded bisimula                                                        tions reason applications require conjunctive      conjunctive queries play important role  query answering stronger form querying com      expressive query language description logics  puting certain answers conjunctive query dl      dls modern dls usually provide    knowledge base      transitive roles open problem                                                          open problem conjunctive      conjunctive query answering dl knowledge                                 shiq      bases decidable transitive roles admitted query answering decidable  particular      query paper consider conjunc presence transitive inverse roles makes problem                                                                                        tive queries knowledge bases formulated   tricky glimm et al   results avail      popular dl shiq allow transitive roles able restricted cases ﬁrst case obtained      query knowledge base show    stipulating variables queries bound      query answering decidable establish individuals explicitly mentioned abox      following complexity bounds regarding combined   result form closeddomain semantics differ      complexity devise deterministic algorithm ent usual opendomain semantics dls easily      query answering needs time single exponential seen conjunctive query answering setting      size kb double exponential reduced instance retrieval second case binary      size query regarding data complexity  atoms conjunctive queries restricted roles      prove conpcompleteness                         transitive transitive subroles known                                                        conjunctive query answering setting decidable                                                        conpcomplete regarding data complexity ortiz et al    introduction                                         description logics dls baader et al  paper show unrestricted conjunctive query  established family logicbased knowledge representation answering shiq decidable precisely  formalisms recently gained increased attention vise decision procedure entailment conjunctive  usage logical underpinning ontology lan query shiq knowledge base decision  guages damloil owl     horrocks et al problem corresponding conjunctive query answering   dl knowledge base kb consists tbox wellknown decidability complexity results carry  contains intensional knowledge concept deﬁnitions entailment answering decision procedure                                                        query entailment consists intricate reduction  general background knowledge abox                          contains extensional knowledge used kb consistency shiq  shiq extended role  dividuals using database metaphor tbox corresponds conjunction easily seen decidable  schema abox corresponds data  resulting deterministic algorithm conjunctive query en    dataintensive applications querying kbs plays cen tailment shiq needs time double exponential size  tral role essentially forms querying query single exponential size kb  ﬁrst instance retrieval allows retrieval result concerns combined complexity mea  certain instances given possibly complex concept sured size inputs query abox  returns individuals abox tbox query tbox usually small compared  stance model kb technically instance abox data complexity measured size  retrieval wellunderstood prominent dl shiq abox relevant issue show deci  underlies damloil owl lite exptime sion problem corresponding conjunctive query answering  complete tobies  despite high worstcase shiq conpcomplete regarding data complexity  complexity efﬁcient implementations available harder instance retrieval hustadt et al   hand instance retrieval poor form query paper accompanied technical report  ing concepts used queries query tains proofs glimm et al                                                     ijcai                                                       preliminaries                                      kb Δi ·i  interpretation interpretation                                                                                     Γ  syntax semantics shiq                            satisﬁes  satisﬁes      tbox                                                        abox kb satisﬁes Γ say model Γ  let nc nrandni sets concept names role namesand                                                        write iΓ knowledge base consistent  individual names assume role names contain                                                        model  subset ntr ⊆ nr transitive role namesarole                   −  element nr ∪r   ∈ nr roles form conjunctive queries  r−     called inverse rolesarole inclusion form let nv countably inﬁnite set variables disjoint                                roles role hierarchy ﬁnite set role nc nrandnianatom expression av concept  inclusions                                           atomorrv v role atom concept                                                                    interpretation Δ  ·  consists nonempty set    ∈ nv                                                                      role       aconjunctive query nonempty  Δ  thedomain function ·  maps set atoms intuitively set represents conjunction  concept subset ai ⊆ Δi  role                        varq varat                                                elements use            denote set  ∈ nr binary relation ⊆ Δ × Δ     variables occurring query atom let  transitive ∈ ntr individual                           π  varq → Δi                                                    interpretation conjunctive query           element ∈ Δ  interpretation satisﬁes arole total function write            ri ⊆  si                   inclusion            role hierarchy sat •iπ  cv  πv ∈ ci  isﬁes role inclusions use following standard                                                                                 π                       notation                                               •i    rv  πvπv  ∈      invrr−    ∈     invrs    s−               π                              π                                    ∈ write π            role                                            match say satisﬁes write                       ∗   role hierarchy  reﬂexive transitive clo match π qifi models             h∪invr    invs   ∈h  sure                               andwe     akbk write  say entails     ≡∗                   ∗     ∗  use     abbreviation               query entailment problem deﬁned follows given                                   role hierarchy role wedeﬁnetheset    knowledge base query decide  trans       transitive roles                         wellknown query entailment query answering                      ∗                                 mutually reduced decidability complexity   ∃role ≡h ∈ ntr invr ∈ ntr                                                        results carry calvanese et al  horrocks tes   role called simple wrt role hierarchy saris  remainder paper concentrate                      ∗  each role h s∈ transh             query entailment                       ∗    subscript h transh dropped clear  convenience assume conjunctive queries  context shiqconcepts concepts short closed inverses rv v ∈ qthen  built inductively using following grammar invrvv ∈ add remove atoms query  ∈ nc ∈  role simple role silently assume resulting                                                        query closed inverses assume         ⊥a    ¬c                                                             queries connected formally query closed              ∀rc ∃rc  nsc  nsc                                                                                                      inverses connected ∈ varq exists                                                                                 v                 shiq                                   sequence                andfor  semantics     concepts deﬁned usual                               rv   ∈                                                            exists role      horrocks et al  details                                                                                                          collection      queries partitioning    general concept inclusion gci expression    ∪···∪q    varq  ∩ varq ∅     ij≤     concepts ﬁnite set gcis                                                                                             each qi connected following lemma shows  called tboxanassertion expression form  aa ¬aara ¬ra bora   bwherea concept connectedness assumed wlog  role ∈ nianabox ﬁnite set lemma  let knowledge base conjunctive query  assertions use inda denote set individual qqn partitioning qthenk iff qi  names occurring interpretation satisﬁes agci ≤    ci ⊆  di satisfaction assertions deﬁned  obvious way aa satisﬁed ai ∈ aian  interpretation satisﬁes tbox abox satisﬁes each  forests trees  gci assertion                                section carefully analyze entailment queries    observe abox assertions ca require knowledge bases establish set general properties  possibly negated concept standard play central role decision procedure  sumption data complexity dls analyzed start showing order decide qit  donini et al  paper sufﬁces check models  allow abox assertions cawherec arbitrary particular shape intuitively models shaped like  concept make explicit aboxes forest graphtheoretic sense modulo fact  generalized                                          transitive roles interpreted transitive relations                                                               ∗    knowledge base kb triple  let set ﬁnite words alphabet                                                                                                      ∗  tbox role hierarchy abox let  tree nonempty preﬁxclosed subset                                                    ijcai                                                                                                                           ∗  ∈   successor  · transh si h ri ≤ replacing                                                               ∈ where“·” denotes concatenation rivivi  neighbor w successor successor                                                                        v                                                                                                                                                                                                                                                deﬁnition  forest base interpretation           siviuisiuiuisiuivi  interpretes transitive roles unrestricted necessarily                                                                               transitive relations additionally satisﬁes following ≤ nwhereuiui  ∈ varqweusetrkq denote  conditions                                           set transitivity rewritings wrt                        ∗   Δi  ⊆ inda × ∈ indathe assume trkq contains isomorphic queries      set  ∈ Δi  tree                 differences newly introduced variable names ne                                                   glected lemma  following lemma shows    ∈    ε                          a   w                                     decide    sufﬁces check exis              neighbor                     tence canonical model forest match πand                                                                                π     ∈ inda ε ∈ inda ∈ trkq   model canonical exists forest base lemma  let model                                                                                                identical nonsimple  canonical ∈ trkq                                                                         roles wehave                                             iπ q π forest match                                                                                                                ∪                              ∈ trkqtheni                        s∗r s∈trans                   proof  proved using match canonical                                                                                                                     structure guide rewriting process  holds  case say forest base       deﬁnition transitivity rewritings semantics  observe canonical models each individual                 ε                            important property forest matches follow  mapped pair          does necessarily       iπ     π                 π               hold need adopt uniqe ing    forest match splits query                                                        subqueries base subquery contains role  assumption unaifa ∈ ni   allow                                                                                       atoms matched root nodes    desired una easily adopted                                                                                    adding assertion   each pair individual names      rv  ∈  πvπv  ∈ ni ×ε  inda abox                                                        each ε ∈ ni ×ε occurs  lemma     iff exists canonical model                                                        range πthereisanobject subquery qa                                                                                                    ∗                                                            qa  ∀v ∈ varatπv ∈a×in   proof using standard unravelling tobies             each model converted canonical model        ∪                                                          clearly         resulting subqueries  canonical model partitioning sense section   obtained unravelling hard show                                                       fundamental ideas decision procedure treat    implies   conjunctive queries different subqueries separately main                                                        beneﬁt object subqueries rewritten tree  lemma  shows deciding qitsuf                                                        shaped queries translated concepts  ﬁces check canonical models                                                        technique known “rolling up” tree conjunc  step like show canonical mod                                                        tive queries concepts proposed calvanese et  els check restrict attention                                                        al  horrocks tessaris   particular kind match π qamatchπ                                                         formally query treeshaped exists bijection  forest match rv  ∈                                                                                    σ varq tree rv  ∈ implies  following                                                                                                                         σv neighbor σv   show                  • πvπv  ∈ ni ×ε                             rewrite object subqueries treeshaped queries let                         ∗    • πvπv ∈a×in   ∈ inda         substantiate claim treeshaped queries rolled                                                        concepts result rolling shiq                                                                                               alas sufﬁcient consider forest matches concept concept formulated shiq  extension                                                                                                          instead show following rewrite shiq role intersection precisely shiq  set queries canonical models iwe obtained shiq admitting concept constructors                        π              iff ∈  forest  ∃αc ∀αc  αcand  αcwhereα  role conjunc       π  match   intuitively complication presence tion  ··· rk ri possibly inverse roles  transitive roles                                    let treeshaped query σ bijection varq                                                       tree  inductively assign each ∈ varq  deﬁnition  query  called transitivity rewrit                                                            shiq    concept cqv  ing wrt obtained choosing                                          v v  ∈      ∈      •   σv                       atoms                 roles                   leaf      av∈q                                                    ijcai                                                                                                                                                         ∗    • σv successors σvσvn    rv  ∈  role                                                        ∈ transandtherearevvn                        ∃                                                                                              vn  andsvivi ∈                 av∈q   ≤i≤n   rvvi∈q             query q tree transformation wrt exist                                                        queries  rolling cq deﬁned cqvrwherevr                                                          •                 σvrε recall σ bijection  collapsing        vr   exists following lemma shows connection • extension wrt kand  query rolled concept                                                          • q treeshaped reduct                                                                                    lemma   let treeshaped query interpreta      tt  tion iff ci   ∅                         use     denote set tree transformations                                                      wrt                                        show transform query set tree  shaped ones exact goal translation remark condition  query extensions strictly                                                        needed correctness ensures algorithm  need introduce tree matches special case forest                           matches match π canonical model tree single exponential size  case                                           ∗            tr              tt  match range π subset a×in forsome     assume  does contain isomor                                                        phic queries  ∈ ni tree transformation                      π                                   lemma states central properties tree trans      ∗  canonical model                                                       formations formulate introduce          π                iπ  q                                                      π           π         tree match       tree     technical notions let ∈ ttkq qandi                    q ∈             π                                  shaped query     tree match                 π π called εcompatible following holds                                                                                                          recall splitting query base subquery set ∈ varq identiﬁed variable ∈ varq                                                                                                         object subqueries qa induced forest match π during collapsing step πvπ                                                                                    hard each qa restriction π varqa ni ×εthenπvπ  furthermore π                                                                                   ∗  tree match qa object subqueries atree match πv ∈a×in ∈ varq                         π                        ∗  inducing matches satisfy precondition   lemma  let model    rewriting query treeshaped   canonical π atree match iπ  three stage process ﬁrst stage derive col                                                                                                       ∈ ttkq atree match π                                                                   lapsing  original query possibly identify       iπ  q    π π    ε  ing variables allows transform atoms         compatible                                                                              π    rv urv ru wru tree shape iden  ∈ ttkq  match π                 tifying  second stage derive exten iπ π π εcompatible  sion possibly introducing new variables                                              rv v  proof proof  straightforward proof  role atoms make certain existing role atoms       quite complex basic idea proof   redundant nonsimple stage                                       π                q                                    given canonical model tree match  derive reduct  possibly removing redundant     iπ           π                         rv v                                use  guide transformation  role atoms atoms    exist atoms                       sv sv   ∈        v ∗   process bounds       conditions                 n−                       extensions derived computing maximum number  ∈ trans combining extension reduct steps al                                               rv  variables atoms introduced guided  lows transform nontreeshaped “loop”  transformation process                           tree shape adding new variable v edges  sv vsvv ∗ ∈ transandthen intuitively using atree matches εcompatibility  removing redundant atom rv                  lemma  ensures given match base    follows size query deﬁned subquery tree match tree transformation each  number atoms                                 object subquery construct forest match                                                        original query  deﬁnition  collapsing obtained identifying                   q                    variables  query extension wrt     decision procedure      ⊆ q                                                                                                                                     let   knowledge base conjunctive query    av ∈ implies av ∈                        want decide qacounter model    rv v ∈ q  implies occurs     model   following                                                        show convert sequence knowl    varq≤q                                                        edge bases kk counter model                                        rv  ∈  rv  ∈ ≤        model ki ii canonical model                                                                                   query reduct wrt                countermodel  iii each consis                                                                                                  q ⊆                                            tent canonical model  iff                                                     inconsistent gives rise decision procedures                                 av ∈ implies av ∈                        terministic enumerate ki                                                    ijcai                                                     use derive upper bound combined complexity • τva vn   nondeterminstic guess ki                                                          • ≤ τvia τvi undeﬁned  yields tight upper bound data complexity                                                                                                             • role st rvivi  ∈     knowledge bases ki involve concepts obtained                                                                                                                        rolling treeshaped queries fomulated τ split mapping ∈ inda            shiq    shiq precisely each kb ki implies reacha τ ∩ reachb τ∅ intuitively each                                                                            form t∪tq a∪aiwhere                  split mapping τ represents set forest matches π                                                        q πvτvε domain    •  shiq knowledge base                                                                                                     τ each injective split mapping induces splitting    •t                c         shiq                        set gcis            concept     base query object queries split mappings τ                                      •ai                     shiq                       need injective general picture           generalized        abox                                                     indai ⊆ inda                                 induce splitting collapsing obtained                                                                                v    τvτv  follows knowledge bases form ex identifying variables         tended knowledge bases using standard unravelling argu splitting follows  ment easy establish property iii qτ  rv v ∈ q  τvτv deﬁned                                                             consistent extended knowledge base canonical   qτ    ∈ q  varat ⊆ reacha τqτ  model                                                                                               actual construction extended knowledge bases ∈ ni range τ observe  based analysis section  start lemma  condition distinguishes splitting candidates split                                                                                            τ        τ   imply following ensure canonical model mappings ensures   implies varqa  ∩ varqb ∅  extended kb counter model sufﬁces condition satisﬁed splittings described sec                                    prevent forest matches queries ∈ trkqinorderto tion  needed independently roll subqueries                                                         τ  prevent matches use parts tq ai extended qa concepts  knowledge bases                                        following use subq denote set sub    precisely distinguish kinds forest queries set nonempty subsets qlet  matches tree matches true forest matches forest  ∃q  ∈ tr qq ∈ subq ∈ tt   matches tree matches preventing tree matches                                          ∈ trkq canonical model relatively simple   clq                                                                                   let     set rolled concepts forall  lemmas   sufﬁces ensure ∈ q ∈ shiq        a                                                                               abox     called completion  tt                                corresponding concept does contains assertions form  instances tq deﬁned follows                                                          •¬ca           ∈ clq   ∈ inda                                                                                   tq    ¬cq  ∈ ttkq  ∈ trkq                                                          •¬ra role occurring ∈  easily seen true forest matches π involve inda                                πv ∈  ×ε  abox individual              τ                      q ∈  tr     a    variable order prevent true forest matches let split mapping                                                              completion say a spoils τ following  use abox ai intuitively obtain aboxes                                                        holds  aa considering possible ways adding asser                             q ∈ tr                           rv v ∈ qτ      ¬rτvτv  ∈a  tions queries  true forest                        matches prevented gives rise knowledge bases                    τ         ¬ca  ∈a                                                range                                                                    suggested section  prevent true forest                                                                                   cq        π    ∈  trkq          π                                                  τ  match             splitting base subquery                        ∈ttkqa   number object subqueries making sure  base query fails match involves indi intuitively prevents tree matches object subqueries  vidual names abox object cf lemmas                                                            finally qcompletion a called counter canidate  subqueries fails tree match section                                             used concrete forest match π split query sub ∈ trkq split mappings τ                                                         a      τ                                queries concrete π available spoils let    counter candidates                                                                consider possible ways forest match split   associated extended kbs  query                                                             k                                                      lemma         iff        inconsistent    let ∈ trkqasplitting candidate partial         τ  varq → inda                           deﬁne decision procedures query entail  function                  nonempty domain         shiq  ∈ inda      reacha τ                           ment       deterministic version generate           weuse            denote set variables        a               ∈ varq exists sequence variables completions return “   ” generated                                                        a counter candidate rise inconsistent  vn ≥                                                        extended kb return “k   q” non                                                                                                      recall abox generalized admits assertions ca deterministic version guess qcompletion                                                                          arbitrary concept                          turn “k   q”ifa counter candidate associated                                                    ijcai                                                     
