                              chronicle recognition improvement                          using temporal focusing hierarchization                                christophe dousson pierre le maigat                                           france telecom rd                                           avenue pierre marzin                                        lannion cedex france                    christophedoussonpierrelemaigatorangeftgroupcom                        abstract                          like event manager ilogjrules based modi                                                        ﬁed rete algorithm processing time constraints berstel      article falls problem sym   separate processing temporal data      bolic monitoring realtime complex systems  like dousson  article mainly deals      video interpretation systems vari  second approach temporal constraints managed      ous techniques used online monitoring constraint graph relevant time points sce      interested temporal scenario recog narios approaches dealing tempo      nition order reduce complexity  ral constraints strs recognizes scenarios analysis      recognition consequently improve past rota thonnat  sprs performs      formance explore methods ﬁrst analysis scenarios recognized future      focus particular events practice uncom ghallab  main problems sprs approach      mon ones second factorization fact scenarios bounded time order      common temporal scenarios order hierar avoid expected ending scenario practice      chical recognition article present working realtime systems difﬁcult exhibit sce      concepts merge propose focused hi  nario bounded time second      erarchical recognition approach merges  sprs engine maintain partially scenarios      generalizes main approaches symbolic   possibly leads use large memory space      recognition temporal scenarios store  partially avoid drawbacks implementation sprs      tally recognized scenarios strs approach    algorithms dousson  introduces clock dead      store partially recognized scenarios sprs   lines used garbage collect pending scenarios      approach                                         hand main problem strs algorithms                                                        maintain previously recognized scenarios                                                        knowledge work published long    introduction                                       scenarios maintained addition strs does  symbolic scenario recognition arises monitoring dy provide kind “prediction” sprs does  namic systems areas telecommunications  ﬁrst attempt beneﬁts approaches  networks supervision gas turbine control healthcare moni vu et al  consists hierarchization  toring automatic video interpretation overview constraint graph scenario deals graphs  fer cordier dousson                   information time constraints retrieved    scenarios obtained things path temporal instants totally ordered  experts automatic learning fessant et al  vautier hierarchy constructs imbricated sequence scenar  et al  deriving behavioral model ios containing events time principle  guerraz dousson  symbolic nature recognition instant instantiate elementary scenar  scenarios engine performing recognition ios event integrated highlevel scenario  rarely directly connected sensors looking previously recognized elementary scenarios  dedicated calculus module transforms “raw” purpose article generalize method start  data sent symbolic events typically ing point sprs approach generalization  module compute numerical quantity sends sym mixes reasoning past future byproduct strs  bolic events computed value reaches given thresh sprs methods appear extreme kinds pro  olds cognitive vision module usually video pose focused hierarchical recognition  processing transforms images symbolic data  section presents used sprs approach    scenarios combination logical tem tails aspects relevant paper sec  poral constraints cases symbolic scenario recogni tion  dedicated temporal focusing enables  tion process scenarios uniformly set constraints focus uncommon events prior events                                                    ijcai                                                     basic events coming directly su figure  shows mechanism recognition algorithm  pervised aggregated indicators temporal small example crs receives  creates  focusing used order control computation new instance updates forthcoming window  indicators particular temporal windows avoid node new occurs  instance created  useless computation indicators forthcoming windows updated “using” clock tick  scenarios section  presents hierarchical recognition set  occurs created  deals common subscenarios finally show destroyed event integrated  concepts merged experimentally lead good instance destroyed waiting poten  improvement performances object tial   events instantiated  section                                             chronicle recognized    conclude section  experimentation detect  ing naive servers reﬂected distributed denial service                   chronicle model  rddos attack                                                                                    time      chronicle recognition                                 discarded   approach based chronicle recognition pro  posed dousson  falls ﬁeld sprs                     methods chronicle given time constraint graph la                                                                                                beled predicates                                                chronicle instances    instance event pair date  event type ambiguity results figure  created instances chronicle incoming  distinguish event type event stream ffe   figure  shows chronicle contains events  event instantiated occur   units                                                                             assertnomore  time instantiation event occur  clock “        ” event  tween   units time −  ﬁrst implementations chronicle recognition clock  units time e                               introduced order discard “impossible” instances                                                        clock goes past forthcoming windows                                               behavior ﬁgure                                                                                        order account jitter data transmis                                                                                   sion possible delay δ taken account                                                        lay bounds maximum difference observed reception                  figure  chronicle                tween events sending time possibly                                                        distributed basically event integration algorithm                                                        written following    note complete formalism based reiﬁed logic  chronicle conjunctive formula introduces           integratee  predicates persistency event absence article       setgarbageclockt − δ  choose present details focusing time  straint graph point view predicates taken main drawback implies events arrive  account discussed                       roughly fifo manner allowed jitter bounded                                                        δ fifo hypothesis relaxed    recognition algorithms                           case monitored distributed δ                                                        increased garbage efﬁciency decreases   let crs chronicle recognition denote algo order avoid instead clock deﬁne new  rithm recognition basically mechanism crs input message “assertnomoree i” event  each incoming event try integrate pend type extended interval speciﬁes crs  ing partial instances chronicle model andor cre receive events type oc  ated new instance calculating using constraint propa curence date mechanism implemented crs  gation dechter et al  new forthcoming windows managing forthcoming window each event type  forthcoming events each instance instance updated receiving “assertnomore” message  chronicle model partial instantiation model crs deals asser  forthcoming windows fce noninstantiated event tion close previous crs intuitively  extended interval occurrence event                                                                                       forthcoming windows reduced fce win  lead recognition                          dows propagated according constraint graph    extended interval disjoint union intervals incremental strs mechanism integration    does imply non instantiated events eif block backward manner  occurs ∈ fce instance recognized case focusing side effect using clock  difference sprs mechanism integration events creation “false” instances explained section                                                     ijcai                                                     chronicle forthcoming window addition recognition engine developed  instance discarded previous garbage collect crs modules ﬁgure  event router routes  emulated following                   events coming supervised en       integratee                               gine collector module named finished level       ∀ event type e assertnomoree  −∞t− δ    tector detects particular instance chronicle                                                        ﬁnished integrate events level lesser  illustrates previous clock management forces looks forthcoming windows events level nand  event types synchronized words sends through “focus” message collector  kind event widely jittered event types request events module called need window  supposed notice allow calculator computes current instances win  use extended intervals complex garbage man dows need events greater level sends  agement easily implemented different information collector “discard” message   −∞ clock non chronological process order make buffer management easier collector  instance “assertnomoree   ∪  ” self split buffered streams each event type  “assertnomoree  ”    point view changes slightly manner engine  works progress time driven observa incoming             recognition  tions coming supervised “internal” events                  engine                                                                    event              crs  control control given knowledge edft… router  temporal behavior sec  tion new feature essential efﬁcient temporal          finished level     need window                                                                              detector           calculator  focusing                                                                     ft                 discardfxyz                                                                           focusfab    temporal focusing                                                              ft                                                                                             general description                                                        assertnomorefab  cases events status exam  ple ﬁgure  event frequent event                                         nmf                                                                                  buffered stream  ﬁlf  extremely uncommon difference frequency                          ftftft… focf  recognition chronicle intractable prac                                                                                  buffered stream nmg  tice each event potentially creates new instance                                        ﬁlg                                                                                     gdgd…  chronicle waiting events thousand ar  collector                           foc  rive   thousand instances created  event extremely uncommon instances   figure  architecture focused recognition  ﬁnally destroyed crs number creation  instances great impact performance recog stage deﬁned messages feedback  nition order reduce number focus event control production event high level crs able  following manner events arrive store focus speciﬁed time windows sending “focus”  collector created new instances events message discard events irrelevant time win  occur search collector dows sending “discard” message  integrated instances potentially number created  instances number number  buffered streams  order limited uncommon events order collector composed buffered streams each  recognition process introducing level each event type dedicated event type section presents  principle temporal focusing following works each buffered stream manages three particular  temporal focusing begin integration events level temporal windows ﬁgure    exists instance events assert window nm contains        level  integrated       occurrence dates event received  levele ≤ levelf engine integrate   search collector events    collector ﬁnds sends en                                                               window  ﬁltered  gine leads creation instance technically             window  choice sending instances wait                         focused window  ing events level pending instances  number sending collector engine                                     time  small small number instances created  ensures collector sends event                  buffered events  time example leads creation  stance fce                            figure   control windows used manage buffer                                                    ijcai                                                      ii ﬁltered window ﬁl contains occur       assertnomorefw         control message      rence event dates pending instances don’t      care    iii focus window foc contains occurrence                               buffer previous      dates incoming events required                                    state      integrated immediately crs stored    ﬁgure  illustrates different cases processing    event according position temporal windows                                buffer state  buffered stream      ff                                                                           assertnomore  buffer reply            fordidden                   event                            sent crs          happen             discarded                                                               focusfw                discardfw                   ffthe event                                            event                     sent crs                                            buffered      figure  different cases processing event occur                                                                        events sent                   events  rence buffered stream according event date             crs                     deleted                                                                                                                                                                             assertnomore               assertnomore                                                                        sent crs                sent crs  reception control messages “assertnomore” “discard”  “focus” updates buffered stream                                                        figure  behavior buffer receives control    assertnomorefw   “                 ”  updates windows ﬁg  message “assertnomore” “discard”or“focus”      nm ←  nm ∪ ﬁl ← ﬁlw foc ← focw sends      crs “assertnomorefw ∩ foc”                                                        case directly   “discardfw”  destroys events updates                                                        sent recognition engine use      windows  ﬁl ← ﬁl ∪ wnm foc ← focw                       assertnomorefw               maintained focus window case focusing      sends crs “               ”                             ab                                                                       −→             ≥   “focusfw”  sends events updates useful  fifo      focused window foc ← foc ∪ wnm ∪ ﬁl sends having jitter delay greater sum setting level      crs “assertnomorefw ∩ nm ∪ ﬁl”      event based priori knowledge incoming                                                        frequency position constraint graph  during recognition process following properties focusing combined hierarchization  true  windows nm ﬁl foc mutually case identify uncommon subpatterns  exclusive ii buffered event ﬁltered occurrence frequent event required  focused windows levels chronicle recognition section   example  mechanism performs exactly recognitions crs  focusing performances affected         hierarchical chronicles    partial order relative event frequencies     hierarchical chronicle pair hhn  ﬁgure  frequent need base chronicle hi subchronicleswe  deﬁne level arrived initiates new assume events involved value set                                                        subchronicle labels hhn treat deter  stances number partial instances equals number                        relatively event event fre ministic hierarchical chronicles  allow  quent leveled ≤ partial order subchronicles having label following  induced constraints particular make distinction chronicle label                            −                      suppose each hi distinguished event                            −→  ordered example  decompose    bi hierarchical chronicle recognized  instances categories instances  focusing particular efﬁcient technical difﬁculty consider nondeterministic hi                                                        erarchical chronicles main difference expansion    message kind acknowledgment used synchronize low leads chronicle possible way  event buffer state crs state             introduce disjunction chronicle formalism                                                    ijcai                                                     classically recognized integrated events labeled proposition  let minimal constraint graph  subchronicle hi date integrated event bi ⊆ subgraph let ∈ distinguished node                                                                                              recognized instance hi words sub hierarchical chronicle deﬁned gu ∪h                                                                                chronicle hi recognized “sends” chronicles  ∈ constraints node  event hi date bi                               recognize events iff    ﬁgure  hierarchical chronicle                                                               ∀  ∈   ∀  ∈       ac    ab    bc          possesses subchronicles chronicle com            posed types events basic comes dxy time constraint nodes  supervised subchronicle graph  distinguished events respectively                                                           focused hierarchical recognition                                                                                section present focusing hierarchiza                                                   tion mixed need add module trans                                                      forms windows high level events representing sub                                                                                  chronicles different buffered streams rep                                                        resenting events subchronicles                                                present formula updating ﬁltered win                                               dow collector receives “discard” message                                               transforms “discard” message events                                                        subchronicle needs account       figure  hierarchical chronicle highlevel events order introduce                                                        ﬁltered window high level events representing sub                                                        chronicle    let chronicle constraint graph                   discard  event subchronicle distinguished ele window “ ” message receives  ment constraint graph  expanding chronicle buffered stream event type included given                                                              ﬁlfideb deb time constraint  graph replacing node ∈ graph e∈fi                  specifying constraints gv distinguished node bi fi                ∈                     →                                    constraints let relation hi hj deﬁned                      − − bifu − ≤ −  hj contains event type hi hierarchical chronicle va                                ∗                                           ∅              structurally consistent ∀i hi → hi case ex  pansion hierarchical chronicle deﬁned graph natural extension set extended intervals  ﬁgure  expansion hierarchical  chronicle consistent exists set events st                                                        remark   example gain focusing vs techniques  recognized straightforward structurally consis                                                        presented vu et al  subgraphs    tent hierarchical chronicle consistent iff expanding                                                        constraints cooccurrence don’t explore combi  subchronicles obtained constraint graph consistent                                                        nation partial instantiation store events wait                                                        event future order extract collector                                events “good” parameters combinatorial                                                   explosion elementary scenarios avoided                                                                                                                                       experimentation                                                                             experiment real data coming real                                                    case application motivates work detection                                                        rddos reﬂected distributed denial service attacks    figure  expansion hierarchical chronicle ip networks                                                          attack machines spoofed ip address    hierarchical chronicles come ways ﬁrst victim send syn messages naives servers  chronicle initially speciﬁed hierarchical servers reply sending victim synack mes  manner example architecture sages generating massive ﬂooding characteristic  hierarchical second starting ﬂat chronicle attack syn trafﬁc naive server low persistent  identify identical patterns inside chronicle taken trigger alarm want iden  proposition necessary sufﬁcient condition hier tify naive servers experiment information  archization temporal pattern shows global trafﬁc sent way dozens core routers pre  care pattern factorization subgraphs identi processing particular numerical algorithm  cal constraints satisfy computes throughput pairs ip addresses sends  condition                          alarms throughput greater thresholds                                                        low events high events                                                    ijcai                                                     
