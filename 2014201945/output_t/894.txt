                                         solving   checkers                            schaeffer bjor¨ nsson burch kishimoto  muller¨                                        lake lu  sutphen                          department  computing   science university alberta                                   edmonton   alberta canada  tg                                           jonathancsualbertaca                        abstract                              strongly solved games include piece chess endgames                                                            awari romein bal       ai  notable success building high      performance gameplaying programs compete      note qualiﬁcation resources deﬁnitions      best human players      sense games chess solved min      availability fast plentiful machines  imax algorithm principle determine gametheoretic      large memories disks creates possibility value given large time resource      ¡£¢¥¤§¦©¨     game straints preclude impractical “solutions”      simple relatively small games paper     difﬁcult solve game dimen      present new ideas algorithms solving   sions difﬁculty allis et al  decision complexity      game checkers checkers popular game  difﬁculty required make correct decisions space          skill search space © possible posi complexity size search space checkers consid      tions paper reports ﬁrst result ered high decision complexity moderate space      challenging checkers openings   complexity games solved far low          solved – white doctor opening draw solv decision complexity qubic gomoku low space complex                                                                                                                                                                                                       £          ing roughly  openings result   ity men’s morris size   awari size                                                                          £      gametheoretic value checkers determined connectfour size                                                                checkers  draughts popular british com                                                        monwealth present past united states    introduction                                       rules simple pieces square time diago  highperformance gameplaying programs major nally capture jumping number piece  success story ai games chess checkers oth types small kings checkers game quite  ello scrabble mankind humbled ma challenging checkers high decision complexity    chine programs strong complex   play bridge hands par  lose game human strong backgammon complex chess moder        perfect perfection requires “solve” game allis ate space complexity  © positions versus unsolved games                                                                                                   £                                                                                                      deﬁnes three levels solving allis          backgammon    positions chess posi                                                        tions best checkers programs stronger best    ultraweakly solved gametheoretic value                                                        human players chinook won world manmachine      game determined ultraweak solution championship schaeffer       mainly theoretical example hex ﬁrst number possible placings checkers pieces      player win knows winning strategy                                                          board roughly £ chinook  number    weakly solved game ultraweakly solved misleading includes positions legally      strategy known achieving gametheoretic value reachable start game example          opening position assuming reasonable com £© possible positions  pieces      puting resources wellknown games board small fraction reached game      weakly solved including connect allis   kings versus  kings possible      qubic allis  moku allis  effort solve game checkers began  af      men’s morris gasser                       ter  years research development count    strongly solved possible positions strategy thousands hours pleased report      known determining gametheoretic value ﬁrst major milestone quest white doctor opening                                                                                                        players assuming reasonable computing resources shown figure  proven draw       support nserc icore university alberta tournament checkers played using socalled “threemove  acknowledged                                      ballot” competitions games begin ﬁrst  moves  ply                                                                                                                                                                                                                                                                                                                     ¡       ¡                                                                                                                                       ¡                      ¡                                                                                                                                                                                                                      ¢   ¡   ¡                        ¡                                                                                                         ¡   ¢   ¢                      ¢                                                                                                             ¢   ¢   ¢                        ¢                                                                                                         ¢   ¢   ¢                  ¢                                                                                                                                                                                                                                                                                                                                                                                    figure  white doctor white play draw                                                                                                                                                                                                                                                                                                                                  difﬁcult opening black begins game huge po                                   sitional disadvantage—so large humans consider black’s                                 best play sacriﬁce checker early relieve                                                                                                                        pressure notably opening played decisive                               game  tinsley–chinook world championship                                    match schaeffer                                                                 paper following contributions                                                                                                                          new hybrid combination bestﬁrst depthﬁrst      search results construction minimax proof trees figure  checkers search space log scale horizontally      heuristic value iteration introduced means      centrating search effort needed    solution white doctor opening achieving      result took years computing involving pre  seeding expert input human literature sin                                                                gle line “best play” identiﬁed fed                        £                      ¤£      computation   values endgame databases                                                                proof tree manager initial line explore                                                                                                        ¥£      building proof tree took roughly       positions important ﬁrst step weakly figure  illustrates approach plots number      solving game checkers                     pieces board vertically versus logarithm                                                        number positions using data chinook         largest gametree proof date pos                                                                                              ©                                                        widest point  pieces  positions      sible new hybrid search approach                                                        endgame database phase proof shaded area      integration stateoftheart algo                                                        positions  fewer pieces      rithms enhancements coherent                                                          seeding proof process initial line play                                                        critical prover’s performance shown figure     algorithm   overview                               sequence solid bold lines line leads  formal proof game’s value depthﬁrst start opening endgame databases seeding                                                        necessary proof—the prover capable doing  alphabeta  ¦¨§  bestﬁrst proof number search pns al  lis  large complex checkers search space proof expert guidance single line  turned effective instead propose hybrid play allows proof process immediately start doing work  approach heuristically guided proofs     likely relevant proof    proof procedure algorithmdata components seen prover spend considerable effort ﬂailing                                                        tries ﬁnd key lines play    endgame  databases backward search computations  inner oval area figure  illustrates por          end game backward resulted tion search space relevant proof positions                      ¥£              database ©    positions   pieces board irrelevant unreachable opening      gametheoretic value computed required proof small circles illustrate po      strongly solved                                sitions  pieces value    proof tree manager search management compo proven each circles represents root search tree      nent maintains tree proof progress traverses solved clarity solved subtree      generates positions need explored root shown diagram      proof’s progress                                                           endgame    databases    proof solver forward search given position                                                        endgame  databases pioneered chess thompson      search component uses programs ¦¨§ pns      determine value position            instrumental success chinook                                                        program schaeffer  using retrograde analysis sub  randomly selected each starting position played twice sets game small number pieces board  sides switched second game                   exhaustively enumerated compute positions arewins losses draws search reaches database position likely winloss  position instead using inexact heuristic evaluation func invest effort prove position work post  tion exact value position retrieved poned shown needed    computed endgame databases  pieces introducing new values proof tree win loss  board combination kings checkers draw unknown add likely win likely loss      van den herik et al  total database size  searches relative heuristic threshold                           ©  £                             ¥£  trillion positions roughly   sounds im backend prover returns assessment position po  pressive represents paltry tenmillionth total sition exceeding threshold considered likely win  search space chinook                          falling negative threshold likely loss proof     valuable databases unfortunately manager repeatedly traverses proof tree identiﬁes nodes  winlossdraw construction good measure dif searched sends assessment prover  ﬁculty piece endgames available—although integrates results node score outside  presumed high anecdotal evidence includes threshold likely result expanded    perfect play databases piece endgames threshold effectively treated proven      computed longest winning line  thresholds loosely thought imposing symmetric            ply trice dodgen                      ¦¨§ search window bestﬁrst proof manager value                                                                             §                                                        outside window ¦ means result irrelevant    schaeffer et al  report database value outside heuristic threshold means postpone      computations winning lines excess  ply— proof know result relevant      just force checker advance piece capture proof tree complete given heuristic thresh    king versus king checker endgame old threshold increased search restarted      longest winning line  ply gilbert   struct proof new threshold position    draws harder prove winslosses  previously resolved real proven value remains proven                                                        positions heuristic score remain outside  evidence strongly suggests databases remov new heuristic threshold remain likely winslosses  ing hundreds ply search depth proof tree nonproven positions heuristic values inside new                                                        threshold considered researched    search  algorithm                                  new heuristic limit iterative process contin  proof search split frontend proof tree manager ues heuristic threshold exceeds largest possible  backend prover frontend manager maintains heuristic value point likely winslosses  large persistent proof tree selects stores organizes resolved proof tree complete  search results proofs individual positions ideally ﬁrst likely proof tree constructed  parallel farm backend provers               work consist solely trying prove likely                                                        winslosses likely winslosses practice    proof tree manager  end                  heuristics use occasionally wrong  proof tree manager starts proof tree heuristics proof tree position grow  proof “seeded” fed initial line play large previously desirable positions  line considered humans best play come attractive alternative expansion  sides proof manager starts position line white doctor used settings min    solves backs ply solves subtree checker worth  points   figure   root line reached          best choices experimenting dif    proof iteratively shown figure  ferent values checkers openings  minimax search seen iterative algorithms based proof manager uses pns trying answer ques  search depth iterative deepening conﬁdence root tions value proof tree “is likely  value conspiracy numbers mcallester  win” “is likely loss” likely win  algorithm novel iterates range relevant signed proof number  islikelywin question  heuristic values proof                       likely loss assigned proof number  islikely    classical iterative deepening gameplaying programs loss question draw assigned disproof number      used reasons improve search  questions prover tries investigate                                             ¨                       §  efﬁciency using ¦ tree iteration basis questions simultaneously selecting nodes considera  starting iteration ¨  assumption increasing tion ideally contribute answering  depth does cause substantial changes tree struc proof tree manager traverses proof tree iden  ture each iteration reﬁnes previous iteration’s solution tiﬁes nodes needed likely needed  contrast iterative deepening search proof traditional pns algorithm expands node  wrong direction waste lots effort stumbling time manager expands promising nodes possi  best line play                             bly hundreds work multiple    iterative value solution works similar reasons backend prover processors busy  position require considerable effort formally deter node selected expansion added  proven value higherlower score worktodo ﬁle used input prover proproofmanager seeding                             prover     seeding seeding line proof                 repeat     seeding   opening position                  getwork pos thresh     min starting proof heuristic threshold    win ending proof threshold                            heuristicsearch returns alphabeta heuristic value    heuristic increment likely proofs        heur  heuristicsearch pos thresh       iterate heuristic threshold                         value inside threshold range pnsearch    thresh  min thresh  win thresh         lower  loss upper  win      iterate seeded line                        thresh  heur  heur  thresh         length seeding          simplified version actual code       pos  seeding                                   check win draw unknown                                                              result  dfpnsearch pos iswin         solve current position threshold                      result  proven   lower  win         repeat                                                result  disproven   upper  draw          worklist  pnsearch pos thresh          notempty worklist                            lower  upper  time remaining            startprovers worklist results thresh              check loss draw unknown          waitforresults worklist results                   result  dfpnsearch pos isloss           updateprooftree pos results thresh                   result   proven   upper  loss                                                                result  disproven   lower  draw          isempty worklist                                                                                                                                               saveresult pos thresh heur lower upper                                                                             figure  proof manager                             figure  proof solver process    cesses backend given information generation rent proof threshold expensive proof search attempts  heuristic proof numbers proven information formally prove result current position  known position known indicates needed      loss                                 each backend position ﬁrst searched ¦¨§ searcher    proof manager saves backend search results using heuristic evaluation function endgame  reused searches different heuristic databases search limited  seconds reach  threshold different opening persistent btree ing depth   ply plus search extensions  used store information position examined heuristic value returned compared search threshold  opening including backend results values outside threshold range considered likely  backedup values computed end           winslosses proof tree manager heuristic value    cases backend proof search does pro twice size threshold  vide information answer end’s question processing formal proof search postponed  heuristic score end used gen later proof conﬁdence      erate heuristic proof disproof numbers chinook used really need result                                                                                             provide heuristic scores ¦¨§ search result small prover uses nagai’s dfpn algorithm nagai                                                                                                      initiate proof search result used depthﬁrst search variant bestﬁrst pns dfpn pre  help initialize proof numbers proof number win ferred pns memory concerns  function  difference heuristic score algorithm’s space requirements limited size      heuristic threshold high score likely transposition table contrast pns needs store entire                                                                                        win score  penalty added posi tree memory gives dfpn important advantage  tions sides king tend memory needed reduce frequency costly      harder prove                                      disk io caused endgame database accesses                                                                                       disproof number loss proof time limit dfpn component  seconds      number win exception use additional search search time spent trying answer                                                   §  statistic chinook principal variation ¦ “easy” question opposite result heuris  search result depends draw database lookup tic search example heuristic result indicates  decrease disproof number proof numbers loss side large advantage possible win  disproof numbers win deﬁned similarly ﬁnal prover ﬁrst tries prove disprove position loss  modiﬁcation numbers depend minimum usually easier question  child values opposed sum divided answer disproof loss win sufﬁcient  average branching factor                             swer proof manager given expect value                                                        proof draw disproof question    proof solver end                          maximum time allotted proof search      pseudocode backend prover shown figure  started answer proof question                                          §  novel combination traditional heuristic ¦ search proving value node implies ﬁnding path  proof search cheap heuristic search value used endgame databases draw repetition clearly  determine current position relevant cur fewer pieces board “closer” databaseposition easier disprove addition  machine architectures  easier prove win disprove loss hardware reliability sustained io demand  side pieces side combine  massive io means use local io  factors initialize proof disproof numbers network io slow limits machines  giving attention fewer pieces favorable positions                                                            add computation   furthermore standard dfpn algorithm   gb  available local disk  fundamental problem computing disproof numbers  position repetitions present techniques kishimoto  io errors programs instrumented detect  muller¨   incorporated solver     recover possible types io errors    graph  history interaction                          results  forwardsearchbased proof correct unless white doctor opening chosen ﬁrst candidate  graph history interaction problem ghi properly ad solve importance tournament practice  dressed ghi occur search algorithm caches checkersplaying community opening  reuses search result depends history difﬁcult threemove ballots black starting  checkers repeated positions scored draw pos large disadvantage decades human anal  sible value search inﬂuenced drawby ysis determined black’s desperate situation meant  repetition score result saved proof tree checker sacriﬁced relieve pressure typi  transposition table cached result later reached cal game black material game barely  different sequence correct—we hanging salvage draw human analysis correct  know drawbyrepetition scores correct      white doctor proof began november     backend prover ghi correctly handled utiliz heuristic proof threshold  completed  ing new technique described kishimoto muller¨  month later months cycles   ghi avoided boundary spent increasing heuristic threshold win verify  end tree backend searches communicating ing bugs proof august   history information backend finally thought proof complete inspection showed  frontend manager ghi avoided saving value trivial positions advantage   proof tree unsafely inﬂuenced drawby checkers eliminated proof accidental  repetition score subtree cause historical error corrected january   manager spend extra time searching tree ex completed unresolved positions  tra prover searches need performed prover results proof correct endgame databases  stored tree path independent              veriﬁed ed gilbert author kingsrow check                                                        ers program independently veriﬁed piece    implementation  insights                         databases  piece databases correct  effort turn likely wins likely losses proven computation ongoing frontend white doctor proof  values takes vast majority search effort holds tree consistent correct assuming backend  fairly high initial heuristic threshold likely proofs returned right answer backend val  winslosses positions human checkers experts agree ues reveriﬁed different solver developed  “game over” major reason postponing project increasing conﬁdence proof  moves nonwinning side takes path maximum correct proof available online http  resistance example losing side position able wwwcsualbertaca˜chinook strong play  make terrible moves sacriﬁcing checker ers looked proof lines errors  apparent gain postpone reaching endgame databases interesting statistics proof include  unknown aspect position  pieces  number positions given backend solve ex  board matter hopeless position preferable cluding work used experiments shown  known database loss lopsided positions bugs   chased reach proven conclusion                                                           number positions minimal proof tree     proof process computationally demanding                                                            minimal proof tree minimum proof tree  performance issues include                                                            did try maximize usage transpositions    proof process spends time accessing choose branches leading smallest subtree      endgame databases cost reduced locality generating proof tree      disk accesses caching smart organization  longest line searched frontend proof tree  ply      endgame databases use gb machine      memory going io caching means   longest line minimal proof tree  ply leaf      endgame database positions require io    node tree result  second proof num                                                            ber search variable depth possibly     despite performance optimizations proof      process io intensive—keeping io subsystem minor problems necessitating redoing      maximum capacity rare cpu usage calculations
