     constraint variable ordering heuristics compiling configuration                                                problems                         nina narodytska                                toby walsh                    national ict australia                         nicta unsw                    ninancseunsweduau                           sydney australia                                                                  twcseunsweduau                        abstract                          space time resources available propose                                                        three heuristic techniques improving time space      facilitate interactive design solutions required construct decision diagram representing set      ﬁguration problems compiled     valid solutions configuration problems heuris      cision diagram develop three heuristics   tics exploit distinctive clustered hierarchical structure      reducing time space required  observed constraint graphs configuration problems      heuristics based distinctive clus ﬁrst heuristic provides order constraints      tered hierarchical structure constraint added decision diagram limits growth      graphs configuration problems ﬁrst heuris memory used during construction diagram      tic attempts limit growth size second heuristic provides initial order vari      cision diagram providing order ables decsion diagram finally heuris      straints added decision diagram sec tic groups variables based clustering      ond heuristic provides initial order vari groups used dynamic variable sifting rudell       ables decision diagram finally procedure reorders variables during construction      heuristic groups variables decision diagram combined use techniques      reordered dynamic variable reordering pro reduces orders magnitude time      cedure used during construction decision struct decision diagrams problems configuration      diagram heuristics provide  benchmarks suites subbarayan  sinz et al      ders magnitude improvement time compile terestingly heuristics perform poorly satisﬁabil      wide range configuration                    ity benchmarks satlib suggesting highly                                                        tuned clustered hierarchical structure conﬁgura    introduction                                       tion problems  product configuration interactive procedure  compiling configuration problems  customer chooses value decision variable                                                                                                    receive feedback configurator valid values binary decision diagram bdd bryant   remaining decision variables continues viewed acyclic directed graph edges labeled  complete valid configuration foundsuch scenario assignments path root node marked  requires efficient mechanism ensure current deci true corresponds model set paths  sions consistently extended hadzic et al pro gives set possible models efﬁcient procedures exist  posed twophase approach interactive conﬁgura constructing manipulating bdds compile  tion hadzic et al  ofﬂine phase compact lutions configuration problem bdd repre  representation constructed product configurations sent constraint separate bdd conjoin  ing decision diagram representation used bdds bdds added size result  interactive configurator during second stage ing bdd grows example figure  shows relation    paper focus optimising phase ship number constraints added num  configuration process compilation set valid ber nodes resulting bdd renault megane                                                                                               product conﬁgurations decision diagram configuration benchmark subbarayan   decision  computationally hard task use significant diagram grows monotonically size  cpu time require large amounts memory end addition critical constraints causes  phase performed ofﬂine realtime like dramatic drop size observe similar behavior  second phase performance important conﬁguration benchmarks  large configuration problems compilation require growth surprsing quite different behavior typ                                                        ically observed combinatorial problems example     copyright c  ijcai wwwijcaiorg rights reserved figure shows growth size bdd lang                                                    ijcai                                                                                                    number  bdd nodes                                                                          number added constraints                                                                                                number  bdd nodes                                                                             number added constraints                                                                                 figure  constraint graph mercedes configuration benchmark  figure  dynamics bdd growth renault megane fsthe circles indicate major clusters identified markov  configuration benchmark langford problem cluster algorithmmcl    ford’s number problem gent walsh  decision binary constraint problem constraint graph tree  diagram orders magnitude bigger intermedi ordering constraints root leaves  ate point end memory required tree achieve monotonic growth size  represent intermediate bdd bdd adding constraints random order  available final bdd representing lead nonmonotonic growth  problem solutions comparatively small addition configuration problems strong custered  adequate memory represent interme structures example circles figure  indi  diate bdd time construct final bdd adversely cate major clusters identified markov cluster algo  affected time add new constraint bdd rithmmcl van dongen fs bench  pends linearly size bdd                mark cluster typically corresponds group vari    monotonic growth size decision diagram ables tightly connected example  highly desirable perspective memory consump single component product  tion speed tried identify structure engine car adding decision diagram  configuration problems monotonic behavior goal straints cluster typically reduces number valid  use properties directed manner combinations clustered variables size  constructing bdd begin investigations bdd hypothesis conﬁguration problems  weighted primal constraint graphs primal constraint graph distinctive hierarchical clustered structured  problem undirected graph nodes correspond permits monotonic growth size bdd  problem variables edges constraints  variables connected edge iff participate  common constraint weight edge equal  constraint ordering heuristics  number common constraints involving based observations propose heuristic  variables figure  shows constraint graph typical                                                       adding constraints attempts ensure monotonic growth  configuration benchmark constraint graph dis size bdd keeping size small possible  tinct treelike skeleton contains tree clusters step heuristic attempts  starlike structure central nodes  nected large number peripheral nodes contrast respect treelike structure configuration  constraint graph combinatorial problem like langford’s problemsin particular want heuristic guar  numbers problem cliquelike                      antee monotonic growth extreme case    treelike structure constraint graphs help ex constraint graph tree  plain monotonic behavior bdd consider idealised respect clustered structure configuration                                                            problems particular want heuristic add         configuration benchmarks contain large number constraints cluster time  unary constraints order obtain meaningful results  eliminated constraints performing pure literal deletion number variables small typically  unit propagation problems experiments     bdd grows size number variables added                                                    ijcai                                                                              start                                 constraint candi                            select                           date added bdd                         central                          variable                      step  selection central variable                           select                         add                        set neighbours current central vari                          constraint                             able computed current central variable                                                             variable located stack central                     yes               end       constraints                          added                                  variables                                                                                             obtained set variables variables                                                     participate scopes remaining                          constraint                                                                 constraints eliminated                                                              obtained set variables current                 yes                                        constraint                  central variable popped stack central            add                   select               variables algorithm returns step           constraint                new central           bdd                      variable              obtained set variables variable                                                                 adjacent edges largest total weight             figure  flowchart algorithm                   selected central variable vari                                                                 able stored stack central vari                                                                 ables variables      want heuristic add new vari   used variable ordering selected      ables possible each step                                                          algorithm selects central variable adds    heuristic algorithms imple  straints involving variable trying add new vari  mented evaluated following algorithm referred ables possible step constraints  algorithm  produced best results majority pass   constraint containing inﬂuential  benchmarks figure  shows ﬂowchart algo variables selected constraint likely  rithm internal state algorithm consists list reduce bdd size central variable selected  constraints added bdd list remaining neighbours current central variable select  constraints list variables added bdd heaviest variable hoping center  list remaining variables stack variables cluster usually case  used central variables current central variable figure  shows results applying algorithm  located stack central variable configuration benchmarks graphs compare adding  constrained variables problem usually center constraints random order original order specified  clusters                               benchmark description order produced  step  selection central variable algorithm  cases order produced algo      problem variables variable adjacent edges rithm  results monotonic growth bdd      largest total weight selected central kept bdd size smaller orderings      variable variable stored stack steps result algorithm significantly reduced                                                        time construct bdd obtained similar results  step  selection constraint problems configuration benchmarks suite      straints include central variable constraint able solve dynamic variable      biggest number variables scope se reordering optimisation presented following section      lected                                             interesting feature graphs original  step  selection constraint constraint ordering efficient random      straint add bdd selected set ordering conjecture original ordering usually      remaining constraints                            reﬂects natural structure problem example                                                        typically groups constraints describing single com       constraints contain current central vari ponent product constraint ordering heuristic          able selected remaining able make improvements order          straints constraints exist step           terminates selecting candidate constraint  variable ordering       obtained set constraints constraints                                                        previous section showed configuration prob          contain smallest number variables                                                        lems possible achieve monotonic growth          added bdd selected                                                        size bdd using constraint ordering heuristics       obtained set constraints constraints large configuration problems          smallest number variables selected order reduce space time requirements       each selected constraint sum weights problems like ways reduce          adjacent edges variables computed size bdd reordering variables possi          constraints largest sum selected ble reduce dramatically size bdd bryant                                                     ijcai                                                                                                                            variables placed higher ordering clus                                   random ordering                                   original ordering                                         ordering produced algorithm  ters configuration problems small num                                                         ber central variables connected large number                                                           peripheral nodes example figure  typically                                                         central variables determine values periph           number  bdd nodes                                   eral variables vari                                                         able ordering sort rest variables                                                    number added constraints          proximity center specific algorithm                                                        dering variables clusters follows                                                                each variable cluster compute total                                  random ordering                                  original ordering          weight adjacent edges refer                                       ordering produced algorithm  value weight variable                                                            variables cluster select variable                                                                biggest weight variable consid        number  bdd nodes                                         ered center cluster placed                                                                      beginning cluster variable ordering                                                 number added constraints            variables cluster sorted weight                                                             edges connecting central variable vari                                                                 ables directly connected center  figure  dynamics bdd growth adding constraints  pushed cluster  random order original order ordering produced  variables sorted previous step  algorithm  fs configuration benchmark sorted weights heaviest variables  fvk configuration benchmark                           variables equal weights                                                                 sorted total weight neighbours  unfortunately determining optimal variable ordering step  establish ordering clusters place  nphard bollig wegener  heuristics clusters weakly connected rest  fore used practice variable ordering techniques di straint graph clusters assumption  vided groups static dynamic variable ordering relatively independent clusters increase  algorithms static algorithms compute ordering vari size bdd greatly extreme case com  ables bdd construction dynamic algorithms attempt pletely isolated cluster placed variable  minimise bdd size improving variable ordering dering increasing size rest bdd  bdd partially completely constructed     degree isolation cluster determined based    sections static dynamic variable projection according van dongen  dering heuristics developed configuration prob projection node cluster “the total  lems heuristics based following simple ob edge weights node cluster correspond  servations observe locating strongly dependent ing neighbours node cluster relative  variables close each typically reduces bdd size overall edge weights node cor  second group variables variables responding neighbours” projection  strongly inﬂuence assignments variables cluster “the average projection values taken  variables placed higher variable ordering nodes cluster” clusters sorted descend                                                            ing order projections    static variable ordering heuristics  proposed static variable ordering algorithm referred  dynamic variable grouping heuristics  algorithm  consists three steps step  finds dynamic variable ordering algorithms try minimise  groups strongly dependent variables step  orders variable size existing bdd reordering variables  groups step  orders groups relative each rudell rudell  proposed sifting algorithm                                                        dynamic variable reordering demonstrated   step  identify group strongly achieves significant reduction bdd size types      dependent variables   employ  fact   constraint satisfaction problems idea sifting      configuration problems clustered structure algorithm each variable order      sume variables cluster strongly related position provides local minimum bdd      each variables different clusters size procedure applied problem variable se      weakly related use mcl algorithm decom quentially applied sifting algorithm provided      pose problem constraint graphs clusters group cudd package glu  configuration benchmarks      variables belonging cluster static used adaptive threshold trigger variable reordering      variable ordering                                bdd size reached threshold performed   step  second try order variables inside clusters variable reordering reduced bdd bigger      variables inﬂuence assignments  current threshold threshold increased                                                    ijcai                                                      initial threshold equal  bdd nodes typically placed contiguously original ordering  parameter values selected empirically     hand algorithm  able good constraint    panda somenzi panda somenzi  noticed dering constraints randomly shufﬂed  dependent variables tend attract each during vari column  shows effect static variable ordering  able sifting results groups dependent variables algorithm algorithm  bdd construction speed pro  placed suboptimal positions avoid effect duced comparable results original variable ordering  dependent variables kept contiguous groups column  performed order magnitude better  moved during variable sifting developed random variable ordering given means  group sifting algorithm automatically finds correctly identified structure problem  groups dependent variables experiments cited comparing columns     vari  algorithm slightly improved performance vari able ordering heuristic based grouping clustered variables  able sifting better performance gain reduces bdd construction time compared pure variable  obtained taking account problem structure sifting rudell  majority benchmarks  scribed section  configuration problems groups interestingly tried three heuristics wide  dependent variables identified based cluster range satisﬁability benchmarks satlib ob  composition constraint graph modified vari served uniformly poor performance conjecture  able sifting algorithm partition problem variables conﬁguration problems unusual hierarchical  tiguous groups corresponding clusters identified mcl clustered structure exploit compiling  grouped variables kept contiguous reordering pro lutions decision diagram  cedure addition allow variables group  reordered performing group sifting        related work    performing variable grouping important                                                        hadzic et al proposed using bdds represent solu  strongly connected variables group                                                        tions configuration problems hadzic et al  avoid grouping weakly connected variables                                                        mainly concerned reducing size  clusters mcl algorithm                                                        final bdd order improve responsiveness  group clusters projections bigger                                                         configurator efficiency bdd construc                                                        tion contrast focus reducing time memory    experimental results                               requirements bdd construction example                                                        heuristic attempts optimize order constraints  evaluated three heuristics problems                                                        added bdd does affect size  configuration benchmarks suites subbarayan                                                         final bdd just size intermediate bdds  sinz et al  algorithms implemented                                                          sinz sinz  proposed alternative approach  using cudd  bdd package glu  li                                                        precompilation solutions configuration problems  brary glu  implementation mcl al                                                        based construction optimal set prime implicates  gorithm obtained van dongen experi                                                          static variable ordering techniques extensively  ments mcl used inﬂation parameter set                                                         studied verification problems problems  parameter affects cluster granularity select                                                        scribed model connectivity graph analogue  equal  finegrained clusterings experiments                                                        constraint graph number variable ordering heuristics  run ghz pentium  machine gb ram                                                        developed based topology model    cases mcl produced satisfactory clustering                                                        nectivity graph heuristics follow guidelines  constraint graph failed large prob                                                        ones used algorithm   lems fa fvf fw problems                                                        strongly connected variables close variable ordering  majority variables grouped single cluster                                                        inﬂuential variables chung et al   variables connected virtually prob                                                        jain et al jain et al  proposed different approach  lem variable mcl encounters clus                                                        based construction variable orderings series  ter contains half problem variables                                                        bdds partially capture functionality circuit  moved central variables heaviest variables                                                        approach developed lu et al   cluster repeated clustering algorithm                                                        methods specialized veriﬁcation  removed central variables placed initial                                                        interesting adapt conﬁguration  variable ordering likely inﬂuential                                                        compare heuristics described    table  gives results experiments seen  results constraint ordering heuristics algo  rithm  column  reduce time construct bdds com  conclusions  pared random column  cases origi proposed three heuristics reducing time  nal column  constraint ordering note original space required compile solutions configuration  constraint ordering typically produces quite good results problem decision diagram showed  observed conjecture original ordering growth size decision diagram depends strongly  follows problem structure closely example order constraints added proposed  constraints describing single component product constraint ordering heuristic based hierarchical                                                    ijcai                                                     
