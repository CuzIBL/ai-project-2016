                           updating     action   domain     descriptions∗                         thomas   eiter esra  erdem   michael  fink   jan´ senko             institute information systems vienna university technology vienna austria                             email eiter  esra  michael  jankrtuwienacat                          abstract                          note does know remote control works                                                        does know effect pushing power button       intelligent agent update knowl   remote control suppose later obtains fol      edge base action domain relative lowing information remote controls      conditions possibly obtained earlier observa  power tv pushing power      tions study question formal frame     button remote control turns tv      work reasoning actions change      meaning action domain descrip       tv pushing power button remote      tion represented directed graph     control turns tv      nodes correspond states edges corre desired condition effective use tv      spond action occurrences deﬁne update  following      action domain description framework    pushing power button remote control al      show results solution  ways possible      problem obtained divideandconquer      approach cases introduce meth   added condition satisﬁed      ods compute solution approximate solu power tv pushing power button      tion problem analyze computational remote control possible item  item       complexity problems finally discuss contradict question agent      techniques improve quality solutions   update relative                                                           domains actions like frag                                                        ment action language giunchiglia lifschitz    introduction                                        “causal laws” instance direct effect                                                        action pushpbtv stated item  example  paper discusses intelligent agent modify described causal law  knowledge world subject given conditions                                                           caused poweron  pushpbtv  ∧ ¬poweron    particular new knowledge world  added given conditions domaindependent expresses action pushpbtv causes value  assertions obtained earlier observations domain ﬂuent poweron change false true  independent general properties knowledge base direct effect action stated item  described  goal obtain consistent knowledge base mini causal law  mal changes variable existing knowledge      caused tvon  poweron             base given conditions satisﬁed    study problem knowledge base updates brieﬂy expresses ﬂuent poweron caused  described context reasoning actions true ﬂuent tvon caused true ac  change agent’s knowledge base domains tion domain description partitioned du invari  actions instance consider agent having following able dm variable meaning action descrip  knowledge tv remote control         tion represented “transition diagram”—a directed                                                        graph nodes correspond states edges cor    power pushing power button tv respond action occurrences      turns power                                  given conditions like action    power pushing power button tv query language similar gelfond lifschitz       turns power                              “queries” instance condition                                                        scribed query    tv power                                                                      executable pushpbrc                tv power                                                          main contributions paper brieﬂy follows    ∗     work supported austrian science fund fwf grant • given action description  du dm set  pn european commission ist programme grants causal laws set conditions update  fet wasp ist colognet      relative answer question section    ushp brc                       ushp brc     caused poweron  pushpbtv     poweron                     ushp bt                                                       ∧ ¬                                                              ushp bt  ushp brc               caused ¬poweron   pushpbtv ∧ poweron                                                         caused tvon  poweron       oweron                        ¬p oweron         caused ¬tvon  ¬poweron       von                           ¬t von            inertial poweron  ¬poweron                                                         inertial tvon  ¬tvon                  ushp bt  ushp brc                          figure  action description                     ushp bt                 figure  transition diagram           propositional com                                                        bination ﬂuent names action names                                                          dropped true  • given action description  du dm set  action description set causal laws instance  causal laws set conditions consider prob knowledge base tv agent  lem computing update relative previous section described causal laws figure                                                 show problem difﬁcult general Σ  expression form                                                 Π hard checking given solution Π             inertial ¬p   complete show conditions  problems easier section                   ﬂuent stands dynamic laws  • provide conditions computing solution  problem structurally decomposed        caused   stance inputs problem satisfy disjointness       caused ¬p ¬p ¬p   property divideandconquer approach feasible sec describing value ﬂuent stays unless  tion  introduce methods compute solutions action changes  compute “nearsolutions” approximating section  meaning action description represented    variations problem updating knowledge bases transition diagram let action description  studied ai literature winslett  signature  hf ai transition diagram hs ri  katsuno mendelzon  pereira et al  li described deﬁned follows  pereira  liberatore  eiter et al  sakama                                 inoue  problem addressed paper set interpretations  general section  detailed comparison static law  satisﬁes ⊃                                                         ii  sp     preliminaries                                                        iii set triples hs si  transition diagrams start propositional ac  interpretation satisﬁes heads                                 tion signature consists set ﬂuent names                               set action names action truthvalued function – static laws  satisﬁes  denoted set action names mapped – dynamic laws  satisﬁes    propositional transition diagram action signature ∪ satisﬁes    hf ai consists set states function                                                       laws included iii applica  f×s  →  subset ⊆ × ×s transitions ble transition caused executing  say value states instance transition diagram described action  hs si ∈ possible results execution scription figure  presented figure  say  action state say executable action description consistent represented  state exists                 transition diagram nonempty state set    transition diagram thought labeled directed following suppose action description  graph state represented vertex labeled consists parts du unmodiﬁable causal laws dm  function → ﬂuent names truth values modiﬁable causal laws denote  triple hs si ∈ represented edge lead action description pair du dm  ing labeled example transition  diagram shown figure                          action query languages talk observations                                                        world assertions effects execution ac  action description languages consider subset tions use action query language similar gel  action description language giunchiglia lifschitz fond lifschitz  consider language static   consists kinds expressions called causal queries forms  laws static laws form                                                                               holds                                      caused                                                          literal expression form ¬p   ﬂuent propositional combination propositional combination ﬂuent names  ﬂuent names dynamic laws form             dynamic queries form                   caused                          necessarily     propositional combination ﬂuent names • possible effects actions sequence     ac  each ai  ≤ ≤ action query propositional tions certain effects given context  combination kinds expressions    semantics let  hs ri transition holds ⊃ ¬necessarily ¬f      diagram representing action description history like  describes effects context  length sequence                             queries form allow express observation                   sn− sn      executing ha     ani initial state described                                                        leads state holds   each hsi ai siii  ≤  transition  satisfaction relation state query tv formula collection states  relative denoted  deﬁned follows   static query  satisﬁed interpre  problem description      tation → satisﬁes                  deﬁne action description update adu problem  ii static query  satisﬁed each state action description  du dm set causal laws      ∈ interpretation → satisﬁes  set queries signature say                                                        action description accomplishes action  iii dynamic query  satisﬁed scription update relative      history        length                              n−                     consistent        interpretation → sn satisﬁes                                                                           iv satisfaction deﬁned truth tables ii ∪ du ⊆ ⊆ ∪      propositional logic                           iii   remark holds ≡ ¬holds ¬f  static iv consistent action description  query form  ≡ ¬always ¬f          ⊂ ⊆ ∪                                       set queries denote sc set states                                                       called solution adu problem  ∈  ∈ s¬c set condition expresses action description update                                                 sc  say entails denoted   sc  modeling dynamic domain tv sec  instance set queries containing query   tion  state according condition ii new          necessarily ¬tvon pushpbrc            knowledge world invariable ex                                                        isting action description kept causal laws vari  entailed action description figure  able considered “correct” “wrong”  query satisﬁed state ﬂuents case simply disposed  tvon  poweron   mapped hand condition iii imposes semantical constraints  action description entails queries          comprise knowledge action domain              oweron  ≡ tvon               gained experience important note     holds poweron  ∧ tvon  ⊃                           modiﬁed later action description update                                                          ¬necessarily ¬tvon pushpbtv           revision containing precise knowledge                                                        domain reasonably contain conditions  queries allow express various pieces knowledge corresponding observations domain  domain possibly acquired earlier observa conditions kept dropped hand  tions like following                           change world se conditions corre  • existence certain states exists state sponding observations dropped  world formula holds assuming consistency finally condition iv applies occam’s razor select                     ¬always ¬f                        lutions simple possible simplicity measured                                                        smallest set terms inclusion causal laws need  • executability actions action sequence     dropped  executable state                            satisﬁes iiii nearsolution           ¬necessarily false         adu problem   query abbreviated           example   instance action description                                                        figure  containing ﬁrst causal laws                 executable                                                                                     sider set containing following causal laws  • mandatory effects actions sequence      actions certain effects given context caused tvon pushpbrc ∧ oweron ∧ ¬tvon                                                          caused ¬tvon  pushpbrc  ∧ tvon           holds ⊃ necessarily      describes effects context instance let set containing queries    query                                                                      executable pushpbtv    holds tvon  ⊃ necessarily ¬tvon pushpbrc                                                         transition diagram described ∪ shown fig  expresses result executing pushpbrc  ure  state poweron  state tvon mapped state tvon tvon  mapped action pushpbrc exe  mapped  note queries form allow cutable ∪q solution fact solution  express possible executions conformant plan adu problem obtained dropping  ha     ani reach goal speciﬁed initial static law  ∪                state described                                      ushp brc                                  ushp bt                        partitionings respectively                                                              ushp bt  ushp brc              ld ∩ ld  ∅ ii lq ⊆ ld ∧ lq ⊆ ld                                                         iii lc ⊆ ld ∧ lc ⊆ ld        oweron                        ¬p oweron         let xi nearsolution di qi ci          von                           ¬t von               suppose    xi permits nop dy                                                            namic query occurs negatively c−i ∪                                                            nearsolution                ushp bt  ushp brc                      ushp bt                      ii let   nearsolution let                                                             partitioning  ⊆                                                               suppose   xi permits   figure  transition diagram described ∪ ex        ⊆                                                                                     nop  dynamic query occurs positively −i                                                               xi nearsolution di qi ci    properties  updates                               informally permission nop theorem  needed  ﬁrst consider basic properties solutions ensure transition diagrams nearsolutions  adu  problem end deﬁne subsumption subproblems “combined” useful  lation action description causal law sequences proposition                             signature   follows        corollary  let adu problem let  • static law  subsumed state partitionings  transition diagram described interpretation respectively satisfying conditions i–iii theorem   describing state satisﬁes ⊃                 suppose dynamic query occurs  • dynamic law  subsumed transi    xi solution di qi ci ∪  tion hs si transition diagram described solution furthermore solution  following holds interpretation ∪ describing represented form  state action satisﬁes interpretation                                  describing satisﬁes ⊃                    ii dynamic query occurs  solution                                                            permitting nop solution    set causal laws subsumed action description x∪x solution  law subsumed causal law  tautological subsumed action description example  consider adu problem ∪                                                                                        proposition  subsumption let adu         example    consisting  problem consistent  sub causal laws  sumes ∪ solution           inertial lighton  ¬lighton                    result obtain following corollaries caused lighton switchlight ∧ ¬lighton                                                             caused ¬lighton  switchlight ∧ lighton    corollary  void update let ∅ adu prob  lem consistent  unique  ∪   solution ex  solution ∅                                ample   solution ∅ ∅ permits  corollary  idempotence let adu prob nop corollary  ii ∪  ∪ ∪    lem consistent  solu solution ∪            tion  corollary  addition tautologies let  computational  complexity  adu  problem consistent  important subtask solving adu problems checking  tautological causal law tautology set queries entailed action description  ∪ solution                                                        theorem   given action description set                                                                                     notice similar property fails logic programming queries deciding  Π complete general  dates alferes et al  eiter et al  ii pnpcomplete does involve dynamic queries    consider structural property solutions   nearsolutions exploited syntactical pnp means polynomialtime single parallel eval  composition adu problem divideandconquer                                                             uation calls np oracle  manner involved semantics transitions proof sketch wlog contains single query  causation general prerequisites needed                                                                                            membership ii deciding   action signature  denote lx static query form  polynomial form  appears say action description                                                                                      conp boolean combination  mits nop transition ∅ transition queries       deciding feasible  diagram described query occurs positively resp                                                                                  polynomial time single parallel evaluation np  negatively set queries occurs scope oracles deciding given state  resp odd number negations  query                                                                ¬                   dynamic query form  np   theorem  disjointness let adu prob general query decidable polynomial time                                                                                               np     lem signature  hf ai let     np oracle means deciding  np  Σ                                    deciding  Π  coΣ  hardness   extend hf ai set  dm new ﬂuents  results follow transformations deciding called update ﬂuents     hk  boolean combination quantiﬁed boolean formulas                                                           label each static law  dm ﬂuent hi ∈  qbfs form ∃xej   ≤ ≤ true ii qbf                                                     form ∀x∃y true respectively                                caused ∧ hi             ﬁnding solutions note deciding d∪ each dynamic law  ﬂuent ∈  solution adu problem                                          complexity deciding  general deciding               caused ∧ hi       existence arbitrary solution harder                                                            laws labeled ﬂuent hi  theorem  deciding given adu problem                                                         each hi labeling law add dynamic law  solution nearsolution Σ complete general        ii Σ complete does involve dynamic queries              inertial hi ¬hi            iii npcomplete  ∅                                                          let  du dm action description set  proof sketch let  du ∪ dm guess near                                                      queries signature let update  solution du ∪ ⊆ ⊆ du ∪                                                                                                     scription set update ﬂuents let hs    state witness consistency check                                                        transition diagram described update  ii polynomial time help Σ oracle                            ii nporacle respectively proves membership ﬂuent set relative subset                                                                          Σ  ii Σ  iii np respectively hardness hitting set s¬c contains each state  results follow transformations deciding                                                             ∈ ﬂuent true  qbf form ∃xf true ii qbf form ∃z∀xf        ¬                                                                                         true iii qbf form ∃z∀x∃y true  ii   contained state sc     similarly testing arbitrary solution candidates higher notions ﬁnd nearsolution  complexity testing ∪                        adu  problem  du dm follows  theorem  given adu problem action   ∪ consistent ∪  output ∪  description deciding solution  construct update description ∪                              Π complete general ii Π complete does  du ∪ dm  involve dynamic queries iii conpcomplete  ∅  minimal update set relative    recognizing solutions quite hard exists                                    recognizing nearsolutions easier Π complete general  identify set causal laws dm labeled  pnpcomplete dynamic queries polynomial  elements   ∅ follows easily theorem                                                            output du ∪ dm   ∪    computing    solutions                             proposition  let adu problem                                                            nonempty update set update  oracle nearsolutions incrementally com                                                        description ∪q  du ∪q dm relative  pute solution adu problem  method generates nearsolution  du dm polynomial time follows                                                        example   consider adu problem presented    du dm nearsolution                                                       example  note ∪  explained ex         ∅ halt                          ample  obtain following update description    each qi ∈ dm      qm            du ∪ dm contains du ∪ laws                                       du ∪ ∪ qi     qi     qm                                                     caused poweron   pushpbtv ∧ ¬poweron          di  di  nearsolution                                                     caused ¬poweron   pushpbtv ∧ poweron             ∪                                                        caused tvon  poweron                        output du ∪                                    caused ¬tvon   ¬poweron     virtue theorems   substantially better al inertial hi ¬hi  ≤ ≤   gorithm type likely exist computing solu                                                    according transition diagram described  tion Σ  Π hard needs power                                                                                             Σ oracle nearsolution dn known    s¬c  poweron   tvon  ×                                                                     compute starting solution manner                                                                        assuming dn      qk set  dn       nearsolutions given adu problem nondeter minimal update set relative  ministically computed membership theo remove ∪ law labeled   rem  obtained qbf encoding using qbf solver result nearsolution solution problem   present different computation method using “up            date descriptions” “update ﬂuent sets”           example     action description exam                                                        ple  following causal laws added dm    let  du dm action description signature      update description action description caused tvon pushpbtv ∧ ¬poweron   obtained follows                                caused ¬tvon  pushpbtv  ∧ poweron  
