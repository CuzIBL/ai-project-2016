                                             session  understanding ii representation           relations predicate calculus      ii correspondence tree network     semantic net representations discourse         attribute value representations discourse                robert simmons                     linguists accustomed representing                   bertram bruce                    structure natural language sentences trees                                                       following sentence el represented            department sciences            figure                 university texas                     austin texas                          el john chairs tools october                        usa                                  th austin                                                       computational convenience figure     abstract                                           represented attributevalue list                                                       table        networks used represent syntactic    trees semantic relations hold    words sentences alternately    symbolized association lists conjoined sets    triples semantic net represents sentence    conjoined set binary predicates algor•   ithm presented converts semantic net•   work predicate calculus formalism    simpler syntax semantic network representa•   tions contrast ordinary predicate logic    conventions taken argument    use computational applications    descriptive terms semantic networks predicate    logic natural language computational linguis•   tics association lists      introduction       approaches natural language question    answering generally agreed question    text transformed formal    language representation    accomplished answering question phrased    formal language data base represented    formal language process theorem    proving data taken axioms    questions theorems proved       point approaches commonly    literature represents question    data syntactic conventions    predicate calculus uses standard theorem    proving techniques robinsons resolution    algorithm supported heuristic selection    relevant axioms green  raphael  sande   wall  darlington  represents    question text attribute value lists    semantic nets shortly shown    equivalent uses matching algorithm guided    heuristic choices relevant data                          note st nd    approach seen quillian  raphael                               arbitrary notation    colby et al  schwarcz et al                                       successive branches       recent literature sandewall                               node    palme  each presented for•   mal developments semantic network representa•      table  attributevalue representation    tions predicate logics thompson  shows    similarity linguistic casestructure                  syntactic structure el    analysis predicate calculus statements       point view paper         linguistic representation el sug•   informally shows similarity semantic net•   gested fillmore  shown figure     works predicate calculus representations    attributevalue representation structure    argues semantic net syntax computa•    shown node values john    tionally simpler preferred    chairs tools taken symbols    research supported national      unambiguous denotation agt obj    science foundation grant gj                  semantic relations figure  semansession  understanding ii representation                                             tic network implied definition      eventual conclusion semantic nets    semantic netvork unambiguous        fully valid representation under•   symbols interconnected definable semantic       lying logic discourse nodes    relations                                         unambiguous denotation relational                                                       arcs fully defined                                                       iii logical aspects semantic networks                                                         principal value using semantic nets                                                       structure underlying natural language sen•                                                      tences closer form                                                       meaning natural language                                                       proposed structures order predi•                                                      cate calculus following sections                                                      show simple semantic nets mapped                                                       directly ordinary order predicate                                                       calculus computational                                                       advantages proximity natural                                                       language                                                         particularly illuminating interpretation                                                       semantic nets considers each                                                      node set processes each                                                       relational arc restriction sets                                                      named nodes connects set                                                      makings includes events processes                                                      agent makes object                                                       instrument time location                                                      satisfy certain restrictions based                                                       participation deep case relations                                                       verb make example agent                                                      animate instigator similarly make        figure  case structure el         restricted subclass                  attributevalue representation       verbs agent object instrument time                                                       locative cases                                                         specific sentence set makings       looking attributevalue representation  restricted example sen•   figure         tence el small subclass makings    represented conjoined set triples    follows                                               makings john chairs tools                                                            oct  austin        simple convenient representation    computational purposes logic explained    later       discussion seen    nodearcnode structure networks syn•   tax symbolic notation equally    represent syntactic tree structure    semantic relations elements sentence    case net symbolized    attributevalue list attributes    relations values repre•   sented nodes attributevalue list    turn represented set triples    each value set triples       proceeding section con•   sidering logical notation structure    worth mention williams  developed    network representation predicate calculus    statements following original graphic notations    referring figure  each node    attributes frege support   semantic network restricted                                                       relations nodes refers    simmons  slocum  representation    subset processes contained    developed multisentence discourse       set called chairs addition serves    network formally defined                       object relation certain semantically                                              session  understanding ii representation        restricted subset makings represented     relations discussed    node ci                                                 scheme relations agt obj tim         special significance    loc defined ways  relation consequences transla•   terms logical import agt     tion algorithm discussion warranted    token make john indi•   purposes algorithm    cates john argument predicate follow table  preliminary    make second restrictions    analysis kinds quantification    impose nodes connect     needed note quantifiers    restrictions interconnections       nodes determines semantically restric•  omitted table    ted sets                                         used semantic nets      consequence viewpoint    statement john chairs tools    tested truth value reference    data base model successive intersections    members set binary predicates    represent set binary predicates    make data base produce   data base sentence describing instance    making crossreferenced semantic   relations agt obj inst particular    specifiers john tools chairs    implying set restrictions   described each nominal participant   making crossreferenced agt obj   token verb      simplest case successive inter•   sections performed simple matching al•  gorithm answer question simply    set triples matching each triple ques•   tion methods similar used   question answering programs sophisticated   algorithm incorporate various axioms   set theory heuristics based informa•   tion size sets intersected   list semantic relations determine    sets      appears questions answered   efficiently recursive use simple   matching algorithm complicated questions   require extensive use concept set   restrictions intersections semantic nets   suited kind question answer•   ing additional virtue         predicate calculus formula   easily transformed familiar        represents portion formula does    logics order predicate calculus    contain free variable px   following formal discussion semantic      portion does   nets representation quantifiers       equivalent predicate calculus expressions   algorithm converting simple nets        alternate logical meanings someindef    predicate calculus      semantic net set triples          table  examples quantifiers   nodes semantic                       semantic nets   relation nodes elements set   unambiguous symbols semantic relations   defined definable relations   need complete logical definition    falling following categories     concept order use semantic       connectives     net example complexity       deep case relations agt obj        avoided consider phrase fish         dat                                    mean fish fish       attributive relations mod posses•   parts fish semantic net         sive haspart assoc                   use quantifier someindef allows        tok meaning token                meanings predicate calculus        meaning quantified                  forced select formulas       set relations sup sub equal  given table  complicated dis•                                                     junction possible formulas consession  understanding ii representation                                           sequence question answering vagueness        prescribed ordering ntuple   semantic net course reduced pre•          set equal member   cision correspondence question            removed remove values   answer answering question                  stack triples            did john eat fish                          member step                                                             members set gg            john ate fish                                                                                                                    step  step    leads answer maybe reflecting   imprecision match                              pushdown stack                                                            step  set   iv translation algorithm                                                            equal members respective      algorithm given designed con•          stacks substitute   vert representation semantic nets              element remove member   predicate calculus restrictions             set equal member   simplify presentation higher             pushdown stack remove member   order predications handled algorithm          stacks step    normally required handle   moves slowly assumed connec•         triple form   tives treated like verbs fact         tok element   certain connectives require complex transla•         verb   tion algorithms relative            triple step    clauses allowed sum dealing          select triple ha tok   subset semantic nets           element   serve semantic structure natural lan•           connective push   guage                                                   respective stacks set nil                                                            step       algorithm does show   simple semantic nets sound logical              paralleling procedure used connec•  structure order predicate calculus         tives step  form ntuple   algorithm complex semantic nets              cn member   appears dependent understand•        ci member   ing concepts wish allow                    ith triple ordering prescribed      algorithm handles turn connectives          case argument description   verbs nouns noun modifiers uses push•          verb ntuple set equal   stacks customary way start          member removed remove   pushdown stacks variables            values stack   capital letter variables          triple member   denote specific formulas nodes arcs            member step    consideration small letter variables   indicate node arc                              members step                                                             step    algorithm converting semantic nets   predicate calculus                                    element form                                                            conjoined list tri•      start conjoined list triples             ples form        representing semantic net dis•             triples rtok rq convert        course list step             triples prefix notation       set nil step                         set ppae tok                                                            locate form specified       triples form                                                            table quantifiers         tok connective                                                            table  let value        triples        tok connec•          bound variable form substitute        tive select triple            constructed        step            result remove triples        step                                          member remove                                                            step        each connective verb        prescribed ordering arguments            nil set gqvf step         example verb order•         substitute         ing agt obj dat ordering specified        element remove         lexicon called case argu•          member step         ment description connective           triples form        verb collect order case argu•            tok verb        ment description triples form           select triple         member         step  stop        form ntuple ccn        example application algorithm         member                                                       sentence        triple ri ci ith triple                                              session  understanding ii representation                old man book john         discussion conclusions    numbering corresponds steps    algorithm value each variable written      mentioned reasons                                                       using semantic nets struction underlying    changes                                                       natural language discourse summar•                                                      ized follows                                                        vague partially undefined concepts                                                       used semantic net giving rules governing                                                       operation questions require                                                       specification functions used                                                       predicate calculus example dialogue                                                              old man ate fish                                                              did old man eat fish                                                              yes                                                       does presume precise understanding                                                       meaning expect compu•                                                      ter question answerer capable                                                       earlier similar example showed maybe                                                       answer consequence vagueness criti•                                                      cal aspects meaning represented                                                       semantic net                                                        simple questions answered simple                                                       matching procedure easily performed                                                       semantic net complex questions                                                       advantage set restriction principles                                                       semantic nets possible convert                                                       parts net order predicate                                                       calculus use form robinsons                                                        resolution algorithm                                                        semantic net closer predicate                                                       calculus natural language form meaning                                                       example nesting natural language                                                       expressions                                                              man caught fish ate                                                       easily handled semantic nets                                                           lest happy situa•                                                      tion mentioned alter•                                                      nate specifications processes                                                       th day th month october                                                        lathe saw plane chisel                                                       tools furniture chairs managing                                                       possible logical lexical syntactic                                                       paraphrases statement testing truth                                                       value adds significant transformational                                                       implicational complexity accommo•                                                      dated semantic nets useful                                                       language processing                                                          complexities provided addi•                                                      tional relations lexicon grammar                                                       lexicon shows example process                                                       named tools includes subsets processes                                                       named planes lathes hammers saws       stop                                         chairs subset furniture                                                       transformation maps octo•      final result translation algorithm   ber  th day th month    given step  simple transformation    converse additional information    given formula make conform    present possible difficult dis•   particular conventions wishes follow       cover approximate paraphrastic equivalence    infix vs prefix method hand•     el following examples    ling proper names modifications             el john chairs tools    language fea tures                                          october                                                             john furniture lathe                                                                 saw plane chisel                                                                 th day th month 
