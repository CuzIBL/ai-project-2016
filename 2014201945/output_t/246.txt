                               incremental mechanism design∗                         vincent conitzer                            tuomas sandholm                        duke university                        carnegie mellon university               department science                science department                     conitzercsdukeedu                        sandholmcscmuedu                        abstract                            traditional approach mechanism design                                                        try design good mechanisms general possible      mechanism design traditionally focused probably bestknown general mechanism vickrey      exclusively design truthful mechanisms clarkegroves vcg mechanism    chooses      drawbacks  certain allocation maximizes sum agents’ utilities      settings voting settings desirable strategy social welfare makes agent pay external      proof mechanisms exist  truthful mechanisms    ity imposes agents sufﬁcient      unable advantage fact com ensure individual agent incentive manip      putationally bounded agents able    ulate various drawbacks example      ﬁnd best manipulation  designing  surplus payments general redistributed      mechanisms automatically approach leads  designer different objective social wel      constrained optimization problems cur  fare wish maximize revenue general      rent techniques scale large instances mechanisms drawbacks vari      paper suggest entirely different ap ous impossibility results gibbardsatterthwaite      proach start na¨ıve manipulable mech theorem   show certain objectives      anism incrementally make strategy   achieved truthful mechanisms      proof sequence iterations                                                          lack general mechanism satisfac      examples mechanisms variants tory led creation ﬁeld automated mechanism      approach generate including vcg mech    design  try design mechanism works      anism general settings payments  range settings idea au      pluralitywithrunoff voting rule provide tomatically compute optimal mechanism speciﬁc      basic algorithms automatically execut setting hand solving optimization problem draw      ing approach general settings finally approach current techniques scale      discuss computationally hard agents large instances fact      ﬁnd remaining beneﬁcial manipulation         ensure strategyproofness simultaneously decide                                                        outcome mechanism chooses possi    introduction                                       ble input revealed preferences strategyproofness  multiagent settings choose outcome constraints interrelate decisions  based preferences multiple selfinterested agents observation com  necessarily report preferences truthfully plex settings unreasonable believe agent  best typical settings endowed computational abilities compute  occurs include auctions reverse auctions ex optimal manipulation invalidates abovementioned  changes voting settings public good settings resourcetask revelation principle restricting attention truthful  allocation settings ranking pages web  mechanisms fact come cost quality  search mechanism design studies choose outcomes outcomes mechanism produces adding  way good outcomes obtained observation domains strategyproof mecha  agents respond incentives misreport preferences nisms unsatisfactory gibbardsatterthwaite theo  manipulate researchers focused rem important able design mechanisms  simply creating truthful strategyproof mechanisms strategyproof recent research pro  agent incentive misreport ap posed manipulable mechanisms work  proach typically justiﬁed appealing result known proposes relaxing constraint approximate truth  revelation principle states mechanism fulness various senses approximately truthful mech  does face strategic misreporting agents anisms easier execute   circumvent  truthful mechanism perform just impossiblity results apply truthful mechanisms     ∗                                                    work studied manipulable mechanisms     material based work supported national sci  ence foundation itr grants iis iis  sloan fellowship ibm phd fellowship           use “she” centerdesigner “he” agent                                                    ijcai                                                    ﬁnding beneﬁcial manipulation computationally difﬁcult • each ∈ utility function ui Θi × →  various senses                          • objective function Θ× →    paper introduce new approach start  example singleitem auction set bid  na¨ıvely designed mechanism strategyproof ders  ×Πwheres set possible allocations  example mechanism optimal item each bidder plus potentially alloca  absence strategic behavior attempt make tion bidder wins Π set possible  strategyproof speciﬁcally approach systemati vectors ππn payments agents  cally identiﬁes situations agent incentive Πrn assuming allocative externalities  manipulate corrects mechanism away does matter bidder bidder wins  incentive iteratively mechanism item bidder does win Θi set pos  completely strategyproof eventually sible valuations bidder item                                                                        ≥  ﬁnal mechanism depend order possible example Θi   utility function ui given  manipulations considered                         uiθi ππn  θi − πi outcome    conceive approach computa wins item uiθi ππn  −πi  tionally efﬁcient approach automated mechanism situations type consists single  sign insofar updates mechanism make value typically use vi θi type  strategyproof executed automatically com deterministic mechanism consists function  puter provide algorithms doing Θ→ specifying outcome vector  possible think results approach theo reported types given mechanism mabeneﬁ  retically use guide “traditional” mechanism cial manipulation consists agent ∈ type  design pursue giving various examples vector θθn∈Θ alternative type  finally argue mechanism approach port θˆi agent uiθimθθn   produces remains manipulable remaining manipu uiθimθθi− θˆiθiθninthis  lations computationally hard ﬁnd          case say manipulates θθn    approach bears similarity mechanisms                                                        θθi− θˆiθiθn mechanism strategy  designed real world realworld mechanisms proof dominantstrategies incentive compatible  initially na¨ıve leading undesirable strategic behavior beneﬁcial manipulations consider  recognized mechanism amended disin bayesnash equilibrium incentive compatibility  cent undesirable behavior example na¨ıvely                                                          settings payments enforce expost individual  signed mechanisms bidders incentives postpone sub                                                        rationality constraint make agent worse  mitting bids just event closes snip                                                        participated  ing partially ﬁxed adding activity rule                                                        charge agent reported outcome  prevents bidders bid actively early                                                        disregarding payments worth  winning later example  trading agent  competition supply chain management tacscm game      approach techniques  rules game led agents procure  components day  deemed undesirable section explain approach techniques  designers tried modify rules  competition consider paper recall goal  disincent behavior                      immediately design strategyproof mechanism    variants approach start manipulable mechanism attempt  each merits decide variant crementally make “more” strategyproof basic  best paper show different template approach follows  variants result desirable mechanisms  start manipulable mechanism                                                         set manipulations manipulation    mechanism design background                        given agent ∈ type vector θθnandan                                                        alternative type report θˆi agent  mechanism design setting given           possible change mechanism prevent  •                     set agents                            manipulations beneﬁcial  •    set outcomes payments used  repeat step  termination  setting outcome includes information payments merely template each steps  byto agents                               thing remains ﬁlled initial mechanism  • each agent ∈ set types Θi denote                                                             ΘΘ   × × Θn  set type vectors set utility function parameterized type ui  possible inputs mechanism                common knowledge types encode private preferences                                                           general additional information prior    interestingly adhoc modiﬁcations failed prevent types use information paper  behavior extreme modiﬁcation during  com general mechanism randomized specifying distri  petition failed later research suggests fact reasonable butions outcomes consider paper  settings key parameter failed      “beneﬁcial” means beneﬁcial manipulating agent                                                    ijcai                                                    choose step  set manipulations set outcomes beneﬁcial  siderinstephowdowe“ﬁx”themechanisminstepto         manipulation θˆi θ θˆi ∈  uiθio ≥  prevent manipulations decide ter uiθimθθi− θˆiθiθn happen  minate step  paper resolve omθf∅ outcome prevent manip  best way ﬁll blanks unlikely ulations case various ways  single universal best way provide proceed update outcome  instantiations technique illustrate examples set θmθ minimize  show interesting properties                 number agents incentive manipu    natural way instantiating step  choose late θ change choose θ ∈  na¨ıvely optimal mechanism mechanism arg mino∈o ∈ ∃i θ θˆi ∈  uiθio   highest objective value each type vector                                                                   i− ˆi     n    ties  agent reveal type truthfully instance θ θ θ  θ θ θ                                                         broken maximize objective   wish maximize social welfare simply                               choose outcome maximizes social welfare variants possible example instead                                                        choosing set possible outcomes  ported types wish maximize revenue choose                                                                                            update outcome mechanism type vec  outcome maximizes social welfare reported types  make each agent pay entire valuation         tor θ limit set outcomes                                                        result beneﬁcial manipulation    step  possible options choose                                                        θ—that set ∈ ∃i θˆii θ θˆi ∈   set manipulations set manipulations                                                                            ˆ               single agent set manipulations par  θθi− θiθiθn  —in addition  ticular type type vector just single manipulation current outcome mθ motivation  structure speciﬁc setting consideration consider possible outcomes time wish  make certain manipulations “natural” simplify job considering ones cause  discover manipulations natural intu failure strategyproofness ﬁrst place  ition hiring agents act test runs mechanism present examples abovementioned variants  running algorithms ﬁnd manipulations set  instantiating methodology  manipulations choose affect difﬁculty step     step  complex step let ﬁrst   section illustrate potential beneﬁts ap  sider case trying prevent  proach exhibiting mechanisms produce var                                                       ious standard mechanism design settings demon  single manipulation θ   θθn θ               ˆ                                        strate setting approach ends producing   θθi− θiθiθn  make manipula strategyproof mechanism setting  tion undesirable three ways make outcome produced mechanism vulnerable manipulation  selects θ desirable agent                                                       sense “more” strategyproof na¨ıve mechanisms  type θi make outcome selects θ setting studied—deciding pro  sirable agent type θi combination duce public good—is omitted space constraint  focus paper emphasize goal section come  multiple ways make outcome selects θ suf spectacularly novel mechanisms show  ﬁciently desirable prevent manipulation natural way approach advocated paper produces sensible results  select outcomes choose consider approach successful  maximizes designer’s original objective note produces wellknown mechanism future research  modiﬁcations introduce beneﬁcial manipulations hope use technique help design novel mecha    trying prevent set manipulations nismsaswell emphasize  confronted additional issue pre mechanisms approach eventually produces al  vented manipulation set reintroduce ready known ustheapproach simply follows local updat  incentive manipulation try prevent ing rules knowledge ﬁnal mechanism  manipulation resolving require solving words algorithm given  potentially large constrained optimization problem consti hint ﬁnal mechanism look like  tuting approach similar standard automated mechanism  design—reintroducing scalability problems  settings payments  wish avoid addressing manipula subsection show following result general  tions type vector simply act preference aggregation settings agents make  change outcomes type vector    payments combinatorial auctions variant    formally particular instantiation approach technique yields vcg mechanism single iteration  mechanism beginning iteration recall vcg mechanism chooses outcome           mechanism end iteration af certainly apply approach previously unstud  ter update set manipulations                                                       ied mechanism design domain produce novel mechanism  consideration θ ∈ arg maxo∈omθf gθ difﬁcult evaluate quality mech  θ   θθn omθf   ⊆     anism compare mechanism                                                    ijcai                                                    maximizes social welfare counting payments im tiebreaking assumption lemma does  poses following tax agent consider total utility hold example singleitem ﬁrstprice auction bid  counting payments agents given chosen ding exactly second price item optimal  outcome subtract total utility counting manipulation bidder highest valuation  payments agents obtained tie broken favor bidder increas  given agent’s preferences ignored choosing ing bid guarantee item won  outcome speciﬁcally consider following variant general increasing value s∗  technique basic        guarantee outcome  •   objective try maximize say linear com proof show manipulation result  bination allocative social welfare social welfare s∗ chosen suppose allocation   s∗ cho  taking payments account revenue does mat                                                        sen instead given tiebreaking assumption follows  ter combination                                                  ∗             ∗                                                                   ˆi              equiva  •                                                            θ uθ       θ    set manipulations consider ji                  ji                                                                                                ∗  possible misreports single agent            lently vcgiθiθ−i   ujθjs−ujθjs  •                                                                          ji               try prevent manipulations according                                            ∗∗  type vector beneﬁcial manipula deﬁnition vcgiθiθ−imaxs∗∗ ujθjs  −                                                                                           ji  tion make outcome desirable manipulating  ∗                        ∗                                                        ujθjs  ≥    ujθj − ujθjs   agents prevent manipulation outcomes          ji  achieve choose maximizing objective sired contradiction follows agent i’s utility                                                                            ∗    use term “allocation” refer manipulation uiθis  − vcgiθiθ−i  outcome does concern payments show agent obtain higher utility  sult restricted allocation settings auctions                                                        manipulation suppose manipulation θˆi  refer utility agent type θi gets                                                        results allocation chosen utilities  allocation including payments uiθisthe                                                        be negative truthful reporting follows uiθˆis  following simple observation shows na¨ıvely optimal                          ∗∗                                                                    ≥       ∗∗  mechanism ﬁrstprice mechanism chooses  ujθjs     maxs     ujθjs    using fact                                                        ji                  ji   allocation maximizes social welfare makes                                 ∗∗          ∗                                                        vcgiθiθ−imaxs∗∗      ujθjs  − ujθjs   agent pay valuation allocation                                      ji                                                                                                    ˆ  observation  ﬁrstprice mechanism na¨ıvely maximizes we rewrite previous inequality uiθis                                                                   ≥                           ∗  revenue allocative social welfare              ujθjs   vcgiθiθ−i      ujθjs  equiva                                                        ji                          ji                                                                                               ∗  proof mechanism na¨ıvely maximizes allocative lently uiθˆis ≥ vcgiθiθ−i ujθj −ujθjs  social welfare clear individual ratio                   ji                                                                         ∗  nality constraint extract alloca ujθj  ≥ ujθjs rewrite pre  tive social welfare ﬁrstprice mechanism na¨ıvely                                                                                                                    ∗  extracts allocative social welfare outcome vious inequality uiθˆis ≥ vcgiθiθ−i− uiθis                                                                            ∗  na¨ıvely maximizes allocative social welfare       uiθis    ujθjs  − ujθjs ≥ vcgiθiθ−i −                                                                      showing main result subsection     ∗                                                        uiθis uiθis equivalently uiθis − uiθˆis ≤  ﬁrst characterize optimal manipulations ﬁrstprice ∗                                                        uiθis  − vcgiθiθ−i shown  mechanism    lemma   following optimal manipulation θˆi theorem  variant approach described  θ ∈ Θ agent ﬁrstprice mechanism     mechanism resulting single iteration  • allocation s∗ chosen vcg mechanism  ﬁrstprice mechanism θ report value equal i’s proof observation  na¨ıvely optimal mechanism                                           ˆ  ∗  vcg  payment true valuations uθis     ﬁrstprice mechanism updating outcome θ  vcgiθiθ−i                                        lemma  each agent receive utility  •                         ∗                                ∗                         ∗   allocation   report valuation  uiθis  − vcgiθiθ−iwheres allocation                                               ∗     utility manipulation  uθis  −    maximizes allocative social welfare type vector θone                                                                                              ∗  vcgiθiθ−i   assumes ties broken  way achieving choose allocation  charge                   ∗  favor allocation                               agent exactly vcgiθiθ−i—that simply run vcg                                                        mechanism clearly maximizes allocative social welfare    constraints reported utility function constraints agents’ utilities max  prevent this—for example combinatorial auction imizes revenue following reason allocation  monotone valuations allowed winning items revenue hope extract al  hurts agent agent report valuations                                                   ∗    locative social welfare sthatis uiθis minus  outcomes small possible lead                     chosen                                         sum utilities guarantee agents                                                    ijcai                                                                   ∗                                ∗   uiθis  − vcgiθiθ−i   maxi   number votes prefers starting                                                     plurality rule exactly sb − sa iterations  mizes   uiθis means revenue                                                      approach described outcome θ changes                                                                                                           hope extract vcgiθiθ−i vcg mecha   ﬁrst time outcome plurality runoff rule                   nism achieves                                      computing mechanism’s outcomes                                                        section discuss automatically compute    ordinal preferences                              outcomes mechanisms generated ap  subsection address voting social choice settings proach general convenient think set  setting set outcomes known tings set possible type vectors ﬁnite  candidates alternatives set agents known mechanism represented ﬁnite table  voters agent i’s type complete ranking  techniques extended inﬁnite settings  candidates need specify numerical types grouped  utilities mechanism voting rule takes ﬁnite number speciﬁc settings better  agents’ type reports votes consisting complete potential upside relative standard au  rankings candidates chooses outcome   tomated mechanism design techniques need    commonly used voting rule plurality rule compute entire mechanism outcomes type  consider voter’s highestranked vectors need compute outcome  didate winner simply candidate highest type vector actually reported  number votes ranking ﬁrst plurality score plu let denote na¨ıve mechanism start  rality rule manipulable voter voting candidate let mt denote mechanism iterations let ft  winning prefer attempt candi note set beneﬁcial manipulations consider  date currently secondhighest plurality score ing trying prevent tth iteration mt  win voting candidate instead real world function ft mt− function depends  common way “ﬁxing” add runoff round speciﬁc variant approach using  resulting pluralitywithrunoff rule rule try prevent manipulations making outcome  candidates highest plurality scores type vector agent manipulating                                                        sirable agent speciﬁc say  declare winner ranked higher                                         θ  voters gibbardsatterthwaite theorem type vector θ mtθ function subset ft ⊆ ft  strategyproof mechanism dictatorial consists manipulations start θ                                                        outcomes mt− selects subset type vectors  does preclude candidate winning—for exam                             θ  ple voter change vote change candidates result manipulation ft  compute  runoff plurality runoff rule outcome mt produces θ need consider                                                        outcomes mt− chooses type vectors differ  intuitive sense “less” manipulable plurality rule                                          θ  certainly desirable strategyproof rule θ type possibly fewer ft  strategyproof rule dictatorial preclude does consider possible manipulations                                                                                                n  candidate winning                         need consider mt−’s outcomes Θi type    subsection show following variant                                  approach produce pluralitywithrunoff rule vectors compute mtθ given θ  starting plurality rule initial mechanism                         n                                                        smaller set type vectors  Θi course  • set consists manipulations voter                                                                                                                            changes candidate ranks ﬁrst                compute mt−θ  type vector θ  need  • try prevent manipulations follows type vote                     n                                                        consider mt−’soutcomesonupto    Θi type vectors  vector beneﬁcial manipulation consider                        outcomes result manipulation simple recursive approach comput  addition current outcome choose new                            n                                                                                               outcome minimizes number agents ing mtθ θ require Θi   time                                                                                          incentive manipulate vote vector approach spend signiﬁcant time  •                                                                              change outcome each vote vector recomputing values mjθ  times approach  multiple iterations vote vectors use dynamic programming computing storing mech  outcome did change earlier iterations  anism mj−’s outcomes type vectors proceed    ready present result remaining ing compute outcomes mj approach require  proofs omitted space constraint                n        n                                                        ot ·   Θi ·  Θi time iteration ev  theorem  given type vector θ suppose candi                                                                ery type vector investigate possible manipula  date ranked ﬁrst ranked ﬁrst  second sb sa whereso num assuming ties plurality rule broken favor  ber times ranked ﬁrst suppose iteration needed assumption  number votes prefers greater equal tiebreaking voting rules                                                    ijcai                                                    
