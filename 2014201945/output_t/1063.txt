                            understanding power clause learning                            paul beanie henry kautz ashish sabharwal                                              science engineering                                                 university washington                                                  seattle wa                                         beamekautzashishcswashingtonedu                             abstract                               mance backtrack search algorithms generating expla•                                                                 nations failure backtrack points adding        efficient implementations dpll addi•          explanations new constraints original problem        tion clause learning fastest complete sat•     kleer williams  stallman sussman         isfiability solvers handle significant       genesereth  davis  general constraint sat•       realworld problems verification planning      isfaction problems explanations called conflicts        design despite importance little known       goods case boolean cnf satisfiability        ultimate strengths limitations tech•    technique clause learning series       nique paper presents precise charac•      searchers bayardo jr schrag  marquessilva        terization clause learning proof      sakallah  zhang  moskewicz et al         begins task understanding power par•       zhang et al  showed clause learning ef•       ticular show clause learning using non      ficiently implemented used solve hard problems        redundant scheme unlimited restarts equiva•        approached technique        lent general resolution show with•                                                                   despite importance little work formal        restarts new learning scheme clause                                                                  properties clause learning goal understanding        learning provide exponentially smaller proofs                                                                  fundamental strengths limitations likely reason        regular resolution known                                                                  inattention clause learning complex        stronger ordinary dpll                                                                  rule inference  fact complex                                                                  family rules inference contribution paper    introduction                                                 provide precise specification clause learning                                                                    problem characterizing clause learning defin•  recent years task deciding cnf propo                                                                 ing formal notion strength power reason•  sitional logic formula satisfiable gone problem                                                                  ing method paper uses notion proof complex•  theoretical practical approach solving real                                                                 ity cook reckhow  compares inference   world problems sat procedures standard tool                                                                  systems terms sizes shortest proofs sanc•  hardware verification including verification superscalar                                                                  tion family formulas provides exponential sep•  processors velev bryant  biere et al  open                                                                  aration systems  shortest proofs   problems group theory encoded solved using                                                                  formulas exponentially smaller   satisfiability zhang hsiang  applications                                                                  corresponding shortest proofs basic proposi  sat include circuit diagnosis experiment design konuk                                                                  tional proof complexity point view families unsat  larrabee  gomes et al                                                                  isfiable formulas proofs unsat    surprising aspect relatively recent practi•                                                                 isfiability large minimum proofs satisfiability   cal progress best complete satisfiability testing al•                                                                 linear number variables formula neverthe•  gorithms remain variants dpll procedure davis                                                                  achlioptas et al  shown negative proof   putnam  davis et al  backtrack search                                                                  complexity results unsatisfiable formulas used   space partial truth assignments main improvements                                                                  derive time lower bounds specific inference algorithms   dpll better branch selection heuristics                                                                  running satisfiable formulas   li anbulagan  extensions random•  ized restarts gomes et al clause learning      proof complexity does capture intu•  argue clause learning significant   itively mean power reasoning   scaling dpll realistic problems                says difficult shortest proofs     clause learning grew work ai explanation       good notion begin anal•  based learning ebl sought improve perfor      ysis size proofs provides lowerbound                                                                  running time implementation       research supported nsf grant itr               systems consider branching function determines                                                                                                            satisfiability variable split pair clauses re•    dpll procedure   solve guides search negative proof complexity result   basic idea davisputnamlogemannloveland   tells family formulas intractable dpll procedure davis putnam  davis et al   perfect branching function likewise positive    testing satisfiability cnf formulas branch   result gives hope finding branching function          variables setting true false      basic result proof complexity general resolution initial clause violated literals set false   exponentially stronger dpll procedure bonet et    variables set case backtrack   al  bensasson et al  trace  branching decision branch   dpll running unsatisfiable formula con•        tried reverse decision proceed recursively   verted treelike resolution proof size   terminate satisfying assignment pos•  treelike proofs exponentially larger   sible branches unsuccessfully tried formula   daglike proofs generated general resolution al•       declared unsatisfiable increase efficiency pure liter•  resolution yield shorter proofs practice dpll   als negation does appear unit clauses   better provides efficient way search unset literal immediately set true   proofs weakness treeresolution proofs dpll                                                                  definition  branching sequence cnf formula   finds reuse derived clauses conflict                                                                  sequence literals possibly   clauses dpll augmented clause learning                                                                  repetitions dpll branches according   correspond reuse derived clauses associated res•                                                                 picks variable branch literal order given   olution proofs general forms resolution                                                                  skips currently assigned value branches   proofs intuition results paper                                                                  setting chosen literal false   addition clause learning moves dpll closer general   resolution retaining practical efficiency             paper use term dpll denote ba•                                                                 sic branching backtracking procedure described      previously observed clause learning                                                                  instance include extensions learning con•  viewed adding resolvents treelike proof marques                                                                 flict clauses restarting allow intelligent branching   silva  paper provides mathe•                                                                 heuristics note contrast occasional use   matical proof clause learning exponentially stronger                                                                  term dpll encompass practically branching   treelike resolution provide family for•                                                                 backtracking approaches including involving learning   mulas exponentially separates clause learning reg•  ular resolution known intermediate   resolution   strength general tree resolution proof uses   new clause learning scheme called firstnewcut in•    resolution simple proof used prove   troduce show combining clause learning      unsatisfiability cnf formulas resolution rule states   restarts strong general resolution                   given clauses andwe derive clause                                                                  resolving resolution derivation      paper focuses basic proof complexity                                                                  cnf formula sequence   briefly indicate understanding gain through                                                                  each clause ci clause initial   kind analysis lead practical applications exam•                                                                 clause derived applying resolution rule   ple proofs improvement clause learn•                                                                             derived clause size number   ing rules previously suggested literature suggest                                                                  clauses occurring assume each   approach leveraging structure problem encoded                                                                  used derive clause   cnf formula order create branching heuristic                                                                  derivation clause called   takes greatest advantage clause learning ex•                                                                 refutation proof shows unsatisfiable   ample apply ideas certain natural satisfiable                                                                    despite simplicity resolution efficiently imple  unsatisfiable formulas obtain significant speedups                                                                  mentable difficulty finding good choices   existing methods                                                                  clauses resolve natural choices typically yield huge stor•                                                                 age requirements various restrictions structure res•   preliminaries                                                olution proofs lead powerful easier implement                                                                  variants treelike regular linear positive resolu•  cnf formula clauses each               tion treelike resolution uses nonempty derived clauses ex•  clause literals literal variable    actly proof equivalent optimal dpll   negation natural think set clauses   procedure regular resolution allows variable re•  each clause set literals clause subset solved path proof   called subclause                            initial clause variants sound com•     let partial assignment variables    plete differ efficiency  regular resolution known   restricted formula obtained replacing vari•       exponentially stronger treelike bonet et al    ables assigned values said simplified bensasson et al  general resolution exponen•  clauses true literal deleted oc• tially stronger regular alekhnovich et al    currences false literals removed clauses  definition  resolution derivation   resulting formula different simplified recursively    trivial iff variables resolved distinct each       satisfiability                                                                                                                   initial clause derived resolving called implied variables decision implied literals              initial clause                                  analogously defined backtracking deci•                                                                 sion variable longer remains decision variable      trivial derivation treelike regular more•                                                                 instead implied variable depending clauses    condition each derived clause use                                                                  learned far decision level decision variable    derivation makes linear trivial derivations                                                                  number current decision variables    correspond conflicts clause learning algorithms                                                                  time branching decision level implied                                                                  variable maximum decision levels decision     clause learning                                             variables used imply decision level step    clause learning proceeds following normal branching    underlying dpll procedure maximum deci•   process dpll conflict unit propaga• sion levels current decision variables    tion conflict occurs branches formula                                                                   implication graph conflicts    declared unsatisfiable conflict graph    analyzed cause conflict learned form unit propagation naturally associated impli•   conflict clause backtrack continue      cation graph captures possible ways deriving    ordinary dpll treating learned clause just like initial implied literals decision literals   ones clause said known stage  definition  implication graph given stage   initial clause learned learning    dpll directed acyclic graph edges labeled sets   process expected save redoing compu•    clauses constructed follows   tation later assignment causes conflict      create node each decision literal labeled   reason                                     literal indegree zero root nodes      given cnf formula unsatisfiable clause learn•  ing terminates conflict branches   clauses used conflict follow directly   indirectly failure clause learning finding   satisfying assignment constitutes logical proof unsatisfi  ability bounds compare size proof   size possibly restricted resolution proof  satisfiability      variations conflict driven learning bayardo jr                                                                    add special node variable   schrag  marquessilva sakallah  zhang                                                                      occurs positively negatively add directed     moskewicz et al  zhang et al  include                                                                      edges    different ways choosing clause learn possibly   allowing multiple clauses learned single con•       node labels distinct identify nodes   flict algorithms proposed        literals labeling variable occurring   demonstrated empirically successful theoretical   positively negatively conflict variable   discussion underlying concepts structures needed    arc conflict literals contains conflict   bounds lacking rest section focuses conflict variable dpll given stage   formal framework                                         conflict implication graph stage contains con•                                                                 flict conflict equivalently thought occurring   definition  clause learning proofk unsatisfiable    residual formula contains clause   cnf formula scheme induced branching            definition implication graph contain con•  sequence result applying dpll unit propa•     flict variables ways deriving single literal   gation branching according using scheme      better understand analyze conflict work   learn conflict clauses end process subgraph called conflict graph figure  cap•  conflict branches size proof tures possibly ways reaching con•  sizett er                                             flict decision variables choice conflict     clause learning algorithms discussed paper   graph strategy solver   based unit propagation process repeat•     thought giving power clause learning adding non  edly applying unit clause rule followed formula sim•   determinism   plification clause exactly unassigned literal definition  conflict graph subgraph im•  remains context convenient work resid• plication graph following properties   ual formulas different stages dpll let partial                                                                    contains exactly conflict variable   assignment stage dpll formula resid•  ual formula stage obtained simplifying fp     nodes path   applying unit propagation                                       node corre•    using unit propagation variables assigned values           sponds decision literal precisely nodes   through actual branching process called decision vari•                      predecessors    ables assigned values result unit propagation           known clause                                                                                                            satisfiability    consider implication graph stage   conflict fix conflict graph contained implication   graph pick cut conflict graph decision   variables side called reason side   conflict literal side called con•  flict side nodes reason side   edge going conflict side form cause conflict   negations corresponding literals forms conflict   clause associated cut   proposition  conflict clause corresponds cut   conflict graph separates decision variables   conflict literal     proof let denote set containing negations   literals given conflict clause preds set   predecessors literals underlying implication   graph let denote set containing literals obtained   unit propagation setting literals true   conflict clause contain conflict literal consider   subgraph gst implication graph induced   literals having edges going   preids fix conflict graph subgraph   st cut conflict graph conflict   side conflict clause      proposition  trivial resolution derivation   clause set clauses setting literals ofc   false leads conflict                                                                     different learning schemes                                                                  different cuts separating decision variables con•                                                                 flict literal correspond different learning schemes fig•                                                                 ure  create learning schemes based cuts                                                                  involving conflict literals zhang et al                                                                   effectiveness clear considered                                                                    insightful think nondeterministic scheme                                                                  general learning scheme pick cut non                                                                 deterministically choosing possible                                                                  associated clause known re•                                                                 peatedly branch variable nondeterministic                                                                  learning subsumes learning multiple clauses single                                                                  conflict long sets nodes reason side                                                                  corresponding cuts form setwise decreasing sequence                                                                  simplicity assume clause learned                                                                  conflict                                                                    practice employ deterministic schemes                                                                  decision scheme zhang et al  example uses                                                                  cut reason side comprises decision variables                                                                    sat bayardo jr schrag  uses cut                                                                  conflict side consists implied variables current de•  proposition  conflict clause derived         cision level scheme allows conflict clause   known clauses using trivial resolution derivation           exactly variable current decision level causing                                                                  automatic flip assignment backtracking   proof light proposition  assume        nice flipping property holds general unique   conflict clause associated cut fixed conflict    implication points uips marquessilva sakallah   graph let denote set variables                   implication graph node current   conflict side including conflict variable decision level path decision vari•  occurs positively negatively conflict side able level conflict variable negation       satisfiability                                                                                                       through intuitively single reason level  scheme starts cut closest con•  causes conflict relsat uses de•       flict literals iteratively moves decision   cision variable obvious grasp marquessilva       variables new associated conflict clause   sakallah  zchaf moskewicz et al         backward search halts cut deci•  use firstuip closest conflict variable sion variables reason side certainly new cut note   grasp learns multiple clauses faced con•      potentially ways choosing literal   flict makes typically require fewer branching steps   cut leading different conflict clauses   possibly slower time lost learning   firstnewcut scheme definition learns clause   unit propagation                                              known motivates following      concept uip generalized decision levels    definition  clause learning scheme nonredundant   current iuip scheme corresponds        conflict learns clause known   learning firstuip clause current decision level   uip scheme learning firstuip clauses    fast backtracking restarts   current level zhang et al   clause learning algorithms use fast backtracking   present comparison learning schemes   uses conflict graph backtrack   conclude uip quite robust outperforms     branching decision recent decisions did   schemes consider benchmarks         contribute conflict stallman sussman                                                                   adds power clause learning current con•                                                                 flict use clauses learned earlier result branching                                                                  apparently redundant variables fast backtrack•                                                                 ing general replaced good branching se•                                                                 quence does produce redundant branches                                                                  reason fast backtracking replaced                                                                  simply learning decision scheme clause re•                                                                 sults present paper independent                                                                  fast backtracking used                                                                    restarts allow clause learning algorithms arbitrarily                                                                  restart branching process clauses learned far                                                                  retained treated additional initial                                                                  clauses baptista silva  show un•  figure  conflict graph depicting various learning schemes  limited restarts make clause learning powerful                                                                  cost adding nondeterminism unless stated                                                                  clause learning proofs assumed allow restarts   firstnewcut scheme   propose new learning scheme called firstnewcut             clause learning general resolution   ease analysis helps demonstrate power   clause learning like point use   lemma  let cnf formula variables   scheme prove theoretical bounds effec•   general resolution proof size   tiveness formulas studied           clause learning proof size ns using non     key idea firstnewcut make con•         redundant learning scheme restarts   flict clause relevant current conflict possible                                                                  proof general resolu•  choosing cut close conflict literals                                                                  tion proof each initial clause   firstuip scheme tries achieve slightly different                                                                  derived resolving clauses occur•  manner following definitions fix cut conflict                                                                  ring earlier contains derived clause strict   graph let set nodes reason side                                                                  subclause derived resolving previously oc•  edge node conflict side  rea•                                                                 curring clauses replace trivial   son side frontier cut let conflict clause                                                                  simplifications derivations used obtain   associated cut                                                                  proof size doing repeat•  definition  minimization conflict clause cs pro•   edly remove redundant clauses leave   cess repeatedly identifying exists node   simplified proof larger size assume   predecessors moving conflict loss generality clause   side removing                                    clause learning proof constructed choos•  definition  firstnewcut scheme start cut       ing derived clauses order learning each   conflict side consists conflict literal necessary restarting suppose clause known   repeat following associated conflict clause af• decision level zero trivially true   ter minimization known pick node                   initial clauses   conflict side pull predecessors cor• known clauses resolution generates   respond decision variables conflict side finally case conflict known clauses de•  learn resulting new minimized conflict clause             cision level zero clause learning proof complete                                                                                                            satisfiability 
