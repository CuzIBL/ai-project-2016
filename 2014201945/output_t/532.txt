                               firstorder probabilistic inference                                                  david poole                                       department science                                        university british columbia                                      vancouver bc canada vt                                             poolecsubcca                              httpwwwcsubccaspiderpoole                          abstract                            probabilistic reasoning challenging logical rea•                                                         soning number reasons       proposals firstorder be•   • use information making       lief networks quantify individ•   probabilistic inference new information change old       uals typically let reason conclusions       individuals know       • dont want double count evidence       instances quantify    probabilistic information people       individuals population       use particular individual say fred       population size matters need rea•      reuse information fred       son members population  • cases size domain affects       necessarily individually paper presents     probability example developed determin•      algorithm reason multiple individuals     ing probability person guilty particular       know particular facts       crime depends population population size af•      want treat group com•    fects number people guilty       bining unification variable elimination lets following example shows need reason       reason classes individuals needing individuals dont know indi•      ground theory                          viduals know shows need consider                                                          population size                                                          example  person town seen committing crime    introduction                                         person unusual hair colour car colour   belief networks bayesian networks pearl  pop• joe purple person tall know   ular representation independencies random vari• joe big feet tall correlated having big   ables zerothorder representations rea• feet probability joe guilty need   son multiple individuals make each property model probabilities observations depen•  each individual separate node               dence lead consider belief networks                                                          representation probability joe guilty depends     proposals allow ways lift belief                                                          population population town small   networks order representation tradition                                                          probably guilty unlikely   breese  horsch poole  wellman breese                                                          fitting description town city containing   goldman  essentially allowed parameterized belief                                                          large number people probably innocent   networks grounded each individual                                                          expect people fit description   second tradition poole  koller pfeffer  pfef  fer koller milch takusagawa  allowed richer example points number features   order probabilistic representations belief net• ignored firstorder probabilistic models   works special cases individuals need population sizes account need   assumed exist know         able reason individuals know                                                          individuals know exist dont know     cases want reason set                                                          particular dont ground   individuals group wed like avoid explicit reasoning                                                          theory reason millions people city separately   each individual separately great advance                                                          ignore relevant information   theorem proving invention reso•                                                         people know   lution unification robinson  big advance   doing resolution clauses contain free variables  representation   implements potentially unbounded number resolutions   grounded representation goal current work assume domain represented parametrized   allow similar savings probabilistic reasoning belief network nodes parametrized       probabilistic inference                                                                                  domainrestricted types populations idea    explored previously horsch poole  kersting    raedt  similar plates buntine      dwell semantics paper   just assume program means grounding sub•   stitution constants each individual domain    parameter      paper explicitly bayesian terms firstorder    probability halpern  probabilities degrees    belief statistical assertions proportions pop•   ulation quantifying random individuals    does bacchus  individuals stan•   dard universal quantification individuals    information probabil•   ity property exploit computationally figure  robbing example parametrized belief network ex•     paper built different traditions ample  using plates parametrized random variables   logic programming theorem proving side   probabilistic reasoning side unfortu•  nately use terms notations variable logical connectives   domain different things  probabilistic assertion form   used different ways paper order avoid   confusion use neutral terms use traditions                                                          parameters dx populations set   different communities appropriate                  inequality constraints parametrized     population set individuals population corre• propositions using parameters   specifies   sponds domain logic cardinality population probability distribution omit corresponding   called population size example population syntactic constructs    set people living vancouver popula• parametrized belief network consists   tion size  million people population size finite dag nodes parametrized random vari•  infinite                                               ables     allow random variables parametrized  association population each parameter   parameters start upper case letter constants start assignment range each functor   lowercase letter parameters correspond logical vari• set probability assertions each node given   ables variable prolog parameters parents   typed population parametrized random variable example  formalize example  consider   form functor function      parametrized belief network figure    symbol predicate symbol each parameter                                                          shown using plates  buntine    constant each functor set values called range                                                                         parametrized random variables assume   functor                                                          haircolour different people independent     examples parametrized random variables                                                          depend conservative town associated   haircolourx likesxy likesjoex                                                          network conditional probabilistic assertions    townjeonservativeness functor argu•                                           ments hairjcolour likes townjeonservativeness   functors     given assignment constant each parameter   parametrized random variable represents random vari•  able example suppose hair colour range black   blond red grey purple orange multicoloured   haircoloursam random variable domain black knew background knowledge sam ex•  blond red grey purple orange multicoloured ception purple hair probability    parametrized random variable represents set random replace probabilistic assertion   variables each parameter assignment different pa•  rameter assignments variables parametrized ran•    phaircolourxpurpleconservative     dom variable result different random variables ex•                                                           herc use plates just visual help real meaning   ample haircolourjred different random variable probabilistic assertions plates difficult interpret   hairjcolour joe                                     complex interactions parameters     parametrized primitive proposition expression interpret probabilistic assertions   form means parametrized random         use conservative abbreviation   variable value parametrized proposition built townjeonservativeness  conservative malex abbreviation   parametrized primitive propositions using normal sexx  male jall height  jall                                                                                    probabilistic inference      phaircoloursampurple     use continuing example     grounding parametrized belief network belief   network consists instances parametrized ran•  dom variables each parameter replaced in•  dividual population ground term denoting   individual     intuitively parametrized belief network represents huge   belief network parametrized random variables figure  design fove answer   repeated each individual population associated grounded representation carried variable   parameter constraint true elimination   example  people represent belief   network  nodes                                                         unit instantiate parameters need    order variable elimination                    general reason individuals ones                                                         know extra information unit   problem consider given parametrized belief parametric factor parfactor triple   network set observations possibly parametrized set constraints parameters set   query determine conditional probability instances parametrized random variables ms table representing   query given observations assume evidence factor random variables nonnegative reals   conjunction existentially quantified parametrized prim• intuitively parametric factor represents ground   itive propositions                                   instances factor instantiation parameters     consider problem parametric probabilistic infer• satisfies constraints   ence stages parameter appears   parents node appears node example  parametric factor represents con•  observations variablefree case ground ditional probability tables figure    theory each random variable limited number   parents section  present second case table represents function haircolour   parents contain extra parameters case conservativeness nonnegative numbers in•  need way aggregate populations section dexed looks like   considers existential observations queries               hairjcolour  conservativeness val     algorithm based variable elimination ve zhang   purple      conservative        poole  eliminate nonobserved non    purple       liberal             query random variables time firstorder ve      blue         conservative        fove eliminate instances functor  blue         liberal               strong relationship work lifting   theorem proving chang lee  given ground instances parametrized ran•  proof procedure construct proof procedure logical vari• dom variable case need mark random   ables case parametrized random variables variable table distinguish instances   general correctness shown proving example  suppose person friend   answer grounded theory carried                                                         depends likes likes   variable elimination figure                                                          distinct cases  case    parametric factors                                friendsx parent second                                                         case friendsx parents represent   ve factor unit data used during computation use   ve factor function set random variables   nonnegative real number initial factors condi•  tional probabilities main operations multiplying fac•  tors summing random variables factors subscripts likes likesn represent different   conditioning observed random variables summing instances likes table factor friends   nonobserved nonquery random variables likesi likesi eliminate likes relation•  extract posterior probabilities remaining factors ships consider likes ukes   multiplying normalizing remaining factor     firstorder variable elimination use generalization  splitting   factor want treat instances factors foundation parametric variable elimination split•                                                        ting operation splitting plays analogous role applying     general potentially eliminate instances func•  tor necessarily instances leave instances substitutions theorem proving   eliminated later paper eliminat• concerned instance created   ing instances query instance        instances left       probabilistic inference                                                                                definition  suppose parametric factor contains pa•     multiplying parametric factors   rameter split        ve eliminate variable multiply   constant parameter does contain  factors contain variable sum variable              results parametric factors      resultant factor                                                            variable elimination need multiply factors                                                          contain variable eliminated parametric vari•  replacing     able elimination given parametric factors instances   instance substitute second para• need multiplied instances   metric factor called residual parametric factor  dimension resulting factors different dif•                                                         ferent instances     substitution form                                                            product parametric factors general results     distinct variables terms assume                                                          set parametric factors intuitively splitting   substitutions normal form does contain                                                          parametric factors renaming parameters    substitutions resulting standard unification                                                          guarantee parametric factors grounded   algorithms normal form chang lee                                                           result factors ground   substitution normal form result                                                          factors multiply   replacing each corresponding sequentially   order parallel                                 determining parfactors multiply     instead just applying substitutions normal theorem suppose parfactors   proving need split general idea                variables renamed differ•  applying substitution parfactor restricts set ground ent wherepi unifiable instances   instances need split parfactor dont need eliminated let   split just renaming variables substituting value split split putting residuals set   variable doesnt appear parfactor         parfactors instances resulting nonresidual     split parfactor substitution totally  parfactors multiplied ve   ordering elements substitution              following abstract example designed show   carrying following procedure results final needs considered multiplying parfactors isnt   instance set residual parfactors          meant meaningful                                         example  suppose eliminate multiply                                                          parametric factors                                                                                                                                                                                                                                                                              ground parameters instances                                                          multiplied ve wouldnt   note final value applied unification finds general instances identical   substitution  create residuals                                resulting substitution     close relationship splitting equal•  ity paper splitting value variable split parametric factor  resulting   contextual variable elimination fpoole zhang                                                    observations                                                                                                                                                 parametric factor  residual parametric factor in•  observe ground value carry analogous stance parametric factor  needs multiplied   operation ve project tables observed val• instance parametric factor  eliminating   ues split ensure affect doesnt participate product   appropriate ground variables                        similarly split   resulting   example  condition fact joe purple hair                                           purple car shoe size  reason separately   joe individuals   treated group                                                                                         parametric factor example  para• parametric factor  residual factor doesnt partici•  metric factors                                        pate elimination instances                                                            multiplied eliminating pb                                                          variable elimination                                                          determining dimensionality product                                                          example  instances parametric factors                                                            multiplied ground parametric factors       total order does affect instance created does affect   carry ve product   residuals created                           factors dimension different                                                                                    probabilistic inference instances need splitting   ensure products form parametric   factors     suppose parfactors             need multiplied    identical nonunifiable   mgup incompatible constraints know   instances product dimension   pv identical unify   mgu consistent split   mgup  resulting instances residuals   identical instances nonunifiable instances   multiply each instance created each instance   created      know instances             dimension create parfactor                          product   tables maintain dimension each   member members common   treated variable product   members dont unify functor   treated different variables product   table   example  need multiple parfactors     notice unify unifier                split parametric factor    rename replacing                                                                                                            multiply parametric factors   producing                                                         product factors parametric factor    represents factors dimension created   multiplying factors instances parametric factors         multiply parametric factors   producing effective population size product populations                                                          parameters number excluded constraints                                                      each element table                                                          power effective population size   factor  abelled   factor labelled factor   parametric factor  represents         aggregation populations   factors dimension created multiplying factors parameters parents node   instances parametric factors         node number parents grows popula•    complicated remember para• tion size need specify node function   metric factor  represents mrm — factors assuming parents possibilities node   populations size   logical parents logical max   factors                                               parents average parents true iff greater     multiplied appropriate parfactors parents true vote parents according   ready sum variables eliminated voting scheme example majority wins   remember eliminating           function zhang poole  analysis   just eliminating random variable arbitrary associative commutative oper•  eliminating number variables equal product ator parents order make presentation   population sizes parameters ap•        simpler paper assume operator logical   pear parametrized random variable elimi• diez galan  straightforward use   nated grounding multiplying number fac• techniques zhang poole  extend   tors equal effective population size parameters operators       probabilistic inference                                                                                 
