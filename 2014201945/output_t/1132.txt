 session  automatic programming                                                   heuristic methods                                    mechanically deriving inductive assertions                                                        ben hegbreitt                                             bolt beranek newman                                                cambridge massachusetts                             abstract           current methods mechanical program                        elspas green levitt waldinger   verification require complete predicate                      independently worked problem using   specification each loop                    difference equations aid specifying   tedious errorprone producing program                   assertions cooper previously studied   complete correct predicates reasonably                problem observed inductive   difficult facilitated machine                  assertion obtained hand construct­  assistance paper discusses heuristic                     ing terms loop expansion   methods mechanically deriving loop predi­                  generally shows infinite union   cates boundary conditions                     mechanically completing partially specified   loop predicates                                                     method uses different approach                                                                  generate loop predicates                         introduction                             supplied output predicate dragged                                                                  backward through program modified         mechanical verification program                       passing through program units produce                                                                  trial loop predicates trial loop predicates   correctness desirable possible given   program firstorder axiotnatization                loop inconsistent modified   semantics predicates input output                according various heuristics generate   each loop verification output                      better trial predicates   predicate mechanical process cf                    possible accept programmersupplied    recent surveys                                   inductive assertion gives essential                                                                  idea loop mechanically         input output predicates necessary                details arrive complete correct loop   natural programmer supply                        predicate heuristics domain   completely specifying predicates                  specific paper uses integers integer   loops tedious errorprone redundant arrays subject domain   tedious large   stereotyped required errorprone                      paper divided sections   partly tedium partly                section  illustrates approach   notation natural                     simple examples section  discusses   procedural steps redundant                    general method domainindependent heuristics   predicates repeat information manifest                heuristics specific integers   program purpose paper                   section  treats number complex examples   show loop predicates derived                    show heuristics used   mechanically partially specified                    exhibit coupling section  discusses   loop predicates completed mechanically                 implementation application method                                                                  notation simple flowchart   example lend weight experience                language used input predicate                                                                  denoted output predicate   thesis king presents programs   submitted verifier complex                 unprimed primed variables predicates   example  incorrect loop predi­                 denote values predicates values   cate inductive assertion weak                 control flows through set   consistent imply desired output                flowchart boxes transformation   predicate theorem prover rejected                  flowchart path ai a£ain denoted                                                                  iii£     loop predicate inability                           handle multiple quantification predicate   error overlooked                                                            simple examples     sense trivial                           flowchart figure  taken    formed predicate expressions each loop                 computes quotient remainder   enumerated proofs correctness                        integer divided integer   dovetailed succeeds valid                  xqyr ry  entrance   theorem subject domain provable                implies arc predicate   eventually verify program                 p«x q« rx holds verify   mechanical verification possible                     flowchart suffices loop   general procedure                         predicate arc   computationally intractible                                                                             el                                                                                               talso harvard university cambridge mass                                                                                                                                                                                                                       standard means generating loop                                                                  predicate use start trial                                                                  choice pt»l ■  gives                                                                  pry • xqyr sr ry  converting                                                                             assertions mechanically                                                                             expedite task proving programs correct                             conclusion                                                                                                   acknowledgements           having shown possible    number cases derive inductive                                  author like thank peter    assertions heuristics turn                                 deutsch carl hewitt ralph london jay    application mechanical verifica­                            spitzen discussions concerning various    tion                                                             aspects mechanical program verification                                                                             ralph london source observation    implementation                                                                             predicate incompleteness example                                                                             discussed section            implemented technique    examples result hand                                                                             research supported advanced    simulations appears programming                                                                             research projects agency department    reasonable means trivial                                                                             defense contract dahcc           modifying trial loop predicates    searching space possible modifications                                                     references    heart method problemsolving    language    facilities                           rw floyd assigning meanings    patternmatching backtracking                                        programs proc symposium    multiple environments preferred                                         applied mathematics vol  ed jt    implementation tool need pattern                                     schwartz ams pp       matching invoke heuristics backtracking    make retractible trials clear                               elspas kn levitt rj waldinger    experience hand simulation suggests                                  waksman assessment techniques    additionally breadthfirst search capability                                 proving programs correct computing    multiple environments required                                      surveys vol   pp  june    incorrect choice heuristic                                       leads recognizable failure                            rl london current state proving    nonconvergent series loop predicates                                  programs correct proc acm th annual     each inconsistent                                                           conference pp             theoremproving required                             king program verifier doctoral    range contemporary domainspecific                                      dissertation science dept    theorem provers                                   carnegiemellon university pittsburgh    programmed problemsolving language                                    pennsylvania             interface heuristic predicate                          elspas mw green kn levitt    generation theorem proving                                          rj waldinger research interactive    organized ways disjoint organization                                 programproving techniques sri   separate use theorem                                      menlo park california      prover oracle returning                                                                              dc cooper programs mechanical    replies formula submitted                                                                                   program verification machine intelligence    valid unsatisfiable invalidbutsatisfiable                                 £ american elsevier pp      canttell escape clause undecidable    domains better organization based                               jf bulifson ja derksen rj    observation heuristics used                                    waldinger qa procedural calculus    trial predicate generation theorem                                      intuitive reasoning sri technical    proving                                   note  november     exploited combining    closely seeking validate                               dv mcdermott gj sussman    implication trial predicate                                  conniver reference manual mit ai lab    theorem prover generate number                                        memo      clauses invalid satisfiable                             hewitt planner language    useful new goals                                     proving theorems manipulating models    try additional conjuncts                                    robot phd thesis mit department    trial predicate variation                                 mathematics january     application                                                              lp deutsch interactive program                                                                                   verifier phd thesis department           believe proposed                                     science university california    techniques capable generating                                   berkeley forthcoming june      inductive assertions large complex    program reasonable time scale    assume program submitted    verifier loops tagged    assertions varying degrees completeness    complete partial untagged    general interaction required    developing correct assertions proving    difficult lemmas desirable    mechanically    practical proposed technique allows    completing certain loop predicates    generating certain inner predicates outer    ones suffice    significant portion inductive                                                                          
