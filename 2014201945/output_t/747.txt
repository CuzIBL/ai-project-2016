                    representing kriegspiel states metapositions                                   paolo ciancarini gian piero favini                  dipartimento di scienze dell’informazione university bologna italy                                     email ciancafavinicsuniboit                          abstract                             metapositions                                                        original concept metaposition introduced      novel approach incomplete infor sakuta  used solve endgame posi      mation board games based concept tions kriegspiellike game based shogi primary      metaposition merging large set goal representing extensive form game through metapo      possible game states single entity sitions transform imperfect information game      contains state current informa perfect information offers important advan      tion set merging operation allows artiﬁ tages simpliﬁcations including applicability tradi      cial player apply traditional perfect information tional techniques associated games metaposi      game theory tools minimax theorem    tion described quoted work merges different      apply technique game kriegspiel equally likely moves state extended      variant chess characterized strongly incom treat moves different priorities      plete information players oppo ﬁrst formulation metaposition set game      nent’s pieces try guess po states grouping states sharing strategy spaces      sitions listening messages referee legal moves available player given      provide general representation kriegspiel ﬁrst player guaranteed legal state      states through metaposition trees  set consider game tree      weighed maximax algorithm evaluating meta    point view metapositions instead single game states      positions tested approach competing  readily seen game nominally      human players          perfect information ﬁrst player moves current                                                        metaposition coincides current information                                                        set updated playing boards                                                        certainly legal opponent’s moves generate number    introduction                                       metapositions depending resulting strategy space                                                        ﬁrst player ﬁrst player knew new strategy space  incomplete information board games excellent testbed able uniquely determine new  study decision making uncertainty metaposition different metapositions deﬁni  games subset current state game tion different strategy spaces associated  known players resort various methods unfortunately player’s strategy space known  order ﬁnd effective strategy                forehand games kriegspiel obviously    kriegspiel chess variant players way ﬁnd legal trying  opponent’s pieces moves rules chess extension deﬁnition metaposition  stay game transformed incomplete informa needed reﬁning concept strategy space  tion game built program called darkboard likely illegal referee’s board good  plays game kriegspiel searching game tree strategy player illegal moves main mechanism  metapositions preliminary results quite acquiring information opponent’s piece setup  encouraging                                          makes little sense discard analysis    paper organized follows section referee knows illegal  concept metaposition apply second formulation metapositions follows  cept kriegspiel sect  show apply weighed  maximax metapositions sect  introduce eval deﬁnition set possible game states  uation function game tree metapositions finally ⊆ information set comprising game states com  sect  experimental results draw patible given sequence observations referee’s mes  conclusions                                          sages metaposition opportunely coded subset                                                    ijcai                                                    ⊆ ⊆                                bolognesi ciancarini  bolognesi cian                                                      carini  analysis limited cho    strategy space set moves legal sen endgame examples king rook versus king  game states contained metaposi krk small size game’s information  tion pseudolegal moves assumed legal set particular scenarios limited pos  player’s standpoint necessarily referee’s sible squares opponent’s king metaposi  metaposition endowed following functions tions coincide exactly information set quoted    • pseudomove function pseudo updates metapo papers  present work deals generic      sition given try observation ref game kriegspiel opponent controlling arbi      eree’s response                            trary number pieces assumption unreason    • metamove function meta updates metaposition able      unknown opponent given approach coding kriegspiel metaposition es      sociated referee’s response                      sentially abstract representation chessboard contain                                                        ing real pieces belonging players pseudo    • evaluation function eval outputs desirability                                                        pieces ghost pieces exist trivially      given metaposition                                                        metaposition coded fashion represents number                                                        states equal product number pseudopieces    deﬁnition follows metaposition su each square each square following infor  perset game’s information set clearly mation attached  formance algorithm improve tends  plausible game state contained metapo • piece presence square contains allied  sition contain states compatible piece  history reason twofold hand  ing able insert opportune impossible states enables • pseudopiece presence bitﬁeld representing pos  agent represent metaposition compact form sible presence opposing pieces given location  opposed immense memory computa      seven possible pseudopieces number  tion time required each state listed explicitly appear simultaneously square  hand compact notation metaposition makes king queen rook bishop knight pawn  easy develop evaluation function evaluate special pseudopiece indicating  metapositions instead single game states square necessarily occupied  crux approach metapositions player •  illusion perfect information mainly age information integer representing number  der enable player use minimaxlike method moves agent obtained information  metapositions evaluated instead single states state square ﬁeld provides integration  reason important metapositions described game’s history metaposition form  concise way suitable evaluation function ap easily computable  plied    interesting note metapositions op metaposition store usual information  posite direction approaches monte carlo sam concerning things castling rights ﬁfty moves  pling aim evaluate situation based signiﬁ counter addition counters enemy pawns pieces  subset plausible game states left chessboard easy notice notation  interesting aspects present research extremely compact fact each square represented  moves theoretical limits monte carlo approaches bytes data  stated example frank basin  tries pseudopiece essentially ghost piece  overcome fact metapositionbased approach does properties real counterpart moves just like real  assume opponent react best defense piece through fellow pseudopieces ex  model subject strategy fusion uncertainty cept speciﬁc cases example possible enforce  artiﬁcially removed                               rules prevent vertical movement ﬁle op    nature “opportune coding” required represent ponent’s pawn known  metaposition superset usually computationally metaposition follows mantains following invari  tractable information set depend speciﬁc game ant pseudopiece absent given location  far kriegspiel concerned results piece type appear state cur  ciancarini et al  information set analysis order rent information set opposite true  win kriegspiel endgame authors use infor relaxed movement rules pseudopieces appear  mation set order recognize position patterns king places real enemy piece according  pawn versus king kpk endgame performing information set equivalent saying ⊆  search problem space                       metaposition represents larger superset    ﬁrst representation kriegspiel situations using meta information set certain phases game pseu  positions evaluation function given dopieces location                                                    ijcai                                                      updating knowledge                               estimate number nodes involved rules  metapositions deal moves pseudomoves option readily seen  metamoves pseudomove represents agent’s • pseudomoves legal  legal illegal associated observa included generation algorithm  tion set umpire messages sent response illegal game state  tempt metamove represents collective grouping                                                          • pseudomoves nonempty squares  possible opponent’s moves associated ob                                                            capture pawn moves need  servation darkboard implements pseudo meta                                                            distinguish pawn piece captures  accepting metaposition observation updated  metaposition returned output clearly pseudo • pseudomoves lead checks  reduces uncertainty eliminating pseudopieces • pieces lead multiple check types  meta increases spawning new pseudopieces   discovery checks    intuitively meta does things clearing pseudo •  pieces moved piece’s path infer position enemy pawn tries following  opponent’s king check messages pseudo ev    ery pseudopiece spawn copies square simple multiplication factors yield  reach readily seen operations dozens potential umpire messages single  maintain ⊆ constraint deﬁnes metaposition worst estimate does account  number optimizations possible improve ac possibility illegal moves illegal forces  curacy quality play loose player try turn yield um  nature kriegspiel metaposition required pire messages illegal moves number cases    metaposition represents grouping large rises exponentially furthermore opponent’s metamoves  number positions told apart pose problem lead large number  clear updating data structure trivial different messages  task truth process does account better                                                          • opponent’s turn pieces captured  agent’s computation time updating explicitly listed                                                            unless heavily covered endgame  information set pseudomove involve ﬁnding  positions compatible outcome le • king typically end threatened direc  gal legal check discarding ap tions through  possible check types  plying compatible chessboards updating • pawn tries occur  metaposition metamove prove     daunting task consider each possible  each possible chessboard set reasons metaposition evolved  problem overcome through suitable ap exactly way according umpire  proximation limiting number chessboards messages applies player’s pseudomoves  manageable pool parker et al    opponent’s hidden metamoves heuristics    appear strange heart program’s rea place pick ‘reasonable’ message accurate  soning does lie evaluation function eval effective  pseudo  meta equivalent chess consequence tree’s branching factor  playing software trivially update position clearing player’s turns equal number potential moves  bit setting evaluation function’s equal  opponent’s moves equivalent  task evaluate current knowledge updating algo saying player does really opponent  rithms compute knowledge important acts like agent hostile environment  infer information possible process fact noted assumption  interesting point approach updating minimax algorithms make suppose player  functions evaluation function improved min choose minimizes evaluation  separately increasing program’s performance function expecting opponent play  need components knowledge each best possible instead assume average                                                 played does alter state game                                                        substantially                                                          side effect possible umpire message    game tree structure                                opponent’s metamove explored metamove  metaposition’s evolution depends exclusively merged generated each level  umpire’s messages clearly necessary simulate game tree longer represents ply  umpire’s messages game tree constructed interestingly branching factor kriegspiel model  ideally game tree include possible signiﬁcantly smaller average branching factor  umpire message available pseudomove typical chess game seeing chess player  evaluated weighed algorithm keeping account set  potential moves given time  likelyhood each observation unfortunately quick kriegspiel estimated stand approximately twice                                                    ijcai                                                    value theory practice yields smaller values tighter happens program update knowl  defence patterns twoply game tree chess edge accordingly  feature    leaves kriegspiel accuracy prediction drops  tree  computational quickly average middle game umpire answers  head associated calculating  metaposition nodes far nonsilent message  time clearly  greater simply generating  position nodes reliability method degrades quickly tree gets  kind pruning algorithm needed deeper exploration pointless past                                                        certain limit shows selection    umpire prediction heuristics                     algorithm based method weigh evalua  bolognesi ciancarini  tackling kriegspiel tions differently depending tree  endgames artiﬁcial player’s moves shallow nodes weighing deeper ones  three possible outcomes silent check illegal having exploration fruitless past certain threshold  choose expand rely evaluation function  pick unfavorable option  selection algorithm  modest luxury reach present work primitives discussed  number options different probabili possible selection algorithm  ties remaining way propose set metapositionbased player variants approach  hardcoded heuristics work time developed optimizing algorithm fast play  make sure work reasonably internet chess club using methods pruning  proved wrong player generates umpire messages killerlike techniques ﬁrst basic formula  follow pseudomoves following way      tion    •                                                     stratagem metapositions aimed mak      assumed legal ing traditional minimax techniques work kriegspiel ac      time illegal just provides information free tually min’s moves really exist min      legal usually desirable alternative choice use compact form    • player’s moves generally capture tree each node representing plies algorithm      following exceptions                    resembles weighed maximax maximax wellknown        – pawn tries capturing moves criterion decisionmaking uncertainty variant          nature                             weighed meaning accepts additional parameter                                                        α ∈    called prediction coefﬁcient algorithm        – nonpawn moves destination square’s speciﬁes maximum depth level search fur          bit set place necessarily thermore deﬁne special values ±∞ possible          nonempty encourages program retali evaluation function eval represent situa          ate captures                              tions desirable undesirable coincide        – illegal agent consider victory defeat expanded          identical shorter square cap deﬁning mt set metapositions mv          turing                                  set possible chess moves selection algorithm makes    • apply captured entity use following functions      assumed pawn unless pawns impossi • pseudo   mt  × mv  →  mt generates      ble square case piece      new metaposition existing pseudo    • pawn tries opponent generated piece simulating umpire’s responses described      just moved potential target pawn capture section                                                          •           mt  → mt    hand following rules determine um meta              generates new metapo  pire messages follow metamove                     sition simulating opponent’s virtual                                                            umpire messages    • opponent captures pieces                                                          • generate      mt  → vectormv genera      constant risk allied pieces run considered                                                            tion function      evaluation function instead                                                          • eval     mt×mv×mt     →  evaluation func    • opponent threatens allied king                                                            tion accepting source metaposition evolved meta      king protection matter evaluation function                                                            position obtained means pseudo    • pawn tries artiﬁcial player generated    assumptions overall reasonable algorithm deﬁnes value function metaposition  try avoid sudden unjustiﬁed peaks evaluation func pseudocode listed figure   tion umpire silent time captures actual implementation somewhat complex op  considered certain receives unfair timizations minimize calls pseudo  advantages concept ‘lucky’ easily seen function satisﬁes property  reveals opponent’s king pure coincidence node’s weight decrease exponentially depth                                                    ijcai                                                    function value metaposition met mov int depth real just moved clear value true decreases  begin                                                 piece’s safety statistically speaking risk losing    metaposition met  pseudomet mov              piece moved higher value  means    real staticvalue  evalmet mov met           impossible piece captured    depth ≤  staticvalue  ±∞                value  indicates highrisk situation     return staticvalue                                 unprotected piece                                                     noted material safety does    begin                                               represent probability piece captured      simulate    opponent   recursively        estimate result simply provides reasonable mea  max                                                  sure exposure piece urgency     metaposition met  metamet                   protected moved away danger     vector movevec  generatemet                                                          position     real best  maxx∈movevec valuemet depth              weighed   average    parent’s      player includes following factors evaluation  value                                                function     return staticvalueαbest − α                  • pawn advancement bonus addition fur    end                                                     ther bonus presence multiple queens  end                                                      chessboard                                                          • bonus ﬁles pawns friendly pawns       figure  pseudocode listing value function     ﬁles                                                          • bonus number controlled squares com  given best maximax sequence depth root leaf puted special protection matrix factor  mmd each node provided static value  akin mobility traditional chessplaying software  ssd actual value depend static                                                        addition current position affects material rating  values each node mk relative weight α   accuracy program’s foresight decreases certain situations change values player’s  weights associated engine tend favor pieces example value pawns increased  good positions short run                      player lacks sufﬁcient mating material                                                          additional component evaluated darkboard    parameter α meant variable used                                                        considering checkmating opponent special func  adjust algorithm’s willingness risks                                                        tion represents perceived progress winning game  level conﬁdence heuristics generate sim                                                        partly borrowed bolognesi ciancarini   ulated umpire messages higher values α lead                                                        encouraging program push opponent’s pseudokings  conservative play higher reward short run                                                        edges chessboard  lower values tend accept risk exchange  possibly higher returns later generally player  information  having upper hand favor open play los  ing player tends play conservatively reduce chance crucial advantages using metapositions lies  increasing material gap material balance ability estimate quality quantity informa  factors used dynamically adjust tion available player fact operating  value α during game                           large superset information set necessarily                                                        incorporates current true state game acquire                                                        formation simply means aim reducing size    evaluation function metapositions           metaposition’s position set indicator based  evaluation functions chess programs usually size example sum pseudopieces  three main components material count mobility posi chessboard enter evaluation function player  tion evaluation metaposition evaluation function strive states reduced uncertainty ap  does work single chessboard entity repre proch monte carlo belief state  senting billions chessboards need introduce works small subset information set each  equivalent different concepts example evalua single state dogma evaluated  tion function currently three main components player attempt gather information  try maximize game material safety posi state chessboard evaluation function designed  tion information                                make information desirable precisely designed                                                        make lack information undesirable reducing func    material safety                                  tion chessboard entropy satisfying                                                        following  material safety function type mt × sq × bool →    accepts metaposition square boolean • function’s value increases metamove  returns safety coefﬁcient friendly piece given opponent metam ⇒  square boolean parameter tells piece em  ≥ em                                                    ijcai                                                    
