       behavior bounding effective comparisons agents  humans                                            scott wallace john laird                                             artificial intelligence laboratory                                                   university michigan                                                    ann arbor mi                                 abstract                              human counterpart identified addi•                                                                 tion automated behavior comparison serve core         paper examine methods comparing          intelligent tutoring roles reversed        human agent behavior results             novice humans behavior compared agents        comparison used validate           behavior serves gold standard information        model human behavior score turning test         students errors used guide lesson        guide intelligent tutoring introduce        applications basic process comparing behavior        behavior bounding automated modelbased ap•           identical differences stem source be•       proach behavior comparison identify           havior human machine expert novice        approach used human             results comparison used identify programming        agent behavior demonstrate requires           errors score test guide lesson simplicity        minimal human effort use efficient     cohesiveness paper focus using behavior compar•       working complex agents finally             isons aid knowledgebase validation problem        show empirical results indicating approach      discussion results applied tasks        effective identifying behavioral problems               certain types agents superior per•       formance compared benchmarks                                                                     interactive humanlevel agents       introduction                                              need behavior comparisons particularly pro•                                                                 nounced agent masquerade human coun•   past years ai research successfully      terpart expert agents term interac•   demonstrated number techniques constructing agents   tive humanlevel agents distinguished properties    exhibit intelligent behavior applications agents performance judged based ability    additional requirement agents behavior consistent behave human expert behave secondly like    human expert especially true tasks humans interactive humanlevel agents in•   agent simulate human train•    teract external environment order perform    ing situations virtual social experiences online tasks    gaming                                                                    good example interactive humanlevel agent      tasks standard approach developing ex•    tacairsoar jones et al  tacairsoar flics virtual    pert level agents begins knowledge acquisition unfor•   military planes simulated training exercise team•   tunately knowledge acquisition usually imperfect re• mates tacairsoar agents human counter•   sult significant resources spent validation parts agents intended model expert level    requires knowledge engineer domain expert    behavior acceptable just achieve final states    monitor agents behavior large number test sce• shooting enemy planes instead agent    narios paper present method automatically  generate behavior expert meeting    comparing actors behavior used over•    requirement challenging expert perform    come validation bottleneck                              task differently different occasions      potential uses automated behavior comparison ex•                                                                    remainder paper begin examin•   tend knowledgebase validation example                                                                  ing simple method comparing agents be•   generalized approach comparing actors behavior                                                                  havior human experts behavior deficiencies    used objectively score turing test perfect result                                                                  method lead examine sophisticated modelbased    indicated detectable differences                                                                  approaches section  summarize desirable features      work supported office naval research con• approach beginning section  present   tract nco                                         method modelbased behavior comparison        multiagent systems                                                                                                        automated behavior comparison                      impossible leverage regularities exist large    actors behavior compared behav•       classes goal directed tasks    ior represented form processed    comparison algorithm eas•             model based approaches    ily storing individual instances behavior behav•    improve simple approach automated error de•   ior traces behavior trace sequence tuples —      tection described section  propose modelbased ap•                                         each tuple     proach comparing actors behavior central ap•            indicates environmental state goals be• proach properties behavioral model choice    ing pursued actor action performed  guided following requirements    state action portion behavior trace low complexity unless new model significantly    captured observing actor perform specified task        complex agents knowledge base understand•   actors goals necessary disambiguate instances          ing model behavior represents eas•   different actions performed equivalent environ•        ier examining knowledge base directly    mental states depending actor human                                                                       model asset provide adequately ac•   agent actor need record goals                                                                       curate representation behavior remaining easy    change during task                                                                       understand      simple approach comparing actors behavior   performed following steps                         low effort argued main uses                                                                       behavior comparison reduce cost validating   acquire set behavior traces human expert          humanlevel agent order accomplish goal        agent specified task sets         human effort required build behavioral models        represent human experts agents behavior re•          remain low        spectively number different trials                                                                  compatibility behavior comparison number poten•   extract relevant features behavior traces in•       tial applications rely able examine        formation gathered through observation use•         human software agent behavior rep•       ful detect errors step salient features  resentation limited data collected        sets used create new sets se•        types participants        quences                                                                   efficiency humanlevel agents operate complex environ•  compare each sequence contents                            ments perform tasks variety differ•       compute minimal number edit operations insert         ent ways address problem model built        delete modify required transform          using observations expert behavior case        sequence simi•         possible generate model efficiently        lar each edit operation indicates potential error     observations required   report deviations removing redundancies be•    efficacy meeting preceding requirements come        tween humans agents behavior report            cost likely decreased ability        summarizes potential errors                               distinguish types behavioral deviations      simple approach performs detailed analysis        potential errors good representation nonethe•  behavior simply checking agent expert         able identify wide range behavioral devi•  reach final goal state way agents ex•     ations likely occur target environ•  ternally observable behavior aspects         ments overlook meaningless differences   internal reasoning process inspected ensure prior work modelbased diagnosis lucas    consistent human experts addition method•  examined detect errors given model correct   ology ability identify large number possible   behavior general models systems   errors access salient properties relatively complicated intended identify problems   behavior trace                                                mechanical solid state devices opposed software      simple approach suffers num•      agents clipsr murphy paz  ber potentially flaws representation zani  designed expressly validating software   actors behavior set sequences extracted  agents   behavior traces sets grow observations        clipsr behavior model consists environmen•  considered interactive humanlevel agents typ•    tal constraints met initially during   ically solve problems number different ways be•   task execution addition model include   cause environments operate complex     finite state machine identifies acceptable sequences   likely large number observations re• actions pursued agent superficially require•  quired adequately cover actors behavior problem  ments clipsr approach relatively simple   exacerbated fact sequential representation  meet specifying additional knowledge   makes assumption actors behavior       manual process significantly increase human effort   constrained makes possible use    ironically introduce recursive validation problem   simple approach variety behavior makes    constraints                                                                                                    multiagent systems     behavior bounding   improvement clipsr simple method   presented section  approach behavior comparison   called behavior bounding automatically efficiently builds   concise models humans agents behavior   examining behavior traces model experts behav•  ior used identify boundaries acceptable behavior   potential errors reported comparing model agent   behavior boundaries        hierarchical model                                     figure  hierarchical behavior representation  goal stack   advantages behavior bounding stem rep•  resentation behavior behavior bounding inspired                                                                    contrast behavior representations used   hierarchical representations used andor trees htn                                                                  simple comparison described section  hbr makes   planning erol et al  goms modeling john                                                                  strong assumptions organization actors   kieras  encode variety ways particu•                                                                 knowledge effects behavior   lar tasks accomplished                                                                  assumptions increase efficiency efficacy er•     hierarchical behavior representation hbr used      ror detection certain types humanlevel agents   approach illustrated figure hierarchy                                                                    assumption used behavior bounding ap•  andor tree binary temporal constraints represent•                                                                 proach actors goals organized hierarchically   ing relationships actors goals actions                                                                  abstract goals placed tree   representation internal nodes correspond goals                                                                  assume point problem solving pro•  leaves correspond primitive actions nodes chil•                                                                 cess actor pursues set goals belonging different   dren indicates set subgoals primitive actions                                                                  levels hierarchy set referred goal stack   relevant accomplishing specified goal ex•                                                                 corresponds path hierarchy beginning   ample figure subgoals destroylead                                                                  node descending concrete subgoal   destroywingman relevant completing par•                                                                 currently pursued actor figure ib illustrates   ent goal engage  enemy manner subgoals                                                                  possible goal stack maintained actor behavior   used achieve parent goal encoded                                                                  represented figure    parents nodetype constraint vs ordering   constraints subgoals figure          second assumption leveraged behavior bounding   nodes represented ovals rectangles respectively  relates independence goals temporal constraints   binary temporal constraints represented arrows be•    formed sibling nodes andor clas•  tween siblings hierarchy specifies engage     sification determines nodes children per•  enemy correctly accomplished accomplish•       formed particular task makes easy con•  ing destroylead accomplishing destroy               strain way particular goal achieved difficult   wingman                                                       represent constraints arbitrary parts hierarchy                                                                  cause problems agent imple•     model behavior clearly complex                                                                  mentations property significant benefits im•  agents underlying knowledge base likely                                                                  portantly decreases number observations re•  complex model used clipsr behav•                                                                 quired consider task requires completing goals   ior bounding abstracts away internal datastructures agent                                                                  each fulfilled distinct ways se•  use problem solving represented                                                                  quential representation makes assumptions goal   constraints hierarchy means hbr                                                                  independence described section    used perform basic tasks depth                                                                  require sixteen distinct observations cover acceptable   search begs question agents behavior                                                                  behavior space behavior bounding re•  represented using simple structure                                                                  quire observations significant impact efficiency   programmed representation begin                                                                  direct result leveraging assumption   hypothesis representation sufficient                                                                  goals likely add regular structure actors behav•  completely capture agents behavior humanlevel                                                                  ior   agents rely intermediate datastructures   available through environment through structure                                                                     identifying errors   goal hierarchy hypothesis   representation provided behavior bounding sufficient  general view behavior comparison method   identify large class possible errors agent behavior with• algorithm divides space possible behaviors   sacrificing efficiency believe behavior regions behaviors likely consistent   bounding help identify potential problem spots expert behaviors likely inconsistent   agents knowledge specific goal exact error expert simple comparison method described   identified                                          section  does enumerating consistent behaviors       multiagent systems                                                                                                                                                                    traces actors performance task meeting                                                                  second requirement low human effort be•                                                                 havior traces captured human agent be•                                                                 havior minor support human participant                                                                  model meets requirement following sec•                                                                 tions examine remaining requirements                                                                       learnability                                                                  section examine aspects behavior bound                                                                 ings hierarchical representation effort required cre•                                                                 ate maintain ability represent behavior effi•        figure  imposing order behavior space           ciently requirements addressed over•                                                                 learnability representation representa•                                                                 tion learned observations suggested    behavior bounding constrained hierarchical   requires human effort initiate learning pro  representation allows break space possible behav• cess learning procedure efficient data struc  iors refined regions                                tures growth limited say hierarchy      begin noting constrained hierarchical rep•   represents behavior efficiently   resentation allows impose order space possi•        learning procedure constructing hbr extracts   ble behaviors particular define ordering   goal stacks actions behavior trace forming hi•  specific general behavior hierarchies starting erarchical structure illustrated previ•  maximally constrained hierarchy    ous section processing behavior trace   eratively removing constraints remain construct•   hierarchy contains maximum number constraints   ing representation experts behavior section  per•  andor constraints goals binary temporal con•  forms generalization stops    straints siblings consistent behavior   constraints removed figure  each     trace each goal hierarchy pursued   node represents behavior hierarchy illustrates ordering performing task internal nodetypes   created representation experts behav•  maximally constrained sibling internal nodes   ior identify node occupies ordered space totally ordered maximally constrained   node figure  node upper boundary  examining subsequent behavior traces hierarchy gen  node allows easily determine agents behavior eralized way remains maximally constrained   likely correct correct behavior con•    respect behavior traces processed   sistent expert behavior agent behavior repre•     page limitations present learning al•  sentation specialization experts lies gorithm clear hierarchy   generalization lattice exhibits behavior likely built described complexity   correct                                                 size goal hierarchy length      node represents completely unconstrained goal  behavior trace cases reasonable as•  hierarchy figure  labeled provides sume property expert quality behavior comple•  lower boundary contains basic specification     tion task number steps proportional   constitute acceptable agent behavior     assumption holds say algorithm   result used identify behavior representations bounded  time space respect   known incorrect representations   size input length behavior trace be•  goal decomposition structure inconsistent  cause complexity low order polynomial   contained different parentchild relationships lower hierarchy efficient encoding instance behavior   boundary nodes right side figure                   classify sample complexity hier•     using upper lower boundaries described     archical representation think representation   classify representation agent behavior likely  ordered tuple  each pi   correct specialization experts behavior representa• tuple containing type node   tion likelyincorrect specialization experts goal list    decomposition structure knownincorrect inconsistent    iff ordered note ordering   experts goal decomposition structure               constraints occur siblings length list     clearly hierarchical representation used ap     need length degenerate case   proach describes behavior higher level abstrac•   size hypothesis space bounded    tion typical knowledge base doing presents using hausslers equation haussler  number   concise illustration potential behavior   example set individual rules result meets leaves representing primitive actions totally   requirement low complexity addition represen• ordered each action used single time achieve   tation generated automatically examining behavior    parent goal                                                                                                    multiagent systems training examples required learn appropriate behav•   given task agent plan route through    ior representation bounded                             known territory building thought contain desired                                                                  artifact agent prior knowledge                                                                  buildings layout explore facility object                                                                  way task complete      indicates required sample size polynomial  agent leaves building object behavior   respect number goals hierarchy    comparison metrics performance judged based ability   fact time required incorpo• correctly identify errors agent behavior identify    rate new behavior trace learned hbr polyno• errors occurred produce minimal amounts   mial lnl shows representation paclearnable   spurious information report   means hbr efficiently represents aggregate be•                                                                    methodology   havior individual instance behavior meet•   ing fourth requirement                                   implemented algorithm described section                                                                   version simple approach de•      efficacy                                                  scribed section  serve benchmarks                                                                  benchmark action sequence extracts se•  efficacy behavior bounding addressed com•     quence behavior trace   ponents good unconstrained hierarchical     — sec•  representation lower boundary identifying behavior    ond benchmark extracts sequence goals    known incorrect second does       gi remember benchmarks   experts representation upper boundary serve distin•  particularly efficient representations grow   guish potentially correct incorrect behavior      exponentially exponential sample complexity      glance obvious behavior make interesting benchmarks efficacy   filtered lower boundary effectiveness  initially constructed agent solves problem   filter quite surprising consider unconstrained behavior rigid manner different attempts   representation branching factor depth    agent complete task using identical behavior   loss generality assume nodes uniquely labeled long provided identical initial states long   simplicity assume level hierar•  environment responds identically behavior given   chy actor completes current goal starting  agent performed modifications knowledgebase   goal define actors behavior      randomly removing rules determine preferences   sequence symbols chosen lowest level un•    competing goals actions results modifica•  constrained hierarchy behavior sequences length bd    tions agents complete task successfully tra•  symbol repeated                      ditional sense reach end state   possible sequences consistent goal decom•    increased flexibility terms sequence goals   position unconstrained hierarchy contrast actions use achieve final state addition   bd sequences symbols placed       behavior exhibited modified agents clas•  necessarily conforming unconstrained hierarchy     sified incorrect lower behavior boundary node   hierarchical structure depth  branching factor     result tests directly examine abilities upper    approximately  •  possible sequences    boundary node distinguish correct incorrect   length  consistent goal decomposition spec•  behavior   ified unconstrained hierarchy illustrates po•   each family experiments begins selecting agents   tential power lower behavior boundary discriminate   modified flexible version   behavior potentially correct large col• designate expert novice   lection behavior inconsistent experts goal flexible behave certain ways   decomposition structure known incorrect       consistent expert behavior—these errors      examine experts representation distin•       expert novice selected   guishes correct incorrect behavior ide•   individually incorporated simulation behavior   ally examine large set handprogrammed agents      observed gather   behavior   validated unfortunately feasi•    traces actors performing task ensuring   ble instead make random modifications agents       behavior traces identical traces form sets   knowledge base modifications introduce unbiased be•     expert novice respectively finally each   havioral flaws agent program experiments per•  behavior trace examined manually determine   formed determine each type error identified errors contains   modifications randomly errors     captured behavior traces split number   examined biased expectations      subsets single experi•  easily identified                         ment consists examining each comparison methods per•     experiments performed series agents  formance pair subsets  family   simulated objectretrieval environment objectretrieval experiments contains experiments compare   task requires planning reactive reasoning initially particular noviceexpert pair comparing       multiagent systems                                                                                                     
