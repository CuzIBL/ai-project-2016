            operator component matrix model imp program diagnosis                                           zhaofu fan    yunfei jiang                                      department science                               school information science technology                                           sun yatsen university                              xingang xi rd guangzhou  china                                            fanzhaofucom                         abstract                         structure usage assertions expected                                                        program advantages make diagnoses accurate       paper presents new modeling approach  help correct faults mutation operator       imp  programs operator component matrix                                                        components       ocm model used imp program      paper section  presents operator component       diagnosis using model modelbased di  matrix model programs section  analyses       agnosis method logic errors                                                        dependencies implied model including blackbox       imp programs model  extended dependency whitebox dependency section  core       kinds imperative programs advantages paper defines terms isomorphism abstract       diagnosis method lie simple regular                                                        program program specification breakpoint       presentation uniform diagnosed objects usage terms defines modelbased program diag      isomorphism assumptions  structure usage nosis problem diagnosis conflict gives ex      assertions expected program ad                                                       ample illustrate section  introduces related works       vantages make diagnoses accurate  section makes conclusion         help correct faults mutation operator       components                                                           operator component matrix model      introduction                                                          operator component variable   modelbased diagnosis proposed  reiter                          reiter  approach mainly used diagnose definition  nary function xx…xn use                                                                         fn      systems composed physical components applying vector      denote   kn                                                        called kth operator component nary function fn    modelbased diagnosis program debugging new                   field dependency model mateis et al  wieland represent xx…xn                                                                                   valuebase model mateis et al  widely           fn  xn                    used program diagnoses use program slic       “ ” called operatorplus  “ ” called   ing technology  wotawa  considers static operatortimes stipulate symbol “ ”   slices program analysing dependency associativity exchangeability “ ” associativity   variables fact uses dynamic slices depending distributivity “ ” represent     special test computing valuation trajectory          methods competent structural errors  fn   xxn     result coarse diagnoses prove stipulation reasonable   didate diagnoses                                    stipulation legal expression     paper uses simple imperative programming lan form operator components unique computable form   guage—imp  helps focus important issues                                                         fn  xn  computable iff se  avoid considering unnecessary syntax imp                                                        quence     permutation operator   shown winskel  imp programs present          new modeling approach ocm used components nary function   imp program diagnosis using model  modelbased definition  domain composed single element    diagnosis method logic errors imp variable domain variable   programs model extended kinds consider constant  special variable    imperative programs advantages diagnosis definition   given variables value   method lie simple regular presentation uniform independent null operator component   diagnosed objects usage isomorphism assumptions represented                                                       ijcai                                                       arithmetic operators imp defined follows execution kth command xk        constant especially program state execution kth command                                                              identical operator component ckx   ck state transition matrix   represented  note   different kth command  value expression program   null operator component                            state xk represented xk       xy   xy      xy                                                         skip statement      xy derived                                                        unit matrix look number  operator component   xyx                                                            number  operator component  ma  property  aexp  suppose    variables                                                           unit ocm                 represented form        trix         represented  ocm                                                                          zero ocm                     af                           composed         represented                                                        skip statement skip represented xex     fn operator component expressions   instance               presentation compound statement   property     mn                compound   statements form cc suppose           ff  ff                command  represented xcx                                               represented xcx ocms                                                        represent command ccx     presentation commands                                                        presentation branch statement    imp programs types commands skip branch statements form                skip                                                                                     statement    assignment statement    compound suppose command  represented xc                                                                                  statement    branch statement          represented xc     loop statement present state                                                                                          ocms    represent command    ments form ocm                                                                                                                       mc  mcx  bx true  assignment statement                                 wise program state execution                                                                                                     suppose variable set program isx xn command note look result       property  definition  each aexp takes operator component     form        variable                                              presentation loop statement   does occur                                                        loop statements form   suppose        denote assignment statement xkak kn                                                         command  represented xcx                                                                                                    kn                    ocm denote command                                                 xkfk fk  fkn  xn      number executions loop body minkb         program executes assignment statement xk false  xk program state   xkak value variable xk changed kth execution command   consider implies assignment statements        according structural induction proved   follows     xjxj  jn                 imp program denoted form  xcx      xj                       ocm model program                            let       xn  xkak equivalent  example                                                                              facilitate analysis use example shown fig                                                                                                               key point                              represented xcx                                                                start                     kn                                             stop                                                                                                                                                   start                                                                          stop       matrix composed operator components                                                                       start   matrix called operator component matrix abbreviated                                                                          ocm treat  state transition matrix                                                        key point     stop     property   row state transition matrix                                                                           ssi    form                                                                                   property   row state transition matrix                                                                          end   operator component       label commands    occur      figure    imp program   rence order program let xk program state                                                           let start stop st  ocm                                                        model program                                                                                                                                         aexp set arithmetic expressions imp  ccccc ccmcc mcc                                                    ijcai                                                                                                                   dependencies final values                                          variables initial values variables represent                                                                       xn   kx        xn                                         dependencies                   final                                                        program state initial program state instance                                                                            extend variable                                                   sn                                                                               means final value decided initial                                            value initial value constant value   cl   state transition matrix command la assigned program especially blackbox  beled  xtrue  pendency variable includes item  shows   nmink   stop xkfalse  variable assigned constant program   program state execution command labeled        blackbox dependency variable does    xk program state kth execution appear dependencies variables   command labeled                                  final value concerned variable usually         program includes branch statements loop state considered useless deleted program    ments unknown “constants” appearing   ocm   model example  whitebox dependency    values dependent given test case look definition   ocm replacing operator   formal constants                            components   formal operator compo                                                       nent represented pp label set commands      dependency analysis                              actual operators occur new components ma                                                       trix called formal matrix properties     blackbox dependency                             shown follows                                                             pp      definition                                                      operator component  called                  characteristic operator component                                 satisfies                                                        definition   assume vector variables    ocm called characteristic matrix   program  model formal matrix    constructed replacing operator components whitebox dependency matrix                                               example shown figure    theorem   ocm respec whitebox dependency matrix   tively characteristic matrix kk                                                       characteristic matrix                                                                      theorem    characteristic matrix  chain                                                                                                     kn satisfies cases                                                     nn knkn                                                                      knmkn                                                                   set characteristic matrixes given di           mension limited chain  kn  reach         fixed point enter ring theorem indicates dependency variables com  dependency loop definite                    mands represented  xn hx  xn   definition   assume vector variables  final program state initial program state   program  ocm model character variable dependency commands   istic matrix called blackbox dependency instance extend variable      matrix                                              sn                example shown figure               blackbox dependency matrix                           establish set composed                                                  command labels appearing right                                                                                                                      whitebox dependency variable                                                                                                        means final value decided command set                                                         proved equivalent                                                                            program slice slicing criterion  wotawa                                                     note whitebox dependencies include data                                                   pendencies control dependencies implied                                                        formal constants related branch statement loop                                                        statement                                                           ‘program’ indicates imp program special note                                                    ijcai                                                                                                                                                    complexity analysis                              actual model map map                                                                 order identify operator components         model dimension each ocm    number variables program form add command label                                                                                        size  matrix model grow quickly suppose command                                                                    known abstract model “correct” command   number variables big problem                                                         form abstract model “wrong” com  diagnose program time diag                              nosed object generally program module procedure mand given mapping map                                                                   correct command abstract model   function number variables won’t big   store state transition matrixes isomorphism assumption construct   dense mode sparse matrix                          abstract model expected program concrete                                                         model diagnosed program replacing components                                                                 concrete model  abstract components                                                            note each extended null operator component      modelbased program diagnosis                     replaced abstract operator component abstract                                                         model     isomorphism assumption abstract pro       gram                                               program specification breakpoint   definition  commands  isomorphic rep program specification    resented isomorphc  iff  following cases abstract program need offer   satisfied                                            assertions static properties each assertion       cskip  skip                            called program specification morgan        xa   ya    vsa  vsa  definition   program specification  form           means variable         vsa means set  variables         precondx framex postcondx            isomorphc   iso  set variables precondx description         morphc                                  initial state framex indicates piece             abstract program including postcondx gives        isomorphc   isomorphc            scription final state “execution ”            iso piece abstract program           morphc                                     note framex executed concrete      generally diagnosed program close implementation given slicex concrete imple  expected program say possible minor mentation framex postcondx come true   revisions make diagnosed program correct execution slicex condition precondx   suppose diagnosed program exists denote  precondx slicex postcondx   “correct” program isomorphic diagnosed example specification    program assumption called isomorphism assump     preconds   tion                                                               frames          diagnosed programs possible   postconds   variable lost rightside expression assignment slice ssi implementation framesi slice   statement isomorphism assumption hold ss    fortunately extend expression   new equivalent expression includes lost variable breakpoint   adding null operator component instance xxi position program called breakpoint   written xx mistake  extend expres assertion assertions variables   sion  case extendable iso breakpoint called intermediate results value   morphism assures diagnosed programs variable breakpoint represented xb    extendable isomorphic correct program     program diagnosis kind special position   definition  given program ocm model used breakpoints positions closely followed   place operator components program ab boolean expression key points   stract operator components new program called example figure  key points positions   abstract program  abstract operator component label  label       marker does refer concrete operator com note runtime program breakpoint   ponent                                               passed times zero times corresponds      example command  ssi program unique position program    label model represented given breakpoint test cases pass                                                                                invariant “always”         abstract model represented assertions breakpoint                                         assertion                              intermittent            abstract operator              components suppose mapping abstract model “sometime” assertion  mayer stumptner                                                        ijcai                                                       known program specification relate implementation framebb diagnosed program   breakpoints program code suppose equation yfw postcondx                                                                           breakpoints legal compound command      denotes state   example figure  codes breakpoint  blackbox dependency set slicebb equal   breakpoint  legal commands whitebox dependency set slicebb   breakpoints related framex represent framex conflict set   framebb includes variables      conclusions theorem   obvious theorem   program omitted                            special case theorem        program diagnosis                                diagnosis example    definition  program diagnosis problem triple sd                                                        program diagnosis problem   comps specs sd ocm model actual   program diagnosed comps set operator consider program shown figure  suppose command                                                         written ss mistake program diag  components sd specs set program specifica  tions                                               nosis problem given                                                        sdxc   definition  suppose sd comps specs program                                                            start stop st   diagnosis problem let ad abstract program sd                                                            ccccc   acomps abstract operator components ad                 map   mapping comps  acomps            cc ccmcc mcc      comps diagnosis  iff  exists map  sa      cl denotes ocm model command la                                                           beled diagnosed program     set operator components sa                                                                     comps                              subset acomps                                        ad    map     specs    consistent                            comps    map  mapcc              specsps ps ps         isomorphism assumption ad  specs       ps frame ifrom   consistent expected program interpretation       ps frame ito   ad                                                     ps stop frame                                                                 istop sistop ii      operator component corresponds com                 mand program components  indicate possible  stop  denote respectively initial values   faults program                                  stop execution frame   definition  let  diagnosis exists ’  diagnosis   ’ diagnosis  minimal diag adxf   nosis                                                   start stop st   definition  suppose sd comps specs program                                                             fffff                       ad                        sd                    diagnosis problem let  abstract program          mf    mf     acomps                                    ad                                         abstract operator components     denotes abstract ocm model com  map                     comps      acomps                              mapping                       mand labeled expected program     comps     conflict set iff  map                                                                                 acomps                 acomps       map  cmapc ad    map                                                                           specs                                                                           inconsistent                           map                                  definition   let conflict set exists                                                                                                    c’         c’                         minimal                    conflict set                   conflict set                                                                                                         given set  inputs diagnosed program   theorem                        minimal conflict sets inputfrom                                            program   hitting sets    satisfy precondition ps  running diag                                                                                      minimal diagnoses                                nosed program inputs results                                                et al    definitions hitting set lin    consistent postcond                                                  ps  case conflict set    theorem           ps  precond  frame  post                     suppose                          checking program specifications   cond                             slice        program specification let    observing values variables precondition                   frame                        implementation      diagnosed program  ps  breakpoint   stop                                                          given program input   program state  satisfy precondition ps  applying ps                  precond                                                                          consistent          set variables   equals  actually                                 postcond  states  inconsistent     conflict frame whitebox depend                                  slice    whitebox dependency set       ency    makes conflict set      conflict set                                 observing consistent postcondi  theorem           ps  precond  frame  post             suppose                       tion ps  whitebox dependency    cond                             slice                          program specification let    included conflict set                                                       ijcai                                                    
