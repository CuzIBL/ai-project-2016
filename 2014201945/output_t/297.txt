                          adaptation organizational models                      multiagent systems based max flow networks                                              mark hoogendoorn                     vrije universiteit amsterdam department artiﬁcial intelligence                        boelelaan  hv amsterdam netherlands                            mhoogencsvunl      httpwwwcsvunl˜mhoogen                        abstract                          requires buyer seller agents event                                                        requires adaptation current organizational model      organizational models multiagent systems  new usage level longer func      literature static nature depending cir tion correctly overload      cumstances adaptation organizational model   aim paper introduce method capac      essential ensure continuous success  ity management organizations dynamically adapting      ful function paper presents organizational model based environmental ﬂuctuation      approach based max ﬂow networks dynami     purpose agr framework adopted agr      cally adapt organizational models environmen  chosen framework closely related graph      tal ﬂuctuation formal mapping   representations furthermore extensions framework      wellknown organizational modeling framework    capacities each elements organiza      max ﬂow networks presented having    tional model introduced method based      mapping maintains insightful structure graph theory speciﬁcally max ﬂow networks      organizational model specifying efﬁcient  specifying methods adaptation max ﬂow networks      adaptation algorithms based max ﬂow networks   advantage efﬁcient algorithms available      adaptation    form calculations network method      mechanisms based max ﬂow networks      corporated agent maintaining organizational      troduced each appropriate different envi model attributing agent capabilities properly      ronmental characteristics                        adapt organizational model paper                                                        deals evaluating effectiveness method    introduction                                         paper organized follows section  introduces  need complex software arose need max ﬂow networks terminology associated  higher abstraction level concept agent section  discusses existing modeling frame  result organization modeling practiced work organizations extends capacity elements  stage multiagent design egciancarini section  presents mapping extended organi  wooldridge  boissier et al  zational modeling framework max ﬂow networks static  organizational model poses various constraints agents analysis methods analyzing current functioning  populating organization frameworks intro organizational model presented section  sec  duced representing organizational model tion  expresses adaptation rules used  agr  agentgrouprole ferber gutknecht  analysis shows improper functioning section  presents                                                        simulation results adaptation mechanisms ﬁ  gaia zambonelli et al  moise hannoun et al                                                  nally section  discussion    common problem encountered current orga  nizational modeling frameworks static nature  max flow networks  frameworks support organizational model section provides brief introduction max ﬂow net  dynamic changes based environ works graph theory max ﬂow theory ford  ment especially multiagent participates fulkerson  known graph  dynamic unpredictable environment organizational ory appreciated practical applicability max  model obsolete making dynamic adaptation ﬂow network deﬁned follows  model essential imagine design negotiation let gve directed graph set nodes  internet buyer seller agents set edges special nodes distinguished  present organizational model speciﬁes number source ∈ sink ∈ source  buyers seller present based certain indegree  sink outdegree  furthermore let  expected input suddenly increase usage → capacity function edges network                                                    ijcai                                                                                                 deﬁned  vestcnowletf → denote expressed osrepwheres set group struc  ﬂow value following conditions         tures rep representative graph specifying interactions    fxy ≤ cxy xy ∈                   role different groups later referred group    finv  foutv ∈ vst                links reps×r×s×regrepsarsbrwherer∈sa  finv foutv respectively inﬂow r∈sbandsasb∈s contraint single agent  ﬂow node deﬁned follows              playing role role    finv      fxv xv ∈           x∈v                                           agentgrouprole extensions    foutv  y∈v fvy vy ∈  source sink following holds addition agr approach assumed    fins  foutt                                  speciﬁcation roles certain capacity present ca  ﬂow value network deﬁned fol pacity places requirement agent allocated  lows                                                 role organization able handle                                                      computationally time unit universal orga     fouts foutsfint                                                        →   max ﬂow maximum ﬂows max nization capacity denoted rc  addi                                                        tion capacity set role links cc × →  ﬂow problem ﬁnd ﬂow algorithms                 ×   →   published ﬁnd ﬂow  ford group links sc       fulkerson ford fulkerson  ﬁrst pub crucial aspect missing  lish algorithm ﬁnding minimal cut teraction environment agr mainly based  graph proven equal max ﬂow later efﬁ teraction roles emphasis paper  ciency improvements proposed edmunds adapt environmental ﬂuctuations  karp                                       sumed environment causes certain pressure    enable formal mapping organizational organization pressure expressed  modeling framework max ﬂow network node capacities processing needed organization deal pres  expressible specifying capacities nodes sure seen demand environment  incorporated classical max ﬂow network follows organizational model represented                                                       adding entity called environment ein having  let cnode v→  denote capacity node                                                        links environment roles receiving stress  split node capacity cnodev nodes                                                        directly einri particular value certain time  node inherits incoming nodes                                                                 point einr→    different points time  inherits outgoing edges finally draw edge vv  following capacity value                    pressure differ requiring different processing capabil                                                        ities furthermore receiving pressure en    cvv  cnodev                                                        vironment roles assumed perform actions                                                        environment eout affecting environment ri    multiagent organizational framework                                                                                                             eout value eoutr→  assumed     extensions                                     correctly functioning multiagent organization affects  section agr approach introduced agr environment exact environment  used representation organizational model affects organization  ing framework closest graph theory purpose  paper investigate adaptations capacity  mapping organizational framework  organizational model agr extended elements speci max flow networks  fying capacity                                  mapping extended agr model max    agentgrouprole approach                        ﬂow networks introduced section  presented                                                        translation algorithm extended agr model max  basis representing multiagent organization ﬂow network described follows  agr approach introduced ferber gutknecht ferber                                                          • each role ri∈o create node vi  gutknecht  used approach  suggests three main elements used  agent • each role link grirj create edge vivj  speciﬁed active communicating entity • each role link capacity ccrirj set capac  plays roles groups  group deﬁned  ity edge vivj value cvivjccrirj  atomic sets agent behavior  role                                                          • each group link rirjwhereri∈sarj∈sb  abstract representation agent function service iden                                                            sasb create edge vivj  tiﬁcation group formally abstracter                                                          •  level ferber gutknecht deﬁne group structure tu each group link capacity scrirjset  ple srgl deﬁnition set role identiﬁers capacity edge vivj value  interaction graph specifying valid inter cvivjscrirj  actions roles later referred role links • each role capacity rcri set capacity  gr×r→lwherel    interaction language orga  node vi value cnodevircri reduce  nizational structure deﬁned set group structures graph classical max ﬂow graph using method  expressing design multiagent organization scheme presented section                                                     ijcai                                                      • add node represent environment ein add translated max ﬂow problem remember nota      node represent environment eout          tion ﬂow  fouts foutsfintnowlet    • each einri capacity einri create edge maximum ﬂow noted follows                                                                 vi set capacity cs vieinri           maxn  foutmaxs foutmaxsfinmaxt    •                                                   requirements posed organizational model      each riein capacity eoutri create edge translated requirements ﬂow requirements      vi set capacity cviteoutri        garding pressure translated max                                                        ﬂow requirement form                                                                                                  ≥                                                    foutmaxs                                                                                       requirement using max ﬂow problem                                                                                                      algorithms ford fulkerson edmunds                                                                                                            karp  determined organi                                                        zation theoretically fulﬁll requirements note                                                                                                      nonfulﬁllment requirements guarantees                                                                                                                                       ganization able meet requirements      agr representation   max flow equivalent  complying design speciﬁcation            figure  example organizational model          analysis organizational model based                                                             observed values  figure shows example agr organization ﬁg performing analysis design time analysis  ure big ovals denote groups smaller ovals runtime performed case  denote roles capacities roles depicted box environment multiagent partici  number specifying capacity furthermore inter pating highly dynamic hard predict causing  actions roles group role known pressure organization  environment depicted arrows including label requirement posed dynamic  specifying capacity finally capacities interactions quirement observed observing  groups speciﬁed dashed lines including pressure received multiagent case  capacity number depicted italics figure shows exceeds maximum ﬂow network equivalent  accompanying max ﬂow network using previously pre ganizational model incorrect note possible  sented translation algorithm including translation node multiagent functioning correctly  capacity classical max ﬂow network max ﬂow agents allocated roles organizational model                                                     higher capacity required model                                                        updated make sure    analyzing organizational model using            continues function correctly example     max flow equivalent                            agent handle pressure cer  equivalent max ﬂow network derived tain duration suffers burn methods updating  extended form agr organizational model sec model presented section  tion shows way max ﬂow network aid  analysis organizational model analysis  adaptation organizational model  performed ways  checking current using max flow equivalent  organizational model meet expected environmental  conditions analysis  checking shown previous section participating  runtime organizational model meet actual highly dynamic environment organizational model  environmental conditions                             times needs changed order handle environ                                                        mental ﬂuctuations appropriately section proposes    analysis organizational model based    methods perform change each working spe       expected values                                  ciﬁc circumstances methods concern extending  creating organizational model having certain capacity aim paper adapt organi  quirements mind paper organizational requirements zational model way environment  form organizational capacities considered handled does include decreasing capacity  quirements capacities form pressure  environment organization able handle  adapting bottlenecks  requests certain type checking ﬁrst method improving network equivalent  requirement theoretically met multiagent orga organizational model involves ﬁnding path  nization max ﬂow equivalent used enabling quires minimum additional capacity adding capacity  usage tools algorithms graph theory end bottleneck path words pinpointing  organizational model including capacities various bottleneck organization improving let  organization elements introduced previous section ps−→  −→ denote path source sink                                                    ijcai                                                    network explanation method capaci    vxvivxvi∈e set incom  ties edges assumed natural numbers ing edges vi vivyvivy∈e set  easily extended rational numbers given    outgoing edges vi words  environment imposed requirement parameter η    node maximal connection  represents safety margin taken               nodes return     • calculate current max ﬂow network fmaxn intuition algorithm ﬁnd nodes    • fmaxn  η ×                           edges representing role copy improve                                                        max ﬂow increase possible nodes                                                               edges representing role connected        try  ﬁnding     path       form                                                   organization maximize chances ad          ps−→         xi −→  yi −→                                                         dition role copy result increase          edges  xyxnyn sufﬁcient max ﬂow          capacity add ﬂow  path case          path nn        set capacity edges xiyiintheset  evaluation different methods          xyxnyn cxiyicxiyi      improving organizational model                                    η ×        new max ﬂow maxn     order characterize methods presented previ          tinue point  algorithm ends     ous section section presents evaluation method  speciﬁcation algorithm draws inspiration compares results different methods using different  algorithms proposed ﬁnding max ﬂow through net settings cost model presented expressing cost  work algorithms work ﬁnding paths source function used evaluation different meth  sink increased ﬂow  finding path ods evaluated based cost model envi  increased extending capacity ronmental settings  results immediate increase max ﬂow  network                                         cost model    adding organizational elements                   each element organizational model certain                                                        cost attached cost role group links ex  capacity required allocation agent certain                                                                            pressed costlinkr× → deﬁned follows  role course limited agents high capacities           ccxy  expensive algorithm adding costlinkxy  α xy∈g∪rep  roles accompanying role group links orga words cost links increase exponentially com  nization presented algorithm presented monly used type cost function parameter α                                                        varied holds cost node  adapted cope addition organizational          elements extension states following case costroler→ deﬁned follows                                                                      rcr  max ﬂow network longer increased costroler  α r∈r  increase max ﬂow necessarily require factor  arbitrarily set cost function  exceeding maximum capacity set current ca typically interaction capacity costs lower agent ca  pacity cxiyi exceeds maximum capacity cmaxxiyi pacity costs order punish organizational model    each nodes vivi set edges form able meet environmental pressure penalty                                                                                 ×   →      vxviwherex∈vandvxvi∈e vivi     introduced form     wherer  en      vivywherey∈vandvivy∈e representing role vironmental requirement penalty function deﬁned      ri role group links                  follows                                                                  β ×           elements reached max pn    maxn      imum  capacity calculate increase max parameter β speciﬁes penalty each requirement      ﬂow case nodes edges doubled unit fulﬁlled network represents multiagent      nnewn∪vivivxvi vivi organization finally overall cost organizational      vivy fmaxnnewfmaxn              model deﬁned follows                                                             costtotal    pn              costroler         • highest increase exceeds  words                        r∈r          network improved copying single role xy∈g∪rep costlinkxy          copy nodes edges having highest          value                                          evaluation        • copy nodes vivi ac implementation java created al          companying edges vxviwherevx∈vand         gorithms reorganization translation procedure          vxvi∈e vivi vivywherevy∈v  organizational model accompanying network          vivy∈e maximize following  order evaluate performance algorithms          min      vxvivxvi∈e            example organizational model shown figure  used          vivyvivy∈e                      benchmark adaptation organizational model                                                    ijcai                                                                                                                                                       σ                             σ   max                        σ   max                                  σ                             σ   max                        σ   max                                  σ                            σ   max                        σ   max                                                                                                                                                                                                                                                                                                average  cost                      average  cost                     average  cost                                                                                                                                                                                                                                                                                                                                                                 η                                  η                                  η              bottleneck             role addition max capacity role addition max capacity                               figure  bottleneck role addition algorithm performance                                                           β     σ           optimal  role ad role ad  used using implementation simulation runs          adap adap  bottle  dition   dition  formed environmental pressure causing require          tation tation neck    max   max  ment based normal distribution fxμσonestep            max   max                                                                    ﬂow μ ﬂow  simulation entails  generating environ           μ  mental requirement based normal distribution                             calculating current max ﬂow network fmaxn                                                                                                                                    total   calculating cost cost   updating net               η≤ η≤ η≤  work step using improvement meth              η η η  ods each step performed  times each simula                η η η  tion performed  times generating different seed  each time steps performed aver table  average costs organizational model resulting  age costtotal step calculated order eval different algorithms penalty set    uate different methods settings cost model  used relatively high penalty cost compared capacity set  figure  used  agentcommunication cost critical domain case environmental ﬂuctuation figure shows  incident management relatively low penalty cost com similar shape bottleneck algorithm fig  pared agentcommunication cost noncritical domain ure shows large increase value η  furthermore environment setting μ default set result roles copied low setting  initial max ﬂow case  ﬂuctuation maximum capacity each role network  σ set different values σ       reached maximum capacity resulting need copy                                                        causes severe overcapacity case little environ  relatively high penalty cost                                                        mental ﬂuctuation setting  maximum capacity  results organization penalty costs rel better large increase capacity required  atively high compared labor cost presented high environmental ﬂuctuation  best larger ca                               α  reﬂects cost model set  meaning pacity increases required                                              β  initial cost  organization set finally table  rows β   penalty cost signiﬁcantly higher initial cost shows comparison different methods given  organization                            optimal parameter settings seen adaptation    bottleneck algorithm used figure shows worse compared algorithms  results different setting given environmental ﬂuctua overcapacity initially present furthermore case small      σ            η  tion  varying value algorithm parameter speci environmental ﬂuctuation adding capacity current roles  fying update capacity seen best despite exponential cost function  environmental ﬂuctuation costs stay stable larger ﬂuctuation adding roles immediately best option       η  lower  values slightly increase higher exponential cost function  settings capacities increased current  max ﬂow identical requirement small envi relatively low penalty cost  ronmental ﬂuctuation σ η value  gives best table  shows result penalty set rel  results case large environmental ﬂuc atively low value rows β algorithms  tuation cases having higher η value results better adaptation value η needs  capacity high costs high lower set lower value having capacity rela  η value increases penalties            tively expensive compared penalty meeting    figure show results bottleneck al requirements role addition algorithm  gorithm extended role addition figure max maximum capacity  performs worse                                                     ijcai                                                    
