                                          logical filtering                                          eyal amir stuart russell                        science division university california berkeley                                        berkeley ca  usa                                        eyalrussellcsberkeleyedu                            abstract                          model crucially update cost space                                                          requirement depend length observation       filtering denotes method agent up•                                                         sequence kalman filter run indefinitely       dates belief state—its knowledge state                                                          paper interested developing analogous results       world—from sequence actions obser•                                                         context logical representations       vations logical filtering belief state log•                                                           adopt simple logical language section  describ•      ical formula describing possible world states                                                          ing transition observation models observations       agent possibly nondeterministic logi•                                                         belief state logical formulae ini•      cal model environment sensors       paper presents efficient logical filtering algorithms tial state partially known transition model       maintain compact belief state representa•   allows actions agent nondeter•      tion indefinitely broad range environment ministic observation model nondeterministic       classes including nondeterministic partially ob•  partial sense agent able       servable strips environments environments      observe actual state       actions permute state space efficient  restrict propositional logic       filtering possible belief state rep• clear general filtering problem nontrivial       resented using prime implicates ap• prove computationally hard exponen•      proximated logically weaker formula          tially possible states identify classes                                                          models allow efficient filtering respect belief                                                         state representation size primary method based    introduction                                         decomposition theorems showing  filtering distributes   agent operating partially observable environment disjunction belief state formula  filtering   perform computations distinguish pri• distributes conjunction negation actions   ori possible current states world basis past ob• permutations state space actions serve oneto  servations actions computations operate di• mappings states states   rectly representation action observation sequence applied obtain efficient exact algorithms dnf   winslett  kautz et al  reduce belief states nnf negation normal form  nega•  queries current state queries initial state tions atoms cnf belief states per•  reiter  update belief state muting actions cases obtain efficient algorithms   agents knowledge state world each ac• approximate filtering   tion observation approach called filtering class dynamic systems filter effi•  recursive state estimation control theory literature ciently belief state represented cnf includes   particularly useful unbounded sequences actions prime implicates finally show strips mod•  observations                                          els possibly nondeterministic effects actions ad•    main computational difficulties  time needed mit efficient filtering strips assumption   update belief state  space required repre• action conditional effects effects precon•  sent depend nature transition model ditions preconditions actions execution key   describes environment evolves time efficiency   observation model describes way en• respect maintaining compact representation   vironment generates observations family repre• show properties similar mentioned allow   sentations used denote belief states early work begin• filter acnf formulae cnf clauses   ning gauss assumed stochastic models example literals fixed result represented   kalman filter kalman  ubiquitous device kcnf fixed belief state main•  maintains multivariate gaussian belief state vari• tained nk space indefinitely particular show   ables assuming lineargaussian transition observation mild conditions compact belief state       automated reasoning maintained nondeterministic strips domains per•     propositions true world state set   mutation domains finally show dnf belief states     actions rls means state   remain compact effects actions deterministic possible result action state   guaranteed hold results analogues   logical arena desirable properties possessed   kalman filters continuous variables      means work filtering logical   context early pointed filtering easy   deterministic systems known initial state fikes et   al   lin reiter  filtering nondeterministic logical nondeterministic domain description fi•  domains difficult particular related problem nite set statements following kinds value proposi•  temporal projection conphard initial state tions form initially initial state   fully known actions nondeterministic effects    effect rules form causes effects   liberatore  section                     actions state formulae propositional      traditionally computational approaches filtering combinations fluent names say head   three approaches  enumerate world states possi• tail rules   ble belief state update each states sep•  arately generating updated belief state ferraris   giunchiglia  cimatti roveri   list   sequence actions observations prove queries   updated belief state reiter  sandewall     approximate belief state representation son baral    williams nayak      approaches used   possible worlds domain includes   dozens fluents  pos•  sible states sequence actions long    actions examples include robot localization   tracking objects relationships data mining   approach gives rise mistakes some•  times dangerous requires approximation fits   given problem exists domains  fluents   computationally infeasible      logical filtering                                                confusion write rd                                                                 action effect false execute   section define logical filtering using transition  partially observable domains update knowledge   model action semantics compatible stan• result executing action collecting observations   dard semantics belief update operator winslett     resulting state following definition filtering as•  avoid confusion different operator  sumes set world states use transition   presented publication pma applies non   operator define resulting belief state each ac•  monotonic approach formalize minimal change op•     tion observation formula language   erator simple allows examine computational prop•  erties easily represent logical transition   specifications action languages compiled   iwinslett  doherty et                                                                      step  progression step  filtering                                                                   example consider robot charge cleaning                                                                 room execute action  fetchbroom closet                                                                 single effect rule causes hasbroom                                                                                                    automated reasoning  filtering logical formulae   approaches filtering actions observations   stage enumerate states belief state scale   large domains alternative approach perform logical   progression form similar described lin   reiter  mcllraith  difference   wish efficiently context nondeterministic   actions observations      section present straightforward algorithm   filters belief state formulae directly does worstcase   exponential time algorithm serves starting point   section  propose efficient algorithms   present distribution properties filtering log                                                                      distribution properties permutation                                                                      definition  permuting actions action permuting                                                                  state rs   assertion precondition holds sim•   domains include permuting actions called   ilar effect adding frame axioms set effect axioms permutation domain       automated reasoning                                                                                                        example consider — fetchbroom closet    assume add second effect rule    causes false inbroom closet exe•        proof theorem reduces problem repre•   cutable unless rules precondition holds ac• senting belief state performing action    tion onetoone mapping states map•   representing craig interpolant uses following    ping defined defined state maps re•   sulting state second rule added action    onetoone maps different states    broom second broom    closet state      spirit action pickupa picks    block block onetoone pos•  efficient indefinitely compact filtering    sible single previous state                                                                  section present main contribution paper    resulting state holds putdownac                                                                  polynomialtime algorithm computes logical    natural examples include turning row rubiks cube                                                                  filtering exactly significant class transition systems   flipping light switch buying gallon gas con•                                                                 special cases present simpler algorithms   trast turning light setting rubiks cube partic•                                                                 efficient systems fall   ular configuration filling gas tank permu•                                                                 class algorithm gives approximation filter•  tation actions notice allow different actions map                                                                  ing show representation   different states state accelerating mph                                                                  filtered belief state compact indefinitely class dy•  driving mph results state decel•                                                                 namic systems class includes nondeterministic strips   erating mph driving mph                                                                  systems systems actions permuting        limitations compact representation   argued filtering require polynomial   space limit initial belief states rep•  resented compactly actions effects precon•  ditions represented compactly theorem  show        conditions action theorem hold   contrary generalpurpose representa•   actions defining rule precondition   tion belief states dynamic initial be• single clause literal holds actions   lief state sequence actions belief   defined rules actions affect   state representation exponential representation literals appear preconditions   initial belief state       theorem  dynamic fluents be•    lief state  action sequence                                                                                                   automated reasoning automated reasoning                                                                                                    
