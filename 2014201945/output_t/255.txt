                               logic weighted csp∗             carlos ansotegui´                mar´ıa luisa bonet         jordi levy      felip manya               diei udl                         lsi upc                         iiia csic       jaume ii  lleida spain             barcelona spain          campus uab bellaterra spain                          abstract                          underlying logic wcsp deﬁne encoding                                                        called signed encoding transforms wcsp instance      deﬁne translation weighted csp       signed maxsat instance signed maxsat      signed maxsat complete resolutionstyle   maxsat problem multiplevalued clausal forms      calculus solving signed maxsat based     known signed cnf formulas ans´otegui manya      results original exact al  references second deﬁne complete      gorithm solving weighted csp finally resolution calculus solving signed maxsat      ﬁne derived rules prove en devise exact algorithm solving wcsp com      force main soft arc consistency deﬁned pleteness proof resolution calculus fourth deﬁne      literature applied weighted csp instances sound inference rules signed maxsat en                                                        force known arc consistency properties applied    introduction                                       signed encoding binary wcsp instance                                                          structure paper follows section  contains  weighted constraint satisfaction problem wcsp preliminary deﬁnitions signed encoding section   known soft constraint framework modelling deﬁnes inference rule signed maxsat proves  constrained problems practical applications domains soundness completeness section  describes exact  resource allocation combinatorial auctions bioin algorithm solving weighted csp section  deﬁnes  formatics wcsp optimization version csp derived rules enforce soft local consistency properties  framework constraints extended associating finally section  presents conclusions work  costs tuples solving wcsp instance nphard  consists ﬁnding complete assignment minimal cost  preliminaries    global consistency wcsp algorithms bucket  elimination dechter  solve wcsp instances deﬁnition  truth value setordomain nonempty  search obtain optimal solution applying ﬁnite set iiin denotes cardinality  original instance transformations preserve cost dis sign subset ⊆ truth values signed literal  tributions hand wcsp branch bound  expression form spwheres sign  bnb based algorithms pfc freuder wallace propositional variable complement signed literal   pfcmrdac   larrosa meseguer rus  form sp denoted lissp  spasigned  sian doll search verfaillie et al mac∗ larrosa clause disjunction signed literals signed cnf  schiex  mfdac∗ larrosa schiex  mula multiset signed clauses  medac∗   givry et al  perform systematic search                                                        deﬁnition  assignment signed cnf formula  space possible assignments differ                                                        mapping assigns propositional variable ele  method computing lower bound each node proof                                                        ment truth value set assignment satisﬁes signed  tree prune parts search space modern al                      ∗        ∗            ∗           literal sp iff ip ∈ satisﬁes signed clause iff sat  gorithms mac  mfdac   medac    enforce                                                        isﬁes signed literals satisﬁes  extension arc consistency ac wcsp —soft         ∗                         ∗                    signed cnf formula Γ iff satisﬁes clauses Γ signed  ac ac   directional ac fdac  existential di                   ∗                                    cnf formula satisﬁable iff satisﬁed  rectional ac edac — computing lower bound                                                        signment unsatisﬁable    paper relate ideas three different  search communities —multiplevalued logic satisﬁability deﬁnition  signed maxsat problem signed  constraint processing— aim describing cnf formula consists ﬁnding assignment mini                                                        mizes number falsiﬁed signed clauses    ∗this research founded mec research projects  ideas tin mulog tinc deﬁnition  constraint satisfaction problem csp  sofsat tic program ram´on cajal stance deﬁned triple x cwherex                                                      ijcai                                                     xxn set variables  dxdxn                                                                                  ax  set domains containing values variables                                                                                                                          ax   ccm set constraints each                                                                                  bx  constraint ci  siri deﬁned relation ri                                                                                                          bx  subset variables      ik  called constraint                                                                                                       scope relation ri represented extensionally                       cx                            dx   ×···×dx                               subset cartesian product        ik                                        cx ∨ ax                                                                                                                                                           cx ∨ bx  deﬁnition  assignment csp instance x c                                                                                                    ax ∨ cx  mapping assigns variable xi ∈ ele       ment vxi ∈ dxi assignment satisﬁes constraint                             bx ∨ cx  x  ∈c     vx vx ∈r                             ik       iff          ik                                           bx ∨ cx                                                                                       cx  ∨ cx  deﬁnition  weighted csp wcsp instance deﬁned                                               atriplex cwherex   variables  mains csp constraint ci deﬁned pair  s                                      figure  wcsp instance signed encoding              ik constraint scope       dx  ×···×dx    →                ik      cost functionthe                                           cost constraint induced assignment example  figure  shows wcsp instance x c                              variables       ik values    ik   signed encoding wcsp set variables          ik  optimal solution wcsp instance  xxx domains dxdxdx  complete assignment sum costs binary constraint variables  constraints minimal                               binary constraint variables xand  deﬁnition  weighted constraint satisfaction problem unary constraint variable unary costs  wcsp wcsp instance consists ﬁnding optimal picted inside small circles binary costs depicted la  solution instance                           beled edges connecting corresponding pair values                                                        label each edge corresponding cost values  deﬁnition  signed encoding wcsp  instance  x c                                             connected binary cost            signed cnf formula domain   instance optimal cost             dxi          xi∈d       contains possible tu     b  ∈dx     ×  × dx   ple      ik                  ik         x  ∈c      straint      ik             ik  copies     inference rule soundness  signed clause                                        completeness                 ∨···∨b                             ik   ik                 deﬁne resolution rule solving signed maxsat                                                        called signed maxsat resolution prove soundness    alternative encoding consider signed clauses completeness rule inspired previous works  weights instead allowing multiple copies clause larrosa heras  bonet et al  maxsat  sake clarity use unweighted clauses neverthe completeness proof signed cnf formulas techni  efﬁcient implementation algorithms proposed cally involved proof boolean cnf formu  deal weighted clauses extension las  oretical results weighted clauses straightforward                                                        deﬁnition  signed maxsat resolution rule                                      proposition  solving wcsp instance equivalent ﬁned follows  solving signed maxsat problem signed encoding  optimal cost coincides minimal number sx ∨ ∨ ∨                                                                   unsatisﬁed signed clauses signed encoding    ∨ ∨ ∨ bt                                                                                                                                   ∩ ∨ ∨ ∨ ∨ ∨ ∨ bt                                                                      proof combination values variables   ∪ ∨ ∨ ∨ ∨ ∨ ∨ bt                          s   scope constraint    signed encod        sx ∨ ∨ ∨ ∨  ing contains clauses cost associated sx ∨ ∨ ∨ ∨ ∨  combination assignment signed encoding     ···  stricted variables si coincides combination                                                               sx ∨ ∨ ∨ ∨ ∨ ∨ bt− ∨ bt  ci cost  clauses signed encoding                                                                ∨ ∨ ∨ bt ∨  introduced ci satisﬁed clause                                                                 ∨ ∨ ∨ bt ∨ ∨  bidding combination assignment signed en ···  coding restricted variables si coincides com s ∨ ∨ ∨ ∨ ∨ ∨ ∨         b                                                             s−     bination     ik  cost      construction signed encoding clauses inference rule applied multisets clauses           ∨···∨b    form           ik  ik falsiﬁed places premises rule conclusions  clauses introduced ci                             say rule resolves variable                                                    ijcai                                                     tautologies concluded rule like ∨ multiset clauses sum scores clauses  moved resulting multiset substitute clauses contained     sx∨s x∨a    ∪ sx∨a              ∅x∨a  like                        clauses like                                                                                                      lemma    multiset clauses variable                                                         exists multiset c c saturation    like emphasize rule does add wrt  conclusions premises replaces clauses  premises clauses conclusions           proof proceed applying nondeterministically  deﬁnition  write dwhen multiset clauses ference rule resolving obtain saturated multiset  obtained multiset applying rule ﬁnitely need prove process terminates ﬁnitely                             times write  sequence appli inference steps does exist inﬁnite se  cations resolves variable                 quences        inference                                                        resolve variable sets ci saturated    context maxsat problems inference rule let score  sound iff number falsiﬁed clauses premises let partition multiset clauses multisets  equal number falsiﬁed clauses conclusions size domain bbbn−wherebi  assignment                                       contains clauses cardinality support  theorem  soundness signed maxsat resolution  notice multiset clauses  rule sound                                        contain variable let denote sbi score                                                        multiset bi  proofleti   arbitrary assignment look multisets word length  cases                                                base multiset represented number   falsiﬁes premises falsiﬁes ﬁrst sb sb ··· sbn−takingsb signiﬁ  conclusions                       digit bi subset cfori n−    satisﬁes premises trivially satisﬁes sbi ≤  st clauses conclusion apply inference rule clauses  implied premise second clause say bi bj substitute  conclusion implied each premises set clauses distribute different bk’s  satisﬁed                             new multiset clauses soundness    ﬁrst clause conclusion implied rule score new multiset  premises premises satisﬁed look multiset number base mthe  cases sx s satisﬁed number different argue each infer             ∩ ai’s bj’s ence step number increases say clauses                                                                                         satisﬁed ﬁrst clause conclusion inference sx ∨ ∈ bs ∨ ∈ bsbythe   satisﬁes ﬁrst premise second inference step remove clauses add clause  second clause conclusion following bs∩s maybe clauses bs bs                                                                                                    clauses satisﬁed implied ﬁrst bs∪s deﬁnition saturation ∩   premise                                              ∩ s  s know ∩ s  s  ∪ s    rest conclusions cases digit bs∩s signiﬁcant dig                                            i’s satisﬁed let index bs bs bs∪s conclude  assignment satisfy ﬁrst clause conclusion                                                       new mbase number inference step larger  conclusions ∨ ∨  ∨ bt ∨ ∨ fore largest possible number obtain  ∨   ∨                                          i−   falsiﬁed i’s represented sbsb ···sbn−m ···  satisﬁed sx satisﬁed ﬁrst saturation procedure ﬁnish steps  conclusion falsiﬁed conclusions satisﬁed        satisﬁes second premise ﬁrst lemma  let saturated multiset clauses wrt  situation analogous previous case              let e subset clauses containing                                                        assignment satisfying e assigning                                 deﬁnition  multiset clauses said saturated extended assignment satisfying  wrt pair clauses  sx ∨      ∨                                                                                                                   ∪    proofwehavetoextend     satisfy  fact  literals          need set value let partition multiset                                                                                                          e−e multiset clauses contain variable xinto  ii ∩  ∩                                                                                                     multisets e−et multiset satisﬁed  multiset clauses saturation wrt e−e                     c    c                            multiset partial assignment  saturated wrt   obtained   doesn’t satisfy clauses aim show  applying inference rule resolving ﬁnitely times                                                                                             intersection supports e−ef non    assign clause ascoresc equal num way extend assigning value  ber assignments variables falsify score intersection supports                                                    ijcai                                                       saturated pair clauses  sx∨a  global consistency wcsp        s ∨ e−e                     condition ii proof theorem  extract following  deﬁnition happens condition happen                                                       exact algorithm solving wcsp  e−ef  ev                                                                                    ery pair clauses  sx ∨  ∨     input wcsp instance                                                                           e−ef   ∩s  ∩s    order         signed encoding                                                                   supports appearing e−ef decreasing order         cardinality straightforward support  saturationci−xi  contained equal predecessor particularly  cidi  partitionc xi  support equal intersection supports endfor  nonempty                                                ck                                                              ∅  theorem  completeness multiset clauses    downto                                                              ∪ xi → extensionxiidi                                                   output                                                                                    given initial wcsp instance variables                                                        algorithm returns minimal cost optimal  satisﬁable multiset clauses min                                                        solution  imum number unsatisﬁed clauses                                                          function saturationci−xi computes saturation                                                        ci− wrt xi applying resolution rule resolving  proofletxxn   list variables                                                        gets saturated set lemma  ensures process  construct sequences multisets ccn                                                        terminates particular does cycle  ddn                                                        said saturation multiset unique                                               proof theorem  does depend particular    ci ∪di saturation ci− wrt xi saturation                                                      function partitionc xi computes partition                                                        saturated subset clauses containing xi    ci multiset clauses contain                                                        subset clauses containing xi      ing xxianddi multiset clauses containing                                                          function extensionxiidi computes assign      variable xi                                                        ment xi extending assignment satisfy clauses    lemma  sequences effectively computed di according lemma  function ﬁlters clauses  saturate ci− wrt xiandthenwe  di satisﬁed computes inter  partition resulting multiset subset di containing xi section supports xi returns  ci containing variable          values intersection returns value    notice cn does contain variable                                                                ∩s  sx ∨ ∈              multiset ∅ contains                  falsiﬁes  clauses                                                                             argumentation proof lemma  ensures    going prove multiset   intersection  satisﬁable constructing assignment satisfying order saturation variables freely  nletei   di ∪  ∪dnandleten     ∅                                                                     chosen sequence   enumeration  notice                                     variables    multiset ei contains variables xixn similar approach algorithm deﬁned using                                                                                       ei saturated wrt xiand                     bucket elimination dechter   proce                                                        dures exponential worstcase complexity                     ∪e     decomposes     clauses believe algorithm rise better perfor                                          contain contains       mance proﬁle sense computation joint       construct  sequence   assignments   operation incremental  iinwherein  assignment  satisﬁes en  ∅nowii   constructed ii   local consistency wcsp  follows assume induction hypothesis ii satisﬁes                                                        wcsp number local consistency properties  eisinceei saturated wrt xi decomposes                                                        proposed local properties ensure global  di ei lemma  extend ii                                                        consistency set constraints en  assignment xi obtainii satisfy ei iterating                                                      forced efﬁciently used ﬁnd lower bound  satisﬁes    di                                                    cost    concluding soundness rule                                                          section focus binary wcsp instances  orem  inference preserves number falsiﬁed                                                        larrosa schiex  givry et al  clauses assignment  cn minimum num  ber unsatisﬁed clauses                       assume existence unary constraint variable                                                        xi constraint deﬁned deﬁne                                                    ijcai                                                     dummy constraint fakfor ak ∈ dxiwe  rule                   rule                                                                                       ∨  use standard notation binary wcsp liter ∨                                                                                                 ···  ature denote unary constraint variable ···  cij denote binary constraint variables xi                        ∨                                                             ∨                    xj ciakwhereak ∈ dxi denote fakand                                                                                                               cij akblwhereak ∈ dxi bl ∈ dxj  denote                        ···                                                             ···  fakbk                                                                                     inx                                                             inx                                                                                      jy  deﬁnition  variable xi node consistent exists                                                             jy                   ···  value ak ∈ dxi ciak wcsp node              ∗                                              isx ∨ jy        jny  consistent nc  variable node consistent     ···                                                               ∨  deﬁnition  given binary constraint cij thevalueb ∈                         ∨                                                             ···                                dxj  simple support ∈ dxi cij                       ···                  bc                           ∨  support ij                                                          ∨                                                             ···                                                                                                                   ···  deﬁnition  variable xi arc consistent value  ∨                                                                                  ∨  ∈ dxi simple support constraint cij                                                             ∗                                                           ···  wcsp arc consistent ac  variable node  arc consistent                                                                     inx ∨ jny    deﬁnition  variable xi arc consistent value lemma  star node consistency nc enforced ap  ∈ dxi support constraint cij awcsp plying rule   arc consistent fac∗ variable node  arc consistent                                       proofsayxi   variable wcsp star node                                                        consistent ∈ cij  letbe                    deﬁnition  let  total ordering variables mincij  ∈ cikwthis                    wcsp variable directional arc consistent dac means corresponding signed encoding            ∈ dx   value      support constraint cij copies jxiforallj ∈ rule  applied  cij xj xiitisfull directional arc consistent                                                        encoding times remove copies jxi  fdac addition value ∈ dxi simple                                                        ∈ copies kxi  support constraint cij xj xiawcsp                                   ∗                    wcsp equivalent new encoding star node  directional arc consistent fdac  variable                                                        consistency property variable xi  node directional arc consistent  deﬁnition  let  total ordering variables lemma  arc consistency ac enforced applying  wcsp variable xi existential arc consistent rule   value ∈ dxi ciaand                                                                     support constraint cij  wcsp existential arc proofsay variable arc consistent               ∗                                                                             consistent eac  variable node existential arc respect constraint ij forsomevariable  means                                                                            ∈                  ∈   consistent wcsp existential directional arc consistent value            ∗           ∗        ∗                                    minc     ∈  edac  ifitisfdac  eac                            ij        letbe             ij                                                                    constrain cij generate cij copies    follows deﬁne sound inference rules axi ∨ bxj foreveryb ∈ applying rule   sublanguage signed formulas just consider clauses times substitute clauses copies axi  literals signs complements cij − copies axi ∨ bxj foreveryb ∈  singletons language captures binary wcsp instances value cij −  bellow rules enforce known local new set clauses indicates variable xi arc  consistency properties lack space show sistent respect cij  value arc consistency  rules derived signed maxsat values obtained way  resolution rule    rules assume  iin     previous lemmas proved domains                                                                                        jjn ∈                                size larrosa heras                                                                                          rule                   rule                       lemma    fixed total ordering variables di                                                        rectional arc consistency dac enforced rule                                                                                xy            ix               ix ∨ jy         applied restriction              ···                      ···                                                         roof                   inx               inx ∨ jy             let    total ordering variables say                                                        xi variable directional arc consistent                                     jy              respect restriction cij variable xj                                                    ijcai                                                     
