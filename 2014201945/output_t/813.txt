                  uniform     integration    higherorder       reasoning                          external   evaluations     answerset      programming∗                thomas   eiter giovambattista   ianni roman   schindlauer  hans  tompits                       institut fur¨ informationssysteme technische universitat¨ wien                               favoritenstraße –   vienna austria                               eiter ianni roman tompitskrtuwienacat                        abstract                            important issues metareasoning                                                        context semantic web adequate support avail      introduce hex programs nonmono     able asp date motivated fact observa      tonic logic programs admitting higherorder atoms tion interoperability software      external atoms extend context important issue extend paper      known answerset semantics class pro  answerset semantics hex programs higherorder      grams higherorder features widely acknowl  logic programs accommodate metareasoning through      edged useful performing metareasoning    higherorder atoms external atoms software interop      tasks furthermore possibility   erability intuitively higherorder atom allows quantify      exchange knowledge external sources    values predicate names freely exchange predicate      fully declarative framework answerset  symbols constant symbols like rule      programming asp nowadays important par                                                                  cx ←  subclassof dx      ticular view applications semantic web      area through external atoms hex programs    external atom facilitates determine truth value      model important extensions asp atom through external source computation      useful kr tool expressing various applications stance rule      finally complexity implementation issues                                                                  reachedx ←  reachedge ax      preliminary prototype discussed                                                        computes predicate reached taking values pred                                                        icate reach computes reachedge    introduction                                       reachable nodes graph edge node delegating                                                        task external computational source exter  answerset programming asp  gelfond lifschitz nal deduction execution library   recently attracted increasing declar  ative problem solving paradigm approach prob main contributions summarized follows  lem encoded terms nonmonotonic logic program  deﬁne  syntax answerset semantics  solutions extracted hex programs extending asp higherorder features  answer sets availability efﬁ powerful interfacing external computation sources  cient answerset solvers like smodels simons et al  answerset semantics higherorder logic programs  dlv leone et al  various extensions proposed earlier ross  extension  basic language features classical negation weak proposal accommodate external atoms technically  constraints aggregates asp important kr difﬁcult approach ross based notion  formalism declaratively solving ai problems areas unfounded set easily generalized set  cluding planning diagnosis information integration rea ting approach instead based recent notion  soning inheritance challenging area seman program reduct faber et al  admits  tic web reasoning extensions asp proposed natural deﬁnition answerset semantics  facilitating interoperability description logic reasoners  rosati  eiter et al  aiming handling inﬁ  external atoms useful abstraction exten  nite treestructured models heymans vermeir  sions asp including aggregates descrip                                                        tion logic atoms agent programs external atoms fa    ∗     work partially supported austrian science cilitate investigating common properties extensions  fund fwf grant pn european com serve uniform framework deﬁning seman  mission through ist networks excellence rewerse ist tics similar extensions asp hex pro   colognet ist ist work grams basis efﬁcient design generic evaluation  ing group answer set programming ist wasp algorithms extensions framework   means hex programs powerful metareasoning rule form  available decidable context seman  tic web applications metainterpretation asp α ∨ · · · ∨ αk ← β     βn notβn     notβm     deﬁning policy languages example advanced ≥  α     αk atoms β     βm  closed world reasoning deﬁnition constructs atoms external atoms deﬁne hr  α                                                                                   −             extended ontology language rdfschema αk br  ∪b  β                                                                     −  supported higherorder features representa βn  βn     βm hr  ∅ br   tion succinct                                     ∅ constraint br  ∅ hr  ∅     simple prototype implementation language fact ordinary contains ordinary atoms  available based reduction ordinary asp        hex  program ﬁnite set rules ordinary                                                        rules ordinary    note logicbased formalisms like triple sin  tek decker  flogic kifer et al  feature  semantics  higherorder predicates metareasoning semantic                                                        deﬁne semantics hex programs generalizing  web applications triple lowlevel oriented                                                        answerset semantics gelfond lifschitz   lack precise semantics flogic implemen                                                        end use recent notion reduct deﬁned faber  tations flora florid ontoweb restricts expressiveness                                                        et al  referred flpreduct henceforth instead  wellfounded semantics negation order gain efﬁ                                                        traditional reduct gelfond lifschitz   ciency formalism instead fully declarative offers                                                        flpreduct admits elegant natural deﬁnition  possibility nondeterministic predicate deﬁnition                                                        answer sets programs aggregate atoms en  higher complexity proved useful reason                                                        sures answerset minimality deﬁnition based  ably efﬁcient range applications inherent non                                                        traditional reduct lacks important feature  determinism diagnosis planning conﬁguration                                                          sequel let hex program herbrand base  provides rich basis integrating areas                                                         denoted hb  set possible ground versions  metareasoning                                                                                                             atoms external atoms occurring obtained                                                        placing variables constants grounding     hex  programs                                     rule grndr deﬁned accordingly grounding                                                        program given grndp   sr∈p grndr unless    syntax                                           speciﬁed  implicitly given   let  mutually disjoint sets elements  called constant names variable names external pred example  given  edge arc ground instances  icate names respectively unless explicitly speciﬁed ele ex edgea arca arcarc ground  ments resp denoted ﬁrst letter upper stances reachedge nx reachedge edgea  case resp lower case elements preﬁxed reachedge arcb reachedge edgeedge  “  ” note constant names serve individ  ual predicate names                                 interpretation relative subset ⊆ hb    elements ∪ called terms higherorder containing atoms say model atom  atom atom tuple     yn     yn ∈ hb  denoted  ∈  terms ≥  arity atom intuitively external predicate ∈ associate  predicate use familiar nmary boolean function fg assigning each tuple  notation yy     yn atom ordinary     yn     xm    ing  constant                                               outg ⊆ hb  xi yj ∈    example rdf type nodex da say ⊆ hb model ground external atom  atoms ﬁrst ordinary atoms                gy     ynx     xm denoted     external atom form                     fgi    yn     xm                  gy     ynx     xm                                                         example   let associate reach function freach                                  lists terms freach   iff reachable  called input output lists respectively ∈ graph let  eb ec                                            external predicate assume  ﬁxed model reache bd freach     lengths ing  outg  input  lists respectively intuitively external atom provides let ground rule deﬁne  hr iff  way deciding truth value output tuple depending ∈ hr  ii  br iff  extension set input predicates         ∈ br  ∈ b−r                                                        iii  iff hr  br say  example  external atom reachedge ax model hex program  denoted   iff   devised computing nodes reachable ∈ grndp  satisﬁable model  graph edge node      given hex program  flpreduct respect                                                                              inreach   outreach                    ⊆ hb  denoted fp  set ∈ grndp  suchthat  br ⊆ hb answer set iff  modeling asp  extensions  external                     minimal model fp                                      atoms    illustrative example                                                        means external atoms different important extensions  example  consider following hex program       asp expressed terms hex programs    subrelationbrotherof  relativeof  ←               programs  aggregates                  brotherof john al ←               extending asp special aggregate atoms through                 relativeof john joe ←              sum maximum set numbers refer                                                        enced important issue considered                 brotherof al mick                                  ←                  recent works cf faber et al  non    invitesjohn ∨ skipx ←  john             trivial challenging problem context giving nat                        reachrelativeof  johnx   ural semantics aggregates involving recursion recent    rx   ← subrelationp            proposal semantics faber et al  elegant                                                        solution problem show easily       ← degsinvitesmin max min                                                          captured hex programs       ← degsinvitesmin max max                  aggregate atom ay  form fs ≺     informally program randomly selects certain num aggregate function sum count max  ber john’s relatives invitation ﬁrst line states ≺ ∈   ≤  ≥ term expression  brotherof subrelation relativeof  xe   lists local variables  lines concrete facts disjunctive rule chooses rela list global variables list atoms  tives employing external predicate reach exam variables    ple  rule declares generic subrelation inclusion example countx  rx sz  ≥  exploiting higherorder atoms                        aggregate atom intuitively true given     constraints ensure number invitees different values conjunction  tween   using illustration external predicate rx sz  holds  degs graph library fdegs min max given ay   fs ≺ interpretation   iff min max minimum maximum ver  values  applied set  tex degree graph induced edges respec si values  ex  tively john’s relatives determined al joe value  ay   mick answer sets each contains fxex ≺ iff fsi ≺  facts invitesjohn al invitesjohn joe using notion truthhood ay faber et                                                     invitesjohn mick                                  al  deﬁne answer sets ordinary program plus                                                                                     state basic properties semantics aggregates using reduct fp                                                            model aggregate atom ay  external  theorem  answerset semantics hex programs ex atom ay  interpretation ground  tends answerset semantics ordinary programs version ayt fai   iff  ay note  ﬁned gelfond lifschitz  answer writing code evaluating fai easy  set semantics hilog programs deﬁned ross  ordinary program aggregates let aggp                                                         hex program results replacing each    property easily proved expresses aggregate atom ay  respective external atom  answer sets adhere principle minimality    ay  following result shown    theorem  answer set hex program min theorem  ordinary program aggregates  imal model                                      answer sets aggp  coincide    ground external atom called monotonic relative                                                        description logic programs  iff ⊆ ⊆ hb  imply  instance  ground versions reachedge ax monotonic aim description logic programs dlprograms                                                        eiter et al  combine rule language  theorem  let hex  program “not”   answerset semantics description logics informally  constraints external atoms grndp  monotonic dlprogram consists description logic dl knowledge  relative  answer set base generalized normal program  disjunctionfree single answer set         tain queries realized means special atoms called                                                        dlatoms appearing body rules dlatom allows    notice property fails external atoms non specifying input bidirec  monotonic easily model default negation tional ﬂow information querying  pa external atom notpa hex program certain dl axiom negation logically follows  pa ← notpa amounts ordinary program dl knowledge bases dlprograms theo  pa ← pa answer set             ries description logics shifd shoin dwhich represent logical underpinnings web ontol derivable models extended reduct sense  ogy languages owl lite owl dl respectively bech gelfond lifschitz  treats negated mc  hofer et al                                   atoms like negated ordinary atoms informally model    formally dlatom expression dlx form  derivable created set                                                        iterative rule applications heads ﬁring rules     dls op     sm opm pm qx  ≥     nondeterministically satisﬁed                                                           embed mcaprogram hex program  each si dl concept role opi change                                                        mcp   follows each mcatom modeled  operator pi unary resp binary predicate symbol unary  resp binary predicate list terms matching arity external atom ek   fk   iff                                                        ≥ ∩ each rule form  replace  space reasons conﬁne opi    possibly negated unary predicate new atom th bi ebi add following                                                        rules       single term intuitively si  pi increases si  extension pi example dlatom                    ai ∨ ai ← th             ≤ ≤                                                                                       dlhascolor  color whitewinew                           ←                                                                globally new atom each atom infor  queries wine ontology known white wine mally rules simulate occurrence mcatom  augmenting ontology wine color hascolor head following correspondence holds  facts color program                         interpretation model ground instance theorem  ﬁnite mcaprogram atoms  dlc dlatom dlx respect dl knowledge base                                                      answer sets mcp  projected coincide  denoted dlc ∪ sisib  pib ∈  qc   entailment operator given description shown marek et al  asp extensions similar  logic dlc iff belongs concept mcaprograms modeled mcaprograms  augmenting                                         extensions similarly embedded hex pro    eiter et al  deﬁne answer sets ordinary non grams  disjunctive program relative dl knowledge base                   through reduct spl extends traditional reduct  agent programs  gelfond lifschitz  assuming each ground dl eiter et al  logicbased agent programs                                              atom dlc monotonic  dlc implies  dlc sisting rules form  ⊆  predominant setting sp treats                                                              op α  ←  χ ¬ op α      ¬ op α   negated dlatoms like negated ordinary atoms resulting                                                                       ground program spl model lmspl governing agent’s behavior opi deontic modali                                           strong answer set  iff  lmspl holds ties αi action atoms χ codecall condition    simulate dlatoms external atoms conjunction codecall atoms form  ways simple use external atoms dl inx fy  resp notinx fy  access data  fdli   iff  ldlc let dl lp  hex pro structures internal agent state through api functions  gram obtained dlprogram  replacing each fy  test result ii constraint  dlatom dlx dl show       atoms example rule                                                               dialn ← inn phonep  callp   theorem  let  dlprogram  ground dlatoms monotonic strong answer sets intuitively says agent dial phone number   dl lp  coincide                    obliged                                                           semantics agent programs terms “reasonable sta    note extend strong answerset semantics tus sets” certain sets ground formulas op α  disjunctive dlprograms simply extending embedding deﬁned eiter et al  show answer sets  dl lp  disjunctive programs illustrates use disjunctionfree logic program correspond naturally  hex programs framework deﬁning semantics    reasonable status sets straightforward agent program                                                        agp   conversely codecall atoms mod    programs  monotone  cardinality atoms       eled external atoms inf resp notinf  marek et al  present extension asp monotone deontic modalities different propositions suitable  cardinality atoms mcatoms ﬁnite set rules way class agent programs embedded  ground atoms ≥  atom true interpre hex programs host evaluation  tation ≥ ∩ holds note ordinary atom  amounts mcaprogram set rules        applications                                                        section show usage hex programs dif          ←     bm bm     bn                                                         ferent purposes joint availability higherorder  bi’s mcatoms answer sets stable external atoms beneﬁcial space reasons expo  models mcaprogram interpretations sition necessarily superﬁcial details omitted  semantic web  applications                       filtering propositions way possible customize  hex programs wellsuited convenient tool   criteria selecting propositions dropped  variety tasks related ontology languages se instance proposition                                                                                                 manticweb applications general contrast dropped rdfs axiomatic triple  approaches decidability lack          pickp  ← axiomaticp   possibility exploiting nondeterminism performing meta  reasoning encoding aggregates sophisticated deﬁning ontology semantics operator   structs through external atoms                           ﬁned terms entailment rules constraints ex    interesting application scenario features pressed language like  hex programs come  play ontology alignment  merging knowledge different sources context   dx  ← rdf subclassof  cx  semantic web important task calvanese et al       ← owlmaxcardinalityc cx   avoid inconsistencies arise merging        countrr xm    important diagnose source inconsistencies  propose “repaired” version merged ontology external atom countrr xm expresses  general given entailment operator  theories aggregate atom county  rx    want ﬁnd theory rept ∪    semantics deﬁned means external reasoners  possible consistent respect   usually rep using constraints like  deﬁned according customized criterion                                                                         ←  inconsistentpick  save knowledge possible  rep nondeterministic admit possi external predicate inconsistent takes  ble solution                                             set assertions establishes through external    hex programs allow deﬁne  according range  reasoner underlying theory inconsistent  possibilities way hex programs useful tool  modeling customizing rep operator order  closed world default reasoning  perform ontology alignment hex programs able reiter’s wellknown closedworld assumption cwa ac  express tasks following ones             knowledged important reasoning principle inferring  importing external theories achieved negative information logical knowledge base kb      following way                                ground atom pc conclude ¬pc kb  pc descrip                                                        tion logic knowledge bases lack possibility           triplex ← rdf urix                                                          using hex programs cwa easily expressed           triplex ← rdf uri     external kb queried through suitable          propositionp  ← triplep rdf type        external atoms show description logic                                 rdf statement       knowledge base assuming generic external atom                                                        dl cx modeling dlatom dlcx available      assume deal rdf theories cwa principle stated follows      advantage external predicate rdf intended                                                                         ←  dl cx conceptc      extract knowledge given uri uniform resource                             identiﬁer form set “reiﬁed” ternary assertions       cwac  ox  searching space assertions task required conceptc predicate holds concepts      order choose nondeterministically proposi cwac states complement      tions included merged theory cwa ox predicate holds individuals      statements like                         occurring example given            pickp  ∨ dropp  ← propositionp                   man person personlee     translating manipulating reiﬁed assertions concepts man person cwa infers ¬manlee      choosing rdf triples possibly including known cwa inconsistent      owl  assertions easier manipulatable read example contains axiom      able format making selected propositions true                                                                      person  man  woman      following rules employed                                                                       woman                     ¬manlee        ← pickp  triplep rdf subject concept     cwa infers                                                            ¬womanlee                                                triplep rdf predicate             inconsistent                            triplep rdf object      language enriched weak constraints max           cx  ← rdf type                   imize set selected propositions using constraint form                                                        ∼dropp     httpwwwworgtrrdfmt    information   section refer Łukaszewicz   rdf                                            references closedworld reasoning circumscription
