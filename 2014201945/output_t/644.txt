                 optimal timespace tradeoff probabilistic inference                                        david allen adnan darwiche                                            university california                                            los angeles ca                                         dlallendarwichecsuclaedu                          abstract         recursive conditioning rc anyspace al•      gorithm lor exact inference bayesian networks       trade space time increments       size floating point number smooth trade•      possible varying algorithms cache       size rc run constrained cache       size important problem arises specific       results cached order minimize       running time algorithm rc driven       structure known dtree dtrees       exist given bayesian network paper       examine problem searching opti•      mal caching scheme given dtree present       optimal timespace tradeoff curves given               figure  example dtree       dtrees published bayesian networks       compare curves memory require•     approach problem formulating system•      ments stateoftheart algorithms based join atic search problem use developed method       trees results show memory require•   construct timespace tradeoff curves realworld       ments networks significantly re•   bayesian networks curves perspective       duced minimal cost time allowing   comparing memory requirements stateof      exact inference situations previously imprac• theart methods based jointrees jensen et        tical show probabilistic reasoning shafer shenoy  curves produced illustrate       systems efficiently designed run   significant memory reduced       varying amounts memory                         minimal cost time fact domains                                                          timespace curves produce appear close linear ex•                                                         ponential behavior appearing near extreme case    introduction                                         caching dramatic space reduction significant                                                          time penalty allows practically reason bayesian   recursive conditioning rc recently proposed networks impractical handle   anyspace algorithm exact inference bayesian net•                                                           paper structured follows start section    works darwiche  algorithm works using con•                                                         providing background recursive conditioning   ditioning decompose network smaller subnetworks                                                          cache allocation problem formulate prob•  solved independently recursively using rc                                                          lem section  systematic search problem timespace   turns subnetworks generated                                                          tradeoff curves published bayesian networks   decomposition process need solved multiple times re•                                                         presented section  finally section  provide   dundantly allowing results stored cache                                                          concluding remarks discuss future work   computation subsequently fetched during   computations gives algorithm anyspace   behavior number results cached  anyspace inference   leads important question subject rc algorithm exact inference bayesian networks   paper given limited memory re• works using conditioning case analysis decompose   sults cached order minimize running time network smaller subnetworks solved indepen•  recursive conditioning algorithm              dently recursively algorithm driven structure       probabilistic inference                                                                                 known decomposition tree dtree controls de•   composition process each level recursion    review dtree structure discuss rc     dtrees    definition  darwiche  dtree bayesian net•   work binary tree leaves correspond   network conditional probability tables cpts leaf   node corresponds cpt varst defined   variables appearing cpt      figure  depicts simple dtree root node dtree   represents entire network decompose network   dtree instructs condition variable called   cutset root node conditioning set variables leads   removing edges outgoing variables   cutset guaranteed disconnect network sub•  networks corresponding left child node   corresponding right child node fig•  ure  decomposition process continues boundary   condition reached subnetwork single   variable     present notation needed define ad•  ditional concepts regard dtree notation      used left child right child node   function vars extended internal nodes   varst vars each node dtree three            directly using hmetis karypis kumar    sets variables associated hypergraph partitioning program   sets used rc algorithm set used   analyze complexity algorithm             recursive conditioning                                                            given bayesian network corresponding dtree                                                          root rc algorithm given algorithms                                                            used compute probability evidence record•                                                         ing instantiation calling rc returns                                                          probability                                                            main concern line  line                                                           algorithm line  algorithm checks                                                          performed cached computation respect   width dtree size maximal cluster — subnetwork associated node  computation charac•    cutset dtree node used decompose net• terized instantiation vs context serves   work associated node  smaller networks asso• index cache attached node  com•  ciated children conditioning vari• putation performed cached result   ables cutsetf guaranteed disconnect net• simply fetched computation performed   work associated node context dtree node result possibly cached line    used cache results computations net• computation cached rc uses expw   work associated node yield result space expiu time number nodes   computations occur instantiation variables network width dtree cor•  contextf cache associated each dtree responds complexity jointree algorithm assuming   node stores results computations proba• dtree generated jointree danviche    bilities indexed instantiations contextf means computations cached memory requirement   size cache associated dtree node grow rc reduced case time requirement   large number instantiations contextt increases nexpw logn memory be•    given bayesian network different dtrees exist tween extremes used increments   quality dtree significantly affects resource size floating point number cache value   requirements rc width important measure suppose available memory limited   rcs time complexity exponential value cache subset computations performed   construction dtrees scope paper rc specific subset cache dramatic ef•  danviche  danviche hopkins  fect algorithms running time key question   shown create elimination orders jointrees choose subset minimizes running time                                                                                    probabilistic inference              figure  example dgraph               figure  search tree dgraph  internal nodes                                                              count number recursive calls rc   main objective paper refer                                                          compute running time given discrete   secondary optimization problem optimization                                                          cache factor specifically denotes parent node   problem constructing optimal dtree                                                          dgraph denotes number instantiations     results paper based version                                                          variables number recursive calls node   rc computes probability evidence                                                          ldarwiche     posterior marginals families poste•  rior marginals individual variables version rc   uses decomposition graph dgraph basically set   dtrees share structure     example dgraph network variables   seen figure  noted each cache factor discrete formula gives   root nodes corresponds valid dtree dgraph ac• average number recursive calls actual number   tually contains dtrees share significant portion calls depend specific computations cached   structure creation dgraphs discussed ldar equation significant used predict expected   wiche                                           time requirement rc given caching scheme     code algorithms   used ver• focus paper searching optimal dis•  sion rc rcr called each root crete cache factor given limited memory   dgraph posterior marginal each family computed optimality respect minimizing number recur•  side effect each calls version rc sive calls end define search problem   uses memory maintains caches finding optimal discrete cache factor develop   meaningful comes comparing time space depthfirst branchandbound search algorithm   tradeoff curves memory requirements jointree al• use developed algorithm construct timespace   gorithms version rc equally powerful tradeoff curves published bayesian networks   algorithms                                            various domains compare curves memory                                                          demands running times jointree algorithms    cache allocation problem                          cache allocation search problem   total number computations dgraph dtree cache allocation problem phrased search   node needs cache equals number instantiations problem states search space correspond   contextt given memory constraint partial cache factors violate given memory   able cache computations need constraint operator extends partial cache fac•  way specify results particular cache cache tor making caching decision dgraph node   factor cf dgraph function maps each internal initial state problem cache factor   node dgraph number cf   caching decisions nodes   cft   node cache  dgraph goal states correspond complete cache   total computations discrete cache factor factors caching decision   maps internal dgraph node   dgraph node violating given memory constraint   nodes computations cached cached rc suppose example dgraph three inter•  code algorithms   assumes discrete cache factor nal nodes lead search tree   captured flag cache£ indicating figure  figure each node search tree repre•  caching place dgraph node              sents partial cache factor example node bold       probabilistic inference                                                                                  corresponds partial cache factor               unmanageable quickly search algorithm    node labeled dgraph        eliminate portions search space able    node children represent possible exten• guarantee optimal result key methods doing    sions cache factor dgraph node    pruning parts search tree known    cache computations —child contain nonoptimal results dfbnb algorithm does    dgraph node cache computations —child     pruning search tree nodes cost function      according search tree figure  makes larger equal current best solution   decision dgraph node followed decision    accurate cost functions allow pruning ma•  dgraph node node £ fixed ordering dgraph jor source pruning given constraint total memory   nodes necessary long following con• accomplished pruning search tree node   dition met decision dgraph node descendants attempts assign memory   decisions ancestors caches permitted memory constraint   dgraph explain reason constraint later   discuss cost functions                         search decisions     search tree depicted figure  leftmost leaf chosen cost function left   represents caching rightmost leaf represents important choices search algorithm    caching search trees problem maximum child search tree node expanded    depth number internal nodes order visit dgraph nodes during search expanding   dgraph given property depthfirst branchandbound child greedy approach attempts fully cache   search good choice given optimality linear space dgraph node possible results dif•  complexity papadimitriou steiglitz  ferent networks shown cases expanding   anytime algorithm meaning return best —child child appears equal bet•  result far interrupted run completion return ter opposite choice adopt   optimal solution focus developing experiments specific order visit dgraph   depthfirst branchandbound search algorithm         nodes search tree turns dra•                                                         matic effect efficiency search wc make    cost functions                                                          caching decisions parent dgraph nodes chil•  depthfirst branchandbound dfbnb algorithm re• dren lot flexibility experimentation   quires cost function  assigns cost networks shown choosing dgraph node   node search tree function estimates    largest contextt orders magnitude ef•  cost optimal solution passes through key ficient basic ordering heuristics allen   overestimate cost darwiche  choice corresponds choosing   loses optimality guarantee offered search algo• dgraph node largest cache use   rithm develop cost function based search algorithm   following observations each node represents   partial cache factor function estimate num•  ber recursive calls rc based optimal com•  timespace tradeoff   pletion cache factor consider completion    main goal section present timespace tradeoff   decide cache each dgraph node curves number benchmark bayesian networks      did make decision cache factor obtained bayesian network repository   best completion viewpoint running time url included distributions hugin   violate constraint given total memory expert url genle url main points observe   use compute guarantees  respect each curve slope curve pro•  overestimate cost optimal completion vides information time penalty pays reduc•    important observation regard ing space probabilistic inference second main point   caching decision ancestors dgraph node compare produced curves time space   compute exactly number recursive calls requirement jointree methods version rc   dgraph node equation  using provides functionality algorithms   extending partial cache factor insist probability evidence posterior marginals   making decision regarding dgraph node families variables baseline comparison impor•  decisions ancestors improves tant places results context stateoftheart   quality estimate gets deeper tree inference systems   allows incrementally compute estimate based timespace tradeoff curves figures    depict   estimate parent search tree       optimal discrete timespace tradeoff curves three net•                                                         works curves generated follows join   pruning                                                         tree generated network using hugin   depicted search tree figure  potentially   exponential number goal nodes search tree used hugins default setting minimum fillin weight   combinatorial explosion exhaustive search heuristic conjunction prime component analysis                                                                                    probabilistic inference                                                                figure  timespace tradeoff water                                                            number observations order time                                                         space tradeoff curves show memory used                                                          rc caching close required                                                          shenoyshafer architecture hugin architecture takes                                                          space second curves show signifi•                                                         memory reduced                                                          caching limited increase time required                                                          fact exponential growth appears occurring near                                                          lower extreme caching space requirement                                                          water figure  example reduced                                                           increasing running time factor                                                           space requirements figure  reduced                                                           increasing running time factor                                                           finally note each optimal search water                                                          networks took seconds each opti•            figure  timespace tradeoff          mal search alarm took minutes stress                                                          searches need                                                          network results used   jointree converted dtree described dar queries   wiche  dtree finally converted dgraph                                                            nonoptimal tradeoffs networks search   described paper sets results                                                          space large solve optimally using search algo•  generated                                                          rithm anytime nature algorithm allows       computed space requirements jointree algo• interrupt search point ask best result       rithms using hugin jensen et al  obtained far figures   generated allow•      shenoyshafer ishaferand shenoy  architectures ing search run hour curves       architecture assumed table each optimal useful practically example ac•      clique table each separator sec• cording curves memory requirement barley       ond assumed tables each separator ta• reduced  mb  mb       bles cliques performed propagation increasing running time   minutes       jointree using netica norsys software corp url space requirement munin  reduced       recorded running time                          mb  mb increasing running     • ran search algorithm optimal time  minutes  hours encouraged       cache factor different memory constraints results planning investigate non      generated  data points each curve each optimal search methods local search       caching factor identified computed num• dtrees vs dgraphs running rc dtree takes       ber recursive calls rc space running dgraph produces       factor converted calls seconds                                                           mb ram makes average number three      java implementation rc sun ultra   mhz million recursive calls second       probabilistic inference                                                                                
