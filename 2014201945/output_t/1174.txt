               informationtheoretic approaches branching search∗                          andrew gilpin                              tuomas sandholm                science department                  science department                  carnegie mellon university                   carnegie mellon university                     pittsburgh pa                          pittsburgh pa                         abstract                          ming include scheduling routing vlsi circuit design                                                        facility location nemhauser wolsey  integer pro      deciding question branch each node      key element search algorithms introduce gramming problem optimizing linear function sub                                                        ject linear constraints integrality constraints      informationtheoretic paradigm branching                                                        variables formally      question selection idea drive search      reduce uncertainty entropy current sub deﬁnition   integer programming      problem present families methods given ntuple rationals mtuple rationals      fall paradigm ﬁrst variable × matrix rationals  integer pro      branch selected based lookahead gramming problem ﬁnd ntuple ax ≤      method performs comparably strong branch      ∈ · minimized      ing miplib better strong branching      hard realworld procurement optimization   variables constrained integers neces      stances cplex’s default strong branch   sarily binary problem simply called integer pro      ing outperforms cplex’s default branching strat  gramming variables constrained integral      egy second family combines idea    real problem called mixed integer      strong branching family does use   programming mip problem called pure      lookahead instead exploits tie integer programming                                                                                               np      dicator variables variables gov decision version mip  complete      ern signiﬁcantly outperforms stateof  karp  sophisticated techniques      theart branching strategies fourth family solve large instances practice review      branching using carefully constructed linear existing techniques build methods      inequality constraints sets variables                                                        branchandbound                                                        branchandbound search best solution far    introduction                                       incumbent kept memory node search  search fundamental technique problem solving ai tree generated lower bound aka festimate  operations research node search tree solution value computed solving relaxed version  search algorithm poses question tries problem honoring commitments  different answers correspond branches emanat search path far common method doing  ing node different ways deciding solve problem relaxing integrality  question pose branching strategies studied straints undecided variables linear program lp    introduce new paradigm developing branching solved fast practice example using simplex  strategies employing information theory principle algorithm polynomial worstcase time using interior  guides development strategies aim reduce point methods path terminates lower bound  certainty entropy current subtree context value incumbent paths ter  solving integer programs develop highlevel fami minated incumbent provably optimal solution  lies strategies fall paradigm show ways decide leaf node  signiﬁcantly improve speed existing strate search tree expand example depthﬁrst  gies rest section covers needed background branchandbound recent node expanded                                                                                   integer programming                              search hart et al   leaf lowest lower                                                        bound expanded desirable sense  important computational problems cs given branch question ordering tree search algorithm  integer programming applications integer program ﬁnds provably optimal solution guarantee expand     ∗this work funded conducted combinenet ing fewer nodes dechter pearl  iden  th st pittsburgh pa          tical nodeselection strategy bestbound search used                                                    ijcai                                                    mip wolsey  experiments algorithm  strong branching sb  use bestbound search algorithms     candidates ←i  xi fractional                                                                    ∈ candidates  branchandcut                                           each                                                                             ←  −x    modern algorithm solving mips branchand                                                                              zl                         xl ≤x    cut ﬁrst achieved success solving large instances let solution current lp                                                                     zu                          xu ≥                                                               let  solution current lp   traveling salesman problem padberg rinaldi                                       core fastest commercial general scorexi ←  · minz  maxz                                                              ∗  purpose integer programming packages like branchand  ← argmaxi∈candidates scorexi  bound addition algorithm generate  return i∗  cutting planes nemhauser wolsey  different ways step  straints added problem search node formed algorithm  method applegate  result tighter lp polytope cutting op et al  experimented following variations  timal integer solution higher lower bound addition method  higher lower bound turn cause earlier termination                                                                                        scorexi ← minz  · maxz   search path yields smaller search trees                                                                             scorexi ←     cplex  ilog  leading commercial soft                                                                             scorexi ← maxz   ware product solving mips uses branchandcut                                                                             scorexi ← minz   conﬁgured support different branching algo                         rithms makes available lowlevel interfaces control  scorexi ←  − xiz  xiz  ling search developed branching methods preliminary experiments variation  framework cplex allowing advantage dominated decided  components cplex presolver variation algorithm  shown  cutting plane engine lp solver allow form practice applegate et al   ing ﬂexibility developing methods used  cplex version  newest version time  informationtheoretic paradigm  experiments conﬁgured search order bestbound branching search  vary branching strategies discuss                                                        simple key observation paradigm  selecting question branch                     beginning search nodes frontier  node tree search search algorithm search tree large amounts uncertainty vari  decide question branch children ables’ values end search  node bulk research focused path ends uncertainty left node’s variable  branching individual variables intuitive assignments motivated observation paradigm  relatively small set branching candidates tends guide search remove uncertainty  lp sparse relatively fast solve nodes frontier search tree paper ap  words question “what value variable ply paradigm decide question branched  be” children correspond different answers each search node work  question                                             search speciﬁcally developing branching heuris    commonly used method branch tics knowledge ﬁrst work takes  fractional variable variable lp value furthest informationtheoretic approach guiding search process  integral wolsey  finding branching view paradigm use information  variable rule fast method yields small theoretic measures quantify propagation  search trees problem instances               didate branching question cause—not counting    sophisticated approach better suited unassigned variables affected  certain hard problem instances strong branching apple  gate et al  algorithm performs onestep looka speciﬁcally context mip idea  head each variable nonintegral lp paradigm treat fractional portion integer  node onestep lookahead computations solve lp constrained variables lp solution probabilities indi  laxation each children                   cating probability expect variable                                                        greater current value optimal solution clearly          difference children evaluated interpreting lp variable values independent probabilities  generated bestbound search children  queued expansion based parents’ values lp lps need solved similarly child lps solved  each child solved child comes expansion optimality work number simplex  queue bestbound search needs continue each node pivots perform each child parameter vary  queue value better incumbent bestbound parameters experiments  search generates nodes require fewer lps addition variables getting ﬁxed value assignments  solved                                         path end infeasibility assignments far implying     practice lookahead heuristi tradiction pruning bound optimistic value node  cally selected ones variables order reduce number better value incumbent                                                    ijcai                                                    enormous inaccurate assumption instead examining objective values potential  approach caution constraints problem child nodes examine remaining uncertainty entropy  variables interdependent potential child nodes choosing variable branch  attempting derive theoretical results related yields children uncertainty  assumption use assumption algorithm  entropic branching eb  deciding branch search framework                                                           candidates ←i  xi fractional  guarantee optimality assumption does neg     ∈ candidates  atively interfere results demonstrate  each                                                                    xf ← xi −xi  later experiments assumption works prac                                tice merit interpreting lp variables let xˆ solution vector lp xˆi ≤xi                                                                    xu                         xu ≥     probabilities used successfully randomized approx let ˆ solution vector lp with ˆi i                                                                                                       imation algorithms vazirani                       entropyxi ←  − xf xˆj  xf xˆj                                                             ∗    speciﬁc families branch ques  ← argmini∈candidates entropyxi  tion selection techniques paradigm useful  return i∗  deﬁne quantify “uncertainty” partial  solution borrow deﬁnitions informa eb usable mip does make  tion theory primary contribution notion sumptions underlying model problem  entropy shannon  measures used  uncertainty random event given event eb modiﬁed perform onestep looka  comes say   compute entropy event head obvious way likely lead smaller  probability each outcome occurring       search trees time spent node                                                        way mitigating tradeoff conduct deeper  deﬁnition  entropy binary variable            lookaheads candidates look promising based                                              consider event outcomes   let shallower lookaheads curtail candidate                                      −  probability outcome  occurring  proba set based heuristics lookahead conducted  bility outcome  occurring compute entropy illustrative purposes interesting  follows                                                       exact analogy entropic lookahead method            −x log −  − xlog − xx        question selection search nodes algorithms deci   ex                                       ∈      sion tree induction quinlan  recursive                                                        cision tree induction algorithms question inserted    possible use functions measure the uncer leaf results greatest information gain similarly                                                    search choosing questions children  tainty binary variable example ex  −  −                                                       entropy creating children sense result  exx  −  alternatively used                                                        greatest information gain  text ﬁrst family branching question selection tech  niques discussed experimented using  functions major improvement compared  family  hybridizing sb eb  ing ex deﬁnition  rest observed pseudocode given algo  paper use standard way calculating entropy rithms   sb eb computed quite similarly    entropy additive independent variables com natural question arises develop hybrid approach  pute entropy group variables follows  combining strengths using signiﬁcantly  deﬁnition  entropy group binary variables  computational resources section answer  given set probabilities corresponding independent question afﬁrmative introducing second family  binary events compute entropy set variable selection strategies family sb eb                                                       hybridized different ways each methods requires                entropy      ex                  small additional computation compared                              x∈x                       performing sb eb lookahead  ex deﬁnition                       child lp solves used classify hybrid    possible multiple optimal solu approaches categories tiebreaking combina  tions optimization problem optimal solutions tional  zero uncertainty according measure  tiebreaking methods  ready present families branching question selec  tion techniques fall informationtheoretic approach ﬁrst perform sb computations  paradigm branching                               algorithm  instead simply branching variable                                                        best score break ties using entropy computation    family  entropic lookahead variable          computed lp relaxations each                                                        branch computing entropy negligible computational     selection                                          cost relative computing lp relaxations addition  ﬁrst family determine variable branch breaking exact ties experimented approach  ing onestep lookahead strong branching difference considering variables having sb scores xof                                                    ijcai                                                    each tied experiments described experiments realworld procurement optimization  tested ∈                              showed previous section lookahead                                                        strong branching does pay classes problems    combinational methods                            obtain pertinent evaluation eb stateof  present methods combining information sb theart lookaheadbased technique sb wanted test  eb order compute single score variable problem set sb algorithm choice com  variable best score branched pared nonlookaheadbased standard techniques ran                                                        experiments combinenet inc’s repository thousands    ﬁrst method rank performs computation                                                        largescale realworld industrial procurement optimization  sb eb ﬁrst computations performed                                                        instances varying sizes structures selected  simultaneously little additional cost doing                                                        stances cplex’s implementation sb faster  sb eb deﬁne  ranksbxi rank                                                        cplex’s default branching strategy   variable xi terms sb score variable                                                        stances cplex’s implementation sb average   largest score rank  variable                                                        faster cplex’s default branching strategy  secondlargest score rank  sim                                                        concluded sb good algorithm data set  ilarly deﬁne rankebxi rank variable xi                                                        performed comparison eb sb data  terms eb entropy each variable let                                                          tables – summarize experimental results eb  rankxiranksbxirankebxi    choose vari                                                        varied size candidate list number sim  able xi smallest rank                                                        plex iterations performed dual lp each child    second method combρ  − ρ computes convex                                                        candidate limiting size candidate list  combination sb score weight ρ current                                                        choose candidates order fractional  entropy minus eb score weight −ρ selects  variable highest ﬁnal score               candidates  iters  iters  iters unlimited iters                                                                              experiments eb hybrid methods           unlimited           conducted host experiments search methods table  average computation time  instances  described miplib realworld procure entropic branching hour time limit  ment optimization instances experiments candidates  iters  iters  iters unlimited iters  algorithms ran main memory paging issue                                                                                        order able carefully fairly control pa unlimited      rameter settings sb eb implemented  using cplex’s default sb allowed table  median computation time  instances en  control proprietary undocumented candidate selection tropic branching hour time limit  method scoring function cplex does provide candidates  iters  iters  iters unlimited iters  adequate apis use methods eb implemen                                tation algorithms codebase minimizes unlimited                     differences implementationrelated runtime overhead table  number instances  taking hour                                                          tables demonstrate eb fastest  experiments miplib                              detailed branch selection additional work performing  miplib bixby et al  library mip instances simplex iterations pays giving accurate  commonly used benchmarking mip algorithms  estimate entropy individual variables similarly  experimented instances newest miplib  examining candidate variables eb likely    eb sb comparable reached hour time branch variable decreases total en  limit   instances respectively eb tropy suggests better method choos  outperformed sb   instances quite ing candidate list lead speedup  remarkable sense eb does use objective methods allowed unlimited candidates itera  function problem making branching decisions tions eb  faster sb comparable number    experiments show average rank best eb’s  average seconds  sb  hybrid methods  instances  hybrid methods outperformed sb eb   family  entropic lookaheadfree variable  showing combination better parts selection    eb performs comparably sb  strategies dominated miplib cplex’s default introduce family branching strategies  branching strategy searches larger number entropybased branching paradigm method  nodes problems lots structure expect usual mip tackle dual lp instead primal  reverse true subsection use lp node’s dual solution serves feasible basis  stances cplex’s default sb outperforms cplex’s child serves hot start simplex ﬁrst child’s dual  default branching strategy demonstrate eb lp solve starts parent’s dual lp basis second child’s  performs sb data set                         lp solve starts ﬁrst child’s lp basis                                                    ijcai                                                    computationally expensive methods pre variable yj lp gives inaccu  sented far does use lookahead rate values derive variables corresponding  does require advanced knowledge struc supplier js bids branching strategy works fol  ture problem problem experi lows each supplier yj ∈   compute                                                        entropy           xi                        yj  ment motivated realworld electronic commerce ap         isij   andbranchonthevariable                                                                 plication combinatorial procurement auction aka argminj entropyj strategy does use  verse auction buyer speciﬁes maximum num lookahead uses lp values current search  ber winning suppliers davenport kalagnanam  node branching strategy indicator entropic  sandholm suri                              branching ieb  deﬁnition  combinatorial procurement auction max  experimental results  imum winners constraint  let   goods buyer wishes problem motivated realworld applica  procure buyer wants unit each good tion publicly available realworld instances  let  suppliers participating realworld data studied previous section does ex                                                                           procurement let  bbn bids actly ﬁt model instead created artiﬁcial instance  bi    gisipi  indicates supplier si supply distribution problem closely approximates  bundle goods gi ⊆mat price  pi finally buyer realworld problem  indicates maximum number winners winner given parameters number suppliers number  termination problem identify winning bids regions goods region bids region  minimize buyer’s cost subject constraints create instance procurement auction maximum  buyer’s demand satisﬁed maximum number winners constraint follows  each bidder bids  winners constraint satisﬁed                       gion probability   each region generate                                                        bidder’s bids using decay distribution sandholm                 np  problem   complete bids sin α  data distribution determined  gle items sandholm suri  integer pro cplex’s default branching strategy best  gramming methods successfully used previously qualitatively different branching strategies cplex  winner determination research andersson et al  offers particular faster strong branching  sandholm et al  sandholm  data table  shows experimental results comparing ieb  naturally formulate generalized winner determina cplex using default branching strategy results  tion problem as mip                               indicate ieb performs signiﬁcantly better rela                     minimize  i                                  tive difference increases problem size                      xi ≥            ∈     ij∈gi                                 beneﬁt achieved entropic                xi − myj ≤    ∈s      branching simply forcing branching path occur              s                 yj − ≤                           fractional indicator variables ﬁrst branching              xi ∈               ∈n      variables let cplex make              yj ∈               ∈s      variable selection strategy cplexif                                                                       cplex   cplexif    ieb  formulation typical common class problems                                                                                binary “indicator” variables—the variables                     formulation above—are used model logical connec                      tives nemhauser wolsey  constraints state  exactly variables set variables table  ﬁrst rows contain solution time seconds  nonzero important special case case ﬁnding optimal solution proving optimality averaged                                                         instances timeouts row indicates  called specialordered set type typically lp relax average integrality gap far optimal worst best  ation gives poor approximate values indicator variables                                                      solution far hour  big ’s constraints include indicators  family  entropic lookahead  large m’s small possible  formulation indicator effect multivariable branches  taking tiny value conversely holding section introduce fourth family methods  value close  show branching method determining good question branch eb  propose helps signiﬁcantly address problem formed onestep lookahead each nonintegral variable                                                        generalize entropic lookahead branching    branching strategy                                                           furthermore combinatorial auction instance gener  hardness problem comes primarily deter ators published literature notion supplier  mining winning set suppliers terms                                                           each bid decay distribution generated follows  mip need determine values main idea bid random item repeatedly add new ran  branching strategy problem branch dom item replacement probability α  yj values correspond suppliers item added bid includes items pick price  uncertain deriving uncertainty uniformly  number items bid                                                    ijcai                                                    
