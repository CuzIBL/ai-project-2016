                       new approach multiobjective search                                    mandow jl perez¬¥    la cruz                               dpto lenguajes ciencias la computacion¬¥                               universidad malaga¬¥   malaga¬¥  spain                                       lawrence perezlccumaes                          abstract                          analogous shared moa ad                                                        ditionally empirical tests show new algorithm offers      paper presents new algorithm multiob   substantial savings memory moa      jective heuristic graph search problems algo  paper organized follows section  reviews pre      rithm presents nice properties easily vious relevant work scalar search points analogies      proven additionally empirical tests show sub differences multiobjective search problem sec      stantial savings memory achieved   tion  presents new algorithm illustrates behaviour      previous proposals                               simple example relevant differences moa                                                        identiÔ¨Åed section  proves admissibility new al    introduction                                       gorithm discusses efÔ¨Åciency performance  multiobjective search problem extension results multiobjective search set randomly gener  shortest path problem arc costs vectors ated grid search problems presented section  finally  genuinely different problem vector costs induce conclusions future research brieÔ¨Çy summarized  partial order relation    loui  studied extension dijkstra‚Äôs algorithm  scalar multiobjective search  multiobjective case showed stochastic  previous results scalar graph search  search problems reduced multiobjective ones stew  art white  outlined moa multiobjective exten shortest path problem stated follows given  sion presented proofs admissibility node ex locally Ô¨Ånite labelled directed graph   pansion comparison heuristics dasgupta et al  nodes arcs labelled positive costs  extended work ways including version cn ‚àà start node ‚àà set goal nodes  nonmonotone heuristics moa applications Œì ‚äÜ Ô¨Ånd minimum cost path node  area vlsi design log cutting problem perny Œì  spanjaard  presented generalization moa algorithm hart et al  efÔ¨Åcient solution  application web access problem mandow perez¬¥ problem bestÔ¨Årst search algorithm uses  la cruz  presented systematic extension heuris search tree store set known interesting partial solu  tic search paradigm multicriteria case admissibility tion paths list open nodes expanded  conditions algorithms different multicriteria prefer characteristic evaluation function fn  gn  hn  ence relations multiobjective multiattribute lexicographic select open node expanded function  goalbased                                      gn denotes known cost path stored tree    paper reconsiders extension multi heuristic function hn estimates cost  objective case presents new algorithm basic op solution node goal node heuristic functions  erations selection expansion open nodes devised particular problems depending se  each iteration each open node stands single par mantics  tial solution path expanded beautiful results presented analyse rela  explained paper longer case multi tion accuracy hn properties  objective problems interesting paths reach admissibility let h‚àón real optimal cost path  node moa algorithm stewart white goal node heuristic optimistic   subsequent extensions devised preserving estimate hn ‚â§ h‚àón ‚àÄn search admissible  node selection expansion algorithm‚Äôs basic oper solution exists guaranteed Ô¨Ånd optimal  ations paper presents extension mul additional constraints hn ‚â•  ‚àÄn cn ‚â•    tiobjective case preserves path selection expansion  ‚àÄn ‚àà admissible inÔ¨Ånite graphs  basic operations admissibility proven efÔ¨Åciency ‚àÄn hn   behaves like dijkstra‚Äôs  easily new algorithm shows important properties algorithm hn consistent satisÔ¨Åes equivalentmonotone property                                       finally each time new path generated known                                                         node cost need tested dominance          hn  cn  ‚â§ hn  ‚àÄn  ‚àà           set known costs reaching node  solves problem iterations storing general heuristic estimates involve set vectors  nodes memory worst case particularly c‚àó denotes hn each node estimating cost vectors paths  optimal solution cost expand nodes each goal node each path psn              ‚àó                           ‚àó  fn   fn ‚â§  cost gp  set heuristic evaluation  given optimistic estimate big values hn push vectors psn function multiobjective analogue  evaluation nodes fn  c‚àó fn  frontier reducing search effort                                                                                                                           psn  ngp   nondomf   gp  ‚àß ‚àà  optimality heuristic monotone hn  proven optimal class admissible bestÔ¨Årst algo nondomx denotes set nondominated vectors  rithms guided pathdependent evaluation functions set  dechter pearl                               finally note each iteration selects expands                                                        open node considers possible extensions    extension multiobjective case             path stored search tree node each  multiobjective search problem stated follows open node stands single partial solution path  given locally Ô¨Ånite labelled directed graph  ac expanded multiobjective case  nodes arcs labelled positive vec acyclic graph used instead tree record partial  tors cn ‚àà rq start node ‚àà set goal nodes solutions longer case moa algo  Œì ‚äÜ Ô¨Ånd set nondominated cost paths rithm stewart white  devised preserving node  nodes Œì                                        selection expansion algorithm‚Äôs basic operations    multiobjective problems cost vectors cn induce section introduces extension multi  partial order preference relation ‚â∫ called dominance objective case preserves path selection expansion                                                        basic operations        rq                                ‚àÄf ‚àà      ‚â∫   ‚áî    ‚àÄi  fi ‚â§ fi ‚àß                                                            new algorithm multiobjective  fi denotes ith element vector    given qdimensional vectors search  possible rank better  brief description  example dimensional cost space vector   pseudocode new multiobjective search algorithm  dominates   dominance relation exists shown table   vectors                                  accordance considerations sec     essence multiobjective search problem Ô¨Ånd vise extension multiobjective case fol  set nondominated solution paths lowing way  analogy traced version aims Ô¨Ånding  optimal paths important differences ‚Ä¢ algorithm uses acyclic search graph sg record  scalar search problem pointed             interesting partial solution paths each node sg    given dominance preference relation sets gcln gopn denote sets non  uncomparable nondominated paths reach    dominated cost vectors paths reaching  given node different parents explored respectively closed  important consequences identiÔ¨Åed                  open each cost vector sets labels                                                            pointers emanating parents cost    search tree used record best known path initially node sg      generated nodes longer sufÔ¨Åcient directed      acyclic graph used instead record set ‚Ä¢ algorithm keeps list op en partial solution      nondominated known paths generated nodes         paths expanded each node                                                            sg  each nondominated cost vector ‚àà gopn    number generated nodes longer      corresponding triple ng ng      realistic estimate memory needed algo                                                            op en initially sgs sgs triple      rithm arcs nondominated cost vectors reach op en      ing each node need recorded let      upper bound size largest set non ‚Ä¢ each iteration algorithm consider exten      dominated vectors node om bound  sion open triple ng  stands partial      size approximations sets worst solution path cost      case omn   cost vectors need stored bent  ‚Ä¢ sets goaln  cost record goal nodes      ley et al  prove average number non reached nondominated cost vectors goal      dominated qdimensional vectors set size nodes respectively solution known cost      ologlq‚àí provided nq relative orderings vector used discard Ô¨Ålter dominated open      equally probable                                     triples                                                      table  new path expansion algorithm multiobjective                                                        search                                                           create                                                              ‚Ä¢ acyclic search graph sg rooted                                                              ‚Ä¢ list alternatives op en  sgs sgs                                                               ‚Ä¢ sets goaln  cost        figure  sample graph heuristic function                                                           check  termination   op en                                                              backtrack sg nodes goaln return                                                            set solution paths costs cost                                                             path selection select alternative ngn                                                             open ‚àà nondominated op en                                                                                                                                                             ‚àÄn gn   ‚àà op en ‚àà    ‚â∫                                                              delete ng   op en            figure  search graph iteration                                                                                                              gopn gcln                                                           solution recording   ‚àà Œì      ‚Ä¢ search terminates op en list    ‚Ä¢ include goaln  gn cost      open triples selected Ô¨Åltered                                                              ‚Ä¢ eliminate op en alternatives gx fx                                                                vectors fx dominated gn                                                                filtering    example                                                              ‚Ä¢ step   illustrate workings previous algorithm  path expansion ‚àà Œì  sample graph Ô¨Ågure  heuristic evaluation function successors nodes produce cy  hn presented single heuristic vector given cles sg  each node sake simplicity trace search                                                             calculate cost new path  graph shown Ô¨Ågures  values gop gcl  shown each iteration values change   gm  gn  cn  previous iteration omitted brevity table  shows new node  trace op en                                               calculate fm  mgm Ô¨Åltering estimates    iteration  sg node root gops        dominated cost    gcls  ‚àÖ path op en se       ii fm mgm fm op en  lected three extensions nodes added   gm gopm labelling pointer  sg op en iteration  alternatives non   iii step   dominated estimates op en estimate      new node case  estimate   let‚Äôs assume ties non                                                                ‚Ä¢ gm ‚àà gopm gm ‚àà gclm label gm  dominated estimates broken choosing smaller       pointer step   Ô¨Årst component estimated cost vectors path leading                                                                ‚Ä¢  gm nondominated cost vectors  selected extension generated                                                                   gopm ‚à™ gclm path new cost  iteration  nondominated paths lead node each       cost vector  label different pointer               op                                               eliminate   vectors  nondominated op en selected itera                        op          cl                                                                    dominated  tion  path leading goal node Œ≥ nondominated                   estimate op en selected added goaln     ii calculate fm  mgm Ô¨Åltering estimates  cost vector included cost iteration  path lead     dominated cost                                                                iii  mg    ing node Ô¨Åltered estimate dominated                                   vector cost nondominated alternatives        op en  gm gopm labelling  selected iterations   iteration  new solu    pointer  tion path leading Œ≥ selected set cost  iv step   updated    iteration  remaining al ‚Ä¢ step   ternatives Ô¨Åltered op en algorithm  backtrack Œ≥ returning paths  costs                                                            selection expansion paths versus nodes                                                        moa decade reference mul                                                        tiobjective heuristic search algorithm unlike algorithm                                                        presented section  moa built idea                                                        node selection expansion particularly makes dis                                                        tinction sg sets gopn gcln                                                        single set gn  gopn ‚à™ gcln kept each node            figure  search graph iteration        heuristic evaluation function deÔ¨Åned each node                                                           nondomf   ‚àßg ‚àà gn‚àßh ‚àà hn                                                        op en   list considered list pairs                                                        nodes nondominated ‚àà selected                                                        distinction individual paths reaching each node                                                        lost accordingly known paths reaching each node                                                        simultaneously open closed essentially moa                                                        presents distinguishing features compared                                                        algorithm section             figure  search graph iteration                                                            each time new nondominated path closed                                                            node node op en                                                           each time node selected expansion known                                                            nondominated paths reaching node extended                                                          Ô¨Årst difference result unnecesary reexpansion                                                        nodes second result unnecessary extension                                                        paths sg storage uninteresting cost vectors ad            figure  search graph iteration        ditionally goal node Œ≥ selected cost vectors                                                        gŒ≥ enter cost general possi                                                        ble know cost vectors belong truly non                                                        dominated solutions                                                          differences illustrated example pre                                                        sented section  provided ties selection                                                        open   paths broken way search                                                        moa produce results Ô¨Årst iter                                                        ations iteration  selection node expansion                                                        produce moa extension known non                                                        dominated paths node accordingly cost vectors            figure  search graph iteration                                                         gn      extended resulting                                                        gn     gŒ≥                                                            node marked closed note new algo  table  op en alternatives each iteration dom  domi rithm did need store cost vectors   node  nated ‚Üê  selected                                   Œ≥   op en                                              iteration  node Œ≥ selected different          ‚Üê                          cost vectors    included cost                                                        does belong truly nondominated solu                                                                 tion moa able tell termination           ‚Üê                                                          finally note iteration  expansion node           dom                                                                                                                                 results new nondominated path moa                     dom                       place accordingly op en heuristic                                                       evaluation cost vectors implies prior termination           ‚Üê                                                        moa need reexpand unnecessary                     dom                       new algorithm newly path                                                       lead nondominated solution           dom       Œ≥     ‚Üê                                                           properties          ‚Üê           dom                       section presents proofs admissibility new          dom                       algorithm presented section  bounds number       Œ≥     ‚Üê                          paths selected stored memory           dom                        scalar algorithm said admissible guaran                                                        teed return optimal solution solution existswe extend deÔ¨Ånition follows multiobjective search theorem  algorithm nadmissible  algorithm nadmissible terminates set                                                        proof theorems   follows algorithm  nondominated solutions set Ô¨Ånite non                                                        terminate nondominated solutions sufÔ¨Åces  does terminate set inÔ¨Ånite                                                        show dominated solution selected let‚Äôs    let c‚àó set nondominated solution costs gp                                                         assume purpose contradiction dominated  cost vector path   relation ‚Äúdominates                                                        solution cost selected exists c‚àó ‚àà c‚àó  equals‚Äù let m‚àó  m‚àó m‚àó    m‚àó denote ideal op                                                                  c‚àó ‚â∫     c‚àó ‚àà cost  timal cost vector vector attain optimal                                                                   Ô¨Åltered theorem   cost each individual dimension note problems ‚àó    ‚àó                                                        ‚àà path pi   ideal optimal solutions reachable highly unusual                                        ‚àó    proofs presented section rely set reason     ni exists ‚àà pi    able assumptions analogous presented stewart nigpi pi op en transitivity                                                                                             ‚àó  white  prove admissibility moa  dominance relation follows  ‚â∫ gp    graph  searched locally Ô¨Ånite selected expansion                                                                                          ‚àó      heuristic function hn     admissible  corolary  time cost ‚äÜ   al           nondominated  solution paths   gorithm terminate time returning set non        ‚àó                ni ni    Œ≥k Œ≥k ‚àà Œì dominated solutions far                   ‚àó                   ‚àó      each subpath pi      ni       corolary  paths sg ‚àà                     ‚àó          ‚àó      ‚àÉh ‚àà hni  gpi    gp                  ‚àÄc‚àó ‚àà c‚àóc‚àó ‚äÄ pruned later iterations    inÔ¨Ånite graphs                               selected expansion                                                                                               ‚àó    ‚àó  ‚àó       hk ‚â•    ‚àÄk ‚àÄn ‚àÄh ‚àà hn                     corolary  path ‚àÄf ‚àà  ‚àÉc ‚àà ‚â∫                                           ckn  ‚â•    ‚àÄk ‚àÄn  ‚àà           selected expansion  theorem   each nondominated solution path ‚àó                                    ‚àó     ‚àó              corolary  each path recorded sg ‚àÄf ‚àà      ni ni    Œ≥ cost gp    al                                  ‚àó                      ‚àÉc‚àó ‚àà c‚àóc‚àó ‚â∫ extensions  ways discovery subpath pi      ni   ‚àó             ‚àó                      ‚àó               recorded sg   api recorded sg gpi  ‚àà gopni            ‚àó      ‚àó  ‚àÉf ‚àà pi                                  proofs corolaries    trivial proof  proof Ô¨Årst consider parts proposition theorem  corolary  trivial  true iteration  op en root algorithm terminate  sg true subsequent iterations subpaths note version optimal paths  nondominated solutions pruned sg satisfy corolary  corolaries   lower       ‚àó                                                upper bounds paths selected expansion  let pi make proposition true nondominated           ‚àó                 ‚àó                          analogous efÔ¨Åciency bounds section   solution  deÔ¨Ånition pi nondominated ni             ‚àó                                            example presented section  shows corolaries  gpi  removed gopni unless         ‚àó      ‚àó                                          apply moa particularly moa  nigpi  pi  selected expansion selec                    ‚àó     ‚àó                             upper bound given cost paths ex  tion ni  Œ≥ pi  discovered ni  Œ≥ new                                  ‚àó                             ‚àó                          tensions recorded sg depending   nondominated path ni pi      ni ni                     ‚àó                            ‚àó  generated gpi included gopni pi  satisfy proposition follows trivially  experimental test  deÔ¨Ånition admissible heuristic  search space practical issues  turn prevents ‚àó subpaths Ô¨Åltering                                                        search square grids nodes used test algo  theorem  solution algorithm terminates rithms experiments provide insight  inÔ¨Ånite graphs                               workings algorithms preliminary evalua  proof best Ô¨Årst search algorithms prune cycles ter tion memory savings achieved new  minate Ô¨Ånite graphs pearl  given assumptions algorithm dimensional grids each node identiÔ¨Åed  inÔ¨Ånite graphs paths length longer coordinates neighbours successors note                              ‚àó                         problem storing each node takes space                      maxim                                                         storing each cost vector                                                                                       vector costs generated randomly integer compo                                  ‚àó          ‚àó    ‚àó    trivially attain gp  ‚â∫ ‚àà nents range   single goal node generated  ‚àà  graph locally Ô¨Ånite each problem instance random distance   Ô¨Ånite number partial solution paths  arcs start node manhattan distance  nondominated c‚àó theorem  non goal used optimistic cost estimate each com  dominated solutions eventually inÔ¨Ånite ponent cost vectors  paths pruned Ô¨Åltered op en Ô¨Ånite num lexicographic order used sort alternatives  ber steps                                         op en  set sugested loui  particularly
