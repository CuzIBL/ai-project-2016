                                                                   hpm                                computational formalism heuristic procedure modification                                                                     robert neches                                                   learning research development center                                                             university pittsburgh                                                              pittsburgh pa                                                                       usa                               abstract                                      expressed propositions goaldescription formalism                                                                           enables carry strategy transformations having                                                                           productions construct new productions mask      hpm heuristic procedure modification model                                                                           circumvent preexisting productions formalism    strategy learning optimization implemented                                                                           implements conventions benefit imposing    processing environment prism production                                                                           constraints reduce reasoning power required construct    package  paper describes progress getting hpm                                                                           appropriate changes    emulate childrens discoveries basic addition procedures    hpm goaltrace production trace formalisms allow             hpm larger project procedure learning      maintain history actions goal ordered       optimization  program selfmodifying production    time ordered heuristics meaningful patterns             implemented maclisp pdp kl design    traces guide construction new productions modify         influenced analyses human performance    procedures replacing circumventing preexisting                   procedure learning tasks analyses indicate procedure    productions                                                           modifications involve precompiled heuristics applying                                                                           transformations simple procedures producing particular kinds     introduction                                                        changes      young children approx  years add counting               neches  describes  application heuristics associated    procedure called sum method method consists         various transformation types heuristics subsume    counting set objects represent addend       suggested anzai  simon  paper    counting set objects represent second            present heuristics actually implemented hpm    addend merging sets counting number              objects new set strategy used older children                                                                             • result available procedure executed    min method starts larger number                                                                              certain input result procedure    increments number times given smaller addend            input recorded working memory try    development modelled additive production                borrow result future requires    min procedure obtained sum               proceduregoal input result time processing    procedure insertion series productions mask        information    circumvent pre existing productions                                                                             • untouched results procedure produces output      given initial production sum method coded          procedure receives result input try    goal structured formalism hpm discover            deleting procedure requires proceduregoal input                                                                              result episode information    productions additive set goal    formalism allows hpm maintain history actions       • effort difference difference expended effort    timeordered goalordered strategy transformation               observed goal operating    productions parallel performance                  inputs different times set goal    productions respond patterns history building              difference methods used try produce                                                                              circumstances evoked efficient method    productions predict future outcomes addition                                                                              requires effort proceduregoal input event subgoal    productions produce changed performance patterns               information    evoke initial strategy transformation productions each    represent different heuristic suggesting         parenthesized notes indicate each heuristics    certain type transformation fruitful                     depends availability certain information      like barr  concerned exploring meta•              procedures processing history formalism described   knowledge exploited intelligent learning      section  designed capture information required   key concept hpm specification conventions           heuristics retaining information necessary   followed processing goals passing information         enable learning makes hpm vulnerable breakdown   existence allows informal strategy change heuristics       glut extraneous information section  briefly describes   respecified formally productions conditions        mechanisms handling information explosion problem       research reported paper supported nimh grant  section greatly abbreviated limited apace consult   mh arpa grant                             reference lor details                                                                            issues clarified possible examine         goal trace representation using restricted set     operationalization application heuristics topic   propositions obeying semantics semantics     remaining sections                                                goal trace representation allow following types nodes                                                                            goal nodes data nodes instantiate concepts      execution history goal trace                               set nodes used concepts represent sets data nodes        production trace                                                firing event nodes discussed previously prediction                                                                            nodes discussed section  effort nodes       hpm fundamentally operates manipulating propositions              numeric value associated representing estimated    stated node relation object triples object       processing effort goal    node proposition list nodes list propositions          hpm production solving task primarily consists    activation associated propositions                            productions add goals just illustrated                                                                           productions set data structures tor goals requiring      condition left hand side lhs productions                                                                           iteration establishing data relations goals data    match sets propositions active memory                                                                           nodes productions terminate processing goal    production matches successfully selected firing                                                                           manipulating result value status relations    action righthand side rhs contains propositions    added semantic network active                  goal structures augmented productions    andor actions rhs functions perform                   collect information example effort estimation    computations necessarily adding propositions memory        managed hpm productions estimate linked                                                                           goal nodes effort relation      hpm uses prisms tracedata option invoke procedure    each production firing adds description firing    active memory description reflects production    instantiation production        hpm represents processes hierarchical goal structure    similar organization sacerdotis  planning nets goals    decomposed partially ordered lists subgoats    executable goals reached each goal represented terms    relations common node objects define    rules representation constrain form hpm    productions procedures productions build goal    structures      example rules production   addition sum method add numbers generate   sets corresponding count elements   sets contain figure shows goaltrace propositions   involved production matched conditions   shown dark lines added actions shown   lighter lines figure shows corresponding production trace   propositions      production responds goal add building   structures network representing goals generatesets   countup linked subgoal relation   initial goal relation subgoal   second establish goal subgoal hierarchy   ordering subgoals input result relations goal   nodes point nodes describing operands goals   described terms various relations important   value indicates concept instantiated   operand     goal value relations hpms means representing   type token distinction discussed woods  hpms   strong type token distinction means objects represented   network structures potential complexity avoid   comparison problems formalvalue tags associated nodes   semantic network constructed canonical fashion   causes nodes representing equivalent structures   identical tags enables hpm immediately recognize   equivalent objects comparing tags       figure  illustrates production specify   propositions relevent processing need indicate   relations node required construct                                                                            summary productions build goal structures similar        second paralleliam  like notion beam search   familiar goal representations hpm express range         harpy  • helps avoid errors premature   procedures processing constructs goal structure                restriction attention enables reducing active memory   remains forms trace procedures actions         size important data attended promptly   hpm retains production trace indicates                assertion safely eliminated active memory   conditions portions goal trace created       earlier serial reducing memory size reduces   modified section  consider information contained      number potential uninteresting matches easing   goal production traces utilized strategy modification     conflict resolution problem   heuristics discussion requires   understanding hpms mechanisms managing                        hpm emulates parallel production productions   information explosion entailed retention forms         grouped different classes separate conflict   trace data topic section                                      resolution policy each class production instantiations                                                                           fired given cycle represent union selections     hpm processing mechanisms                                           individual classes productions different classes                                                                           presumed interfere each safely      nature learning selfmodifying      parallel circumstances productions   know advance learn specific case   class interfere each depend task   know advance information require     performed class conflicts resolved   learning turn implies retain           classspecific policies   information likely need                                                                             conflict resolution classes currently distinguished      implication observation large information     hpm   base unavoidable requirement realistic model   performance learning places greater stress              • goal manipulation productions operate goal  attentionfocusing mechanisms production systems            trace structures   retain potentially large body extraneous information        • data bookkeeping productions maintain   order avoid missing critical information crucial       correctness hpms representation complex data objects   learning systems effective means concentrating attention        • goalbookkeeping productions maintain correctness   important data avoiding distractions inherent larger           goal structures   information space processes affect focus attention            • datadescription productions add information   hpm associative retrieval conflict resolution                        representing knowledge properties data objects      goaldriven associative retrieval                                   • strategychange noticing productions detect                                                                              predict situations relevent development strategy     hpm mechanism called goal driven spreading                   change   associative retrieval spreading activation                                                                            • strategychangemaker productions perform actions   proposition asserted scheme activates                                                                              effect changes procedure usually building   propositions nodes contained proposition             new production   goal active activation spread   proposition describing goal propositions   describing inputs goal type similarly goal          example discovering improved   terminated activation spread propositions describing          addition strategies   result planned successors goal invoked                                                                            section concerned showing hpm goal     associative retrieval functions attention focusing   mechanism allowing hpm partition memory active          trace formalism applies simulation cognitive processes   non active sections nonactive section automatically      sum strategy addition   eliminated consideration goaldriven spreading activation                                                                            psychological researchers shown young children   helps reduce size active memory enables retrieval                                                                          solve addition problems sum countingall method   indirect associates likely relevent systems                                                                          discover min  essential properties sum   immediate performance learning goals avoiding                                                                          external objects fingers blocks counted   combinatorial explosion inherent activating indirect                                                                          represent each addend sets objects   associates                                                                          merged combined set counted order produce    byclass conflict resolution                                      sum     contextsensitive associative retrieval method        hpm production sum requires  productions   active memory quite large produces increase      following summary operation names key   matches  productions likely matching         productions given parentheses unless stated   data productions likely       productions belong goalmanipulation class   way match data introduces familiar   problem conflict resolution                                        production solves addition problems asserting                                                                          goals generate sets countup sets addition    parallelism simplifies problems reduces  plan response goal add goaltoadd goal   demands conflict resolution lowering criterion            decomposed goals makea set each addend   success finding single best production instantiation           goal togeneratesets goals produce sets objects   difficult satisfactorily easier set     corresponding size addends spawn aeries   good productions interfere each             correspondelement goals produce pairings                                                                         objects numbers makeset offingers goal correspond          change realized building production     elements each objects appended set associated       responds make set goal used strategy     makeaset goal cases series                   change speed processing countup goal     correspondelement goals terminated object                production asserts make set goal assigned     appended set number assignment matching          object number given addend input     appropriate addend haveaset sets                goat satisfies termination conditions causing goal     constructed make set goals set representing          complete single element set result single     merger constructed during termination generatesets           element correct number assignment initializing     goal setshave generated                                      counting objects representing addend note       count goal active continue planned            new production erroneous result fired     subgoai goal bookkeeping class counting set   instances make set goals conditions     initiated start countingup counting involves finding          new production constructed production trace    objects set objectsto counted assigning new           conditions context asserting    number appending set counted objects        particular goal instance used shortcut    process accomplished sequence                     new production general case result    correspondelement goals countelement sequence                  second change procedure counts objects    terminated set counted objects matches set       corresponding addends counts    counted objects finishedcounting answer       objects starting number addend    given size counted objects set finishedadding          changes opportunity     strategy transformations hpm                                   created hpm discover effort differences different                                                                           trials problems effort involved       goal trace formalism designed facilitate domain          depends addend treated specially larger    independent heuristics modifying procedures like three        smaller effort minimized case objects    mentioned section  section discusses application    generated represent smaller addend counting    modifying sum strategy section illustrates      initialized larger addend result procedure    operationalized discussing implementation      problems shortcuts treat    heuristic                                                             smaller addend specially problem transformed      hpm gets sum min through series incremental             equivalent form larger addend taken special    refinements involves eliminating redundancies            problems shortcuts initially applied    counting combined set objects representing           larger addend left new procedure    addends counting consists creating set objects       properties min procedure effort proportional    numbers assigned sequentially each object        size smaller addend small effect    set point counting process creates      order addends    set objects number assignments equivalent created                                                                             important note independence    building set represent addends                                                                           strategy changes means place order    point process continues adding set taking objects                                                                           means hpm follow different paths    corresponding addend makes set unique                                                                           sum min      intermediate point possible recognize    through result available heuristic counting    addend result makeaset goal serve    counting process intermediate result     operationalization heuristics    processing count goal production built    implements change resulting procedure differs      seen straightforward heuristics used    count goat starts iteration correspond                  account transitions procedures operationalizing    element subgoals set containing elements produced           heuristics hpm requires dealing following set    make set goals starting           problems detecting instances situations described    set causes processing pick result    heuristics conditions determining precursors    make aset goal counting objects       situations learning predict constructing    combined set new procedure counts         appropriate new actions productions implement strategy    objects representing addends counts starting     changes discovering range application new   number given addend instead starting          production paper primarily concerned through                                                                   goal trace conventions permit making assumptions                                                                          greatly simplify problems      doublecounting addend eliminated   fashion inefficiency introduced detected       determining applicability heuristics   through untouchedresults heuristic objects                 approach taken hpm operationalizing conditions   produced make set goal longer counted             heuristics basically consists reexpressing conditions   countup goal really used     patterns sets goaltrace propositions essential   point creating objects arent going       patterns exist time production   counted function serve       trace   starting number counting objects representing   addend information gotten   size set representing addend course                                                                                 observation reported svenson    given addend                                            confirmed recent studies reported personal communication                                                                          resultstillavailable heuristic stated condition partialset fordata   previously computed item needed   explicit condition really consists implicit conditions       goal just asserted particular data node   deciding item needed hpm               input different data node equivalent   step begins notices input          value goal established response hasdata   goal used post hoc                  relation input higher goal   discovery comes late hpm change course action             tracedata available production asserting   trial hpm tell reuse computed value        goal actions production terminated    just reused inputs come goal          goal data node result    result goal through hasdata relation         prediction asserted confirmed    higherlevel goal versions needed                   goals input data node match    production makes discovery figure  illustrates            input set element current member    production applies current source goals               data node relation associating    input data node production initiates           element equivalent current member    strategy transformation development sum min                                                                           construct production avoid recomputation set                                                                               copying prior data node     considerkeeppartialsfordatanode                                         evoking conditions present production                                                                                   asserted hasdata relationship    goal just asserted particular data node                   higher goal current input current goal        input different data node equivalent                andan instantiation goal produced        value goal established response data                  alternative source asserted completed        relation input higher goal                              circumstances occasion        tracedata available production asserting               goals result relations correspond        goal actions production terminated                needed predict current member        goal data node result                                                                                                     assert higher goal data node    build production predict relationship recur          set represented alternative source                                                                                   subset assert currentmember new set        instance goal asserted                     relations used conditions            input equivalent conditions                     goal            instance goal terminated way            observed time                                                                       figure         predict result goal            equivalent input new goalinstance                versions production order                                                                          allow each alternative informationpassing methods                                                                          used goaltrace formalism shown                                figure                                  version applies making strategy change                                                                          conditions require successful prediction                                                                          like noticing production contains conditions                                                                          identify context new source goal     conditions production three groups      terminated addition contains conditions identify   conditions governing fires ensuring early circumstances tobereplaced goal asserted   possible main conditions checking criteria firing    finally conditions specialized hasdata data nodes   production met case goals input          represent sets conditions test current   potential alternative source conditions pick data       goal makes use propositions allowed describing sets   needed action side production inspecting         currentmember relation data objects related   production trace context earlier source       conditions seek construct   completed current source asserted                        analogous propositions result potential new source                                                                          goal    finding conditions new production     action production builds new production       production actually builds production   essentially predicts situation observed       strategy change conditions production derived   produce relationships goal trace                conditions just described borrow   propositions prediction goal terminating     conditions led assertion datas current source   equivalent assertions observed earlier source    ensures new production time   result equivalent input goal asserted          source asserted enabling override   conditions equivalent observed current goal          production second borrow                                                                          terminating conditions goal produced data     new prediction production built             ensures value available copied   prediction known true current case hpm behaves       new production ability borrow   prediction tested case      initiating conditions goal expressed terms   causes strategy transformation production build        production trace longer true critical   second production change strategy strategy         point time conditions increase likelihood   transformation production shown figure                         new production siuations closely equivalent                                                                          
