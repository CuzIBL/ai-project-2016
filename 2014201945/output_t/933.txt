           incompleteness incomparability preference aggregation∗                             pini  rossikbvenable    walsh                 department pure applied mathematics university padova italy                                  mpinifrossikvenablemathunipdit                                   nicta unsw sydney australia                                         tobywalshnictacomau                        abstract                          erences agents privacy concerns prevent                                                        revealing complete preference ordering      consider combine preferences       wish aggregate agents’ prefer      multiple agents despite presence incomplete ences single preference ordering modify pref      ness incomparability preference order erence aggregation functions deal incompleteness      ings agent’s preference ordering   possibility consider possible ways      complete example ongoing incomplete preference orders consistently completed      preference elicitation process contain each possible completion preference aggregation      incomparability useful example different optimal elements winners leads idea      multicriteria scenarios focus problem possible winners outcomes winners      computing possible necessary winners  possible completion necessary winners      outcomes outcomes winners possible comple      preferred agents possible nec tions konczak lang       essary winners useful scenarios includ voting theory mainly interested fair      ing preference elicitation show com ness social choice social welfare functions      puting sets possible necessary winners recent computational properties prefer      general difﬁcult problem providing ence aggregation rossi et al  lang  konczak      good approximation sets iden    lang  conitzer sandholm      tify general properties preference aggrega noted complexity manipulating election      tion function sufﬁcient sets closely related complexity computing possible      computed polynomial time finally show  winners konczak lang  conitzer sandholm      possible necessary winners used      focus preference elicitation                       paper start considering complexity                                                        computing necessary possible winners show    introduction                                       tasks hard general approximate                                                        identify sufﬁcient conditions assure tractability  consider multiagent setting each agent speciﬁes conditions concern properties preference aggregation  preferences means ordering possible function monotonicity independence irrele  outcomes pair outcomes ordered incomparable vant alternatives iia arrow et al   tie relationship spec possible necessary winners useful scenar  iﬁed incomparability incompleteness represent dif ios including preference elicitation chen pu  ferent concepts outcomes incomparable example elicitation set possible winners  agent does wish dissimilar outcomes compared coincides necessary winners conitzer  example want compare biography sandholm recognizing  novel criteria judge just dition satisﬁed hard general  different outcomes incomparable paper show preference aggregation function  agent multiple criteria optimize example iia preference elicitation focus just incomplete  wish compare faster expensive laptop ness concerning outcomes possible nec  slower cheaper incompleteness essary winners allowing ignore outcomes  hand represents simply absence knowledge complete preference elicitation polynomial time  relationship certain pairs outcomes incomplete  ness arises fully elicited agent’s pref  basic notions    ∗this work supported italian miur prin project preferences assume each agent’s preferences  “constraints preferences”         speciﬁed possibly incomplete partial order ties                                                    ijcai                                                    ipo set possible outcomes denote necessary possible winners extend case  Ω incomplete partial order partial order partial orders notions possible necessary win  relation pairs outcomes unknown given ners presented konczak lang  case  outcomes agent specify exactly total orders given social welfare function andanin  following ab  ab       ∼  bor    complete proﬁle ipwedeﬁnenecessary winners given  abwherea   ∼  means incomparable ip outcomes maximal elements  ab relation unknown pos paf ip  necessary winner winner  means element ∼        matter incompleteness resolved incomplete                                                        proﬁle analogously possible winners  example   given outcomes bandc agent    comes maximal elements pos                                                           pa ip  state preferences ab ∼ candacor             possible winner winner  just aband  ∼ agent state possible completion incomplete proﬁle write                                                        nwfip      pwfip  preferences ab bc  caoralsoab                             set necessary pos                                                                               ip                        bc   ∼ pos                   sible winners proﬁle  omit                                                        andor ip just write nw pw                                                        obvious irrelevant  proﬁles  proﬁle sequence  partial orders  ppn outcomes each agent ∈n  describing preferences agents incomplete pro example  example  necessary win  ﬁle sequence partial orders ners elements pos fpiforall  incomplete                                             possible winner wins fp    social welfare preference aggregation social wel combined result unfortunately set results  fare functions arrow et al  functions proﬁles exponentially large consider com  partial orders ties given social welfare function pact representation polynomial size throw     deﬁne corresponding preference aggregation func away information compacting results sin             pa  tion written  function incomplete pro gle combined result given social welfare function  ﬁles sets partial orders ties pos precisely given incomplete proﬁle ip consider graph nodes                    ip ip ip          ip  incomplete proﬁle           wherethe  i’s  outcomes arcs labeled nonempty sub                                ipos consider proﬁles say  obtained sets    ∼ label arc outcomes  ip                                  ip    replacing occurrence i’s exists po paf ip        ∼          consistent partial order let related graph called combined result           pa  ipfp  fp   set                     set ip denoted crfip arc labeled                                ip  called setofresultsof proﬁle                  set    ∼wewillsaythatitisfully incomplete                                                        say partially incompletethesetof  example   consider pareto social welfare function labels arc called rela  deﬁned follows arrow et al givenaproﬁlep  outcomes agents say abor   says abin pthenab∈  fp   example   combined result example  shown  agents say  pthena  ∈ fpotherwise figure   ∼  ∈ fp figure  show example three  agents three outcomes bandc                     possible necessary winners                         ip      ip      ip            section show computing set necessary                                                        possible winners social welfare function gen                                                       ip                          eral nphard restrict incomplete                         ∼   ∼                      total orders consider following known vot                                                                                            ing rule                                          combined result                         fp                  ip ip       ∼     ∼       ∼               ∼                                     single transferable vote stv rule each voter pro                                                                                       ∼     ∼     vides total order candidates initially individ             ∼                       ∼                                              ual’s vote allocated preferred candidate                ip ip  fp ∼   ∼               quota election minimum number votes nec               ∼                                                                         essary elected candidate elected                                                        quota n wheren number vot                                                        ers candidate exceeds quota candidate  figure  incomplete proﬁle ip completions fewest votes eliminated votes equally        fp     fp                   crfip  results        combined result            distributed second choices voters                                                        selected ﬁrst choice follows consider stv                                                    ijcai                                                    elections total orders provided voters votes unbeatable possible winner  incomplete                                       original election necessary winner    general given incomplete proﬁle candidate new election determining necessary winner  say possiblewinner  holds iff possible winner new election decides possible winner original  election                                         election qed  theorem  possiblewinner    npcomplete                                                          given results wonder easy com  proof  fact membership np follows giving pute reasonable approximation sets possible  completion proﬁle wins completeness necessary winners unfortunately case  follows result effective preference     reduction described proof previous theorem shows  determining particular candidate win election approximate set possible winners  vote unknown stv npcomplete bartholdi factor fact show approx  orlin  qed                              imate efﬁciently set possible winners                                                        stant factor    result allows conclude general ﬁnd                                                        theorem   nphard return superset possible  ing possible winners election difﬁcult      ∗                        ∗                                                        winners pw  guarantee pw  kpw  noticed rules used practice                                                        given positive integer  cluding positional scoring rules konczak lang   answering possiblewinner   polynomial  proof    reduction effective  complexity computing possible winners related preference stv appears  complexity manipulating election konczak lang ﬁrst place vote consider incomplete proﬁle   instance npcomplete determine Π votes cast  borda copeland maximin stv rules coalition ﬁrst place vote vote remains unknown wish  cast weighted votes ensure given winner conitzer decide win construct new election Π  sandholm follows weighted make copies Πintheith copy Πi subscript  votes possiblewinner  nphard rules    each candidate integer iweaddn new additional    given incomplete proﬁle candidate awesay  votes new candidate each  necessarywinner    holds iff necessary winner new votes rank candidates  election                                             ai order votes ranking                                                        candidates ai left unknown beneath each Πiwe  theorem  necessarywinner     conpcomplete                                                        place place vote ai ﬁrst  proof complement problem np show place assumption vote exist  membership giving completion proﬁle place second place shift candidates  different wins show completeness finally each candidate Πj Πi aj  reduction effective preference  stv    rank order votes  appears ﬁrst place vote Πi ranking candidates ai left unknown  restricted form effective preference npcomplete beneath observe survive till  bartholdi orlin  consider incomplete proﬁle candidate eliminated Πiwealso  Π votes cast observe ai remains election score  ﬁrst place vote vote remains unknown wish given each candidate stv remains  decide win construct new election Π original election candidates Πi eliminated  new additional votes new candidate bwe order till point ai eliminated suppose  each new votes rank win original election ai  candidates order votes place eliminated ﬁnal round second choice vote  place original votes vote transferred votes  ﬁrst place assumption vote unbeatable win election suppose  exist place second place shift hand win original election ai  candidates observe survive till survive remaining candidate Πi  round votes candidate assume ranked unknown votes  till round observe candidates index candidates  remains election score given each candidate index different ai votes  stv remains original election corresponding ranking unknown votes  candidates eliminated order till point aj  survive votes  eliminated eliminated round eliminated possible candidates ai  second choice vote transferred  ≤ ≤ win depending exactly ai  votes unbeatable win election ranked different votes set possible winners  survives hand round assume ai   ≤ ≤ plus necessary winner  ranked unknown vote original election possible winner  candidates eliminated  original election size set possible winners                                                    ijcai                                                    greater equal whilst set assume monotonic say  size  know pw∗ kpwthenpw∗     come  improves respect outcome  guarantees pw  necessary winner relationship does left  possible winner original election following sequence  ≥∼  ≤ example  qed                                                 improves respect pass ≥                                                        ∼  social welfare function monotonic    similarly approximate efﬁciently set nec proﬁles p outcomes passing  essary winners ﬁxed ratio                p improves respect agent                                                                                                                                                              pj   pj  passing fp fp   theorem  nphard return subset necessary                         nw∗                       nw∗     nw    improves respect   winners      guarantee                                                             nw                                        consider outcomes     compute           given positive integer     rela iia monotonicity iia  proof reduction used proof nw  just need consider agents’ preferences pair  possible winner original election  don’t need consider pos  suppose possible winner new sible completions agents incompleteness                            ∗                                                    ab       ab  election nw asnw      nw follows    just completions         nw∗   size nw∗ determine tice iia don’t need consider complete  possible winner qed                               proﬁles just proﬁle concerning                                                        means transitivity issues arise                                                          function return result each com                                                                    axb      ayb        ∈   ∼    combined result                                    pletions say                                                                                  monotonic results completions  consider problem computing combined necessarily ordering  ≥  sult show general difﬁcult ∼  ≤  taking relations obtain  restrictions allow compute approxima superset rela rel∗a fact mono  tion combined result polynomial time tonicity assures consider proﬁle aband  section show possible compute set certain result considering proﬁles  possible necessary winners starting approxima better position wrt ab  bora ∼  tion combined result                          equal better situation result                                                        obtained approximation combined result  theorem  given incomplete proﬁle determining la        ∗                                                        cr fip characterization  bel combined result stv npcomplete                                                        approximation combined result  proof fact polynomial witness completion                                    ∗                                                        theorem   given outcomes rel ⊇  incomplete proﬁle show completeness use polyno                     ∗                                                        rela rel  ∼  mial number calls problem determine given  ∗                      ∗                                                        rel brela rel b−rela  candidate possible winner qed                                                        ∼   result immediately following corollary    corollary  given incomplete proﬁle social wel example  consider lex rule arrow et al   fare function computing combined result nphard agents ordered given outcomes    introduce properties preference aggrega relation result  tion functions allow compute upper approxi relation given ﬁrst agent order  mation combined result polynomial time recall does declare tie consider                                                    incomplete proﬁle ip ip      ab  set labels arc com                           ∗  bined result called rela                     ip abcthenrel            ∼    ﬁrst property consider independence irrele rela ∼  vant alternatives iia social welfare function said  iia pair outcomes ordering following procedure described approxi  result depends relation mation combined result computed polynomially  given agents arrow et al  need consider completions  preference aggregation functions iia theorem  given preference aggregation function  property related notion fairness voting iia monotonic incomplete proﬁle ip comput  theory arrow et al  given function iia ing cr∗fip polynomial number agents  compute set rela just need ask each agent  preference pair use com  pute possible results agents  computing possible necessary winners  incompleteness consider show determine possible neces  possible completions exponential number sary winners given cr∗fip consider arc  agents                                       outcome outcome cr∗fip arc                                                    ijcai                                                    label acthena necessary winner transitivity inconsistency completed  outcome better result sult winner finally let consider case  arc label acthena possible rel∗a  winner acin results outcome c rel∗a c contains exactly  consider arcs outcome label set  ∼  safely set ac   arc label includes acthena sure result labeling  necessary winner notice general result winner assume instead  arcs connecting outcome outcome c rel∗a c   unique label ac possible winner means agent declared  better outcomes completion preference ac preference  completion better induced transitivity closure replace ac  show case iia ac proﬁle perform transitive  monotonic                                            closure modiﬁed ipos apply    deﬁne algorithm  given cr∗fipcom prove transitive closure does force label   putes nw pw polynomial time                  ac procedure monotonicity rela c                                                        contain exactly label set  ∼ let                                                                                            c   algorithm  computing nw pw                     assume procedure      let                                                        consider relcc rel∗cc          cr∗fip    input         iia monotonic          start forced rela    preference aggregation function ip incomplete  possible ∈  allows    proﬁle                                             conclude rel∗cc ∩ ∼   ∅    output sets outcomes                     additional labels  c force    ←  Ω                                                                                                                                   ac clearly ac   ∼  labeling    ←  Ω                                                                                                        force ac noticed           ∈ Ω                                                               foreach                                          available choice safely         ∃ ∈ Ω         ⊆rel∗a                                      fact function iia transitive closure           ←  −                                  ∗                     proﬁles ruled inconsistent choices       ∃ ∈ Ω   rel       iterating procedure  incomplete proﬁle       ←  −                                      replaced construct result function    return                                        winner qed                                                            example preference aggregation function                   cr∗fip  theorem  given           algorithm  terminates  iia monotonic pareto rule described exam  om               Ω             nw         time         returning             ple  example lex rule described example   pw                                                        example approval voting rule  proof algorithm  considers worst case each arc tractability result computing nw pw given  exactly om                     konczak lang  positional scoring rule    nnw construction cr∗fip ∈ rel∗a  iff ∈ rela algorithm  ∈ iff ∀c ∈     preference elicitation  rela implies result  exists outcome beats ∈ nwon use necessary possible winners eliciting  contrary ∈ nw iff c∀c ∈ Ω results preferences chen pu  preference elicitation  ∈                                    process asking queries agents order determine      pw outcome   pw preferences outcomes each stage eliciting  outcome beats results agents’ preferences set possible necessary  exist outcome  label winners nw  pw preference elicitation  rela construction rel∗a stopped information declare win  pw  ⊆   show inclusion consider ners matter remaining incompleteness resolved  ∈   construct completion ip conitzer sandholm beginning nw  wins result let point outcome pw contains outcomes preferences  ∈  iff  ∃c ∈ Ω rel∗a cif∀c   ∈ Ω    declared nw grows pw shrinks each step  ∈ rel∗a cthena beaten outcome come pw pass nw loser  nw pw secondly let consider pw larger nw use sets guide  case ∈ rel∗a preference elicitation avoid useless work  ∼  rel∗a let preference aggregation function iia deter  denote set outcomes outcome outcome ∈ pw − nw loser necessary  ∈ choose  available ∼ winner ask agents declare preferences  corresponds replacing ac acin      pairs involving outcome say bin  incomplete proﬁle choice ac arcs cause pw iia allows consider just proﬁle                                                    ijcai                                                    
