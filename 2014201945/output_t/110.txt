          argumentation based contract monitoring uncertain domains                                 nir oren timothy norman alun preece              department computing science university aberdeen aberdeen scotland                                  norentnormanapreececsdabdnacuk                          abstract                          framework present utility based heuristic al                                                        lows agents participate dialogue game      existing argumentation frameworks       possible application framework contract      signed deal probabilistic knowledge  monitoring enforcement given contract      designed represent possibilistic knowl environment determining current contract state      edge making unsuitable real world  sanctions come effect ap      domains paper present subjective logic proach able operate partially observable domains      based framework argumentation     fallible sensors account fact      comes limitation reasoning state  probing sensor associated cost      literal framework poly systems contract monitoring require fully observ      nomial time dialogue game making use    able domains “honest” sensors xu jeusfeld      framework utility based heuristic play  able handle faulty sensors ap      ing dialogue game presented proaches assume domain states probed      show components applied  probing free daskalopulu et al       tract monitoring dialogues emerge bear    section provide overview subjective      similarity dialogues occur  logic present framework provide      humans argue contracts approach illustrative example conclude paper examining      highly suited complex partially observable lated research examine possible avenues future work      mains fallible sensors determining en      vironment state free                                                           subjective logic                                                                          introduction                                       subjective logic approach combining                                                        sessing subjective evidence multiple sources based  research argumentation theory focused inter dempsterschafer theory opinion ω  actions arguments prakken vreeswijk  atomic proposition φ represented triple ωφ  researchers proposed various underlying logics capable bφdφuφ bφ represents level belief  representing different domain attributes example φ holds dφ stands level disbelief  large body work exists representing using defaults probability φ does hold uφ represents  legal argumentation prakken sartor  num level uncertainty opinion bφdφuφ  ber researchers looked argument takes bφdφuφ ∈   place domains uncertainty work number operations opinions deﬁned al  area probability theory based includes bayesian based lowing create compound opinions atomic ones  argumentation frameworks vreeswijk  pollock’s listed figure   oscar pollock                            subjective logic allows use common logical opera    basis plausible reasoning believe tors conjunction disjunction negation  certainty theory applicable probabilistic reason shown ﬁgure remaining operators  ing domains argumentation paper ﬁgure unique subjective logic ⊗ operator called  present subjective logic jøsang  based approach recommendation operator ωφ ⊗ ωψ yields  argumentation using subjective logic able natu opinion ωψ given opinion ωφ source  rally present arguments uncertainty exists informing computing agent ωψtheconsensus oper  encapsulate concepts accrual arguments prakken ator ⊕ yields combination opinions   existing frameworks handle poorly    describing argumentation framework present present simpliﬁed form subjective logic similar  dialogue game allows agents make use presented daskalopulu et al                                                     ijcai                                                                                           ¬ωφdφbφuφ             ωφ ⊗ ωψbφbψbφdψdφuφbφuψ    φ opinion ψ        ⊕     baφub φuaφbb φ daφub φuaφdbφ uaφub φ       −         ωa φ    ωb  φ                                                 ua φ    ub φ    ua φ ub  φ                    figure  subjective logic negation recommendation consensus operators                                                                   −     thing note consensus operator undeﬁned min bpi  bpi deﬁnition captures  uncertainty opinions exists                       intuition argument strong weakest element                                                          facts special type argument conclusions    formalism                                          negated literals opinion ωf  associ                                                        ated fact ∈ Σ  section present three strands work tie                                                          given set arguments literal negation  form framework lowest level lies argumenta                                                                                      set supporting facts compute ﬁnal  tion framework deﬁne arguments                                                        opinion regarding value literal utilising  interact each present dia                                                        sensus operator ⊕ slightly formally assuming  logue game agents play game  heuristics use deciding arguments ad given set arguments facts opinions                                                            ∀ ∈   compute opinion   literal  vance sensors probe finally ω s s                     ω                                                                     ωs    ¬ωt  ∈  transform contracts form usable framework                                                                                     cs  ct  ¬l special case arises    argumentation framework                      uncertainty exists handle case intuitively                                                        justiﬁable manner follows given opinions bd   frameworks argumentation ignore probabilistic                                                        bd  compute   − − create  possibilistic concepts focusing instead purely interac                                                                   combined opinion bc  −bc bc  and −bc bc  tions rebutting undercutting attacks ar  guments important right applying frame                                                          shown compute value literal given  works like domains uncertain evidence ex                                                        applicable arguments facts opinions  ists difﬁcult propose new argument framework                                                        values complete description argu  borrowing ideas existing work suggests                                                        mentation framework show determine  different way thinking arguments                                  Σ                     argument applicable procedure    deﬁne language discourse set literals decide values literals instance dialogue  negation Σ set containing                                                          models varying complexity proposed regard  negated literals literal opinion ωlb                                                   ing argument advanced toulmin   associated                                            Σ           paper use simple model stating    argument tuple ∈  ∈                                                        premises argument hold used premise  Σ assume literal appears then¬p does                                                        hold exceed threshold strength com  appear viceversa represents premises                                                        puting premise’s strength setting threshold  argument argument’s conclusion fact                                                        domain speciﬁc tasks example strength  represented argument                                                        literal based level uncertainty strength  write let argsΣ represent set possible                                                        belief combination attributes  arguments language Σ                                                        jøsang  details terms human legal    given set arguments facts opinions stat                                                        reasoning “beyond reasonable doubt” “on  ing likely facts true like                                                        balance probabilities” show subjective nature  determine conclusions reasonably allowed                                                        threshold assume function  draw repeatedly computing conclu                                                        admissibleω → true false exists allows com  sions arguments known opinions facts                                                        pute opinion exceeds required threshold  deduced stage draw  clusions based literals justiﬁed describing algorithm determine state    literal assigned value three ways literals formally provide informal overview  conclusion argument second represent set arguments consideration di  based fact finally based rected graph containing types nodes represent  combination values arguments facts  ing arguments representing literals edge    given argument  assign opin    nects literals arguments appear premises  ion using slightly modiﬁed form statistical syllo edges exist arguments literals                                                       appear conclusion shown figure   gism let ω opinion premise ∈                                                    graph types edges edges linking negative  ωaminb        −  negated                                                    literals positive ones viceversa edges         note pi negated literal subjective logic nega weakening assumption make discussed  tion operator applied computing contribution section  resulting graph acyclic  argument’s opinion                                     apart arguments assume set facts                                                    ijcai                                                    forward algorithm operates repeatedly given graph pe ne  ward chaining applicable arguments set facts set opinions Ω ⊆ ∈ Σ  words compute literals derive admissibility function admissible  facts propagate forward arguments com  puting literals derived arguments repeating sourcenodestss ∈  procedure new computed things targetnodessts ∈  complicate algorithm accrual argumentsevidence  threshold acceptability literals com repeat  pute opinion regarding value literal each ωn ∈ Ω n∈  arguments facts regarding literal taken  ∪  account similarly determine status argu each ∈ targetnodesn  ment value premises computed sourcenodest ⊆  mentioned previously literal’s strength falls compute ωt  certain level acceptability literal applied ∈ ¬admissibleωt    deal issues node’s opinion com each ∈ targetnodest  puted inﬂuencing opinions calculated each ∈ targetnodesr  literal falls threshold acceptability erase   arguments appears premise literal each ∈ sourcenodesr  exceeding threshold referred admissible                                                                                           formally given set arguments deﬁning   targetnodes                                                            ΩΩ∪         nonnegated set literals appearing create     ω                                                               ∃   ∈ Ω          ∈  directed graph arguments ga pe  ne ω     nv                                                                 ∈            ∈  nodes convenience write  pe ∪ ne each lv                                                         ΩΩ∪             edge appears pe  going ∈ ∈        ω         form edge appear pe  going ∈ ∈ ∈  edge appear ne going ∈ ∈ figure  algorithm propagating opinions through  form ¬l alternatively edge member argumentation network note  pe ∪ ne  ne going ∈ ∈ ¬l ∈   words edge ne links negated                                                        lln ∈ Σ function mapping state proven  nonnegated form literal pe differ                                entiating types edges allows compute unproven literals utility value Σ Σ →  opinion correctly storing nonnegated literals record probing actions performed date  graph                                         cost ∈  example g¬a    given set opinions facts ωf  ⊆ return theutility state ¬a proven  restriction ∀f ∈   graph rep known status  resenting set arguments generated described agents operate environment environment  admissibility function mapping opinions truth tuple form agents cs admissible  falsehood perform reasoning according algo agents set agents contains record  rithm shown figure                               utterances agent cs ⊆ argsΣ                                                        set sensors function admissible operates    agents dialogue game                     opinions pc maps probing actions costs  argumentation framework described allows sensor structure Ωs ΩpthesetΩs contains                                                                                        statically analyse groups arguments letting compute opinion set literals ⊂ Σ  represents en  opinion speciﬁc literals process arguing dy vironment’s opinion reliability sensor  namic agents introducing arguments various points opinion literal ∈ lisωsl ∈ Ωs set probed  conversation section specify agents literals Ωp stores sensor’s opinions regarding value  look like environment argue literal ωpl ∈ Ωp compute sensor’s opinion  protocol use argue each protocol ωsl ⊗ ωpl  referred dialogue game aim dialogue agents turns forward line argument  game “fairness” allowing agent utilise probe sensors obtain information environ  arguments disposal win dialogue games ment action referred agent’s utterance  provide restrictions agent utterances maintain each turn contents agent’s utterance added  focus dispute leave task heuristic layer global knowledge base sensors probed marked  framework                                        sensor probed    agent α tuple namekbΩαgc       value speciﬁc literal costs updated  sisting private knowledge base   position formally deﬁne dialogue game  kb   ⊆  Σ containing arguments private opinion base utterance function utterance  environment ×                                                                   argsΣ  Ωα   ωαlωαln storing opinions literals →       × probes takes environment                                                    ijcai                                                    agent returns utterance agent utility using step lookahead multiple arguments  agent ﬁrst utterance lists arguments ad remain selected random  vanced agent second lists probes making utterance agent decide ar                                               agent like undertake probes ∈ s×Σ   guments advance probing actions  power set possible probes domain speciﬁc func undertake given environment env agent αlet  tion pc probes → allows compute cost   set possible arguments pa kbwedeﬁnethe                                                                                          Ω   Ω   ∈  performing probeprobing costs deﬁned way set possible probes pp                                                                      ∈ Ω          ∈ Ω   allow discounts simultaneous probes turn al ωs ωp  thecostfora  lows richer reasoning agents                  probe ⊆ pp pcprobe    deﬁne function turn  environment × →       agents use multiple sources information estimate  environment   takes  environment    results probe opinions regarding lit                                                                      Ω  agent label  returns  new  environment    erals stored α second compute current  taining effects agent’s utterances given   likely value probe examining sensors al                                                                           environment env     agent αwedeﬁne        ready contain ωp  lastly infer likely  turn function follows turnenvname         value computing effects probing action  newagentscs     ∪   ar newsensors        naive agent believe unprobed sensor                                                                             ar newagents     newsensors      computed    return opinion ωα  nonnaive agent alter   results  utterance function      liefs based existing probed values possible combina  utteranceenvnamear    newagents      tion function will agent believe sensor                                                                                ⊗    ⊕    agents  α  ∪ namekbΩαgc       pcpr     return opinion t∈p ωs  ωp    ωα literal  ∀s ∈ prwherel literal sensor able probe given agent’s personal belief ωαl set sensors                                                                           ∈  newsensors   sensors  ∪ Ωs Ωp ∪ ωpl         containing ωp  unprobed sensor’s    noted utterance depends agent ωsl informally means na¨ıve agent believe  strategy deﬁne possible utterance function probed sensor share opinion literal  section doing deﬁne dialogue agent nonna¨ıve agent weigh ex  game                                          pected opinion probes executed        assume    agents   named    different combination functions possible different  agentagentagentsn−  number weights assigned different opinions  agents participating dialogue deﬁne dia each possible utterance pa × pp  agent calcu  logue game terms turn function setting turn  lates environment look like net  turnagents cssadmissiblepcagentandutility gain using functions  pc  selects                                            having turni    turn turniagenti mod     utterance maximise utility predicted fu  game ends turni turni−n  turni−n          ture environment    cs Ω contains initial arguments opinions  usually note agent make null  contracts  utterance   during eventually bring game having fully deﬁned environment argument  end fact given ﬁnite number arguments place examine possible application domain  sensors dialogue guaranteed terminate eventu contract monitoring contract representations  ally utterance possible change public highly domain dependent section provides  knowledge base cs                                    guidelines transform contracts form    compute agent’s utility combining utility suitable use framework simplify dis  gain achieving goals current costs cussion party contracts examined  stage dialogue given environment’s csandthe make use framework number things  set opinions probed sensors Ωps Ωs Ωp ∈ deﬁned domain dependent sensor set prob  environment’s admissibility function run ing cost function pc initialised agent’s  reasoning algorithm compute set proven literals goal function speciﬁed agent’s private  proven  ll literal cs admissiblel liter knowledge base kb environment’s starting knowl  als fall proven threshold noth edge base cs populated agent’s  ing known unproven unproven   literals cs  prior opinions  proven  net utility gain agent α   said generation sen  uα provengproven unproven  −                sor set reﬂect sensors en    end dialogue assume agents agree vironment probing costs obtained  literals proven set hold world    tract contract based sanctions rewards used                                                        generate example certain contract state    heuristic                                    agent α pay β certain money literal  agents able use underlying argumentation frame representing state associated negative util  work dialogue game argue section ity α positive utility β point  scribe heuristic agents use argue informally noted assigning utility various states uneven  heuristic attempts make utterances maximise ness burden proof prakken  assume β gains                                                    ijcai                                                                                                             ωstr   ωsp                                                          let cost probing each sensors                                                         sensor probing utility cost                                                           finally let utility agent α showing holds                                                         agent β having utility  state                                                        sume α believes literals ¬tr ¬p hold opin                                                        ion strength    assume contract                                                        initially stored kb admissibility function                                                        admissibleb ub literal                                                        negation admissible                                                          agent  α  begin following utterance                                                        tr ¬p ¬tr ¬ts ¬tsg trthis                                                        cost  utility given reasoning algorithm  figure  argument graph dashed lines represent negated assume probed ωtr   ωts  edges solid lines normal edges            ωg     sensor probing                                                        turns   making¬p fall threshold                                                        acceptability invalidating chain argument agent  utility proving literal α gains ﬁrst agent β passes  does agent pay penalty cer agent α tries probing advancing ar  tain state situation second agent loses utility gument fg returns    resulting  true utility lost false unproven opinion    ⊗ operator ap    assume trivial mapping exists contract plied means valid opinion  clauses arguments example clause stating “if     c” represented bc agent β counters probing claiming ¬gthe  decide place translated clauses agent’s probe returns     means argument  private knowledge base kborcs putting kb sufﬁcient strength make inadmissible ωg ≈  mean agents advance clauses relevant     dispute during course argument having ar agent α undercuts β’s argument probing advanc  guments cs represents realistic scenario ing ¬h given sensor’s opinion   this  contract public knowledge kb contain reinstates disallowing argument ¬g  main speciﬁc arguments agents want use assume β believes f’s true value     course dialogue generating agent’s opinions probe utterance  assume  state literals outside scope work returns opinion    remain                                                        admissible ωg      example                                              agents pass admissible α net  example present based simpliﬁed contract utility gain  β’s utility loss   mobile multi–media domain supplier agreed  provide consumer set multi–media services  discussion  consumer believes package received                                                        seen preceding example framework able  lived provider’s contractual obligations assume                                                        represent standard argumentation concepts rebutting  contract form                                                        attacks defeat reinstatement higher level           framerate   →  givesanction               cepts accrual arguments frameworks                                                        difﬁculty dealing compared standard ar           horrormovie →¬givesanction                                                        gumentation systems main shortcoming approach           cinderella →¬horrormovie                     lies inability handle looping arguments           ¬textsent → givesanction                     frameworks suffer similar weaker           ¬phonefull ¬textreceived →¬textsent         problem prakken vreeswijk  use possi                                                        bilistic probabilistic reasoning makes frame  generate argument graph shown fig work suitable situations uncertainty exists regard  ure  letter node ﬁrst letter ing probabilities assigned event sample  literal contract                              domain area reasoning capabilities use    assume sensors ful  movie’s “cinderella” horror argument frameworks described terms  movie sensors detect framerate dung’s  semantics semantics based   ff text received tr notion defeat defeat framework dynami  phone’s memory let  cally calculated applying semantics framework  opinion sensors ratings ωsc   difﬁcult investigating semantics framework  ωsh   ωsf     ωsf  closely looking compare                                                    ijcai                                                    
