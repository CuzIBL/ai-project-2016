      inferring complex agent motions partial trajectory observations             finnegan southey                     wesley loh                     dana wilkinson               google                  university alberta            university waterloo                          abstract                            example consider realtime strategy rts games                                                        popular genre commercial video games users      tracking movements target based lim                                                        control armies consisting tens hundreds units      ited observations plays role                                                        units largely autonomous user provides      ing applications existing probabilistic tracking                                                        highlevel instructions units instance unit      techniques shown considerable success                                                        commanded new location simply specify      majority assume simplistic motion models suit                                                        ing destination pathﬁnding routine computes      able shortterm local motion prediction agent                                                        actual path reach destination unit travels      movements governed sophisti                                                        automatically key feature games      cated mechanisms goaldirected path                                                        called fog war—a limitation user      planning algorithm contexts                                                        observe activity immediate vicinity units      estimating target’s current location                                                        limited ﬁeld view means enemy movements      consider future path ultimate goal                                                        observed occur close allied unit      show use complex “black box” motion    results series short disconnected observations en      models infer distributions target’s current emy movements additionally units given type      position origin destination using lim tanks indistinguishable      ited observations path approach ac uncertain separate observations      commodates motion models deﬁned graph     tain unit interesting strategic questions      including complex pathing algorithms  asked relation observations en      robust practical inference achieved using emy units observations correspond      hidden semimarkov models hsmms graph       unit enemy unobserved      abstraction method extended enemy unit coming going      effectively track multiple indistinguishable agents method propose demonstrate facilitates infer      greedy heuristic                           ence using complex motion models form “black                                                        box” given points motion model need return    introduction                                       path algorithm producing path arbitrary  interesting applications require tracking agents unknown method infers answers  complex fashion through environment questions employing abstraction efﬁciently handle  partial observations possible examples large numbers possible paths probabilistic models  clude realtime strategy games aerial surveillance trafﬁc vi robustly handle inaccurate motion models noise ob  sual tracking occlusion sensor networks related servations important emphasize approach  problems welladdressed robotics vision does learn model opponent’s motion instead  mains approaches start assuming known mo use existing motion models infer complex behaviour  tion model characterizes movement question demonstrate results rtslike context discuss  example monte carlo localization usually employs motion use real world domains  model shortterm predictions capturing simple  ments tractable mathematical formulation unfor  related work  tunately applications movements agents great deal work tracking  quite complex involve longterm goals governed aware work employs complex black box motion  sophisticated algorithms goaldirected pathplanners models manner work bruce  traditional tracking approaches rely simple motion gordon tracking human movements robotic obsta  models prove effective furthermore wish cle avoidance close spirit inasmuch works  draw inferences longterm behaviour agent assumption humans follow optimal  simply track current location        potentially complex paths bruce gordon                                                    ijcai                                                    closely related project work learning goaldriven  human movements gps data liao et al  work employs hidden semimarkov models abstrac  tions environment details differ substan  tially similarly work described bennewitz et al   attempts model complex human motion hid  den markov model learned past observations  examples relied previous examples  ments andor goals order learn models work uses  existing potentially complex motion model  readily applied new environments indistin                               guishable multiagent task identify similar figure  path endpoint motion model noisy  explored sidenbladh wirkander  version proposed path  assume simplistic motion models work multiple hypothe  sis tracking reid  goal recognition addresses observers moving through environment  similar issues finally bererton applied particle ﬁl andor varying ﬁeld view use ot denote  tering approach track human players games achieve sequence observations timestep  timestep  realistic behaviours game enemies bererton                                                            inference complex motion models    formalism                                          seek infer details target movements given ob  motion models  formalize discussion start servations parameterized motion model overall  known environment described graph vewhere approach adopt bayesian inference  vertices  ··· vn correspond set lo consider single target return multiple target  cations set edges indicates connectivity case presently assume target using mo  assume availability parameterized motion model tion model unknown parameters endpoints    θ → pwhereθ parameters sequence estimate parameters characterize  vertices speciﬁes directed path through motion agent  speciﬁcally consider endpoint motion models  parameters form θ vivj  vivj ∈  prior posterior  endpoints figure  shows example graph path start assuming prior endpoint parameters θ  target seek track assumed using θ pair specifying origin destination ver  speciﬁc unknown endpoint parameters model tices applications wellinformed pri   treated “black box” mechanism ors example rts games targets typically   generates paths unimportant need able tween handful locations players’ bases  query path given endpoints             sources resources results presented employ    availability motion models rts quite uniform prior endpoints implementation  immediate game provides algorithm pur accepts informative priors gained ex  pose applications require constructing learn ploiting prior knowledge potential agent goals  ing motion model bennewitz et al  given timestep compute posterior distri  domains reasonable models available bution endpoints given past observations θot  example various online mapping services pro bayes’ rule θot ∝ otθp θgivinganun  vide road paths travel locations avenue normalized version target distribution computing  assume costsensitive pathing algorithm probability observations given parameters note  search—a reasonable choice case rts purposes unnormalized distribution  pathing algorithms variants note fectly acceptable normalization applied neces  useful pathing algorithms require edge costs infor sary compute posterior distribution work  mation graph extra information straightforward compute max posteri  assumed available graph      ori estimate parameters identify “most probable”                                                        path simplest scenario otθ computed                                                                           θ  observations  time treated advancing discrete possible endpoints  address obvious scaling  steps each time step observations issues approach shortly  scribed set vertexresult pairs ot observation  results vertex vi negative seen  hidden semimarkov model  positive target seen example  explain compute otθ   − mean timestep ver particular setting θ black box used gen  tices observation target seen erate proposed path corresponding θ obvious  target seen vertices method calculating probability perform  observation arrangement allows fact exact path matching testing observations                                                    ijcai                                                                ot exactly match expect target puted              traversed results probability                                                                                                                                     t              approach robust model perfectly α         ds                       correct—perhaps access true                                             pathing routine approximation—it lead               ⎡       ut−d     ⎤              problems realworld domains ad                                                                                                         ⎣                    ⎦              ditional problem noisy observations erroneously                   stsjαt−dsj                seeing seeing target incorrectly identifying            sj              exact location seen finally variable movement rates              result observations inconsistent       note α’s distributions used compute                                                                                                   ˜                order compensate potential inconsistencies speciﬁc single hsmm θ conditioning                                                                    ˜              use basis noisetolerant observation model θ omitted readability computing α functions              instead using directly model hidden semi θ˜’s obtain answers original              markov model hsmm based hsmm discrete  questions explicitly condition θ˜              time model sequence hidden states ··· st              visited observations emitted depending hid              den state murphy  good overview hsmms endpoint filtering distributions interesting              extend common hidden markov model allowing strategic question “where target going com                                                                    ing from” obtain unnormalized distribution              distribution time spent each distinct hidden state                                                   precisely hsmm consists                   endpoints marginalizing hidden state variable                                                                       θot ∝ otθp θ                • set hidden states vertices case                                                                                                                     ˜   ˜                ˜    ˜                                                                                ≈ otθp θ   stotθp θ                • prior initial hidden state  vi ∀vi ∈                                                                                                  st                •                  transition function—a distribution successor interesting question “where target                                                                          states given transition occurs time  now”—the current hidden state target                    ∀v ∈                                                          called ﬁltering distribution computed                                                                                                            • observation function—a distribution observa                                                                            stot ∝      stotθp θ                  tions each state otst  vi ∀vi ∈                                                                                            θ                •                                                                                        ˜   ˜                  duration function—a distribution time               ≈      stotθp θ                                           dtst  vi ∀vi ∈                   transition each state                                          θ˜              each proposed endpoint pair θ build correspond  building hsmms              ing hsmm  parameters distributions                                           ˜                          θ˜                                        need specify generate hsmm θ              denote  use distribution observations              θ                        θ˜                                          proposed path based  simplest case              given parameter settings noisetolerant unnor construct transition function deterministically gen              malized estimate distribution original θ param                                                    ˜    ˜          erates observation model  probabilities              eters θot ∝ otθp θ ≈ otθp θwhere                                      ˜                                                   observing target dictates duration              θp θ defer explanation construct distribution probability  duration thisis              θ˜for explain compute probabilities ﬁrst equivalent exact pathmatching model importantly                                                                    changing distributions make hsmm                                                                    relax exact matching ways achieve ro              inference inference hsmms achieved using bustness relaxation handling inac              forwardbackward algorithm murphy  “for curate black boxes noisy realworld observations imme              ward” required compute distributions diately relaxations facilitate ap              forward algorithm computes joint prob proximations computationally motivated              ability hidden state history observations abstracted graph approximation described section                        ˜              stotθ each time step abbre noisy pathing                      α    →                 α              viate               each function func  way deal inaccuracies differences                                    α               tion earlier functions   probability tween true paths proposed paths introduce              efﬁciently updated each new observation setting noise transition functions hsmms cre              α     ∀v ∈             α                                  remaining ’s com ates noisy version original model imple                                                                    mentation introduce small probability straying                observers moving observation distribution exact path proposed vertices neighbouring              changes time implementation fully supports vertices path high probability returning              transition duration functions stationary     vertices path creates probabilistic “corridor”                                                                ijcai                                                                small deviations tolerated figure  variable amounts time need change  shows example idea                        duration function hsmm approximately account    possibilities introducing noise build distribution each abstract vertex  make probability error related edge weight generating base paths covered vertex count  neighbours distance vertices explore ing number paths each length assume  simple transition noise quite distinct uniform distribution paths through abstract vertex  option introduce noise observation function abstraction graphs observations lead  stead uncertainty realworld applications come discrepancies abstracted observations proposed  observations practically speaking noisy paths set proposed paths computed  transition functions observations functions serve gˆ target’s actual path computed  address source error treating errors proposed result mismatches actual path  paths observation errors abstracted path details m’s algorithm par  experimented noisy observation functions ticularly abstraction extra information edge  offer advantages keeping hsmm transition functions cost hand abstraction serve mitigate  sparse reducing memory usage computation        minor differences true motion model                                                        sumedmotionmodelm    base level paths    abstraction                                        form single path gˆ noisy pathing described earlier  perform exact inference simply considering possible remedy situation  endpoint pairs number possible pairs prohibitively  high approximate monte carlo sampling    multiple targets  employ form particle ﬁltering fairly                                                        general expect multiple targets world  straightforward certainly possible                                                        mentioned earlier possible distin  expand options                                                        guish target seek establish    complementary strategy reducing computational cost                                                        agents generated observations use fol  abstract original base graph describes en                                         gˆ vˆ eˆ   lowing natural grouping observations starting point  vironment obtain smaller abstract graph          target view assumed accu  coarsely models locations environment rately tracked consecutive positive observations  abstraction φg maps vertex member                                                                       ˆ                   target taken single trajectory  smaller set abstracted vertices  reducing wish associate trajectories targets  set possible endpoints effectively scales consider set integer “labels”  ··· mwherem  number hsmms store compute motion number trajectories labelling maps  model  requires additional information edge observed trajectory set labels place ear  costs abstracted work presented lier notation observations denote trajectories  use clique abstraction sturtevant buro  associated single label labelling lbyylj  averages edge costs produce edge costs conceptually each label corresponds distinct target  ˆ  implementation accepts graph abstraction pro generates trajectories associated label la  vided purposes resulting loss precision bellings propose grouping set trajectories  acceptable tradeoff sufﬁces know enemy’s label generated single target  goal “near” location                        labellings zero posterior probability    ﬂexibility required handle graph abstraction labellings consistent differ  each vertex vˆ corresponds set vertices  explain observations ideally want ﬁnd la  observation rest belling gives best explanation—one maximizes  unobserved abstract observations ot ver posterior probability observations                                   ˆ      ˆ       ˆ  tices base graph observations ot  oot                                                                    max yl ··· ylmlp  record positive observation abstracted         vertex target seen corresponding base          m  vertices observation partiallyobserved abstract ≈   max    yljlp                                                                      vertices introduce uncertainty negative observation          possible target unob       m                                                                                          ˜    ˜  served base nodes fortunately use hsmms means        max           yljl θip θip  incorporate uncertainty readily changing                                                                              θ˜  observation function use simple obvious model                 probability negative observation ab tracking easy rts generally hard failure identify  stracted vertex given target actually vertex trajectories simply fragment trajectory  equal proportion base vertices unobserved does pose insuperable problem    similarly grouping base vertices single ab computationally α functions negative observations  stract vertex means movements base level computed separately shared positive trajectories offer  unit time movement through abstracted node ing considerable savings computation space                                                    ijcai                                                    prior labellings formulation effec  tively assumes targets associated labels gen  erate observations independently approximation ac  cept sake reducing computation    maximizing possible labellings trajectories  expensive use following greedy  approximation start labelling gives  each trajectory unique label essentially claiming each  generated separate target tar  gets proceed iteratively each step select  candidate pair labels merge mean  trajectories labels associated                                                       figure  penta map showing target’s path  labels gives new labelling                                                        right centre superimposed images origin  yl jylj ∪ ylk yl k∅ compare                                                       destination posterior distributions  likelihoods labellings  rejecting merge                                                      likely keeping new labelling ← kind discuss experiments focused show  select new candidate pair repeat ing approximations use compare base    heuristically order candidate label pairs com line improve computational costs use dif  puting kl divergence endpoint distributions ferent maps exhaustive tests ﬁrst map  pairs labels selecting minjk klp θylj   penta shown figure  ×  map created  θylk  klp θylk   θylj pair experiments speciﬁcally demonstrate endpoints  merged update kl divergences repeat pair accurately inferred three maps adrenaline  rejected merging select smallest divergence  ×  harrow  ×  borderlands  ×   merging stops candidates remain   maps commercial rts game “warcraft    intuitively heuristic proposes pairs labels tra ” blizzard entertainment figures     jectories induce similar endpoint distributions prefers supplemental colour images animations available  hypothesized targets similar originsdestinations httpijcaigooglepagescom  given separate observations pair’s observations environments place observers targets  fact generated target’s path merge observers  ×  ﬁeld view centered loca  produce high posterior probability tion targets using pra pathﬁnding algorithm  possible really targets scribed sturtevant buro afastvariantofa  observations combined inconsistency detected generates suboptimal paths similar paths  similar paths overlap time sin test effect inaccurate models comparing use  gle target divergence simply intended propose pra modelling correct assumption vs incor  didates order guided similarity likely paths rect each trial endpoints randomly selected                                                        targets observers placed randomly paths    experimental results                               guaranteeing observation simulation runs  implemented approach hog    targets reach destinations plus additional  framework pathﬁnding research sturtevant buro steps endpoint ﬁltering distributions computed    provides simulation visualization facility timestep results averaged  trials  pathﬁnding routines abstractions clique abstraction example posterior distributions origin  use hierarchical providing succession abstractions destination target penta shown time  each abstracting graph previous level abstrac steps target black dot completed journey  tion level  original unabstracted base graph level  viewed different observers white dots way  abstraction  abstraction level  compactness distributions superimposed—  baseline case—no abstraction perfect motion model— shading right origin distribution  obtains true posterior distributions given observations shading center destination distribution  usefulness baseline case necessar assess called “accuracy”  ily limited available observations target method single target case paths ranked accord  observed observed points trajectory ing posterior probability end trial  consistent wide variety paths conclusions report percentile ranking target’s true path aver  correspondingly vague                        aged trials higher better results reported    experiments run gauge impact approxi abstraction levels different modelling assump  mations involved abstraction mechanisms used tions correct pra vs incorrect noisynon  handle noise unaware alternative method noisy transition functions captures penalty suffered  performs inference complex motion models abstraction inaccurate model highlight                                                        baseline case abstraction noise accurate model    kl divergence symmetric adopt common sym  metrized version                                        httpwwwblizzardcomwar                                                    ijcai                                                    
