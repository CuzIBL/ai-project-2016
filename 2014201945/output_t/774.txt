              identifying conﬂicts overconstrained temporal problems             mark lifﬁton michael mofﬁtt martha pollack karem sakallah                        department electrical engineering science                              university michigan ann arbor                            lifﬁton mmofﬁtt pollackm karemeecsumichedu                          abstract                          rithms speciﬁc particular types constraint sys                                                        tems boolean satisﬁability bruni sassano       strong connection maxi     zhang malik  oh et al  lin      mally satisﬁable minimally unsatisﬁable sub  ear programming chinneck  techniques      sets constraint systems using relation  veloped readily generalized types      ship develop twophase algorithm employ   constraints contrast explore deep connection      ing powerful constraint satisfaction techniques tween maximal satisﬁability minimal unsatisﬁability      identiﬁcation conﬂicting sets constraints develop techniques used ﬁnd muses      infeasible constraint systems apply tech constraint regardless constraint type paper      nique overconstrained instances disjunc demonstrate approach applying disjunctive      tive temporal problem dtp expressive form   temporal problems dtps stergiou koubarakis       temporal constraint satisfaction problems particularly expressive form temporal constraints      ing randomlygenerated benchmarks provide     previous work focused ﬁnding muses boolean satisﬁa      experimental results demonstrate algo bility instances applications circuit design      rithm scales problem size constraint den veriﬁcation dtps provide richer space using muses      sity                                             speciﬁcally constraints relaxed                                                        change structure possible    introduction                                       boolean variables constraints  ai problems cast terms constraint    section  paper deﬁne dtps discuss  satisfaction problems csps large number systems motivation ﬁnding muses section   developed efﬁciently compute solutions sets scribes relationship maximal satisﬁability  constraints set constraints satis minimal unsatisﬁability section  contains speciﬁc al  ﬁable paper reports technique efﬁciently iden gorithms employed exploit relationship ﬁnding  tifying sets conﬂicting constraints overconstrained muses dtps empirical results given section   problem focus temporal constraint problems section  closes conclusions directions fu  play prominent role planning scheduling ap ture work  plications ai approach particularly  suited temporal problems conﬂicts  disjunctive temporal problems  straints resolved weakening completely disjunctive temporal problem dtp constraint satis  abandoning constraints                              faction problem deﬁned pair hx ci set    build previous work lifﬁton sakallah real variables designating time points set   identifying minimally unsatisﬁable subsets straints form ci ∨ci ∨∨cin each cij  straints muses given set constraints mus form − ≤ ∈ ∈  dtps gen  subset  unsatisﬁable  minimal eralization simple temporal problems stps  sense removing elements makes each constraint limited single inequality dechter et  rest mus satisﬁable each mus provides infor al  solution dtp assignment values  mation conﬂict addressed solve time points constraints satisﬁed  given csp general arbitrary csp contain multiple algorithms developed solving dtps  muses resolved constraint relax stergiou koubarakis  armando et al   ation csp solved identifying muses oddi cesta  tsamardinos pollack  typ  csp makes possible reason weaken ically algorithms transform problem meta  conﬂicting constraints make solution feasible   csp original dtp viewed collection    prior work muses largely restricted al alternative stps using approach algorithm selects  gorithms ﬁnding single mus addition algo single disjunct each constraint given dtp resulting set forms stp called component stp inequalities modifying structure prob  checked consistency polynomial time using lem muses provide information needed determine  shortestpath algorithm clearly dtp consistent changes  contains consistent component stp fur  thermore solution consistent component stp dtp  maximal satisﬁability minimal  solution consequently standard unsatisﬁability  dtp literature consider consistent component stp  solution dtp belongs      techniques extracting muses derived deep     number pruning techniques used fo  relationship maximal satisﬁability minimal  cus search consistent component stp dtp satisﬁability maximal constraint satisfaction problem  include conﬂictdirected backjumping removal maxcsp optimization problem constraint sys  subsumed variables semantic branching dtp   tem goal ﬁnding assignment vari  solver epilitis tsamardinos pollack  integrated ables satisﬁes constraints possible  techniques addition nogood recording epilitis solution maxilitis ﬁnds  traditional dtp solvers perform total constraint example problem  satisfaction—that objective ﬁnd solution maxcsp deﬁned terms cardinality  satisﬁes constraints dtp event dtp satisﬁable subset constraints deﬁnition  inconsistent solvers capable detecting infea relaxed inaugmentability goal instead  sibility incapable providing partial solutions come deﬁne maxcspc ⊆   close satisfying problem response dtp solver maximal satisﬁable deﬁne new prob  maxilitis mofﬁtt pollack  designed ﬁnd lem maximally satisﬁable subset mss deﬁnition  lutions maximize number satisﬁed constraints set msses follows set muses deﬁned sim    number satisﬁed constraints ilarly comparison  best measure solution instead important                                                                      m  ⊆  satisﬁable      reason exactly constraints violated mssesc   extent violated illustrate       ∀c ∈ cm ∪ unsatisﬁable  following small dtp use example            m  ⊆  unsatisﬁable and                                                         musesc   paper                                                 ∀c ∈ mc satisﬁable          − ≤                             each mss subset satisﬁable inaug        − ≤ −                         mentable adding constraints subset                                                        render unsatisﬁable notice deﬁnition        − ≤ − ∨  − ≤                                                         mssesc musesc essentially duals        − ≤ −                         mss satisﬁable larger    note dtp unsatisﬁable set mus unsatisﬁable smaller                                                        relationship cosmetic show set  straints inconsistent true                                                        actually implicit encoding note  standard dtp solver simply report  problem unsatisﬁable like max maxcsp solution mss maximal cardinality  ilitis ﬁnd solution maximizes number implies inaugmentability msses  satisﬁed constraints—in case solution satisﬁes maximal cardinality illustrated example dtp                                                        mss example    corresponding  applications                        important instead maintain control rela maxcsp solution mss adding                                                         makes unsatisﬁable smaller  tionship expressed knew                                                            consider  constraint included max  source conﬂict involving reason                                                                 csp solution example removing dtp  weaken constraints conﬂicts                                                                                       makes remaining satisﬁable general given  example decide change bound                                                         mss set constraints included mss provides  change bounds                                                         irreducible “ﬁx” original infeasible remov  reason similar relaxations make  jointly feasible order ing constraints makes satisﬁable  identiﬁed constraints conﬂict ﬁne “comss” complement mss set  precisely muses tell         comssesc    ability relax constraints completely remov comssesc  ⊆  cm ∈ mssesc  ing makes dtps interesting domain  ﬁnding muses example systems boolean complementary view mssesc reveals  straints infeasible boolean satisﬁability instance meaningful connection maximal satisﬁability  feasible completely removing constraints minimal unsatisﬁability recall presence mus  changes indicated directly techniques iden constraint makes infeasible  tify maximal satisﬁable subset constraints infeasible make feasible mus neutralized  dtp consistent altering bounds relaxing removing constraint              comssesc                                                                       musesc                                                                                                                                                                                                                                                          musesc  cc   ∨ cc ∨          comssesc    ∨ cc ∨ ∨                          cc ∨ ccc                                 ∨ cc ∨ cc                                                                          figure  covering problems linking comssesc musesc    comss set comss irreducible set simpliﬁedmusilitiscomssesa  constraints removal makes satisﬁable ev      ery comss contains constraint mus  newcomss ← cc ←  ∈  temporal problems achieving satisﬁability  comsses ← comsses ∪ newcomss  require removing constraint comss does  backjumpto ← true  quire relaxing course removing constraint  return  equivalent extreme relaxation bound  ← selectconstraintu u’ ← –  inequality constraint set inﬁnity        values ∈ dc    comss inherently solution covering      a’ ← ∪ ←  problem musesc   speciﬁcally solution   consistenta’  hittingset problem garey johnson         simpliﬁedmusilitiscomssa’ u’  musesc given set collection subsets     backjumpto  true return  hitting set collection subset contains  a’ ← ∪ ←   element each subset collection  unless assignmentsubsumeda’comsses  case set set constraints constraint  simpliﬁedmusilitiscomssa’ u’  collection subsets set musesc  backjumpto ← false  hitting set musesc comss    additionally line “duality” msses figure  simpliﬁed version algorithm ﬁnding  muses mus hitting set set comsses comsses dtp  key extracting muses constraint sys  tem ﬁrst compute set comsses extract                                                        ier ﬁnd maximally satisﬁable subsets comsses  muses ﬁnding hitting sets comsses                                                        ﬁnd muses directly follows relative    figure  illustrates relationship covering prob simplicity problems np sat compared  lems link comssesc musesc example conp unsat approach com  dtp left table represents covering problem ﬁnd pute comssesc ﬁnd irreducible hitting sets  ing muses cover comsses generate musesc  each column constraint dtp each row  single comss say constraint “covers”  algorithm details  comss marked ‘x’ row contained details algorithm ﬁnding  comss each mus irreducible subset muses use serial decomposition task  columns covers rows example ﬁnd comsses dtp using algorithm  manner similar petrick’s method boolean borrows heavily maxilitis algorithm  logic minimization each row disjunction readily generalized types constraints second  columns cover row disjunctions use techniques extracting muses operate completely  joined simpliﬁed distributive rule right half independently comsses generated  ﬁgure shows comssesc generated types constraints involved phases combine  exact manner musesc                      form solver musilitis capable    interested primarily ﬁnding arbitrary set diagnosing infeasibility given dtp solver  constraints relax order make overconstrained set sound sets constraints returns  feasible simply compute comssesc each muses complete ﬁnd muses  element comssesc represents set constraints given constraint  sufﬁciently relaxed result feasible  instead want reason weaken par  finding comssesc  ticular constraints need identify individual sets figure  present simpliﬁed version algorithm  conﬂicting constraints musesc practice eas ﬁnding set comsses dtp backtracking search resembles ways branchandbound al musilitisextractmuscomsses  gorithm employed maxilitis effectively searches  mus ←    through space partial assignments disjuncts  comsses  constraints recall convert each disjunctive  curcomss ← popcomsses  straint original dtp metalevel variable  newconstraint ← popcurcomss  domain set disjuncts set contains current  mus ← mus ∪ newconstraint  partial assignment set contains constraints  testconstraint ∈ curcomss  instantiated constraint  testcomss ∈ comsses  instantiated assignment purposefully  testcomss contains testconstraint  chosen left unsatisﬁed assignment labeled       remove testconstraint testcomss  symbol                                          testcomss ∈ comsses    understand algorithm consider example   testcomss contains newconstraint  constraints suppose begin search ﬁnd solu  remove testcomss comsses  tion constraints say left  return mus  unsatisﬁed point search prune solu  tions necessarily leave unsatisﬁed figure  extracting single mus comssesc  candidates incapable leading irredun  dant comss handle algorithm means  backjump ﬂag causes search immediately nique used dtp solving algorithms does  jump deepest point assignment demonstrate use pruning techniques called removal  unsatisﬁed constraints                  subsumed variables semantic branching armando et    lines  through  handle case particular solu al  known greatly improve power  tion constraints instantiated set dtp solvers luckily methods remain available  unsatisﬁed constraints assigned  comss ﬁnding comsses dtp integrated  added global list comsses initialized   musilitis solver common issues variable  point ﬂag backjumpto toggled avoid fur value ordering heuristics play large role guiding  ther search current subtree solutions search discuss space  subsumed comss just                  limitations    constraints remain uninstantiated line  se  lects constraint satisfy lines  –  attempt various  obtaining musesc  disjuncts satisfy mus irreducible hitting set comssesc  cursive calls ﬁnds solution backjumpto ﬂag decision version hittingset problem deciding  enabled causing algorithm bubble search tree exists hitting set cardinality equal  deepest assignment  reached         npcomplete karp  case    line  algorithm attempts assign terested irreducibility cardinality combined  ment assignment subsumed comsses property comss subset allows  prior solutions line  algorithm pur extract single mus greedy approach poly  sue partial assignment line  resetting nomial time resorting search figure  provides  backjump ﬂag event solution discov pseudocode algorithm  ered line  noted version al construction works sequentially adding constraints  gorithm guaranteed ﬁnd irredundant comsses forming mus intuitively mus set constraints  redundancies easily removed postprocess containing constraint comss  ing step                                             constraint essential element set “es    slight variation approach ﬁnd comsses sential” mean removing constraint mus  increasing order size blocking comsses leave comss unrepresented  increasing order algorithm ensures subsequent time constraint added remaining problem modi  comsses irredundant incremental al ﬁed enforce requirement constraint essen  gorithm easily achieved setting upper bound tial ensuring new constraint  number constraints violated repeatedly calling representative comss  given algorithm each time increasing upper bound lines   musilitisextractmus choose comss   problem longer satisﬁable set single constraint newconstraint  searches performed pruning allowed smaller comss newconstraint added mus  comsses potentially save time spent ﬁnding maining lines ensure essential lines  through   redundant comsses incremental algorithm proved remove remaining constraints chosen comss  extremely effective maxilitis goal sim comsses input set prevents  ply maximal constraint satisfaction          constraints added later iterations    implemented exactly shown algorithm shown make newconstraint nonessential lines   figure  perform poorly pseudocode comsses containing newconstraint  does illustrate use forward checking vital tech represented mus following modiﬁcations tocomsses algorithm iterates comsses              incremental                                                                       backtracking  constructed set constraints complete exact mus                                                                      incremental    extracting muses comssesc requires               backtracking                                                                       incremental  searching irreducible hitting sets comssesc           backtracking  potential combinatorial explosion number     muses impractically large cases       result tractable                                        method generating complete set muses      seconds                                                                 comssesc uses general form musilitis       extractmus  algorithm figure  particular mus                                                               −  generated algorithm depends order     comsses constraints selected comssesc                                                               −  branching decisions lines                                                                                                     possible muses generated accom                           plished recursive function takes input  remaining set comsses mus currently   figure  median runtimes ﬁnding comssesc  constructed each branch recursion initial  ized comssesc set respectively                                                                branching ideal duplicate branches possi                                    ble quite common practice pruning heuristics                                                                                                                                      employed reduce search space                                                                                                                                                                                                                                                                                                                               experimental results  benchmarked phases mus generation pro         cess ﬁnding comssesc extracting musesc  using dtps created random dtp generator used         testing previous dtp solvers stergiou koubarakis   collected performance data analyzed sets     comsses muses dtps range dtp gen      frequency  averaged  instances    erator parameters                                                                                                                                         test case generator takes arguments parameters                   comss size  hk li number disjuncts  straint number time points number figure  distribution comss sizes    constraints constraint width positive  teger each disjunct − ≤ ∈ −l  uniform probability experiments set   negligible figure  shows median runtimes al  ∈      derived parameter ra gorithms problem parameters surprisingly run  tio constraints variables mn varied  time increases size density   each setting  random problems notice times single backtracking algo  generated example generated  problems rithm labeled ‘backtracking’ tend roughly order  case   problems  tem magnitude faster incremental method  poral variables  constraints each problems labeled ‘incremental’ contrasts results  likely highly overconstrained  constraints ported mofﬁtt pollack  opposite ef   time points size problems dwarfed fect observed difference maxilitis stop  somewhat maxilitis solve   iteration solution single  mind objective max solution maximal cardinality needed mul  imal constraint satisfaction easier achieve tiple searches performed incremental mode sub  domains variables integers instead reals stantially pruned single search  standard dtp literature implementation upper bound case iteration continue  musilitis developed java ﬁnding comsses comsses size combined run  extracting muses experiments conducted time separate searches easily exceed  linux ghz opteron processor gb ram  single backtracking search    compared runtime versions figure  shows distribution sizes comsses  musilitiscomss algorithm described section —one musilitiscomss algorithm cases   uses single backtracking search ﬁnd comsses  ranges   dtps  does incrementally randomly generated results particularly useful  quires additional postprocessing step remove redun provide valuable information  dant comsses procedure runtime considers runtime mus extraction phase
