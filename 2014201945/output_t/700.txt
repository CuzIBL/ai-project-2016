      sequentialsimultaneous         information      elicitation   multiagent     systems                                      gal bahar   moshe   tennenholtz                             faculty industrial engineering management                                  technion–israel  institute technology                                             haifa  israel                          abstract                          setting ﬁts context mechanism design mas                                                        colell et al  vol  subject great      introduce general setting information elic synergy ai game theory monderer et al      itation multiagent systems agents       approached sequentially simultaneously     particular general setting study      order compute function depends following each agent secret accessible      private secrets consider oblivious mechanisms access secret costly agents      sequentialsimultaneous information elicitation choose access accessing one’s      mechanisms ordering agents   private information strategic question ap      approached ﬁxed advance surprisingly   proach generates natural tension socially      show mechanisms easy rep privately optimal action compute joint      resent implement sufﬁcient general function correctly agents’ incentive free ride order      settings classical uniform model overcome tension need design mecha      agents’ secret bits uniformly distributed nism prevent agents freeriding elicit      computation majority function  agents’ secrets execute desired computation      classical threshold functions  previous work regard smorodinsky      provide efﬁcient algorithms veriﬁcation tennenholtz  class functions consider      existence desired elicitation mecha anonymous functions anonymous function      nisms synthesizing mechanisms      function’s value does depend identity                                                        agents secrets words permu                                                        tation agents’ secrets change value    introduction                                       function class functions quite elementary  information elicitation multiagent systems deals used models anonymous functions major  aggregation information agents order compute ity consensus average variance order statistic percentile  desired function conen sandholm  sunderam  parkes  parkes  boutilier et al  smorodin previous work shown power sequential informa  sky tennenholtz  shoham tennenholtz  tion elicitation approaching agents sequentially  mcgrew  et al  halpern teague  cases incent agents access secrets  general setting consider paper agents approached simultaneously ba  players hold private information secrets sic intuition approach agents  agents like compute jointly function willing access secrets costly  vector secrets addition exist dis agree access secrets  tinguished reliable agent aka center used pivotal given costs accessing  extracting information agents center’s aim secrets high sequential mechanisms advantage  devise mechanism yield desired com structure carefully selecting identity agent  putation paper consider strategic setting approached each point given available informa  assume agents selﬁsh driven utility tion paper consider general approach  maximization considerations hand like agents approached simultaneously sequen  receive value multiparty computation tially consider sequential mechanisms  hand want contribute computa each point set agents approached decision  tion freeride agents’ efforts set agents approached based available                                                        formation shown illustrated section    setting fundamental ai sci  kind mechanisms refer sequential  ence general discussion linial  simultaneous mechanisms allows effective informationelicitation sequential simultaneous information istence desired elicitation process implies  elicitation major aim paper identify condi corresponding oblivious mechanism  tions existence successful sequentialsimultaneous efﬁciently compute uniform model discussed sec  elicitation mechanisms devising algorithms tion  majority function extensions  desired mechanism exist                 threshold functions discussed section     reader notice objective quite ambi cases efﬁcient algorithms provided  tious particular sequentialsimultaneous mechanism proofs results nontrivial  complex decision tree maps possible based series propositions omitted  history observed set agents approached given version paper lack space  history gives rise idea considering partic  ular kind mechanisms refer oblivious  general model  mechanisms oblivious mechanism ordering  agents ﬁxed advance does depend previous let nn ≥  ﬁnite set agents each agent  history naturally successful elicitation established private secret sj ∈   compute  mechanism easy represent im access order learn value let  ≤                                                                                   plement leads types fundamental questions prior probability sj   assume events                                                        dependent agents compute secrets     provide efﬁcient algorithm check                                                        computation costly agent pays cj ≥       ing given information elicitation setting computing  loss generality shall assume      desired oblivious sequentialsimultaneous elicitation                                                             ≤ ≤    ≤ cn words agents ordered      mechanism exist exists provide ef costs refer agents’ costs ordered      ﬁcient procedure output desired mecha                                                        lowest highest     cn−      nism                                               agents interested computing joint binary pa    natural general settings restric rameter majority vote      tion oblivious mechanisms does prevent sensus depends vector private inputs let      desired elicitation                            →   denote desired computation each    surprising message paper pro agent utility vj learning value  vide highly positive encouraging answers ques assume vj ≥ cj  agent face dilemma  tions ﬁrst prove appropriate oblivious possible use convention vj    mechanism uses seminatural loss generality general case                                                        vj  cj   equivalent case value  ordering mechanism approach agent                      cj                                                       agent  cost   cost approaches agent cost                       vj  approach simultaneously central designer termed center elicits agents’ se  show efﬁcient algorithm verifying desired crets computes reports computed value  oblivious seminatural ordering mechanism exists each agent setup each agent faces dilemma  mechanism exists desired ordering obtained compute private secret sj cost cj   algorithm’s output show restriction submit guess central designer  oblivious seminatural ordering mechanism does restrict sired property mechanism correct computation  power elicitation popular contexts through elicitation secrets sufﬁ  particular show holds uniform setting ciently agents  each agent’s secret bit taken   prob note cost each agent’s computation  ability  each classical majority function cj  lower gain computing  general threshold functions pro socially optimal outcome compute free  vides powerful general approach information riding agents undermine ability reach social  elicitation multiagent systems backed efﬁcient optimum  effective algorithms    section  introduce general model general  sequentialsimultaneous mechanisms  sequentialsimultaneous mechanisms brieﬂy illus model mechanisms approach players sequen  trate power mechanisms buy compar tially possibility approach simultaneously  ing previous studies purely sequential purely si player each time assume commu  multaneous mechanisms considered section  nication center agents fully revealed  introduce oblivious mechanisms show efﬁ agents associated having broadcast  cient algorithm verifying existence appropriate communication  oblivious elicitation mechanism show seminatural sequentialsimultaneous mechanism determines set  ordering mechanism computed desired result agents approached each stage function  oblivious mechanism exists remark means information provided far formally let hi   example cases restriction obliv  ious mechanisms prevent obtaining desired wlog purposes exposition case  computation leads study settings ex   treated similarlya     ai biai ≤ ∀ ≤   ak  intuitively graph describes possible states infor  ak ∀ ≤   bk ≤ bk ∀ ≤   ak − ak ≥ mation approaching agents computing value  bk − bk  stands event anonymous function possible state transitions  agents approached ’s − ’s state describes agents approached  reported hi set histories length ’s heard far let g¯  v¯  e¯                                                                                          ≤  ≤  let   Λ Λ null graph induced reducing include nodes                      history let  si hi set possible value function determined  tories  sequentialsimultaneous mechanism triplet referring node abuse notation refer  ugf  →       determines event event  stands  agents approach simultaneously  → deter  case agents approached ’s  mines agents approached  →   ∗ − ’s reported  function expresses decision halt node g¯ deﬁne following let  output   continue elicitation process pivv  robziv zi event agent  denoted  note each agent  actions don’t pivotal function notice  compute report  don’t compute report  com anonymous function robziv each agent  pute report  compute report  compute pivv uniquely deﬁned  port true computed value compute report clear context denote pivv note  false value let denote Γ set actions strat ∈ v¯  possible compute value  egy player xj  → Γ assigns action each pivv   let cmaxv ≡ maxc   − ≥  possible history let hkx     xk− xk     xn pivv ·   − pivv ·  left side  history agent sees approached given inequality utility agent cost ap      xk− xk     xn vector strategies proaching secret assuming agents approach  agents vector secrets let xkhk secrets right side utility agent  strategy agent according history hk sees doesn’t approach secret assuming agents ap                    approached let xkhk   action proach secrets guess ”” best choice  agent according history hk compute secret case ≥  inequality implies                                                      ≤  −  − pivv − · pivv implies ≤  xkhk   let xkhk                                                          − · pivv cmaxv   − · pivv  agent reports ”” xkhk    utility agent according strategies secrets notice cmaxv maximal cost         robgxh        rational access secret given information assum                                         ing access secrets  gs − robx    ·  equilibrium                                                  following example illustrates useful use  mechanism vector strategies     xn sequentialsimultaneous mechanisms consider follow  each agent’s strategy best response ing setup let majority function      agents’ strategies each agent                                                             show  each strategy xk agent uix     xk     xn ≥                                                       given setup exists sequentialsimultaneous  uix     xk     xn seek mechanisms mechanism appropriate hand given  compute true value equilibrium fact setup does exist sequential mechanism  required mechanism computes certainty appropriate case approaching  seek mechanisms induce sufﬁciently agents simultaneously appropriate  agents access reveal secrets order  computed note cases computed  partial information example case consensus  oblivious mechanisms  function sufﬁcient elicit information sequentially oblivious mechanism mechanism partition  different replies truthful     agents groups each time approach agents    given particular     cn mechanism ap group simultaneously dependency  propriate exists equilibrium tory groups ordering groups  surely computed vector agents’ secrets determined advance agents partitioned  equilibrium referred computing equilibrium                                                                                  groups ai      algorithm appropriate induces appropriate mecha                                                                                    ∀   ≤   ≤  ai aj   ∅ group  nism                                                        agents approached ﬁrst group    let anonymous function consider directed agents approached group  graph   set nodes    agents approached group agents                                                    ∈  ≤ ≤ ≤ −  set edges  approached reveal secrets event      ≤ ≤ −  ≤ si  possible determine value function       ≤ ≤ −  ≤                   mechanism stops                                                          given function agents’ costs ≤ ≤    ≤         probability distribution induced distribution cn− seminatural ordering mechanism obliv                                              ious mechanism agents sorted according cost accessing secrets  exists seminatural ordering mechanism        ca−                      appropriate     ca ca     caa−     note given anonymous function function agents’                                                    costs ≤ ≤    ≤ cn− exists semi                                                        natural ordering mechanism appropriate  at−  ca···at− ca···at−                                                            exists oblivious mechanism appropriate  ca ···a − − −                                                 fore combining theorems observations   ca···at− ca···at−     cn−    section deals following prove theorem  consider anonymous function agents  exists oblivious mechanism ap costs ≤ ≤    ≤ cn− three following  propriate exists seminatural ordering mechanism claims equivalent  exists oblivious mecha  appropriate address problem exis nism appropriate  cond satisﬁed   tence provide efﬁcient algorithm given anony exists seminatural ordering mechanism appropri                                                        ate  mous function ci’s decide ex  ist oblivious mechanism appropriate provide complete efﬁcient procedure  provide efﬁcient algorithm induces appropriate given function agents’ costs ≤ ≤    ≤ cn−  oblivious mechanism mechanism exist  check exists oblivious mechanism    given function agents’ costs ≤  ≤    ≤  appropriate exist oblivious                                                  mechanism appropriate procedure induce  cn− consider following algorithm    oblivious mechanism algorithm oma            appropriate seminatural ordering mechanism order                                                     repeat steps  oma   build graph    function   step oma check cond satisﬁed                                                        cond satisﬁed procedure return ”there   compute node ∈   pivv cmaxv isn’t oblivious algorithm appropriate” ﬁnish   induce graph g¯  v¯  e¯ reducing include cond satisﬁed mechanism ap      nodes value function proach agents sequentially following order      determined                                   each phase approach simultaneously set agents                                                        described agents referred costs   ∀  ≤ ≤ −   let lk  mincmaxk jk ∈                                                          •            v¯  lk minimum cmax nodes        g−                           ¯      depth                         • cg cg     cgg−     let                                          • cgg cgg     cggg−       minji  ≤ −  lj  li               • · · ·       minji    ≤ −                                                      •                                                                                    g···gk− g···gk−                                                            cg···gk−gk−−      ir  minjir−  ≤ −  lj  lir−                                                        • cg···gk− cg···gk−                                                                cg···gk−  cn−      ik  minjik−  ≤ −  lj  lik−  ik        satisﬁes ∀j  ik  ≤ −   lj ≤ lik             sum given function agents’ costs ≤ ≤                                                           ≤    oma algorithm veriﬁes exis   let   −     −      gr  ir −        n−                                    −            tence appropriate oblivious mechanism mecha      ir       gk  ik − ik  gk  − ik       −       −         −                           nism exists induced procedure   sort agents according costs getting oblivious mechanisms natural easily imple      secrets ≤ ≤  ≤ cn−       mented shown means example details   check following set conditions marked omitted lack space existence appro        cond satisﬁed  cg− ≤ li priate mechanism does necessary imply existence        cg cg  cgg− ≤ li             oblivious mechanism appropriate sur        cgg cgg  cggg− ≤ li    prisingly sections show      · · ·                                             important central setups oblivious mechanisms        cgggk−     cgg···gk−− ≤ lik− sufﬁcient efﬁcient effective information elicitation        cgg···gk−gk−     cgg···gk−gk − ≤ given convenient tractable structure mech        lik                                               anisms provides powerful tools information elicita    consider set conditions cond step tion turned case classical  oma  prove following general results uniform model discussed section  majority    theorem  consider anonymous function agents’ function context threshold functions                                                        discussed section   costs ≤ ≤    ≤ cn− exists  oblivious mechanism appropriate cond  satisﬁed                                                 uniform  model    theorem  consider anonymous function agents’ consider case   anonymous  costs ≤ ≤    ≤ cn− cond satisﬁed function assumption distribution uniform ismost standard basic studies context consider efﬁciently compute exists appropriate  following algorithm                              mechanism mechanism exists usno     uniform   seminatural  ordering  algorithm    appropriate seminatural ordering mechanism  usno   build graph   function   computing    majority function   compute ∀ ∈   pivv cmaxv          majority function central voting theory                                                        sult related multiagent systems distributed com                     ¯    ¯  ¯                induce graph   reducing include puting literature consider case odd      nodes value function   function like compute      determined                                                              n−                                                        majority function    agents’                                     ¯              denote Υ following path    → secrets ’s value function                                            →  →     → vj  → vj →    →  value                                                      present efﬁcient algorithm induces      vn−    → → →     → vj       satisﬁes  son g¯ appropriate mechanism mechanism exists                                                      mechanism oblivious seminatural ordering      ∀   ≤ ≤  −   pivv ≥ pivv  let                                                  mechanism denote Γ following path graph                                sufﬁx       vj  → vj →    → vn−           vj    sociated majority function                     ¯                     leaf reachable vj  existence ∗                             n−  n−                                                            →   →   →    →      →      path induced series propositions omitted n− n− n−     n−                n−                                                               →        →    → n−         paper lack space               ∗                                                        vn−   Υ  ∀  ≤ ≤ −    mark Ψi ≡     seminatural ordering algorithm sno                   cmaxvi                                                                             ∗            ∗                                                         compute ∀  ≤ ≤ −  pivvi  cmaxvi    check ﬁrst node Υ satisﬁes Ψt  Ψ Γ ∀  ≤ ≤ −   mark Ψi ≡                                                                   ∗         mink  ≤ ≤ −  Ψk  Ψ       cmaxvi        fact  implied mentioned                                                         check ﬁrst node Γ satisﬁes Ψj       propositions                                                                                                                                                 Ψ  mink  ≤ ≤ −  Ψk  Ψ    sort agents according costs getting sort agents according costs getting      secrets ≤ ≤  ≤ cn−                                                            secrets ≤ ≤  ≤ cn−   check following satisﬁed ≤ Ψ ≤                                                         check following satisﬁed ≤ Ψ ≤      Ψ    ct− ≤ Ψ ct ≤ Ψt ct ≤ Ψt                                                               Ψ    cj− ≤ Ψ cj ≤ Ψj  cj ≤ Ψj          cn− ≤ Ψn− satisﬁed ﬁnish                                                            cn− ≤ Ψn− satisﬁed ﬁnish      return ”there appropriate mechanism output ”there appropriate mechanism      problem” continue phase                 problem” continue phase   approach simultaneously agents low approach simultaneously agents low      est costs     ct− approach                                                            est costs     cj− approach      each time agent lowest cost  each time agent lowest cost      left ﬁrst approach ctthen approach ct                                                            left ﬁrst approach cjthen approach cj      cn− approached                                                            cn− approached    prove                                     show    theorem  consider anonymous function agents’ theorem  consider majority function agents’  costs  ≤    ≤     ≤     let                      n−                       costs  ≤     ≤    ≤  let Ψi ≡                                                                             −  Ψi ≡ cmaxv    ≤ ≤ −  path Υ      ∗                                                      cmaxvi    ≤ ≤ −  path Γ let  let  mink  ≤ ≤ −  Ψk   Ψ                                                           mink   ≤  ≤ −   Ψk   Ψ   exists appropriate algorithm ≤ Ψ                                                     exists appropriate algorithm ≤ Ψ   ≤  Ψ    ≤ Ψ ≤ Ψt             −                                  ≤ Ψ     cj− ≤ Ψ cj ≤ Ψj  cj ≤ Ψj      ≤  Ψt   ≤ Ψn−               −                                 cn− ≤ Ψn−    theorem  consider anonymous function agents’ theorem  consider majority function agents’  costs ≤   ≤    ≤    exists                    −                          costs ≤ ≤    ≤ cn− exists  appropriate mechanism usno algorithm induces appropriate mechanism sno algorithm induces  appropriate oblivious mechanism                   appropriate oblivious mechanism    corollary  consider anonymous  function                                                             agents’ costs ≤ ≤    ≤ cn−   results section extended straightforward  usno  handles problem existence usno manner case ≤  hold case                                                        case discussed later    guaranteed exists node par extend discussion general threshold functions  ity ¬ parity function functions treated separately fact exists implied series  leading similar results                           propositions characterizing properties Γ
