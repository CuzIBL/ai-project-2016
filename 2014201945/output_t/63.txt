               effect restarts efﬁciency clause learning                                                 jinbo huang                                      logic computation program                                           national ict australia                                       canberra act  australia                                         jinbohuangnictacomau                        abstract                          rithm known dpll davis et al  solves sat                                                        selecting variable determining recursively      given common use restarts today’s clause formula satisﬁed setting variable      learning sat solvers task choosing good value fact initial intuition learning clauses      restart policy appears attracted remarkably appending cnf formula help prune      little hand results  dpll search discussed earlier work marquessilva      reported use different restart poli sakallah       cies combinatorial search algorithms      sults directly applicable clause learn  shown clause learning prac      ing sat solvers     ticed today’s sat solvers assuming unlimited restarts cor      stood performing form resolution   responds proof exponentially powerful                                                                                          thing fundamentally different search dpll beame et al   speciﬁcally each learn      sense backtracking search satisfying assign ing step fact sequence resolution steps      ments paper provide strong evidence  learned clause ﬁnal resolvent conversely reso      clause learning sat solver beneﬁt sub lution proof simulated polynomial time repeat      stantially carefully designed restart policy edly learning each resolvents proof ii      available begin     restarting assumes deviation standard practice      pointing restart policy works freedom ignore assignments unit propagation      aspects sat solver determining clause learning powerful general resolu      sequence resolution steps performed tion dpll known correspond expo                                                                                                            solver efﬁciency spirit nentially weaker treelike resolution beame et al        implement prototype clause learning sat solver    despite dependence theoretical result      facilitates restarts arbitrary points sumption unlimited restarts remarkably little said      duct experiments extensive set industrial literature importance choosing good restart      benchmarks using various restart policies includ policy practice stark contrast example      ing used wellknown sat solvers  sustained quest researchers better decision heuristics      universal policy proposed  luby    argue imbalance attention doing disservice      et al results indicate substantial impact sat community modern understand      restart policy efﬁciency solver ing clause learning seen decision heuris      provide motivation design better restart tic restart policy components      policies particularly dynamic ones              solver determines sequence resolution steps                                                        formed solver efﬁciency                                                          paper like step study    introduction                                       ing importance restart policies clause learning sat  propositional satisﬁability sat problem determin solvers view motivating work designing  ing propositional formula traditionally conjunc effective policies end created small  tive normal form cnf satisfying assignment—an prototype sat solver called tinisat implements  signment truth values variables making evaluate essentials modern clause learning solver designed  true paper focus class algorithms sat facilitate adoption arbitrary restart policies choos  known conﬂictdriven clause learningor ing ﬁxing reasonably effective decision heuristic  clause learning short algorithms currently conducted experiments using extensive set large indus  best large sat instances arise industrial appli trial benchmarks ran versions tinisat using  cations formal veriﬁcation berre simon  different restart policies including used wellknown    clause learning sat solvers grown prede sat solvers particularly proposed luby et al  cessors implemented variants systematic search algo  based sequence run lengths following                                                    ijcai                                                    form               results tions deterministic behavior iv ﬁrst decision  obtained indicate substantial impact restart pol decision level level reserved literals  icy efﬁciency solver speciﬁcally nontrivial implied cnf formula level  signal  restart policies experimented did signiﬁcantly better derivation clause functions involved  restarts disabled exhibited considerably dif following semantics  ferent performance interestingly • selectliteral uses decision heuristic select  difference performance appears marked   free variable select literals  looks individual benchmarks benchmark families returns returns nil free variables exist  opposed set aggregate suggests                                                          • decide  substantial performance gains possible using ap       increments decision level sets given lit  propriate dynamic restart policies policies compared eral true performs unit propagation returns true  paper static ones                              iff clause derived    rest paper organized follows present • learnclause performs uip learning derive im  simple design tinisat use basis dis plicate cnf formula sets assertion level  cussing semantics modern clause learning leading  clause derived ii  unit  analytical explanation restart policies important clause derived iii second high  experimental setup including vari est decision level literals derived clause  ous restart policies shall use attempts identify                                                          • assertionlevel returns assertion level  reasonable decision heuristic policies tested                                                            set learnclause  competitive ground report results obtained  make number important observations finally • restartpoint returns true iff solver restart  discuss related work present conclusions         according restart policy                                                          • backtrackk undoes variable assignments deci    essentials clause learning                          sion levels sets decision level  start presenting design simple sat solver • assertlearnedclause adds learned clause  tinisat boasts essentials modern clause learn clause pool performs unit propagation current  ing technology ii provides basis discussion cision level equals assertion level condi  importance restart policies later section tion learned clause unit  toplevel procedure tinisat implemented   returns true iff clause derived  lines given algorithm  operates  implicit cnf formula satisﬁability question  restarts backtracks uniﬁed                                                        note design needed adopt given  algorithm  tinisat                                   restart policy implement restartpoint accordingly    loop                                              interesting note normal backtrack learn     literal  selectliteral  nil       ing line  complete restart line        return satisfiable                             regarded special cases general scheme lynce     decideliteral                         silva  solver backtrack level       repeat                                          current decision level exclusive         learnclause         assertionlevel                  like stress partic          return unsatisfiable                        ular scheme used clause learning sat solvers         restartpoint                       day backtracking assertion level          backtrack                               restarting obscured original characteristics inher                                                ited dpll systematic search algorithms particu          backtrackassertionlevel                lar solvers perform branching anymore set      assertlearnedclause                    ting literal occurs line  setting negation                                                        explicitly tried possibly tried    following components modern clause learn  implicitly  ing sat solver identiﬁed algorithm  deci   example suppose assignments cd  sion heuristic selectliteral unit propagation decide decision levels     respectively  sertlearnedclause clause learning learnclause clause derived level  suppose following  track restarts restartpoint backtrack assume famil clause learned ∨ clause says deci  iarity common terminology dpll clause sions levels   responsible  learning algorithms assume uip zhang et ﬂict despite fact simply ﬂipping value  al  used learning scheme ii clauses variable level  result satisﬁable subprob  deleted algorithm complete iii func lem line  insists taking solver assertion    shown each learned clause subsumed learning scheme clause deletion policy use ran  existing clause zhang  algorithm keeps learning domness important factors affect efﬁciency clause  distinct clauses terminate            learning sat solvers scope paper                                                    ijcai                                                    level  erasing assignments way efﬁciency clause learning sat solvers ran  learned clause gets asserted level  line  domness present case experiments  implies assignment present making tinisat section   clause unit triggering round unit propagation section provided new understanding  tice branches modern clause learning through design tinisat  contain solutions skipped crete simple clause learning sat solver leading  explored                                             alytical argument restart policy matters pro    emphasized alluded ceed support argument empirical study  behavior peculiarity tinisat crete restart policies using realworld sat benchmarks  common practice current clause learning sat solvers tinisat solver  seen including chaff berkmin minisat siege  earlier solver grasp used different  experimental setup  tracking scheme branch skipped unless  proven contain solutions                      section restart policies shall ex                                                        periment decision heuristic used    importance restarts                           policies experiments choice benchmarks  shift paradigm backtracking discussed ob  restart policies  scures characteristics clause learning sat solvers choosing set restart policies empirical study  systematic search algorithms reason propose aimed include currently used  view modern practice clause learning version wellknown sat solvers conventional                                       dpll search enhanced resolution pure res ones escaped attention clause learn  olution algorithm right fact algorithm  ing community speciﬁcally shall experiment  does following step cycle following seven restart policies       set variables till hitting conﬂict           • policy calling restarts       derive clause resolution                  • geometric policy used minisat e´en                                                            s¨orensson  initial restart interval        unset variables                                                             conﬂicts increases factor  each  unsatisﬁable formulas loop terminates deriving restart denote    clause  satisﬁable formulas terminates • ﬁxedinterval policy used chaff ii known   “happens” exhaust variables conﬂict  version zchaff moskewicz et al     context importance restart policy restart interval  conﬂicts denoted    comes prominent existing backtracking                                                          • ﬁxedinterval policy used berkmin goldberg  scheme dictates set assignments undo                                                             novikov  restart interval   decision heuristic ultimately                                                            ﬂicts denoted    termines entire sequence resolution steps performed   words decision heuristic backtracking • geometric policy   added  scheme restart policy understood serving improve balance ﬁxedinterval geomet  single purpose guiding resolution process   ric policies consider    consider example clause learning sat solver • ﬁxedinterval policy used siege ryan   run hard instance period time restarts restart interval  conﬂicts denoted  solver accumulated considerable number      learned clauses helped update variable                                                          •  literal scores maintained decision heuristics typical class policies proposed luby et al   clause learning sat solvers new scores represent randomized algorithms based following sequence                                                                                           way solver’s current state belief order run lengths  future decisions having taken ac deﬁned experiments  count conﬂicts discovered far freedom “unit run” sequence  conﬂicts  restarts solver able fully ex experimented units  ecute belief bound decisions httprsiseanueduau˜jinbotinisat actual                                                                                       earlier particular note early deci restart intervals                   sions beneﬁt new knowledge denote policy luby’s unit  form conﬂicts discovered ﬁrst policies straightforward  lieve main reason restarts help improve luby’s policy formally deﬁned sequence                                                        tttsuch    recall each learning step sequence resolution steps                                                                       k−               ﬁnal resolvent recorded “learned clause”       ifi          −                                                               ti                   k−        beame et al                                               ti−k−if     ≤   −                                                      ijcai                                                      chosen luby’s policy interesting solvers allowing complete experiments  property context particular class ran  cpu days  domized algorithms known las vegas algorithms luby overall results shown table  second  et al  proved policy universally optimal columns report each benchmark family  sense achieves expected running time number instances total size megabytes  logarithmic factor slower true optimal policy remaining columns report number instances solved  determined speciﬁc running time distribution each solver each benchmark family total number  algorithm speciﬁc problem instance ii instances solved each solver total time spent  universal policy better constant instances including  hours case did solve  factor theoretical relevance property clause instance reported rows  learning remains interesting question       ﬁrst observation make results                                                        restarts deﬁnitely helped nontrivial policies did    decision heuristic                               signiﬁcantly better norestarts policy  make comparison restart policies meaning effective allowed tinisat ﬁnish  days sooner  ful taken steps ensure components solve  instances norestarts policy  sat solver tuned best performance second observation luby’s universal policy ap  lowlevel optimizations focused pears outperform rest particular set bench  choosing reasonably effective decision heuristic based marks albeit small margin cases given  experiments using subset benchmark suite optimality luby’s policy originally proved  described version vsids las vegas algorithms empirical result provides motiva  heuristic moskewicz et al  combined berkmin’s tion extending theoretical study luby’s policy  practice choosing literals recent unsatisﬁed conﬂict clause learning algorithms  clauses goldberg novikov  tended work concrete picture impact restart    speciﬁcally each literal score ini policy efﬁciency solver present detailed  tially number occurrences original clauses sults tables   benchmark families  learning clause increment score literal  tinisat solved instances using policy  each occurrences clauses involved space constraints include three policies each ta  resolution process scores literals halved ble norestarts policy worst best rest   conﬂicts decision called line  results siege included reference point  algorithm  pick free literal highest score interesting observation make tables    recently learned clause sat difference performance restart poli  isﬁed set true clause exists pick cies substantial look individual  free literal highest score                benchmark families opposed set aggregate                                                        rows table  example policy    benchmarks                                       performs policy running time factor   use entire set industrial benchmarks distributed table  factor  table  fact  miroslav velev  carnegie mellon  university  table  policies consistently  httpwwwececmuedu˜mvelev sss sssa best benchmark families terms number  ssssat vliwsat vliwsat solved instances explains decreased dif  easy dlxiqunsat download appeared ference policies results aggregated  incomplete gives  benchmark families  suggests substantial performance gains possible  instances totaling gb size—hence cnf use appropriate dynamic policy  mulas average size mb            adapt given benchmark benchmark family                                                          like remind reader ex                                                        periments tinisat conducted ﬁxed deci    results                                            sion heuristic learning method backtracking scheme  experiments consist running tinisat each discussed components work combina  seven restart policies entire set benchmarks tion restart policy determine efﬁciency  additional reference points run minisat solver view design better restart policies  e´en s¨orensson  siege ryan  opportunity possibly bringing  given seed  random number generator new generation clause learning sat solvers finally  set benchmarks experiments note detailed results experiments described  ducted cluster  amd athlon  processors running section tinisat downloaded  ghz gb ram  suse linux  profes httprsiseanueduau˜jinbotinisat  sional time limit  hours imposed runs                                                           related work    ﬁve families contain total  instances  solved siege  seconds tinisatl  seconds min work focused restart policies  isat  seconds chaff ii  seconds clause learning previous work researchers studied                                                    ijcai                                                     table  overall results running tinisat                  seven restart policies  restarts                  luby’s unit cutoff  hours                          benchmark             number      size                             number instances solved                          family                 instances    mb                                                  minisat     siege                          dlxiqunsat                                                                                                         engineunsat                                                                                                                    fvpsat                                                                                                                  fvpunsat                                                                                                                         fvpunsat                                                                                                              fvpunsat                                                                                                                       livenesssat                                                                                                                  livenessunsat                                                                                                                livenessunsat                                                                                                                  npe                                                                                                                             pipeooounsat                                                                                                                pipeooounsat                                                                                                                 pipesat                                                                                                                   pipesat                                                                                                                 pipeunsat                                                                                                                    pipeunsat                                                                                                               vliwsat                                                                                                                       vliwsat                                                                                                                      vliwsat                                                                                                              vliwunsat                                                                                                                      vliwunsat                                                                                                                      vliwunsat                                                                                                                      total                                                                                                         total time instances days                                                     table  detailed results fvpunsat unsatisﬁable pipe                     bug abbreviations dec decisions conﬂicts  res restarts times seconds three policies included policy restarts worst best rest      benchmark      number                  tinisatn                           tinisatm                           tinisatl                          siege                  vars   clauses    dec         res  time    dec         res  time    dec        res   time    dec        time    pipe                                                                                                        pipe  ooo                                                                                                  pipe  ooo                                                                                                  pipe                                                                                                  pipe  ooo                                                                                            pipe  ooo                                                                                          pipe  ooo                                                                                       pipe                                                                                            pipe  ooo                                                                                      pipe  ooo                                                                                      pipe  ooo                                                                                      pipe  ooo                                                                                    pipe                                                                                       pipe  ooo                                                                              pipe  ooo                                                                              pipe  ooo                                                                             pipe  ooo                                                                             pipe  ooo                                                                            pipe                                                                              pipe  ooo                                                                       pipe                                                                         pipe bug                                                                             total                                                                             table  detailed results vliwsat satisﬁable abbreviations dec decisions conﬂicts res restarts   times seconds three policies included policy restarts worst best rest cutoff  hours     benchmark        number                   tinisatn                           tinisats                          tinisatl                          siege                 vars    clauses      dec         res  time     dec        res  time    dec        res  time    dec       time   bug                                                                        bug                                                                         bug                                                                                 bug                                                                        bug                                                                     –       –        –   bug                                                                        bug                                                                          bug                                                                 –       –        –   bug                                                                             bug                                                                  –       –        –   total                                                                                                                                                                    ijcai                                                                                   
