       eqllite effective firstorder query processing description logics∗    diego calvanese giuseppe giacomo domenico lembo maurizio lenzerini riccardo rosati                faculty science                 dipartimento di informatica sistemistica             free university bolzanobozen                    universita di roma “la sapienza”                   piazza domenicani                                    salaria                   bolzano italy                              roma italy              calvaneseinfunibzit                            lastnamedisuniromait                          abstract                          difﬁcult databases example ﬁrstorder                                                          logic fol basis query language rela        querying description logic knowledge bases    tional algebra sql relational databases         received great attention years known answering fol queries posed dl knowledge        problem need coping incomplete bases undecidable precisely best        formation distinguishing feature respect knowledge expressive class queries        querying databases feature    yond instance checking decidability query        deal conﬂicting needs    answering proved dls class union        hand like query knowledge    conjunctive queries ucq   restriction        base sophisticated mechanisms provided    query language constitute limitation        ﬁrstorder logic fol hand adoption dls technology information management        presence incomplete information makes query    tasks required semantic web applications        answering difﬁcult task data   openworld semantics dls essential        bases paper advocate use     representing incomplete information complicate        nonmonotonic epistemic fol query language      task interpreting answers users        means expressing sophisticated queries need reasoning incompleteness knowl        description logic knowledge bases show   edge base example knowing parents        through controlled use epistemic operator female children interested        resulting language called eqlliteweare   asking parents known children female        able formulate fol queries descrip  note querying mechanisms mentioned        tion logic knowledge bases keeping compu  example fol        tational complexity query answering   summarize need coping incomplete        trol particular show eqllite queries information dl knowledge bases conﬂicting require        dllite knowledge bases fol reducible    ments arise querying hand like        compilable sql  query knowledge base powerful mechanisms        swered logspace  through standard database     able reason incompleteness hand        technologies                                     aim query languages close expressive                                                          power fol decidable possibly tractable      introduction                                         paper presents following contributions deﬁne                                                          query language dl knowledge bases called eql    querying description logic dl knowledge bases section  based variant wellknown ﬁrstorder    ceived great attention years deﬁni modal logic knowledgebelief    language    tion suitable query languages design query incorporates minimal knowledge operator used    swering algorithms arguably crucial issues formalize epistemic state knowledge base infor    applying dls ontology management semantic mally formula kφ read “φ known hold    web                                               knowledge base” using operator able pose      answering queries dls account open queries reason incompleteness information    world semantics logics represented knowledge base instance user      ∗                                                   express queries able incorporate closedworld rea       research partially supported fet project soning demand    tones thinking ontologies funded eu contract                                                            show section  through controlled use    number fp project hyper funded ibm through               shared university research sur award grant miur operator  resulting language called eql    firb  project “tecnologie orientate alla conoscenza ag    gregazioni di imprese internet” tocaiit           query answering reduced validity fol                                                      ijcai                                                       liteq able formulate queries rolesrelations binarynary predicates  ing expressive power point view stants introduced standard names correspond  computational complexity perspective queries eql ing Δ eql modal operator used formalize  liteq atoms expressed using speciﬁc query epistemic state dl kb according minimal  language called embedded query language enjoy knowledge semantics later informally formula kφ  property evaluated essentially read “φ known hold kb”  data complexity measured wrt size abox following use denote constant c denote  queries expressed                            tuple constants denote variable x denote tuple                                                                                                         investigate properties eqllite forseveral variables φ ψ denote arbitrary formulas ψc  interesting cases characterizing data complexity query denote formula each replaced  answering section  particular consider world fol interpretation Δanepistemic  following cases shiq simple concept role ex                  ew                                    dlr                         terpretation pair   possibly inﬁnite  pressions embedded queries  embedded unions  set worlds world inductively deﬁne  conjunctive queries ptimecomplete dls horn sentence closed formula φ true inter  shiq   el simple concept role expressions     ew                         ew  φ                                   alc                  pretation    true  written      embedded queries basic dls   epistemic  follows  concepts embedded queries highly tractable dls  dllite family embedded unions ew   iff   junctive queries case show answering ew  c iff  c  eqlliteucq logspace notably  ew   φ ∧ φ iff ew   φ ew  φ  duced evaluating fol queries abox ew  ¬φ      iff ew   φ                                                                                        sidered database follows query processing ew  ∃xψ iff ew  ψc constant  setting through standard database technologies ew  kψ   iff ew  ψ w ∈    finally brieﬂy discuss section  use eql  liteq introducing notion integrity constraints                                                          formulas occurrences said objec  dl kbs                                                        tive talk true observe check                                                        ew  φwhereφ objective formula    epistemic query language                           look need fol interpre                                                        tation assertions dl kb objective  paper consider queries description logic                                                        sentences instead formulas each occurrence pred  dl knowledge base  don’t focus particu                                                        icates equality scope operator  lar dl simply assume through dl able                                                        said subjective talk known  express knowledge terms atomic concepts                                                        true observe subjective sentence φinor  unary predicates atomic rolesrelations binaryn                                                        der establish ew  φ look  ary predicates general concepts rolesrelations built                                                        use formulas query  through constructs allowed dl assume                                                        kb knows words through subjective sentences  constructs expressible fol usual dl                                                        query information world represented  knowledge base kb formed set assertions typi                                                        kb instead query epistemic state kb  cally divided tbox expressing intensional knowledge                                                        self obviously formulas objective  abox expressing extensional knowledge assume                                                        subjective example ∃xp objective sen  assertions expressed fol sentences                                                        tence k∃xp x∧¬kp subjective sentence  closed fol formulas words dl kbs                                                        ∃xp ∧¬kp  objective subjective  seen fol theories speciﬁc forms observe  dls fulﬁll assumptions notable exceptions setting various epistemic interpretations  include form secondorder constructs interested speciﬁc ones represent mini  transitive closure ﬁxpoints                 mal epistemic state dl kb state                                                        kb minimal knowledge let Σ beadl    usual talking query answering wlog                         modΣ  interpret dl kbs interpretations sharing kb tbox abox let       set                        Δ                               folinterpretations models ΣthenaΣeql  inﬁnite countable domain  assume lan                                      ew  guage includes inﬁnitely countable set disjoint interpretation epistemic interpretation                                Δ                         modΣ sentence φ eqllogically implied Σ  stants corresponding elements  known stan   Σ    φ           Σ                  ew                                                      written   eql  ifforevery eqlinterpretation   dard names   allows blur distinction ew   φ  tween constants syntactic objects el  observe objective formulas          Δ                                             deﬁnition standard  φ  ements  denote semantical objects ∈ modΣ      Σ  φ    query language make use variant      denoted       known ﬁrstorder modal logic knowledgebelief   worth mentioning characterizing    called eql language eql ﬁrstorder properties eql  modal language equality single modal op  erator constructed concepts unary predicates proposition  dl kb Σ eqlsentence                                                    ijcai                                                     φ                                            parent  contains pairs elements form johnx                 Σ eql kφ ⊃ φ                         paulx interpretation female contains ele                 Σ eql kφ ⊃ kkφ                       ment                 Σ eql ¬kφ ⊃ k¬kφ                       suppose want know known  standard axioms modal logic ﬁrst males known parents female                                                                                             expresses “what known true” knowledge ac expressed following eqlquery   curate express kb “complete qxkmalex ∧¬k∃yparentx ∧ femaley  knowledge known known”                                                        immediate verify certain answers  proposition  dl kb Σ eqlsentence Σ    john    paul  φ                                                                known males                                          answer query ∃yparentx ∧                                                        femaley             Σ eql kφ   Σ eql ¬kφ                                                                                   suppose want know single chil  proposition tells sentence φ kb                                                        dren according known known children  logically implies sentence known                                                        known sibling expressed follow  sentence known complete information                                                        ing eqlquery  kb knows notably consequence  minimal knowledge semantics adopting           qx∃ykparentyx    ∧                                                                         ∀z kparentyz  →    proposition  dl kb Σ objective eql                          φ  sentence                                     immediate verify certain answers Σ                                                           paul    jane                Σ  φ iff Σ eql kφ                                         Σ  φ iff Σ eql ¬kφ                                                          notice eqlquery apply form    proposition relates knowledge fol logi closed world reasoning example query  cal implication consequence minimal evaluation ¬k∃yparentx y∧femaley corre  knowledge semantics allows concrete sponds evaluation ¬∃yparentx ∧ femaley                                           φ  terpretation knowledge objective sentences known closed world assumption  iff logically implied known    ready deﬁne eqlqueries eqlquery    eqlliteq  simply eqlformula possibly open    let eqlquery free variables xwherethe introduce query language eqlliteq  arity x ≥  called arity language particularly wellbehaved fragment eql  use notation qx make free variables x explicit parameterized respect embedded query                                    x                            use notation qc denote formula language  subset eql informally                                    c                            obtained substituting each free occurrence eqllite  fol query language equality                                                                                            k          variable xi x constant ci c obviously x atoms epistemic formulas form                                                                                      c arity dealing query  formally eqllite  query possibly  models kb usual query answering return open eqlformula built according following syntax  tuples constants make query true  ψ  k    ψ ∧ ψ ¬ψ ∃xψ  model kb socalled certain answers formally                                                                                                     certain answers query qx kb Σ set query embedded query language                                                        epistemic atoms formulas k occurring eql       ansq Σ  c ∈ Δ ×···×Δ  Σ    qc                                        eql             liteq query  example  consider dl kb Σ constituted fol  observe eqlliteq allow op  lowing tbox abox                             erator occur outside epistemic atoms k                                                                                          male  ¬female                              allowing occurrences outside atoms does                                                                                                               femalemary femaleann femalejane    actually increase expressive power eqllite             malebob malejohn malepaul          following proposition shows            parentbob  mary parentbob ann       proposition  let eqlliteq extension eql            parentjohn paul parentmary jane     liteq obtained adding abstract syntax eql                                                        liteq formulas rule ψ  kψ each query  suppose want know set males fe ∈ eqlliteq exists query q ∈ eqlliteq  male children corresponds following fol query    ew   ∀x qx ≡ qx                                                                         epistemic inter                                                      pretation ew    xmalex   ∧¬∃y  parentx ∧ femaley                                                      fact eqlliteq query reduced equiv                                                                                 easy verify set certain answers Σ alent eqlliteq query linear time simply push  particular john paul certain ing inward operator stopping epistemic  swers query openworld seman atoms simplifying kkψ kψ k¬kψ ¬kψ  tics dls models Σ interpretation possible                                                    ijcai                                                       eqlliteq queries enjoy interesting computa stant appearing Σ getting tuple ans Σ  tional property decouple reasoning needed ans Σ inﬁnite  answering epistemic atoms reasoning needed obviously ﬁnding simple syntactic condi  answering query formally let Σ dl kb tions guarantee rangerestrictedness just  qx eqlliteq query Σ epistemic trivial quite practical cases    atoms kkm denote qfol x fol assume introduce new concept adom  query obtained replacing each epistemic atom ki dl kb Σ assert each constant occurring Σ    new predicate rki arity number free abox assertion adomc let’s require  variables i denote iqΣ fol interpre queries form adomx ∧ xwherex     tation predicates rki deﬁned follows ithein xxn adomxadomx ∧···∧adomxn  terpretation domain ΔiqΣ Δii extension trivially queries Σrangerestricted                riqΣ  ans  Σ                      consider eqlliteq queries  predicates ki k            finally denote                                                      main independent Σrangerestricted effec  evalq x iqΣc ∈ Δ×···×Δ iqΣ  c          fol                                  fol      tively use theorem compute certain answers  result evaluating iqΣ                      fol                               computational complexity character  theorem  let Σ dl kb eqlliteq query ization query answering eqlliteq queries  Σ              fol qΣ fol query fol interpreta let embedded query language dl adland                       ansq Σ  evalq     tion deﬁned              fol  qΣ        cqdl  data complexity complexity measured  theorem tells order compute cer size abox query answering Σrange                                                                                                        tain answers eqlliteq query compute restricted queries kbs Σ expressed dl  certain answers queries i embedded query language know evaluating domain independent fol query  occurring epistemic atoms evaluate given fol interpretation logspace data complex  query fol query consider certain ity  assumptions computing tuple  swers extensions epistemic atoms       constants relation corresponding extension    theorem suggests procedure compute cer epistemic atom cqdl data com  tain answers eqlliteq procedure plexity immediately derive following result  effective need address issues exten data complexity answering domain independent Σ                                                                                sion predicates rki fol interpretation iqΣ rangerestricted eqllite  queries denote                                                           needs ﬁnite iqΣ inﬁnite class languages recognized cturing ma                                          Δ                                   evaluation fol impossible practice iisince chine uses oracle   inﬁnite evaluation directly deal Δ                        fol                             theorem   let Σ beakbexpressedinthedldl    start looking second issue ﬁrst domain independent Σrangerestricted eql  sue long tradition relational databases liteq query Σ answering Σ  allows fol queries “domain indepen       cqdl  dent”  context fol query domain inde logspace     respect data complexity                                                    cqdl  data complexity answering Σrange  pendent each pair fol interpretations                          Σ           dl  respectively domains Δi ⊆ Δ Δi ⊆  Δfor    restricted queries kbs expressed        ri    ri                                                                k      k atomic relations ki wehave example  queries         example                                                                               evalq ievalq say eqlliteq eqllite  queries  language                                                    junctive queries fact language atomic  query domain independent corresponding query fol  domain independent fol queries correspond rela queries easy verify queries  tional algebra queries sql queries syntactic domain independent Σrangerestricted  sufﬁcient conditions devised order guarantee kb Σ given example  fact  domain independence  syntactic conditions Σrangerestricted kbs Σ expressed practice  directly translated syntactic conditions eql standard dl set ansparentx Σ  liteq queries                                      inﬁnite    issue let Σ dl kb  query  embedded query language say  Σ  rangerestricted ans Σ ﬁnite set tuples ex  case studies  tension eqlliteq query Σrangerestricted each discuss notable applications  epistemic atoms involves Σrangerestricted query sults eqlliteq speciﬁc combinations dl  fact following proposition holds                used express kb embedded query language  proposition  let Σ dl kb  Σrangerestricted implicitly refer domain independent eql  query embedded query language qthenans Σ ⊆ liteq queries  adomΣ ×···×adomΣ          adomΣ                                 set    constants explicitly appearing Σ                     usual speak complexity query answering                                                        actually mean complexity associated recognition prob  constant appearing Σ occurs ans Σ lem checking tuple constants answer  substitute constant query                                                     ijcai                                                     shiq   kbs queries embedded concept      dllite kbs queries embedded unions  role expressions consider case kbs junctive queries finally study case kbs  speciﬁed expressive dl shiq  equivalently speciﬁed using dls dllite family    dlr   embedded query language Σ embedded query language eqlliteq queries  range restricted shiq concept role expressions note ucqs  case signiﬁcant practice captures dllite family   family dls speciﬁcally  particular form queries supported racer tailored deal large amounts data aboxes  pellet systems   queries conjunc expressive power dls dllite fam  tive queries shiq concept role expressions ily carefully controlled admit tractable query answering  existential quantiﬁcation ranges dls expressive capture main notions  named individuals abox turns obviously ontologies  queries correspond conjunctions Σrangerestricted ceptual modeling formalisms used databases software  shiq  concept role expressions preﬁxed oper engineering er uml class diagrams  ator instance checking shiq conpcomplete simplicity denote dllite dl member  respect data complexity  theorem  dllite family  case answering queries answering ucqs dllite logspace respect                                 np                                       eqlliteq query logspace respect data data complexity  result tightly  complexity                                           trolled expressive capabilities following                                                        proposition  let Σ dllite kb let  ucq                                                            Σ          Σ  dlr  kbs queries embedded unions conjunc   rangerestricted  tive queries consider case kbs consequence theorem  membership  speciﬁed expressive dl like dlr alcqiandthe logspace   problem answering ucqs dl  embedded query language Σrangerestricted unions lite kbs moving ucqs eqlliteucq  conjunctive queries ucqs consider queries does change data complexity query answering  expressed eqlliteucq notice language problem  ucqs currently expressive subset fol                                                        theorem   answering   domain   independent  eql  query answering kbs expressive dl  dlr known decidable  fact conp liteucq queries dllite logspace   complete respect data complexity fromthis respect data complexity  characterization applying theorem  fact reﬁne result resorting  answering Σrangerestricted eqlliteucq queries tion folreducibility  intuitively folreducibility                                    np  dlr  kbs logspace    respect means query answering reduced evaluating  data complexity                                      fol queries ﬁnite fol interpretation corresponding                                                        abox assume contains assertions involv                                                        ing atomic concepts rolesrelations dl kb  ptimecomplete dls kbs queries       members dllite family enjoy folreducibility  consider case kbs speciﬁed ptime ucqs  show folreducibility holds  complete dl hornshiq  el andthe  domain independent eqlliteucq queries given  embedded query language Σrangerestricted abox involving membership assertions atomic       shiq         el  horn       resp  concepts role expressions cepts roles deﬁne interpretation ia fol  case theorem  answering Σrange lows  restricted eqlliteq queries ptime fact                                                            –  each constant  ptimecomplete respect data complexity                                                                     –    aa ∈afor each atomic concept aand                                                                                                                       –   aa  aa ∈afor each atomic role  epistemic embedded query languages  cases       embedded query language consists objective answering queries query language contained  mulas does need case general eql kb expressed dl dl folreducible  let example consider kbs consisting aboxes ex query ∈land tbox expressed  pressed basic dl alc embedded queries consist dl exists fol query rdcq                                  alck          alc  ing concepts roles expressed      abox  awehavethatansq    evalrdcq ia  extended operator instance checking observe folreducibility meaningful property  alck concept roles alc aboxes practical point view cases  pspace  theorem  case answer query answering reduced evaluation  ing eqlliteq queries pspace         main independent fol query query ex                                                        pressed relational algebra sql query    considered dlr alcqi   shiq data complexity answering ucqs containing easy results cqs   immedi  transitive roles open                       ately extended ucqs                                                    ijcai                                                     
