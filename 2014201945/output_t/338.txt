        mining complex patterns sequences gap requirements∗                                xingquan zhu     xindong wu      dept science  eng florida atlantic university boca raton fl  usa             dept science university vermont burlington vt  usa               graduate university chinese academy sciences beijing  china                                xqzhucsefauedu xwucsuvmedu                    abstract                      repetitive dna fragments examples include recurring                                                   short base pairs bp protein coding dna repetitive      recurring appearance sequential patterns                                                   dnarna motifs genomes recurring patterns      confined predefined gap requirements                                                   different lengths types commonly      implies strong temporal correlations trends                                                   genomic proteomic levels significant biologi     pattern elements paper study      problem mining set gap constrained sequen calmedical values example  bp periodicities      tial patterns multiple sequences given set complete genomes reflect protein structure dna                                                   folding herzel et al  tandem repeats      sequences sk constituting single hyper     sequence aim recurring patterns discovered influential bacterial virulence hu     say cross multiple sequences man belkum et al  studying correlations multi     matching characters bounded user ple gene sequences associations environments      specified gap constraints combina disease phenotypes provides means predicting      torial candidate explosion traditional apriori preventing fatal diseases rigoutsos  floratos        based algorithms computationally infeasible recurring patterns convey important useful      research proposes new mechanism ensure knowledge reality rarely just reproduce repeat      pattern growing pruning combining appear slight shift pat     pruning technique gap constrained   tern letters example tandem repeats dna      search gcs mapbased support prediction protein sequences involve phase shift incurred      approaches method achieves speed  insertion deletion short sequence belkum et al       times faster peers           practical solution allow mining search process                                                   bear certain degree flexibility consider sequences    introduction                                  fig pattern three sequences repeats                                                   three times each appearance slightly different   realworld applications involve data characterized allow each time pattern ap  continuous sequences streams examples include data pears successive pattern letters’ appearances   flows medical icu intensive care units network traffic range fixed value   data stock exchange rates dna protein sequences able pattern fig introduction   realworld events rarely happen independently variable period gap provides flexible way capture   associate each degree discover interesting patterns hidden sequences   ing structures multiple sequences provides mining recurring patterns sequences essentially  effective means explore patterns trivial single data lies counting mechanism check patterns’ occur  stream significant unifying observed data rences inherently complicated se  view example information multiple data quential order underlying sequences considering   streams icu oxygen saturation chest volume sequence “aaagggttttcccttttcccttttcccc”   hear rate indicate predicate state pa number complete occurrences pattern   tient’s situation intelligent agent ability pagtc ignore gap constraints stage   discover knowledge multiple sensors automati  ×  combinations “a” “g” ×××   cally acquire update environment models oats  combinations “t” “c” total ×   cohen  microbiology known occurrences agtc number does   genomes plants animals contain large quantity sound scary considering complete occurrences                                                   brings difficult challenges problem                                                   deterministic apriori theory support pattern     ∗ material based work supported na exceed support subpatterns does   tional science foundation grant  support hold considering s“agcttt” pattern pagct   nsf china grant  acknowledged                                                  ijcai                                               appears three times p’s subpattern agc appears considering complex patterns multiple se   traditional aprioribased algorithms quences work relevant problem comes    computationally infeasible handle problem  oates et al  mannila et al  efforts tried     motivated observations propose mcpas search frequent episodes sequences    complex patterns sequences gap prediction rules form indicating   quirements review related work section frequent episodes sequences example    state research problem section  section  event happens exactly time points later event   study pattern frequencies propose determinis happens exactly three time points later event   tic pruning technique pattern mining section  happens notice restrictive constraint    discuss unique gap constrained search mapbased trying episodes like event happens    support prediction processes accelerate pattern min time points event happen three    ing process based proposed pruning searching time points later event happens loose constraint    techniques elaborate section  mining algorithm leaves great flexibility explore useful patterns     details comparative studies reported section  fol problem complex pattern mining multiple    lowed concluding remarks section    sequences similar multidimensional sequential pattern                                                    mining pino et al  normal practice aggre                                                                                                             gate values sequences form single sequence                                                               shown figure traditional sequential pattern min                                                                                                                             ing methods apply                                                      domain dna protein sequences blast                                                altschul  famous algorithms given                                                                           query sequence pattern searches matching se                                        shyb                                      quence databases pursuing                                                mining patterns patterns teiresias     figure  patterns three sequences hybrid se algorithm rigoutsos  floratos  designed pattern           quence generalized sequences discovery biological sequences number                                                    wildcards present extracted patterns    related work                                  stricted fixed users similar approaches                                                    pratt jonassen  proposed restricted pat   existing research mining patterns data sequences terns terms maximum numbers characters    distinguished categories  mining pat wildcards each pattern single sequence    terns frequently appearing certain number relatively    short sequences boolean count pat  problem statement   tern occurs sequence traditional pattern min    ing market baskets srikant  agrawal  pei et al  sequences si  sk extract patterns   zaki  gene motif search murray et al  fall called hypersequence denoted each single     category  mining recurring patterns long se sequence si called element sequence use si rep  quences episode mining yang et al  méger  resent characters ith time point losing   rigotti  das et al  tandem repeats base pair generality assume element sequences share   oscillation detection dna sequences herzel et al   alphabet size denoted • • represents size     mining process rely counting • simplicity assume element sequences   mechanism check patterns’ frequency information lengths denoted  frequent patterns worth noting wildcard denoted single dot “” special   selected counting mechanism crucially impacts symbol matches character • gap se  mining approach research efforts relying boolean quence wildcards bounded maximal minimal   count pattern’s appearances counted values size gap refers number wild  wrt each sequence deterministic apriori theory cards use represent gap size   holds commonly adopted min                                                            range wmn gap   ing process hand determine                 pattern’s actual number occurrences sequences flexibility pattern ppg pg …g pl set charac  situation complicated simply mining ters different element sequences gaps begin   process won’t follow apriori theory existing efforts end characters pj element pattern                                                    consists letters element sequences ele  field proposed confined occurrence                                  counting minimal occurrences mannila et al  ment pattern consist character   oneoff occurrences chen et al  windowing occur gap requirement element patterns pj pj figure   rences mannila et al  objective confine pat  pictorially shows pattern three element patterns   terns’ occurrences apriori theory apply  number element patterns denoted                                                   ijcai                                                                                                                                 −   called length wildcard symbols   −  −    ⋅           counted pattern’s length                                          problem mining complex patterns multiple eq  holds ll ·m • maximal span    sequences patterns following form pattern length hypersequence                                                  −           deterministic pruning    means gaps successive element                                               subsection derive theorem lemmas    patterns …g   occur deterministic pruning mining process    rence pattern defined match theorem  gien lengthl pattern length    characters element patterns element se subpatterns supports satisfy    quences gap constraints occurrences                                                                    inequality supp ≤ supq ⋅w     considered different long locations pair    matched characters different example proof length subpattern denoting                                                    qq…ql possible relationships    sider patg appears  times s”attg” wrt                                                    ppqplpl  pppqpl  pqplplpl       sss sss support ppppq let’s prove theorem  true     noted supp number times occurring proof applies possibilities      given lengthl pattern lengthl hybridsequence assuming gap flexibility ele  calculate total number possible occurrences ment pattern appears time slot  easy                                                    know  possibilities appear sw  lengthl pattern ll count actual ap     pearances supp consider frequent pattern iff  maximal support pq suppqw·    suppll larger userspecified threshold value   supq assuming element pattern                                                  ql appears   clear pl possi                                              pg                                            bilities appear range                                                                                                shown figure  pl appears                    pattern letters corresponding element sequence                                                 element pattern possibilities                             …                      appear denoting                  pattern letters corresponding element sequence                                                 region ϕ ⊂ α β   α β    appears                                                                 l−                                                              know possibly appear                                                                                                                          notice                figure  pattern denotation                                                    reserved possible appearance pl                                                    number possible appearances  wrt       pattern frequency  deterministic pruning                                                                                             unless pl pl      pattern frequency                          generic case reality similarly number pos                                                   sible appearances wrt      given pattern pp …p  support lengthl hy                                                            result possible appearances                        sup          p’s                                             persequence      assess  fre  sum possible match  quency need  possible number occur                                                 ing ’s occurrences ϕ www…ww   rences considering pattern gap  each     l−                                                   maximal support lengthl pattern pp qp   time appears actual spans vary lln                                                                              w·supq·ϕ      ⋅      supp •   llm correspond cases l− supq    appears gap successive element sup  ⋅                                 patterns exactly equal   respectively assuming …   …w     …  ww …                                   δ  element pattern matches  ele        …                            …                         …                                  …      ment pattern valid occurrences possibly appear    range sδn sδm wmn pos                                                                         pattern  pl           pl  sibilities situation holds element pat figure  pattern growing                                                δ  terns p…pl total lengthl pattern starting                                                lemma  given threshold   say lengthl pat    possible occurrences assuming     possible appearances total number possible ap tern frequent iff suppll •   p’s length sub                                                                            pattern q’s frequency freqq − − ⋅ ω     pearances ll ·w  average span                             ⋅ ρ   successive element patterns nm av                        − −  ⋅ ω     erage span l·nm possi ωnm frequent pattern       ble number occurrences equals ll proof   ·nm ♦ means maximal integer            ♦  larger  value ll defined eq                                                     ijcai                                                   freqqsupqll know                                               −      pattern search gap requirements           − − ⋅ ω     l−l−⋅ω⋅wl     sup ≤    ⋅ ρ l−                  consider lengthl pattern gap flexibility        − −  ⋅ω       −                                          exhaustive search start pattern letter           −  − ⋅ ω  ⋅ l− ⋅ ρ                                                                 supq                     match denoting matching location    length subpattern according                                                    search process starts match   theorem  know supp ≤ supq ⋅w     range xw process iteratively repeats    sup  − −  ⋅ ω   ⋅w − ⋅ ρ ⋅      possible locations starting                        −        − −  ⋅ ω   ⋅w  ⋅ ⋅ ρ        checked moves step forward time                                                 complexity ol•wl linear wrt expo                                                          supp      supp  ρ ⋅         nential wrt case consists ele              −  − ⋅ ω  ⋅ l−                                                                              ll              ment sequences complexity increases ok•l•w    gap flexibility • know  ≤          ρ  frequent                    gap constrained search gcs       supp ll                                                   subsection propose dynamic programming                                                    bellman  oriented search mechanism able    lemma                                               average span longest pattern  achieve linear time complexity gap constrained pattern    − ⋅    half lengthl hyper                                         search algorithm consists three steps given   sequence given lengthl pattern length                                                    lengthl pattern pp …pl build length list   subpattern freqq − −  ⋅ ω                                                ⋅ ρ   each element patterns pl denoted op  initiate                                   − −  ⋅ ω                                                                                   value   search process easy    ωnm patterns subpat     pl  terns frequent                         understanding pictorially show simple example                                                                                justification                                   figure  pagtc gap    according lemma  know given conditions  gcs sequentially scans left right   lemm lengthl pattern frequent current position sx matches element pat  assume pattern subpattern lengthlk pattern                                                      tern set value                                                                              according eq  know supp  ρ ⋅ ⋅                                                     location sx matches element pattern    lengthlk pattern subpattern                                                     pj jl excluding element pattern  maximal support  times supp                         max −w                                                       date value                 −                                                                    op    op          −             ρ ⋅w ⋅ ⋅  frequency                                supf supp      ll                                                   shown figure  matches                                    sup                            value  updated    freq       ρ ⋅    ⋅  ⋅w                                                                                  sum oa oa process indicates            l−l −⋅ω    − ⋅ ω   matches element pattern letter    freqf  ρ ⋅ ⋅                                                                          l−l −⋅ω                     location backtrack steps number     average span lengthlk pattern given long times pj’s successive pattern letter pj   est pattern −  ⋅    appeared element patterns pj able                        −  −   ⋅ ω    iteratively regulate update lists         freq    ρ ⋅ ⋅                                                             pj                            −  ⋅  −                                     way value indicate number                         −   −  ⋅ ω                                     pj         ρ ⋅  ⋅ ⋅        ρ                                                                  times pattern pp…pj ends position  pattern frequent                      iteratively repeat process finish     reality know apriori sequence sum elements   average span longest pattern                                                       ino   number times ppp…pl appears                                                          pl   − ⋅  longest patterns                                                       addition values indicate   lemma  does useful min                     pl  ing process dealing number times ending position  long hypersequence certain average time complexity gcs consists parts  scan  span maximal span longest pattern ning sequence  each location com  half dna sequences using paring sx element patterns backtracking  section  average span longest pattern steps necessary each backtracking    percent sampled length sequence achieved through sum operation total time com  safely assume prerequisite holds plexity okll linear wrt land                                                    efficient exhaustive search oklwl                                                    ijcai                                                                                                                                                                            rescanning generated lengthl candidates cl                                              calculate value l′ threshold                                                                            − ′ − ⋅ ω                                                                     ρ ′     ⋅ ρ                                                                                  − l′ −  ⋅ ω                                                                              ρ                                                                            lengthl candidates frequencies larger                                                    forwarded frequent set lengthl candidate’s                                                                              figure  gap constrained pattern search gap constraint  frequency ρ′ mark “suspicious”                                                    means pattern unlikely grow      mapbased support prediction               eye lengthl candi     notice each time grow lengthl pattern date cl p’s lengthl subpattern suspicious                                                                                   length pattern check f’s frequency remove  candidate set lines    searching occurrences reexamination  figure  according lemmas   pattern   mechanism costs considerable runtime suspicious lengthl patterns   possibly millions candidates length patterns going frequent   reuse p’s occurrence information able p’s lengthl subpattern suspicious length   speed search process dramatically purpose patterns containing subpatterns   pattern p’s occurrences generate rear going frequent need   map rm records number times ap candidate set cl growing result safely                                                                           pears ending positions rm actually remove  candidate set                                                     mcpas prunes candidates builds rm  list section shown figure                              pl                                                   remaining lengthl patterns cl rescanning    ends position value rmx indicate line  figure  mcpas grows lengthl candidates    number times ends rmx equals                                                      using patterns cl line  figure      rm pattern pplp…pl denoted achieved through following techniques  trying    rm    just search p’s rm instead scan       pl                                    combinations attaching possible element pattern     ning sequence number times patterns cl  using popular apriori candi  appearing achieved simple production date generation procedure      sum procedure specifically pattern                                                                             input  hypersequence gap gn    element   plp…plpl build headmap hp records                                                    sequences  alphabet •  frequency threshold   locations times length pattern plpl’s starting    information hp indicates number times output frequent pattern set                      pl pl                           wmn     plpl starts position support pattern   build length pattern set build bm hm maps    determined eq                                 patterns                               ⋅                            sup pl  rm  hpp             φ                                         cl •    shown figure  predicting support  cl   patterngencl                                                           predict support values candidates cl   agtc rmagt hmtc production   sum corresponding elements lists eq                                                           l′l calculate threshold ρ′  exactly equal agtc’s support                                                           pattern cl                                                                                 ∪                                                             freqy •       fl fl                                                       freqy  ρ′     suspicious       rmagt                                                                        length subset suspicious         hm tc                                                                                            cl cl                                                         rescan build rm patterns cl      rmagtc                                                                       ll                                                                  ∪     ∪                                                      return f… fl     figure  mapbased support prediction gap constraint                                                                figure  mcpas algorithm       algorithm                                      experimental results    framework mcpas shown figure                                                     data used experiments nucleotide dna se  mcpas generates length patterns denoted                                                   quences downloaded national center biotech   step mcpas begins pattern growing                                                    nology information website ncbi choose dna   pruning assuming certain step generated                                                    sequences test bed ax ax   set lengthl candidates lengthl patterns line                                                    ax ax using multiple se   figure  lengthl candidate’s support                                                    quences form hypersequence truncate sequences   easily predicted plugging lengthl patterns’ rm                                                    equal length ones use dna sequences   corresponding length patterns’ hm eq                                                   ijcai                                               
