       efﬁcient computation error bounded solutions pomdps              expected value approximation dynamic disjunctive beliefs          pradeep varakantham† rajiv maheswaran‡ tapana gupta†           milind tambe†           † varakant tapanagu tambeuscedu institute robotic intelligent systems                                      university southern california          ‡ maheswarisiedu information sciences institute university southern california                        abstract                            previous work pomdps encouraging progress                                                        using approaches  exact algorithms compute op      pomdps partially observable markov deci   timal solution avoid problems error bounds      sion problems popular computational model  cassandra et al  feng zilberstein        wideranging applications computational scale  approximate algorithms      cost optimal policy generation prohibitive currently popular approach address signiﬁcant computa      researchers investigating evermore efﬁcient  tional complexity pomdp policy generation sacriﬁc      algorithms applications demand al ing solution quality speed pineau et al  smith      gorithms bound loss policy quality    simmons  poupart boutilier       chasing efﬁciency address challenge  approximate algorithms pointbased approaches pineau et      present new techniques ﬁrst approximates al  smith simmons  provide expressions      value space obtain solutions efﬁciently error bounds drawbacks bounds      prespeciﬁed error bound unlike existing tech pointbased approximation algorithms based      niques technique guarantees resulting pol maximum minimum possible singlestage reward      icy meet bound furthermore does extreme values leading loose bound      require costly computations determine qual useful domains especially      ity loss policy second technique prunes penalties rmin   computation      large tracts belief space unreachable al bound particular policy potentially signiﬁcant      lowing faster policy computation sacri expense requiring nonlinear program algo      ﬁce optimality combination tech rithms guarantee yield policy      niques complementary existing op   achieve prespeciﬁed error bound      timal policy generation algorithms provides solu                                                          address challenges present new tech      tions tight error bounds efﬁciently domains                                                        niques complementary existing optimal policy      competing algorithms fail provide                                                        generation algorithms particular presented      tight bounds                                                        wrappers generalized incremental pruning gip cas                                                        sandra et al  regionbased incremental pruning    introduction                                       rbip feng zilberstein   ﬁrst tech                                                        nique eva expected value approximation approxi  partially observable markov decision problems pomdps mate sacriﬁces quality speed operates  popular model potential applications health prespeciﬁed error bound eva differs existing ap  care disaster rescue space exploration hauskrecht proaches primarily pointbased approaches pineau et al  fraser  pineau et al  poupart boutilier   smith simmons  approximating directly  nair et al  unfortunately computational cost value space opposed sampling belief space  optimal policy generation pomdps prohibitive indirect value approximation eva alleviates three  quiring increasingly efﬁcient algorithms address problems key problems mentioned earlier eva provides error  largescale domains furthermore apply bound does depend maximum minimum  pomdps domains property human safety possible reward computation error bound  concern disaster rescue patient care space ex imposes overhead computing policies eva  ploration error bounds limiting pomdp policy quality loss given prespeciﬁed error bound eva generate  critical                                      policy quality meets exceeds bound    material based work supported defense ad results eva promising domains  vanced research projects agency darpa through depart quire tight error bounds eva sufﬁciently  ment interior nbc acquisition services division fast second technique ddb dynamic disjunctive  contract nbchd                             liefs complements eva ddb exploits domain structure                                                    ijcai                                                    prune large tracts belief space unreachable entire belief space heuristics employed  cause ddb does sacriﬁce quality combining eva belief set expansion differentiate pbvi hsvi  yields error bounds original eva il compare eva pbvi known  lustrate ddb combined eva provides signiﬁcant fastest approximate algorithms error bound pro                                                                                                    performance improvements eva earlier vided pbvi rmax − rmin ∗ b − γ  b                                                                                 techniques prune belief spaces varakantham et  maxb∈Δminb∈bb −  Δ entire belief  al                                            space set expanded belief points γ dis                                                        count factor rmax rmin extremal single stage    background  pomdps                                rewards computing b requires solving nonlinear pro                                                                     pomdp       represented using  tuple   gram nlp shown algorithm  provide exper  s Ωor set states  imental comparisons pbvi drawbacks pbvi  set actions Ω set observations s regard calculating achieving bounds equally  transition function osaω denotes observation applicable hsvi similarity  model rs reward function state  partially observable pomdp policies expressed algorithm  nonlinear program obtain b  beliefstatetoaction mappings belief state maximize b  probability distribution set states goal subject constraints  compute policy maximum expected reward          Σ≤i≤sbi    currently efﬁcient exact algorithms pomdps   bi ≥  bi ≤  ∀i ∈s  valueiteration algorithms speciﬁcally gip cassandra et b  Σ≤i≤s bi − bki  ∀bk ∈b  al  rbip feng zilberstein   dynamicprogramming algorithms each itera  tion value function optimal policies represented  minimal set vectors called parsimonious set  expected value approximation eva  termining parsimonious set involves pruning domi value function pomdp piecewise linear  nated vectors requires solving linear program lp expressed set vectors approximate algorithms  vectors original set pruning recognized generate fewer vector sets optimal algorithms ex  computationally expensive                      isting approaches generate reduced vector sets sam    db  performance dynamic programming al pling belief space ﬁnding vectors apply  gorithms improved considerably exploiting dy  namics domain varakantham et al  dynamic points approach expected value approxima  beliefs db implemented wrapper gip eliminates tion eva choose reduced set vectors approx  unreachable belief spaces given information start imating value space subset vectors ex  ing belief space computes belief bounds states pected reward desired bound optimal  future time steps solving maximization minimiza reward  tion problems equation belief probability updates using approximation subset optimal parsimo  given action observation ω maximization prob nious set lead lower expected quality set                               lem belief probability state             belief points let  denote maximum loss quality               otstaωΣst− pt−st−astbt−st−  allow belief point henceforth refer     max                                                                       bt−∈bt−   otstaωΣs  pt−st−astbt−st−  vector set away optimal value             st            t−                                                        points belief space illustated fig    lagrangian techniques used solve maximization                                                        parsimonious set key problem eva determine  problems efﬁciently polynomial time bounds                                                        parsimonious set efﬁciently  signiﬁcantly improve lp runtimes pruning lps                                                          end employ heuristic extends prun  happens restricted belief space restricted belief                                                        ing strategies presented gip gip parsimonious set  space leads fewer vectors parsimonious set                                                        corresponding set vectors obtained three steps  particular interation cascades through steps  dynamic programming leading fewer lp calls conse  initialize parsimonious set dominant vec  quently signiﬁcant speedups db lead orders mag tors simplex points  nitude improvement existing algorithms varakantham  chosen vector ∈u execute lp compute  et al                                             belief point dominates current parsi    pointbased approaches  leading approximate al    monious set  gorithms pomdps provide error bounds point                   u                                                         compute vector highest expected value  based value iteration pbvi pineau et al                                      u                                                               set  belief point  remove vector  heuristicsearch value iteration hsvi smith sim            mons  algorithms policy computed add   sampled set belief points extrapolated entire belief lp formulation nonconvex feasible region possible  space pbvihsvi anytime algorithms sam os number linear constraints smallest  pled set belief points expanded time expan problems  states ∼  constraints making infeasible  sion ensures belief points uniformly distributed solve lp                                                    ijcai                                                                                                               ∗                 ∗                    ∗    eva  modiﬁes ﬁrst steps obtain       vb ·ˆb ≥ vˆˆb ·ˆb   vb ·ˆb ≥ uˆ ·ˆb means vb                                                                                                    ∗      parsimonious set                                         included parsimonious set vb ∈v    interested representing optimal par contradiction                                                             ∗                  ∗      simonious set vectors possible initial  vb · ˆb ≥ vˆˆb · ˆb   vb · ˆbuˆ · ˆb uˆ included                                                                     ∗      ization process selects vector beliefs vb returned considered      simplex extrema choose vector high previous terminal conditions occur       est expected value number simplex belief      points choosing randomly break ties                                                        vb    lp modiﬁed check dominance dom                                ∗      inating vectors  belief point algo                                                             max      min      rithm  provides modiﬁed lp bt bt                                  ε                                                                                         vector optimal set                                   max   min                                                 ε  algorithm  lpdominatew bt   bt                                                 variables bst ∀st ∈ st                                                                                          vector approximate set    maximize                                                                      subject constraints     · − ≥   ∀u ∈                   ≤ bmax   ≥ bmin                                           Σst∈st                    figure  eva example parsimonious set    ≥  return return nil                                                        proposition  error introduced eva each stage    key difference lp used gip policy computation bounded Ω giptype                          algorithm  rhs line  checks crosssum pruning  expected value dominance given vector  vector ∈ including  rhs constrains proof eva algorithm introduces error  par  dominate vectors  following propo simonious set pruning operation prune  sitions prove correctness eva algorithm formed proposition  gip three pruning  error bound provided eva let v v∗ denote steps each stage policy computation     parsimonious optimal parsimonious set respectively  vao  prunevaoi step each vao                                                   proposition  ∀b ∈ Δ entire belief space vb      away optimal ∀a ∀o                      ∗                ∗                      ·             ∗  ∗ ·    ·  arg maxv ∈v      argmaxv   ∈v                                          ao    ao        ∗                                                     prune···prunev          ⊕v      ··· ⊕    ≥ ·                                                ao                 ao                                                            Ω  begin away opti  proof prove contradiction assume ∃b ∈ Δ mal  each pruning operation adds                ∗                  ∗      ∗                                      aoi  vb ·bvb ·b implies vb   vb  vb ∈v bound  new term  prune                                ∗                                                                     ao  consider situations vb considered eva Ω− prune operations each  instants current parsimonious set away optimal Ω−                                                                                                    set vectors considered let                                                                                                             prune     a∈a  error a∈a                            ∗                                                               ˆb argmaxminvb · ˜b − · ˜b                bounded error  prune adds  lead                  ˜    v∈v                  b∈Δ                                       ing total onestage error bound Ω   belief point v∗ best wrt let                                                      proposition  total error introduced eva gip                                                        type crosssum pruning bounded                   vˆˆb argmaxv · ˆb                                                          Ω                         v∈v                            horizon problem                            ˆb                                            ∗  vector best  let               proof let vt vt denote evapolicy op                                                                                                a  ⊆                  uˆˆ argmaxu  · ˆb                     timal value function respectively time                       u∈u                            set actions roots policytrees asso                                                                                                                            ciated vt  eva vector set time et   vector best ˆb three possibil ∗                                                                       maxb∈bv   −  ities                                                                         t−       ∗                           ∗                                                             · ˆbv  · ˆb             · ˆb − · ˆb      max                    ˆˆb     implies    ˆˆb              a∈at     Σb   ∈b                                                                                                   ∗        deﬁnition ˆbwehave                        ≥max                                                                          a∈at     Σb   ∈b                       ∗             ∗                                                     vb · − vˆb · bvb · ˆb − vˆˆb · ˆb       − Σb∈bp aet                                                                                          ∗                           ·                         max           −e      ˆb argmaxv∈v      implies                  a∈at     Σb   ∈b                           ∗                                                                        ∗                vb · bvˆb ·   ≤ vb ·            ≥maxa∈arb aΣb∈bp    avt −Ω−et                                                          ∗  −   −e      contradiction                           t−    Ω                                                        ijcai                                                                                                                     aωmax       aωmin  inequality proposition   obtain bt bt ∀a ∈ ω ∈ Ω                                               lations deﬁnition implies t−    create multiple belief polytopes each action  et Ω et Ω error                    aiωi                                                            observation pair bt   evapolicy beginning execution Ωt                                                                     aiωimin   aiωimax  total error bound eva                                        bt     bt     ×···                                   γ    similarly proved discounted inﬁnite             aiωimin     aiωimax                                     Ω                         ···×bt       ss bt    ss  horizon problems total error bound −γ                                                                                     ddb           aω                                                          feasible belief space bt  ∪aωbt     dynamic disjunctive beliefs ddb                  disjunctive expressed lp                                                        used pruning instead prune occurs each                                                        baω            bs                                         union dominant vectors                                                        lief spaces increases number lp calls ﬁxed                                  aω                                 bt                     epoch lps cover smaller spaces yield fewer                   aω                  bt                                    vectors end cascading effects reduced vector                        aω                     bt                                 sets eva dynamic programming process                                 ω                               db                   lead fewer policies stage resulting signiﬁcant                             bt   bt                                                        computational savings                                        bsi                                                           experiments          figure  ddb example ddb vs db                                                        experiments show eva  ddb address key    eliminating reasoning optimal policies shortcomings current pomdp algorithms policy  reachable beliefs possible improve policy computation meets prespeciﬁed error bound desired three key  time greatly sacriﬁcing solution quality key results provided section relevant eva  eva  insight reachable belief space composed small guarantee generation policy meets pre  belief polytopes introduce efﬁcient technique speciﬁed error bound pointbased algorithms  exploiting smaller polytopes contrasts section   cost calculating error bound  previous work dynamic beliefs db varakantham policy eva avoids signiﬁcantly impact perfor  et al  assumed single large belief polytope mance point based approachessection    particular db obtains maximum belief probability domains pointbased algorithms provide func                                  aωmax               tional bounds section  ddb show order  state given action observation bt solving  constrained optimization problem using lagrangian tech ofmagnitude speedup previously best technique  niques similarly minimum possible belief probability belief space pruning section   computed dynamic belief polytope epoch cre  ated follows    maximum  minimum  possible belief                                            max      each state actions observations bt              aωmax   min             aωmin      maxaω bt     bt smaxaω bt        create belief polytope combines bounds                db      states bt          min     max             min      min       bt  bt ×···×bt  ss bt ss    appropriate bound belief      bdb                       side   possible time  domains    figure  error bounds hallway hallway  single belief polytope collection smaller  belief polytopes  future beliefs depend partic  ular actionobservation pairs unfortunately db insists  bound achievability  single belief polytope including unreachable  beliefs figure  illustrates twoobservation general case pointbased approaches en                                                  db    counter problems generate policy  action twodimensional support bt  smaller entire space potential beliefs larger meets prespeciﬁed error bound span belief sup  necessary possible believe outside port chosen independently value function smaller    ∪         baiωj   ij  contrast new method ex  hallway hallway tigergrid aircraft benchmark  pressing feasible beliefs referred dynamic disjunctive problems available anthony cassandra’s pomdp website  belief ddb bounds ddb method computing fea scotland yard state act obs problem motivated  sible belief spaces eliminate conditioning action ravensburger scotland yard game tag state act obs  observations eliminate taking max ω  problem pineau et al                                                     ijcai                                                    feasible belief space exists value function note  samebound eva runtimes  algorithm minimum error nlp runtimes just bound computation ove  solution quality exceed threshold pre head pbvi signiﬁcant burden   speciﬁed error bound smaller minimum error nlp eva runtimes better pbvi runtimes  algorithm able provide satisfactory policy cases  halfbound eva runtimes better nlp  current pointbased approaches exacerbate problem runtimes case hampered eva  starting belief point considering outperformed ameliorated pbvi hsvi smith sim  points reachable initial point mons  outperforms pbvi runtime suffers  potentially restrict span belief support severely problems time compute bound  implies signiﬁcant minimum error figure  presents unattainability bound experimental  pbvi error bound hallway hallway prob results pointbased approaches suffer belief sup  lems belief set expanded time xaxis repre ports larger nlp cost increases exponentially  sents number belief set expansions yaxis rep  resents error bound solving nlp each belief set  expansion error bound remains constant prob  lems ﬁfth expansion  belief points  set tenth expansion  belief points  nlp expensive calculate instance  hallway veriﬁable pbvi able  reach error bound  eva using   algorithm  corresponding prespeciﬁed error  bound obtained equating error bound  ∗  ∗Ω∗t   error bound achievable      bound calculation cost                                                              figure  run time comparison eva pbvi  let consider case given pointbased ap  proach generate policy quality pre  speciﬁed error bound algorithms know  bound functionality  quality loss policy expand belief support  indicated earlier require expensive nlp calcu nlp cost vanished domains  late error bound  ran eva pbvi expression error bound pointbased approaches yields  tigergrid hallway hallway aircraft scotland yard value functional consider task manage                                                        ment problem tmp varakantham et al  software  tag problems pbvi depends starting belief point                                         each problem obtained bound  randomly se personal assitant domains penalty  min   lected initial belief points each given initial belief point associated certain stateaction pairs control agent au  ran pbvi ﬁxed number belief set expansions tonomy case output nlp yields error  computed bound resulting policy nlp bound loose respect actual solution quality  deviations obtained bounds extremely small renders bound useless method point  gives advantage pbvi assuming cor based approach determine stop expanding set  rect belief support obtained bound immediately ad belief sets tmps  ditionally counted average runtime ﬁnal  ddb  expansion    ran eva equivalent error bound forcing shown figure  tmp domain illustrates  eva obtain policy good better bound calculation beneﬁts ddb  gip rbip did terminate tmp  eva trivial constanttime computation prespeciﬁed time limit sufﬁciently large  eva run tighter bound half value bound eva produced policy time limits  obtained pbvi address possibility alter improve performance option use eva  nate belief expansion heuristic pbvi led better bound larger bound meant additional sac  results shown figure  nlp bar denotes riﬁce solution quality evadb reduced runtime  time taken computing error bound pbvi sacriﬁcing solution quality evaddb combin  pbvi bar shows runtime computing policy ing new techniques provided orderofmagnitude  corresponding ﬁnal expansion including nlp speedup evadb losing solution qual  runtime bars eva bound eva half ity runtimes evaddb evadb included  boundindicate time taken eva provided overhead computation belief bounds  bound equal half used pbvi respectively  experiment summary    employed industrial optimization software called lingo demonstrated drawbacks current pointbased ap   solving nlps machine specs experiments intel xeon proaches tasked generating policies pre   ghz processor gb ram                            speciﬁed error bounds limitations include inability                                                    ijcai                                                    
