                                         factored planning                                       eyal amir barbara engelhardt                        science division university california berkeley                                        berkeley ca  usa                                          eyalbeecsberkeleyedu                            abstract                          planning procedure finds plans multiple subgoals                                                          each subdomains separately using generic black box        present generalpurpose method dynami•                                                         planner searches possible plans using complex action        cally factoring planning domain structure                                                          descriptors each subdomains form plan        exploited generic planning method                                                          overall goal planning procedure uses dynamic pro•       sound complete plans planning al•                                                         gramming principles backtracking occurs        gorithms time complexity scales linearly                                                          subdomain black box planner        size domain worst exponentially                                                            prove planning procedure runs time linear        size largest subdomain interaction be•                                                         number subdomains takes time ex•       tween subdomains factorization procedure di•                                                         ponential size largest subdomain number        vides planning domain subdomains                                                          dependencies subdomains type factoring        organized tree structure interaction                                                          select justified complexity result        neighboring subdomains tree min•                                                         prove combined algorithm sound complete        imized combined planning algorithm sound                                                          applied solve planning problem us•       complete demonstrate represen•                                                         ing generic black box planner planning subdo•       tative planning domain algorithm appears                                                          mains complexity upper bounded complexity        scale large problems regardless black                                                          black box planner unpartitioned domain        box planner used                                                            implemented tested planning algorithm                                                          simple domain guide development created     introduction                                        implementations ipp planning koehler                                                          hoffmann  ff planner hoffmann   planning algorithms use independencies loose in•                                                         ncbel  compared results algorithm   teractions components planning domain                                                          ipp ff shown single do•  plans efficiently example hierarchical plan•                                                         main results scale better planners   ners divide goal subgoals highlevel operators using                                                          example validates analytical results shows   decomposition domain loosely interacting parts                                                          planners performance scales linearly size   knoblock  erol et ai  planning                                                          domain problem motivating development   each level separately later subplans pieced to•  gether build valid plan planners use domain   decomposition lansky getoor  lim•  factored planning   ited domains explicit hierarchical structure re• section present algorithm planning   quire backtracking subdomains replan partitioned planning domain subdomains ar•  subgoals valid plans general domain ranged rooted tree each subdomain corresponds   decomposition planning does scale back• subset fluents single states domain   tracking subdomains dominate complexity subset actions use fluents neighbor•  search domain decomposition ad hoc ing subdomains share fluents actions ideal     paper present approach planning scales partition smallest number shared fluents ana•  large domains taking advantage domain struc• lyze algorithm computationally present procedure   ture approach composed procedures factoring finding tree partition closetooptimal properties   planning factoring procedure partitions planning   domain loosely interacting subdomains orga•  partitioned planning problems   nized tree structure factoring procedure uses decom• restrict partitioned planning problems   position algorithms graph theory contribution described using simple propositional action language   matter translating planningproblem decompo• partitioned domain description labeled graph de•  sition task graph decomposition task factoring scribes set subdomains connections       planning                                                                                                subdomains formally partitioned domain description reported capabilities children tree ev•  labeled graph                                     ery capability appears plan expanded sub                                                        plan subdomain reported subplans     • vertices                                                          contain capabilities expanded       planning domain description                                                          process continues plan contains original              set propositional meflav features do• domain actions            main change value time                                                         simple algorithm incomplete              set action operator definitions                                                         view presented leaves exact nature plan•    • edges                                  ning each subdomain unspecified suggests roughly     • labeling  edges         planning each subdomain takes form finding plan                 subset fluents             starts initial state local fluents reaches                                                         specified end state local fluents unfortunately limiting     label includes fluents shared be•  kind message children subdomains   tween include                  parents incomplete demonstrated following ex•  global fluents use convention action refers ample figure  illustration   action definition called action schema   denotes instantiation action plan say charger                     robot   action subdomain iff defined       specify preconditions effects actions ai actions                    actions                                                             charge switch battery lfull addlinesegment   using simple language situation calculus preposi•            batteryfull   tional fluents allow actions conditional effects fluents  secondpowe line fluents   use simple compilation technique reiter   battery               battery                                                               battery                battery iu ii   provide monotonic semantics language avoid secondpowerline           sccondpowerlme   frame problem results apply pddl   upgraded                     onesegment   language fox long  pddl repre•                               twoscgments   sentation language used example section  model   domains subdomains plans              figure  subdomains upgrading battery charger    planning algorithm   present planning algorithm partplan figure  consider scenario charger   finds plans partitioned domain use follow• charge batteries robot connect power cables to•  ing notation set propositional fluents gether uses batteries initially charge ac•  language set propositional sentences tion charger charges exactly battery charge   built                                      actions required charge robots batteries                                                         charger connected additional power   highlevel overview                                   source single charge action charges batteries   partplan processes partitioned domain tree iteratively task upgrade charger charge   leaves root subdomain holds goal batteries robot needs build   partplan selects leaf subdomain tries build plans power line long reach charger   each set possible preconditions goals step charger needs switch using sources build•  records successful attempts adds new macro• ing line requires multiple charges interleaved adding   like actions leafs single parent subdomain step lines plan solves problem needs charge   removes leaf subdomain graph       robots batteries add line segment charge add an•    result planning each subdomain complete line segment charge add final line segment   plan compilation capabilities contain switch charger new mode   subdomain actions capabilities descendant sub want factoredplanning approach apply   domains generally subdomains capabilities given planning problem complete plan   plans using actions capabilities regardless plan partition show   neighbors affect fluents shares par• partitioning problem simple mes•  ent subdomain tree capabilities subdomain sages form holds  make hold   shared sending message parent domain containing sufficient directed tree complete plan mes•  complex action describing capability           sages form holds  cause     tree reduced single subdomain subsequently make hold  cause hold   iterative processing removal leaves contains required domains interleaved interactions   problem goal perform planning node achieve example complex messages extended larger   goal condition based capabilities elim• numbers interleaved preconditions effects al•  inated child subdomains step  plan gorithm present allows type message   subdomain expanded plan achieves over• possible partitioning example pre•  problem goal using actions subdomain sented figure  lefthand side include                                                                                                   planning  actions charge switch features battery strive employ reducing problem tradi•   batteryfull second jpotver upgraded ac•  tional planning entire domain forcing backtracking    tion charge following effects preconditions different subdomains                                                          detailing planning algorithm                                                          procedure partplan presented figure  subrou•                                                         tines presented figures   partplan given    action switch following effects preconditions partitioned planning domain      • second power dine switch causes upgraded set initial conditions indexed subdomain      righthand subdomain include ac•      initial state fluents goal    tion add dine segment features              state condition root node  search pa•   ••••••••••••••• onesegment                      rameters interactions depth returns plan    twosegments action add dinesegment fol• achieving specified goal conditions given domain    lowing effects preconditions                     plan exists search constraints notice                                                          show goals represented single subdomain                                                          illustrate restriction section           consider possible simple messages mes•   sages form  cause hold    require each combination flu•  ent values fluents shared subdo  mains case shared fluents    batteryfull secondpowerline      assume chose root node partition   lefthand side subdomain nontrivial message   righthand side send                                        cause        like plan root subdomain   lefthand side subdomain uses messages   results charger upgraded note   possible simple messages     way resolve problem allow complex   messages particularly example allow fol•   lowing message sent                                                                      figure  planning subdomains                                                              discuss subroutines partplan                                                          singleplan presented figure  determines                                                          plan actions subdomain                                                             starts state described initial state      planner lefthand subdomain handle arrives state satisfies require plan   complex actions use message preconditions interleaved effects corre•  plan succeeds upgrading charger allow• sponding number interleaved conditions mes•  ing kind messages makes planning algorithm com• sage  message sent example   plete consistent results achieved amir   interleaving message planner   mcllraith  mcllraith amir  inference uses fluentsetting actions set fluents   firstorder logic consistent amir  truth assignment correspond   presented results projection factored domains  undetermined action sequences performed     alternative using long messages include in• ancestor cousin subdomains parent subdomain   ternal shared fluents shorter messages wishes use result planning need   effect breaking encapsulation structure sequence actions replaces fluentsetting actions       planning                                                                                                  fluentsetting action used    used ac•   tion prior using fluentsetting action    hold condition corresponds state    required subdomains complex action pre•   condition subsequent complex action                                                                 figure  sending message expanding plan     figure  planning single subdomain storing plan                                                          minus subsequence actions                                                          edge thatare subdomains     subroutine sendmessage figure  takes plan different sides   subdomain stored table subroutine storeplan   adds new complex action definition parent sub planwidth partitioned domain   domain initial state goal fluents allow partplan plan example figure    new action contains complex action definitions       message send   child subdomains actions local plans execute allow plan lefthand subdomain   sequentially ensure preconditions complex ac• notice plan width   tions satisfied appropriate times            tree decomposition planning domain parti•                                                         tioned domain description tree satisfying run•   properties partplan                             ning intersection property fluent  appears   section prove completeness soundness pj edgelabels path   partplan analyze computational behavior pursue include    intuition planning algorithm plan theorem  let gd el tree decomposition   efficiently number interactions subdomains planning domain subdomains partplang   small maximum shared fluents partition returns plan achieves starting   determines time complexity algorithm       exists width                                                          • actions   definition  width plan let   partitioned planning domain tree                  role bound length complex actions   sequence actions width largest interactions bounding variable used                                                                                                    planning iterative deepening algorithm plans short•  distribution goal   est possible complex actions parameter used far assumed goal represented set   similarly role restrict length messages fluents single subdomain planning problems   sent children subdomains parent subdomains goal consists conjunction conditions dif•  corollary  iterative deepening search parameters ferent fluents create single subdomain includes   partplan sound complete planning algorithm  fluents width tree decomposition     time bound procedure partplan exponential high planning time instead dis•  number fluents links subdomains tribute goal subdomains show   planwidth partitionedplanning problem lin• assume given tree decomposition gd   ear number subdomains                       domain let goal condition                                                                   qx goal represented   theorem  partplan terminates time                fluents pi arbitrarily choose single subdomain                                        largest root tree each subdomain add new   number action symbols largest number fluent sym• fluent symbol new action leaf sub  bols subdomain respectively largest                                                          domain precondition effect qt   number symbols subdomains                internal node tree childrens pre•   automatic factoring                                condition effectis                                                            planning revised decomposition use   theorem  assumes tree decomposition gb el single goal subdomain revised planning prob•  given planning domain build decomposi• lem tree decomposition equivalent original   tions hand adding knowledgeengineering planning reduced worst case exponentially large   perspectives domain description de• problem linear   composition automatically using graph decomposition tech•  niques section algorithm     notion tree decomposition planning domains  extended example   special case tree decomposition graphs robertson consider following domain robot   seymour  width treedecomposition set rooms connected doors ring cimatti   width largest subset tree minus roveri  each room window   treewidth graph gv minimum width open closed locked robot possible actions   treedecompositions minus                     clockwise counterclockwise close window     finding optimal tree decompositions nphard nonethe• current room lock window current room   algorithms closetooptimal window closed goal state win•  tree decompositions becker geiger  amir dows rooms locked start state robot    heuristics kjaerulff rooms configuration windows open    applied successfully inference algo• closed locked simple example assume   rithms bayesian networks theorem proving      state windows location robot known     reduction planning decomposition problem words initial condition possible   graph decomposition problem follows create initial configurations   graph gv vertex propositional    define following set fluents   fluent domain set edges graph • agent location   includes edge • windows closed   action definition includes precondi• • windows locked   tion effect step tree decompo• • windows locked room  room   sition  graph   using algorithms mentioned finally cre•                                                           fluents represent conjunctions   ate partitioned domain description                                                                             fluents parent ancestor   follows vertices domain descriptions                                                          subdomains tree previous section define   chosen includes fluents                                                          following set actions corresponding effect axioms      includes action definitions expressed                                                            • actions close   fluents edges ed tree edges   labeling edge set             • effect axioms   fluents shared vertices        algorithm complexity taken decomposi•  tion graph gve heuristics   approximation algorithm amir  takes time                       fc treewidth typ•  ically smaller upper bound   time taken planning domain decomposition algorithm       planning                                                                                                
