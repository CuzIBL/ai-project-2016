   resolution maxsat relation local consistency weighted csps                                        javier larrosa federico heras                                 larrosa fheraslsiupcedu                              dept lsi universitat politecnica catalunya                                              barcelona spain                          abstract                          best respects clausesconstraints wellknown                                                        examples maxsat  hansen jaumard       maxsat optimization version   weighted csp wcsp bistarelli et al       known sat problem great importance recent algorithmic work focused cases      theoretical practical point view importance clausesconstraints given weight      recent years considerable goal minimize sum weights associated      ﬁnding efﬁcient solving techniques alsinet et clausesconstraints violated assignment      al  xing zhang  shen zhang  known maxsat instances translated wcsp       givry et al  work   instances vice versa givry et al  cases      focus computation good quality lower    main solving technique enumeration algorithms based      bounds used branch bound algo branch bound search      rithm unfortunately lower bounds described    csp side local consistency properties      procedural way difﬁcult recently generalized wcsp framework cooper      realize logic               larrosa schiex   givry et al       paper introduce logical framework result new family algorithms proposed      maxsat solving using framework     efﬁcient algorithms highly desir      troduce extension davisputnam algo    able property neatly described basic      rithm maxdpll resolution  tracking search certain local consistency property      rule framework advantage nicely   enforced search state      integrating branch bound concepts   givry et al  shown maxsat      lower upper bound hiding away     stances efﬁciently solved translating      implementation details show maxdpll     equivalent wcsp instances later using wcsp solver      augmented restricted form resolution level local consistency maintained wcsp      each branching point effective solving strat solver fundamental efﬁciency algorithm      egy show resulting algorithm   paper analyze interpretation wcsp lo      closely related local consistency proper cal consistency properties related algorithms ap      ties developed weighted constraint satisfaction plied maxsat instances facilitate connection      problems                                         start providing reformulation maxsat                                                        possible explicitly express lower upper bound                                                        optimal cost section  reformulation makes    introduction                                       possible elegant extension dpll each branch  eighties boolean satisﬁability constraint ing point just maxsat instance similarly hap  satisfaction topic intense algorithmic pens dpll sat section  section  present  search areas goal assign values variables main contribution generalization resolution rule  way forbidden combination values appear ∨ ax¯ ∨ ⇒ ∨ proof neighborhood reso  solution satisﬁability forbidden combinations lution restricted form resolution sufﬁces enforce  speciﬁed means clauses constraint satisfaction weighted node arc consistency section   speciﬁed means arbitrary constraints given sim approach context maxsat algorithms finally  ilarity hardly surprise research communities section  provide conclusions directions future  developed closely related techniques            work    ﬁelds original decision problem sat  csp respectively augmented deal unfea  preliminaries  sible problems clauses constraints sequel  xxn denote set boolean  satisﬁed new goal ﬁnd assignment variables values set tf standsfor true false respectively literal variable example  consider formula xy¯x¯ ∨  negationx ¯ l¯ stands negation yx ∨    second clause hard    variable instantiated noted ← literal sat assignment  fy  model cost  isﬁed literalx ¯ falsiﬁed similarly instantiated  ⊕    assignment ← ty ← optimal model  fx ¯ satisﬁed falsiﬁed assignment instanti cost   ation subset variables assignment complete note maxsat truth tables tables cost  instantiates variables partial associated each truth assignments bruteforce solving  assignment satisﬁes clause disjunction liter method consists computing truth table input  als iff satisﬁes literals satisﬁes set mula ﬁnding minimal cost model instance  clauses iff satisﬁes clauses satisfying com truthtable previous formula  plete assignment called model given boolean formula  encoded set clauses  sat problem consists                 cost  determining model                      ⊕       use symbol  denote clause                     ⊕     obviously satisﬁed  ∈ say                        explicit contradiction                                         model formula                                                         worth mentioning role clause  interested ﬁnding complete assignment minimum                                                        satisﬁed added cost  number violated clauses problem known max                                                        model explicit lower bound optimal  sat                                                        model lower bound upper bound                                                        value  ∈  formula does    equivalent reformulation maxsat             model situation explicit contradiction  weighted version maxsat weighted  clauses pairs cw classical clause  cost falsiﬁcation weighted maxsat set  generalization dpll maxsat  weighted clauses cost assignment sum  maxsat basic simpliﬁcation rules  weights clauses falsiﬁes goal ﬁnd  complete assignments minimal cost make usual sat solvers advantage equivalence rules  assumption weights natural numbers          used simplify cnf formula changing set    easy maxsat weighted maxsat models formulas applied directly  exactly expressive power maxsat maxsat section state useful maxsat spe  stance rewritten weighted instance replacing ev ciﬁc rules use notation pq ⇒ rs  ery clause weighted clause weighted max pq weighted clauses means  sat instance rewritten maxsat instance replac weighted clauses matching pq  ing weighted clause cw copies clause placed rs arbitrary disjunctions  clearly weighted maxsat encodings exponentially literals  compact maxsat following  assume loss generality weighted maxsat   • br aa ∨ bw ⇒    following previous work weighted constraint satisfac • br awau ⇒ aw ⊕  tion larrosa schiex  assume existence  known upper bound optimal solution • br ⊕   awa ∨ bu ⇒  loss generality tight upper bound awa ∨  known set sum weights • br ⇒    clauses    consider set weighed clauses say  br shows classical absorption applied  model complete assignment cost max absorbing clause hard br generalizes  sat problem ﬁnding model minimal cost standard idempotency conjunction maxsat                                          weights repeated clauses added result    observe weights ≥ indicate associated ing clause br used harden soft clause br indi  clause necessarily satisﬁed replace ev cates costfree clause eliminated correctness  ery weight ≥ changing problem equivalences direct omit proof  loss generality assume costs interval  accordingly redeﬁne sum costs  example   consider   formula  xxx ∨                                                        yx ∨ ∨    apply br                  ⊕  mina  bk                  produces xx ∨ yx ∨ ∨ apply  order result interval convenience br producing xx∨yx∨y∨z finally br  notation refer  say weighted produces xx ∨ equivalence  clause hard mandatory iff weight  observe original ﬁnal formula checked constructing  maxsat    equivalent sat              comparing costs truthtables  maxdpll                                         function maxdpllf   nat                                                         upf   davis putnam dpll popular algorithm sat   ∈ return   starting point stateoftheart solvers davis    return   et al  takes input cnf formula   return  cides exists model section  selectlitf   present natural extension dpll maxsat  maxdpllf    maxdpll let weighted cnf formula   maxdpllf  l¯  bound maxdpllf  returns cost optimal  return  model model returns   following description inspired description dpll algorithm  maxdpll set weighted clauses  given bacchus                              weights interval  weighted formula    classical sat maxdpll performs basic simpliﬁ models maxdpll returns cost optimal  cations input prior invoking recursively returns   instantiation variable forcing satisfaction lit  eral denoted produces new formula generated point mean  instances results max                                                    ¯  follows clauses containing eliminated dpll labelled ignore moment  removed clauses appears unit clause curves observe performance al  reduction ucr simpliﬁcation rule selects gorithm degenerates number clauses increases  clause unit hard clause instantiates maxdpll enhanced dominance rules ex  corresponding variable accordance literal ploit situations easy detect literal  clause unit propagation algorithm performs worse negation wellknown sat case  ucr basic simpliﬁcation rules br −  applicable maxsat pure literal rule says  contradiction achieved pos literal appears formula  sible simpliﬁcations                           negation does appear clauses mentioning  example  consider application  removed sophisticated dominance rules max  mula   x¯xyy¯x¯ ∨ y¯ ∨ sat wcsp xing zhang              rule  br   transforms    givry   x¯xyy¯x¯ ∨ y¯ ∨ ucr  instantiates x¯ produces yy¯y¯ ∨  resolution maxsat                        br produces  yy¯y¯ ∨ dpll best option ﬁnd models res                                allows ucr instantiate  br olution appropriate detect contradictions               produces  ucr   instantiate  robinson  showed resolution rule sound                        producing trivial   model original complete sat usually space  formula x¯yz constructed tracking truth suming sat context performance dpll  assignments ucr                              improved addition limited forms resolution    recursive description maxdpll given algo each search node gelder  rish dechter   rithm  applied input formula line  bacchus  drake et al  order anticipate  resulting formula contains contradiction algorithm detection deadends section generalize res  returns  backtracks line  does contain olution rule maxsat show local  variable trivial cost optimal model returned sistency techniques used larrosa schiex   lines   arbitrary literal selected just application restricted form weighted reso  line  formula instantiated l¯ max lution rule  dpll recursively called each case lines   deﬁne subtraction weights   let ab ∈  observe ﬁrst recursive  inher  weights ≥  ited parent second uses output                                                                             −      ﬁrst implements typical upper bound updating                                                                                                  branch bound finally best value  cursive calls returned line  note maxdpll weighted resolution rule res deﬁned  executed sat instance    behaves exactly  dpll                                                                           ∨ bm                                                                                       figure  reports empirical evaluation maxdpll                          ∨ au    variable random instances maxsat max      ∨ aux¯∨ bw ⇒  x¯∨ bw                                                                                      ∨ ∨ b¯m  sat generated cnfgen generator horizontal                            axis indicates number clauses vertical axis                     x¯∨ a¯ ∨ bm  dicates search effort number visited nodes each                                                        arbitrary disjunctions literals     van gelder ftpdimacsrutgersedu            minuw variable called clashing variable ob  pubchallengesatisﬁabilitycontributeducscinstances serve    case fourth ﬁfth new                                                  known sat case    rule com                                                                    upnres                plete application sufﬁces achieve contradiction                            upnresnres                                edac                 investigating cases complete                                                        ness res guaranteed important problem                                                     detected fourth ﬁfth new weighted formulas                                                        ∨ ∨ b¯m x¯∨ a¯ ∨ bm conjunctive                                                     normal form           nodes thousands                       neighborhood resolution                                                        neighborhood resolution cha iwama  clas                                                       sical resolution rule restricted pairs clauses differ                                clashing variable similarly maxsat                          clauses                 text deﬁne neighborhood resolution rule nres                                                               res restricted  case simpliﬁes                                upnres                            upnresnres                                                                     upnres                                   edac                       ∨ aux¯∨ aw ⇒ ∨ au                                                                                       x¯∨ aw                                                                    whith  minuw rule specially useful                                                        projects costs implicit formula             nodes thousands                    demonstrate nres considering application                                                        boundedsize clauses let nresk denote nres restricted                                                         nres yields                                                                                                                                                            clauses                                                                                                                 xux¯w ⇒  xu    figure  experimental results random maxsat                           x¯w    maxsat                                  rule extremely useful produces direct                                                        increment lower bound raise contradic  clauses removed br yielding rule similar tion produce new unit clause reductions  classical resolution observe    example  consider                formula  case second new clauses weight  xx¯yy¯z     removed br  case sec                                                        able simplify problem nres  ond new clause weight  applied ﬁrst second clauses producing  removed br recall res lefthand clauses                                                        x¯yy¯z appling nres  replaced righthand classical resolution fourth clauses produces x¯z  righthand clauses just added                    using br obtain x¯z unit  theorem  transformation rule res sound clauses reduced producing   preserves set models cost                                                          interesting observe application nres  proof  following table contains ﬁrst columns similar computation lower bound  truth assignments second column cost alsinet et al  practical importance adding  assignment according clauses lefthand nres maxdpll illustrated figure  lines la  res rule column cost assignment belled upnres report efﬁciency maxdpll  according clauses righthand res rule augmented nres quiescence  observed costs resulting observed nres produces huge savings inefﬁ  problem equivalent                                cient maxdpll                 left    right                      rule nres                    ⊕                                               lm                    ⊕                           ∨ lux¯∨ lw ⇒ ∨ lu                                                                               x¯∨ lw                                                ⊕                   rule great increases                                                weight unary clauses allow appli                    ⊕                   cation nres ucr                                                example   consider   formula   ∨ yx¯ ∨    res makes explicit previ yy¯z    nres  ously hidden connection variables simplify problem nres producesy¯yz allows nres transform algorithm enforce nc introduced larrosa  problem apply br   schiex  proves following result  unary clause obtaining ucr produces                                                       corollary  nres   implemented time                                                 complexity number variables    practical importance adding nres max    formula  dpll illustrated figure  lines labelled                                                        deﬁnition    arcconsistent ac iff nc  upnresnres report efﬁciency maxdpll                                                                         pair variables  minwi jwi j¯    augmented nres  nres  qui                                                                              minwi¯ jwi    escence observed addition nres  produces huge gains sake completeness theorem  let nres nres denote algorithm  evaluate effect nresk   obviously sat applies nres nres quiescence en  does effect application nresk forces arcconsistency ac  requires clauses length   sat nres  applied original ternary clauses effect reported proof  need proof application  figure  label upnres observed nres guarantees pair variables xix                                                                     ¯                ¯  nres limited effect                      minwi jwi   minwi jwi   proof                                                        ﬁrst condition second similar assume      neighborhood resolution local                wi ≤ wi j¯ possible situations ﬁrst       consistency                                      wi   implies wi j¯   case                                                        nres   add  formula ucr  section relate simpliﬁcation rules discussed                                                                 trigger xi disappear formula second  paper local consistency properties developed situation wi   application nres  wcsp order recall usual way                                                                                                add wi wi replace xi ∨ jwi jxi ∨ x¯jwi j¯  map maxsat instance wcsp group clauses ∨ ∨ x¯ wi j¯   wi  mentioning exactly set variables associate        cost function deﬁned follows let ⊂  algorithm enforce ac introduced larrosa  group clauses set variables ⊂ schiex  proofs following result  deﬁnes cost function scope let instanti                                                        corollary  nres nreo implemented  ation variables falsiﬁes clause cw ∈  time complexity number variables     straightforward redeﬁne formula  wcsp local consistency properties maxsat terms  following consider boolean formula  denotes weight clause wi wi¯  neighborhood resolution  weights unary clauses xi andx ¯i respectively anal stateoftheart maxsat lower bounds                  ¯    ¯  ogously wi wi wi wi weights years algorithms maxsat  possible binary clauses xi proposed alsinet et al  xing zhang   clauses corresponding weight     shen zhang  works common                                                        basic branch bound algorithm mainly differ  deﬁnition  nodeconsistent nc iff variable xi  ⊕ wi   ⊕ wi¯                   lower bound use shen zhang  show                                                        lower bound better higher equal  theorem  algorithm enforces nc property      alsinet et al  reasonable conditions                                                                                              proof  suppose nc clause better xing zhang   follow  lw ∈ ⊕   br ing means examples show nres  applied replacing clause lw allow nres comparable  application ucr eliminate clause     consider formula ∨ zx¯ ∨ zy ∨ z¯y¯ ∨                                                        z¯ xing zhang  shen zhang  deﬁnition  star nodeconsistent nc iff nc  compute lower bound  nres  variable xi wi   wi¯              applied twice producing equivalent formula                                                        zz¯ nres transform problem  theorem  let nres   denote algorithm ap                                                                                 means lower bound   plies nres quiescence enforces nc                                                         consider formula xyx¯ ∨ y¯  proof  need proof application nres xing zhang  shen zhang   guarantees variable xi wi   wi¯   compute lower bound  nres ap  sume   wi ≤ wi¯ possible situa plied implicit lower bound algorithm  tions ﬁrst wi¯   case trig  important observe en  ger ucr xi disappear formula sec code problem weighted csp enforce stronger  ond situation wi¯   application nres form consistency called existential directional arc consis  add wi replace xiwix¯iwi¯ tency edacde givry et al  transform  xix¯iwi¯   wi                            mula equivalent ∨
