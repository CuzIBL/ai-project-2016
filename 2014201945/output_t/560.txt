                       minimal absent information contexts                                   floris roelofsen   luciano seraﬁni                        institute logic language computation amsterdam                          instituto la ricerca scientiﬁca tecnologica trento                          abstract                            second contribution based observation                                                        multicontext systems new information derived based      multicontext systems mcs represent contextual  presence information      information ﬂow show semantics    natural situations concrete examples given      mcs completely determined informa   new information obtained lack informa      tion obtained simulating mcs tion propose generalized framework account      way minimal information situations nonmonotonic reasoning techniques      deduced each step simulation           applied formulate suitable semantics framework      mcs acquisition new information       proceed section  brief review multi      based presence information  context syntax local model semantics minimal      generalized account model situations ity discussed section  generalized framework      information obtained result presented section  conclude section       absence information         concise recapitulation main observations results                                                             preliminaries    introduction  based motivational papers mccarthy   giunchiglia  formalizations contextual  formation intercontextual information ﬂow                                                                                          mr   proposed notable propositional logic context     mr  developed mccarthy buvacˇ mason    multicontext systems devised giunchiglia ser             figure  magic box  aﬁni  later associated lo  cal model semantics introduced giunchiglia ghidini simple illustration main intuitions underlying                                seraﬁni bouquet  argued tech multicontext framework provided situation  nical point view multicontext systems constitute depicted ﬁgure  agents mr mr looking  general formal framework conclusion supported box different angles box called magic                                                   conceptual argument benerecetti etal   cause mr mr make depth    multicontext describes information available sections box sight agents partial  number contexts number people  agents information box express information mr   databases speciﬁes information ﬂow uses proposition letters ball left  contexts local model semantics deﬁnes ball right mr uses  entail piece information piece proposition letter ball center  formation acquired independently information general consider set contexts language  ﬂow described accomplished                                                        li each context ∈ assume lii∈i    ﬁrst contribution based observation ﬁxed unless speciﬁed purpose  local model semantics multicontext com                                                        paper assume each li built ﬁnite set  pletely determined information obtained proposition letters using standard propositional connectives  simulating information ﬂow speciﬁed state information expressed formula ϕ ∈  way minimal information deduced                                                        li established context use socalled labeled formu  each step simulation deﬁne operator las form  ϕ ambiguity arises simply refer  suitably implements simulation determines  information entailed operator consti httphomestudentuvanlfroelofsen  tutes ﬁrst constructive account local model semantics proofs omitted merely sketched hereto labeled formulas formulas use capital let containing local models notice satisﬁes  ters  denote labeled formulas context expression set chains componentwise  label irrelevant rule expression form union chain ith component consists                                                        local models ith component chain                   ←  ∧    ∧                                                                  chains  denotes chain                                                         th  g’s labeled formulas called component consists local models ci                                                                 sequence denoted consr g’s called ci finally say local model  premises make set premr rules actually mean  premises called facts rules pre component ci  miss called bridge rules multicontext  ﬁnite set rules fact describes informa  minimality  tion established certain context independently  information obtained contexts bridge order chains according information  rule speciﬁes information obtained context convey intuitively local models chain component  pieces information acquired different contexts contains possibilities permits infor                                                        mative formally say informative  thought speciﬁcation contex                                                                                   ci ⊇ ci  tual information intercontextual information ﬂow                                                                           ci ⊃ ci say strictly  example  situation ﬁgure  modeled informative ≺  following                                                        lemma    let chains                 ¬r      ←                             formula satisﬁed satisﬁed                      ←                                                          minimal set chains iff                ∨   ←     ∨ ∨                                              ∨ ∨ ←   ∨                 chain strictly informative                                                        particular minimal solution chain  mr knows ball right mr knows minimal set solution chains  ball left agent gets know  ball box inform agent theorem  unique minimal solution                                                        chain cs  classical interpretation language li called local  model context set local models called local                                                        proof  let cs set solution chains cs  ∅  information state intuitively local model local   information state represents “possible state affairs” ∈ cs let cs componentwise union                                                        chains cs cs ∈ cs cs   local information state contains exactly local model                                           represents complete information contains ∈ cs cs unique minimal solution chain  local model represents partial information  state affairs considered possible distributed theorem  semantics completely deter  information state set local information states mined unique minimal solution chain cs  each context conformity literature refer  distributed information states chains                            ⇔    cs   example  situation ﬁgure  mr knows  ball right does know proof true iff satisﬁed solution chains  ball left represented chain ﬁrst iff satisﬁed componentwise union cs  component  ¬r  ¬l ¬r  contains local models solution chains                        chain reﬂects mr’s uncertainty left  section box                                     theorem   extremely useful    chain satisﬁes labeled formula  ϕ denoted  establish answer queries   ϕ iff local models ith component classically longer necessary compute solution chains  satisfy ϕ rule applicable respect chain iff need consider system’s minimal solution chain cs  satisﬁes premiss notice facts applicable  computing minimal solution chain  respect chain chain complies rule  iff applicable respect satisﬁes minimal solution chain characterized  r’s consequence solution chain iff least ﬁxpoint operator ts intuitively simu                                                                                                 ∗  complies rule formula true lates information ﬂow speciﬁed let denote  denoted   iff solution chain satisﬁes  set rules applicable wrt                                                        deﬁne    let denote set chains notice each li  assumed built ﬁnite set proposition letters    ∃r ∈ s∗c   consr   assumed ﬁnite let c⊥ denote chain containing ev                                          ⊥  ery local model context notice does sat rule applicable wrt ts  isfy nontautological expression let denote chain moves local models satisfy consrintuitively corresponds augmenting infor example  integration let example   mation expressed consr sense ts simulates let database integrates informa  information ﬂow described tsc obtained tion obtained respectively piece infor  removing local models tsc mation established refuted vice  informative                                   versa included     forms complete lattice ts monotone  continuous wrt  tarski  yields                      ϕ ←     ϕ ∧   ¬ϕ                                                                       ϕ ←     ϕ ∧   ¬ϕ  theorem  ts least ﬁxpoint obtained af                                                 ⊥  ter ﬁnite number consecutive applications ts  example  trust let example                                                         natural regard trustworthy  lemma   let chain let                                                                                 vice versa case piece information  ﬁxpoint ts solution chain                                                        established automatically included  theorem  let minimal solution information obtained included  chain cs coincides least ﬁxpoint ts refuted    theorems   conclude minimal solu           ϕ ←     ϕ  tion chain cs obtained ﬁnite number                                              ⊥                        ϕ ←     ϕ ∧   ¬ϕ  applications ts informative chain   prove slightly stronger result         model situations need rules form  theorem  let let denote number                                                              ←  ∧    ∧ gm ∧ ∧    ∧ hn   bridge rules minimal solution chain cs                                                ⊥  obtained   applications ts   g’s h’s labeled formulas                                                        called consequence consr         fact slightly involved essentially equiva                                                                                              called positive premises constitute set  lent procedure introduced different reasons                                                        premr       called negative premises  roelofsen etal  procedure shown                                                                      make set prem−r rule does necessarily  worstcase time complexity os ×                                                         premises ≥  analogy commonplace ter  maximum number propositional variables                                                        minology deductive database logic programming  contexts involved                                                        ory rules normal rules ﬁnite sets  example  consider example  applying normal multicontext systems normal systems short        ⊥  ts establishes facts given ﬁrst rules rule positive premises positive rule note  mr knows ball box consists positive rules conforms  application ts simulates information ﬂow original deﬁnition multicontext systems  speciﬁed rule mr informs mr systems positive systems  presence ball resulting chain left unaltered aim generalize result obtained section   application ts constitutes deﬁne semantics normal terms single  minimal solution chain fact chain satisﬁes canonical chain cs positive  formula   reﬂects desired mr come cs coincides minimal solution chain  know ball left section box ﬁrst naive attempt say chain complies                                                        normal rule iff satisﬁes r’s consequence    absent information                                 satisﬁes positive premise does satisfy                                                        negative premise minimal solution chains  rules form  allow model restricted normal deﬁned positive sys  kind information ﬂow new informa tems following example shows normal  tion established based presence information does generally unique minimal solution  natural situations information chain worse minimal solution chains gener  obtained result absence information ally correspond intended meaning  situations modeled present formalism                                                        example   let given following rule  example  coordination let meteorologi  cal databases collect respective data sensors            ←      located different parts country end                                                        minimal solution chains  day each database produces weather forecast based  data information obtained                                                                                        cp    database example predicts rain follows                          ¬q                                                                                                data does maintain                                                                                     won’t rain                                                    cq                                                                              ¬p                  ←   ∧   ¬r                                                    intuitively provides ground deriving context  information ﬂow speciﬁed reproduces exactly  derived context  “proper” assumed contain valid information  canonical chain satisfy   cq fails rule negative premises satisﬁed  rejected certainly applicable wrt negative premises  canonical chain normal characterized  satisﬁed removed remaining rules    extensive research efforts involved anal certainly inhibit rules  ogous question setting logic programming applicable wrt stable iff corresponds exactly  late ’s  early ’s proper semantics normal logic meaning sc theorem  minimal  programs sought motivating characterization solution chain  canonical chains normal multicontext systems                                                        example   example  desired cp stable solution  recall important intuitions adapt crucial deﬁ                                                        chain cq  nitions resulted efforts    ﬁrst desired property canonical chains introduced systems stability suitably characterizes unique  setting logic programming apt etal  canonical chain special cases  bidoit froidevaux  termed supportedness fails typical examples  tuitively chain supported solution chain normal example  cp cq example  stable solu  iff satisﬁes formula  pro tion chains given following rules  vides explanation  deﬁnition  chain supported solution chain              ←      normal iff satisﬁes formula             ←      contains set rules                                                        example   following does stable                ∀g ∈ premr      • ∀r ∈                                           solution chains                 ∀h ∈ prem−r                                                                           ←        •   r∈r consr                                                       cases think reasonable conclude  example  example  desired supported                                    ⊥  lution chain cq cp cq information derived regard proper  supported solution chains following extension canonical chain                    ←                       example   following does stable                                                        solution chains                     ←                                                                              ←      intuitively cp accepted canonical chain  cq rejected explanation               ←      provided fact cq satisﬁes   circular          ←      relies fact cq satisﬁes    general concept supportedness does satisfactorily  characterize canonical chain normal  example  illustrates rest    notion wellsupportedness ﬁrst introduced logic unproblematic single rule case ﬁrst  programs fages  reﬁnes notion supported cause stable solution chain  ness avoid counterintuitive result obtained example case derived context   resp   intuitively chain wellsupported solution chain wellfounded semantics ﬁrst proposed logic pro  normal iff satisﬁes formula  grams van gelder etal  avoids problems en  provides noncircular explanation countered examples wellfounded model    fages proved notion equivalent notion program deﬁned ﬁxpoint operator  stability deﬁned somewhat earlier gel given interpretation determines atoms  fond lifschitz  results obtained section  necessarily true necessarily true  pave way straightforward adaptation notion respect program interpretation assigns true  stability present setting                     set atoms false result  deﬁnition  let chain normal deﬁne atoms necessarily true necessarily                                                        true corresponding truth values assigned ﬁxpoint       sc    ∈  ∀h ∈ prem−r          reached atoms assigned deﬁnite       sc   possc                             truth value interpreted unknown                                                        approach shares important intuition  poss obtained removing neg founded semantics logic programs  ative premises rules stable solution chain                                                      constructing canonical chain  iff unique minimal solution chain important accumulate information certainly    intuitively solution chain stable iff derived track information  information represented assumed certainly derived  approaches fundamentally different satisﬁed negative premises  wellfounded semantics constructs valued interpre satisﬁed applicable respect cs  tation minimal respect truth order                                                                                                      iff makes atoms true atoms false                 ∀g  ∈ prem      seek chain minimal sc  ∈             spect information order   iff makes                ∀h  ∈ prem−r     expressions true false particularly  sults different treatment expressions positive premise satisﬁed  true regard expressions false satisﬁed cs negative  founded semantics does introduce redundant premise satisﬁed satisﬁed  formation instead setting expressions cs cases certainly applicable  simply recorded derivable            respect cs                                                                                                        constructing canonical chain                                         ∃g ∈ prem                                                              s−c      ∈             canonical chain normal henceforward                                                                               ∃h  ∈ prem−r     noted cs constructed iterative transformation  datastructure hc ai                        convenience write      • “canonical chain construction” initially         ∼             −       c⊥ transformation removes                  local models cs think s∼c set rules possibly applica      phase construction cs contains local                                      ∼                                                        ble respect cs notice ⊆      models possibly cs represents  sc  s∼c       information necessarily conveyed cs                                                        lemma    normal hc ai hc ai    • “antichain” initially  transfor                                                        chainantichain pairs st hc ai ≤ hc ai      mation adds local models                                                                                cs phase construction cs  ⊆        contains local models necessarily                                                          s−c ⊆ s−c      represents information possibly                                                              ∼         ∼         conveyed cs                                      ⊇      observation  construction  cs    lemma  formula             proof  suppose hc ai ≤ hc ai deﬁnition                                                          let rule ﬁrst statement                   ⇒                                                          suppose ∈ sc satisﬁes r’s positive                                                    ⇒    cs                      premises does satisfy r’s negative premises                                                                                                                                               lemma  goes  respectively                                                        implies ∈ sc second statement proven                                                        analogously follows directly second     chainantichain pair hc ai evolved  pair hc ai denoted hc ai ≤ hc ai iff                                                                                                       informative informative specify Ψs reﬁnes hc ai based                                                             ∼  strictly informative strictly local model ∈ ci does satisfy                                                                                   informative say hc ai strictly consequence rule certainly  evolved hc ai hc ai minimal set cs removed hand  ca chainantichain pairs iff hc ai ∈ ca local model ∈ ci satisﬁes consequences                                                                     ∼  chainantichain pair hc ai ca strictly evolved rule certainly cs provides  hc ai notice hc ai minimal ca ground removing added  minimal  hc ai ∈ ca                                                               Ψ   hc ai  hΨc hc ai Ψa hc aii    given certain chainantichain pair hc ai intended                          transformation Ψs ﬁrst determines rules  applicable wrt cs reﬁnes hc ai accordingly                                                                                                      canonical chain cs characterized ﬁrst Ψshc ai    ∃r ∈  consr  component ≤least ﬁxpoint Ψs                                           ∼                                                         Ψshc ai    ∪  ∀r ∈   consr    ﬁrst specify Ψs determines rules  applicable wrt cs let hc ai rule given × ≤ forms complete lattice Ψs mono  positive premise satisﬁed tone continuous wrt ≤ tarski  yields  satisﬁed cs hand  negative premiss satisﬁed theorem  Ψs ≤least ﬁxpoint obtained af                                                                                                  ⊥    satisﬁed cs positive premises ter ﬁnitely iterations Ψs starting hc 
