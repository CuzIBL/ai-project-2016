  fast incremental algorithms useful classes simple temporal problems                                            preferences                                              satish kumar                                         science division                                     university california berkeley                                          tkskeecsberkeleyedu                        abstract                          preferences stpps khatib et al  introduced      paper provide fast polynomial deal situations factors guiding relative ex      time algorithm solving simple temporal prob  ecution times certain pairs events better modeled      lems stps piecewise linear convex prefer  abstracted using preference functions hard                                                        constraints roughly stpp characterized graph      ence functions utilitarian objective function  x  e             algorithm motivated study                              set events                                                        “beginning world” node set       linear programming lpdual given mincost                    x         circulation problem mccp show     convention          hard sim                                                        ple temporal constraint annotated lbeubeora      duality relationship simple tem                                                   poral problems preferences stpps mc   soft constraint annotated preference function                                                        →  indicating preference associated scheduling      cps leads fast incremental algorithms solving                       algorithms bear important implica  exactly seconds given local temporal      tions planning scheduling execution moni preference functions objective function deﬁned      toring scenarios partial plans subject number ways simple way maximize mini      repeated changes preferred solutions mum local temporal preferences referred      underlying stpps computed   weakest link optimization wlo wlo stpps      updated fast incrementally                     shown tractable preference functions                                                        semiconvex khatib et al  wlo model                                                        corresponds egalitarianism utility theoryandit    introduction                                       easy illustrate myopic focus better opti  applications ai depend crucially ability ef mization criterion maximize sum preferences  ﬁciently deal combinatorial problems involve corresponding utilitarianism utility theory  satisfaction component optimization component—  polynomialtime algorithm solving stpps  requiring reason hard soft piecewise linear convex preference functions utilitarian  straints hard soft constraints capture satisfac objective function provided morris et al  tion optimization components problem respectively algorithm employs general lp solver  required express natural factors like fuzzi fore does tightly characterize complexity solving  ness probabilities preferences andor costs subse problems algorithm incremen  quently interested ﬁnding optimal solution respect tal note great value designing simple  criteria important problems planning fast polynomialtime algorithms solving metric temporal  scheduling example involve metric temporal constraints reasoning problems evident example  various kinds associated preferences          simple case stps stps characterized    simple temporal problems stps dechter et al  set simple linear difference constraints amenable  constitute studied formalism used reasoning polynomialtime algorithm using general lp solver  metric time stp characterized graph  x  e understood better solve given    xx  xn  set events stp using shortest path computations say employing  “beginning world” node set  conven bellmanford algorithm approach  tion  xixj annotated bounds lead simple fast polynomialtime algorithm—  lbeubeisasimple temporal constraint   tightly characterizing complexity solving stps  xi xj indicating xj scheduled                                                                                         lbe ube seconds xi scheduled lbe ≤ koubarakis  rdtps kumar                                                                 ube formalism simple temporal problems   semiconvex iff horizontal line lthesetofall                                                        gy constitutes single interval    stp solved polynomial time dechter et al  kumar  polynomialtime algorithm certain  general stps expressive dtps stergiou useful classes stpps provided                                                    ijcai                                                                                                      section brieﬂy review mccps        fe                    fe                   wellknown resultsalgorithms associated solv                                                                                      ing mccp characterized directed graph                                                                                            vewherev    vv vn set nodes                                                                                                   set edges edge  vivj∈e anno                                                                                   ue                                 tated numbers positive real number rep                                                  resenting capacity edge maximum ﬂow                                          pushed through edge real number                                                   necessarily positive ce representing cost push                                                        ing unit ﬂow through edge goal  figure  illustrates ﬂow augmented negative cost cy come circulation ﬂow each edge  cles residual graph solving given mccp edge conservation constraints hold node  annotated numbers ﬁrst capacity total incoming ﬂow equal total outgoing ﬂow  second cost lefthand side shows sce node capacity constraints hold true  nario negative cost cycle bcdef chosen augment ﬂow  unit ﬂow pushed cycle edge ﬂow pushed through edge  leads situation shown righthand side appro equal capacity edge overall  priate residual edges note exists negative cost cycle cost ﬂow minimized  b—namely fab—therefore indicating ﬂow algorithms solving mccps work augmenting ﬂow  augmented achieve optimality                negative cost cycles residual graph given                                                        didate circulation residual graph gf deﬁned                                                        placing each edge u v∈e edges u v  spirit imperative develop simple fast                                                        capacity uu v − fu v cost cu vandb  polynomialtime algorithms solving stpps piece                                                        v u capacity fu v cost −cu v circula  wise linear convex preference functions utilitarian ob tion ∗ shown optimal  jective function—especially classes stpps                                                        negative cost cycles residual graph gf ∗  figure   fairly general useful practice morris et                                                        shows example ﬂow augmentations mccp  al  motivating arguments beneﬁ                                                          repeatedly pushing ﬂow negative cost  cial develop incremental algorithms readily update                                                        cycle residual graph leads eventually optimal  solutions kinds stpps small changes                                                        circulation better running times achieved pushing ﬂow  say reﬁnement planner                                                        minmean cost cycles goldberg tarjan     paper ﬁrst provide fast polynomialtime                                                        best known algorithms solving mccps work time  algorithm solving stpps mentioned kinds                                                        omlog  nm  nlog orlin heren  algorithm motivated study lpdual                                                        number nodes number edges note  agivenmincost circulation problem mccp                                                        capacities integers  show duality relationship stpps mc                                                        things characterize number ﬂowaugmenting  cps leads fast incremental algorithms solving                                                        iterations required solve mccp strongly poly  mer algorithms bear important implications planning                                                        nomial running time omlog nm  nlog nandb  scheduling execution monitoring scenarios par                                                        ﬂow ﬂow  tial plans subject repeated changes pre                                                        cost ﬂow small need  ferred solutions underlying stpps computed                                                        iterations allude later exploited  updated fast incrementally                                                        designing incremental algorithms solving stpps                                                          lp formulation mccp follows fe    brief overview mccps                            ∈ variables                                                           ∀e ∈   ≤ fe ≤ ue  class linear programs solved better com                                                                                ∀v ∈           fv w −        fu v  pared employing generic lp solver using specialized    vw∈e           uv∈e  set techniques class ﬂow problems include  maximize − e∈e cefe  variants like studied maxﬂow problems mincost cir note capacity constraints conservation  culation problems generalized ﬂow problems constraints reﬂected   respectively dual  sights given lp problem drawn study lp follows le ∈ eandpv  ing dualgivenaprimal lp problem construct ∈ variables  dual lp problem using prescribed set rules sultan  ∀e ∈ le ≥    number interesting theorems guide relation  ∀u v∈e lu vpu − pv ≥−cu v  ship given primal lp problem dual  minimize e∈e leue  include weak duality theoremthestrong duality theorem  complementary slackness sultan              unlike maxﬂow problem explicitly nominated                                                        source andor terminal nodes mccps general    wellknown technique designing approximation algo maxﬂow problems given maxﬂow problem modeled  rithms example socalled primaldual method lpduality instance mccp adding backedge terminal  extensively used study ﬂows cuts source sufﬁciently large capacity negative cost                                                    ijcai                                                           cost                                                            ∞                 ∞                                                             cost                                                                                          preference                                                           muv                                                                      sl                            muv                                       cost  cuv                op                                                                                                                                                                                                                                  capacity  uuv                                                slope  uuv                  xv                                         op                          luvuuv                                                   sl                      luv                                              xv xu             xv xu               cuv        xv xu                                                                         figure  lefthand side illustrates primitive kind cost ∞                                                                            function time difference events xv xub          ∞                  ∞  righthand side shows corresponding cost capacity annota                                                                   ∞   tions edge xuxv  dual formulation problem      note each capacity constraint primal corre figure  righthand side shows gadget ≤ xv −  sponds variable le dual lesare xu ≤ preference function feasible region  nonnegative capacity constraints inequali positive slope xv − xu  xv − xu  ba  ties similarly each conservation constraint primal cor upper lefthand side shows equivalent cost function ignoring                                                                                responds variable pv dual pvsare additive constants like  lower lefthand side shows  unrestricted conservation constraints equali required mccp representation dual formulation  ties each variable primal corresponds inequal  ity dual lefthand sides inequalities fol straints by” principle stpps linear cost  low tracing variables primal participate functions shown figure  ﬁt lpdual model mc  constraints respective coefﬁcients cps figure  edge xuxv annotated  righthand sides follow primal’s objective func cost function instead preference function  tion finally coefﬁcients variables dual’s mains  far difference xv − xu ≤ cu vbut  objective function come righthand sides cor begins increase linearly positive slope uu v  responding constraints primal                 yond bound objective minimize overall    pu referred potential node uandpu cost summed edges figure  shows  cu v − pv referred reduced cost cpu v cost function translates edge xuxv capacity  edge u v easy sum reduced uu v cost cu v dual formulation  costs cycle equal sum costs                                                 ∗      problem mccp  cycle shown circulation noterecollect things proceeding  optimal exists potential function hard simple temporal constraint form pv −  ∈ gf ∗  cpe ≥  ahuja et al  pu ≤ cu v handled modeling pv −                                                        pu ≤ cu vlu v uu v practically    lpduality perspectives stpps                   set ∞ second ﬂowbased techniques allow                                                        efﬁciently solve dual lp problem mccp  examining dual mccp closely notice strong duality theorem yields value optimal solu  constraints involving potentials nodes tion original primal lp problem stpp  difference inequalities form lu vpu − pv ≥  −cu v   pv − pu ≤ cu vlu v        section deal stpps having piecewise                                            linear convex preference functions utilitarian objective  resemble inequalities arising stps bene function show value optimal solution  ﬁcial differences notice lu v equal          u v                                       used iteratively construct required optimal      inequalities directly correspond schedule entirety  simple temporal constraints general case      lu v ≥                  lu v              reinterpret     indicat    designing gadgets  ing “amount simple temporal constraint  pv − pu ≤ cu v violated” dual introduce combinatorial structures called gad  mccp allows minimize positive linear combination gets used later paper handle stpps  lu vs weight corresponding lu v piecewise linear convex preference functions gadgets                                                                                                           positive capacity uu v reinter turn built using basic building block figure   preted minimizing “a positive linear combination consider designing gadget ≤ xv − xu ≤  violate each speciﬁed simple temporal preference function feasible region                                                        dicated figure positive slope    note cu v cost associated edge u v  allowed negative—maintaining complete generality introduction gadgets partly inspired tech  difference inequality arising stps           niques used morris et al                                                     ijcai                                                     ∞                 ∞      cost                                    preference                                                                                                                                                                                          xj xi                                                                                                                                                                     op                                                                               sl                                                                                                                                                                              xv xu                                                                      sl                                                                                         op                                                                                                                                           xi                       xj                            ∞                             ∞                  ∞      xu              xv                                     ∞                                                                                                                                                                                                       xj –y                                                                 preference  figure  shows combinatorial structures relevant preference                        preference                                                                         –y  functions negative slopes three diagrams shown            direct analogy figure                                                         figure  diagram shows example piecewise linear                                                        vex preference function appropriate landmarks lengths  xv − xu   xv − xu   ignoring additive deﬁned second diagram shows intermediate variables  stants preference function equivalent cost func introduce xj xi shows hard  tion shown figure cost function positive simple temporal constraints add consecutive vari  modeled using hard constraints ables created edge diagram shows slopes  ≤ xv − xu xv − xu ≤ soft line segments corresponding intervals simply deﬁned                                                        original preference function diagram shows  straint xv − xu ≥ cost violation   unit equal figure  required examples kinds preference functions like                                                        struct corresponding each interval each case preference  mccp representation dual formulation prob value  origin increases decreases linearly  lem shown figure using similar arguments certain value preference value assumed  figure  design gadget ≤ xv − xu ≤ −∞ directly corresponding gadgets figures    preference function feasible region indi  cated figure negative slope −s  xv − xu   xv − xu                         elaborate example dual formulation stpp                                                        piecewise linear convex preference functions mccp    stpps piecewise linear convex                   argue optimal solution new                                                        problem additional variables yields optimal     preference functions                               lution original problem key insight stems  section build ﬁnal algorithm solving fact piecewise linear convex preference func  stpps piecewise linear convex preference functions tion slopes line segments deﬁned func  utilitarian objective function key idea al tion monotonically decreasing left right  gorithm involves transformation given stpp sider edge  xixj associated prefer  preference functions limited types fig ence function fet let landmarks deﬁned fet                                                              ures   transformation works follows rr rk  let corresponding intermediate vari                                                                 ee                                             fet                     piecewise linear convex preference function andcor  ables        ke figure  example  responding intermediate landmark function slopes lines segments deﬁned fet intervals  add new variable difference consec rere rere                                                                      ke  ke monotonically decreasing  utive variables constrained  length property standard arguments                            corresponding interval associated preference sociated optimality greedy algorithm solv  function designed direct correspondence ing “fractional knapsack problem” follows op  slope fet interval figure  illustrates                            eye ye                                                        timal setting intermediate variables   ke  process single preference function mccp repre                     ∗e                                                                    values xi xj ← minr −rxj −  sentation new problem built simulating pref ∗e ← ∗e  − rex − ∗e y∗e ←                                                                        min                  ke  erence functions positive negative slopes using ∗e                  ∗e                                                             minr   −    xj −     figure   gadgets figures   respectively figure  presents ke− ke    ke−        ke−                                                        example values xi xj best    simplicity assume preference func way set intermediate variables exhaust slack  tion deﬁned interval example figure  difference consecutive pair intermediate  taken specify preference function xj −xibutalso variables going pair left right  implicitly constrain xj − xi rr                                                                     note use hard constraints purpose   note ﬁxed xi  lbxixj  figure                                                     ijcai                                                                                              –x–x                                                                                                                                                             ∞                                                                                      ∞  ∞                                              ∞        xi                        xj                                                ∞                                                                                             ∞                                                            ∞                         ∞  ∞                                                                                  ∞                              xj                                                                                                                                                                                                                                                               xi          xj                                                                                 figure  illustrates values xi xj  opti  figure  topleft diagram shows example stpp hard mal way set intermediate variables exhaust slack                                                        consecutive pair intermediate variables going  simple temporal constraints piecewise linear convex pref            −      erence functions bottomleft diagram shows intermediate left right xj xi   example ﬁrst  variables introduced each preference function hard sim way setting variables diagram exhausts                                                        leftmost slacks creating total value  −    ple temporal constraints dark nodes indicate newly    −       −        −  added variables righthand side diagram shows mccp                                                                                           equal true value pref  representation problem dark lines indicate edges en  −     code different pieces corresponding preference functions erence function xj xi   note way  clarity hard simple temporal constraints ﬂank dark setting intermediate variables leads nonoptimal value  edges shown encoded explicitly               example second way diagram total preference                                                        equal −    −   −                                                           −   −    optimal setting intermediate variables completely  actual preference value point  determined values assigned endpoint variables  xi xj intermediate variables par                                                        solving ﬁnal stp using shortest path computations  ticipate constraint original problem optimal                                                          crucial step process replace  solution original stpp obtained simply tak                              ing projection optimal solution new stpp arbitrarily chosen preference function eh appro                                                        priate simple temporal constraint optimal solu    figure  presents algorithm reporting value                       ≥ v∗  optimal solution given stpp piecewise linear tion new problem value  essentially  convex preference functions utilitarian objective func standard backtrackfree search algorithm                                                      utilizes procedure figure  iteration suppose  tion argue fact value optimal               x                                                           eh   associated edge  easy  solution efﬁciently construct required             −  ≥  optimal schedule suppose preference functions requirement eh    fact equivalent                                                        simple temporal constraint xi xj  stpp let fe tfe fek tlet   ∗                                      ∗    ∗                                        optimal schedule let value semiconvexity suppose eh non                                                        negative integer range consider  idea replace preference functions stpp                              −   ≥                                                        simple temporal constraint equivalent eh     additional simple temporal constraints              serve rule nonoptimal solutions each itera examine plus value optimal solu                                                        tion smaller problem incorporates new simple  tion replace arbitrarily chosen preference function                                                                  temporal constraint instead eh  equal value   eh   simple temporal constraint optimal  solution new problem preference func optimal solution original problem                 ≥  v∗                                  newly added simple temporal constraint  tion value    remaining smaller problem                                                               replace eh   easy ranging possi  respect number preference functions                 follow procedure replace arbitrarily cho ble values viz  able                                                        ﬁnd appropriate cutoff value—the corresponding simple  sen preference function simple temporal constraint                                         forth iterations left temporal constraint replace function eh   stp—any solution value ≥ v∗ running time complexity figure  dominated  nonoptimal solutions ruled op solving intermediate mccp step  figure   timal solution original problem obtained simply                                                                                                                     feh integral scale num    assume additive constants arise transfor bers appropriately indicative precision  mations involved like figure  appropriately factored numbers appearing range function                                                    ijcai                                                    
