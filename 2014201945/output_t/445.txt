          efﬁcient failure detection mobile robots using particle filters                                 gaussian process proposals                 christian plagemann             dieter fox          wolfram burgard                    albertludwigsuniversity                         university washington            department science            department science  engineering                   freiburg germany                                  seattle wa usa     plagemburgardinformatikunifreiburgde                   foxcswashingtonedu                        abstract                          proposed paper propose alterna                                                        tive approach gaussian processes gp used      ability detect failures analyze learn proposal distributions represent informed guesses      causes preconditions truly au   failure mode parameters demonstrate      tonomous mobile robots especially online fail   gp classiﬁcation used predict discrete failure      ure detection complex task effects modes gp regression used model continu      failures typically difﬁcult model ous failure parameters gaussian processes provide      resemble noisy behavior faultfree predictive distributions including predictive uncertainties      operational mode extremely low apriorilike  readily used proposal distributions parti      lihood failures poses additional challenges cle ﬁlter implementation including recent sensor      detection algorithms paper present measurements received robot proposals      approach applies gaussian process classiﬁca seen approximation optimal proposals      tion regression techniques learning highly spective state variables      effective proposal distributions particle ﬁlter does require additional hardware      applied track state inertial sensors bumper rings expensive      result efﬁciency robustness state es unfavorable certain domains aerial      timation process substantially improved prac blimps proposed algorithm implemented      tical experiments carried real robot real robot executed realtime discuss      demonstrate capable detecting results test runs realistic scenarios      collisions unseen obstacles compared achievable detection rates pose track      time estimating changing point contact ing quality optimized standard particle      obstacle                                     ﬁlter implementation informed proposals                                                          paper organized follows discussing related    introduction                                       work particle ﬁlters sequential state estima  detection reaction unforeseen failure events tion failure detection section  gaussian process  fundamental ability autonomous systems im proposals introduced section  followed exper  proper treatment situations cause loss control imental results  possibly harm environment  sider example mobile service robot collides  related work  low doorstep planetary rover hits unforseen small close coupling mobile environ  rock situations mobile robot able ment makes hard detect abnormal behavior using instan  detect unexpected event quickly infer cause taneous statistical tests tracking possible failure  event order react appropriately successful modes time dearden clancy  rea  previous approaches online failure detection problem son probabilistic state tracking techniques applied  based sequential montecarlo method typi problem particle ﬁlters represent belief  cally track multiple modes parallel state set state samples thrun et al  cide probable crucial problem  particle ﬁlter based approaches fault diagnosis  samplingbased approaches especially realtime scenarios typically modeled nonlinear markov jump  lies high dimensionality state space process driessen boers  dynamic mixture  tracked low frequency unpredictability linear processes freitas et al  lookahead par  failure events increase efﬁciency samplebased ticle ﬁlter introduced work approximates  representations different techniques lookahead sam optimal proposal distribution considering recent  pling freitas et al  risk sensitive sampling thrun sensor measurements contrast work focuses  et al  hierarchical sampling verma et al  case discrete failure modes continuous failure                                                    ijcai                                                                                                          include discrete failure mode ft continuous failure                                                        parameters ot remaining robot’s state xt                                                        assume commonly used constant failure rate model                                                        ng et al  failure event does                                                        depend rest right diagram fig                                                        ure  shows underlying graphical model ob                                                        servations independent failure state ftot given                                                        state xt robot observation model simpliﬁes  figure  graphical model dynamic ab pzt  stpzt  xt transition model factor  stract view left detailed form right ized                states split include discrete failure pst  st−ut−pxtftot  xt−ft−ot−ut−   mode ft failure parameters ot robot’s state xt                                                               pft  ft− · pot  ftxt−ot− · pxt  otxt−ut−                                                                                             parameters benanzera et al  combine consistency      failure event model failure parameter model robot motion model  based approaches livingstone particle constant failure rate model states failure events  ﬁlter based state estimation techniques verma et al  distributed exponentially depending failure rate parame  introduce variable resolution particle ﬁlter failure ter λ  tection approach build abstraction hierarchy         −    −λ·t−t˜  models models consideration build partition          ft                                                                                       ˜  complete state space hierarchy deﬁned denotes time failure event eas  terms behavioral similarity different kind model ab ily shown model mean time                                                                                  straction hierarchy based explicit model assumptions failures mtbf λ  realistic failure rates λ  developed plagemann et al  detect failures model results extremely low failure probabilities  line approaches deal time efﬁciency ﬁlter iteration assume example mean time  min                                                      utes collisions service robot unseen obsta  particle ﬁlters include kwok et al  realtime                    constraints considered single models  cles implies λ   ﬁlter    gaussian processes widely studied ma frequency δt  seconds yields failure probability  chine learning community excellent introductions pft ¬ft− ≈  iteration  given mackay  rasmussen  gi small value just   particles jump  rard et al  present gaussian process based model failure mode average need ex  multiple step ahead prediction time series classiﬁcation tremely large particle set risk failures remain  models discussed neal  schwaighofer et al undetected problem ampliﬁed fact   present application gaussian processes local discrete failure mode sampled  ization using signals wireless phone network    unknown continuous failure parameters general                                                        prior knowledge parameters randomly    sequential state estimation                        occurring failures assume uniform distribution                                                                                             temporal evolution dynamic systems mobile      ot  ftxt−ot−    ominomax ot      robots described using graphical model depicted certain interval note model applies  left diagram figure  ﬁgure denotes                                                      case transitions failure state  state time zt stands received sensor                                                        evolution failure parameters failure state typi  measurements ut issued control command given  modeled independence assumptions state sys cally governed peaked distribution similar  tem evaluated recursively using bayes filter motion model robot section   malism thrun et al                            model evolution collision parameters based rigid     pst  ztut−                                  body dynamics model able track collisions sufﬁ                                                      ciently accurate initial collision parameters      ηt pzt  st pst  st−ut− pst−  zt−ut− dst−                                         estimated main focus work        observation model transition model recursive term improve detection failure events efﬁciently  particle ﬁlters widely used sample based implemen estimate initial parameters  tation recursive ﬁlter represent state address problem low sampling probabilities                                         set weighted samples  st wt  important parts state space thrun et al   samplebased representation integral equation  troduced risk sensitive particle ﬁlter incorporates  simpliﬁes ﬁnite sum samples resulting learned risk function force ﬁlter likely  previous iteration transition model observation important states approach ensures reasonable  model applied directly predict weight indi samples important failure modes  vidual samples respectively                          adapt speciﬁc situation robot sam                                                        pling decision propose use learned    modeling failure events parameters           proposal distributions able make informed guesses  dynamic systems inﬂuence external inter discrete failure mode continuous failure pa  nal failure events state st split rameters online                                                    ijcai                                                      datadriven proposal distributions               easily sampled provide transition prob  sequential importance sampling scheme doucet abilities needed weight correction described   arbitrary proposal distribution used di  rectly sample relevant areas state space long  gaussian processes proposals discrete  possible states nonzero possibility continuous state variables  ing chosen importance weights particles                                                        gaussian processes powerful tool learning rep  adjusted appropriately proposal distributions depend                                                        resenting predictive distributions nonlinear func  recent sensor measurements features ex                                                        tions rasmussen  proven successful  tracted separate algorithms typically denoted data                                                        solving classiﬁcation problems given training set pri  driven proposals detectormediated proposals khan                                                        ors function learned gaussian process model  et al  proposals aim approximating opti                                                        allows predict function values new input locations  mal proposal pst  st−ztut− fully includes                                                        supplies predictive uncertainties ﬁrst introduce  current sensor measurement zt process model                                                        regression classiﬁcation models role  deﬁned equations   weight particle time                                                        general failure detection setting described sec                                                         tion  speciﬁc application                                         pst  zt pzt  stzt− pst  zt− detection tracking collision events mobile robots  wt                                                             π st zt      p zt zt− π st zt   nonlinear regression                               η                    assuming nonlinear functional dependency                                        dimensional input vectors yyn realvalued targets              pzt   ps    ps     zt−           ·             t− ·    t−            tn ti  gyii independent error           η                                 πs      zt   πs     zt−    terms i task predict future targets tnj new                     t−          t−                                                            input locations ynj idea gaussian processes                                        wi                                           t−          view target values ttnj jointly gaussian dis                                            tributed  jdimensional mean covariance                                                                               ·  ·   · xt ot xt− ·         covt ky  speciﬁed kernel distance function           η wt−  zt st                                    πxt  ot xt−          input vectors predictions new query point                                                        yn performed conditioning known                            ft  ft−  · ot ft xt−ot−             target values ttnseeneal  mean μ                                                                                                                                                                    πf ft  ft    πoot  ft ft              variance σ gaussian predictive distribution                                                        turn  π proposal distribution forto transition model                           −  deﬁned equation  failure event model exchanged  μ  etn  ttnk                                                                                                           −  πf failure parameter model exchanged πo    σ   tn  ttnv  −        πf πo learned proposal distributions                                                                    ×                                      discrete ft continuous ot respectively control covariance matrix given targets                                                                                                       commands ut omitted clarity straight ndimensional vector given target values  forward include normalizing factor η constant ndimensional vector covariances new target  particles ifurthermoreft denotes arbitrary feature value tn known targets ttn  vector extracted time feature vector ft failure detection setting use regression  functions used task long model predict continuous parameters new failure              π     π                                                                                  assumptions                                       events extracted features ft input vectors    •                                       failure parameters ot targets given training set      πf  ft     stzt−       quantities properly chosen covariance function kwe    • πoo  ftft for po  stzt−  compute predictive distribution πoot  ftft                                                             hold means possible failure states μ σ detailed equations   normal dis  assigned nonzero probability chosen visually tribution naturally meets requirements proposal dis  speaking equation  states each ﬁlter iteration tributions named previous section sampled  particle weights multiplied current obser directly supplies likelihoods sampled values                                                    inﬁnite support assigns nonzero  vation likelihood pzt   correction terms                                                      likelihoods  learned proposal distributions calculate                                                      important aspect left far  correction terms speciﬁc sample st  divide prob choice covariance function parameters  abilities deﬁned equations   likelihoods ac set covariance function plays important role                                      cording state variables ft ot gaussian process framework represents prior knowl  drawn πf πo precondition learned edge underlying function changing form  proposals availability likelihoods sam parameters control generalization behavior  pled values section gaussian pro smoothness predictor common choice covari  cesses ensure nonzero probability assumptions ance function mackay thatisalsousedinthis                                                    ijcai                                                                                                                                        collision                                                      regression result                  collision                                            training data difft                                                                                                                                                                                                                                                                                                                                                                                                                                                               diff  vt                                                                                                                                                                                                                                                              contact  point                                                                                                                                                                                                                                                                                                diff vr     diff vt                                                                                                                                                             diff vr                                                              diff vr ms    figure  collision event training set feature values mapped class instances left learned class prob  abilities πf ft using gaussian process classiﬁcation middle learned regression model collision parameters  visualized cut through dimensional pdf maps velocity deviations contact points collision right    work                                               additional hardware like bumpers inertial sen                                                      sors learning collision event proposal pro                                m       y       · exp −          −           posal contact point robot obstacle                          wd yd  yd                                                    achieve excellent results simple features based                                                        rotational translational velocity robot  constant component nonlinear stationary term use input gaussian process classiﬁer  depends distance input points dimensional feature vector ft Δvt ΔvrwhereΔvt  parameters covariance function called hyper difference translational velocity estimated  parameters gaussian process ﬁxed particle ﬁlter estimated local laser scan  maximizing likelihood given data points matching furthermore Δvr difference rota  fully bayesian treatment integrated using tional velocities respectively training set  automat  parameterspeciﬁc prior distributions experiments ically labeled trajectories generated simulating ran  reported section  employed strategy dom collisions different obstacles using simu  gamma priors hyperparameters set priors lator gazebo koenig howard  left  favor smooth regression functions avoid overﬁtting diagram figure  depicts gathered data points mid  training data analytically intractable integration dle diagram ﬁgure shows learned class prob  hyperparameters approximated using markov chain sam abilities depending velocity differences described  pling prediction results cached ﬁnegrained seen left diagram Δvt negative  grid                                                 nearly “collision” data points corresponds                                                        fact robot slowed collision occurs    binary classiﬁcation                             data points “no collision” spread widely  binary classiﬁcation problems consistently modeled separate “collision” data points noisy  framework including binary target ti sensor measurements imperfect labeling collision  realvalued latent variable li             events makes classiﬁcation problem hard                                                        stressed use classiﬁer proposal                                                       distribution collisions collision detector                 pti                                                    e−li                      directly features ambiguous allow                                                        perfect instantaneous classiﬁcation experiments real  known logistic model links class proba robot section  showed yields high detection                                   bilities real values neal   latent variables rates low number false alarms  given gaussian process prior regression  setting predictions class probabilities performed given collision event continuous collision parame  predicting corresponding latent variables evaluat ters estimated simulate effects sys  ing equation  failure detection problem tem continue tracking process task  use feature vectors ft inputs binary failure labels ft fully track pushed obstacle time simple model  targets predicted class probabilities new features                                                     abstracts obstacle’s geometry exact pose  directly deﬁne failure event proposal πf ft ft  proven sufﬁcient effects robot                                                        collision unseen obstacle represented ob    learning predict collision events                                                        stacle mass contact point       parameters                                       robot collision parameters  section apply sequential failure detection ap learn proposal distribution πootft parame  proach described hard problem collision ters ot using velocitybased features simulated  tection mobile robots noisy sensor measurements training set described gaussian process                                                    ijcai                                                                                                                                                                                                std pf                   estimated heading                                       gppf                       true heading                                                                 collision likelihood                                                                    true collision                                                               estim contact point                                                                                                                                                                                                                                                                                                                                                                                     average  trajectory error                                                                                                                                                                                                       number particles                     filter iteration   figure  correctly figure  average deviation figure  estimation details correctly detected   detected collisions triangles estimated trajectory collision including manually labeled true collision event   estimated trajectory solid line ground truth meters varying ﬁlter iteration corresponds  seconds   ground truth dotted number particles    gression technique right diagram figure  depicts cal abstraction computing impulse resulting  cut through learned dimensional distribution col forces ultimately inﬂuence robot’s state vec  lision parameter contact point obstacle tor time model describes point  robot point contact measured contact robot obstacle changes  meters center robot’s right time deﬁnes transition model failure pa  seen diagram unexpected clockwise ro rameters equation  experience physical  tations Δvr   robot mapped positive values model achieves best balance accuracy efﬁ  contact point corresponds collision ciency simpler models fail handle important test cases  righthand side robot                          complex models free parameters                                                        evaluated real time    experimental results                                 quantitative evaluation failure detection  implemented real activmedia pi   tracking performance  oneer dx robot extensively tested ofﬁce quantitatively evaluate usefulness approach  environment presenting experimental results compared particle ﬁlter implements pro  scribe motion model implemented localization cess model standard uninformed proposals described  model focus work section  parameters standard ﬁlter op  brief overview                      timized best tracking performance failure detection    widely used motion model mobile robots rates ensure comparability recorded data manu  based wheel encoder measurements thrun et al ally steering robot through environment arranged   information actual control collisions boxes milk  command taken control input ut− box lemonade bottles obstacles placed  mal circumstances results accurate predictions arbitrary positions obstacle heights low  formed movement inﬂuence failures like col laser sensor detect figure depicts typ  lisions wheel slip motion wheels ical test run successfully tracked pose  consistent robot’s motion robot detected collisions recorded  appropriate model situations efﬁ data set tested improved particle ﬁlter gaussian  cient evaluated online based simple rigid process proposals gppf standard particle ﬁl  body dynamics plagemann et al  model ter std pf different parameter settings each ﬁlter  robot rigid body dimensional plane repre executed  times each parameter setting  sented set constant values variable state vector table  gives failure detection performance dif  xt posxposyposθveltvelr includes trans ferent ﬁlters detection rate deﬁned number  lational velocity velt rotational velocity velr each correctly identiﬁed failures relative number  ﬁlter iteration wheel thrusts calculated actual false positives rate false alarms rela  velocity command sent motors tive number detections ground truth collision  state vector computed numerical simulation using events manually entered collision counted  physical relationships forces acceleration correctly detected marginal failure likelihood ex  speed space limitations refer witkin ceeded threshold Θ maximum ﬁlter iterations  baraff  details rigid body physics  seconds true failure event threshold Θ  model collisions rigid object given point optimized independently each ﬁlter allow unbiased  contact simulated using type physi comparison                                                    ijcai                                                    
