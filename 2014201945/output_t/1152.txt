                 logic program characterization causal theories∗                                               paolo ferraris                                     department sciences                                        university texas austin                                          university station                                             austin tx                                              ottocsutexasedu                        abstract                          says boolean ﬂuent normally true frame prob                                                        lem mccarthy hayes  solved causal logic      nonmonotonic causal logic invented mccain     using rules      turner formalism suited repre      senting knowledge actions deﬁnite                   pt ⇐ pt ∧ pt                                                                                                              fragment formalism implemented                   ¬pt ⇐¬pt  ∧¬pt      reasoning planning called ccalc       theorem mccain shows trans  rules express inertia ﬂuent true false time      late deﬁnite causal theories logic programming normally remains true false time       answer set semantics opens  equivalence ﬂuents actions expressed                                                        equivalences head instance express      possibility using answer set programming                          implementation theories paper actions constants synonymous use causal                                                        rule      propose generalization mccain’s theorem                                extends directions applicable              ≡ ⇐                       arbitrary causal theories deﬁnite second rules kind used semantically characterize      covers causal theories general kind relationship modules modular action      nonboolean ﬂuents            scription language mad lifschitz ren forin                                                        stance erdo˘gan lifschitz  erdo˘gan et al     introduction                                       use equivalence kind state pushing box                                                        monkey bananas domain specialization  causal logic mccain turner  formalism general action “move”  knowledge representation especially suited representing language causal theories extended  effects actions causal theories syntactically simple giunchiglia et al  handle multivalued constants  general consist causal rules form constant assume values different true                        ⇐                        false instance express fact object                                                        location locxl advantage   propositional formulas intuitively ing locxl instead boolean ﬂuent locx  rule  says cause true locxl implicitly expresses commonsense fact  true instance causal rule                   object exactly position                                                          useful causal rules – formula                       pt ⇐                                                                          “⇐” boolean literal nonboolean atom  used effect action boolean locxlor⊥ rules kinds called  ﬂuent pifa executed time cause deﬁnite rules important causal theory  hold time important concepts commonsense consisting deﬁnite rules converted equiva  reasoning easily expressed rules kind lent set propositional formulas mccain turner   instance rule form                      giunchiglia et al  models computed                        ⇐                           using satisﬁability solver translation used im                                                        plementation deﬁnite fragment causal logic called  “if true cause this” expresses causal calculator ccalc causal calculator  tuitively true default particular causal applied problems theory com  rule                                                  monsense reasoning lifschitz et al  lifschitz                         pt ⇐ pt                      akman  et al  campbell lifschitz  lee                                                        lifschitz     ∗this research partially supported national science  foundation grant iis                      httpwwwcsutexasedu˜tagccalc                                                     ijcai                                                       hand rule form  deﬁnite formation causal theories clausal form logic pro  method computing models described gram shown section  section  describes  applicable presence rules             make compact clausifying causal theories dis    method computing models causal cussedinsection  ory uses converting logic program  swer set semantics gelfond lifschitz   causal theories  translation discovered mccain  modular                                                        review  general syntax semantics  applied causal theory rulebyrule converts                                                        causal theories — allow multivalued constants —  instance causal rule                                                         giunchiglia et al                      pt ← ¬pt                        multivalued signature set σ symbols called                                                        constants set symbols domc domain                                     usual way expressing true default associated each multivalued atom string  logic programs gelfond lifschitz  section  form  vwherec ∈ σ ∈ domcamulti  answer set solvers — systems ﬁnd answer sets valued formula built atoms using connectives ∧  logic programs — used ﬁnd models def ∨ ¬  ⊥ formulas forms ⊃ ≡  inite causal theories do˘ganda˘g et al  seen abbreviations usual way  hand translation applicable boolean causal multivalued causal rule expression form  ories consisting deﬁnite rules                     ⇐  gwheref    formulas formulas    paper propose translation general called head body rule respectively  mccain’s applicable arbitrary causal theories multivalued causal theory set causal rules  including multivalued theories containing nondeﬁnite rules multivalued interpretation σ total function  price pay generality logic pro maps each constant σ element domcan  grams produced translation programs nested interpretation satisﬁes model ofanatomc   expressions programs deﬁned lifschitz et al icv deﬁnition satisfaction model formu   converted disjunctive programs polyno las general form follows usual rules proposi  mial time price introducing additional atoms pearce tional logic                                              et al  process implemented conse semantics causal theories giunchiglia et al  quently translation allow compute mod  deﬁnes interpretation σ model  els arbitrary causal theories using answer set solvers ap causal theory  follows reduct relative                                                 plicable disjunctive programs dlv gnt set heads rules bodies             cmodels                                             satisﬁed say model    translation like mccain modular model  clear replacing head body  deﬁned steps rule given causal causal rule equivalent formula doesn’t change  theory converted set rules clausal form models causal theory                                                          instance following causal theory                   ∨···∨ln ⇐                                                                         domc                li                  each   literal using giunchiglia et al            ¬c ∨  ⇐  proposition  each rule  replaced logic pro                                          gram nested expressions program          ¬c ∨  ⇐  ”small” – usually linear size input                                                        reduct relative    addition show steps ef  ﬁciently “clausiﬁcation” causal theory ¬c ∨   ¬c ∨    increase size agree                                                                           ≡    troduce auxiliary atoms converting clausiﬁed causal equivalent   model                                                                                       jc  theory logic program show rules reduct interpretation itisthen                                                                                                         atoms dropped special cases instance clear model  interpretation                                                                                            case causal theories boolean signature model causal theory model  simpler deﬁnition translation optimizations reduct                                                                                             ¬a  allow translate causal theories heads literals literal atom negation aruleof                                                                         ≥       ⊥ nondisjunctive logic programs follows form   literals said                                                                                                 ≤   class causal theories problem existence clausal formitisalsosemideﬁnite                                                                                ⊥    model class np                                 deﬁnite head   atom causal    review syntax semantics causal theories theory clausal form semideﬁnite deﬁnite rules  logic programs sections   respectively trans clausal form respectively semideﬁnite deﬁnite                                                          constant binary domc itisalsoboolean    httpwwwcsunipotsdamde˜torstennlp         domct  signatures formulas causal rules    httpwwwdbaituwienacatprojdlv            causal theories binary boolean contain binary    httpwwwtcshutfisoftwaregnt               respectively boolean constants case binary    httpwwwcsutexasedu˜tagcmodels            signature difference deﬁnite semideﬁnite                                                    ijcai                                                     causal rules essential negative literal ⊥    set  rewritten atom instance underlying signa answer set Π minimal set sense set  ture boolean ¬c  equivalent  case inclusion satisfying Πx   boolean constants write  simply expression form ↔ stand rules  causal theory boolean signature doesn’t contain ← ←   atoms form  heads bodies rules  essentially classical original deﬁnition causal  main translation                                 theories mccain turner   theories consider multivalued signature σ formula  mct theories                                         signature deﬁne ne nested expression ob    instance following mct theory signa                       ∧               ∨                                                 tained  replacing each comma    ture                                                 semicolon ¬                      ∨¬q ⇐                            ready deﬁne translation given                                                                                         Π                           ⇐                    causal theory clausal form deﬁne program                                                        nested expressions obtained  interpretation deﬁned ipiqt model • replacing each causal rule                         case  ∨¬q model                    ne                                                              ln ←  lln ln  interpretation model ifipt                                                                                                        iqf  model reduct  p∨¬q                                                   ipf                 ∨¬q                each stands literal complementary        reduct                    model                                                          • adding constant ∈ σ distinct                                                            v ∈ domc    logic programs                                                       rules                                                                      ↔            ¬c         answer set semantics originally deﬁned gelfond                 w∈domcv  lifschitz  logic programs simple                                                             ¬c  ¬c  v ←      v  form generalized times                                       view syntax semantics programs nested ex “big comma” used way big  pressions lifschitz et al  section words conjunctions  ”atom” ”literal” understood classical proposi according deﬁnition each rule  Πt  tional logic nested expression built literals using obtained corresponding rule three steps                          ⊥  place connectives  unary connective “not” • replacing each propositional connective corre  negation failure binary connectives “” conjunc sponding “logic program connective” excep  tion “” disjunction                              tion negation head    logic program rule nested expressions                                                          •  form                                                      prepending body rule                        ←                             • adding “excluded middle hypotheses” body                                                            rule  nested expressions causal rules  called head rule body finally logic step “compensates” replacement ∨  program nested expressions set logic program corresponding “stronger” logic program connective  rules                                                clear translation linear upper bound    answer set semantics deﬁnes consistent set size domain each constant instance  literals set doesn’t contain ¬a binary  atom answer set logic program rest rules   relate literals containing  section stands consistent set literals literal stant needed establish – relationship                                                                                           Πi  nested expressions Π logic program models subsets satisfy     deﬁne satisﬁes symbolically  instance  Πt  cursively follows                                   ¬c ←         •  ∈                                                           ¬c ¬c     •    ⊥                                 ¬c ←                                                                                      ¬c    ¬c     •                                                                                                                                ↔¬c    ¬c     •    gand                                                                 ↔¬c    ¬c                    •                                                                     ↔¬c    ¬c                 Π  Π               ←    Π  finally satisﬁes        rules        ¬c ¬c ←                                                                           reduct Πx Π relative result replacing ¬c ¬c ←    maximal subexpression Π form ¬c ¬c ←                                                       ijcai                                                      Πt                                   reducing translation                                                                          Π         ¬q ←  ¬p ¬p    simpliﬁcation depends parameters             ←       ¬q  ¬q                       • asets  atoms σ atom occurring                                                                           ↔¬p                                 belongs                                                          •                   σ                                    ↔¬p                                   aset   constants rule                                                            taining constant head semideﬁnite                    ↔¬q                                                                             each constant cletnc denote number atoms                 ↔¬q                                                        containing occur deﬁne logic pro         ¬p ¬p  ←               gram Δt obtained Πt         ¬q ¬q  ←                • dropping rules  ∈                                                              v ⊆    theorem expresses soundness transla                                                          • replacing each constant nc    tion identify each interpretation complete set                                                            rules  set rules  literals σ satisﬁed interpretation                                                                                 ¬c  ←        theorem  causal theory clausal form              cw∈swv  models identical answer sets Πt                                                             ∈ domc  ∈ sand                                             ¬c      instance answer set          •   ¬c  model  adding                             ¬p  fq¬q                    ⊥←                   answer set                                             cw∈s  model                                                             each constant nc      each causal rule  form ⇐   drop “excluded middle hypothesis” denote Δt ∅ simply Δt easily  corresponding rule  Πt  logic programs Π notice Δt ∅ contains atoms clearly  Π strongly equivalent program Π Π ∪ Π contains atoms Δt sΠt takings smaller  answer sets Π ∪ Π lifschitz et al  larger makes Δt contain generally sim                                                        pler rules  proposition  literal nested expression  rules  impose condition similar lefttoright  onerule logic program                            half  limited atoms rule                                                       expresses translation following fact causal                    ←                                                      theories distinct atoms                                                          occurs causal theory model maps  strongly equivalent                                                        instance domc                                                                                                                         ←                               occurs  model maps                                                          occurs mapped    instance second rule  rewritten toasshownbyexample                                                          instance  Δt                     ←                                                         ¬c ←       answer sets don’t change                                              ¬c ¬c     dropping terms form li li  ¬c ←    usually sound instance                       ¬c ¬c    rule mct causal theory                                            ¬c ←                        ∨¬p  ⇐                                      ¬c ←                                                             ¬c ¬c ←      models expect corresponding logic  program Πt                                             set atoms subset ¬a  ∈                                                        complete contains exactly literals           ¬p ←not  ¬p ¬p   ¬a each ∈              ↔¬p                                                                  σ                                                        theorem   let  causal theory let set            ↔¬p                                    atoms σ atom occurring belongs    ¬p ¬p  ←                    let set constants σ rule                                                        containing constant head semideﬁnite  answer sets drop disjunctions → ∩a ¬a  ∈ – correspondence  body ﬁrst rule  logic program models answer sets Δt  answer sets ¬p  ¬p  instead    complete                                                    ijcai                                                       models original causal theory look • replacing head each rule ⇐ df  ing unique interpretation satisﬁes each complete •                                  Δ                                     adding each subformula occurs head  answer set      uniqueness interpre   rules ⊗ denotes binary connective  tation guaranteed theorem instance ¬c    ¬c  complete answer set    – df ≡  ⇐iff   atom  ⊥  corresponds interpretation maps  – df ≡¬dg ⇐iff form ¬gand  model                                – df ≡  dg ⊗ dh ⇐iff   form ⊗    program Δt incomplete answer sets  don’t correspond interpretation intuitively equivalences heads rules                                                                                              eliminated Δt adding constraint    recursively deﬁne each atom occurring equiv                                                                                 ⊥←        ¬a                      alent  translation clearly modular                                              mct theory  mct theory  ∈                                      instance mct rule    notice constant ∈ occurs head                                                                          ∨ ∧¬r ⇐  “intrinsically disjunctive” rules Δt  ∈ each rule  head nondisjunc                                                        transformed following  mct rules  tive comes semideﬁnite causal rule  Δ                                                 doesn’t contain rules  head contains               dp∨q∧¬r ⇐  rules   strongly equivalently        ≡ ∨     ⇐  rewritten nondisjunctive rules particular possi p∨q∧¬r  q∧¬r  ble translate semideﬁnite causal theories nondisjunc  dq∧¬r ≡ dq ∧ d¬r ⇐  tive programs size consequence           d¬r ≡¬dr  ⇐  problem existence model semideﬁnite causal                                                                           da ≡ ⇐      ∈p  theory class np    binary constant atoms theorem  causal theory signature σ                                 Π                                                                        belongs  rules   constant → iσ – correspondence models  replaced Δt single rule  head models    dropped particular mct theory      σ                               Δ  σ              rule causal theories form   translated logic program  basically   consisting just rules  rules    clausal form body     instance  Δt       three atoms head hard         ¬q ←        ¬p   ¬p            clausiﬁcation process described beginning                                        section linear applied              ← ¬q ¬q  complete answer set expected    related work conclusions                                                        mccain’s translation mccain turner  linear    clausifying causal theory                        modular translation applicable semideﬁnite mct  mentioned introduction translations theories σ bodies conjunction literals  previous sections applied arbitrary causal translation Δt σ similar mccain’s translation  theories ﬁrst converting clausal form way causal theories kinds outputs —  rewriting head each rule conjunctive presence rules form  — strongly equivalent  normal form breaking each rule           each sense translation generalization                  ∧···∧cn   ⇐                 mccain’s translation                                                          translation do˘ganda˘g et al  turns mct  ccn ≥  clauses rules                                                        theories called “almost deﬁnite” logic programs                        ⇐                                                   causal theory deﬁnite normal   giunchiglia et al  proposition  form Δt σ essentially strongly equivalent  reduction lead exponential increase translation causal theories normal form  size unless assume upper bound number general deﬁnite causal theories don’t  atoms occur head each single rule     know simple modular linear trasfor    propose reduction arbitrary causal theory mation arbitrary causal theories mct  causal theory head each rule ories deﬁnite causal theories  three atoms translation computed polyno future work include studying turn  mial time requires introduction auxiliary boolean ory modular action description language mad  atoms translation similar logic programs logic program require extending translation  pearce et al  mentioned introduction causal theories variables lifschitz  ﬁnding    denote each auxiliary atom df wheref simpliﬁcations translation  mula causal theory  causal theory  ob like investigate relationship  tained                                        causal theories logic programs aggregates turns                                                    ijcai                                                     
