          power demand queries combinatorial auctions                    learning atomic languages handling incentives                         sebastien´ lahaie     florin constantin       david parkes                               division engineering applied sciences                                 harvard university cambridge ma                                  slahaie ﬂorin parkeseecsharvardedu                        abstract                            extend earlier work providing preference elic                                                        itation scheme broad class languages called atomic      query learning models computational learn   languages includes xor special cases      ing theory clt adopted perform elic  nisan  formal study bidding languages      itation combinatorial auctions  addition validating ﬂexibility lahaie      cent elicitation framework demonstrated  parkes  framework new algorithm demonstrates      equivalence queries clt usefully sim   power demand queries instance know      ulated pricebased demand queries pa learning algorithm using just value equivalence      validate ﬂexibility framework queries      deﬁning learning algorithm atomic bid     main contribution characterize communica      ding languages class includes xor tion requirements vickreyclarkegroves vcg      handle incentives characterizing com come rule jackson  known sufﬁcient      munication requirements vickreyclarke    determining vcg outcome mishra parkes       groves outcome rule motivates extension  prove elicitation protocol vcg mech      earlier learning framework brings truth anism necessarily determines set “universal com      ful responses queries equilibrium     petitive equilibrium” uce prices result broadens                                                        understanding demand queries demonstrating    introduction                                       goal verify vcg outcome necessary verify  burst recent attention problem efﬁcient allocation set uce prices                                                        through simple extension demand queries universal  preference elicitation combinatorial auctions cas         auctions agents express values bun demand queries demonstrate extend exist  dles items blum et al  lahaie parkes  ing learning framework terminate uce prices  conen sandholm  santi et al  parkes  efﬁcient allocation  elicitation today recognized just important agents na¨ıve way handle incentives  computational problem simply run preference elicitation algorithm run  winnerdetermination nisan segal  cas po times each agent removed yields  tentially require agents people ﬁrms automated bidding information derive vcg payments  agents value exponentially large number different ucebased characterization motivates design exten  bundles indivisible goods determining value sion learningbased framework learner  single bundle hard sandholm     extend adjust leea obtains vcg payments    querybased elicitation parkes  conen sand single run algorithm  holm  agents able respond simple                                                                                             queries identifying preferred bundle given related work nisan segal  characterize  prices providing value speciﬁed bundle minimal communication requirements implementing  methods closely related “exact learn efﬁcient allocation consider incentives  ing queries” model computational learning theory large literature ascendingprice vickrey auctions                                                                    clt blum et al  fact typically learning parkes  survey largely motivated issues  methods right elicit valuations en costly elicitation recent auctions designed termi                                                                                                 tirely exactly exception lahaie parkes  nate uce prices mishra parkes   similarly  preference elicitation scheme avoids complete say elicitation algorithms vcg based  learning possible main contribution paper demand queries necessarily efﬁcient cases  explain simulate learning algorithm mem demandquery based algorithms known exponentially  bership equivalence queries elicitation algorithm inefﬁcient nisan segal  suggestive  value demand queries                        demand queries powerful generalconen sandholm  previously considered elic satisﬁes conditions ll special cases  itation methods terminate vcg outcome  xor lm   new work proof uce prices necessary bidding language expressive cas encode                                                                                 sufﬁcient vcg outcome valuation functions   → r≥ satisfy free dis  careful integration methodology elicitation meth posal hard xor expressive  ods polynomial query complexity                 lk   consider example valua                                                        tion places value  bundles representation    preliminaries                                      language valuation minimal min  purpose ca allocate set distinct imized valid representations follows  indivisible goods set agents each val sizelv denotes size minimal representation                                                      function representation exists  uation vi   → let Γ set possible allocations  good given agent aim                         ∗     ∗      ∗                   queries  efﬁcient allocation  sp     sn al                                       ∗              agents modeled “blackboxes” respond  location maximizes total value visi  deﬁni  tion agent valuations satisfy property externalities queries response query provides partial information  meaning agent cares bundle agent’s valuation function adopt queries  allocated agents valuations satisfy natural economic settings                                                        value query value query values agent bundle  freedisposal meaning vis ≤ vit  ⊆                                                         asks agent report exact value  normalized vi∅   bounded                                                                                     demand query  demand query demands  presents  stant   known center vis   ⊆ ∈ agents quasilinear utility agent bundle prices bundles  functions agent i’s utility bundle prices bidding language agent replies yes bundle                                                        bestresponse prices meaning − ps   uis  vis − ps                                                                                                                           maxt ⊆g vit  − pt  agent replies    bidding languages                                bundle makes strictly better prices                                                                       bidding language used encode communicate real vis  − ps   vis − ps  valued functions bundles instance universal demand query universal demand query uni  agent’s entire valuation function underestimate demands     sn presents agent prices  true valuation function bids ascendingprice cas bundles set bundles     sn  “bidding language” work center necessarily distinct agent replies yes bun  uses bidding languages quote prices agents dle presented bestresponse prices                                                        agent responds index bundle    formally bidding language consists syntax se          mantics allow encode value information vis  − pis   visj − pisj  terpret encodings consider class atomic lan note ∅ valid response demand query  guages atomic representation pair ⊆ note prices general functions  →                                                                                                       ≥    set bundles atomic bundles  → r≥ nonlinear bundles priced just items  realvalued function bundles values nonanonymous different agents face dif  atomic bundles alternate useful syntax list atomic ferent price bundle  bids atomic bid bundlevalue pair  interpreted value bundle ⊆ seman  ce uce prices  tics atomic language deﬁned through evalua cas preference elicitation scheme consider  tion function φl·  extends set bun generally operate converging competitive equilibrium  dles value bundle vs  φls ensures ﬁnal allocation efﬁcient  wellformed atomic language evaluation function satisﬁes                                                        deﬁnition  competitive equilibrium agents  following conditions                                          ∗     ∗      ∗                                                        allocation       sn prices  φ  wb ∈                             ∗                                                      satisfy  si ∈ argmaxvis − pis                                                                               s⊆g  φls  φls bs ⊆          ∗          pn                                                         ∈ argmax   pisi      bs  ∈  ⊆                                         s∈Γ                                              φls ∪  ≥ φls ⊆    s∗ constitutes ce ce prices say      ⊆                                        prices support allocation s∗ results later    important example consider family lan incentives need following concept              guages lkk  evaluation functionp language deﬁnition  universal competitive equilibrium                                                                             ∗  lk φks  maxs∈dksb   b∈s wb    allocationprice pair  constitutes competitive                                                                                                ∗  dks deﬁnes set ⊆  satisfy ≤ equilibrium agents s−i  ii ∪b∈s ⊆ iii ∩  ∅ ∈ st stitutes competitive equilibrium agents ni                                                                                ∗   elements dks decompositions efﬁcient allocation s−i items agents  atomic bundles easy φk ni ∈  fact hard show prices support added b˜ make value queries new                   ∗  efﬁcient allocation s−i agents ni ∈ additions appropriately set w˜b conditions  support efﬁcient allocations           v˜s ≤ vs ⊆ times                                                        v˜ underestimates    learningbased architecture                      outerloop  learning algorithm issues     elicitation                                        demand∅  v˜ prices quoted equal cur                                                        rent manifest bidding language  learning framework lahaie parkes                                                         response yes  ≤ vs − v˜s ≤   ‘learner’ converts individual exact learning algorithms ⊆ obtain morepreferred bundle  preference elicitation algorithms demonstrate counterexample follows simple  instantiate class atomic languages adaptation lemma  lahaie parkes   goal learning algorithm purposes ex                                                                   vs − v˜s  φ − φ b˜ w˜  actly determine unknown target valuation represented                                given bidding language number queries scales property means undiscovered                                                        atomic bundle ∈  b˜  derive atomic bundle  polynomially sizelv let space                      possible valuations case bounded normalized use subroutine presented algorithm   valuations satisfy freedisposal externalities recall upperbound agent values    exact learning computational learning theory liter                                                                                  ature typically uses membership equivalence queries algorithm  ﬁndnewatomic                                                           construct prices  membership query domain just value query learn              ½  ing algorithms maintain manifest valuation v˜                    ⊂                                                                        current estimate target function equivalence                  v˜t   query present v˜ agent replies yes v˜                                                           issue demand∅   replies counterexample                                                                        agent replies yes  v˜s  vs                                                            return                            lahaie parkes  note multiagent sce agent replies bundle  nario learning algorithms run parallel each agent return ﬁndnewatomicr  perform value queries demand queries play key end  role coordinating learning agents agents    require response equivalence query instead prices ps subroutine constructed                             ˜∗  compute efﬁcient allocation supporting ce prices atomic language bp w˜p follows initialize  p˜ respect current manifests present                                                        bp   b˜ w˜p ˜ add atomic bids  agents demand queries manifest allo j∈  complete representation  cation manifest prices agents reply yes                                                        size construction clearly polynomial sizelv  reached ce s˜∗ efﬁcient need finally update manifest adding  learn information responses w˜b atomic bundle discovered al  demand queries fact counterexamples gorithm  w˜b obtained value query  turned learning algorithms responses equiv tinue correct property correctness  alence queries                                       algorithm follows directly lemma    case speciﬁc bidding language  atomic language need provide means  learn lemma  performing query demand∅ algo  target valuation given bidding language  compute rithm  reply demand query yes  efﬁcient allocation respect manifests solve atomic bid bundle returned subset  winnerdetermination  compute supporting ce prices counterexample v˜      learning atomic languages                        proof    agent replies yes  learning algorithm value demand v˜r  vr ⊂ v˜ underes  queries atomic languages manifest valuation v˜ timates particular v˜b  vb each  stored pair b˜ w˜ let minimal represen ∈ bs atomic bundle ⊂ dis  tation target valuation manifest representation covered minimality condition  satisfy  b˜ ⊆  w˜b  wb ∈ b˜ ∈ new atomic bid v˜s  vs                                                        instead bundle returned ⊂ structure  true initially set b˜  ∅                                                        prices bundles priced  learning process ensure elements ∈                                                        vr  pr ˜r new counterexample     note perfectly alright individual learning algorithms note subroutine called sizelv times  use demand queries learner framework simulating new atomic bundle returned each time ob  algorithms just need clear demand queries serve algorithm  makes demand queries  performed asynchronously parallel queries need recurse strict subsets original  performed agents simultaneously         argument ≤ mtheorem  unknown target valuation atomic         entries usual program solve  language learned sizelv·m winnerdetermination wdn w˜  let v∗  demand queries sizelv value queries    value efﬁcient allocation obtained through wd                                                        linear program lp obtain ce prices follows    algorithm efﬁcient atomic languages pro  vides ﬁrst polynomial query learning algorithm min                πs                                                                                                                    π πipibij   language concise xor                                                                                       expressive nisan  know st   π ≥            pibij    ∀γ ∈ Γ       learning algorithm membership equivalence              jbij ∈γi  queries result suggests power demand                                ∀i ∈                                                                               queries context demand queries used provide                            ∀s ⊆  kind “focused” equivalence query agent’s new πi ≥     w˜ibij  −  pibij                                                                                                        ∀βi β ∈                                                                                                                                                               jbij ∈βi   jbij ∈β   counterexample restricted subset current                           dks bi  counterexample                                                                                                                                                       ∗                                                                             π     πi                   computing ce prices  lk                                                                                                                    section explain compute manifest allo      π ≥  πi ≥  pibij  ≥   cation prices language lk useful work variables πi interpreted utility each agent  explicit structure lk intend allocations prices computed variable  suggestive approach workable atomic πs revenue seller formulation ex  language ﬁrst generalized mixedinteger pro ponential number utilitymaximization constraints   gram mip winnerdetermination wd revenuemaximization constraints  address  revelant computing ce prices mathematical pro use delayed constraint generation bertsimas tsitsiklis  grams deﬁned section readily solved mip  subset constraints initially  solvers cplex                                obtain speciﬁc values each variables                                                        lp check implicit constraints type     assume agent i’s manifest represented language lki   program description takes ﬁve arguments  set violated solve wdn vec  agents  ⊆  vector bundles bun tor prices obtained lp solution                                                                    dle si each agent ∈   vector sets atomic greater π  add constraint type  cor                                              bundles set bi each agent ∈   val responds allocation obtained auxiliary integer  ues wib each agent atomic bundles ∈ bi program   prices pib each agent atomic bundles ∈ similarly run wdi w˜ each agent                                b˜i  bi let ri   bi let Γi ⊆    possible allo need generate constraints type   cations agent sets pairwise disjoint atomic bundles check result greater πi note  cardinality ki allocation vector each integer program exponential number  γ  γ     γn γi ∈ Γi each agent ∈ straints type   use delayed constraint gen                               generalized formulation wdn  follows eration run wdi     si                                                      ri                                 auxiliary program si solution main   max                wibij aij − zi                  integer program solution program value  aij eβ zi           i∈n                                   greater zi generate corresponding constraints                                                        type                    ri                                              st              aij ≤ ki        ∀i ∈                                                            communication requirements                                                        implementing vcg outcome                         aij ≤      ∀g ∈                                    i∈n jbij                            discussion set aside issue incentives                                                                    ∀β ∈ Γ            preference elicitation reliable elicitation scheme         ≥  −  ∈ β                    βi           ij          ij ∀i ∈          induce agents truthfully reveal preferences                             jbij ∈βi                  suppose instead implementing ﬁnal ce prices                                                        ∀β ∈ Γ            ≥                                             ij βi     ∀i ∈              function  identically  bundles                jbij ∈βi                                                                                         case constraints  irrelevant                                      ∀g ∈ si          serve activate eβ appropriate atomic bundles selected                       aij                                                                            ∀i ∈            indirectly ensure zi set correct price through                jbij                              straint  price  similarly constraints            aij ∈   eβi ∈   zi ≥              irrelevant agent allocated bundle                                                           note program usual proxy use              ˜     ˜        let       bn      en determine value price bundle given lk representa  tries w˜  ˜     w˜n values agent manifests tion agent’s manifest valuation                                               ∗                        obtained learner provide payment ij visi  rium correspondence proof following straight                               ∗      ∗                 forward omitted space  agent ∈      sn efﬁcient  allocation agent values available value queries lemma  let hw µ hh qii nondeterministic commu  nisan segal  point aligns each agent’s util nication protocol realizes vickrey outcome rule   ity overall objective truthful revelation let ∈ let γˆ  hw v∗ ∈ µ−w                                                                    ∗  ex post nash equilibrium elicitation protocol fv  fv  vcg payments respect  scheme clearly costly center efﬁcient allocation γˆ  center pays agents cheapest payment scheme                                                          note particular fjw entirely independent  aligns agents’ individual incentives economic efﬁ                                          ∗                                                        component vj original proﬁle v−j ∈  ciency vcg payment krishna perry                                                  −j                                                        µ−w  v∗    section drop assumption exter −j             nalities results hold greater generality valu theorem  communication protocol Π  hw µ hh qii  ations prices deﬁned entire allocations alizes vickrey outcome rule exists                                                                                 nr  let vi set possible valuations agent state assignment  ³ prices messages                                                                       valuation proﬁle ∈  ×  ×vn outcome protocol Π  hw µ hh pii realizes universal price  scenario element  Γ×rn speciﬁcation equilibrium correspondence  allocation agents’ payments           proof mentioned mishra parkes  provide    objective implement vickrey outcome rule proof sufﬁciency suppose protocol hw µ hh qii realizes  correspondence   ³ mapping vickrey outcome rule  each ∈  let γˆ  hw  states ∈ pairs ˆγ γˆ efﬁcient allo                                                        let piγ  supv ∈µ−wviγ − viˆγ ∈  cation proﬁle       associated vector                                                          γ ∈  Γ note γˆ directly obtained  vcg payments letting γˆv ∈ arg max      γ                                     γ∈Γ  i∈n       formation generated Π state efﬁcient alloca  γˆ−jv ∈ arg maxγ∈Γ    viγ vcg payments                           ij                         tions marginaleconomies γˆ−jv ∈  agents center deﬁned        need explicitly compute infor                                                    mation implement universal price equilibrium accord     fjv     viˆγ−jv −  viˆγv ∈     ing deﬁnition  let qw vcg payments asso                       ij                       ciated efﬁcient allocation γˆ  hw ﬁrst                                                        proof necessity shows prices ce    mishra parkes  shown compute prices proved nisan segal  show  vcg payments sufﬁcient obtain uce prices fact prices just constructed fact uce prices cor  show sufﬁcient necessary responding γˆ valid ∈ µ−w fix agents                                                  communication protocol vcg discover uce prices    lemma   v∗ ∈ µ−w lead                                                                                  −j  −j  p−j    consider nondeterministic communication protocols vcg payment obtain    ˆγ −  setting center claims vcg outcome                            ij −j                                                        viˆγ  sup    −        viˆγ−jv − viˆγ  γ send messages each agent convince       v−j ∈µ−j ij                                                                             −  outcome each agent checks message holds v−j ∈ µ−j equation  valid given semantics protocol private type privacy preservationp write righthand side  respond yes protocol veriﬁed outcome sup −        vhˆγ−jv−vhˆγpiˆγ−jv                                                           v−ij ∈µ−ij hij  deﬁnition  nisan segal  nondeterministic  deﬁnition piˆγ   equationp gives viˆγ −                                                        ˆγ − ˆγ − ˆγ   ˆγ −  communication protocol triple Π  hw µ gi     −j       p−j        hij −j  message set µ  ³ message correspon vhˆγ−sup    −          vhˆγ−jv−vhˆγ                                                                   v−ij ∈µ−ij hij  dence  →  outcome function righthand side  γˆ utilitymaximizing  message correspondence µ following properties                            −j                                                        agents ∈  prices pi ﬁnal step    • existence µv  ∅ ∈               establish γˆ−jv revenuemaximizing alloca                                                      tion agents nj  privacy preservation    • privacy preservation µv  µivi ∈ supremum righthand side equation      µ  ³  ∈                                                    brought summation usingp price construc                                                        tion rearranging yields    ˆγ   protocol Π realizes choice correspondence  ³                               ij −j  gµv ⊆ ∈                          ijviˆγ−jv − viˆγ ≥ ijviγ − viˆγ                                                        γ  ∈  Γ  holds   ∈  µ−w  let  Γ size ﬁnite set allocations                     p−j        −j                                                             ˆγ ≥ sup     −        γ − ˆγ   note set universal price equilibria state ev ij −j   v−j ∈µ  ij                         nr                                                         −j        ³ Γ ×  denotes universal price equilib  sup    −   viγ − viˆγ     piγ                                                          ij   vi∈µi                  ij    proof result associated deﬁnitions correspondence maps states personalized prices  closely follows developments nisan segal  efﬁcient allocations efﬁcient allocations  show ce prices necessarily revealed nondetermin marginaleconomies each agent removed implied  istic communication protocol computes efﬁcient allocation prices support efﬁcient allocations marginaleconomies
