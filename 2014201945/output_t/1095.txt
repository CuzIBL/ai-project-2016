                              cooperating reasoning processes                             just sum parts            ∗                                                  alan bundy                                           school informatics                                          university edinburgh                                            abundyedacuk                        abstract                              learning new proof methods exam                                                                ple proofs ﬁnding counterexamples reason      using achievements research group          ing uncertainty presentation       years provide evidence support     interaction proofs automation      following hypothesis                                     formal argument          complementing each cooperat            particular studied different          ing reasoning process achieve            kinds process complement each          acted           cooperate achieve complex goals          individually                                     applied work following areas      work group pro         proof mathematical induction coinduction      cesses mathematical reasoning applica    analysis equation solving mechanics problems      tions formal methods reasoning pro     building ecological models synthesis      cesses studied include                       veriﬁcation transformation editing                                                            hardware software including logic functional      proof search metalevel inference proof          imperative programs security protocols          planning abstraction analogy symmetry     process algebras conﬁguration hardware          reasoning diagrams                          game playing cognitive modelling      representation discovery formation evolution          analysing diagnosing repairing failed          proof planning attempts forming         introduction          repairing new concepts conjectures       “many hands make light work” john heywood          forming logical representations informally          stated problems                                research artiﬁcial intelligence consists invent                                                        ing developing new technique analysing establish    ∗i like thank colleagues ing properties implementing testing comparing  worked  years research reported paper rival techniques task work  mechopress lawrence byrd george luger chris mellish rob consists combining techniques complex sys  milne richard o’keefe martha palmer n´ee stone leon sterling tem solves problems models natural systems  bernard silver bob welham eco robert muetzelfeldt mandy commonly observed complementary techniques  haggith dave robertson mike uschold proof planning dave  barkerplummer david basin richard boulton james brotherston sist each extending range automation andor  francisco cantu claudio castellini ewen denney louise den effectiveness instance theme previous  nis lucas dixon jacques fleuriot jason gallagher jeremy gow ijcai paper bundy  just different  ian green jane hesketh christian horn andrew ireland predrag techniques needed tackle different aspects complex  janiˇci´c helen lowe ina kraan ewen maclean pete madden r´aul task technique assist addressing  monroy julian richardson alan smaill andrew stevens frank shortcomings current paper examine observa  van harmelen lincoln wallen geraint wiggins isanewt tion giving examples techniques  hazel duncan amos storkey tmhr alison pease simon complement each achieving sum  colton alan smaill graham steel john lee toby walsh parts examples drawn work research  ors fiona mcneill marco schorlemmer chris walton i’m group  years aimed automating mathe  grateful feedback earlier draft david basin james  brotherston claudio castellini simon colton priya gopalan jane matical reasoning  hesketh andrew ireland predrag janiˇci´c erica melis chris mel point illustrated pieces  lish r´aul monroy j¨org siekmann sean wilson research work given context paper space  reported paper supported numerous grants stu limitations ijcai proceedings limited  dentships recent epsrc grs self work played role albeit small                                                    ijcai                                                      cases apologies people work inductive proofs widespread applications  surveyed profuse apologies types problem typically want rewrite  cited                                                goal way separate similarities dif                                                        ferences preserving similarities enables    objectlevel metalevel inference              givens used prove transformed                                                        goal visualise process annotating goal      “not wander lost” john ronald reuel givens similarities differences      tolkien                                          figure     work automatic inference es  pecially proving mathematical theorems work  area builds mathematical logic used represent tyzty                                                                       ↑                      ↑  conjectures proved axioms theories     yzh         proved rules inference  proved logical formulae pro                        ↑               ↑                                                                tyz        ty      vide search space potential proof steps typically proof  search conducted backwards starting original                  ↑                     ↑  jecture main goal applying rules inference   tyz       ty   backwards exchange each goal set subgoals nav                                                                                                      ↑  igating search space major problem automated   ∧ tyzty          theorem proving called combinatorial explosionbe  cause number subgoals increases superexponentially example shows step case inductive proof  length proof rapidly swamping computer’s associativity list append  inﬁx  memory trivial problems                      notation append  inﬁx notation cons    human mathematicians succeed navigating huge    separates induction hypothesis given  search spaces stepping lowlevel details induction conclusion goal formulae anno  thinking higherlevel nature problem tated show differences similarities  suitability tools solving problems given goal grey boxes indicate parts  trying emulate highlevel thinking goal differ given called  automated provers particular implemented proof wavefronts each wavefront wave  search simultaneous cooperating inference lev holes indicating subterms wavefronts cor                                                            respond parts given parts goal  els objectlevel original conjecture side wavefronts inside waveholes called  ory rules expressed metalevel skeleton skeleton matches induction  proof methods speciﬁed conjectures analysed hypothesis arrows indicate direction  metalevel inference conjecture analysed suitable ment wavefronts — case outwards through  proof method identiﬁed applied progress measured  goal completely surround skeleton  process recurses way inference meta rules annotated annotation  level directs inference objectlevel avoiding unproduc match rules applied annotated rules  tive parts search space making proof search com called waverules main waverule used ex  putationally tractable                                   ample    applied twolevel approach times              ↑                      ↑  notably domains equation solving using            ⇒   tl  press bundy welham  sterling et al   inductive theorem proving using clamoyster    taken step case recursive deﬁni                                                                    bundy et al  bundy  latest realisation tion   idea proof planning  bundy  inwhich note grey boxes bigger each waverule  proof methods speciﬁed stripslike plan operators application skeleton embedded  plan formation used custombuild proof plan each contain complete instance given  conjecture    illustrate ideas rippling proof figure  associativity append using rippling  method reducing difference goal  givens bundy et al frequently occurs  mathematics goal proved syntactically simi rippling successfully guides proof search ensuring  lar “given” hypothesis assumption axiom skeleton gets larger matches givens  occurs notably inductive proof induction point givens used prove goal  conclusion induction hypothesis strong similarities successfully applied induction summing series analysis  construction rippling originally developed variety areas importantly      prolog equation solving                       tip reader mathematical details optional    later proof planners λclam isaplanner ﬁgures separated main text                                                    ijcai                                                      fails nature failure used suggest way lot legal unproductive objectlevel rule applica  patch proof attempt recover failure tions middleout reasoning rearrange search space  §                                                  postponing difﬁcult search decisions eas    metalevel inference provides leastcommitment devices ier sideeffect search decisions objectlevel  metavariables used postpone search inference provides goals form ammunition  decisions instance inductive proof choosing stage metalevel analysis  appropriate induction rule inﬁnite branching point  search induction rule corresponding each  inference fault diagnosis  wellordering each recursive datastructure nat  ural numbers lists trees sets key success “the best laid plans mice men gang aft  ful induction choose induction rule inserts aglay” rabbie burns  wavefronts induction conclusion like plans proof plans guaranteed succeed  matching waverules rippling successful fail recovery requires kind reasoning  turn requirement head postponing choice process fault diagnosis standard objectlevel proof  induction rule inserting higherorder metavariables search fails usual response proof search  induction conclusion stand unknown wave earlier choice point retry proof planning  using higherorder uniﬁcation instantiate meta enables productive use failure  variables during rippling retrospectively choosing mismatch situation anticipated metalevel  duction rule wavefronts fully instantiated situation obtaining objectlevel provides op  signiﬁcantly reduces search problem moving portunity analyse failure propose patch human  place choice induction rule branching mathematicians make productive use failure  inﬁnite place rippling highly constrained instance van der waerden  example  effectively developing middle proof peated plan failure patching eventually successful  beginning end search moving attempt prove challenging conjecture  technique middleout reasoning contrast topdown consider example failure rippling  bottomup reasoning                                  method outlined § occur instance    applied middleout reasoning choice cause rule available ripple wavefront  duction rule phd projects initially ina kraan used stage metalevel inference formed  select appropriate induction rule predetermined ripplingbased proof plan extract partial descrip  ﬁnite set rules project synthesise logic tion form missing waverule  programs speciﬁcations kraan et al best illustrated example figure   project kraan used middleout reasoning syn implemented kind fault diagnosis  thesise logic program recently jeremy gow ex pair proof planning framework using proof critics  tended middleout reasoning create verify new induc ireland  ireland bundy  original work  tion rules customised current conjecture gow  explored ways recover different kinds failure  bundy et al                                 rippling suggesting variously new forms induction case    proof planning thriving research area splits generalisations intermediate lemmas later work  applications extensions instance            ireland coworkers extended discover                                                        ing loop invariants veriﬁcation imperative programs    • Ωmega   proof planner siekmann et al                                                         ireland stark  recently applied      applied wide range areas math                                                        work industrial veriﬁcation extending successfully      ematics                                                        evaluating praxis’ automated prover ireland et al     • applications combination augmentation deepak kapur subramaniam developed      decision procedures janiˇci´c bundy   similar methods lemma discovery induction kapur                                                        subramaniam r´aul monroy used critics    • multiagent proof planning benzm¨uller sorge                                                        correction false conjectures monroy et al                                                              requires additional reasoning process abductionmore    • reasoning feature interaction ﬁrstorder tempo recently monroy applied techniques higherorder      ral logic castellini smaill            faulty conjectures leading automatic formation new                                                        theories monoids monroy  andreas meier    • multistrategy proof planning melis et al                                                         erica melis adapted multistrategy multi sys  proposed basis “science reason tem include failure analysis automatic proposal  ing” proof plans provide multilevel understand “recommendations” overcome meier melis  ing structure proofs bundy               metalevel inference proof planning particular fault diagnosis earlier failure suggests  shows complementary inference processes inter promising alternative proof attempt removes need  act reduce search overcome combi blind backtracking removing legal unproductive choices  natorial explosion metalevel analysis matches objectlevel search space helping defeat combinatorial  goals proof methods best suited solve cutting explosion proof patches provide inter                                                    ijcai                                                                                                               inference learning       revrevl                                                             “to day continue ﬁnd new techniques                          ↑           ↑           revrev                         methods there’s new                                                            learn” joseph cocking                                   ↑          ↑           rev revt   nil             seen value proof methods used                                                    metalevel inference fault diagnosis guide objectlevel                                                        proof search proof methods come                     blocked                                                        come detailed analysis fam      rev list reversing function example taken ily related proofs reﬂection thinking      failed proof reversing list twice forms experienced mathematical reasoners      original list suppose initially rule timeconsuming highlyskilled errorprone process      available                                     proof methods group developed inductive proof                    ↑                       ↑         rev   ⇒  revt    nil         instance took decade develop evaluate                                                        reﬁne necessary maintain constant vigilance                                                        quick ad hoc ﬁxes general utility ex      ripple attempt fail rule matches      left hand side goal wavefront planatory power better process      moved stage outwards developing new proof methods automated      analysing blocked ripple fault diagnosis work group explored various machine learning tech      missing waverule form  niques automate construction proof methods                                                        start successful objectlevel proofs metalevel                       ↑                   ↑          rev xy      ⇒ revxxy              structure try analyse abstract order formulate                                                        new proof methods earliest attempt      stands unknown function repre  application explanationbased generalisation ebgtothe      sented higherorder metavariable allow equationsolving domain silver  silver’s learning      proof continue using missing waverule schema press able learn simpliﬁed ver      proof succeed instantiating sions proof methods handcoded      revw                  process discover miss press equation solving just applying ebg      ing waverule                              examples successfully solved equations later desimone                      ↑                     ↑           did early versions inductive proof methods         rev xy      ⇒ revy   revx            desimone                                                           recently explored use datamining tech      proved lemma complete proof niques extract new methods large corpuses proofs      note lemma distributive law  duncan et al  duncan’s isanewt ﬁrst iden      rev interesting theorem right tiﬁes frequently occurring sequences proof steps using      just arbitrary hack needed just original variablelength markov models vlmm ron et al       proof through                              combines sequences using genetic algorithms                                                        join branching repetition macros using    figure  lemma speculation using rippling failure language developed jamnik et al  resulting                                                        proof methods evaluated successfully compar                                                        ing proof success timings large test corpus proofs                                                        newly learnt tactics currently learnt                                                        methods consist simple generic combinations object  esting information example figure  illustrates level rules approach sophistication tar  lemma speculation produces lemmas math geting handcrafted methods rippling  ematical right prove useful provide dramatic search reductions  future proofs generalisation way patch use datamining promising start  ing failed inductive proofs generalises original potential development  conjecture mathematically interesting way         introduced new class reasoning processes    direction kind fault diagnosis illustrated machine learning complement metalevel  figure  possible interaction meta ference constructing new proof methods example  level objectlevel inference discrepancy proofs enabling metalevel inference guide object  metalevel expectation objectlevel reality fo level proof search learning methods turn  cuses fault diagnosis suggest patch resolve formed previous success objectlevel inference pro  discrepancy allow original proof plan technically just tactics learnt methods  sumed complementary reasoning pro discussed currently unable learn meta  cesses focus attention solve problem language specifying tactics methods tactics  manage — acting simultaneously metalevel speciﬁcations  interaction                                 new tactic                                                    ijcai                                                      ducing proofs analysis informed patterns english gce alevel appliedmathematics papers intended  identify proofs virtuous triangle  year old preuniversity entrants mecho took  reasoning processes each process triangle using infor chanics problems stated english parsed constructed  mation neighbours assist neigh semantic representation form ﬁrstorder logic  bour                                                 sertions extracted equations logical representation    missing process story learn solved process illustrated figure   ing process construct metalevel language used during process cooperation representation  specify proof methods examples language formation inference occurs number levels  concepts wavefronts waveholes skeletons intro directions  duced illustrated figure  silver’s desimone’s • process representation enables inference  ebgbased systems assumed prior existence appro form equation solving solve mechanics  priate metalevel language used analysis problem  objectlevel proofs duncan’s isanewt does assume  existence metalanguage restricted • form nonmonotonic inference needed “ﬂesh  impoverished language expressing proof methods out” explicit problem statement realworld objects  use conditional branching conditions idealised variety  expressed missing metalanguage uses ways instance ship idealised parti  nondeterministic branching instead similarly use cle horizontal plane relative velocity problem  untilloops exit condition speciﬁc gravity problem idealised  expressed missing metalanguage just uses repeti shell ﬂoating liquid string pulley  tion combine proof methods proof plan problem usually idealised inelastic pulley  ning analyse failures fault diagnosis method frictionless mecho uses cues recognise prob  speciﬁcations necessary need expressed lem type matches problemtype schema  missing metalanguage instead reduced extracted assertions provides implicit  ducting exhaustive search method level reduces unstated assertions  search directed way proof planning capa • mecho uses form plan formation extract set  ble                                                   equations assertions physical law iden    current ai learning mechanisms appear capable tiﬁed relates goals givens  ma  performing learning task required constructing equations introduce intermediate variables  new ontology plenty mechanisms deﬁning  solved causing planning pro  new concepts terms old ones sufﬁcient cess recurse preconditions physical laws relate  form new metalanguage concept wavefront   variables assertions enabling laws  instance deﬁned terms functions stantiated equations describing problem situation  predicates objectlanguage here’s hard challenge                                                          •  generation machine learning researchers equation solving used express goal variable  start tackling challenge §                 terms givens inferential process imple                                                            mented using metalevel inference described §    inference representation formation               • inference required during natural language pro      “once know formula it’s guiding light      cessing resolve ambiguities pronoun      want know”      reference metalevel inference mechanisms used      mark lallemand                                      mecho  motivated problems control                                                            ling inference problemsolving semantic    discussed § automation inference requires                                                            terpretation successful areas  axioms rules conjectures theory repre                                                            stance inferential choices arising during semantic  sented representations come                                                            processing limited idealisation especially  work automated inference                                                            framework imposed problemtype schemata  adoptedadapted textbook previous research  outcome careful highlyskilled hand ideas mecho project subsequently  crafting developing appropriate representation adapted eco program built ecological simu  important parts problem solving ap lation program response dialogue user robert  plied mathematics instance mainly consists exploring son et al eco incorporated example  developing mathematical representations physical en collaborative reasoning metalevel analysis user’s  vironments problems thorough investigation requirements used propose kinds idealisation  automatic reasoning formation formal representations eco able suggest idealisations real world eco  ought central concern                        logical objects animals plants environments    mecho  project bundy et al wead  idealisations processes interacted  dressed issue building program solving mechan                                                             ics problems stated english examples drawn called “marples algorithm” honour david                                                        marples ﬁrst person aware    mechanics oracle                                  process teaching notes                                                    ijcai                                                      
