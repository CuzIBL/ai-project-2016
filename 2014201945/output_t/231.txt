                                description logic change∗               alessandro artale     university bolzano italy       artaleinfunibzit             carsten lutz          university dresden germany     clutcsinftudresdende             david toman           university waterloo canada     daviduwaterlooca                          abstract                          object membership entities relationships attribute                                                        values change time achieved                                       combine modal logic           snapshot temporary marks diagram respectively                         alcqi      scription logic dl         resulting       second evolution constraints govern object migration                              multidimensional dl  alcqi supports reason      tween entities state example instance      ing change allowing express entity child eventually instance      cepts roles change time entity adult      discriminate changes past  ter models timestamping evolution      future main technical result                                     dlr                                                     straints translated tdl artale et      satisﬁability alcqi concepts respect   al  unfortunately reasoning logic undecid      general tboxes including gcis decidable  able computational problems      exptimecomplete contrast reasoning     translation tdls direct reasoning gener      temporal dls able discriminate ally powerful ter models undecidable artale       past future inherently undecidable argue principal ways problem ﬁrst      logic sufﬁcient reasoning tem approach restricts application timestamping allows      poral conceptual models timestamping   arbitrary timestamping entities gives timestamp      straints                                         ing relationships attributes relationships                                                        attributes unrestricted reestablishes decidability    introduction                                       ter models restricted timestamping evolution                                                        constraints artale et al  second approach  important application temporal description logics gaining decidability allows use timestamping  tdls representation reasoning tem prohibits use evolution constraints  poral conceptual models artale  artale et al                                                           second alternative pursued current paper   knowledge captured models translated                                                        devise multidimensional description logic salcqi  tdl tbox reasoning algorithms tdl                                                        obtained combining modal logic stan  used detect inconsistencies implicit isa rela                                                        dard dl alcqithes     modality applied  tions temporal model artale franconi                                                         concepts roles axioms tbox inter  artale et al  calvanese et al  obstacle                                                        preted globally logic viewed description  putting general idea work posed fact                                                        logic change express concept role mem  natural temporal conceptual formalisms                                                        berships change time does permit discriminating  associated tdls reasoning turns undecidable                                                        changes past future show ter    prominent witnesses problem var models timestamping timestamping entities  ious temporal entityrelationship ter models used relationships attributes evolution constraints  sign temporal databases chomicki toman  ters                                                        captured salcqi tboxes  classical er data models extended additional                                                          main contribution paper show rea  classes constraints model temporal evolution     data application domain spaccapietra et al  soning alcqi decidable pinpoint ex  timestamping constraints used distinguish tempo act computational complexity showing exptime com                                                        pleteness adding change modality pushes  ral atemporal components ter model timestamp           alcqi  ing usually implemented marking entities classes complexity whichisexptimecomplete  relationships attributes snapshot temporaryorunre exponential upper bound viewed extension  stricted idea classiﬁcation express decidability result simpler multidimensional dl                                                        salc gabbay et al  capable cap    ∗the research supported eu ist fet project turing ter models develop completely  tones nserc                                   new proof techniques decidability proof salc                                                    ijcai                                                     lies ability duplicate points model im usual way roles allow single applications  possible presence salcqi ’s number restrictions modalities inverse easily seen roles obtained  lower bound applies salc show nesting modal operators inverse arbitrary way  logic exptimecomplete                converted equivalent role simple form mul    paper organized follows section  introduces tiple temporal operators absorbed inverses commute  logic salcqi  section  shows reasoning salcqi temporal operators  decidable exptime ﬁrst providing tree abstrac fragment salc salcqi obtained allowing  tion salcqi interpretations presenting  roles form randr replacing  exptime  procedure checks existence cept constructor  nrc ∃rc note  tree abstraction section  illustrates salcqi able salc salcqi enjoys ﬁnite model property  capture conceptual models timestamping constraints concepts tboxes satisﬁable models  proofs exptime lower bound inﬁnite set worlds inﬁnite domain  version paper artale et al  Δ example phenomenon concept ¬c                                                        tbox ¬c    ∃r¬c   ¬c  ∀r¬c                                                          ∈    logic   salcqi                                   glo                                         logic  alcqi  combines modal logic                       description logic alcqi spirit similar multi  reasoning   alcqi  dimensional dls gabbay et al  wolter za  show salcqi  satisﬁability wrt tboxes  kharyaschev  syntax salcqi deﬁned cidable exptime simplicity sec  follows let nc nr disjoint countably inﬁnite tion assume local role names used  sets concept names role names assume nr wlog global role names simulated  partitioned countably inﬁnite sets nglo nloc fresh local role let concept  global role names local role namesthesetrol roles tbox satisﬁability decided introduce                −        −       −  deﬁned    ∈ nrthesetof following notation roles rweuseinvr denote                                       ⊆       −                   −  concepts    deﬁned inductively follows       ∈ nr   invs  sandinvs  ∈ ∈ rolandn ∈ following  sweuserolc  denote smallest set  ¬c   nrcandcatbox        contains subroles used closed  ﬁnite set general concept inclusions gcis  invweuseclc  denote smallest set containing  ∈                                           subconcepts appearing closed    salcqi interpretation pair negation ∈ clc  “¬” level oper  nonempty set worlds function assigning ator cthen¬c ∈ clc                                   iw  alcqiinterpretation iwΔ  ·    each ∈     rest section devise tree abstractions                                                iw  Δ ﬁxed nonempty set called domain · models trees sub                                         iw  function mapping each ∈ nc subset ⊆ Δ    sequent section show construct looping tree                        iw  each ∈ nr relation ⊆ Δ × Δforr ∈ nglo ad automata accept trees reduce satis                  iw    iv  ditionally require   ∈ weextend  ﬁability salcqi emptiness problem looping tree             iw  mapping ·  complex roles concepts follows automata yielding decidability salcqi         r−iw  yx ∈ Δ × Δ  ∈ riw                                                          tree abstractions salcqi  models       riw  ∈ Δ × Δ ∃v ∈ ∈ riv                                                                                                              iw                                  iv     intuitively  tree τ abstracts model          ∈ Δ × Δ ∀v ∈ ∈    root node τ corresponds object           iw        iw       ¬c    Δ                                   realizes successors root τ correspond objects      diw  ciw ∩ diw                          reached traversing role           iw                          iw             world similarly nodes τ correspond objects    nrc     ∈ Δ  y ∈ Δ  ∈                                                  ∈ ciw≥n       reachable traversing multiple roles                                                    scribe concept role interpretations abstrac           iw                        iv          ∈ Δ ∃v ∈  ∈                tion τ decorate nodes τ extended quasistates  salcqi interpretation model tbox introduced deﬁnition  extended quasistates  iff satisﬁes ciw ⊆ diw  ∈t ∈ deﬁned terms types quasistates introduce  itisamodel concept ciw  ∅ ∈ ﬁrst intuitively type describes concept memberships   concept satisﬁable wrt tbox exists domain element ∈ Δ single world  common model  note salcqi deﬁnition  type type subset  considered temporal description logic elements clc   correspond time points distinguish  global local concept names concept   ¬c  ∈ iff ∈        ¬c ∈ clc   easily enforced global using gci   ∈ iff ∈ ∈  ∈ clc     concept constructors   ∃rc ∀rc  nrc      ∈ ∈           ∈t   nrc   and⊥  deﬁned abbreviations                                                    ijcai                                                     use tpc  denote set types  extended quasistates assigned children nodes sat  concept memberships domain element isfy qualiﬁed number restrictions parent node      worlds use quasistates                      deﬁnition  matching successor let Γ sets  deﬁnition  quasistate let set  →  x∈ Γandlete function mapping each ∈ Γ∪x  tpc  function ∈ extended quasistate witness fygyhy gy  fx                                                                 ∈ Γ            Γ               ∈ fw iff ∈ fv ∈             xe matching successor                                                        witness ∈   pair  quasistate witness set                                                                       ∈           ∈       inv  ≤  fv  ∈  quasistate                              nrc       fx    gx                                                                hxw ∈ Γ  ≤ hywc ∈ fyw ≥  check set types ttn forms valid                                                                     ∈           ∈ Γ   ≤       ∈  quasistate simply check pair   nrc fx        hy                                                                 ≥  −     ttn identity function quasistate fy       witness note each quasistate wit   nrc ∈ clt ∈ gxwandinvr ≤  nesses                                                   hxwandy ∈ Γ  ≤ hywc ∈ fyw ≥ −     quasistates abstract concept membership partic  nrc ∈ fxw  ular object worlds capture role structure relating                                                            nrc    ∈  clt ∈ Γ   ≤  objects adjacent world given salcqi model                                                            hywc  ∈ fyw ≥  nrc ∈ fxw  develop notion extended quasistate ultimately  desired tree abstraction objects turn par pair qw fxgxhx qw fygyhy  ∈ Γ  ent child nodes child labeled extended called matching successor  quasistate question note similarity handling inverse say matching successor witnesses equiva  roles using double blocking technique used tableau al lent deﬁne matching successor  gorithms alcqi horrocks et al            intuition deﬁnition follows object  deﬁnition  extended quasistate let beasetw  stands parent node described fx set                                                               Γ  quasistate witnesses  → rolc  ∪ objects children described fy extended                                                  −  ε ε ∈ rolc  ∈ nr ∪s  quasistates chosen consistent way wrt informa  ∈ nr                                              tion represented twice parent extended                                                        quasistates labeling children matches quasistate    hwrforsomew     ∈  thenhvrfor                                                ∈  Γ            ∈                                           tached parent gy fx                                               matching successor witness witness ex                         ∈                      rforsomew          tended quasistates attached elements Γ                     ∈        rforallv                             used build model violat    case hwr ∈     ing qualifying number restrictions domain    hwrforsomew    ∈  thenhvrfor      model eventually built objects x∪Γas      ∈                                        mentioned matching successors crucial                                                                                      extended quasistate witness ingredient deﬁnition trees  set triples qw hfvgvhv  ∈  deﬁnition  tree let τ negn beatu  extended quasistateelementsofqw called ple ne tree root ∈  extended types etpc  denotes set extended mapping τ’s nodes extended quasistates τ  types  say qw realizes tree                 ∈                ∈  concept         say     gn realizes  qw root hwε ∈                                                            gn root  intuitively given node labeled extended quasistate  ∈ pair gn gm  ∈                                          witness  quasistate witness describes matching successor  node labeled extended quasistate  describes predecessor node describes note matching successor witnesses induced                                                        matching successors consisting extended quasistates  role connections nodes conditions                                          ensure mapping assigns roles way respects associated node children tree  semantics modal operators fully understand necessarily share set  poses difﬁculty                                          ≤   ≤       showing trees proper abstractions  conditions note assume ordering                      roles allows use single role ex models  want convert tree  tended quasistate capture implied roles dummy interpretation need decide common set  role ε intended use root object does worlds  difﬁculty overcome using follow  predecessor                               ing lemma shows assume extended    introduce concept matching successor quasistate witnesses based sets world identical  main difﬁculty properly capture effects qual cardinality  iﬁed number restrictions  nrc constrain pos lemma  compatible matching successor exists  sible combinations extended quasistates trees inﬁnite cardinal α following holds                                                    ijcai                                                                                        xy        ···   yl yl  ··· ym−  ym    ···   yn yn  ··· ∈Γ                                  νx    ν ν          νl νl      νm−  νννn               ···                                                          ⏐                                                                                                                      world replaced worlds vvl                                   νx    ν ν           ν  νl      νm−                                   νx    ν  ν νννl                νm−                                                                                                                                                                    vl  νx    ν           ν  νl νl      νm−                                          figure  reducing size matching successor witness                matching successor witness Γxe matching prove lemma  need construct required slim              successor witness  Γxe             matching successor witness  Γxe Γxe                                                                                                               •    Γ           Γ                            end choose set Γ ⊆ Γ function μ                    xe    xe deﬁne matching                                       ∈ Γ                  successor                                    associates extended type μ                                                                      •     ∈                            • ∈ Γ ∪x   extended types ν ∈       μ    fygyhy                                                                                                                             qw  fygyhy                           • ν ∈ qw fzgzhz ∈ Γ  Γ                                                                                                                                                       ∈ Γ  μyν  maxct                      ∈   fywgywhyw  ν  α                                                                    function μ tells objects Γ par              intuitively lemma proved replicating elements ticular world used fulﬁll number restrictions               sufﬁcient number times extended quasis originally fulﬁlled extended types objects                                                                                     tate witnesses tree based set worlds Γ  Γ               identical cardinality connect extended qua set Γ turn basis constructing slim wit              sistate witnesses model simply permuting set ness chosen way Γ≤              appropriate way way prove difﬁcult                                                                                         etpc ·maxct  ≤ n· ·maxct  finally              righttoleft direction following theorem     witness Γ bounded simply              theorem  satisﬁable wrt iff tree exists eliminate superﬂuous worlds obtain slim witness                                                                                                                                                                                        keeping etpc ≤n ·                                                                                              ∪Γ                decidability complexity salcqi           worlds each element     worlds              develop effective procedure check chosen independently                                                                      crucial step actual construction illustrated              exists tree given concept tbox                                                                    figure  consider particular world origi               show procedure runs exptime              easy number possible match nal witness number restrictions parent object                                                                  fulﬁlled objects ylyn ymyn              ing successors exponential simply                      Γ              generate check rise falling outside set  assume ﬁrst simplicity                                                            objects ymyn assigned common ex                tree instead start showing                                     ∈ Γ              tree exists slim matching successors tended type ν pick objects yyl                                                                    μy···    μylνsincen    −    ≤ maxct              witnesses matching successors tree                                                                                                              ﬁnd ≤ maxct objects Γ              witnessed matching successor witnesses size                                                                                                    max           −  follows deﬁnition Γ               most exponential rest paper let ct                                                                    transform old witness new                               mandn   clc                 mrc∈clct                                     picted figure  extended type              lemma   let Γxe matching successor witness associated ymyn original witness simply              matching successor q ⊆ pick objects Γ appropriate matching μ value              matching successor witness  Γxe q proceed similarly example construct slim                                                                                                                  Γ ≤n ·  · maxct  ≤  Γ  · matching successor witness ﬁx set Γ apply              ·                                              transformation ∈ independently note                                                                    transformation preserves quasistates associated ob              matching successor witness slim satisﬁes Γ                      cardinality bounds given lemma jects modalities preserved              matching successor slim slim matching successor number restrictions met              witness                                              lemma   procedure runs exptime                                                                ijcai                                                                 generate slim matching successors                exptime lemma  emptiness loop  simply use bruteforce approach enumerate ing automata checked polynomial time overall                                                                                          didates slim matching successor witnesses exponen decision procedure satisﬁability alcqi runs   tially sized Γ test satisfaction conditions exptime holds regardless numbers inside  deﬁnition                                        number restrictions coded unary binary    step show tree ex theorem  satisﬁability salcqi wrt tboxes  ists tree constructed solely slim cidable exptimecomplete  matching successors gn gm  ∈                                                        lower bound theorem  obtained reducing  slim matching successor ∈                                                        word problem exponentially spacebounded alternating  tree slim                                                        turing machines reduction does use inverse  lemma    slim tree exists role qualifying number restrictions obtain                   tree exists                         exptime  lower bound satisﬁability salc   children slim matching successor subset corollary  satisﬁability salc wrt tboxes decid  children original matching successor easy able exptimecomplete  convert arbitrary tree slim    finally check slim tree exists                            ﬁne looping tree automaton ct accepts exactly  capturing conceptual schemata  slim trees check satisﬁability wrt                                                        known tdl alcqius able capture  sufﬁces check looping automaton accepts                                                        temporal conceptual model ervt ter model sup  tree observation yields exptime                                                        ports timestamping evolution constraints isa links dis  decision procedure satisﬁability salcqi empti                                                        jointness covering participation constraints artale et  ness problem looping tree automata decidable time                                                        al inervt timestamping implemented using  linear size automaton vardi wolper                                                         marking approach sketched introduction    use extended quasistates states automaton                                                        translation atemporal constructs similar  act slim matching successors deﬁne transition                                                        ing alcqiusseeartale  et al  details  relation trees constant branch                                                        examples following brieﬂy recall translation  ing degree use amorphous looping automata                                                        atemporal constructs show salcqi sufﬁ  similar automata model introduced kupferman                                                        cient capture fragment ervt timestamping  vardi  case branching degree                                                        temporal construct  bounded transition relation represented                                                          translating ervt tdls entities —denoting  ﬁnitely trivial way                                                                                                                            sets abstract objects—are mapped concept names ae  deﬁnition  looping tree automaton looping tree au attributes —denoting functions associating mandatory  tomaton δ mlabeled tree deﬁned concrete properties entities—are mapped roles names                                        ⊆  set states alphabet maseti initial rp interpreted total functions enforced                             ⊆   ×    ×  states transition relation δ              gci      rp  insalcqi   unrestricted entities  let ner   tree root ∈ label attributes need special treatment properties snapshot  ing function   → marun   mapping  temporary entities attributes captured follows  γ  →   γr ∈ γαα γβ                                                                 ae   ae          snapshot entity  α β ∈ ∈ δ α ∈ looping automaton                                                                ae   ¬ae         temporary entity  accepts labeled trees exists run                                                                ae  ∃rp         snapshot attribute                                                                 ae  ∀rp  ⊥      temporary attribute  construct automaton follows                                                        relationships—nary relations abstract objects—are  deﬁnition  let concept salcqi    translated using reiﬁcation each nary relationship                                            tbox looping automaton ct    δ translated concept ar global role names  ﬁned setting    etpc   ∈                                            iw                                                        rrn intuitively each instance ∈ ar  tuple  realizes rootandδ set tuples                  iw                                                      yyn yi ∈ tuple relationship  ∈  slim matching                                                                              time point ensure instance ar gives  successor                                                         rise unique tuple rweusegcis    ri    following lemma states obtained looping au  ≤ ≤ capture snapshot relationships assert  tomata behaves expected                           ar    ar temporary relationships assert                                                             ¬  lemma   τ slim tree iff τ accepted ar   ar tbox  ac                                                  note gcis fully capture tempo                                                       rary relationships example consider interpreta  easily seen exp extended                                     iw                                                        tion ww  Δa  bc      quasistates ac exp states                                                                                                   iw      iw       iw       construct transition function automaton  ar                                                                             iw               iw       need construct slim matching successors  bandr  gci                                                    ijcai                                                     
