              action description language iterated belief change                                    aaron hunter james delgrande                                          simon fraser university                                           burnaby bc canada                                         amhunter jimcssfuca                          abstract                          sensing results depends preceding actions pro                                                        cess generalize existing epistemic extension      interested belief change occurs allowing erroneous beliefs nonmarkovian belief change      sequence ontic actions epistemic  second contribution paper introduction      actions order represent problems  method solving belief evolution problems through answer      extend existing epistemic action language al set planning using method implement solver      low erroneous initial beliefs deﬁne non    epistemic projection problems action language      markovian semantics action language      explicitly respects interaction ontic ac      tions epistemic actions illus      motivating example      trate solve epistemic projection problems present commonsense example involving iterated belief      new language translating action descriptions change action return example pe      extended logic programs conclude    riodically paper example present      remarks prototype implementation  framed context zoo certain crocodile      work                                         fed morning crocodile fed bag                                                        food contains chickens ducks                                                        contents food bag varies year    introduction                                       crocodile sick eating chicken ini  reasoning effects actions important prob tially sick suppose eating chicken makes feel better  lem logical ai action formalisms deﬁned crocodile sick eats ducks  reasoning socalled ontic actions change state row crocodile eat food given  world sensing actions ﬁrst zoo keeper arrive morning typically feeds  corporated epistemic extensions notable crocodile giving unit food  malisms shapiro et al  lobo et al  son suppose bob zoo keeper arrives morning  baral  jin thielscher  extensions work bob believes crocodile unfed  effects sensing actions deﬁned terms belief arrives believes food bag contains chickens  vision simply supplementing action formalism suppose bob feeds crocodile observes  revision operator sufﬁcient iterated belief sick suggest bob conclude  change caused sequence ontic actions sensing initial beliefs incorrect sickness crocodile  actions determined iteratively hunter del dicates actually eaten ducks interested  grande  informally interpretation sensing using action description language formally model  sult inﬂuenced preceding sequence ontic belief change occurs problems form  actions paper deﬁne action formalism  belief change caused sequence actions respects  preliminaries  nonelementary interaction ontic actions sensing                 actions                                                action language    order ground discussion frame results brieﬂy review syntax semantics action lan  epistemic extension action language gelfond guage introduced gelfond lifschitz   lifschitz  base semantics action lan action signature pair f a denotes  guage belief evolution operators hunter del ﬁxed set ﬂuent symbols denotes ﬁxed set action  grande  results seen application symbols state propositional interpretation  belief evolution methodology action formalism denotes set states φ denotes set states  main contributions paper follows satisfying formula φaliteral element  introduce action formalism suitable reason element preﬁxed negation symbol let lits  ing iterated belief change interpretation denote set literals use upper case letter                                                    ijcai                                                    range actions lower case letters fg range fullchicken fullduck indicate crocodile  literals lower case letter range states eaten action effects described follows  deﬁnition  effect proposition language     feed causes fullchicken hicken  expression form                                        feed causes ¬sick hicken                                                                   causes        ¬c               causes ∧···∧gp                          eed         ullduck       hicken                                                                feed causes sick fullduck ∧¬c hicken  ∈ ∈ lits each gi ∈ lits                                                                lookatcroc causes know  sick ifsick  set effect propositions called action description bob’s initial belief state κ  ¬fullchicken ∧  action description ad deﬁnes transition relation ¬fullduck ∧ hicken interested bob’s new  states indicated following deﬁnition       beliefs performing actions feed lookatcroc  deﬁnition  let ad action description let s feeding crocodile bob’s new belief state κ                                                  states let action symbol Φads  subset ¬sick result looking crocodile                                                                                           ⊆   ⊆      ∪                  semantics deﬁnes bob’s ﬁnal belief state                                      ∅ performing revision considering action  ea set literals ∈ ea history leads bob hold vacuous set beliefs despite  causes ∧ ··· ∧ gp ∈ ad fact plausible world histories support bob’s   ∧···∧gp                                      observation problem avoided introducing                                                        appropriate belief change operator  intuitively transition relation maps pair new  interpretation s exactly like values  belief evolution  ﬂuents affected                             way address erroneous beliefs ak                                                        introduce agm revision operator ∗ alchourr´on et al                                                                                                     action language                                 deﬁne bob’s new beliefs κ ∗ sick  epistemic extension based language approach possible bob’s ﬁnal  ak  lobo et al  section brieﬂy sum belief state contain states satisfying sick ∧ hicken  marize action description portion ak  remark case example ∗ dalal operator dalal  complete speciﬁcation ak includes queries plans  suggest states possi  nondeterministic action effects restrict attention ble bob aware sickness follows eating  portion language deﬁned section chicken informally bob’s observation feeding    belief state set states syntax ak ob cause revise initial belief state belief evolution  tained extending sensing actions effects given operators proposed model kind reasoning  propositions form                           hunter delgrande  brieﬂy present simpli                                                        ﬁed version belief evolution             causes know    ∧···∧                                  gp           let Φ transition relation deﬁnition  asso                                                        ciate belief projection operator   Φ follows  semantics ak associates epistemic transition rela                                                      belief state κ action  tion Φad action description adanepistemic                                                                                 transition relation set triples κ κ∗ κ      ∈ Φ ∈ κ                         ∗  action symbol κ κ belief states relation suppose ∗ agm revision operator  Φl   ad  deﬁned follows nonsensing action actually let ∗ set states argument       ∗ ∈ Φl                ∗   κ κ     ad κ obtained updating formula clear agm revision equivalently  each world κ accordance semantics aifa formulated manner deﬁne belief evolution                                          ∗ ∈ Φl                                                  ¯  sensing action described  κ κ ad operator ◦ associated   ∗ presently let denote  just case following conditions holds   ﬁnite sequence nonsensing actions let φ denote                                                                                   − ¯       ∗                       ∧···∧                    propositional formula deﬁne φ set states    κ  subset κ  gp hold               ¯       ∗                       ∧···∧        ¬           gives path state φ true    κ  subset κ  gp hold     deﬁne ◦ follows       ∗                     ¬  ∧···∧                                              −    κ  subset κ    gp holds                     κ ◦a¯ φ  κ ∗ φ a¯   a¯                 ∗ ∈  Φk              ∗  informally κ κ    ad  means κ possible belief evolution operators essentially revise ini  belief state executing action belief state κ tial belief state applying effects nonsensing                                                      actions hunter delgrande  belief evolution    feeding crocodile                       operators deﬁned arbitrary sequences sensing  illustrate represent crocodile problem nonsensing actions simplify discussion present  crocodile problem described terms paper restrict attention sequences involving  actions feed lookatcroc ﬂuents    single terminal sensing action straightforward  hicken fullchicken fullduck sick informally extend results allow arbitrary action sequences  hicken true food bag contains chickens using deﬁnition belief evolution                                                    ijcai                                                      action language belief change               longer action sequences use belief evolution revise                                                        initial belief state determining effects    syntax  language obtained making slight modiﬁcation example cont’d crocodile example represented          ∪       ∩   ∅             let                       refer   ab  taking representation § replac  set sensing actions refer set non ing causestoknow proposition corresponding                                                                                                −  sensing actions symbol ranges sensing actions causestobelieve proposition note sick feed  symbol ranges nonsensing actions     set fullduck ∧¬c hicken according  deﬁnition  propositions ab following forms semantics ak  ﬁnal belief state                                                                   ∗f         ∧¬c            causes ∧···∧gp                                   κ     ullduck      hicken    eed                                                        regardless operator ∗ bob’s new belief state    causes believe φ ∧···∧gp                                                        nonempty include states food bag  ∈ ∈ oeachgi ∈ lits φ formula contains duck  note effect sensing action formula  ﬂuent symbol                                    reliable action descriptions    semantics                                        note crocodile example involves propositions                                                                   causes believe                                                       form                 φ   φ observations  semantics deﬁned respect pointed belief form understood represent reliable observations  states epistemic action sequences pointed belief state general say action description reliable                     ∈       ∅    ⊆                                                      ad  pair κ     κ    sthestates     ∧···∧gp  φ sensing effect proposition ad  represents actual state world κ represents set form  states believed possible pointed knowledge state causes believe    ∧···∧  pointed belief state s κ ∈ κ epistemic action                  φ        gp  sequence sequence aano each ai ∈  contrast action description reliable  ∈ each action description ad associate contained proposition  epistemic transition relation Φad easy readability   lookatcroc causes believe sick          Φ  write ad  function takes pointed belief state case looking crocodile causes agent  epistemic action sequence arguments returns lieve sick actually sick  new pointed belief state                             reliable action descriptions infallible sensing ac    let ∈  let ∈ sdeﬁneeff  tions following proposition formalizes fact  conjunction formula φ occurs proposition agent correct knowledge world conclu  form                                           sions drawn reliable observations correct            causes believe φ ∧···∧gp           proposition  let ad reliable action description                                                        let s κ pointed knowledge state epistemic                                                                      ¯                        ¯   ∧···∧gp position deﬁne action sequence follows Φads κ pointed  semantics ab note action description ad knowledge state  nonsensing portion ad describes transition relation  turn deﬁnes projection operator   refer  representing ak    projection operator deﬁned ad restrict translation ak action descriptions  attention deterministic actions following deﬁnition liable ab action descriptions                                       ∗  assumes ﬁxed underlying revision operator          deﬁnition  let ad action description ak                                                                                deﬁnition  let ad action description corre action description τ ad obtained ad  sponding projection operator  let◦ belief evolution placing sensing proposition sensing effect  operator obtained   ∗ pointed belief state precondition ψ following propositions                                               s κ deﬁne Φads κ aanos κ           causes believe ∧ ψ ∧ ψ                                                                   causes believe ¬  ∧  ¬  ∧        ···                                                               ψ      ψ                                                                    causes believe ¬  ¬    κ  κ ◦a¯ ef s                                                    ψ    ψ                                                          following proposition illustrates correspondence  transition relation associated returns                                         ad             given epistemic action languages  new pointed belief state new actual world obtained                                                                                   updating nonsensing actions a¯ new belief proposition  let ad action description let                                                        sensing action ad let κ belief state  state obtained belief evolution                                                                                 Φadκ κ  ∈ κ    content deﬁnition  action sequences length Φ           isasfollows                                           τad κ    κ                                                                                                         Φ                        proposition  illustrates action descriptions    nonsensing ad   κ    κ      terpreted disjunctively determining possible outcomes                                                             sensing Φads κos κ∗effo s    κ assumption actual world κ                                                    ijcai                                                      comparison related formalisms                 interested topological revision operators  son baral deﬁne alternative extension ain  reasons topological revision operators require  sensing effects given propositions form external notion similarity depend  determines  son baral  deﬁne underlying transition second topological revision                                                        operators wellsuited implementation pro  translation σ ab replacing each propo  sition propositions causes believe pose sections wish imply  causes believe ¬f ¬f                     topological revision appropriate action domains                                                        topological revision appropriate domains er  proposition  let ad set sonbaral propositions roneous beliefs explained action occurrences  restricted pointed knowledge states transition relation  Φ   σad equivalent corresponding sonbaral transi example cont’d extend crocodile example  tion relation                                        troducing new action called exchangef ood toggles  ab subsumes epistemic extensions value ﬂuent hicken new action allows  ab three extensions agent change food available feed crocodile  allows erroneous beliefs respects interaction sider crocodile example extended new action  sensing actions ontic actions                    suppose ∗ denotes topological revision operator    epistemic situation calculus belief deﬁned saw earlier bob needs evaluate expression  through ranking function initial states persists       ∗f         ∧¬c          ontic actions executed shapiro et al  sit    κ    ullduck      hicken                            uation belief set bel set minimally ranked deﬁnition need ﬁnd subset fullduck ∧  situations consistent sensing actions executed ¬c hicken reached minimal length path  restrict attention situation calculus theories action κ result revision  effects deterministic initial situations corre  spond distinct states following result       κ   exchangef ood   feed  proposition  ontic action sensing bob’s ﬁnal belief state  action belief evolution operator ◦  beldoo doa  bels ◦a o                         κ   exchangef ood   feed   feed  follows translate action theories epis informally bob explains fact crocodile sick  temic situation calculus equivalent action descriptions postulating chicken replaced duck  ab said epistemic fluent crocodile fed plausible conclu  calculus sensing results satisfy agm postulates sion example postulating actions explain observa  jin thielscher  work suggests tions lead nontrivial inferences action  action domains simply revising current belief state leads mains example extend example allow  unintuitive results represent domains bob inventory number ducks remaining  need deﬁne belief evolution operators directly fluent topological revision suggest reduce  calculus straightforward        total ducks observes crocodile’s sick                                                        ness    implementation considerations  section illustrate solve problems topological revision essentially form abduction                                                        agent looks shortest sequence actions  volving iterated belief change action through answer                                                        explain observation clear suggesting  set planning proceed follows deﬁne                                                        suitable action domains  vision operator based path length introduce                                                        appropriate extended crocodiletype domains  informal procedure used solve belief evolution                                                        plausible exogenous actions explaining observation  problems respect operator present                 translation answer set programming illustrate  belief evolution topological revision  procedure automated                                                        section illustrate belief evolution topo    topological revision operators                   logical revision reduced ﬁnding shortest paths  transition relation states used deﬁne natural start considering single nonsensing action let κ denote  agm  revision operator let Φ transition relation belief state let denote action symbol let φ denote                                                        formula interested determining  let κ α sets states technical reasons assume                                                                                     −  state α reachable κ ﬁnite path       κ ◦a φ  κ ∗ φ    Φdeﬁneκ   ∗ α subset elements α  reached minimum length Φpath assump figure  illustrates calculated topo  tion state α reachable κ follows logical revision function ﬁgure shows large box rep  ∗ deﬁnes agm revision operator refer resenting φ−a states reach φ  topological revision operator deﬁned            executing action circle inside φ−a represents                                                    ijcai                                                                                                              each τnad contains rules                                                                    ¬  ←                           −                                                               gp        φ                       κ                                                                     action atom ∈                                                                                                   fthenτnad  contains rules                     shortest path                                                                          ¬  ←                                                                                                                                                         ←     ¬                                                                                                                                                        ∈         contains                                                                        τ  ad                     rφ                                                                               fi ←   ¬fi fi                                                                       ¬fi ←   fi  ¬fi                                                           pair distinct action symbols                                                                                                                                  aa τn ad   contains rules                                                                            ¬ai ←  ai         figure  visualizing topological evolution    ﬁrst sets rules taken directly lifschitz                                                        turner’s translation clifschitz turner rule  subset minimally distant κ  states ﬂuents inertial  states  text means elements reached κ min action occurs each point time                                               −    imal length path words circle inside φ proposition  complete set answer set τnad             ∗  −   represents κ φ    gives simple procedure form  computing κ ◦a φ                                                                n                n−    determine φ−a                                                                   fi  ∈ si∪  ai   ai    let path   denote set shortest paths κ                        φ−a                                                        path sasan−sn transition    let κ set terminal nodes paths path lation described ad                   let κ   κ                                      answer set τnad corresponds path  clearly κ ◦a φ  κ procedure allows transition relation  compute outcome belief evolution trajectories purpose planning useful add rules  length  note steps   straightforward im τnad restrict admissible answer sets let  plement solver need mechanism determining conjunction literals ∧···∧kpdeﬁneτnad                               −  set shortest paths κ φ            logic program obtained adding following rules                                                        τnad kkp easy    translation answer set programming            swer sets τnad correspond paths length  answer set planning refers approach planning start state true interested  problem translated extended logic program using answer sets solve k◦a fwhere◦ given  answer sets correspond plans lifschitz  projection operator topological revision operator  action languages translated logic pro deﬁned ad  gramming answer set planning demonstrate simplify discussion assume each  existing translation modiﬁed purposes action description ad contains proposition    need translation logic programming ad form  translation obtained modifying known translation      causes     ∧···∧  lifschitz turner letad action                              gp  description action language natural number proposition exists action deﬁne                                             deﬁne associated logic program τn ad prea fg  ∧···∧gp deﬁne prea  property answer sets τnad correspond paths ⊥  length transition relation described ad lan                                                        proposition  ∈ ∈ lits ∈ athen  guage τnad consists disjoint classes atoms  deﬁned follows each ≤ each ∈ lan    ⇐⇒  prea ∨ ∧ prea ¬f  guage τnad contains atom fi each inand                                                                     −  pre      ∨  ∧pre    ¬    each ∈ language τnad contains atom ai follows                 logic program τnad consists following rules position basic procedure                                                        implementation belief evolution solver given    proposition form                          ad                            fdeﬁneevolk pair belief states returned                causes ¬f ∧···∧gp             following procedure                                                    ijcai                                                    
