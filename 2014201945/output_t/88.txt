                     phonetic models generating spelling variants                                        rahul bhagat eduard hovy                                        information sciences institute                                      university southern california                            admiralty way marina del rey ca                                             rahul hovyisiedu                         abstract                          source language english knight graehl                                                          transliterator quite likely generate spelling       proper names english nonenglish     commonly used spelling       different spellings transliterated case use spelling variant model match       nonenglish source language english  spelling commonly accepted variants       knowing different variations significantly   course generating possible spelling variants       improve results namesearches various   impossible task given      source texts especially recall important quire simulate possible corruptions se      paper propose novel phonetic models   quence characters undergo produce reasonable       generate numerous candidate variant spellings spelling approximate using different       methods show threefold improvement    models       baseline generate times   paper propose previously unexplored       good variants compared human      methods generate spelling variants person       maintaining respectable precision       method unique phonemebased approach using                                                         cmu pronouncing dictionary employ    introduction                                        em algorithm baum  dempster et al  learn   paper present novel approach generating mappings letters corresponding pho  variant spellings person’s                 nemes directions use noisy channel     proper names general important text model based translator generate nbest phoneme se  news stories especially revolve people places quences use reverse translator gen  organizations proper names play major role helping erate nbest variants phoneme sequences   distinguish general event like war   second method completely unsupervised method   specific event like iraq war raghavan allan collect list  million names words                                                   using named entity extraction applied large     proper names english spelled various ways text corpus  gb plain text collected web   spite existence standard forms use popular sound based algorithm called soun  one’s common variations translitera dex knuth  group variants order   tions different source texts osama make searchable   vs usama problem pronounced dealing   baseline use based names list                                                                                     nonenglish names dealing spellings obtained census  list consists   nonnative speakers                                   names  names male female                                                                                           missing spelling variations result collected census bureau  given use   omission useful information search levenshtein distance edit distance hall dowling   person example imagine defense analyst reporter  names possible variants given   searching english transcripts arabic tv news news   paper articles information person transcrib   best knowledge used bi  ers different news sources spell directional phonemebased approach way   person differently relevant information generate spelling variants raghavan allan    person  automated spelling variant used soundex codes normalize names corpus   generator help locate potential mentions purpose story link detection task zobel dart   person question                                                                                       useful application variant spelling generator  httpwwwspeechcscmueducgibincmudict   transliteration imagine transliterator uses pho  httpwwwcensusgovgenealogynamesnamesfileshtml   nemebased model transliterate nonenglish      httpwwwcensusgov                                                       ijcai                                                     used soundex phonetic string    pronunciation learning method   matching algorithms retrieval               method use cmu pronouncing dictionary     rest paper organized follows  section                                                          pronunciation dictionary north american english   discusses related work section  describes meth                                                        data training models cmu dictionary consists   ods section  describes experiments section   english words pronuncia  presents results section  discusses conclusion                                                         tions fixed set  phonemes   future work                                                          noisy channel model    related work                                        use noisy channel model commonly used                                                         machine translation speech recognition basic   problem spelling variants studied problem model framework machine translation target   information retrieval community especially language sentence supposedly corrupted   context query expansion word conflation source language sentence noisy channel brown   purpose various methods including stemming  et al    complex morphological analysis proposed                                                           argmax pe   argmax pepf          widely used hull  krovetz  tzoukermann et                                                                          al   methods work normal eng                                                        –    lish words effectively applied                                                           pe represents probability target language   proper names given difference nature proper                                                         sentence language model    names english words                                                           pf  represents probability generating     past people worked proper names                                                         source language sentence given target language sen  knight graehl  proposed cascaded finite state                                                         tence translation model   transducer fst based approach transliteration                                                           pe  represents probability generating tar  japanese english virga khudanpur  pro                                                        language sentence given source language sentence   posed similar transliteration approach chinese                                                         estimated using noisy channel model   english use cross language information retrieval   approaches use sounds pronunciations   similarly case assume variant spelling   bridge language result translation processes    targeted transliteration different languages  characters original translated   say japanese english applicable    nbest sequences phonemes   generating variants language raghavan      phoneme sequences translated nbest   allan  studied problem proper spelling      character sequences generating variants   variants automatic speech recognition asr pro noisy channels representing   posed number methods match inconsistently spelled translation character sequence phoneme se  names asr methods tailored  quence ph text speech representing   speech recognition errors require parallel corpus translation form phoneme sequence character   speech corresponding transcriptions zobel dart sequence speech text   used various phonetic string matching algorithms text speech   including soundex retrieval approach   argmax pph   argmax pphpc  ph       deals matching phonetically similar names      ph          ph   generating                              speech text     methods suitable task   argmax pc  ph  argmax pcpph        want able model reasonable transformations                    spelling undergo actually generate variant spellings  training                                             apply em algorithm baum  dempster et al                                                          directions cmu dictionary obtain     generating spelling variants                       ibm model brown et al  alignments                                                         characters phonemes directions gives   section present distinct complementary                                                         translation models  pph  pc  ph   approaches generating different spellings                                                           obtain phoneme language model pph use   method use supervised learning approach                                                          phoneme sequences cmu dictionary   overgenerate large number variant spellings varia                                                        using training data build phoneme trigram lan  tions pronunciation pronunciation                                                         guage model   learning method                                                           obtain character language model pc use     second method use novel approach                                                         list  million names extracted text using   obtain large list names group similar sounding                                                         training data build character trigram language   names using soundex knuth  use soundex                                                         model   different spellings   list soundex method                                                       ijcai                                                     implementation                                   soundex  algorithm   use giza package och ney  train levenshtein distance edit distance hall dowling   translation models obtain alignments  measure similarity strings meas  letters phonemes directions using giza uring number insertions deletions substitutions   based alignments build translation mod required transform string    els “text speech” “speech text”     traditionally edit distance used spelling     use cmucambridge statistical language model error detection correction kukich  use   ing toolkit build language models use trigram edit distance measure finding names   based language models letters phonemes  close given doing lookup list     following knight graehl  represent each calculating edit distance strings   language models weighted finite state automaton length strings impossible practice use   wfsa each translation models weighted measure comparing large list need   finite state transducer wfst use uscisi better initially prune candi  finite state transducer toolkit carmel perform com dates use edit distance pruned list   position corresponding wfst wfsa   candidates   obtain noisy channel based wfst decoders – going   soundex algorithm knuth  patented   letters phonemes text speech  margaret o’dell robert russel ap  ing phonemes letters speech text        proximate string matching algorithm produces coarse    obtain variant spellings given place grained representation string using phonetic classes   noisy channel based wfst decoders cascade human speech sounds bilabial labiodental dental alveo  generates nbest list pronunciations given lar velar glottal representation consists   input second produces nbest list spell letter word followed three digits   ings each pronunciations combine represent phonetic class word   best spellings generated each pronunciations   use soundex divide huge list names   rank combined output sorting based increas bins similar sounding names index list   ing order edit distance original soundex fourcharacter code   creasing order weight variant gets variants look   decoder decreasing order number times appropriate soundexbin instead list   variant generated different pronunciations ties making search variants possible practice   broken randomly                                                          implementation     list soundex method                              use namedentity extraction bbn identi                                                        finder identify named entities corpus col  method use huge database names combined lect “person” names tagged corpus   phonetic sound matching algorithm called soundex unique names corpus frequencies   variant spellings                            run soundex list names divide    creating list names                        bins similar sounding names obtain    web contains proper names search  bins average  names each bin   create databases names manually collecting vari   obtain variants soun  ous lists like lists baby names census lists  dex code corresponding soundex    trying create lists manually bin nbest variants sorting based   tedious task results sparsely increasing order edit distance original   populated lists best resource names decreasing order frequency corpus ties   know census list contains fewer broken randomly    names names apart   handcreated lists meticulously prepared  experiments   experts spelled names interested   finding common misspellings names              experimental setup     overcome limitations decided create list   names automatically using corpus containing immediately clear evaluate   gb english text gathered web previous spelling generator  perform experiments   project ravichandran et al  applied bbn measure performance different methods   identifinder state art namedentity extraction sys spelling variants generation task    tem bikel et al  extracted entities   randomly select  names list   namedentity extractor tagged “person names” baby names run each systems including   gave list  million unique names baseline names generate  variants                                                         each names ask human look                                                         names generated each mark good        httpsvrwwwengcamacukprctoolkithtml       httpwwwisiedulicensedswcarmel                                                       ijcai                                                          pronunciation learning             list soundex                    baseline       puts                   precision recall      fscore precision recall       fscore precision recall fscore                                                                                                                                                                                table  results     bad variants use human judgment measure   precision section  measure recall section  fscore harmonic mean precision                                                         recall calculated   ask human generate possible variants each                                                                            names compare output each sys                              tems variant list generated human                  baseline                                            result scores graphs   census list largest publicly available list table  shows comparison precision recall  names contains  names scores pronunciation generation list soundex    names male female apart names baseline systems different numbers outputs  list provides information frequency puts varied   effect   each use list resource building macroaveraged precision macroaveraged recall   baseline                                      macroaveraged fscore shown     each  test names obtain variants  ing  names closest levenshtein edit dis  tance given sort based increas   ing order edit distance decreasing order frequency                                                                                                                            results                                                                             pronunciation learning                                                                                           list soundex                                                                                            baseline                                                             evaluation metrics                                  precision                                                              use standard natural language processing measures     precision recall fscore measure performance     each systems                                                                                                       obtain precision ask human look             outputs  outputs generated each systems mark   correct incorrect variants precision each figure  precision graph   obtained            correct outputs                                                  outputs                                given comprehensive gold standard   list variants finding true recall quite hard   obtain recall each relative human                                                                                             pronunciation learning    ask human look each  test                              list soundex    names generate set possible variants each recall                       baseline  compare output each   human generated list recall each   obtained                                                systemoutputsin human list                                                                                    outputsin human list                               outputs                                                                 figure  recall graph                                                       ijcai                                                                                                          uses large meticulously prepared list names                                                         census list feel fact                                                      census list meticulously prepared went                                                         baseline given nature task important                                                      misspellings correct spellings                                            pronunciation learning  conclusion                                    list soundex                                      baseline   fscore                                              results clearly show success using pho                                                     netic models purpose generating spelling variants                                                         attribute success fact spelling variants                                                            ambiguous mapping                                                        pronunciations corresponding rendering                             outputs                        letter sequences spellings models derive                                                         power fact different people hand           figure  fscore graph                       tend pronounce letter sequences differently       figures    graph precision recall tend write different spellings   scores respectively three systems corresponding pronunciation   number outputs varying    striking observation fourfold increase                                                      number good variations compared vari     variants perform ants generated human clearly reinforces need   ances pronunciation learning list soundex variant generator query expansion task   methods close each pronunciation   interesting conclusion clear superiority   learning method fscore  list soun automatic acquisition large lists compared   dex method fscore  systems show slow manual preparation purpose generating   roughly threefold improvement baseline variants low recall ranges  outputs   fscore  result validated demonstrated high performance list soundex   tailed paired student’s ttest manning schütze  method compared baseline   ttest shows statistically significant difference   future like build hybrid   baseline systems combine outputs algorithms rank   shows statistically significant difference combined output meaningful way like   performances pronunciation learning list test algorithms nonenglish names initial   soundex systems                           experiments nonenglish names look promising     graphs three systems show intuitive trend presently baseline compare   increase number outputs each names like apply   generates   precision each algorithms entities technical terms   goes slowly recall goes            likely misspelled reason person names                                                         future plan modify algorithms tailor    discussion                                        variants kind mistakes likely   clear results pronunciation occur spelling names different languages   based methods generating variants reap good native speakers different languages owing different   sults clear using methods signifi sounds present languages   improvement baseline achieved    encouraging relative recall compared acknowledgments   humans  test names human   able generate average variant spellings authors like thank mr andrew philpot   pronunciation generation list soundex providing list baby names variants dr   methods generated  variants precision  patrick pantel expert advice evaluation   correct variants times human   generate  course goes line general references   observation humans good telling good thing baum  le baum inequality associated   bad good generating set possi maximization technique statistical estimation   ble good things                                         markov process inequalities –      interesting precision recall  scores pronunciation generation list soundex bikel et al  daniel bikel richard schwartz   methods significantly better baseline ralph weischedel algorithm learns   output sizes came bit surprise initially whats machine learning vol     cause expected baseline perform  pages –    number outputs small given baseline                                                       ijcai                                                    
