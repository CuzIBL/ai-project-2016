             fringesaving search algorithm  feasibility study                           xiaoxun sun                                  sven koenig                science department                  science department               university southern california            university southern california                 los angeles ca                    los angeles ca                       xiaoxunsuscedu                              skoeniguscedu                        abstract                          list point time search                                                        current search problem possibly deviate      paper develop fringesaving        search immediately preceeding search problem      fsa incremental version repeat cause search current search problem en      edly ﬁnds shortest paths known gridworld countered changed edge cost fsa restarts      given start cell given goal cell search point following sections ﬁrst      traversability costs cells increase decrease scribe search problems fsa solves second ex      ﬁrst search fsa plain fsa reuses information im      fsa able ﬁnd shortest paths dur  mediately preceeding search speed current search      ing subsequent searches faster finally present ﬁrst experimental results demonstrate      reuses beginning immediately preceed fsa runtime advantage lpa      ing search tree identical current koenig et al alternative incremental version      search tree fsa does restoring content      open list point time      search current search problem      viate search immediately pre    search problems notation      ceeding search problem present ﬁrst experi   fringesaving fsa solves pathplanning problems      mental results demonstrate fsa known ﬁnite gridworlds vertices correspond      runtime advantage lifelong planning cells edge costs increase decrease time      lpa alternative incremental version  paper version fsa works grid                                                    worlds square cells blocked unblocked                                                        unblocked cell    introduction                                       adjacent cells cost provided adja                                                        cent cell unblocked use following notation  research heuristic search studied solve able state search problems formally denotes ﬁ  oneshot search problems search repet nite set unblocked cells succs ⊆ denotes set  itive process needs ﬁnd shortest paths series blocked cells border unblocked cell ∈ fsa repeat  similar search problems world changes edly determines shortest unblocked path given  time example trafﬁc conditions change                                                        blocked cell sstart ∈ given unblocked goal cell sgoal ∈  drives airport change                                                        sstart  sgoal traversability cells changes al  current route radio reports additional congestion ways knowing cells currently unblocked  case replan new situation incremen  tal search algorithms able ﬁnd shortest paths  series similar search problems faster possible  solving each search problem independently reusing infor hart et al  popular heuristic search al  mation preceeding searches koenig et al gorithm maintains three values cell  paper develop fringesaving fsa hvalue hs cell usergiven approximation  cremental version hart et al  repeatedly distance cell goal cell  heuristic  ﬁnds shortest paths known gridworld given start assume consistent satisﬁes triangle  cell given goal cell traversability costs cells equality pearl  changed during search  increase decrease fsa able ﬁnd second gvalue gs cell approximation  shortest paths during subsequent searches faster distance start cell cell changed dur  reuses beginning immediately preceed ing search finally parent pointer parents  ing search tree identical current search cell points parent cell search tree  tree fsa does restoring content open changed during search maintains data                                                    ijcai                                                    structures closed list contains cells  expanded during search initially  second open list contains cells gen  erated expanded during search initially  contains start cell gvalue zero repeats  following procedure removes cell smallest  sum gvalue hvalue open list inserts  closed list expands performing following  procedure each unblocked adjacent cell adjacent  cell open closed list gen  erates adjacent cell setting gvalue adjacent  cell gvalue expanded cell plus setting  parent pointer adjacent cell expanded cell       figure  search problem   inserting adjacent cell open list ad  jacent cell open list gvalue expanded                                                        simple ﬁrst search fsa determine shortest path  cell plus smaller gvalue adjacent cell                                                        start cell goal cell search  sets gvalue adjacent cell gvalue                                                        assume traversability cells changes  expanded cell plus sets parent pointer                                                        consider search determine shortest path  adjacent cell expanded cell terminates imme                                                        start cell goal cell second search ini  diately open list                                                        tially expands cells order ﬁrst  expand goal cell simplicity count goal cell                                                        search fsa restores overall state ﬁrst search  expanded figure  shows state search                                                        point time second search possibly  start cell marked goal cell marked  termination use consistent manhattan distance deviate second search encoun                                                        ters cell traversability changed  sum absolute distances cell                                                        searches fsa restarts ﬁrst search point  goal cell approximation distance cell  goal cell cell hvalue lower left cor time performing second search                                                        scratch state search given content  ner generated cell gvalue upper left                                                        open closed lists gvalues parent  corner sum gvalue hvalue upper right cor  ner parent pointer pointing parent cell pointers cells contained fsa executes                                                        following steps  search tree expanded cell sequence number                                                          step  restoration closed list assume  lower right corner indicates expanded                                         fsa makes use following properties complete searches expandedid  terminates second sum gvalue hvalue                                                        indicate gvalue cell current   sequence expanded cells monotonically nondecreasing                      time gvalue parent pointer cell identifying reusable cells repeatedly checking                                                        expandedids  blockidexpandediterations lines   correct expanded change set generatediterationsiteration reusable cells  longer gvalue expanded cell equal regenerated search way  distance start cell cell  start distance search knows gvalues cells current  cell shortest path start cell cell decrease gvalues regenerate cells  identiﬁed reverse following parent pointers lines  implemented efﬁciently iden  cell start cell property implies ﬁnds tifying traversing relevant fringe  lines   shortest path start cell goal cell termi  efﬁciently implemented linked list skip  nates expand goal cell fourth elements blockidi cell expandedids                                                                              path exists start cell goal cell terminates blockid expandediteration exists  efﬁcient  open list                       implementation fsa traverses immediate outside                                                        continuous area reusable cells borders                                                        gridworld case continuous area reusable cells touches  fsa                                                 border end fsa traverses immediate outside                                                        continuous area reusable cells clockwise direction start  fringesaving fsa incremental version ing anchor cell leave anchor cell                               figure  gives pseudo code idea fsa second time direction reaches cell                                                        border second case traverses immediate outside    function openinserts inserts cell open continuous area counterclockwise direction starting  list openp ops removes returns cell small anchor cell reaches potentially dif  est sum gvalue hvalue open list fol ferent cell border fourth gridworld figure  illus  lowing comments meant help reader understand trates process search problem figure    pseudo code better  initializations lines  efﬁcient implementation fsa collapses  actually executed memory cells typically initial variables generatediterations expandediterations  ized zero  cell generated during variable iterations requires code changes make  search line  sets generatediterationsiteration pseudo code harder understand                                                    ijcai                                                                                       figure  search problem  continued    sequence number cell ﬁrst search lem maintaining following global variables iteration  cell expanded expandedidsth during ﬁrst number current search iteration   search start cell expanded ﬁrst cell ex during ith search fsa maintains value  panded during ﬁrst search expandedids∞ blockidi ith search values expandedids  assume cell s changed traversabil expandediterations cell initialized fol  ity searches determine value lows blockid   cells expandedids  second search expands expandediterationsfsathenmain  cell expandedids min order ﬁrst tains following invariant directly ith search  search cell s blocked second expandedids  blockidexpandediterations cell  search expands cell expandedids  expanded expandedidsth cell during  expandedids order ﬁrst search immediately preceeding search complete  cell including cell s set search  fsa determines cell    msexpandedids cell  s   expandedids mis reusable iterationth search  blocked second search expands cell proceeds follows invalidates cells                     min                                                                         expandedid       s∈succs expandedid  sequence numbers smaller setting blockid  order ﬁrst search cell minm blockidi  ≤ ≤ iteration  including neighbor cell s ex faster visiting cells invalid sequence numbers  panded ﬁrst ﬁrst search set    second expands cell during     min                                     iterationth search sets expandediterationsiteration               s∈succs expandedid         ∈                                             expandedidsm        fi  cells   changed traversability                      ∞                    searches second search expands ev nally sets blockid iteration  iteration                                                       iteration   ery cell expandedids   mins∈s ms   order ﬁrst search  numbers step  early termination goal cell reusable  curly braces refer line numbers pseudo code fsa does need replan shortest path  cells guaranteed unblocked start cell goal cell immediately pre                                                        ceeding search shortest path current search  new closed list refer reusable    cells ﬁrst gridworld figure  illustrates process   start cell reusable blocked fsa  search problem figure  cell se terminates replanning path  quence number  blocked cells sequence start cell goal cell start cell reusable  numbers  reusable indicated grey unblocked fsa performs complete search  turns maintaining sequence numbers scratch  complicated discussed far case step  restoration open list unblocked  searches row fsa reuse cells nonreusable cells border reusable cells  different searches like sequence num new open list fsa identiﬁes anchor  ber expandedids mean cell ex cell nonreusable cell borders reusable  panded expandedidsth during immediately preceeding cells following parent pointers goal cell  search immediately preceeding search start cell transitions nonreusable cell                                                                             complete search consider case  reusable cell   nonreusable cell  cell expanded during ﬁrst search cell anchor cell second gridworld figure  illustrates    reusable second search    cell received sequence number cell fsa follow parent pointers goal cell  during second search fsa start cell path start cell goal cell existed                                                        immediately preceeding search path exists  termine during search sequence number simply follow path goal cell start cell  cell invalid fsa addresses prob ﬁrst greedily decreases distance start cell                                                    ijcai                                                     figure  search problem  figure  search problem               figure  search problem                                                           parent pointer unblocked cell changed during  process search problem figure  resulting                                                        search search ﬁrst path  chor cell second fsa identiﬁes cells belong                                                        start cell cell question shorter path  relevant new open list  fringe                                                        start cell cell question state  reusable cells form continuous area reach                                                        search needs restored point time ﬁrst  able start cell fsa traverse immediate                                                        path second path  side continuous area say clockwise direction                                                        gvalue parent pointer cell question need  starting anchor cell insert unblocked cells                                                        corrected figure  left right show search prob  border reusable cells relevant                                                        lem different main important update  new open list  fsa does stop                                                        gvalues parent pointers cells new open  reaches anchor cell second time                                                        list start cell goal cell figure  left  leave anchor cell second time direction                                                        shows ﬁrst search figure  right shows situa  gridworld figure  illustrates process                                                        tion cell blocked gvalue parent  search problem figure  cells form                                                        pointer cell incorrect need corrected  relevant new open list indicated ﬁg                                                         respectively  case   fsa  ure figure  shows search problem different                                                        ﬁnds reusable cell adjacent cell question sets  main termination condition important                                                        gvalue cell question gvalue reusable  start cell goal cell cell                                                        cell plus parent pointer cell question  came blocked fsa visits cells                                                        reusable cell  correct case  cell  traverses immediate outside continuous area                                                        new open list just unblocked exactly  reusable cells point does stop                                                        adjacent reusable cell prove correctness case  chor cell ﬁrst left south left                                                         section  east did stop identify  cells belong relevant new open list step  sorting new open list step impor  figure  shows search problem different main tant open list implemented binary heap  cells new open list relevant transforming set step binary heap efﬁ  start cell goal cell cell cient inserting elements set                                                                                                 blocked cells irrelevant binary heap corman et al                                                            step  restarting finally fsa restarts  cluded relevant new open list goal                         cell region unblocked cells new open closed lists   implemented  shortest path start cell goal cell function computeshortestpath  pass through just refer  open list mean relevant open list  theoretical results    step  restoration gvalues parent point correctness restoration gvalues parent  ers gvalues parent pointers reusable cells pointers cells new open list easy  guaranteed correct gvalues par case  prove following making use  ent pointers cells new open list necessarily following theorem speciﬁc kinds gridworlds  correct following cases cell new used paper result implies gvalue  open list just unblocked blocked parent pointer cell new open list correct  gvalue parent pointer updated parent pointer points cell reusable  preceeding searches need corrected case   second parent pointer cell new open list theorem  parent pointer cell ∈ change  points cell reusable gvalue par during search cell  ent pointer need corrected case  understand case expanded cells adjacent cell gvalue   consider complete search assume gvalue parent pointer cell changes                                                    ijcai                                                    procedure initialize                                                 proof consider unblocked cell ∈    blockid                                                                                           forall cells                                   unblocked cells ∈ adjacent cell hs  − hs    generatediterations   expandediterations                            hvalues manhattan distances   expandedids                                means cells adjacent cell                                                                                               open  ∅                                       different hvalues assume cell   gsstart                                    expanded during search cell generated   openinsertsstart                                                during expansion parent pointer cell    generatediteration sstart                                                            iteration                                    set cell  assume cell expanded later  function computeshortestpath                        during search parent pointer cell   blockiditeration∞            ∅                                     changed during expansion parent pointer cell    open                                                                                  openpop                                 set cell  gs hs  ≤ gs hs    expandediterationsiteration   expandedidsm                                sum gvalue hvalue sequence expanded                                           cells monotonically nondecreasing time furthermore                                                                 sgoal                                       gs  gs   parent pointer cell     return true                                                                                                                     changed                                                                                                          forall ∈ succs                             gs  hs gs  hs   ≤       generatediterations  iteration gsgs’            −   ≤−             gs’gs                                   alternatively                                                                                      generatediterations iteration                   −                                                                  case        parents                                                                                                                            −    −                            openinserts                                                   return false                                    implies − ≤−c start distances                                                                                  function cellreusables                              gvalues cells differ   expandedids  blockidexpandediterations                −         return true                                     case          thismeansthat   return false                                    parent pointer cell change during  procedure updatemazetraversability                  search increases change   tmpblockid  ∞                                                              forall cells traversability changed  consider unblocked cell adjacent cell   blocked                                expanded parent pointer cell changed     cellreusables                                ≤     ≤           expandedids  tmpblockid                              sum        tmpblockid  expandedids                gvalue hvalue sequence expanded cells                                               monotonically nondecreasing time holds       parentsnull                                                                                                                                                                         forall ∈ succs                             hs gs   hs      − gs   hs                               cellreusables                                                                                                                gs hs  gs   hs    gs   hs          expandedids  tmpblockid                                          tmpblockid  expandedids            cells adjacent cell different   forall iteration                          values hs equal hs hs gs   tmpblockid  blockidi                                                                     blockiditmpblockid                        equal gs  gs  gs  equal gs     blockiditeration                         parent pointer cell ﬁrst changed  procedure retrievefringe                            cell s later longer changed cell s   open  ∅                                                              iteration  iteration                        gs  equal gs  means expanded             sgoal                                          cells adjacent cell gvalue parent   cellreusableparents    parents                                  pointer cell changes    sstart     exit  path                                                      area contains exactly cells cellreusables  use theorem follows during course                                  forall ∈ succs cellreusables                                                        search gvalue cell increase     generatediterations iteration   unblocked                              restoring earlier state search gvalue     parentsnull cellreusableparents                                                       cell decrease assume parent pointer cell       forall ∈ succs                               cellreusables                        new open list points cell reusable                                 parentss                                                        gvalues reusable cells correct gvalue          gsgs           break                                    cell question does need increase remains     generatediterationsiteration              gvalue reusable cell plus gvalue     openinserts   initial cell left direction parent pointer cell question remain correct  procedure main                                      assume parent pointer cell new open list   initialize                                    points cell reusable clearly parent pointer   repeat   computeshortestpath                   needs corrected directly set non     exit  path                    reusable cell during immediately preceeding search   repeat     identify path using parent pointers use pointed cell larger gvalue point     wait traversability changes               time expanded cells adjacent cell question     updatemazetraversability                   ≤                              gvalue according theorem  reusable     blockid iteration expandedid sgoal    retrievefringe                                cells adjacent cell question subset   false                                     sequence numbers smaller sequence number                                                        nonreusable cell fsa ﬁnd reusable            figure  fringe saving fsa                                                    ijcai                                                    
