             generalizing graphplan formulating planning csp                          adriana lopez                          fahiem bacchus                      dept science              dept science                       university toronto                   university toronto                         toronto ontario                        toronto ontario                        canada ms                         canada ms                       alopezcstorontoedu                  fbacchuscstorontoedu                          abstract                      selman  gpcsp kambhampati                                                     planners systems encode transformed repre•      examine approach encoding planning sentation planning problem called planning graph       problems csps closely present sat csp respectively planning graph plan•      simple csp encoding planning problems ning specific construction blum furst        set transformations used computes represents important additional structural       eliminate variables add new constraints information planning problem encoding       encoding show transformations un• planning graph original planning problem       cover additional structure planning problem                                                    blackbox gpcsp able capture       structure subsumes structure uncovered structure planning problem encoding       graphplan planning graphs solve csp  results significant improvement performance       encoded planning problem using standard csp                                                      approach bypass construction planning       algorithms empirical evidence presented val•                                                   graph instead study techniques equally       idate effectiveness approach solving                                                    exploit structure planning problem       planning problems show pro•                                                   time work directly csp encoding demonstrate       totype implementation effective stan•                                                   possible develop transformations uncover       dard           prototype compet•          graphplan                               additional structure obtained planning graphs       itive far optimized planning graph based                                                      advantage approach works directly       implementations demonstrate ap•                                                   richer robust representation consequently       proach easily lifted complex                                                    obtain three important advances planning       types planning planning graphs par•                                                   graph construction  approach allows general•      ticular show approach easily ex•                                                   ize planning graphs particular enhance ap•      tended planning resources                                                    proach extract kinds structure allow solve    introduction                                   planning problem efficiently  eas•                                                   ily extend approach complex types planning   powerful technique solving planning problems                                                    problems involving resource usage    used kautz selman  impose fixed bound                                                    final result csp automatically utilize csp solu•  plan length converts problem lies                                                    tion techniques powerful standard   np resulting problem solved encod•                                                              searching methods paper pro•  ing number alternative npcomplete for• graphplan                                                   vide evidence points   malisms sat kautz selman  integer pro•                                                     present csp encoding planning problem   gramming vossen et ai  constraint satisfaction   problems csps van beek chen  kamb present set transformations used   hampati  using powerful algorithms eliminate variables add new constraints encoding   designed solve general problems show transformations subsume generalize                                                    planning graphs present empirical evidence val•    paper examine approach encoding plan•                                                   idate effectiveness approach solving planning   ning problems csps closely use simple                                                    problems demonstrate approach eas•  encoding translate planning problem csp                                                    ily lifted complex types planning show   advantage using csps general encoding par•                                                   easily extended planning resources finally   ticular preserves structure original                                                    close conclusions description future work   planning problem various transformations uti•  lize specific structure applied create new csp   easier solve                          generating basecsp     utility exploiting planning specific structure encode planning problem csp impose bound   convincingly demonstrated blackbox kautz size plan paper measure                                                                                          planning plan size number graphplanconcurrent steps gp  gpconcurrency constraints successor state   steps plan apparent sequel axiom allows unintended model   gpsteps means                                        actions step creating proposition     gpsteps each proposition action change deleting avoid unintended solutions re•  times encode gpstep plan csp strict concurrent actions way natural way   utilize fc  sets propositional variables serial constraint says action variable   sets action variables ranges  true step type constraint   propositions   actions range imposes graphplan concurrency basically asserts   number distinct propositions action instances actions simultaneously true interfere   planning problem respectively each variables each work chosen use graphplan   boolean intuitively means proposition gp concurrency constraints   true graphplan step means action instance  nonnull steps constraints impose constraint   aj executed graphplan step sdenote              step action variable true   opposite                                         blocks null steps plan contrast lblum furst     clearly setting each variables capture  kambhampati  allow null plan   gpstep plan effects illegal steps   plans nonsensical outcomes captured need refer set variables constraints   constraints ensure solution csp baskcsp solution basrcsp contain   setting variables satisfies constrains setting action variables comprises valid gp  legal plan various possible sets constraints concurrent plan basecsp solution   serve purpose present particular set gpstep plan exists problem    unary initial state goal constraints dropositional   variables step zero step required    reduction basecsp   values compatible initial goal states given basecsp representing kstep planning problem   planning problem                                  use various transformations modify generating    precondition constraints action true  new csp empirically easier solve equiv•  unless precondition satisfied rives constraint alent basecsp sense solution                  pre precondition rela•            new csp easily extended solution origi•  tive gpstep                                     nal basecsp transformations include inferring new    successor state constraints implicit classical planning constraints added csp eliminating var•  representations frame assumption predicates men• ious single valued variables transformations related   tioned actions description unaffected action known techniques enforcing local consistency   capture effects actions including implicit csp prior solving freuder    noneffects number different ways use based taking advantage specific logical form   iters formulation successor state axioms reiter  set constraints   particular each propositional variable gpstep     constraint propo•  adding graphplan mutex constraints   sition gpstep constraint says true known technique making csps easier solve   action true previously true add redundant constraints getoor et ai    action false successor state axiom constraints make explicit additional relations   constraints form                             variables redundant constraints useful add                                                          usually determined examining structure partic•                                                         ular csp precisely planning graphs                                                          insights manner actions propo•                                                         sitions interact used generate new set binary con•  creatcpl deletept set actions   create delete easy automatically generate set straints called mutexes   successor state constraints set strips action de• new binary constraints added csp enforcing   scriptions additionally using successor state constraints consistency freuder  csp consistent   mention additional propositions step easy valid assignment pair variables set   encode adl pednault  operators set succes• values additional variables   sor state axioms                                      assignments satisfy constraints variables                                                         making csp consistent expensive in•     note successor state constraints encode volves testing sets variables each test   action preconditions arc encoded separate constraints worst case takes time exponential planning problems   complication adl actions con• thousands variables impossible   ditional effects pi conditional effect action subject   condition successor state constraint disjunct serial actions used represent true concurrency               true executed adding timestamps states bacchus ady  pirri   condition held previous step                   reiter        planning  make entire basecsp consistent small     actions create similar condition    contribution graphplan demonstrated   satisfied actions creating    technique quickly achieves effective partial form    consistency limited collection variables      use csp representation directly compute    binary mutex constraints generated planning graphs    manner lift mutex computation general    framework easily generalized      mutexes graphplan generated three simple rules     base action mutexes actions gpstep    interfering effects preconditions mutex  addi•   tional action mutexes actions gpstep    mutex pair propositions each actions    preconditions mutex gpstep  proposi   tional mutexes propositions    gpstep mutex action achieves mutex    action achieves create planning graphs use constraints added    binary constraints testing similar conditions step test new mutex constraints step    csp encoded planning problem                         following result easily proved omit proof                                                          reasons brevity      base action mutexes mutexes present proposition   planning graph construction de•                                                         tected mutex constraint variables    bashcsp gpconcurrency constraints                                                          action propositional variables transforming                                                          bashcsp add mutex constraints                                                          variables csp be•                                                         come single valued true                                                          binary constraint csp variables                                                          prohibits true                                                          transformed csp capture planning                                                          graph mutexes furthermore contain mutexes                                                          inferred planning graph simplest case                                                          arise case presented                                                          action deletes create new mutex                                                          middle plan planning graphs                                                          hand appear graph mutex                                                          mutex                                                          presence noops possibility null steps                                                          plan        propositional mutexes propositional mutexes    added complication encoding un•   like planning graphs does utilize noops    general condition propositions    mutex given examining three cases                                                            translation planning problem produces basb                                                         csp constraint represented symboli•                                                         cally logical formula simplify logical for•                                                         mula directly replacing single valued variable                                                          value performing standard logical reductions                                                                                                    planning false yields new                               single valued reduced   logical formula represents reduced constraint csp prior searching solution     case bashcsp know form   possible actions step create proposition   different constraints allows precompute                                                              forced true similarly deleted   types constraint reductions realize types                                                              possible actions forced false   single valued variable reductions efficiently     reduction single valued variable applica• reduced csp particular reduc•  tion transformations described tion possible planning graphs pres•  generate new single valued variables turn ence noops   reduced interact generation mutex  variables forced true reduce   constraints allowing new mutexes detected exam• variables mutex false   ple say determined propositional variable does help reduce planning graph planning      false appears conjunctive precon•    graphs mutexes monotonically decreasing   ditions wc immediately infer              initial state variables variables forced   single valued false    true csp encoding previous rules   false longer candidate producing forcing variable true creating new   proposition  possibly infer new mutex      mutex did exist previous step enable   involving ways making true       additional single valued variable reductions   blocked mutexes single valued variable reduction   subsumes reachability analysis planning graphs      sequence constraints                                                          additional constraints imposed   proposition  variables remain csp plans rule obvious inefficiencies example   single valued variables reduced subset makes sense plan immediately follow action   variables appearing planning graph         inverse load followed unload adding                                                          constraint allows eliminating different invalid combinations    graphplan                                     actions making mutex inverse pairs actions                                                          consecutive time steps   subsuming slightly generalizing planning   graph inferences transformations utilized blocking immediate sequencing inverse actions   csp transformations add constraints allows infer additional sequence constraints say   csp cause variables single valued actions inverses each   case like planning graph inferences action produces aj action   used make csp easier solve additional con• deletes constraint inferred   straints feed standard graphplan reductions mutex   described generate mutexes true remain true time                                                          step    additional binary constraints   graphplan mutexes prohibit single pair values similar constraint   variables truhtrue representation treats false   negated propositions actions entirely symmetric automatically detects action pairs in•  fashion means analysis mutexes given verses each predicates   allow compute mutexes values sequence constraint imposed   examplewhen applied tobeing mutex   means vari•              cspplan implementation   ables true false binary con•  straints detected added basecsp    based transformations explained de•                                                         veloped planner called cspplan solution    single valued variable reduction            planning problem cspplan builds basecsp in•       graphplan reachability                            crementally step beginning                                                            sends csp solver solution solver reports   demonstrated single valued variable reduction                                                          solution baskcsp constructed sl   powerful reachability analysis inherent planning                                                          cycle continue termination condition   graph construction csp encoding                                                          reached plan important   powerful obtaining example following additional re•                                                         notice          solves problems incrementally   ductions                                                    cspplan                                                         ensuring finds gpstep optimal plan      propositions modified action csp solver used cspplan efc katsirelos       propagated change planning graph bacchus  allows use different techniques       propositions creators deletors       successor state axiom reduces equiv• means variable mutex true variable       alent status initial state appears planning graph mutex longer holds       planning                                                                                                      problem  gac  gaccbj gacvscbj record nogoods                  problem domdeg bsearch          bwlarge                                     bwlarge                 bwlargea                                    bwlnrgea                rocketa                                      rockcta                 rocketb                                       rockctb                   dnverlog                                    dnverlog                 driver log                                   dnverlog                driver log                                 dnvcrlog               drivcrlog                                 driverlog               dnverlog                                        dnvcrlog                                                                 table  effect changing dvo heuristic perfor•                                                         mance csp solver planning problems experiments                                                          run using gacvscbjrecordnogoods                                                                     problem redundant inverse sequence                                                                             constraints mutexes constraints                                                                    loga                                                                                     logb                                                                               rockcta                                                                                  rockctb                                                                                  gripper                                                                                 gripper                                                                   table  effect adding mutexes inverse actions                                                          sequence constraints basecsp                                                            dvo heuristics addition redundant constraints re•                                                         moval single valued variables addition redun•                                                         dant binary constraints particularly mutexes detec•                                                         tion removal single valued variables clear                                                          dramatic effect efficiency cspplan sim•                                                         ple problems example bwlarge basecsp                                                           variables  constraints  vari•                                                         ables  constraints single valued variables                                                          removed similarly inferred mutex constraints                                                          removal single valued variables cspplan re•                                                         quired  sec solve problem adding mutex                                                          constraints reduced time  sec removing                                                          single valued variables brought time                                                           sees effect planning specific                                                          techniques described                                                          dvo heuristic order variables instanti•                                                         ated during search greatly affects solution times                                                          csp table  shows difference performance                                                          standard csp heuristic bsearch                                                          heuristic designed specifically advantage                                                          planning based structure csps cspplan                                                          solving representative problems show bsearch                                                          performs better domdeg                                                          redundant constraints table  shows performance                                                          cspplan mutexes inverse actions se•                                                         quence constraints added basecsp                                                          problems slight improvement csp                                                         plan mutexes inverse actions present in•                                                         terestingly adding sequence constraints did help minor                                                          improvements problems negated significant                                                          degradation                                                             comparison similar approaches                                                          results table  show cspplan using                                                          setting problems compares graphplan blum                                                               number planning domains solved faster dif•                                                         ferent settings heuristics performed differently                                                                                                    planning 
