            complexity quantiﬁed constraint satisfaction problems                                  structural restrictions          ∗                   georg gottlob                gianluigi greco          francesco scarcello            inst fur¨ informationssysteme     dip di matematica                deis             technische universitat¨ wien   universita della calabria  universita della calabria               vienna austria         rende italy        rende italy              gottlobdbaituwienacat       ggrecomatunicalit      scarcellodeisunicalit                        abstract                          network represented conjunction                                                        constraint atoms simplicity limit attention      clear picture tractabilityintracta closed quantiﬁed constraint formulas variables      bility frontier quantiﬁed constraint satisfaction occurring quantiﬁed results      problems qcsps structural restrictions easily extended formulas free variables      negative side prove checking qcsp        example  consider following quantiﬁed      satisﬁability remains pspacehard known                                                        constraint formula φe ∀s ∃vz ∀w      structural properties general bounded   ∧ bs  ∧ ctuz ∧ dw ∧      treewidth incomparable hypergraph     eyz  ∧ fr  ∧ gx  formula qcsp      acyclicity domain ﬁxed                                                        instance constraint network cn φe represented      problem pspacehard treeshaped  constraint atoms occurring conjunction quan      straint scopes positive side identify rel                                                        tiﬁer preﬁx short preﬁx φe string ∀∃∀      evant tractable classes including qcsps pre                                                          surprisingly increased expressive power qcsps      ﬁx ∃∀ having bounded hypertree width qcsps                                                        comes cost deciding satisﬁability      bounded number guards                                                        traditional purely existential csps npcomplete      solvable polynomial time bound                                                        problem pspacecomplete borner et al       domains quantiﬁer alternations                                                        general quantiﬁed setting effort spent                                                        identify tractable classes qcsps    introduction                                         approaches divided main groups                                                        techniques identify tractable classes qcsps ex  quantiﬁed constraint satisfaction problems qcsps ploiting particular properties constraint relations tech  generalization constraint satisfaction problems csps niques identify tractable classes exploiting struc  variables existentially universally quanti ture constraint scopes usually known structural  ﬁed nested quantiﬁcations allowed framework composition methods deep results  clearly expressive plain existentialcsp achieved techniques group  fruitfully exploited modeling wide spectrum borner et al  bulatov et al  bunind et  problems domains                     al  chen creignou et al  jeavons et    qcsp  instance quantiﬁed constraint formula φ al  papers focused structural  expression form qv¯ ···qmv¯m                            cn                          composition methods proven use  constraint network denoted φ qi quantiﬁer                                    ∃ ∀                     ¯                          ful nonquantiﬁed setting dechter        qi  qi vi set variables gottlob et al    ≤ ≤  string quantiﬁers ···qm called                                                         recall structure constraint network best rep  preﬁx φ recall constraint network triple                                                        resented associated hypergraph hivh  var  u¯ var ﬁnite set variables                                                          var  vars  ∈c vars  set domains uv  each variable ∈ var                                                         denotes set variables scope constraint    cq ﬁnite set constraints                                                      graphbased techniques based primal graph  straint ci siri consists list variables si called                                                        ghi    ve hi variables  constraint scope relation ri called constraint rela                                                        nected occur hyperedge  tion providing ci’s allowed combinations values                                                        scope constraint  variables scope comfortable                                                          chen recently presented interesting result struc  denote ci called constraint atom risi                                                        turally tractable qcsps chen describes    ∗this work supported austrian science fund fwf polynomialtime algorithm classes qcsps having pri  project nr pn complementary approaches constraint mal graphs bounded treewidth ﬁxed domain ﬁxed  satisfaction                                         preﬁx fact complexity algorithm depends                                                                dramatically number quantiﬁer alternations     size largest variable domain noted chen                                                                     result independently derived                                                                       feder kolaitis  exploiting courcelle’s theo                                                                     rem monadic second order logic bounded treewidth                                                                       structures                                                       notice indication results op                                                                   timal fact interesting questions arose                                                                   subject paper                                                                                                      qcsps having bounded treewidth tractable                                                                       mains ﬁxed                                                extend result structural notions                                                                    possibly general bounded treewidth                                                                                      different kind restrictions quantiﬁed                                                                   constraint formulas make qcsps tractable                    answers questions comprise good news                                                          figure  structural restrictions intractable qcsps  bad news prove strong hardness results  identify new tractable classes qcsps having ﬁxed each constraint siri ∈c σsi ∈ ri extension                                                                    ¯    ¯                    ¯   bound domains ﬁxed bound quantiﬁer alternations σ set ⊃ assignment σ                                                                                ¯                   ¯   main contributions shown figure  following σ σv  each ∈  denote extσ                                                         set extensions σ v¯  trivial assignment    prove ﬁxed domain restriction                                                                                         σ∅ set variables extσ∅ v¯  clearly   qcsp instances structure tree preﬁx                         ∀∃                                                 set assignments v¯      conphard adding alternations      ¯    ¯    ¯       ¯   complete problems levels polynomial let φ  qvqvqv qmvm qcsp instance                                                        let σ trivial assignment σ∅astrategy φ   hierarchy follows problem pspacecomplete                                         ≤  ≤   bounds quantiﬁer preﬁx       function each pair qiσi−                                                         sqiσi−  assignment extσi−  v¯iif    positive side prove preﬁx ∃∀                                                                                           qi  ∃ set possible extensions extσi−  v¯i   substring solving acyclic qcsps fea                                                                                                  qi  ∀ complete assignment σm derivable   sible logcfl polynomial time                                                        strategy −  assignments σ σm−   tractability extends known generalizations                                                                                             σi ∈ sqiσi−   ≤ ≤   acyclicity particular bounded hypertreewidth                                                                   solution φ derivable assignments satisfy qcsp   qcsps  gottlob et al                                                         instance satisﬁable iff solution    prove ﬁxed domains tractability result                                                          worthwhile noting deﬁnition qcsps   bounded treewidth optimal solving                                                        different variables different domains general   qcsps binary domain   remains pspace                                                        especially useful quantiﬁed setting   complete structure acyclic hypergraph                                                        literature qcsps deﬁned unique   incidence graph bounded treewidth                                                        main equivalently domain uv  each   primal graph small logarithmic treewidth                                                       variable  say qcsps untyped contrast     results show traditional structural techniques general ones called typed following proposition   help simple cases shows formalisms fact logically equivalent   limited quantiﬁcation hardness proofs show   presence quantiﬁers radically alters structural proposition  qcsp instance φ exists                                                        untyped equivalent instance φ cn φ bi   properties constraint scopes realize      worthwhile taking account interact nary network φ computed polynomial time   scope structure fact considering quantiﬁers notice going typed untyped instances   scope structure following idea iden exponential nonbinary networks setting   tify different kind restriction quantiﬁed constraint allows succinct efﬁcient representations   formulas ensure tractability incomparable remark complexity results paper hold   structural classes particular ﬁxed settings prove membership results   deﬁne class kgqcsp kguarded qcsps provide algorithms general typed setting prove   solvable polynomial time restriction hardness results using binary networks unique   domains quantiﬁer alternations                   binary domain variables                                                          say class hypergraphs bounded hy    quantiﬁed csps                                     pertree width property denoted bhtw  let var  constraint network assignment hypergraph hypertree width  σ set variables v¯ ⊆ var function mapping each gottlob et al  similarly deﬁne property  variable ∈ v¯ domain uv  ∈uifv¯  var  σ btw meaning bounded treewidth robertson seymous  said complete partial assignment say  primal graph constraint hypergraph  complete assignment σ satisﬁes denoted σ  property bitw meaning bounded treewidth incidence graph say class hypergraphs  small hypertree width property denoted shtwif  hypertree width hypergraph h∈s  log small treewidth property stw primal graphs  deﬁned similarly consider property acyclic  resp trees class acyclic hypergraphs resp pri  mal graphs    study complexity qcsps change func  tion quantiﬁer alternations constraint structures  distinguish case arbitrary domains  noted binary domains denoted      let q¯ string quantiﬁer alternations hyper  graphs property domain property    qcspq¯ problem deciding  instance φ  ∈  classq¯ satisﬁable  classq¯ class qcsp instances domains  kind alternation preﬁx q¯ associated                                                        figure  constraint network iΦ¯ theorem   hypergraphs property                                                        rightbottom box encodings constraints theorem     structural methods help             consider following cnf formula use run    tractable instances                         ning example Φ¯ ∨ ∨ ∧ ∨¬v ∧ ∨ ∨                                                            ∧    ∨   gottlob et al  know       figure  shows constraint struc  qcsp∃ bhtw polynomial time ture constraint hypergraph iΦ¯  note  holds structural restriction stronger bounded case hypergraph primal graph representations coincide  hypertreewidth  easy    cn Φ¯ contains binary constraints  qcsp∀ bhtw easier show set variables var union set clause  qcsp∃∀ bhtw tractable                     variables c¯  cj   ≤ ≤ corresponding    let φ qcsp instance var  constraint clauses Φ set b¯  bi  vi ∈ v¯  corresponding  network φ y¯ set universally quantiﬁed vari boolean variables occurring Φ sets                                                                                       ables let rx¯ y¯  constraint variable sets x¯ s¯  sj    ≤ ≤ −  s¯  si    ≤ ≤ −                 y¯  y¯ set y¯ variables occurring  special variables called clause selectors variable                              scope denote carty¯  relation containing selectors respectively                                                  ¯   combination values domains variables  variable vi Φ domain iΦ contains literal     cart ¯    ×      ∈y¯  uy                          constants vi ¬vi associated truthvalues                ¯    deﬁne yred relation containing clause cj vi occurs domain iΦ  tuples relation combi                                                                             contains literal constant vi  ¬vi  encoding truth  nation values variables y¯  tx¯ · ∈ note                                         special case y¯   ∅ y¯red rr value vi makes cj true denote li resp li                                                        positive negative literals ¬li resp  special case x¯  ∅ simply require combinations                                                      ¬                                      satlit  values y¯  y¯red rrifr precisely carty¯  li  complement denote cj                                                                                                  ∨¬  relation                   set literals make cj true                                                        ¯  satlit       ¬      denote y¯red φ qcsp obtained φ replac Φ     ing each constraint relation y¯red           domains iΦ variables fol  lemma   qcsp φ set universally quanti lowing variable cj corresponding clause cj                                                                      satlit  ﬁed variables y¯  y¯red φ computed logspace Φ ucj     cj boolean variable bi                                                                    ¬                                                                                    ubi    vi vi  clauseselector sj  usj     lemma exploiting fact use                                                                                                   ucj  ﬁnally variableselector    ful assignment lost transformation show j ≥j                                  following                                          i≥i ubi   theorem  qcsp∃∀  bhtw polynomial time intuitively boolean variables encode truthvalue assign                                                        ment Φ clause variable cj chooses  logcflcomplete tractable      satlit  parallelizable                                       literal    cj satisﬁes selector variable                                                        value coming variable connected    encoding boolean formulas acyclic qcsps       choice variable selectors corresponds                                                        propagation literal value li coming boolean  cnf formula Φc∧∧cm  boolean variables                                                        variable bi left branch similarly choice clause  v¯  vvnweassociate binary acyclic constraint                 var                                selectors corresponds propagation right branch  network iΦ          constraint network            used characterizing complexity acyclic literal lk satisfying clause cj possible                                                                                                 quasiacyclic quantiﬁed csps                     propagations branches pair li ¬li complementary literals meets topmost constraint net proof space limitations prove hardness  work values boolean variables encode satisfy                 ≥                                                                       point   consider Σmcomplete  ing truthvalue assignment Φ problem deciding quantiﬁed boolean formula  straints implement idea indices                                                         Ψ   ∃v  ∀v ···∀v m¬Φ  satisﬁable Φ cnf  i actually values interval                                                              formula build polynomial time follow  indices values               ing instance qcsp∃∀m∃ trees qcΨ  • topmost constraint svsc called evaluate                                                      ∃b∀b  ···∀bm c¯ ∃si¯ Φ lemma                                                                                          constraint relation consisting li ¬li   li ∈ seen easily Ψ satisﬁable iff qcΨ  satisﬁable   satlitcj note evaluate satisﬁed assign membership proof induction observe   ments variables complementary literals given instance  ∃v¯∀v¯φ qcsp∃∀ bhtw                                                                              • constraint si bi variableselector si complementary problem deciding   boolean variable bi constraint relation consists signment σ v¯ exists extension v¯ does                                   tuples lili∪li li             satisfy φ logcfl polynomial time  • constraint pair adjacent variable theorem  fact logcfl closed                                        selectors si si  constraint si bn complementation prove basis induc                                                    −   constraint relation li li    tion  problem qcsp∀∃∀ bhtw                                                                                   ∀ ¯ ∃ ¯ ∀ ¯   i∪lili                                 Π    conp let    vφ                                                   • constraint cj  clauseselector stance problem complement                                                                                        ¯   clause variable cj constraint relation consists cided np guess assignment σ check                                                                                                                     assignment σ ∈ extσ v¯ complete   tuples lhlh  lh ∈ satlitcj∪lk lh  lh ∈                                                                             σ  ∈  extσ  v¯                                                      signment               does satisfy   satlitcjlk ∈ satlitcj                  straints φ observation check feasi  • constraint pair adjacent clause ble polynomial time qcsp∃∀∃∀ bhtw                                                          selectors sj sj constraint sj cm Σ  instance problem solved     −  constraint relation consists tuples nondeterministic turing machine oracle     j  j   j                         j               ∀∃∀ bhtw   lh lh   lh ∈ satlitcj j∪lklh   lk ∈ qcsp            induction step simple adap             j                                        tation reasoning          satlitcjl ∈ satlitcj                                                      corollary  quantiﬁed constraint satisfaction problem    µ truthvalue assignment variables v¯ Φ arbitrary domain pspacecomplete restricted  σµ denotes assignment σµbivi constraint networks structure tree  µvitrue σµbi¬vi  µvifalse                                                          fixed domain helps ﬁxed arity  lemma   let µ truthvalue assignment vari                                                        show hypergraph acyclicity does help  ables v¯ Φ σµ corresponding assignment b¯                                                        making easy qcsp problem consider boolean  µ satisfying assignment Φ                                                       domains holds case additionally  exists assignment σ ∈ extσµ c¯    ∈ ext  ¯v ∪ ¯c                               require incidence graph bounded treewidth  σ      σ     σ  iΦ holds                  primal graph small logarithmic treewidth en    lemma immediately acyclic tails problem remains intractable long  binary constraint networks just quantiﬁer alterna nonﬁxed arities simple constraint interactions  tions solving quantiﬁed csp intractable        theorem  natural number ≥                     ∀∃  trees                       •        ∀∃  acyclic ∩ bitw ∩ stw        theorem  qcsp             conphard         qcsp                              Πm−  proof cnf boolean formula Φ build poly complete                        ∀ ¯ ¯ ∃ ¯                       •        ∃∀  m∃ acyclic ∩ bitw ∩ stw         nomial time qcΦ     bc    siΦ  iΦ     qcsp                                Σm  acyclic constraint network associated Φ complete  lemma  satisfying assignments Φ onetoone proof let Φ boolean formula iΦ  var   correspondence assignments variables b¯ associated acyclic constraint network consider                                                                              c¯ complete extensions satisfy iΦ network iΦ  var    c deﬁned follows                                                                                   Φ satisﬁable iff qcΦ satisﬁable   each variable ∈ var  var contains ux distinct vari                                                                                                                                                   ables  xlog ux domain xi     intractable acyclic instances                                                                                                                 each xi each constraint rx  contains  having shown previous section tractability                                                         straint  xlog uxy  ylog uy   ∃∀ intractability ∀∃ settle complexity                                                                                                  straint relation each tuple xiyj  acyclic qcsps arbitrary quantiﬁer preﬁxes                                                        contains tuple encxi encyj  string bits  theorem  natural number ≥                                                     encxi resp encyj binary encoding domain    qcsp∀∃   ∀ bhtw Π m− complete                                                    value xi resp xj rightbottom box figure  shows      hardness holds qcsp∀∃  trees                                   ¯                                                    portion constraint network Φ associated    qcsp∃∀   ∃∀ bhtw Σ mcomplete           ¯                                                     formula Φ running example observe      hardness holds qcsp∃∀ ∃ trees straint network iΦ acyclic ∩ bitw ∩ stw                           hypergraph associated Φ acyclic number example  consider qcsp instance φe presented  variables each hyperedge bounded  log introduction following equivalent instance  size largest domain variables var  formφe rewritten  treewidth primal graph  log ψ  ∀s  ∧ bs  ∧  easy check treewidth inci ∃vfr  ∧∃z  gx  ∧ ctuz ∧  dence graph iΦ  finally observe exists ∀wdw ∧ eyz                                                                                                     ∈   ∗  onetoone correspondence assignments variables guarded constraint formula ψ  iΦ iΦ result immediately follows guard formula ψ guardψas                                                     theorem                                      bs  formulas ψ  ∃vfr                                                         ψ    ∃z  gx  ∧ ctuz  ∧∀wdw    ∧  corollary  quantiﬁed constraint satisfaction problem                                                         eyzand    ψ    ∀wdw fol  pspacecomplete restricted boolean constraint                                                                 lowing guards guardψ fr  guardψ   networks structure acyclic ∩ bitw ∩ stw                                                                                                        gx ctuz guardψdw     guarded formulas tractable csps                  note deﬁnition kguardedness                                                        genial speciﬁc syntax quantiﬁed csps differs  section wide class quantiﬁed                                                        kguarded ﬁrst order logic andreka et al   straint formulas tractable constant                                                        gradel¨  standard formalisms guarded  bound domain sizes quantiﬁer alternations recall                                                        fragment gf ﬁrst order logic kguarded fragment  qcsp instance φ represented logical expres                                                        gfk  ﬁrst order logic gottlob et al  guards  sion shown section  qcsp φe technically let                                                        existentially quantiﬁed subformula ψ added  denote pure logical formula φ encoding                                 ∗                                                        junctively ψ guardψ ∧ ψ just   relations domains formφ                                                                                                                guards universal formula ψ added form    following kolaitis et al  denote fo∧                                                       implication guardψ → ψ natural  fragment ﬁrst order sentences arbitrary quantiﬁca                                                        logics negation guardedness needs  tions conjunctions allowed negations                                                        correctly preserved negations example nega  disjunctions forbidden observed existential                                                        tion guarded formula ¬∃y¯ gy¯  ∧ ψy¯  logically  fragment ∃fo∧ fo∧ expressive power                                                        equivalent ∀y¯ gy¯  →¬ψy¯  logic fo∧  constraint satisfaction problems allowing kind                                                                                                  constraint formulas conjunction ∧ unique binary  quantiﬁers observation clearly extended                                                        connective syntactically impossible express im  connection general fo∧ formulas quantiﬁed                                                        plication guardψ → ψ fo∧ fact se  constraint formulas notice general set                                                                                mantically impossible hand negation  ting different equivalent logical representation                                                        missing fo∧  problems involving “wrong guards”  instance example use parentheses                                                                   arise through negation using natural non  distinguishing subformulas delimiting quantiﬁer scopes                                                        standard guards introduced deﬁned fragments  section represent qcsps fo∧ formulas ∗                                                         fo∧   necessarily traditional prenex form notice                                                             kguarded fragment gfk ﬁrst order logic  each fo∧ formula easily transformed                                                       standard kguarded fragment following tractabil  equivalent prenex formula                                                        ity result shown gottlob et al     fragment  kgqcsp   kguarded qcsps       proposition  combined  complexity evaluat  show each constant simple appealing ing gfk formula φ set ﬁnite relations                                                        oφ×dk  fragment fo∧ decidable polynomial time  bound number variables formula let show class kgqcsp  assume wlog each variable quantiﬁed guarded qcsps tractable notwithstanding “nonstan  quantiﬁed variables reused follow dard” guards universally quantiﬁed subformulas  ing denote freeψ free variables logical lemma  algorithm transform  mula ψ                                               each qcsp φ ∈  kgqcsp  computes pair φ∗                                                                                ∗  deﬁnition  class kgqcsp kguarded qcsps    ﬁnite database φ ∈ gfk φ satisﬁed                                                                ∗  consists qcsps instances φ formula formφ iff  φ  transform algorithm runs logspace                       ∗                           ∗  belongs fragment gk fo∧ deﬁned follows gk proof let φ ∈ kgqcsp let set                                                                                                         smallest subset fo∧            straint relations cn φ consider subformula ψ                         ∗  • atom belongs gk                           ∀y¯ guardψ ∧ ψ formφ ∀y¯ maximal pre                  ∗                ∗  • φ φ ∈ gk φ ∧ φ ∈ gk               ﬁx universally quantiﬁed variables guardψ  • let ααi atoms ≤ let ψ conjunction atoms riy¯i x¯i  ≤ ≤ ≤          ∗  mula gk free variables freeψ ⊆ varα ∪···∪ y¯i variables scope included y¯  x¯i  varαi each tuple variables y¯ each quanti variables x¯i ∩ y¯  ∅for ≤ ≤ mwe                               ﬁer ∈∃ ∀ formula ψ  qy¯α ∧···∧αi ∧ ψ    denote ri ↓ relation obtained constraint rela             ∗                                                              ¯                            ¯  belongs gk set atoms ααi referred tion ri keeping allyicolumns projecting xi                                                                                                           i↓         guard ψ denoted guardψ         columns  y¯i 
