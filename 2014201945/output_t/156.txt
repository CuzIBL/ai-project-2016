   equivalence answer sets models completion nested                                                    logic programs                 jiahuai liyan yuan mingyi zhang               department computing science guizhou academy sciences                 university alberta canada rr china                               abstract                               exists level mapping ordinals                                                                  rule        present sufficient necessary        condition equivalence answer sets        models completion logic programs        nested expressions bodies rules con•       dition weakest aware        normal logic programs obtain re•       sult present polynomial time reduction         erdem lifschitz lerdem lifschitz appear ex•       class nested logic programs extended pro•      tended work nested logic programs weakened        grams consequently answer sets nested         condition positive literals required or•       programs computed answer set gen•            dered applicable rules wrt        erator extended programs hand           shown babovich et al  erdem lifschitz        characterized terms models completion         appear program tight sufficient con•                                                      dition equivalence answer set                                                                  satisfying completion program                                                                  simple programs tight answer sets    introduction                                                 example suppose want express   consider logic programs nested expressions      propositions equivalent true certain condi•  bodies rules  called nested logic programs paper  tions satisfied instance consider   nested expressions arc formulas built literals atoms   classic negation connectives nega•  tion failure disjunction  conjunction  clearly tight unique answer set   proper subset class programs considered ilif level mapping maps domain nonnegative   schitz et al  head rule   integers satisfy    arbitrary formula lloyd topor lloyd topor       impossible   defined nested logic programs negation failure       logic programs negation failure tight•  argued higher expressive power extended     ness fail apply ii  ii   language lifschitz et al showed role    tight unique answer set   negation failure nested logic programs                    paper define notion weak tightness      goal paper provide characterization  sufficient necessary condition model   answer sets nested logic programs terms tightness    completion answer set consequently answer set   hand use answer set generator      characterized three independent properties weak tight•  smodels dlv compute answer sets nested logic      ness supportedness closedness characterization   programs studies characterizations     answer sets generalized nested programs lin•  answer sets proved useful relating completion se•  ear time transformation extended programs yields   mantics iclark  answer set semantics gel      new characterization answer sets nested programs al•  fond lifschitz  fages fages  defined       transformation uses linear number extra vari•  syntactic condition logic programs called positiveorder  ables extra variables nonsplit   consistent guarantees equivalence se•    sense davisputnam procedure davis put•  mantics positiveorderconsistent requires program  nam  need create choice points during search   positive loops example program             answer sets need enlarge search   positiveorderconsistent babovich et al babovich et al    space    hand formalized notion tight set   results practical implications   says extended logic program ii tight  widen application range systems like cmodels       nonmonotonic reasoning                                                                                                  babovich  implemented computa•         consistent set literals answer set program    tion answer sets tight logic programs secondly      minimal consistent sets    transformation nested programs extended programs      literals closed  reduct obtained    allows answer sets nested programs computed   replacing maximal occurrence formula    answer set generator extended programs indirectly    models completed programs                         define completion semantics finite nested pro•     section introduces logic programs nested ex•  grams classic negation let ii program    pressions section  define weak tightness show     completion  denoted comp  following set    answer sets characterized condition propositional formulas each atom    models completion section  present polynomial    atom     time transformation nested programs extended pro•       • does appear head rule    grams section  remarks related work       nested logic programs                                         •                                                                       each default negation  replaced negative literal    consider propositional language literal                exactly rules    atom atom sign called classi•        head    cal negation elementary formulas literals constants                                                                    finally given nested program negation fail•                             formulas built elemen•                                                                 ure construct unique minimal set consistent    tary formulas using unary connective binary                                                                  sets literals closed ii define familiar op•  connectives conjunction  disjunction nested logic   program just program specified set erator   rules form                                                                  clear monotonic domain sets   literal  formula called  literals fixpoint computed   head rule body   drop   body rules body called facts        special cases formula form   literal called default negation   conjunction literals default negations rule called   extended rule extended rule literals following proposition needed later paper   appear scope called positive literals   proposition  let program negation fail•  programs consist extended rules called ex•    ure answer set iff consistent   tended programs extended logic programs clas•  sic negation arc called normal programs      extended rule denoted  weakly tight logic programs        set positive literals set default                                                                  let extended program set literals   negations                                                                  literal define set applicable rules       denote set literals occurring                                                                   respect follows   syntactic entity formula pro•  gram let set literals denotes subset     ar restricted literals  set   elementary formulas consistent tf contains  level mapping partial function literals nat•  complementary literals                                 ural numbers set natural numbers mapped      consistent set literals satisfies formula  literals forms partial order    denoted  defined recursively follows                                                                  definition  let set literals extended        elementary formula                                   program said weakly tight ex•                                                                 ists level mapping domain                                                                  nonempty rule                                                                   body body hx each body     consistent set  literals closed program ii                                                                example  let program    rule                                                                   answer set   supported  rule                                                                  tight weakly tight                                                                    example level mapping satisfying weak tightness     define answer sets program program                                                                  condition       negation failure consistent set literals   answer set ii minimal        partial order mean relation transitive ir  consistent sets literals closed ii                  reflexive                                                                                             nonmonotonic reasoning lemma  let extended program answer          level mapping applied rule body literal   set weakly tight                             does appear head rule   proof answer set  —   seen following mapping exists each literal   transformation                                                                    program ii translated program ii new   clearly satisfies condition weak tightness           propositional symbols used language   theorem  extended program consis•              enlarged define notion equivalence be•  tent set literals answer set iff weakly   tween program translation section   tight closed supported ii         program means finite nested program   proof let answer set                        definition  let program language suppose    obvious closed supported     language superset  equivalent   lemma  know ti weakly tight       denoted  following                                                                  statements hold        assume weakly tight closed   supported ii show answer set         • answer set  exactly answer     let mm condition closed implies                       set                                                                        • answer set answer set   let supported ii rule    body  lemma  relation reflexive transitive   body rule ii   nonempty ii weakly tight  mapping      transformation makes use transformations                                                                  lifschitz et ai  preserve strong equivalence     rule  body  body                                                                    programs said strongly equivalent   body  each                                     program set   closed  body                    answer sets strong equivalence entails notion equiva•  definition  literal      lence   minimal  contradicts   assumption fixpoint operator        proposition  programs strongly                                                                  equivalent equivalent each         note supportcdness closedness re•  moved theorem hold program   transformation                    tight weakly tight   supported closedness note         following say formula basic built   program tight weakly tight set ly  literals constants                                                                  literal constant program said basic   corollary  let finite normal program set       consists rules body formulas basic rule   atoms satisfying comp  weakly tight   ifjs answer set       compare conditions guarantee model com•    said fiat conjunction literals   pletion answer set following definition default negations program sflat rule flat   deiinilion  let cond condxy con•          let ii nested program transformation consists   ditions ranges set extended programs   three steps briefly described   set sets literals condx said  • ii transformed basic program ii simpli•  weaker condx                                    fication rules      • condx implies comllx           • transformed flat program ii transformation                                                                   rules subexpressions new atoms      • exist condi   does                                                                  • ii transformed    splitting each flat rule        imply condx                                                                                                                                       disjunctive body extended rules   proposition  extended program set lit•            head   erals tight weakly tight                                                                    details jenotes rewrite   converse true                                                                  rule      section  weak tightness weaker   conditions used characterize answer sets  step  simplification   literature question arises weak   tightness condition weakest technically answer   weak tightness condition weaker   trivial ways make weaker requiring       nonmonotonic reasoning                                                                                                                                                                program called normal form re•                                                                 duced transformation rules step                                                                   addition denote                                                                    rewrite sequence generated transformation rules                                                                  step       rule  higher priority applied rules             simplification rules given essentially cor•  responding equivalences given lifschitza    difference purpose termination   directly adopt equivalence symmetry                  rewrite rule repre•  lemma  infinite sequence   sent symmetric cases rules      simplification rules similar ones   propositional logic rule  simplifies   negation failure nested three lev•  els deep rules  essential   purpose producing basic program rest used   simplify basic formulas                               lemma  let size program mentioned      rule higher priority applied   rule means rules applicable   applied intention   rule  rules   prevent transforming   expression form       distributing each   result higher complexity     step  naming subexpressions                                                                    show transformation step  preserves                                                                  equivalence                                                                  lemma                                                                      program ii lemmas   guaran•                                                                 tee existence finite rewrite sequence       step  splitting                                              normal form unormal form                                                                  extended program let     flat rule form                replaced rules                                                                transformation denoted                                                                    ready show main theorem section         set transformation rules steps    de•  fine binary relation programs use   denote single transformation step transforms program   program application transformation rule   step rewrite sequence mean se•  quence zero rewrite steps takes general   form                                                                       transformation rules applied nondcterministi                                                                 cally easy show rewrite relation      apparently case occurrences confluent dershowitz jouannaud final ex•  given program replaced simultaneously               tended program unique atom renaming                                                                                             nonmonotonic reasoning corollary  programs ii                         level mapping fages definition depends sup                                                                 portedness needs rule supports atom                                                                  determines level mapping applies rule                                                                  conditions case independent       claim  considered authors form   strong equivalence language      follows lemma                                                                     summarize relationships tightness weak   theorem  program linear time re•        tightness wellsupportedness normal programs   duction extended program  answer       normal program set atoms    sets identified linear time         •  wellsupported weakly tight       remark extra atoms introduced transfor•      converse true   mation nonsplit just connecting atoms serv•     • tight  weakly tight    ing purpose propagating values subexpressions         converse true   values determined solely constraint propaga•  tion values original atoms                      • tight sufficient condition                                                                      wellsupported wellsupported      nonsplit variables accommodated easily systems                                                                      sufficient condition tight   like smodels applying procedure heuristic   set original variables nonsplit variables weak tightness weakest three   picked guessing value way nonsplit vari• bridging gap tightness wellsupportedness   ables create choice points during search answer                                                                  strong compatibility logic programs   sets                                                                    zhang  zhang showed characterization de•   weakly tight nested logic programs                         fault extensions reformulate logic programs                                                                    extended logic program let define   characterization answer sets nested pro•  grams terms transformations show coun•  terpart theorem  nested programs                                                                                                                                             theorem  let nested program consis•  tent set literals answer set ii iff weakly   tight closed supported ii   corollary  let finite nested program   classic negation set atoms satisfying conpu   weakly tight siffs answer set ii        characterization default extensions given                                                                  zhang  applied logic programs stated    related work                                                 follows     wellsupported model                                           theorem  let extended logic program                                                                  answer set iff subprogram ii    definition  fages  let normal program   set atoms wellsupported iff exists level map•  ping domain atom     exists rule  „   appli•  cable wrt each         beneliyahu dechters characterization beneliyahu       subprogram said strongly compatible   dechter  answer sets head cyclefree disjunc• compatible show following   tive programs reduces fages normal programs    relationship   theorem  fages  normal program ii       proposition  let extended program   wellsupported models ofu exactly answer sets ii       nonmonotonic reasoning                                                                                                
