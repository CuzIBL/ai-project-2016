            solving constraint optimization problems anytime contexts                            samir loudni                              patrice boizumault                    ecole des mines nantes         greyc cnrs umr  universite caen                nantes cedex   france                caen cedex  france                       samirloudniemnfr                   patriceboizumaultinfounicaenfr                            abstract                            section  describes general context                                                          place section  reviews hybridization search algo•      paper presents new hybrid method solv•  rithms justifies choices section  details       ing constraint optimization problems anytime    proposal vnsldscp section  gives computational ex•      contexts discrete optimization problems mod•  periments celar benchmarks  mechanisms       elled valued csp method vnsldscp       vnsldscp finely studied section  shows       combines variable neighborhood search        vnsldscp successfully applied solve diffi•      limited discrepancy search constraint prop•   cult network problem finally conclude draw       agation efficiently guide search experiments perspectives       celar benchmarks demonstrate signifi•      improvements competing methods     anytime constraint optimization context       vnsldscp successfully applied       solve reallife anytime resource allocation prob•  anytime algorithms       lem networks                          term anytime algorithm coined dean boddy                                                          mids context work time                                                         dependent planning boddy dean  contrary    introduction                                                          standard algorithm result available end•  today indisputable constraint programming cp ing anytime algorithm stopped time pro•  fulfills industrial needs optimization offline sys• vide solution increasing quality time   tems use technology operational performance profiles evolution solution   different fields activity planning scheduling quality produced algorithm function com•  resource allocation online optimization context prob• putation time provide precise description   lems dynamically change according evolution performances behavior algorithm   external environment resolution respect strong best known solution reported usual algorithms se•  temporal constraints anytime contexts cp quel paper consider mean performance profiles    adapted solving online problems  guaran• curves built empirically collecting statistics   tee supplied execution times current cp solvers performance algorithm input instances   lend combination search kinds anytime algorithms  methods better adapted respect temporal con• terruptible contract algorithms zilberstein    straints stochastic search methods           contract algorithm requires computing time     objective conceive anytime algorithms based known prior activation produce solution   cp guarantee following main properties  pro• contract time interrupted   duce short time solutions good quality end contract guarantee quality   importantly improve gradually computation time solution interruptible algorithm   increases knowledge proposal information priory available allowed compu•  attempt efficiently address problem building anytime tation time solution asked time   algorithms constraint programming                algorithm provide good solution im•    paper presents new hybrid method called      portantly continue refine   vnsldscp dedicated efficient computation high paper interested design interruptible   quality solutions possibly suboptimal anytime con• algorithms interruptible algorithm trivially   text method combines variable neighborhood search contract algorithm converse immediate   hansen mladenovic  performs moves like local   search limited discrepancy search harvey gins•  valued constraint satisfaction problems   berg  constraint propagation efficiently guide valued csp vcsp bistarelli et al  schiex et al   search                                             framework extension csp constraint satis      constraints                                                                                             faction problem framework allows overconstrained    problems preferences solutions dealt      formally csp defined triplet    set variables set finite    domains associated variables set constraints    variables vcsp defined csp pro•   vided valuation structure valuation function       valuation structure triplet     £ valuation set total order maxi•   mum minimum element  binary operation    closed valuation function defined    associates valuation each constraint valuation    constraint denotes importance      let assignment variables    set constraints unsatisfied valuation   intertwined hybridizations attractive rel•   aggregation valuation constraints evant hybridizations algorithms complete                                                               local search closely mingled during computation      objective complete assignment mini•   kind hybrid algorithms belongs family    mum valuation specific frameworks depend retained     local search methods uses ideas cp order make    operator classical csp possibilistic csp max lexi•    large neighborhoods lns shaw  tractable    cographic csp multisets weighted csp        second kind belongs family exact search uses    reallife problems use additive criterion consider local search principles improve partial solutions    weighted csp wcsp sequel paper      each node search tree prestwich  ex•   algorithmic point view wcsps generally dif•  plore set solutions close greedy path search    ficult solve schiex et al                         tree caseau et al                                                                      hybrid algorithms anytime contexts    hybridizations algorithms                                                                  vnsldscp intertwined hybridization algorithm    complete search vs local search                            local search retained variable neighborhood   exact complete tree search methods branch    search vns extends principle large neigh•  bound able produce optimal solution     borhoods lns dynamically adjusting neighborhood   proof optimality exponential worst  size current solution local optimum   case behavior extremely time consuming more•     choice partially remedy weaknesses pure lo•  experimentally observed   cal search methods neighborhood   systematic way exploring search space quality   potentially large chances contains   intermediate solutions usually poor             good solutions improves quickly current solu•     opportunistic way exploring search      tion neighborhoods grow larger finding   space approximate incomplete methods based           best neighbor require expensive computational ef•  stochastic local search simulated annealing tabu          fort selected lds partial search combined   search provide good solutions reasonable com•   constraint propagation lower bounds computation   puting time methods guide fast    efficiently explore neighborhoods   search best neighbor solutions   waste lot time trying improve current solution  vnsldscp method   success  case remain blocked local                                                                  vnsldscp basically local search method depicted   minima during prohibitive time situation suit•                                                                 algorithm  differs classic local search methods   able anytime context quality solutions                                                                  size neighborhoods adjusted dynamically   improved gradually fast possible comput•                                                                 during search starts initial complete assignment   ing time increases pure local search algorithms                                                                  each relaxes unassigns variables   generally require lot time adjust noise parame•                                                                 large current solution rebuilds re•  ters  efficiency strongly depends value                                                                  assigns variables selecting best neighbor strictly   parameters generally applicationdependent                                                                  improves cost current solution algorithm ends                                                                  maximum number local moves maxmovhs    hybrid algorithms                                                                  reached   hybrid algorithms focacci et al  provide appropriate com•     lds explores neighborhood defined relaxed   promises kinds search precisely    solution benefits constraint propagation based   efficient combining advantages    lower bounds computation dynamic heuristics   straint propagation complete search opportunistic ex•    variable value ordering judicious neigh•  ploration search space local search                 borhoods related conflict variables variables occur                                                                                                            constraints                                                               ploration search tree speeds reconstruction                                                                 step improving performance profile method                                                                 lds starts solution computed value heuristic                                                                 successively explores solutions increasing number                                                                 discrepancies fixed maximal number discrep•                                                                ancies reached                                                                    used generalized version lds nary trees                                                                 discrepancy measured according rank                                                                 value chosen variable order given                                                                 heuristic values count single discrepancy                                                                 second cheapest value variable discrepancies                                                                 cheapest value variable second                                                                 cheapest value variables perform                                                                 iteration lds fixed discrepancy prevents                                                                 revisiting leaf nodes                                                                   constraint propagation                                                                 main strengths approach lies use                                                                 constraint propagation prune useless subtrees guide                                                                 choice values during reconstruction keeping                                                                 step fast each node search tree lower                                                                 bounds computed order locally exclude partial                                                                 solutions lead complete assignments better                                                                 valuation current best solution knowledge                                                                 method based large neighborhoods particular vns                                                                 uses mechanism   ing violated constraints considered choice                                                                    compute lower bounds adapted following   prevents lds modifying value conflict variables                                                                 algorithms llarrosa et al   wcsps  partial for•   relaxing solution                                       ward checking directed arc consistency pfcdac                                                                 constraints directed dac computed di•  algorithm  describes select variables re•                                                                rected constraint graph used specific datastructures   laxed function line  computes set current                                                                 relax condition static variable ordering dac    variables candidate relaxation according strategy sir                                                                 ii reversible zfcpfcrdac constraints directions   basic strategy select variables con•                                                                change dynamically during search looking good di•  flict size elements randomly chosen constitute                                                                 rected graph causing high lower bound  iii maintaining   rd set variables relaxed choice enables                                                                 reversible dac pfcmrdac dac maintained during   balance choosing variables according specific                                                                 search propagating effect value pruning   strategy completely random experiments shown   introduction randomness enables search   variables values heuristics   escape quickly local minima                          heuristic variable ordering selects variable    control neighborhood size                          having lowest ratio domain cardinality divided future                                                                 degree constraint propagation based forward checking   initially neighborhood size size takes minimum value  directed arc consistency allows use dynamic min•  control neighborhood size different strategies   imum inconsistency count value ordering during search   implemented best strategy in•        each value socalled inconsistency counts ic directed   creases systematically size each time method      arc consistency counts dac record lookahead ef•  does improve cost current solution            fects future unassigned variables computed values                                                                 selected increasing ic  dac    rebuilding solution   algorithm  defines function rebuild global vari•                                                                 experimentations celar benchmarks   ables ub lb record upper lower bounds prob•  lem optimum lbsr computes lower bound sub      instances celar   problem limited variables included discrep                                                                 celar french centre electronique iarmement   sets maximum number choices diverge                                                                 available set  instances radio link fre•  heuristic discrepancies                                                                 quency assignment problem rlfap cabon et al    limited discrepancy search                                    naturally cast binary wcsps   idea lds harvey ginsberg  explore     experiments selected instance  involves    heuristically good solutions limited dis•  variables having average  values domain   tance greedy solution lds ensures balanced ex•    constraints instance  involves  variables       constraints                                                                                                                                                                           setting parameters vnsldscp                                                                  number discrepancies   having average  values domain  con•  straints instance sub  involves  variables  figure  shows performance profiles obtained   having average  values domain  con•   pfcdac different settings discrcp instance    straints extracted instance  instances   performance profiles discrcp      difficult ones optimum instances  curve associated discrcp   re•   sub  known respectively        sults indicate expected number discrepancies   optimum instance  unknown best known upper   great impact quality computed solutions   bound equal                                       lds discrcp   gives best results poor re•                                                                 sults discrcp   probably fact    experimental methodology                                   value ordering does make mistakes                                                                  exploit propagation scheme guide value choices   method  parameters  maximum number local      discrepancies necessary repair heuristic er•  moves maxmoves initial neighborhood size size        rors contrast low discrepancies discrcp     number discrepancies discrcp propagation    value heuristic closely limits solutions   scheme experiments maxmoves set          provides poor guidance good solutions    size   best value         instance  discrcp   best value   following set values   car•  ried experiments different values discrepancies   propagation mechanism   discrcp  three different propagation    turn choose propagation scheme pro•  mechanisms  pfcdac pfcrdac pfcmrdac                 duces significant lower bounds global effect leads     each combination parameter settings ran          better behavior method figure  reports   vnsldscp  times considered instances dur•         performance profiles obtained three propagation   ing each run best cost current solution  algorithms discrep   instance  lds pfc  recorded regular time intervals  seconds plotted  dac leads substantial profits over•  figures mean performance profiles  runs   head propagation small neighborhoods bene•  methods implemented choco laburthe       fits decrease clearly using stronger propagation pfc                                                                                                            constraints                                                               figure  comparing vns lns instance osubl                                                                    study mechanisms vns ldscp                                                                 order evaluate contribution each component                                                                 vnsldscp carried experiments instance                                                                 subl max moves   size      rdac pfcmrdac compared pfcdac             instances reach complete searches   propagation schemes perform work       methods compared  depth branch   node finally obtain results close pfcdac bound dfbb lds iteration variants   complex timeconsuming propagation schemes        lns lnscpgr lnsldscp mainly differ   payoff context                                 reconstruction mechanism vnslds cp                                                                 variants lns best percentage unassigned    comparisons discussion                                variables represents  total number variables   compared vnsldscp discrap   pfc              discrcp  constitutes best parameter   dac lnscpgr lobjois et al  hybrid     setting vnsldscp behavior vnsldscp   method relies solving vcsps interruptible quite similar observed instances     context standard versions simulated    clearly offers better performance profiles com•  annealing sa  quick medium                            peting methods instance vnsldscp finds      lnscpgr based principle lns neigh•     optimum short time each run draw   borhood size constant during search rebuild remarks    relaxed variables uses greedy algorithm combined       • pure lds iteration lds completely   constraint propagation propagation performed       inefficient anytime context lds leads   variable variable used selecting best val•    better performance profiles dfbb   ues each variable fundamentally different     • efficiency vnsldscp certainly partly   cp based usual propagation wcsp instances         reconstruction mechanism compar•   percentage unassigned variables represents        ison performance profiles lnscpgr   total number variables lobjois et            lnsldscp show effective propagation      figure  compares performances methods         lower bounds computation combined lds lns   performance profile vnsldscp better             obtains gain quality   seconds   versions sa beginning   profile vnslds cp close lnscpgr        • use variable size neighborhoods key point   seconds computation   seconds in•          efficiency vnsldscp produces                                                                      better performance profiles lnsldscp    stance    seconds instance  vnsldscp                                                                      seconds vns obtains gain quality   gain   effective provides solutions bet•                                                                     reaches value   seconds amelio•  ter quality clearly outperforming lnscpgr                                                                      ration comes speed exploration rela•  instances behavior explained fact                                                                      tively small neighborhoods particular during   beginning size neighborhood relatively                                                                      moves vns greatly improves quality   small consequently benefits constraint propaga•                                                                     computed upper bound enable better prun•  tion poor soon size sufficiently                                                                      ing reconstruction step case   large propagation mechanism lower bounds computa•                                                                     lns needs time obtain good   tion produces pruning effective                                                                      upper bounds important size neighbor•  leads better compromise quality time                                                                      hoods   vnsldscp confirms choice computing   significant lower bounds note good anytime         evaluate improvement speed quality   behavior lnscpgr compared sa              solutions provided vns lns figure  compares       constraints                                                                                                           
