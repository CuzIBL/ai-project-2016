  grael agentbased evolutionary computing approach natural language                                               grammar development                                                         guy pauw                                          cnts  language technology group                                               uia  university antwerp                                                     antwerp  belgium                                                guydepauwuaacbe                             abstract                               gins grammar computational context batali                                                                   kirby coordinated coevolution grammatical        paper describes agentbased evolution•                                                                 principles briscoe  far little progress        ary computing technique called grael grammar                                                                  achieved evaluating evolutionary computing        evolution able perform different natu•                                                                 tool induction optimization datadriven parsing        ral language grammar optimization induction                                                                  techniques        tasks different instantiations grael                                                                   grael     environment provides suitable framework        environment described paper grael                                                                                       induction optimization type grammar         large annotated corpora used bootstrap                                                                  natural language evolutionary setting pa•       grammatical structure society agents                                                                  hope provide overview grael grammar        engage series communicative attempts dur•                                                                 optimization induction technique outline        ing redistribute grammatical informa•                                                                 basic architecture grael environment section        tion reflect useful statistics task pars•                                                                  basis toy example introduce grael       ing grael agents allowed mutate                                                                   section  grammar optimization technique        grammatical information effectively implementing                                                                  enhance corpusinduce grammars adding element        grammar rule discovery practical context                                                                  mutation grael implement method extend        combination grael grael                                                                  coverage corpusinduced grammar        shown provide interesting allround opti•                                                                 combination grael grael        mization corpusinduced grammars                                                                  shown provide interesting allround optimization tech•                                                                 nique corpusinduced grammars       introduction   evolutionary computing seen interesting applica•       grael  grammar evolution   tions broad range research domains years   ability overcome problem local maxima finding     typical grael society contains population agents   solution particular problem recombining mu•     virtual environment each agents holds number   tating individuals society possible solutions structures allows produce sentences   attractive technique problems involving large com•  induce probabilistic grammar analyze agents sen•  plicated nonlinearly divisible search spaces evo•    tences during extended series errordriven interagent   lutionary computing paradigm         interactions grammars updated time   reluctant deal natural language syntax probably be•   evolutionary computing approach grael able de•  cause essentially recursive nonpropositional fine quality grammars developed time   dealing complex issues longdistance dependen•    agentbased aspect grael ensures grammar   cies constraints difficult incorporate optimization grounded practical task parsing  typically propositional evolutionary systems ge• self engineering point view grael provides   netic algorithms                                              general framework grammar optimization induction     limited garelated syntactic research fo•    theoretical point view grael   cused linguistic data smith witten  wyard       help understand dynamics grammar emergence    antonisse  araujo  sys•   evolution time   tems suited generic treebank grammar optimization     datadriven grael experiments described pa•  task mainly grammatical formalism evo•        grammatical knowledge agents society   lutionary processes underlying systems designed      bootstrapped using annotated natural language cor•  fit particular task information retrieval losee pus marcus et al  onset datadriven    work syntax evolutionary comput•  ing paradigm involved studying ori        grammar evolution       natural language                                                                                                                                                                     parsed agents grael society                                                                  randomly selected play language game                                                                    interactions introduce concept error                                                                 driven knowledge sharing extend agents grammars fast                                                                  datasets grow large short period                                                                  time generationbased grael society used al•                                                                 low society purge bad agents build new                                                                  generations good parser agents contain fortuitous                                                                  distribution grammatical knowledge involves use                                                                  fitness functions distinguish good agents bad                                                                  ones overview evolutionary parameters                                                                  grael environment significant                                                                  impact processing like refer dc pauw                                                                   paper relevant subset                                                                  experiments allows evaluate grael gram•                                                                 mar induction optimization technique                                                                     grael probabilistic grammar                                                                      optimization                                                                  historically syntactic parsers natural language                                                                  use handwritten grammars consisting labo•                                                                 riously crafted set grammar rules recent years                                                                  lot research efforts employ annotated corpora au•                                                                 tomatically induce grammars bod  collins                                                                   pauw  dataanalysis output gener•                                                                 ated parsers brings light fundamental limi•                                                                 tations corpusbased methods klein manning                                                                   generally providing broader cov•                                                                 erage handbuilt grammars corpusinduced grammars                                                                  hold grammatical information pro•  grael society syntactic structures treebank ran• vide parses large number sentences rules   domly distributed agents each agent holds  needed generate correct treestructures   number treestructures memory structures enable   induced original corpus cf section    generate sentences provide grammars                                                                    thing fullcoverage   allow analyze agents sentences                                                                  corpusinduced grammar performance limited     actual interaction agents implemented      probabilistic weights attributed rules typi•  language games agent agl presents sentence an•      cal datadriven parser provides huge collection possible   agent ag ag able correctly parse agls sen• parses given sentence fortunately in•  tence communication successful hand  duce useful statistics annotated corpus provides   ag lacking proper grammatical information parse     way order parse forests express preference   sentence correctly agl shares necessary information   particular parse statistics long way provid•  ag arrive proper solution                      ing ordered parse forests cases     figure  displays toy example language game     observed ranking parse forest   example treebank structures dis•  counterintuitive correct constructs overtaken   tributed society agents agents engage   obviously erroneous highly frequent structures   language game agl presents sentence         easily explained inherent nature   offered bear hugs ag parsing point   corpusbased grammars initial probabilistic values at•  time ags grammar does contain proper grammatical    tached grammar rules induced annotated data   information interpret sentence way agl intended    equal relative frequency corpus   ag return incorrect parse   case directly induced   consistent grammar                               annotated corpus probabilities rules     consequently agl try help ag reveal•       suited disambiguation task   ing minimal correct substructure correct parse useful parser use grammar practice   enable ag arrive better solution informa• task parsing adjust probabilistic weights partic•  tion incorporated ags grammar try parse   ular structures according test cases need   sentence updated knowledge ag        consider initial grammar basic raw material need   able provide correct analysis able optimization merely reflection original data   certain number attempts agls sentence  set optimized task parsing unseen                                                                                                      natural language  sentences      typical methods probabilistic grammar optimization    include bagging boosting henderson    brill  collins  reestimation con•   stituents probabilities goodman  charniak     including extra information sources belz  collins     propose agentbased evolutionary comput•   ing method resolve issue grammar optimization us•   ing grahl environment vein related afore•  mentioned bagging approach grammar optimization albeit   notable differences distributing knowl•  edge group agents having interact   each basically create multipleroute model   probabilistic grammar optimization grammatical structures   extracted training corpus present differ•  ent quantities variations grael society   agents interact each effect prac•  tice task each grammar varied range prob•  abilistic grammars optimized situation directly   relates task hand evolutionary aspects   make sure marginally useful grammatical   information downtoned common constructs arc enforced   providing better balanced model statistical parsing      way grael accomplishes redistribution orig•  inal probabilistic values using default grael archi•   figure  comparing parsers baseline parser grael   tecture described section  type errordriven learn•  ing makes sure mistakes dealt transfer•  ring difficult grammatical constructs increasing  syntactic processing agents use parsing sys•  probabilistic value agents grammar prob•   tem pmpg described pauw  integrates   abilistic adjustment taken account during subse•  cky parser chappelier rajman  parse   quent parsing attempts agent hopefully triggering forest ranking scheme employs probabilistic information   correct grammatical structure future                   memorybased operator maximize each                                                                  parse number nodes retrieved mem•   experimental setup                                         ory pmpg takes form simple pcfgtype gram•  overall setup grael experiments displayed     mar enriched numerical indices encode contextual   figure  baseline accuracy measured directly induc•     information previously observed treebank memory  ing grammar training set power parser    based instantiation dataoriented parsing bod  en•  disambiguates test set grammar takes form     sures larger syntactic structures used basis   pmpg outlined pauw  cf infra      parsing minimal loss computational efficiency   training set randomly equally distributed     regular pcfgs pmpg approach con•  number agents grael society con•    sidered introduce psycholinguistically relevant memory  sequently engage number language games        based operator parsing process   point established halting procedure cf infra so• experimental run varied society sizes generation   ciety halted fittest agent selected society methods fitness functions halting procedures pauw   agent effectively constitutes redistributed proba•   subset experiments described paper em•  bilistically optimized grammar used power     ployed sexual procreation method introduce new gen•  parser  grael accuracy achieved having parser   erations combining grammars fit agents   disambiguate test set                                society create new generations parser agents fitness      used data sets penn treebank marcus        agent defined recording weighted average     et al  main batch experiments conducted     fscore during interagent communication figure    small homogeneous atlscorpus consists       fscore agents parser heldout validation   collection annotated sentences recorded spoken      set information used try halt so•  dialogue larger wall street journal corpus         ciety global maximum select fittest agent   henceforth wsj collection annotated newspaper arti•    society computational reasons experiments   cles used test larger scale corpus wsjcorpus limited different population sizes   common division training set section        used approximation grael deal large   test set section  used semantically oriented flags    datasets reasonable time test set   numeric flags indicating internal relations removed   used way during actual graelprocessing agree•  allow streamlined syntactic processing            ment blindtesting procedures       natural language                                                                                                                                                 table  baseline vs grael results      results                                                    dataset   table  displays exact match accuracy fscores   baseline model standard pmpg parser using grammar      grael grammar rule discovery   induced training set cf figure  displays functionality grael extended apply•  scores grael different population sizes     ing minor alterations grael grael   notice significant gain grael models     wish provide grammar rule discovery method   baseline model atis corpus increasing population   deal problem grammar sparseness hand•  size  agents decrease exact match accuracy     written corpusinduced grammars alike deal   atis corpus likewise small society  agents    fundamental issue coverage collins  exam•  achieves limited improvement baseline     ple reports using sections  wsjcorpus   method data analysis showed best moment halt      training set section  test set  sen•  society select fittest agent society tences test set require rule seen training set   relatively brief period right actual convergence sets   large corpus wsj sparse grammar   grammars society starting resem•     accuracy bottleneck   ble each closely size society   useful method   determining factor controlling duration  corpusinduced grammar extend generating   period                                                        new rules doing blind manner provide      preliminary tests subset wsj corpus shown   huge overgenerating grammars containing nonsensi•  society sizes  agents unsuitable  cal rules grael described section in•  largescale corpus ending harmful premature   volves distribute approach type grammar rule dis•  convergence gain achieved grael society    covery original sparse grammar distributed   spectacular atis corpus statistically group agents randomly mutate grammatical   significant larger society sizes grael processing    structures hold new grammatical information   wsj corpus achieve significant gain      create tried tested interacting each      experiments show grael in•        neodarwinist aspect evolutionary make   deed interesting method probabilistic grammar redis•    sure useful mutated grammatical information re•  tribution optimization data analysis shows   tained population noise filtered   counterintuitive parse forest orderings appar•  time method provides way create new gram•  ent baseline model resolved grael     matical structures previously unavailable corpus     processing interesting point time evaluating practical context with•  achieving error reduction rate     need external information source   baseline method introducing new grammatical         accomplish need implement minor al•  information society solely redistributing terations grael important adjust•  experimental results indicate anno•  ment occurs during language games refer   tated data considered raw material   toy example language game figure  point   optimized practical use parsing unseen data     agl suggests minimal correct substructure ag      pauw  describes experiments directly    grael step introduced form errordriven learn•  compare grael similar methods bagging boost•     ing making sure probabilistic value grammati•  ing henderson brill  summarized       cal structure increased functionality grael how•  lines table  bagging boosting     different step assume noisy   shown obtain significantly lower accuracy figures al•    channel agl ag cause ag misun•  accounts fscore bagging experi•    derstand agls structure small mutations different levels   ment exceeded optimal grael configuration     substructure occur deletion addition   attributed fact approximation    replacement nodes effectively introduces previ•  grael used processing extensive wsj        ously unseen grammatical data grael society                                                                                                       natural language table  baseline vs grael vs grael vs grael   results                                                                    figure  grael experiment  fscores during language   consequently optimized time                      games      preliminary experiments showed does   work newly created structures largely                                                                  interesting respect grael outperforms grael   ignored favor goldstandard corpus structures                                                                  data set combination   implemented alteration grael                                                                  quite beneficial parsing accuracy   instead just presenting treestructure originally                                                                    evaluating grammar rule discovery method poses em•  assigned training set require agl parse                                                                  pirical problem clear grammar   stringonly sentence using grammar acquired during lan•                                                                 rules missing actually need test set   guage games replacing treestructure training                                                                  compiled perform grael atisexperiments goes   set possibly different treestructure incorporates                                                                  long way providing touchstone grael  mutated information alteration makes sure                                                                   performs supervised grammar induction method   mutated grammatical structures actively                                                                  results indicate performs quite mutated information   used usefulness grammatical constructs                                                                  available able create parses difficult   measured practical context                                                                  constructions number structures constitute   experimental setup results                                 noise limited attributed small portion                                                                  probability mass stand way actual use•  setup grael experiments                                                                  ful mutated structures   grael experiments cf figure  test grammar  rule discovery capabilities grael compiled   special worstcase scenario test set atis corpus con•  concluding remarks   sisting  sentences atis require grammar paper presented research efforts   rule induced training set     introduces agentbased evolutionary computing machine   wsjexperimentthe normal test set used agent     learning method datadriven grammar optimization   agent society respectively used atis    induction recent years researchers employed   wsj experiments                                               ensemble methods overcome negative bias train•     baseline grael methods atis experi•       ing data impose classifiers im•  ments trivially exact match accuracy       portant view annotated data optimally dis•  negative effect fscore table  grael   tributed set examples raw material needs   able improve significantly proving preprocessed used machine learning   effective grammar rule discovery method data    classifier bagging boosting approach instance   analysis shows lost beneficial proba•  tries create resamplings original data overcome   bilistic optimization effect grael                       local maxima data restrict classifier      performed experiment      believe grael adds extra dimension task   turned grael society grael society    splicing data incorporating society commu•  formers halting point words society      nicating agents allow parallel development sev•  agents using mutated information consequently ap•       eral grammars enhanced practical context   ply grael probabilistic redistribution properties mirrors goal parsing unseen data   grammars figure  shows course grael ex•          described instantiations grael environ•  periment figure fscores recorded during   ment basic grael aims provide beneficial   interagent communicative attempts linear     redistribution probability mass probabilistic gram•  increase during grael processing society halted af•  mar using form errordriven learning course   ter extended period convergence grael pro•      language games agents probabilistic values   cessing resumes negatively affects fscores brief adjusted practical context optimizes grammars   period time society reconverges task parsing data reflecting prob•  fscores improve observed     ability mass initial data set method favorably   transition grael table  shows fittest agent compares established grammar optimization methods like   selected society transition performs better bagging boosting   heldout test set results wsjcorpus adding element mutation concept       natural language                                                                                                      
