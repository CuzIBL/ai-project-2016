     conditional constraint satisfaction logical foundations complexity                 georg gottlob                 gianluigi greco                  toni mancini           computing laboratory            dip di matematica       dip di informatica sistemistica             oxford university           universita della calabria universita di roma “la sapienza”           ox qd oxford uk              rende italy            roma italy      georggottlobcomlaboxacuk       ggrecomatunicalit          tmancinidisuniromait                        abstract                            ccsps proposed dynamic csps                                                        mittal falkenhainer  csps tailored sup      conditional constraint satisfaction problems cc port conditional activation variables constraints      sps generalizations classical csps sup used model diagnosis structural design      port conditional activation variables conﬁguration problems example application      straints despite emerged ccsps  think automated personal pc conﬁgurator      context modelling intrinsic dynamism devoted assemble pc components conditional      diagnosis structural design product conﬁg constraints require components added      uration applications complete characterization current conﬁguration depending choices      computational properties expres motherboard does embed videocard      siveness missing fact aim pa compatible added      precisely face open research issues despite emerged ccsps framework      ccsps formally characterized terms efforts spent design specialized algo      suitable fragment ﬁrstorder logic second rithms efﬁcient solution soininen et al       complexity basic reasoning tasks cc  bowen bahler  sabin et al  gelle falt      sps studied establishing completeness results ings  keppens shen  aspects      ﬁrst second level polynomial investigated research questions      hierarchy finally motivated hardness fact open instance expressiveness      sults island tractability ccsps identi complexity issues arising setting par      ﬁed extending structural decomposition meth  tially studied literature soininen et al       ods originally proposed csps                 bowen bahler  mittal falkenhainer                                                         importantly differently case classical    introduction                                       csps classes instances efﬁciently                                                        solvable singled pearson jeavons  constraint satisfaction static framework original  gottlob et al  island tractability known  formulation used model solve deci ccsps identiﬁcation instead crucial appli  sion problems scenarios uncertainty dynamism cations real world scenarios  come play constraint satisfaction problem aim paper precisely shed lights  csp instance dechter  basically triple  var         var                                   aspects face research questions make           ﬁnite set variables ﬁ analysis formal shall exploit logicbased charac                                         nite domain values  cccq   ﬁnite                                                                                                       terization csp instance cf kolaitis vardi    set constraints each ci pair siri inwhich pair φ dwhered constraint database     ⊆ var                                 ⊆    si  si       called constraint scopeandri    set constraint relations ri each constraint  called constraint relation solving csp ci siriandφ ∃fo∧ sentence ex  stance simply mean determining sub istentially quantiﬁed ﬁrstorder formula negations  stitution θ  var → satisﬁes constraints disjunctions relational vocabulary consisting    remove assumption variables atoms risi framework investigate  mains values constraints known class constraint satisfaction problems build  change time generalized csp frame ∃fo→∧ fragment ﬁrstorder logic consists  works proposed literature formulas obtained extending ∃fo∧ im  verfaillie jussien  references plication connective “→” rationale approach  paper focus core extensions enhancing ∃fo∧ implication connective  sidering framework conditional constraint satisfac mathematically wellfounded approach model conditional  tion problems ccsps                                activation variables exempliﬁed                                                      ijcai                                                     example  consider pc conﬁguration scenario ifφx  ψz fo→∧thenφx  ∧ ψz  ∃fo→∧ formula                             fo→∧                                                                                     ∃m  motherboardm ∧ hasnovideom  →               ifφ    fo∧ ψ xy  fo→∧then                         ∃vc  ﬁtmv  ∧ cost vc     φx  →∃yψ x y  fo→∧  states intuitively motherboard needed assem set variables ψ denoted vψ  ble pc embedded video example  following formula ψ ∈∃fo→∧ adds  videocard ﬁtting requirements chosen requirements conﬁguration constraints  additional cost                     example  names shortened simplicity                      ∃    fact show fo→∧ formulas characterize ∃mmm    ∧ hm →∃vc fmv     ∧ cvc  precise logical sense class ccsps based          ∧ em →  bm →∃hgmh  result embark systematic study ∃fo→∧  summary                                           vψmvch                                                                                                            ∃  £ investigate expressive power ccsps depict given constraint database fo→∧ formula                                                                           ing section  clear picture relationships ψ denote ψ constraint satisfaction problem   logicbased csp formalisms results com instance deciding assignment variables ψ sat                                                                                  parison graphically summarized figure       isﬁes constraints   £                                                       note presence implication    section  study computational complexity nective differently standard csps formula ψ ∈   basic reasoning tasks ccsps considered                                                        ∃fo→∧  satisﬁed partial assignments vψ   case interested ﬁnding generic solu formally partial assignment θ ψ mapping   tion case solutions reﬁned means subset vψ values θreduct ψ   proorders analysis summarized fig formula θψ resulting ψ  applying sub   ure  emerges reasoning ccsps intractable stitutions θ variables ψ  replacing   hardness membership results established atoms variable vψ vθ occurs   various classes ﬁrst second level poly “false” vθ denotes variables domain θ   nomial hierarchy                                    solution ψ partial assignment θ θψ  £ motivated complexity results section  evaluates true denoted θψ   turn identify tractable classes ∃fo→∧ formulas                                                        example  consider database containing rela   issuing restrictions constraints interactions                                                        tions    mv   bad news show decomposition methods tra                                                          vc vc     ditional csps guarantee tractability ccsps                                                         mh followings assignments par   nphardness satisfiability problem                                                        tial         θ  mmvvcc   holds class ccsps constraints inter                           actions modelled acyclic primal graph         θ   mmhh   dechter                                 note θ solution ψ                                                        hand θreduct ψ evaluates true   £ major reason failure traditional decompo   sition methods primal graph obscures real                   ∃fo   nature interactions occurring ccsps  expressiveness     →∧ formulas   variables activation section  introduce ﬁrst crucial questions ccsps relate   special graphical representation ccsps called impli approaches deal conditional activation vari   cation graphandshowthatsatisfiability   feasible ables constraints expressive   logcfl polynomial time instances precise logical sense classical csps   implications graphs acyclic gener questions answered section   ally bounded treewidth robertson seymour  let csp formalism formalism modelling                                                        constraint satisfaction problems subset fo let                                                                                           ∈          ∃fo→∧    formulas syntax semantics           constraint database formula φ let φ                                                        denote set solutions set variables  section propose framework modelling condi                                                        vletsφ dv denote set obtained sφ  tional activation variables constraints csps stricting each solution variables  based extension fragment ∃fo∧                                                          let csp formalisms  say  logical implication formalized                                                        weakly simulates each φ ∈ exists    ∃fo→∧  sentence vocabulary constraint                                                        φ ∈ each constraint database sφ  relations formula ∃       belongs                      xφx          φ                    φ   vφ say expressive iff  fragment fo→∧ ﬁrstorder logic deﬁned follows simulates does simulate fiff simulates   “true” “false” fo→∧                  viceversa equivalentiff does                                                                                                      atom form rx  ∈risinfo→∧      simulate andf does simulate  say                                                        incomparable                                                      ijcai                                                                                                             possible show details omitted lack space                                                        constraint π legal assignment θ satisﬁes                                                        iff corresponding partial assignment θ ψπ satisﬁes                                                        subformula φc ∀ditissπ dsψπ                                    ∃                       surprisingly ccsps previously simulated          figure  expressiveness fo→∧          means different logicbased frameworks instance                                                                                  armed notions compared expres bowen bahler  expressed ccsps means                                                        fof logic bacchus walsh  discussed  siveness ∃fo→∧ conditional csps ccsps                                                        rich formalism implications simulated nega  ∃fo∧  positive existential disjunctive frag                                                        tions disjunctions introducing speciﬁc propagation  ment ∃fo∨∧ fo results summarized figure                                                         method characterizing method enforces gener    comparison conditional csps                 alized arcconsistency precise logical characteriza                                                        tion ccsps unknown clear  ccsp speciﬁcation π  tuple var  var  cc ca   var set variables var ⊆ var set theorem  ccsp simulates ∃fo→∧  initial variables intuitively variables initially            ∃  “active” set constraints partitioned proof sketch let ψ fo→∧ formula build                                                        ccsp  πψ follows atoms converted  compatibility ccandactivity ca constraints                                                        compatibility constraints each subformula    compatibility constraints constraint atoms tra                    ditional csps activity constraints follow φ x  →∃yφ x y  φ  cx ∧···∧ckx                                            rv                                                             ing kinds require variable rv cvvk→  al y  yym create × fresh variables yi  ways require variable arv vvkarv→  require  ≤ ≤  ≤ ≤ × activation constraints                                                                                         →rn                                        rv           rv   rn vvk   require arn  form cjx →y cjx →ym  ≤ ≤ arv             arn            →                   ⊆var                                             arv   vvk     vvkv                   constraints form  → yi shown                                                                                  ccsp instance pair π whereπ  speciﬁ  each database sψ dsπψ dvψ            cation constraint database legal assignment interestingly ψ lefthand side im                                    var   π   partial mapping θ variables domain plicative formula constraint atom encoding           values asolution legal assignment  adjusted use fresh variables show  var  ⊆v             θ   θ satisﬁes active compatibility stronger kind simulation ∀d sψ dsπψ  straints compatibility constraints variables  vθand θ satisﬁes activity constraint corollary  ccsp ∃fo→∧ equivalent    •warv→ satisﬁed w⊆vθ implies ∈vθ       leaving section note mittal falken                  rv                                    hainer  solutions ccsps required    • cvvk→v  satisﬁed vvk⊆vθ                                                        subsetminimal fact simulation techniques      θvθvk ∈ implies ∈vθ                                                        orem   case left sides implications    •warn               w⊆v              ∈v         →  satisﬁed    θ implies    θ        straint atoms established onetoone correspondence                  rn    • cvvk→v  satisﬁed vvk⊆vθ   tween solutions ccsps assignments ∃fo→∧      θvθvk ∈ implies  ∈vθ formulas properties solutions pre  usual set solutions denoted sπ served formal results omitted                    ∃    show fo→∧ formulas fact el  comparison logics csps  egant mathematicallyfounded characterization ccsps                                                        comparison csps ccsps proposed  theorem  ∃fo→∧  simulates ccsp                  soininen et al  focusing knowledge repre                       var var                     sentation perspective shown ccsps  proof sketch let π      cv  build modular representable standard csps intuitively  ∃fo→∧  formula ψπ  ∃var  var       φcwhere                                     c∈cc ∪ca           small changes ccsp result signiﬁcant changes  φc obtained follows                            corresponding csp encoding   • is compatibility constraint cvvkthen based logical equivalence ccsps                             →                ∃    φ     ∈vvkvar dom         fo→∧    formally compare ccsps   • activity constraint cvvk→rv  φc given csps fact prove ccsps formulas                                                        ∃                                   ∃    cvvk → domv                            fo→∧ “simulated” fo∧thear                                                        gument way encode “→” connective  note activity constraints fact simulated                                                        means conjunctions turn “→” encode dis  rv compatibility constraints cf mittal falken                                                        junction atoms following relationships hold  hainer  wlog assumed ex  istence monadic relation dom listing possible values theorem  ∃fo→∧  expressive  variables — relation simulation ∃fo∧  incomparable ∃fo∨∧  possible required intricate                                                           proofs reported extended version paper available  struction π            ψ                                           wwwunicalit∼ggreco                                                    ijcai                                                       complexity reasoning ccsps                            —       “⊆”        “≤”        “”                                                      checking      conpc    conpc    conpc  let ψ   ccsp instance intrinsic complexity                    Σp      npolog  np                                                     relevance   npc                    basic reasoning tasks ψ studied                               npolog  np  soininen et al  mittal falkenhainer inpar necessity conpc conpc        ticular known satisfiability problem does figure  complexity ccsps ‘c’ stands complete  exists partial assignment θ θ solution  ψ npcomplete                              xxn  satisﬁable deciding ex    important reasoning tasks ist truth assignments variables making each clause  come play csps complexity cj true wellknown conpcomplete problem  investigated ccsps section explore build ccsp instance ψΦ dΦ follows    issues focusing following problems        each clause cj wlog form tj ∨                                                           ∨                                          ¬    •                                                   tj  tj wheretj variable xi negation xi      checking given partial assignment θisθ solution dΦ                                    ∈      ψ                                             contains relation rcj   ttt    ti                                                        “true” “false” st cj satisﬁed tji  ti ∀i    • relevance given variable xisx   contained                                                        each variable xi Φ dΦ contains rela      vθ solution θ ψ                                                        tion rvi  “true” “false” finally unsat      • necessity given variable xisx   contained                                                        dΦ relation indΦthefor      vθ solution θ ψ                   Φ            ∃                        ∧                                                        mula ψ   form  xnz ≤i≤n rvi xi                                                                            →                  ∈    moving ccsps problems specialized ≤j≤m rcj xj xj xj  unsat  wherexji  care solutions partial assignments                                                           xn variable xji occurs cj  knowing solutions let truth value assignment variables Φlet                                                                                                        variable “active” quite relevant instance θ denote assignment ψΦ dΦ xi  product conﬁguration interested ﬁnding mapped “true” resp “false” θx iff xi true resp  conﬁguration minimum number additional com false θx iff satisfying  ponents meets users’ requirements     solution θ ψΦ dΦ vθ ⊇                                                                                                     order model scenarios convenient  xn occur vθ                                                                                                           ﬁne notion solutions means preorder satisfying assignment Φ θ   set possible partial assignments accordingly θx conclude proof assignment                                                                                         solution θ ψ said minimal each solution θ  xu does satisfy Φ notice θ ⊆minimal                                             holds θ θ  particular consider minimal ⇔ satisfying assignment Φ                                                solutions following preorders  checking≤   checking   conpcomplete mem  subset minimality “⊆” θ ⊆v θ iff vθ ⊆vθ     berships shown similar arguments                      ≤      ≤       ≤v       hardness checking≤  shown observing  minimum cardinality “ ” θ  θ iff  θ       θ                                                                                                       reduction θ fact ≤minimal ⇔ θ ⊆  weighted cardinality “ ” weight attached each      ⇔                                 Φ      variable                                     minimal   satisfying assignment  finally                                                      hardness checking⊆ follows assigning unitary        θ  θ iff        wx  ≤          wx                    x∈vθ          x∈vθ            weights variables ψΦ    depict complete picture complexity ﬁg  ures arising ccsp setting                                                           restricted classes ccsps  theorem   complexity checking relevance    light intractability results previous section  necessity  variants  minimal solu        ∈   ⊆    ≤                                   relevant single classes ccsps efﬁ  tions    “ ” “ ” “ ”  shown figure     ciently solved aim investigate adapt  proof sketch preorder considered results eas approaches used traditional csps tractable  ily derive standard results csps space limi classes identiﬁed structural decomposition methods  tations report proof sketches variants pearson jeavons  gottlob et al   checking                                                          hardness acyclic structures  checking⊆   conpcomplete membership let ψ  ccsp instance let θ partial assignment let ψ fo formula structure constraints interac  θ  ψ consider complementary problem deciding tions ψ represented primal graph gψ  assignment θ θ solution vψe variables occur edge  ψ ii vθ ⊆vθ does hold clearly θ appear constraint atom ψ focus  guessed np ii checked classes primal graphs having bounded treewidth    hardness deciding boolean formula  tree decomposition graph ve pair                                                                             junctive normal form Φc ∧ ∧ cm variables tχ wheret      nf   tree χ function                                                        signing each vertex ∈ set vertices χp ⊆     fact preorders widely used reﬁning following conditions satisﬁed  ∀b ∈   lution concepts ai frameworks               ∃p ∈  ∈ χp∀b d∈e ∃p ∈                                                      ijcai                                                                                                           sjthenrsjixi evaluates false database                                                        implication trivially satisﬁed xi                                                        mapped sj xi ii ∈ sj mapped                                                                                                                                                           sj fact holds construction θ                                                           ⇐  assume solution θ φi di                                                        ﬁrst notice following properties hold θp                                                        vθx  xnandpifxi   mapped sj θ                                                        xi mapped sj each ii ∈ sj                                                                    θ                                                        build set  sj ∃xi mapped sj θand                                                        notice exact cover                                                          tractable classes                                                        classical approaches fail isolating classes tractable      figure  exactcoverbysets instance      ccsps propose study decomposition strategy                                                        speciﬁc ∃fo→∧ formulas shall focus plain        ⊆        ∀  ∈            ∈     ∈       χ    ntheset       χ      formulas nesting implication connective                                                   induces connected subtree thewidth tχ  allowed formally plain ∃fo→∧ formula form  maxp∈n  χp − andthetreewidth short twgis                   minimum width tree decompositions          ∃xφ x  ∧    bix  →∃yihix yi    let subset fo denote cspbtwl                   ≤i≤n  class csp instances φ dwhereφ      ≥                                                      andφ bi hi fo∧  tw   φ   bounded ﬁxed constant fact arbitrary formulas plain iteratively                                                                                                known gottlob et al  thatsatisfiability substituting each subformula φ → φ → φ  ∧ φ   solved polynomial time cspbtw∃fo∧we   ∧   →   ∧  →                                     csp    ∃             φ   φ    φ      φ    φ   transformation preserves  show case btw fo→∧  set solutions feasible quadratic time  restricted class cspac∃fo→∧                                                          let ψ plain ∃fo→∧ constraint interactions  acyclic instances having treewidth  ψ represented implication graph igψ  theorem   satisfiability nphard  vewherev     vψ ∪b  bn∪h  hn  stricted class cspac∃fo→∧                edges form  pairs variables oc                                                        curring atom bi occurs atom  proof let   set elements let                                                                                          bi hi occurs atom hiand bihi    sm number sets each containing exactly             →∃         three elements recall exactcoverby each subformula bi     yihi xyi   portion                                                        implication graph exactcoverbysets  sets problem deciding exists set c⊆                                                        instance proof theorem  reveals “hid   sm ∈c si   si∩sj                                                       den” intricacy problem reported figure  bjii  ∅ each sisj ∈cwith   npcomplete                                                        hjii refer implication rsjixi → rsji xi     example instance figure  shows left                                                          class cspibtw∃fo→∧ deﬁned set  sets  iii  iiiands                                                          ccsps instances ψ dwhereψ plain  iii solution consists set ss                                                        mula ∃   →∧  ig  bounded    build ccsp instance ψi di fol          fo                tw    ψ                                                        ﬁxed constant algorithm called decidesolutionk decid  lows  each item ii di contains relation                                                        ing instance cspibtw∃fo∧ solution  rii    sj   sj  ∈sand   ii  ∈  sj   each                                                        reported figure   set sj item ii  ∈  sj  di contains                                                          algorithm works tree decomposition igφ  lation rsji   sj  relation                                                        width shape nf roughly based  di formula ψi form                                                      recursive procedure ﬁndsolution receives input  ∃x  xn riixi ∧ iiji ⊆s rsjixi →                                 i                 avertexv  ∈ each vertex equipped nodes          rsji xi   importantly given constraint relations associated variables  denoted aswellas             di                                           φ               ψ     unary   ψ            does contain  nodes  bn  hn sets  edge trivially acyclic         nodes denoted   respectively                                                                                         claim exists exact cover basically ﬁndsolution guesses each child          s⇔    di                                                                        sets    ψ            admits solution          partial assignment  conforming    ⇒                                                                 θ              let  exact cover consider assignment θ assignment “states” bc hcthestatebc                                                    θ  build follows  ψ          θ  andxi     resp hc mapping bc resp hctothevalues                        ∈       ∈c  mapped if     note  willf wasf mapping bcbit states                                     conjunction rii xi satisﬁed θ  construction conjunct bi φ true fact bcbit                   di   relation rii   remains show case atoms bi restricted                            ji →   ji  i   each implication form rs  rs       sat assignment satisﬁed short πbi  isﬁed distinguish cases xi mapped note information bcbit propagated                                                      ijcai                                                     
