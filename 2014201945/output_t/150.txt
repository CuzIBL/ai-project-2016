                      distance constraints constraint satisfaction            emmanuel hebrard                   barry o’sullivan                     toby walsh      science dept        science dept            nicta unsw              ucc ireland                      ucc ireland                   sydney australia          ehebrardcuccie             bosullivancuccie               twcseunsweduau                          abstract                          ˆ ccm each constraint ci deﬁned                                                        dered set varci variables set solci allowed      users naturally express preferences combinations values assignment values vari      terms ideal nonideal solutions show                                                        ables varci satisﬁes ci belongs solciafeasible      reason logical combinations dis  solution assignment each variable value      tance constraints ideals nonideals using domain constraint satisﬁed addi      novel global constraint evaluate approach tion csp assume symmetric      randomly generated realworld conﬁg  reﬂexive total polynomially bounded distance function      uration problem instances                        δ partial instantiations variables                                                        signment values subset  make reason    introduction                                       ing easier assume distance decomposable                                                        sum distances assignments individual vari  application domains users specify desires ables for example hamming distance  terms assignments subset problem variables     xi                                                         given            generalised manhattan dis  example planning vacation user tance given xi −  ideal holiday mind ideal holiday             infeasible consider example purchasing car  user like models display say volvo  problems distance  jaguar does like model say suppose user expresses preferences terms  lada result want sample models similar ideal nonideal partial solutions partiality important  volvo jaguar whilst different lada ignore irrelevant attributes example  specify “i like like volvo care ideal car runﬂat tires  jaguar lada” type query dif fundamental decision problems underlying approach en  ﬁcult tackle using usual constraintbased preferences sure solution given distance resp  articulated terms variables andor constraints ideal resp nonideal solution  partial solutions formalisms representing  preferences constraint satisfaction assign preferences dclose resp ddistant  dividual constraints bistarelli et al  instance csp  symmetric reﬂexive total  cpnets boutilier et al  specify preferences vari polynomially bounded distance function δ  able level users like prefer partial instantiation variables   ences solution level rossi sperduti      question does exist solution ∈ solp     paper present algebra complex expres δp dresp δp ≥  sions distance constraints novel soft           global constraint propagating constraints distance close distant npcomplete general                                                        used decide csp  distance  characterise conditions propagate          tractably report encouraging results realworld ﬁxed close distant necessarily polynomial  randomly generated instances                         underlying csp polynomial bailleux                                                        marquis  identify tractable restric                                                        tions problems ﬁxed underlying csp    preliminaries                                      polynomial bailleux marquis  spec  constraint satisfaction problem csp triple ˆ ify complex problems distance combining primi  x  c ﬁnite set variables ˆ   tive distance constraints using negation conjunction dis  xxn   set ﬁnite  domains    ˆ   junction examples shown figure  laws  dxdxn domain dxi ﬁnite basic algebra constructing constraint expressions  set values variable xi set constraints follows slightly abuse notation used deﬁne                                                    ijcai                                                     decision problems consequence optimisation problems closely related  ideal nonideal partial assignments variables close mostdistant deﬁned hebrard et al                                                                                                                                                                 like problems close distant fpnp log         ddistanta  ↔¬dclosea                        complete differences            ∨ ↔       ∨             close  ﬁnds feasible solution nearest given subset      distant           distant        distant          solutions comparison close ﬁnds feasible solution                     ↔¬dclosea   ∧                  nearest just solution soon extend close     ddistanta  ∧ ↔ ddistanta ∧ ddistantb       nearness combinations solutions second ideal solu                                                        tion close trying near feasible                     ↔¬dclosea   ∨                                                        mostclose  ideal solution    complex expressions possible exam feasible close return whilst mostclose  ple construct expressions using implies iff xoror ﬁnd nearest feasible solution  ifthen connectives constructed using consider logical combinations ideals  standard boolean identities                      nonideals example want minimise dis                                                        tance ideal maximise distance nonideal                                                        distances combined number ways exam                                                        ple want minimise distance ideals bwe                                                        minimise maximum distance similarly                                                    want minimise distance ideals minimise                                                        minimum distance gives new global                    solp                     solp   objective shown table           dclosea             ddistanta                                                        table  examples simple distance constraints                                                        corresponding objective functions minimised                                                                   constraint      objective function                                                       closea  ∨   minδs aδs                                                               closea  ∧   maxδs aδs                    solp                     solp        dclosea ∨         ddistanta ∧       combinators like  min possible                                                        permit distance function depend ideal                                                        nonideal example want distance                                                        ideal count twice distance din                                                        case closec ∨ gives objective function                                                 minδs cδs make combinations uniform                                                        convert maximising distance δ nonideal                    solp                     solp   minimising new distance − δtoa max                                                        imum possible distance returned δ way               ∧                a∧             dclose             dclose   ddistant      single objective need minimise finally                                                        consider compiling objective function com  figure  graphical representation basic constraint plex logical combination distance constraints  expressions constructed solutions                                                        example  conjunction consider example  solp  set solutions csp  radius  circles represents distance shaded region choice car conﬁguration large catalogue  represents solutions satisfy constraints used section  customer interested models                                                        volvo jaguar whilst disliking model lada                                                        query closevolvo closejaguar distantlada                                                        implements wish expression means seek    optimisation problems                              solution simultaneously similar possible  specify precise distance ideals volvo jaguar different possible lada  nonideals solution useful minimise reformulated following logical expression  maximise distance ideal resp nonideal                                                           closevolvo ∧ closejaguar ∧ distantlada      close resp distant      instance csp  distance function δ gives following objective function substituting      partial solution                               max  logical conjunction converting maximising dis      question solution ∈ solp    tance minimising distance complement      s ∈ solp  −s δp ≤ δp s resp      δp ≥ δp s                                  maxδs volvoδs jaguarm− δs lada                                                    ijcai                                                       propagation complexity                         domain algorithm  ﬁrst computes smallest dis                                                                                                  consider propagate distance constraints tance ideal loop  domain                                                          observed hebrard et al  problems    pruned line  loop  disjunctive  close  mostdistant  solved using symmetri combinations compute values inconsistent  cally equivalent algorithms similarly problems studied each distance constraint using algorithm  prune  symmetric focus minimising dis values intersection using constructive disjunction  tance similarity maximising diversity achieve gac ondk time  introduce soft global constraints similar⊗ nary  operator ⊗∈min max  used aggregate distances  individual ideals                                    conjunction similarmax  conjunctive combinations   similar⊗xxnnv  vvk δδk distance constraints problematic consider                 jk pin             iff ⊗j  δj xivj ≤        junctive hamming distance constraint             min  operator   handles disjunctions distance constraints               in  whilst max handles conjunctions constraint ensures      maxjk       ≤                                                                                                          vv           distance set ideals                              notice assume distance vectors  equal sum distances coordinates deciding satisﬁability formula nphard    showed enforcing generalised arc consistency enforcing gac similarmax respect arbitrary  gac constraint nphard ⊗  max  number ideals nphard hebrard et al   brard et al  enforcing gac tractable shall investigate ﬁltering methods stronger straight  number ideals bounded hand forward decomposition distance constraints respect  ⊗  min gac enforced polynomial time single ideal shall section  number ideals table  summarises complexity distance constraint single ideal easy propa  enforcing gac similar⊗ constraint prove gate conjunction constraints naturally  results given table                      processed individual constraints network stronger ﬁl                                                        tering obtained considering conjunction    disjunction similarmin propagating similar⊗  constraint single ideal polynomial time algorithm  lower bound  equivalent problem dclose network                                                          data xxnnv  vvk δδk  involving domain constraints algorithm  implements result lower bound  linear ond algorithm ﬁltering similar respect ←    single ideal value ⊗ undeﬁned case foreach xi                                                             q ←∅                                                                    ∈ dx    algorithm  prune distance constraint single ideal   foreach                                                                       foreach ∈                                                                          data xxnnvδ                                            ←                             nvδ    result gac closure similar                               foreach vl ∈    lb ←                                                                                                                                             ← lδlj vli   foreach xi                                                                                                                                ←  ∪         lbi ← minδvij ∀j ∈ dxi       lb ←  lb  lbi                                      ←  q   minn ←  maxminnlb                             return maxml ∀l ∈ ∀m ∈   foreach xi       foreach ∈ dxi          minnδvij − lbi maxn        show assumption distance mea             dxi ←  dxi                       sure discrete bounded size number vari                                                        ables case hamming distance enforcing gac                                                        similarmax  constraint respect bounded    notation minn stands minimal value number ideals tractable algorithm  ﬁnds sharp lower                                                        bound respect set ideals worstcase                                                        time complexity odnk polynomial                                                        number ideals bounded easy derive  table  complexity propagating similar                                                        polynomial ﬁltering procedure constraint checking  straint disjunction similar  conjunction                                min                     lower bound upper bound each  similar    ofk ideals bounded constant          max                                           nd possible assignments complexity ﬁltering  polynomial function pn size problem                                                                              procedure od nk                       similarmin   similarmax           ∈o      ondk     odnk            theorem   algorithm  ﬁnds correct lower bound         ∈opn     ondk      nphard             maximal hamming distance set ideals runs                                                        odnk time                                                    ijcai                                                     proof algorithm builds partially ordered set vectors solution ideals  minimise  distances ideals set vectors computed each maximum distance ideal total number  variable given consecutive variables xi xitwo discrepancies evenly distributed ideals  vectors  related partial order  ≥ minimum maximum distance                                                   iff exists assignment   −  achieve distance  approxima                                                                                                ¯  δj vi δkj vki  reachable vectors tion based following inequality denotes  distances computed bound correct vector xxn    ﬁrst show cardinality poset     jk  nk distance measures discrete          ¯              jk  ¯                                                                   δxvjk ≤max     δxvj          bounded number variables each vector                                                                                        dimension nk distinct vectors  cardinality layer nk each layer consider second example add ideal                                                            compute lower bound  create new vectors each vector previous                                                                      dnk                 minimum maximum distance way   layer algorithm needs fewer steps each                                                  layer giving worstcase time complexity odnk  assigned entails discrepancy leading                                                        discrepancies true op  example  conjunction show example  posite holds know total  logical expression formulating preferences terms ideals number discrepancies   compiled constraint network assume rive lower bound     detect                                          conﬁguration database involves variables       inconsistency distribute discrep  subject set constraints objective function ancies evenly ideals considered ﬁrst example      maxδs volvoδs jaguarm− δs lada    appear second example maximum distance                                                        smaller observation gives tighter lower bound  compiled following constraint program    fact distance solution set                                                        distance subset                 minimisen                              ⊆  ⇒  max     δxv¯  ≤ max    δxv¯                               subject                             j∈s            j∈s           cx                                                      consider subset ideals                     similarmax                                        sound lower bound combining                    volvo jaguar lada                following lower bound                  hamming  hammingn−   hamming                                                                          max            δxv¯  ≤ maxjkδxv¯                                                             s⊆k                                approximation algorithm                                         j∈s  seen previous section enforcing gac introduce algorithm algorithm  based equa                                                        tion  notice algorithm require  similar    constraint bounded number ide             max                                        distance measure ideals  als polynomial algorithm introduced                 impractical large problems propose “threshold” variable used bound maximum distance                                                        ideal unique algorithm goes through sub  approximation algorithm reducing complexity      odnk ondk algorithm does pruning sets computes minimal sum distances                                                        achievable current domains assign  enforcing gac decomposing indi                                     maxn  vidual distance constraints                          ment       increase distance                                                        remove dx complexity onds    seen previously conjunction distance constraints    represented individual constraints each set considered number ideals large  decompose individual constraints each ideal power considered case                                                        computed lower bound remains valid                  in                                    each subset ideals compute lb line                        ≤                                                    lower bound maximum distance each value                                                    each coordinate compute number ideals                                                         each individual constraint gac linear time distance solution increased                                                                                               considering ideals separately value chosen number divided line   pruning possible                       lower bound contribution value makes    consider following example let distance minimum each individual   variables consider ideals      distances aggregated compute lower bound      v       assume δ distance complete set ideals line  finally  hamming distance distance δ solution lower bound individual distances used prune  ideal  dn  values value increases lower bound                                                        maxn  inconsistency inferred looking    pruned line   separately constraint globally inconsistent theorem  algorithm  ﬁnds valid lower bound  variable xi assigned   maximal hamming distance set ideals ﬁlters  total sum pairwise differences mains respect bound runs ondk                                                    ijcai                                                                                                                    algorithm  prune distance constraint multiple ideals plot minus distance distance complement                                                        cputime measured seconds number backtracks av    data xxnnv  vvkδδk                                                        eraged  instances each case formally    result closure similarmaxxxnnv            δ δ                      plot following function st set solu                                                                                           foreach ⊆                                    tions time number backtracks  set                                                                        lb ←                                           ideals andis number variables       foreach xi                                                                      − maxv∈v δs                   foreach ∈ dxpi                                                                  s∈st             distij ←    δlj vli                         vl∈s                                                                 search strategy chose variable branch         lb ←  lb  mindistis          lb maxn fail                      usual domaindegree heuristic ﬁrst value                                                        signed chosen minimise number discrep       minn ←  maxlb minn                                                      ancies ideals coordinate words given       foreach                                                                         dx   ←v  ∈ dx   slb − mindisti   vectors        choose variable value                                                 ∈ dx                    δ          distijs≤maxn                               j∈k  minimal                                                                                                                                                                                                                                                                                                                                      proof show equation  valid composition                      straightforward inequalities equation  relies                                                                                                     fact maximal element set larger aver                                                                                                   age whilst equation  states maximal element set distance  complement   decomposition decomposition                                                                   global constraint    global constraint                                                                                   larger maximal element subset proce                 dure used each iteration outer loop line  similar cputime seconds    backtracks  algorithm  linear complexity ond       conﬁguration problem  ideals  number iterations worst case equal cardi                                        nality power set                                                                                                                                                                                                    theorem  algorithm  achieves strictly stronger ﬁlter                                                                                      ing decomposition constraints single ideal            nv  ∀j ∈                                         similar                                                                                                                                                                                             distance  complement   decomposition   decomposition  proof sketch ﬁrst show algorithm  stronger        global constraint      global constraint                                                                                   decomposition loss generality consider                 ideal vj subset vj explored loop     cputime seconds      backtracks  computation ﬁltering algo     conﬁguration problem  ideals  rithm  example show relation                                                                                  strict let xn boolean variables consider                                                                                               v                       ideals                           assume                                                                                           δ hamming distance −                           decomposition gac whilst algorithm  fails                                                                                                                                                                              unfortunately algorithm does achieve gac                                                                                                                                              distance  complement decomposition   decomposition  general expected given lower complexity     global constraint      global constraint                                                                                                                                                                  empirical evaluation                                         cputime seconds      backtracks                                                                    conﬁguration problem  ideals  ran experiments using renault conﬁguration bench                                                                       mark  large realworld conﬁguration problem prob             lem consists  variables domain size varies          table constraints nonbinary                                                                                 randomly generated  sets ideals cardinality                                                                              distance  complement    giving  instances total each instance                      decomposition                                                                                     global constraint                                                                        used branch  bound minimise maximum hamming                                      distance set conjunction ideals                                 cputime seconds    compared decomposition distance constraints             “zoom” figure  each ideal separately propagation algo  rithm approximating gac algorithm  combined  figure  results renault conﬁguration problem  distance global constraint report results obtained  figures    ideals respectively benchmark gain achieved runtime using                                                        global constraint instead decomposition slight         ftpftpiritfrpubiritrpdmpconfiguration     deed curves equal regardless number                                                    ijcai                                                     
