                 realtime detection task switches desktop users                          jianqiang shen     lida li   thomas dietterich                              kelley engineering center school eecs                           oregon state university corvallis  usa                                   shenj lili tgdeecsoregonstateedu                          abstract                          efforts seek address problem creating                                                        “taskaware” user interfaces information worker      desktop users commonly work multiple tasks      tasktracer provides convenient way user      tasktracer provides convenient low ﬁne hierarchy tasks associate information resources      cost way users deﬁne hierarchy   email messages ﬁles folders web pages tasks      tasks associate resources tasks user declare “current task” task selector      information tasktracer supports component window title bar tasktracer      multitasking user conﬁguring ﬁgures desktop ways support selected      current task detect task example supplies application called task      user switches task identify user’s cur explorer presents uniﬁed view resources      rent task times problem “task switch associated current task makes easy open      detection” special case general problem resources appropriate application predicts      changepoint detection involves monitoring folder user likely access modiﬁes      behavior user predicting real time opensave dialog box use folder default folder      user moves task  desired restore desktop state      present framework analyzes sequence   user worked task      observations detect task switches clas approach requiring user declare current      siﬁer trained discriminatively predict cur task makes sense user returning interrup      rent task based features extracted tion wants bring list relevant resources      window focus second multiple singlewindow   approach fails user interrupted      predictions speciﬁcally class probability esti phone instant message user typically changes      mates combined obtain reliable pre  documents web pages remembering ﬁrst      dictions paper studies three combina  form tasktracer cases like tasktracer      tion methods simple voting likelihood automatically detect activity switch      ratio test assesses variability task                                                          address problem wish apply machine learn      probabilities sequence windows                                                        ing methods automatically detect task switches      application viterbi algorithm                                                        task switch detected like tasktracer pop      sumed task transition cost model experimental                                                        “balloon alert” asking user permission change      sults show three methods improve                                                        current declared task usable task switch detector      singlewindow predictions viterbi ap                                                        highly precise low false alarm rate      proach gives best results                                                        timely detect task switch                                                        soon possible occurs avoid interrupting                                                        user fully engaged new task finally    introduction                                       consume minimal cpu resources does  today’s desktop information workers continually shift interfere work user trying accomplish  tween different tasks projects working spheres task switch detector taskpredictor  example gonzalez mark  study infor ﬁrst taskpredictor tasktracer developed  mation workers investment ﬁrm average shen et al deployed tasktracer   duration episode devoted task slightly taskpredictor classiﬁer trained predict user’s cur   minutes workers typically worked  dif rent task based features describing window cur  ferent tasks day furthermore information needed rently focus remainder paper refer  each task tends fragmented multiple application single window classiﬁer swc  programs email calendar ﬁle ﬁle server web pages swc achieves fairly high accuracy unusable practice  tasktracer dragunov et al  produces far taskswitch false alarms                                                    ijcai                                                      paper describes set experiments develop im   proved taskpredictor basic idea develop algorithms  analyze sequence predictions swc      make reliable task switch predictions    remainder paper structured follows   single window classiﬁer  present framework applied task switch       detection problem framework makes task switch     coverage    decision based metric combines multiple task pre   dictions time three different metric functions pro  posed paper show experimental results                                                                synthetic real user data conclude paper  review related work discussion future work                                                                                                                                                                                                                               number features    tasktracer single window                                                        figure  impact feature selection fraction oneminute     classiﬁer swc                                    intervals informative observations function                                                        number selected features  tasktracer operates microsoft windows environment  collects wide range events describing user’s  computervisible behavior tasktracer collects events  switch detection informative  ms ofﬁce  ms visual net internet explorer  observations  windows xp operating various tasktracer                                                        detecting switches individual task predictions fails  components provide services user based                                                        mainly decisions based just observation  formation raw event stream swc extracts                                                        reliable given observations xxtthe  sequence windowdocument segments wdss wds                                                        swc uses xt predict task time instead  consists maximal contiguous segment time                                                        detect switches based previous  observations  window focus document                                                        xt−xt larger value  bring  window does change swc extracts information                                                        formation make task switch predictions  window title ﬁle pathname each wds                                                        comes cost reducing timeliness predic  heuristically segments bag “words”                                                        tions roughly wait  observations  creates binary variable xj feature set each                                                        information reliably detect  unique word weight longduration wdss                                                        task switch  taskpredictor creates multiple training instances each  wds wds lasts seconds taskpredictor gen                                                         framework detect task switches  erates    exp−t  identical training instances                                                        figure  presents framework detecting task switches    sake accuracy speed information execute detector seconds event  gain yang pedersen  each feature computed received bag features wds contains infor   features highest individual pre mative features null bag ignored  dictive power retained rest discarded usually happens shortduration popup windows  refer  features “informative” features  internet explorer windows new ofﬁce documents “docu    reasonable ask feature selection causes ment”  large number wdss bags words informative wds observations pushed ﬁrst  uninformative checked user’s month inﬁrstout queue maximum length oncex contains  tasktracer dataset dataset contains  distinct words  elements each new element added causes oldest  discretized time second periods applied fea element removed function switchmetric com  ture selection entire dataset figure  shows frac putes switch metric value Λ returns  tion episodes informative feature predicted new task discussed Λ exceeds thresh  function number features selected  fea old taskswitch alert shown user user  tures  episodes informative features asked conﬁrm user agrees current task    ﬁrst version taskpredictor worked applying changed new task left unchanged  swc predict task informative wds variable silentnumber stores number infor  predicted task different user’s declared task mative observations switch alarm  prediction sufﬁciently conﬁdent taskpredic avoid annoying user method does raise new  tor issued task switch alarm initial experience alarms informative observations  taskpredictor revealed sensitive noise switch alarm  issued false alarms clearly need event occurs long time seconds  sophisticated technique solve problem        point predicting switch avoid                                                    ijcai                                                                                                          tions basic idea vote task xx             witch  etector    procedure                   threshold           task xx                                                                                                                                                       compute ya argmaxy        yxi   input  – store  observations queue                                                                                                                          yx        – efﬁciency delay skip switch computation wds argmaxy  i    calculate                                                      switch metric          lasted longer seconds                                ⎧                             ⎫                                              – recovery time silent informative          ⎨                       ⎬           observations switch alarm                                                          Λiya   yb ·    yaxi       ybxi    noeventtime   ←                                                     ⎩                             ⎭                                                                           il          i   silentnumber   ←∞   seconds event happens                                                               event happened                             ipif  true −                      ←                         noeventtime      noeventtime                   paper train support vector machines class prob                        ←     noeventtime                                  ability estimation platt  wu et al  voting     skip inference happened seconds method votes class probability distributions calculate                          noeventtime      continue                     metric straightforward cheap doesn’t     update observation queue xx      account variability task probabilities     xnow ←  getobservation     xnow null                              likelihood ratio scores        updatequeuex   xnow                        instead just looking sum predicted class        silentnumber   ←  silentnumber                probability distributions consider variabil     continue                                      ity distributions voting suggest task     silentnumber  ≤ continue                    switch class probability distributions each half     Λ predictedtask ←  switchmetricx              highly variable suggests low conﬁdence     Λ  threshold                                 prediction        silentnumber   ←                                 let Θi posterior probability distribution        popupalertpredictedtaskok              tasks given observation xiandμa μb true means          setcurrenttaskpredictedtask                 ΘΘ ΘΘ respectively   shutdown                         seek test hypothesis  μa  μb alterna                                                        tive  μa  μb developed neyman pearson                                                        likelihood ratio test provides general methodology test   figure  generic framework detecting task switches twosided alternative null hypothesis mukhopad                                                        hyay  central limit theorem states sample                                                        mean approximately gaussian distribution given sufﬁ  cost computing switch metric want ciently large sample compute switch metric  identical observations longduration Λ gaussian likelihood ratio score  wds need update                                       −    user studies set default parameters                                                                                 ΛΘa   − Θb     Σa   Σb     Θa − Θb    framework follows                                        metric functions                                 Θa  Θb sample means Σa Σb                                                        sample covariance matrices ΘΘ  three methods computing metric func                                                        ΘΘ respectively reject  tions based fifo queue informative observations                          ∀i        baseline method similar large values Λ assume    deployed latest tasktracer release dependent treat Σa Σb diagonal matrices                                                        computation time o ·y excluding expense  baseline method                                       swc compute yjxi  baseline method applies swc each observation central limit theorem suggests  quite  individually given observation swc returns three large   large  values substan  things predicted class label yˆ probability distribution tially delay task switch alarms fortunately experi  Θp   yx possible class labels conﬁdence mental results good    measure estimates baseline method considers                                                        minimal transition costs  prediction conﬁdent exceeds given threshold  shen et al  compares class labels metric based hypothesizing task switch cost  recent conﬁdent predictions declares task switch applying additive conditional cost formula similar  alarm different                          hidden markov models hmms deﬁne cost                                                        labeling  class probability voting                                                                                                                       yx                        simple solution combine multiple predictions voting                  i−                                                                        ≤i≤           i≤  let xx queue informative observa                                                    ijcai                                                    ca atemporal cost labeling observation                                                        table  datasets evaluating switch detection   yi ct transition cost moving task                                                        words computed stoplist stemming  yi− task yiwedeﬁneca negative log likelihood     −         log   iasinfernetalwedeﬁnethe                data set    fa   fb    fc    sa  transition cost function ct  · δyi  yi−wherec         δ                                                  sizein months                real  true  model sim       switches         ply charges equal cost task switches    oftasks                 it’s possible switches likely    words             assume sequence short  contains   switches concerned  switch sequence compare min  generated observations task accord  imal cost assumption  switches minimal ing multinomial distribution each observation  cost assumption switch              lasts  second contains  words                                                          real user data obtained deploying tasktracer   α mincy      y  ax                                                                  windows machines research group collecting   β mincy      yi  yi   y  bx  data users referred fa fb fc       iab                                           sa collected data summarized table  each                                                     episode data sets handlabeled associ                                                        ated task labels probably exhibit considerable  apply viterbi algorithm ﬁnd minimal costs                                                        levels noise  given xxiletαij minimal cost predict                                                          present results performance metrics  task time yj predict switch time ilet                                                        coap precision  βij minimal cost predict task time yj                                                          coap given size queue measure prob  switch occurred prior time each yj                                                        ability segment boundaries correctly identiﬁed  initialize αj  cayjx βj ∞fortaskyj                                                                                                 assume switch occurred time ithen cooccurrence agreement probability coap beeferman et                                                        al  mccallum et al  sequence observa  αij simply sum atemporal costs plus αi−j  assume switch occurred prior time ithere tions divided segments using observed                                                      predicted task switch points consider arbitrary  possibilities switch occurred time                                       time pick choice smaller cost add time points   segmented sequence                                                         belong segment belong different  atemporal cost βij  ∀ i≤                                                         segments coap computed choosing probabil  recursively calculate cost each yj time                                                        ity distribution tt measuring probability    αij  αi−j  cayjxi                       observed predicted segmentations agree                                                        points belong different seg    βij minβi−j min αi−k   cayjxi                       kj                              ments case uniform distribution pairs                                                        tt − t≤ time units synthetic                                               α   minimal costs entire sequence    data set time unit  second real user data  minj αj    β minj  βj                       set value metric time unit  seconds  difference                                                          each dataset data ordered according time                      Λα   − β                     divided three equal time intervals ﬁrst  viterbi search o ·y time excluding  expense cayjxiinstepi need calculate                                  transition cost                                                                                           voting  cayjxi each yj values cached                            likelihood ratio  future reuse                                                                            baseline method      experimental results                                       tested framework three task switch metrics                                                                coap  synthetic data data real users                generated  synthetic datasets using following  process each dataset contained  tasks  distinct  words each task multinomial distribution words   randomly generated  words ap  proximately  times likely appear remaining                                                                 words sequentially generated  episodes                            ﬁrst chose task uniformly random generated               size queue  length episode uniformly range  ≤ ≤                                                        figure  average coap values synthetic data    available httpwwwcsorstedu˜shenjtt data function  length observation queue                                                    ijcai                                                                                                                                                  transition cost                                        transition cost                                    voting                                             voting                                likelihood ratio                                       likelihood ratio                                    baseline method                                     baseline method                                                                                                                                                coap                                                                                                                precision                                                                                                                                                                                                                                                                                                                                                     size queue                                     coverage    figure  average coap values real user data figure  average precision values function  function                                          coverage real users given  observations created                                                        varying prediction threshold  train single window classiﬁer using given  switch detection algorithm vary threshold evalu through data set deﬁnes initialization period  ate choose best threshold recall issue each day end data set trained  switch alarm metric value larger thresh data days  through −  evalu  old finally retrain swc using ab apply ated performance day precision given coverage  learned swc threshold value evaluate  informative observations plotted figure   sults plotted figure                 framework metric functions outper    plots  size informative observation forms baseline method results show using  queue crucial accuracy methods  observations does reduce false alarms minimal  creased coaps ﬁrst increase decrease transition cost metric gives best results coverage  three metric functions initial increase presumably  compared baseline method minimal transi  increase information available tion cost metric improve precision   subsequent decrease presumably fact likelihood ratio metric gives best results coverage  queue long contains task switch   voting worst three metrics  framework assumes   task switches occur   switches  large  maximal coaps reached   syn  related work  thetic data  real user data highest method task switch detection based task recog  coap value metric function larger nition prediction methods  baseline method                                      veloped shen et al  review    minimal transition cost metric gives best perfor attempts understanding user’s informa  mance particularly synthetic data reason tion retrieval area ohsawa yachida   unlike metrics constrained predict task switch detection related changepoint detec  switch point center observation queue tion chen gopalakrishnan  guralnik srivas  likelihood ratio metric conservative predict tava  standard approach changepoint detec  ing switches issue alarm predicted tion apriori determine number change  yxi stable misses real switches points discovered decide function  makes fewer false alarms leads low used curve ﬁtting interval suc  coap value voting method effective cessive changepoints guralnik srivastava    precision given coverage measured precision approaches usually employ supervised learning tech  coverage follows correct userlabeled switch occurs niques switch detection method sheds light  time switch predicted occur t− problems handlabel observations train    ﬁrst switch prediction considered switch detector predict change points  correct subsequent predictions time task switch detection different novelty detec  interval counted errors precision probability tion sch¨olkopf et al  campbell bennett   switch prediction correct coverage probability ma perkins  ﬁrst story detection allan et al  userlabeled switch predicted correctly          novelty detection anomaly detection tries au    adopted online learning methodology evaluate tomatically identify novel abnormal events embedded  algorithms real user data divided data large body normal data application liberate sci  days assign day  way entists exhaustive examination data drawing                                                    ijcai                                                    
