                  winner determination sequential majority voting∗                      langmspini     rossikbvenable    walsh                                          irit toulouse france                                                langiritfr                 department pure applied mathematics university padova italy                                  mpinifrossikvenablemathunipdit                                   nicta unsw sydney australia                                         tobywalshnictacomau                        abstract                          deal incompleteness voting rule study                                                        complexity computing candidates win      preferences aggregated using voting rules                                                        possible binary trees section  focus binary      consider family rules perform                                                        trees number competitions each candidate      sequence pairwise majority comparisons                                                        balanced possible characterizations winners      tween candidates winner depends                                                        trees particular possible build polyno      chosen sequence comparisons                                                        mial time tree featuring bounded level imbalance      represented binary tree address dif                                                        particular candidate wins tree exists finally      ﬁculty computing candidates win                                                        section  study scenario agents      trees introduce study notion                                                        partially revealed preferences giving characterizations      fair winner candidates win balanced                                                        notions possible condorcet winners proving      tree consider situation lack                                                        winners polynomial time      complete informations preferences      termine computational complexity comput      background      ing winners case                                                        preferences proﬁles assume each agent’s    introduction                                       preferences speciﬁed possibly incomplete total                                                        der asymmetric irreﬂexive transitive  voters’ preferences voting rule fully                                  Ω  speciﬁed computation winner easy order set candidates denoted  given                                                        candidates ∈ Ω agent specify exactly  voting rules voters’ preferences                                     voting rule incompletely speciﬁed following ab abora   means  stance voters expressed prefer relation revealed  ences voters expressed preferences proﬁle sequence total orders describing prefer  new candidates introduced example ences sequence agents incomplete proﬁle  eliciting preferences using compact language sequence preference relations  cpnets boutilier et al  induces par incomplete sake simplicity assume                                                      number voters odd condorcet winner exists  tial incomplete ordering konczak lang                                         considered voting incompletely speciﬁed pref candidate candidate aastrict  erences compute candidates winning resp majority voters prefers  complete extensions partial preference pro majority graph given complete proﬁle  ma  ﬁles given voting rule second kind incompleteness jority graph mp  graph set vertices set  voting rule example order candidates Ω ∈ Ωthereisa  candidates compared ﬁxed make directed edge mp  denoted biff  manipulation coalition voters difﬁcult conitzer strict majority voters prefer majority graph  sandholm                                   asymmetric irreﬂexive necessarily transi    paper consider wellknown family voting tive number voters odd mp   rules based sequential majority comparisonswherethe complete each  bm  winner computed series majority comparisons holds mp  complete irreﬂexive asym  binary tree study impact kinds metric graph called tournament Ω laslier   incompleteness voting rules                 weighted majority graph associated complete    paper structured follows section  recall                                                        proﬁle graph mw  set vertices Ω  basics sequential majority voting section  ∈ Ω directed edge    ∗this work supported italian miur prin project weighted number voters prefer   “constraints preferences”         weights quantify disagreement                                                    ijcai                                                    number voters preferring want use set possible winners contains uncovered set miller  standard majority graphs just consider weights  contains banks set banks  equal simply majority graphs       contains set copeland winners deﬁned  example   majority graph induced voter pro didates maximize number outgoing edges  ﬁle abc    bca      bac       majority graph condorcet winner exists                                                        sets coincide singleton  three edges bm bm  candam     binary voting trees given set candidates Ωabinary  computing possible winners  voting tree binary tree each internal node set possible winners coincides cycle  cluding root children each node labelled majority graph moulin  cycle majority  candidate element Ω leaves contain          Ω                                             graph set maximal elements reﬂexive  didate leaf given internal node transitive closure g∗ equivalent characterization  children candidate associated possible winners terms paths majority graph  winner competition candidates associated                                                                                                    moulin                           theorem  moulin  laslier   given    abinarytreet  balanced iff difference complete majority graph candidate possible  maximum minimum depth leaves winner iff candidate exists path                                                           →                  −   equal  general difference denotes bi bi  level imbalance tree                         path ﬁnding polynomial following  sequential majority voting rules induced binary trees corollary  given binary voting tree  voting rule induced theorem  given complete majority graph candi  maps each tournament candidate returned date checking possible winner  following procedure called knockout competition ﬁnding tree wins polynomial     pick nonterminal node successors example  assume given majority graph      terminal nodes let candidates asso candidates bandc candidate possible win      ciated respectively                   ner beats theorem                           →         →                   mustbeapathing   candidate assume    delete branches        →     →     →      making terminal node candidate resp qif       path figure                                                         shows voting tree corresponding path       pm   resp qm ising      repeat operation consists single node                                candidate associated node returned  example   given majority graph figure  fig           path               ure  shows voting tree corresponding sequence       competitions ba                                                                                                                                                           voting tree                  majority graph                                                                                       figure  path corresponding voting tree                                                                                                         fair possible winners                                                        possible winners candidates win voting                                                        tree tree unbalanced       figure  majority graph resulting voting tree winner compete candidates                                                        considered unfair following consider  possible winners condorcet winners candidate competition fair balanced voting tree  condorcet winner candidate winners fair possible winners simplicity                                                                             bwehaveam       condorcet winner corre  assume  candidates results easily  sponds vertex majority graph outgoing edges lifted situations number candidates  proﬁles condorcet winner ex power  notice condorcet winner fair possible  ists condorcet winner exists unique winner wins trees balanced ones  condorcet winner sequential ma show candidate fair possible winner  jority winner each binary tree exists nodes majority graph covered  binary tree candidate winner binomial tree cormen et al  means  called possible winner                             nodes majority graph terminal nodes bal    ways computing winners majority anced competition tree binomial trees deﬁned induc  graph exist laslier  review example tively follows                                                    ijcai                                                      • binomial tree order  written tree fair winner voting rule accepting fair      node                                         possible winners welldeﬁned                                                          unfortunately complexity deciding fair pos    • abinomialtreeoforderk written tkisthe      tree root children sible winner open problem weighted ma      ith child binomial tree order − jority graphs nphard check candidate                                                        fair possible winner means restrict vot    easy binomial tree order kthereare ing trees balanced ones difﬁcult chair     nodes tree height                    choose voting tree manipulate election                                 given majority graph  nodes given problem manipulation chair called ”control”  didate possible ﬁnd covering nodes ﬁrst considered bartholdi et al   binomial tree order root situ                                                        theorem   given complete oriented weighted major  ation balanced voting tree wins                           np  fair possible winner                            ity graph candidate aitis complete check                                                        fair possible winner  example   consider majority graph candidates  depicted figure  majority proof sketch prove exact cover problem  graph covered binomial tree root duces polynomially problem ﬁnding minimum bi  conclude fair possible winner           nomial tree root covering proof similar                                                        papadimitriou yannakakis  reduces                                                        exact cover problem ﬁnding minimum spanning         majority graph                    binomial tree balanced voting tree tree graph class trees sets disjoint                                                        ﬂowers type  each tree class                                                                                                                                        number ﬂowers type  ≥ ct                                                         ﬂower tree nodes root degree                                                 distance   root ﬂower                                                type  node distance  root                                                        binomial trees trees consist disjoint ﬂowers                                                        type  fact binomial tree ﬂower type                                                                                                                                                   bigger binomial trees tk  nodes consist  figure  majority graph balanced voting tree k− instances ﬂowers type  disjoint  binomial tree                                                    k−   tk                                                                       ≥ ctk                                                           given instance exact cover problem consisting  theorem  given complete majority graph   sets size  elements each appears  nodes candidate binomial tree tk cov three times sets proof proceeds constructing  ering nodes root fair graph instance exact cover iff graph  possible winner                                      minimum covering binomial tree     proof assume binomial tree tk satisfying                                                          hand given possible winner easy  statement theorem each node associ                                                      ﬁnd tree bounded level imbalance  ated candidate node write candn                                                        wins deﬁne dta length path tree  denote candidate                                                        root leaf labelled awedeﬁneΔa    show possible deﬁne starting tk                                                                  maximum ta  competition trees  balanced voting tree tk wins each node wins Δam   − thena  condorcet winner  btk associated candidate                                                      viceversa fact means tree  tation deﬁnition tk given induction competes everybody wins seen    •  btt                                alternative characterization condorcet winners                                                          important able compute Δa easy    •  btk balanced tree built                                                        task fact know candidate possible      stances btk− corresponding instances                                                        winner Δa coicides number outgoing edges      tk− tk deﬁnition roots                                                        majority graph      trees children root btk      didate root btk candidate root theorem  given majority graph possible winner      tk                                               Δa number outgoing edges                       easy tk perfectly balanced binary tree proof outgoing edges voting tree  winner candidate associated wins appearing depth larger fact  root binomial tree proof opposite direction win win competitions scheduled tree           similar                                              competitions Δa ≤      notice condorcet winner fair winner thank claudeguy quimper observation sug  fair winner possible winner gesting look papadimitriou yannakakis                                                     ijcai                                                      possible build voting tree proof copeland winner candidate  wins appears depth let ﬁrst consider beating beaten candidate beaten  linear tree competes consider balanced tree bt deﬁned proof  ddk candidates defeats directly theorem  rooted involving  clearly tree dtakhowevert     candidates beaten worst case remaining  contain candidates particular contain − Δa −  candidates beaten  candidates defeating consider candidate btsayb case add  each candidate → each  bt balanced subtree depth logm − Δa −   candidate add subtree current tree current rooted b involving remaining candidates   tree beginning let consider ﬁrst  path know exists connects  say →  →   → bh  →  cletj  ∈h        incomplete majority graphs  bj belongs current tree ∀ij till agents deﬁned preferences  bi does belong current tree notice candidates majority graph complete uncertainty  candidate bj exists path start comes tree voting rule  edge ddk candidates source uncertainty agents’ preferences  attach current tree subtree corresponding partially known  path bj →   →  node bj obtaining new tree  let incomplete proﬁle collection  new candidates added having complete preference relations Ωtheincomplete major  considered candidates defeating tree obtained ity graph mp  induced deﬁned graph  voting tree wins depth exactly set vertices Ω containing edge  Δak                                         number voters prefer greater                                                        mp   incomplete asymmetric graph partial    show possible winner exists tournament Ω instance graph induced  voting tree wins level imbalance voter incomplete proﬁle abc ac    −Δ   −           notice balanced bc graph edges  trees wins                                  note importantly set complete majority                                                        graphs extending mp  superset set major  theorem  given complete majority graph pos                                                        ity graphs induced possible completions   sible winner  voting tree level imbalance                                                      clusion strict means summarizing  smaller equal − Δa − wherea wins                                                        mp   implies loss information  tree built polynomial time                                                          like reason possible winners  proof   beats Δa candidates easily dorcet winners scenario following konczak  build balanced voting tree bt involving lang  say ∈ Ω ∀possible winner resp  candidates beaten add remaining ∃possible winner iff possible winner com  −  Δa −   candidates btsincea  possible pletions resp completion andthatx ∈ Ω  winner path candidates ∀condorcet winner resp ∃condorcet winner iff  beaten each remaining candidates worst condorcet winner completions resp com  case adds subtree depth − Δa −  rooted pletion  know konczak lang   nodes beaten bt                  ∀condorcet winner ∃condorcet winners com                                                        puted polynomial time computing ∀    unfair tournaments undesirable consider possible winners ∃possible winners looks far easy  possible winners voting trees conjecture nphard reasoning  balanced possible theorem  helps incomplete majority graph comple  spect possible winner knowing Δa com tions  deﬁne following approximations  pute upper bound minimum imbalance tree ∃and∀possible condorcet winners  wins general Δa ≥ tree show shortly computable polynomial time                                        −  −   imbalance level smaller equal  deﬁnition  let incomplete majority graph           Δ    higher  lower upper bound level candidate  imbalance tree wins                    • weak possible winner iff exists com    candidate maximum number outgoing edges pletion tree wins  majority graph copeland winner • strong possible winner iff comple  smaller upper bound imbalance tion tree wins  fairestmost balanced tree wins notice • weak condorcet winner iff com  copeland winner possible winner               pletion condorcet winner                                                          • strong condorcet winner iff com  theorem  candidate copeland winner                                                            pletion condorcet winner  imbalance fairestmost balanced tree wins  smaller equal logm − Δa −                 majority graph complete strong weak                                                    ijcai                                                    condorcet winners resp strong weak possible winners ∈ ra ∈ gˆ construction  coincide coincide condorcet winners resp gˆ necessarily ∈ ra imif  possible winners deﬁned section              zi ∈ ra zi ∈ ranowsincez  ∈ ra                                             denote wp   sp  wc   sc     induction zi ∈ ra ∈ ra  sets respectively weak possible winners strong possible impossible path  winners weak condorcet winners strong condorcet win gˆ gˆ complete tournament path  ners following inclusions                                                        implies possible winner wrt gˆ                    ⊆       ∩                    sc     wc     sp                   lastly construction gˆ contains gsogˆ complete                     ∪     ⊆                    wc      sp     wp                   extension possible winner    furthermore set complete majority shows strong possible winner   graphs extending mp  contains set majority graphs  induced completions  strong possible winner clearly procedure based previous theorem gives  mp  ∀possible winner ∃possible winner polynomial algorithm ﬁnd strong possible winners  weak possible winner mp  similarly let asymmetric graph Ω set candidates  weakstrong condorcet winners                   ∈ Ω let consider following algorithm    graphtheoretic characterizations each begin  notions                               Σa∪  path                                                            theorem  given incomplete majority graph     candidate strong possible winner repeat                                                           yz ∈ Σ × Ω  Σ  candidate path                                                                                               →  ∈ add →   proof ⇐ suppose each  path  ∈ Ω  Σ                                                                                          paths remain com     path                                                              add Σ  pletion using theorem  possible                                                     winner completion strong pos ΣΩor yz ∈ Σ × Ω  Σ →  ∈                                                               Σ  sible winner ⇒ suppose path return   let deﬁne following three subsets set let fg set Σ returned algorithm  candidates Ω ra set candidates reachable following result                            −    including   set theorem  fg aΩif weak possible  didates reachable including winner  Ω   ra ∪ r−b path                                  ∩  −  ∅         proof  ﬁrst make following observation graph  gwehavethatr                    rar−bothers partition Ωnow obtained end algorithm asymmetric                                 ˆ                      extends asymmetric start  let build complete tournament follows                                                 →      ˆ                                                 algorithm edge                                               added g → g                                                                                               ∀ ∈ ra ∈ r−baddyx gˆ              assume  fg aΩletg        tournament                                                        extending g fortiori g exists      ∀  ∈       ∈                  ˆ                                                            othersadd  yx               asymmetric construction thereisapath                                                                ∀ ∈ ∈ r−baddyx gˆ           node fg                                                        node Ω asinceg  extends g holds    ∀ belonging element partition                                                                                             fortiori  possible winner      yx add                   ˆ                                    weak possible winner conversely assume      arbitrarily                               fg aΣΩ denote       ΘΩ     Σ                                                                                          let ﬁrst show gˆ complete tournament yz ∈ Σ × Θ →  ∈ nowz  ∈ Θ means  ∈ ra  ∈ r−bthenx  ∈  edge → ∈ Θ  ∈ Σ added                                             ∈        g ∈ Σ ∈ Θwehavethat  path                  ∈ othersthenx ∈ gotherwisey →   ∈ → ∈ thisimpliesthat          ∈              ∈   −           ∈      yz ∈ Σ × Θ →  ∈    ifx                                   r−b tournament extending candidate Θ                                                                             Σ  belong distinct elements partition gˆ beats candidate  particular                                                        path g candidate  contains yx ynowifx belong                                                                                       ˆ            implies possible winner  element partition step  contains                                                                                        holds tournament extending                                             ˆ  exactly edge    yx     weak possible winner   complete tournament let show                         ˆ  path  suppose   algorithm copmuting fg runs  exist  zzm−zm   time oΩ corollary weak possible win                                     ˆ  zz zzzm−zm⊆gnowforall         ners computed polynomial time                                                    ijcai                                                    
