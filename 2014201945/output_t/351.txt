   exploiting inference rules compute lower bounds maxsat solving∗                                         han lin    kaile su   †        department science sun yatsen university guangzhou  china                           iiis grifﬁth university brisbane qld  australia                             underchangeyahoocom      ksugrifﬁtheduau                          abstract                          sonable time kautz selman almosteverycom                                                        plete sat solver based dpll algorithm davis et al      paper present general logical frame  dpllbased solver employs trans      work weighted maxsat problem study    formation rules unit propagation resolution      properties inference rules branch bound achieve high efﬁciency rules improve sat solvers      maxsat solver rules      main aspects used simplify formula      equivalent Λequivalent proposed second each internal node search tree solver      show Λequivalent rules sound attempt use rules prove unsatisﬁability      example show exploit inference rules formula instantiated partial assignment      achieve new lower bound function max     mula really unsatisﬁable solver extend par      sat solver new  function admissible     tial assignment rules great      consistently better wellknown lower use sat solving applied directly max      bound function based study inference   sat solvers reasons using rules      rules implement efﬁcient solver ex simplify formula preserve optimal value sec      perimental results demonstrate solver ond goal maxsat solver ﬁnd maximum      performs efﬁcient solver im number satisﬁed clauses proof unsatisﬁability      plemented recently heras larrosa  meaningless big gap sat      especially large instances                   maxsat solving fortunately transformation rules                                                        used compute lower bounds during maxsat search                                                        ing process paper study properties    introduction                                       transformation rules weighted maxsat propose  past years maxsat solving techniques new rules improve lower bounds  drawn increasing attention gramm et al  givry differences logic max  et al  alsinet et al  shen zhang  sat problem sat larrosa heras   li et al   larrosa heras  xing developed logical framework extend sat solving  zhang  heras larrosa  various ﬁelds techniques maxsat simplic  artiﬁcial intelligence problems handled ity framework study properties  transforming original problem instance max transformation rules intensively order avoid limi  sat instance solving maxsat solver tation extend framework introducing new  problems include maxcut maxcliqueaswellasprob    fundamental concepts  lems domains routing xu et al  bioin paper organized follows section   formatics strickland et al  scheduling vasquez scribe logical framework maxsat intensively  hao andprobabilistic reasoning park    study properties inference rules section     maxsat optimization version sat problem propose new inference rules improve maxsat  decade signiﬁcant progress solvers section  case study show ex  performance sat solvers modern sat solver han ploit inference rules improve lower bound function  dle instances containing million variables rea maxsat section  shows experimental results finally                                                        conclude paper section     ∗this work supported australian research coun  cil grant dp national basic research  program  china grant cb national natural science foun  logical framework weighted  dation china grants    maxsat  guangdong provincial natural science foundation grants                                            section propose logical framework weighted    †corresponding author                               maxsat general suitable study                                                    ijcai                                                    ing maxsat solving techniques proposed deﬁnition  given bounded formulas fk  larrosa heras  heras larrosa  fk                                                                         fk fk    basic notation deﬁnitions                                                                                 holds model fk model fk  convenience introduce notation deﬁnitions fk fk equivalent denoted fk ≡  propositional logic variable values  fkiffk fk fk fk  trueor false literal variable nega                                                        deﬁnition  given weighted cnf formulas  tion variable related literal denoted varlthe  negation variable literal denoted x¯aclause                 ∨ ∨ ∨ lm disjunction literals  variable occurs weighted clause pair holds fk fk weighted cnf  clause weight clause formulas equivalent denoted ≡ fif  loss generality assume natural number    paper cnf formula conjunction clauses following proposition corollary reveal relation  weighted cnf formula set weighted clause bounded deﬁnitions weighted maxsat prob  formula pair weighted cnf formula lem  natural number upper bound formula                                                                                                     formula variable set anassignment lemma  let   weighted cnf formulas                                                                                                   mapping   denoted vector complete assignment                                                      x ∈  wheren number variables   assignment complete  ⊇  partial                                                                                              costf   ≥ costf   assignment satisﬁes clause satisﬁes literal  clause assignment satisﬁes cnf formula proposition  given weighted cnf formulas  satisﬁes clause formula instantiation  fthenopt ≥ opt                             true            formula  forcing literal   denoted                                                     produces new formula follows clauses containing lit corollary  given weighted cnf formulas                                                          ≡ fthenopt fopt    eral eliminated ¯l deleted each clause  occurs use  denote clause procedure maxdpll  satisﬁed assignment                           slightly different larrosa heras forsolv    given weighted cnf formula complete assign ing weighted maxsat follows      x     ment   weset                                     function maxdpllf kbounded formulainterger                                     costf  x                                     applyequivalentrulesf                                                                                                      cw∈f x does satisfy       applynonequivalentrules                                                            ∈  return                           indicates cost                     ∅ return     given weighted formula  weighted maxsat prob                                                          return                           x         costf   x   lem ﬁnd assignment                              minimum  denote minimal value opt      selectliteral   unweighted maxsat problem particular case  vmaxdpllf lk  weighted clause   vmaxdpllf ¯lv  consider weighted maxsat problem paper       return    logical framework                            end function  deﬁnition  complete assignment x called model procedure  procedure solving weighted maxsat  bounded formula kifcostf x  bounded  formula unsatisﬁable model        maxdpll procedure like dpll                                                        correctness derived recursive equation                 obviously     unsatisﬁable weighted formula    opt  minopt   loptf ¯l  ∈ thenf unsatisﬁable    note deﬁnition  model subprocedures applyequivalentrules applynon  satisfy clause formula equivalentrules lines   discussed later  case context sat problem sat solving moment considered procedures just  considered special case logical framework turning input formula  initial value variable    according deﬁnition  naturally generalize  semantic entailment relation equivalence relation course generalize deﬁnition replacing  classical positional logic logical framework  fk bounded formula meaning                                                        context maxsat solving                                                    ijcai                                                    upper bound formula  obtained running local new formula consider rules  search procedure borchers furman  rules exploited    let’s pay attention inference rules weighted alternative way choose rules form ⇒  maxsat inference rule form           opt opt   unfortunately applying                                                        kind rules safe opt opt                        ⇒                                                         does ensure validity opt ∪ropt q∪r                                                                    weighted cnf formulas procedure     weighted cnf formulas counter  applying inference rule formula described example given follows  follows wcf short weighted cnf formula   example   opt opt     ∨                                                        butopt     ¯x  opt  ∨  function applyrulep ⇒ qinference rule wcfwcf ¯x        ⊆       −  ∪                                               attempt incorporate inference rules   return                                          weighted maxsat solvers ﬁnd rules  end function                                          necessarily equivalent preserve optimal value                                                        original formula purpose introduce  procedure  procedure applying inference rule following deﬁnition  weighted cnf formula                                                        deﬁnition  let Λ nonempty set variables                                                        weighted cnf  formulas  said Λ  deﬁnition  inference rule ⇒  sound  equivalent denoted ≈Λ weighted cnf  weighted cnf formula opt ∪      formula Λ   aninfer  opt  ∪                                         ence rule ⇒ Λequivalent rule ≈Λ    inference rule ⇒ equivalent rule ≡  Λequivalent rules following proposition  following proposition shows applying equivalent theorem  rules formula preserve optimal value    proposition  equivalent rules Λequivalent  proposition  equivalent rules sound         Λ                                                                      ⇒       Λ    bounded formula larrosa heras  theorem        equivalent rule                                                                                    Λ      opt  ∪  heras larrosa  incorporated following infer weighted cnf formula                                                        opt  ∪  ence rules weighted maxsat solvers                       • br ∨ bw⇒a                   theorem  gives condition apply                                                        Λequivalent rules formula proposition  shows    • br u⇒a ⊕                Λequivalent weaker notation equivalent    • br ⊕    ∨ bu⇒     set equivalent rules subset set Λ      ∨ bk                               equivalent rules theoretically considering Λequivalent    •      ⇒                                  rules provide choices considering equivalent      br                                              rules promising employ Λequivalent rules    • res ∨ ¯x ∨ bw⇒a ∨ bm ∨    weighted maxsat solvers section  propose                                       ¯          ¯        ¯x ∨ bw   ∨ ∨ bm ¯x ∨ ∨ Λequivalent rules      bm                                               let pay attention nonequivalent rules                                                                           Λ  literal arbitrary disjunction equivalent equivalent note           minu                            ⊕    ference rule ⇒ considered paper satisfy  literals             res rule operators      deﬁned                                           applying nonequivalent rule                                                        mula preserve optimal value exploit                 ⊕  mina                   compute lower bound proposition                                                         clude lower bounds computed way                                                 − ba                    admissible lower bound                                            ka                         equal optimal value fact easier                                                        use nonequivalent rules obtain conﬂict clauses exam                                                        ple shen zhang  li et al  apply inference    note larrosa heras  heras larrosa                                                        rules like ¯x  ∨ ¯y⇒   incorporated special cases res                                                        rules equivalent used  general res rule                                                        achieve tight lower bound usually section     exploiting rules heras larrosa                                                         discuss problem  implemented weighted maxsat solver outperforms  stateofart solvers observe    Λ  rules equivalent rules doubt equiv someequivalent inference rules  alent rules sound preserve model op section present Λequivalent rules show  timal value safe exploit equivalent rules produce situation applied                                                    ijcai                                                      ﬁrst Λequivalent rule propose            example   let   ∨ ¯x ∨ ¯z                                                         res   rule transforms ∨  ¯y ∨                                                      res ∨ ¯x ∨ bw⇒a ∨ bminu   ¯z  res rule transform resulting                                                                 ¯z                       literal arbitrary clauses mula      simpliﬁed     theorem  let Λ  nonempty set variables     new lower bound function  varx ∈ Λ res Λequivalent rule           maxsat  proof  loss generality consider maxsat special case weighted maxsat  variables easy verify ∨ ¯x ∨ each clause weight  literals  bw  ∨ bminu weighted shen zhang  studied lower bound func  mula ∨ bminu wealsohave  tions maxsat proposed lower bound function  x∨a ¯x∨bw  suppose x∨a ¯x∨ lower bounda proved admissible consis  bw  wherep  weighted formula containing tently better procedure calculating  cases                              function follows lb number conﬂicting    • case     ifx   thecostisu      clauses current partial assignment      cost lemma  cost                                                        function lower boundaiintegerinteger      case minu      greater formula ∨ bminu  lblb      case                                              ≤ ndo    • case     ifx    cost      lblbminμ¯iμi                                               lemma  cost    μ¯i − μi       greater a∨bminu                                                           μ¯i μi  bi  b¯i    •                   case            analysis similar   φ      cases                                                                                                                     ∈      •                                                            case            analysis similar                ¯      cases                                                  μj μj  ∪j    sum conclude matter case     −  μjμj  cost equal ∨ bminu  end               ∨ bminu                                                     end    according theorem  theorem  formula  ∈          ∨   ¯x ∨ bw     varx  contains                          does         −  μjμj  occur clauses apply res                                                           end                 ∨ ¯x ∨  example  let                         apply        res rule ∨z ¯x∨z x∨y ∨z¯  ¯x∨      y¯∨z complicated apply res  end  rule simpler formula ∨  return lb    second Λequivalent rule propose          end function  res ∨ yv ¯x ∨ w⇒              procedure  procedure computing lba         ∨ minu ⊕ ¯y ∨ minu  literals conjunction arbi main idea procedure exploit inference  trary literals                        rule ¯x  ∨ ¯y ⇒  obtain lower    note apply res rule right side bound limited space details refer  res rule simpler formula            original paper rule equivalent                Λ                                       tight tight according res rule  theorem  let    nonempty set variables  ¯x  ∨ ¯y ≡¯x ∨ y¯    varx ∈ Λ res Λequivalent rule                                               exploit                                                        rule ¯x  ∨ ¯y ⇒¯x ∨ y¯     proof  proof similar theorem  omit better lower bound procedure  illustrates algo                                                 rithm line   change formula deleting ∨                                                      adding clause x¯∨y¯ considered constant    according theorem  theorem  formula                               contains ∨ yvand¯x ∨ wandvarx does number code choose  time complex  occur clauses apply res  ity lower bound lower bounda order                                                        compare lower bounda write pseudo code    rule considered extension elimination style procedure  note real code far  rule bansal raman  weighted maxsat    pseudo code                                                    ijcai                                                    function lower boundi kintegerinteger          maxsat instances experimental results illustrated   lblb                                          table  instances generated wellknow gen                                                        erator cnfgen executions run  ghz pentium                                                            linux                                                                                         Λ            ≤                                          problem        toolbar            sat                                            var  cls     node  times   node  times                        ¯      lblbminμiμi                                                            μ¯i − μi                                                                μ¯i μi  bi  b¯i                                        φ                                                                                                                                                             ∈                                                                μj μ¯j  ∪j                                            −  μjμj                                                                                                                                             bibi  −j  b¯ib¯i ∪¯j                                                                                      end                                                                       end                                                                       ∈                                                                                                                                                −  μjμj                                                                                                              ¯      ¯    ¯        bibi  −j bibi  ∪j                                          end                                                                                                                                                         μ¯i μi μ¯it μit                                                                                                                                                                      end                                                                     −                                                                                                                                       end                                                                               return lb                                                           end function                                                        table  experimental results random maxsat  procedure  procedure computing lb                                                           problem        toolbar           Λsat    following theorem shows lb admissible var cls    node  times   node  times  consistently better lba                                                                                                                                             theorem  lba  ≤ lb  ≤ opt                                                                                                                                       experimental results                                                          experimental results presented section                      solver called Λsat compared solver tool                          bar httpcarlittoulouseinrafrcgibinawkicgisoftcsp                  implemented larrosa heras  heras                          larrosa  solvers freely available                   heras larrosa  showed toolbar outper                    forms compare solver toolbar                      solver implements variable selection strategy                             known jeroslowwang rule jeroslow wang                             widely employed stateofart sat solvers                       inference rules choose heras larrosa                    additionally employ new rules proposed               paper tool implemented                                           run solvers random maxsat experimen                         tal results illustrated table  var stands number table  experimental results random maxsat  variables cls stands number clauses node  stands mean number nodes search tree results demonstrate small instances perfor  time stands mean running time  instances mance solver nearly toolbar                                                    ijcai                                                    
