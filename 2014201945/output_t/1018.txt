                         declarative      computational       properties                               logic   programs       aggregates∗              francesco  calimeri    wolfgang  faber†    nicola leone    simona  perri               department  mathematics  university calabria rende  cs italy                             email  calimerifaberleoneperrimatunicalit                        abstract                          clariﬁed recent proposal answer set semantics                                                        ceiving consensus faber et al        investigate properties logic programs  founded sets wellfounded operator van gelder et      aggregates   mainly focus  pro       al  important characterization      grams monotone antimonotone aggregates                                                      computation standard lps leone et al       lpma programs deﬁne new notion                                                      simons et al  calimeri et al  koch et al       founded set lpma programs prove    pfeifer  deﬁned satisfactory manner      sound generalization standard notion logic programs aggregates impact      unfounded set aggregatefree programs                                                      aggregates computational complexity reasoning      show answer sets lpma program tasks analyzed depth      precisely unfoundedfree models                paper makes ﬁrst step overcome deﬁciency                                                  deﬁne wellfounded operator wp lpma     improving characterization programs aggregates      programs prove total ﬁxpoints pre declarative computational purposes main      cisely answer sets ﬁxpoint contributions paper follows        ω      wp ∅ contained intersection • deﬁne notion unfounded set logic programs                                          ω                                                                  swer sets admits answer set wp ∅  monotone antimonotone aggregates lpma      efﬁciently computable aggregatefree pro programs notion sound generalization      grams coincides wellfounded model   cept unfounded sets previously given programs       carry indepth complexity analysis  aggregates show deﬁnition coincides      general framework including nonmono    original deﬁnition unfounded sets van gelder et al      tone aggregates prove monotone anti  class normal aggregatefree programs      monotone aggregates increase complex  shares nice properties like existence great      ity cautious reasoning remains conp est unfounded set      nonmonotone aggregates instead increase  • provide declarative characterization answer sets                                                        terms unfounded sets particular answer sets pre      complexity level polynomial hierar                                       chy results allow generalize speed cisely unfoundedfree models lpma program      asp systems aggregates                   • deﬁne wellfounded operator wp logic programs                                                        aggregates extends classical wellfounded op                                                        erator van gelder et al  total ﬁxpoints wp                                                                                                     ω    introduction                                       exactly answer sets ﬁxpoint wp ∅  introduction aggregates atoms kemp stuckey contained intersection answer sets importantly                                                          ω   denecker et al  gelfond  simons et al wp ∅ polynomialtime computable   dell’armi et al  pelov truszczynski´  • analyze complexity logic programs arbi  pelov et al  major linguistic extensions trary nonmonotone aggregates fragments thereof  answer set programming recent years           monotone antimonotone aggregates affect    semantic computational properties stan complexity answer set semantics remains  dard aggregatefree logic programs deeply npcomplete cautious reasoning nonmonotone aggre  vestigated works focused logic programs gates instead increase complexity jumping sec                                                                                           aggregates behaviour semantic properties ond level polynomial hierarchy Π   computational features far fully space limitations proofs sketched    ∗this work partially supported ec projects ist   infomix ist wasp fwf   logic programs    aggregates  projects pn pn             section recall syntax semantics basic    †funded apart austrian academy sciences properties logic programs aggregates  syntax                                             lpa program set lpa rules global variable  assume reader familiar standard lp rule variable appearing standard atom  refer atoms literals rules programs lp stan variables local variables  dard atoms standard literals standard rules standard safety rule safe following conditions hold  programs respectively literals said comple each global variable appears positive standard literal                                   mentary form atom body ii each local variable appearing  given literal ¬l denotes complementary literal symbolic set vars  conj  appears atom conj   accordingly given set literals ¬a denotes set iii each guard aggregate atom constant  ¬l  ∈ background baral  global variable program safe ∈ safe  gelfond lifschitz                          following assume lpa programs safe                      set terms    lp  set term symbolic set  ground set symbolic set pair vars  conj   answer set semantics  vars list variables conj conjunction                                                                                                                       standard atoms ground set set pairs form universe base given lp program  let denote                                                                                          bp  htconj list constants conj ground set constants appearing  set                                                        standard atoms constructible standard predicates  variable free conjunction standard atoms                                                                                                       constants  given set let  denote  aggregate functions aggregate function form set multisets elements loss  fs set term aggregate function generality assume aggregate functions map  symbol intuitively aggregate function thought set integers  possibly partial function mapping multisets constants                                                                                                       constant                                        example   count  deﬁned   sum                                                                                                     example  examples adopt syntax dlv times   min max deﬁned  −∅  denote aggregates aggregate functions currently supported  dlv count number terms sum instantiation substitution mapping set vari  sum nonnegative integers times product positive ables  substitution set global variables  integers min minimum term undeﬁned set rule  global substitution substitution                                            max maximum  term undeﬁned set         set local variables symbolic set                                                         local substitution given symbolic set global  aggregate literals  aggregate atom fs ≺   variables  vars  conj  instantiation  fs aggregate function ≺∈   ≤  ≥ following ground set pairs insts  predeﬁned comparison operator term variable hγvars  γconj  γ local substitution  constant referred guard                    ground instance rule obtained steps                                                         global substitution σ ﬁrst applied  ev  example  following aggregate atoms dlv notation ery symbolic set σr replaced instantiation  contains ground set ground inst           ground  instance                                     instantiation     program       maxz   rz az                      set possible instances rules         max            ki  ci   example  consider following program                                                           ∨                  ∨   atom standard lp atom aggregate atom tx−qx sumy  px     literal atom atom preceded                                                        instantiation groundp following                                          fault negation symbol  aggregate atom ∨ t−q sumhp hp  aggregate literal                                    ∨ t−q sumhp hp                      lp  programs  lp   rule construct                                                                        interpretation lpa program          − · · ·  bk bk · · ·  bm interpretations                                                        consistent set standard ground literals ⊆ bp ∪  standard atom · · ·  bm atoms ¬bp  ∩ ¬i  ∅ standard ground literal   ≥  ≥  atom referred head true resp false wrt ∈ resp ∈ ¬i  conjunction  bk bk  bm standard ground literal true false wrt                                                                                              −  body denote head atom hr set undeﬁned wrt denote  resp  set   bk bk  bm body literals standard positive resp negative literals occurring  br                                                 denote i¯ set undeﬁned standard literals wrt                                                        interpretation total i¯is ∪¬i−          intuitively symbolic set  ax  py  stands bp  partial  set xvalues making ax  py  true  ∃y st ax  py  true                    given substitution σ lpa object obj rule set    ﬁrst aggregates correspond respectively cardi denote σobj object obtained replacing each variable  nality weight constraint literals smodels     obj σx                                                                                                    interpretation provides meaning aggregate lit groundp groundp   ∅ groundp   ∅                                                                    erals truth value ﬁrst deﬁned total interpretations groundp   groundp hold  induced partial ones                      answer set minimal                                                                              let total interpretation standard ground conjunc model groundp   admits answer set                                                                                            tion true resp false wrt literals true minimal model groundp                                                                                            meaning set aggregate function aggregate model groundp  groundp    atom interpretation multiset value note answer set model                            truthvalue respectively let   aggregate func groundpa ⊆ groundp  rules                              tion valuation    wrt multiset groundp  − groundpa  satisﬁed wrt  ﬁrst constant elements conjunction  true wrt precisely let denote multiset monotonicity given interpretations say                                                                                 −     −   ht  tn  conj ∈ s∧ conj true wrt  val ≤ ⊆ ⊆  ground literal   uation ifs aggregate function fs wrt monotone interpretations ≤  result application multiset  true wrt implies  true wrt ii  domain ifs  ⊥ ⊥ ﬁxed  false wrt implies  false wrt ground literal   symbol occurring                          antimonotone opposite happens inter    instantiated aggregate atom  fs ≺ true pretations ≤  true wrt  wrt ifs  ⊥ ii ifs ≺ holds oth implies  true wrt ii  false wrt implies  false  erwise false instantiated aggregate literal  wrt ground literal  nonmonotone  fs ≺ true wrt ifs  ⊥ ii monotone antimonotone  ifs ≺ does hold false       note positive standard literals monotone    partial interpretation aggregate literal true negative standard literals antimonotone aggregate lit  resp false wrt true resp false wrt each total erals monotone antimonotone nonmonotone  interpretation extending ∀ st ⊆ true gardless positive negative nonmonotone  wrt undeﬁned                  literals include sum possibly negative integers                                                        average  example  consider atom  sumh      example  let ground set example  ground instances countz  rz    interpretation   each extending total countz  rz   monotone  interpretation contains   countz  rz   countz  rz    fore      application antimonotone  sum yields       true wrt                                                                                               denote lpm  lpa lpn  fragment lp                                                        monotone antimonotonenonmonotone aggre                                                                           minimal models given interpretation rule satis gates allowed lpma allows monotone anti  ﬁed wrt head atom true wrt body monotone aggregates  literals true wrt total interpretation model  lpa program ∈ groundp satisﬁed wrt remark  observe deﬁnitions interpretation  model  subset minimal model truth values preserve “knowledge monotonicity” inter                                                                             exists ⊂   note def pretation extends ⊆  each literal                                                                              initions word interpretation refers possibly partial true wrt true wrt  each literal false                                                                        interpretation model total interpretation wrt false wrt  answer sets    recall generalization  unfounded   sets  gelfondlifschitz transformation lpa programs                                                        section extend notion unfounded sets given  faber et al                                                         van gelder et al  aggregatefree programs                                                                            deﬁnition  faber et al  given ground lp  framework lpam programs let denote                                           program total interpretation let denote ∪˙ ¬s set − ∪ ¬s  transformed program obtained deleting rules sets standard ground literals  body literal false wrt answer set                                                      deﬁnition  unfounded set set ground atoms  program minimal model groundp                                                                                     unfounded set lpam program wrt  example  consider following programs        each rule ∈ having head atom belonging                      count            pa−     px              following conditions holds  antimonotone                      count            pa−     px              body literal false wrt  monotone body  groundp    pa−countha   pai     literal false wrt ∪˙ ¬x                         count  groundp   pa−      ha  pai                                                                                               example   consider following program   interpretation  pa  ∅ groundp     a−counthai hai hai                                                                    paper assume value aggregate function  a−counthai hai hai  computed time polynomial size input multisetand   lemma    total interpretation model iff                                                            −  founded set wrt condition  holds ¬m unfounded set wrt  unfounded                                                        proof sketch result follows fact     show deﬁnition  generalizes given ∪˙ ¬¬m −                              van gelder et al  aggregatefree programs                                                        theorem   let total interpretation program                                                                                −  theorem  aggregatefree lpam program deﬁ  answer set iff ¬m  gusp  nition  equivalent van gelder et al                                                         proof sketch shown using lemmata      deﬁnition  alternative characterization theorem                                 founded sets standards literals fact condition   deﬁnition  does exactly cover ﬁrst van  gelder et al  condition  catches cases sec  wellfounded semantics                                                      section extend wp deﬁned van gelder et  ond van gelder et al  ”lost” condi                                     tion  separates positive negative literals allowing al  aggregatefree programs lpam programs                                                                                               distinguish behavior monotone anti show answer sets lpam program  monotone literals                                    coincide exactly total ﬁxpoints wp                                                                                                 theorem  unfounded sets wrt inter start providing extension lpam programs                                                                                                       pretation lpam program ∪ immediate consequence operator tp deﬁned van  unfounded set wrt                         gelder et al  threevalued interpretations stan                                                        dard logic programs  proof sketch condition  def  observe                                                                                 ∪˙ ¬x ∪ ≤  ∪˙ ¬x mono  deﬁnition  let lpam program deﬁne oper                                                                              bp ∪¬bp    bp      bp ∪¬bp  tone literal  false wrt ∪˙ ¬x false wrt ators tp wp                                                             ∪˙ ¬x ∪ symmetrically               respectively follows    virtue theorem  union unfounded sets tp  ∈ bp  ∃r ∈ groundp st  hr  wrt unfounded set greatest               br true wrt                                      gusp   unfounded set wrt  denote         wp   tp ∪ ¬gusp                                                  proposition  let interpretations lpam                                                        theorem   let total interpretation program  program ⊆ gusp ⊆ gusp                                                         answer set iff ﬁxpoint wp   proof sketch follows remark  ∪˙ ¬x ⊆               −                                                       proof sketch    ¬gusp  holds virtue  ∪˙ ¬x                                                                                                               orem     tp shown using lemma                                                                                                              answer   sets  unfounded   sets                deﬁnition                                                           wp  operator clearly monotone meet semilat  section provide couple characterizations tice admits ﬁxpoint tarski   answer sets terms unfounded sets               ﬁxpoint computed iteratively starting  deﬁnition  unfoundedfree interpretation let set approximates intersection answer  interpretation program unfoundedfree i∩x  sets  ∅ each unfounded set wrt                                                                                          theorem   given lpma program let wnn∈n    lemma gives equivalent characterization sequence nth term nfold application  unfoundedfree property total interpretations    wp  operator set  ∅ wn   lemma   let total interpretation program wp wn− wnn∈n converges limit                                                          ω                                           ω  unfoundedfree iff nonempty set atoms contained wp ∅ each answer set ⊇ wp ∅  unfounded set wrti                                                        proof sketch follows monotonicity wp  proof sketch unfoundedfree unfounded set ﬁniteness bp  holds atoms computed  wrt st ∩  ∅ exists ∩ tp belong answer set theorem    unfounded set                                      theorem   following easily follows                                                                      ω  theorem  model  answer set lpam pro corollary  wp ∅ total interpretation  gram unfoundedfree            unique answer set  proof sketch model ⊆ nonempty  following proposition conﬁrms intuition def  unfounded set wrt shown ∪˙ ¬x inition  extends wp operator deﬁned van gelder                                                                                          model  answer set et al  standard programs  lpma programs  hand unfoundedfree model answer set  model pm st  ⊂  exist show proposition  let aggregatefree program   −  unfounded set                  wp  operator deﬁnition  exactly coincides wp op                                                                                             interesting characterization answer erator deﬁned van gelder et al                                                                                                 ω  sets total interpretation answer set corollary  aggregatefree programs wp ∅ coincides  false literals unfounded                         wellfounded model van gelder et al   simple cases ω∅ captures                                                                         sum  intended meaning program                           txi   −  txi                                                                    txi −  −sumv  txi     example  consider following program                   tyi   −sumv  tyi                    sum         −    ai  ai                  tyi −  −sumv  tyi                                             −     − −                       tyi   −unsat tyi −  −unsat   wp ∅     wp      each clause ci  li ∨ li ∨ li original Φ  wp  add unsat  −µli µli µli µl tl −                                ω   wp ∅                  positive tl                        ω                                                          Ψ                    easy verify wp ∅ total query unsat holds Π  iff Ψ satisﬁable  swer set                                         monotone  antimonotone aggregates instead behave                                                        disjunctive case causing complexity gap                                                                                                 computational    complexity                        theorem   cautious reasoning lpma conp  ﬁrst show tractability wellfounded semantics complete         lpma analyze complexity answer proof hardness follows conphardness cau  set semantics general lpa programs consider tious reasoning normal aggregatefree logic programs  propositional case section assume marek truszczynski´  schlipf  mem                                                        bership guess total interpretation check  programs ground                                               −                                                      ∈ ii ¬m   gusp  theorem   theorem  given ground lpma program      answer set theorem  checks feasible  greatest unfounded set gusp wrt given inter polynomial time                                                                       ω  pretation polynomialtime computable  wp ∅  polynomialtime computable                              related  work  proof sketch deﬁne operator Φi bp bp knowledge work notion  follows Φi     ∃  ∈     hr    unfounded set deﬁned programs ag  st antimonotone body literal false wrt ∧ gregates kemp stuckey  def                                                 −  monotone body literals true wrt − ¬i  inition ignores aggregates second condition  sequence φ  ∅ φk   Φi φk− monotonically founded sets program a−countx  ax    increasing converges ﬁnitely limit φλ wellfounded model kemp stuckey  ∅  φλ   bp −  gusp  shown furthermore each leaving undeﬁned wellfounded model ¬a                                          application Φi polynomial setting  λ results reported paper hold  polynomial bp  result follows  founded sets deﬁned kemp stuckey     result positive impact computation attempts deﬁne wellfounded  answer set semantics logic programs aggregates semantics programs aggregates relying                                 ω  stated theorem  wp ∅ approximates founded sets early approaches deﬁned  intersection answer sets limited framework discussed kemp stuckey  used efﬁciently prune search space   van gelder  semantics deﬁned com    analyze complexity answer set seman piling aggregates rules standard atoms approach                   tics general lp programs faber et al  generalized osorio jayaraman   authors shown arbitrary including nonmonotone case strategy works certain classes programs  aggregates increase complexity disjunctive pro ross sagiv  operatorbased deﬁnition  grams nonmonotone aggregates increase given works restricted set programs  complexity reasoning orfree programs         pelov  wellfounded semantics deﬁned                                                      based approximating operator deﬁnition             cautious reasoning lp       Πp   theorem                             man          substantially different paper leave  complete                                                        comparison future work  proof membership  follows directly results works attempted deﬁne stronger notions  faber et al  concerning hardness provide founded semantics programs aggregates  reduction qbf let Ψ  ∀x     xm∃y     yn  Φ ultimate wellfounded semantics  wlog Φ propositional formula cnf format necker et al  dix oso  precisely variables           observe                                                    rio  characterization terms unfounded  Ψ equivalent ¬∃x     xm∀y     yn  ¬Φ  ¬Φ equivalent dnf literal sets exist semantics clear  reversed polarity wrt Φ let lpa program ΠΨ generalized unfounded sets exist likely                                man                   theorems paper longer hold given    recall dealing aggregates function semantics assign truth falsity atoms  computable polynomial time                       ferraris  shown semantics    ferraris  independently shown deciding smodels programs positive weight constraints equal  answer set existence program weight constraints possibly answer sets deﬁned faber et al  respec                                                                                         ω  containing negative weights Σ complete         tive fragment theorem  wp ∅ approximates
