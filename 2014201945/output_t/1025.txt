                                 contextual default reasoning             gerhard brewka                     floris roelofsen                 luciano seraﬁni           universit¨at leipzig       university amsterdam illc                 itcirst          augustusplatz              nieuwe doelenstraat                sommarive          leipzig germany          amsterdam netherlands             trento italy   brewkainformatikunileipzigde       froelofsscienceuvanl            lucianoseraﬁniitcit                        abstract                          contexts hold socalled bridge rules                                                        used represent information ﬂow      paper introduce multicontext variant      reiter’s default logic logic provides syntac      tical counterpart roelofsen seraﬁni’s infor      mation chain approach ijcai      advantages closer standard ways repre           mr                   mr       senting nonmonotonic inference number      results area come “for free” closer              figure  magic box      implementation particular restriction      logic programming gives computationally                                                          existing work ﬁeld based classical      tractive framework allows handle                                                        monotonic reasoning single exception aware      problem information chain approach                                                        roelofsen seraﬁni  allow reasoning based      lated skeptical reasoning                                                        absence information context authors add                                                        default negation rule based multicontext    introduction                                       combine contextual default reasoning                                                          paper presents related approach propose  formalizations contextual information inter textual variant reiter’s default logic dl reiter   contextual information ﬂow steadily increased called contextual default logic condl shares lot  years based seminal papers mccarthy  motivation roelofsenseraﬁni paper particular  giunchiglia  approaches proposed basic idea keeping information local conceptual  notably propositional logic context developed computational reasons opposed merging default theo  mccarthy  mccarthy buvaˇc ries baral et al  major difference  multicontext systems devised giunchiglia ser scription syntactical semantical sev  aﬁni  later associated lo eral advantages computational perspective  cal model semantics introduced giunchiglia ghidini convenient manipulate sets formulas sets   seraﬁni bouquet  argued multi models allows link multicontext default reasoning  context systems constitute general closely earlier work nonmonotonic reasoning syn  mal frameworks                                       tactic restrictions lead directly contextual variants logic    intuitively multicontext describes informa programming answer set wellfounded semantics  tion available number contexts number fully computational approach paves  peopleagentsdatabases speciﬁes information way handle weakness approach skeptical  ﬂow contexts simple illustration main reasoning developed roelofsen seraﬁni   intuitions underlying multicontext framework outline paper follows ﬁrst brieﬂy  provided situation depicted figure  review approach roelofsen seraﬁni discuss  standard examples area agents mr mr weakness skeptical wellfounded reasoning ap  looking box different angles box called proach introduce condl show extensions  magic mr mr make depth condl exact correspondence stable informa  sections box sight agents tion chains roelofsen seraﬁni wenextshow  partial information box express informa wellfounded reasoning deﬁned condl es  tion mr uses proposition letters ball caping difﬁculty information chain approach  left ball right mr uses appeal paraconsistent reasoning ﬁnally discuss  proposition letter ball center textual logic programming various examples il  model situations kind formulas labeled lustrate formalism useful                                                    ijcai                                                       information chain approach                     premises stable solution chain iff minimal                                                        solution chain creduced  brief review approach roelofsen                                                          based observation stable solution chains  seraﬁni  authors consider set contexts                                                        exist roelofsen seraﬁni deﬁne skeptical se   language li each context ∈c                                                        mantics draws intuitions wellfounded seman  li assumed ﬁxed each li built                                                        tics logic programs van gelder et al  based  ﬁnite set proposition letters using standard propositional                                                        construction socalled canonical chain cswe  connectives                                                        present semantics somewhat    state information expressed formula ϕ ∈                                                        problem later solve  li established context ithelabeled formula  ϕ                                                          canonical chain multicontext  used rule expression form                                                        structed iteratively applying operator Ψs pair                                                              c a                                          ← ∧ ∧ gm  ∧ ∧ ∧ hn     chains      intuitively ﬁrst chain approximates                                                        stage iteration contains  allg’s h’s labeled formulas models possibly cs initially model  called consequence denoted consrallg’s possibly cs  each context start set  called positive premises constitute models second chain referred            set prem rallh’s called negative premises antichain approximates cs stage                           −  make set prem rule premises contains models necessarily cs initially  called fact rule positive premises called model necessarily cs each context start  positive rule normal multicontext ﬁnite set set models  rules note interpreted default negation given certain chainantichain pair c a intended  rules nonmonotonic                          transformation Ψs ﬁrst determines rules                                                        applicable wrt cs reﬁnes c a accordingly  example  integration let dd meteorological                                                        canonical chain cs ﬁrst component  databases collecting data sensors located different                                                                                         ≤least ﬁxpoint Ψswherec a≤c a iff  parts country each database sends data                                                                  ci ⊆ ci ai ⊆ ai intuitively iff c a “less evolved”  database integrates information obtained sup                                                          c a  pose regards trustworthy                                                          ﬁrst specify Ψs determines rules  piece information established included                                                        applicable wrt csletc a rule given  information obtained included                                                        positive premise satisﬁed cthen  refuted following rules model                                                        satisﬁed cs hand              ϕ   ←    ϕ                            anegativepremisehwhichisnot    satisﬁed athenh                                                                                         ϕ   ←    ϕ ∧ ¬ϕ                 satisﬁed positive premises                                                        satisﬁed negative premises                                                                                                   classical interpretation language li called local satisﬁed then⎧ applicable respect s⎫  model context set local models called local          ⎨        ∀g  ∈ premrc   ⎬  information state intuitively local model local sc ∈             information state represents possible state affairs       ⎩        ∀h  ∈ prem−ra    ⎭  local information state contains exactly local model                                                                                                      represents complete information contains positive premise  satisﬁed                                                                                           local model represents partial information satisﬁed negative                                                                                        state affairs considered possible     premise   satisﬁed satisﬁed                                                                                 distributed information state collection local cases certainly applicable                                                                      formation states each context distributed informa respect s⎧                     ⎫  tion states referred chains systems      ⎨         ∃g ∈ premra    ⎬  semantics deﬁned terms minimal solution chains s−c ∈             starting set models contexts rule appli    ⎩        ∃h  ∈ prem−rc   ⎭  cation captured semantically eliminating models                                                                              s∼c  s−c  context consequent applicable rule convenience write           think                                                        s∼c  true iterating model elimination process set rules possibly applicable                                                                               sc ⊆ s∼c  ﬁxpoint reached yields unique minimal solution chain respect notice                                                                                   Ψ        c a       sc    general case roelofsen seraﬁni use tech specify reﬁnes   based                                                            s∼c                ∈  nique similar gelfondlifschitz reduction stable   local model   does satisfy                                                                                sc  models answer sets gelfond lifschitz   consequence rule certainly                                                                                       aruler defeated information chain ccn removed  hand                                                                        ∈   negative premise  local model satisﬁes consequences                                                                   s∼c                      true models ci eliminating cdefeated rule certainly  provides                                                                                                     rules negative premises cundefeated rules ground removing added                                                                                           obtain reduced multicontext negative    Ψsc aΨs     c a Ψs c a                                                    ijcai                                                                                                    deﬁnition  let dwdnwn                                                                                  Ψc c ac      ∃r ∈ sc  consr      fault context let      tuple sets                                                      formulas deﬁne operator Γ  Ψa c aa    ∪m  ∀r ∈ s∼c   consr                                                                                                                                                               Γssnssn    unfortunately approach problem                                                                        sider following example                          ssn minimal tuple sets formulas                                                                       ≤ ≤                    ←       ¬p                    satisfying                                                                                                                                 wi ⊆                   ¬p  ←                                                                                             s                                          ←                           deductively closed                                                            pct  ptct  qctk  qkr ∈    expect   derivable                                                                        di pi ∈ sc  ≤ ≤ ¬qj  ∈ sctj  canonical chain approach does conclusion                                                                                    ≤ ≤ kthenr ∈   problem model satisfy ¬psono                             model added antichain tuple ssn contextual extension  established   derived essential ﬁxpoint Γ  problem canonical model approach assumes special case default rules refer  set possible conclusions deductively closed contexts obtain tuple consisting arbitrary extensions  exactly problem addressed brewka gottlob  individual default theories general case informa  context default logic later show tion ﬂows default rules context  lution presented applied problem defaults play role bridge rules  founded multicontext reasoning                turns each extension corresponds exactly                                                        stable solution chain information chain approach    contextual default logic                           translation default context systems sys  let  set contextsagents tems used rssystems inven  associated propositional languages li default context tors straightforward each default  tuple                                                             pct  ptct  qctk  qkr                     ΔΔn                                                        di translated rule  each Δi diwi   contextual default theory                                                             ←      contextual default theory like regular reiter default                      theory exception default rules refer     ct  ¬qnot ctk  ¬qk  prerequisites justiﬁcations consequent        ∈             ←  contexts                                       each formula     rule     wehavethe    precisely contextual default rule form following proposition                                                        proposition  let default context cor               ppm  qqkr                                                        responding rssystem let ssn   se  ppmqqk regular formulas labeled quence deductively closed sets formulas   formulas consequent denoted consdisa mmn sequence sets models  regular formula contextual default theory diwi  ≤ ≤  just pair consisting set regular formulas wi cer      mi     si                                                 tain knowledge set contextual default rules contextual extension iff stable solution  unlabeled formulas defaults expressed chain  li each context language expressing  particular view world                     view approach based contextual default    note default rule contains regular formula logic syntactical characterization semantical ap  formula implicitly assumed refer context proach roelofsen seraﬁni  advantage  default assume loss generality characterization threefold closer standard ap  prerequisites justiﬁcations labeled formulas proaches nonmonotonic reasoning allows trans  reason allow prerequisite default – fer results established default logic quite  necessary reiter’s logic – want easily multicontext case amenable com  able refer context using putation allows handle difﬁculty semantical  context labels inside logical formulas               approach respect skeptical reasoning    generalize notion extension section                                                          example results basically “for free”  fault context systems given tuples ssn                                                      just mention following  ssn deﬁne componentwise inclusion ⊆c                                       ssn ⊆c ssn iff si ⊆ si  ≤ proposition  minimality  ≤ speak minimality tuples rest let extensions default context cif  paper mean minimality respect ⊆c      ⊆c                                                     ijcai                                                     normal default context each default  wi ∪consdk   dk ∈   each context form                                                          let ssn  sequence sets formulas                 pct  ptrr            ddn   sequence sets contextual defaults  proposition  existence                             deﬁne                                                                         ds d  d   each normal default context possesses ex                                                                                         tension                                              di set defaults di defeated  proposition  consistency                           defeated iff justiﬁcation                                                         ¬q ∈  let dwdnwn   default context sys    notion default proof express                                                           Γ                                Γs    tem een extension cifallwi operator introduced follows                                                           s s       s  sistent each default possesses justiﬁcation  iff each set formulas possessing                                                                           each ej consistent                           default proof                                                                                           Γ∗  lot results space carry deﬁne similar operator  im  instance quasiinductive deﬁnition portant restriction consistent proofs sufﬁcient  extensions reiter  deﬁne notion handle problem described  stratiﬁed default context unique extension deﬁnition  let  dcm  dm default  exists complexity results carry establish proof ssn sequence sets formulas  main reasoning tasks contextual default logic say sconsistent iff si ∪consdj   dj ∈   second level polynomial hierarchy      consistent  ≤ ≤                                                                ∗                                                                                       let Γ ssnssn iff each si set    skeptical contextual   default reasoning           formulas possessing consistent default proof ds  essential problem canonical model approach note Γ Γ∗ antimonotone operators ap  follows assumes set potential conclusions plying sequence yields monotone operation  deductively closed conﬂicting formulas ﬁxpoint ﬁxpoint reached  ¬p considered potential conclusions iterative applications operators sequence  case arbitrary formula qevenifq entirely consisting sets  unrelated                                                        deﬁnition  let dwdnwn       exactly problem addressed brewka got                                                        fault context ssn wellfounded  tlob  context default logic solution conclusion set iff ﬁxpoint operator  apply paraconsistent reasoning determining potential ΓΓ∗  clusions ¬p considered possible conclu  sions deductive closure set handles problem consider condl  formulae example discussed detect variant example discussed contex                                                                                       possible conclusion way tual default theory                                                                 ∅  derive labeled formula based inconsistent set                                                                           pp  ¬p¬p  potential conclusions semantics derive                                                                                ¬qt                                                                          ∗    brewka gottlob  sequence different se application Γ sequence ∅ ∅ yields  mantics introduced allows tradeoff effort  spent consistency checking strength skepti    s thp ∪ th¬ptht  cal inference presenting different semantics                        focus single called wfs cited note context  does contain  reason apply                                                        ing Γ s gives th∅tht ﬁxpoint  paper directly generalization contextual        default theories                                     establish context  intended                                  based modiﬁcation corresponding proof  deﬁnition  let                                                                     d  d  d                brewka gottlob  show wellfounded  fault context let            tuple semantics contextual default theories correct                                         subsets defaults let formula default spect contextual extensions  proof d context ﬁnite sequence                                                        proposition  correctness                dcm  dm                                                        let  dwdnwn    default context  contextdefault pairs following conditions een extension   satisﬁed                                             ssn wellfounded conclusion set      ∈ d         ≤ ≤                       si ⊆ ei  ≤ ≤        cj                                                                       contextual asp    each each prerequisite  dl logical      consequence                                    syntax restriction leads contextual answer set program                                                        ming contextual asp respectively contextual logic pro             wc ∪consdk  klc  dk ∈         gramming wellfounded semantics let                                                     ijcai                                                     set contextsagents logic programming  applications                                        context lpcs tuple    each   section illustrate use contextual logic pro  contextual logic program contextual logic program gramming examples setting proposi  set rules form                            tional far asp common use variables rules            ← bbk bknot bm           shorthand set ground instances rules                                                        users represent knowledge terms programs  literal each bi literal labeled literal  form  context literal variables grounder like lparse generates purely    lpcss does appear bodies propositional ground instantiation rules                                                                                                           rule let’s deﬁnite lpcss deﬁne notion passedontoananswersetsolverlikedlv leone et al                                                                                    minimal context model                           smodels simons et al                                              adopt extend use variables contex  deﬁnition  let             deﬁnite lpcs  tual logic programming assume three types variables  ntuple sets literals ssn called mini                                                    term variables common asp  mal context model iff smallest ntuple satisfying noted  possibly indexed context variables denoted  following conditions                             possibly indexed proposition variables denoted    ∈ si ←  bck  bk ∈ pi  possibly indexed term variables instanti      ∈    ∈               ck                              ated ground terms context variables contexts    si set liti literals li si precisely integers denoting contexts proposition vari      tains pair complementary literals ¬l     ables ground literals convenience al                                                        low literals appear terms strictly speaking  deﬁnition stable model straightforward                                                        distinguish proposition term tp                    deﬁnition  let            arbitrary lpcs representing proposition assume grounder able                                            tuple sets literals reduct care common asp use            cs                   denoted  obtained                   rules head form ← body abbreviation    deleting each pi rules body literal  ← fbody symbol appearing      ∈ sc                                 program effect rule answer                                                                        body    deleting remaining rules programs pi set exists holds conventions      default negated literals                         easy model interesting multicontext scenarios                                                                                        deﬁnition  let ppn arbitrary lpcs information fusion assume agent decides believe                                                                                                     ssn tuple sets literals stable arbitrary literal agent believes                                                                              −p  −p                    context model iff minimal context model  agents believes  complement                                                         ¬p atom  ¬r  wellfounded semantics lpcss deﬁned                                                        modeled including pi rules  spirit condl consistency checking                                                                         ←     rejp   comes easier ppn tuple sets  literals ssn let γs minimal context       rejp  ←    −p              model  deﬁne minimal context set deﬁnite assume grounder handles complement “−”  lpcs like minimal context model require adequately note representation implicitly guaran  ment  inconsistent sets literals closed                                       ∗                                       tees information consistent ’s information  let operator γ produce minimal context set  added case conﬂict proposition rejected  operators γ γ∗ antimonotone combined                                                      ∗                                             think scenarios agent believes  operator γγ monotone possesses ﬁxpoint majority agents does let    ﬁxpoint wellfounded context model odd   corresponding rule    use operator illustrated using earlier                                                               ←    cm    example lpcs pp                                                                       cc   ccm−   cm                      ← ¬p                       ¬p   ←                     game theory  show compute nash equi                                                    libria games normal form using lpcss general                                                        need represent choices available each player                    ←                                                          best action given particular choice players         γ∗∅ ∅p ¬p                        case rule says best action chosen                                            textual default logic context  does contain  consider famous prisoner’s dilemma game involving                γ   s        ∅  reason applying  gives        agents cooperate defect                        ﬁxpoint establish context  intended   gains obtained agents each combination choices    contrary wellfounded semantics contextual default described following table  logic computation time wellfounded semantics  lpcss polynomial number iterations bounded                          total number literals contexts                  time needed each iteration                                                                                                   ijcai                                                     
