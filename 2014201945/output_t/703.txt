         lambda depthﬁrst proof number search application              kazuki yoshizoe                 akihiro kishimoto                   martin muller¨        dept electrical electronic department media architecture  dept computing science       communication engineering   future universityhakodate japan   university alberta canada           chuo university japan               kishifunacjp               mmuellercsualbertaca         yoshizoeissutokyoacjp                        abstract                          proofnumber based algorithms overestimation proof                λ                                       disproof numbers delays search nodes look      thomsen’s  search nagai’s depthﬁrst proof   unpromising easily solved      number dfpn search powerful      paper studies combined approach utilizes      different andor tree search algorithms lambda   proof numbers control effort search based      depthfirst proof number search ldfpn      different threats manner promising threat      novel algorithm combines ideas                 λ                                      types use different parts search tree selected      algorithms  search dramatically reduce     runtime contributions include      search space ﬁnding different levels threat      sequences dfpn employs notion proof         • lambda depthﬁrst proofnumber ldfpn search      disproof numbers expand nodes expected         algorithm synthesizing depthﬁrst proofnumber search      easiest prove disprove method        nagai  λ search thomsen       shown effective games inte     •             λ                                              experimental results capturing problems game      grating  order proof disproof numbers        demonstrating ldfpn outperforms dfpn      enables ldfpn select moves effectively       state art enhancements robust      preserving efﬁciency dfpn ldfpn         classical λ search      implemented capturing problems      shown efﬁcient dfpn       rest paper organized follows section       robust algorithm based classi summarizes rules section  describes related work      cal λ search                                     section  introduces ldfpn algorithm section  dis                                                        cusses experimental results section  concludes    introduction                                       lines research directions  search methods developed solve com    game  plex andor trees occur games direction  search controlled ad hoc manner domain game person zero sum perfect informa  speciﬁc knowledge domainindependent bestﬁrst nonuni tion game originated china popular east  form tree expansion techniques principled ap asia players turns place stones intersections  proach research area produced families grid ﬁrst player uses black stones second  algorithms ﬁrst family algorithms based proof player uses white stones stone placed board stays  disproof numbers allis  nagai  kishimoto position unless opponent captures removes  m¨uller  search controlled through combined aim game surround territory  estimated difﬁculty solving sets frontier nodes opponent example terminal position ×  disproven order disprove root second board shown left figure   family algorithms utilizes null pass moves donninger rules capturing stones   ﬁnding threats achieve goal thomsen  set directly connected stones color called  cazenave  search proceeds statically determined block stones connect vertically horizontally diag  fashion simpler complex threats fam onally intersections directly adjacent block  ilies algorithms viewed simplestﬁrst search called liberties player capture opponent block  paradigms different deﬁnitions constitutes sim playing liberty  ple search notion simplicity matches capturing problem following decision prob  ideal ﬁnd disproof quickly pos lem given block position player play  sible example case threatbased algorithms ﬁrst captured assuming best play  proof containing long series simple threats inferior player owning called defender opponent  small number complex threats case attacker                                                    ijcai                                                                                                                                            block liberty said ataria deﬁnition  thomsen  λd defender  ladder special capturing problem attacker uses subsequent λitree  sequence ataris successful ladder shown right λi ≤ ≤ −  defender averts  figure  information refer lower order attacker threats  httpwwwusgoorg                                                                                                                                   example capturing problem λ occu                                                        pies liberty target block captures                                                               λ                                                tacker’s moves moves capturing target stones                                                                                          λ                                                   ladder directly defender’s moves moves                                                        preventing direct capture attacker’s λ moves threaten                                                                                                                                           capture target ladder directly                                                      underlying concept λ search λn moves                                                      deﬁned λn− searches size λn− tree ex                                                        pected far smaller λn tree λ search                                                        prune moves according λ order little effort                                                          λ search especially efﬁcient problems λ                                                        order meaningful capturing problems ideal                                                        case lower bounds λ order derived                                                        game speciﬁc knowledge number liberties  figure  example terminal position ladder block thomsen                                                           simple dominance relations hold value λ                                                        trees    related work                                                 λn     λi    ≤                                                                                       threats threatbased search  λ search             λ      λ     ≤ ≤         threats used direct focusing search position                                                                               positive result λ search λ  correct provided  threats usually good attacker                                                        pass allowed zugzwang motive game  absence threats indicates quick success ex                                                                     negative search result λ  means  pected player threat win worth investigating                                                                                          solution solution higher order  high priority threats severely restrict opponent’s  choice replies moves avert threat  proofnumber search variants  lead followup threats    threats using null moves intuitively andor tree let proof win ﬁrst player  threat ignored leads quick win corresponding node disproof awinforthe                                                                                                           ladder example figure  each black threat opponent represented node allis et al   capture white possible avert introduced proof disproof numbers estimate                                                        difﬁculty ﬁnd proofs disproofs partially expanded  threat                                                                                  pnn    threatbased approach allis et al  gener andor tree proof number node  isdeﬁned         λ                                              minimum number leaf nodes proven  alized search thomsen  cazenave                                        dnn   paper concentrates comparison order ﬁnd proof  disproof number  λ                                                     minimum number leaf nodes disprove disproof    search ideas apply threatbased methods pnn   dnn∞  general                                                                  proven terminal node                      λ           λ                     nandpnn∞      dnnfor disproven termi    basic concept search order measure       pnndnn  fast player achieve goal words nal node           assigned unproven                    λ             λn                    leaf let ···nk children interior node proof  directness threat search creates trees consisting                        λnmoves recursively deﬁned follows suc disproof numbers node                                         cessful λ tree attacker denoted λ  consists                                k  single attacker achieves goal directly pnn min pnnidnn         dnni                                                                   i···k  λ winning attacker                                                                                              λn     attacker win order threat denoted                    λn indicates attacker achieve node proof disproof numbers                            goal order threats λ tree search tree         k                                   consists λ moves λ node  pnn     pnnidnn       min  dnni                                                                                          i···k  node terminal loss player       deﬁnition λnmovesisasfollows                                                      figure  shows calculation  deﬁnition  thomsen  λa attacker   proofnumber search pns bestﬁrst search algorithm  defender passes reply exists                                                    maintains proof disproof numbers each node  λ tree λ ≤ ≤ −  attacker threatens pns ﬁnds leaf node root selecting child  win λ order               smallest proof number each node smallest                                                    ijcai                                                         figure  calculation proofdisproof numbers    disproof number each node expands leaf  updates affected proof disproof numbers  path root process continues ﬁnds  proof disproof root    depthﬁrst proofnumber dfpn search nagai   depthﬁrst reformulation pns reexpands fewer  interior nodes run space limited size  transposition table thresholds proof disproof num  bers gradually incremented used limit depthﬁrst  search similar recursive bestfirst search korf     dfpn successful search method  used best tsumeshogi solver nagai  best  tsumego solver kishimoto m¨uller   end prover solving checkers schaeffer et al   yoshizoe  presented dfpnbased solver cap  figure  attacker’s node defender’s node  turing problem ﬁnd inversion set points  possibly changes outcome search                                 λ                                                      proof  proof highest order subtree  dual lambda search algorithm soeda et al  tracks                          λl−  threats players mutual king attack typical valid proof subtree searched  shogi endgames soeda  develops family algo exceptional case pass                                                        figure attacker win λ order  defender  rithms closely related work applies                                         λ  japanese game shogi                               pass attacker threatening win order                                                         according deﬁnition win λ order                                                         attacker’s point view purpose searching    ldfpn search algorithm                         pseudo node cl− check attacker’s previous                                                                                              details ldfpn                                 lead node nwasaλa                                                         λl−   ldfpn proof number based λ search proofdisproof         proven search immediately return                                                        parent nsinceaλl− subtree typically smaller  numbers andor nodes initialized propagated λl                  dfpn each attacker node split subtree search l− ﬁnish quickly                                     λ         ···l    defender looking disproof node  pseudo nodes corresponding different orders                                               λl  search dynamically selects promising λ order choose promising tree                                                        pass searches λl−tree proof  pursue each node                                                                 attacker node shown figure  disproof numbers defender node calculated  divided pseudo nodes different λ orders limit pnnpncldnnmindncl−dncl  example each pseudo node corresponds  subtree different λ order let λl tree like dfpn ldfpn uses thresholds proof dis  ···cl pseudo nodes attacker wants proof numbers ldfpn selects leaf node small                                                                                           λ  prove λ  dominance relation equation est proofdisproof number regardless order                                                                                                  λ   attacker need prove pseudo nodes main advantage ldfpn classical search  disproving lower order λ tree help dis ability ldfpn seamlessly switch different                                                      λ  proving λ tree equation  disproof order child nodes need wait proof                                                                           λ  number attacker’s node cl    disproof lower order subtrees disproofs    formally proof disproof numbers attacker’s node difﬁcult proofs ability skip difﬁcult                                                                    λn−                          λn  calculated follows                          disproof    subtree start search subtree                                                        improves search behavior        pnn   min  pncidnndncl                i···l                                 search enhancements    defender node shown figure  heuristic initialization proof disproof numbers  fender’s aim disprove node showing λl basic dfpn algorithm initializes proof disproof  equation  proofs lower order λ subtrees irrelevant numbers unproven leaf node  allis                                                     ijcai                                                                                                            following three algorithms tested                                                          • ldfpn ldfpn algorithm described section                                                             highest λ order  methods ini                                                            tializing proof disproof numbers tested tune                                                            hpn  hdn result hpn hdn node                                                            λ order λ deﬁned follows                                                                                          λ−                                                              hpnnhdnnmax        ≤    λ ≤                                                             • dfpn dfpn algorithm heuristic initializa                                                            tion hpn hdn use gospeciﬁc knowledge dis        figure  sample test problem black play       tance target block allow fair comparison state                                                            art enhancements incorporated imple                                                            mentation dfpn algorithm techniques  nagai  way enhance performance ldfpn     kishimoto m¨uller   kawano’s                                             heuristically initialize numbers let pn  simulation kawano      dn    evaluation functions initialize proof dis • λ                          λ  proof number leaf ldfpn hpnn hdnn   pseudo    search thomsen’s original search uses  deﬁned functions λ order reﬂect prop alphabeta framework better comparison                        λ                                   ldfpn  pseudo λ search uses ldfpn special pa  erty node lower order searched                                             λ  higher priority section  details dfpn rameter settings mimic search strategy  enhancement called dfpn nagai              search expands trees strictly increasing order                                                            λ similar effect achieved ldfpn letting  ladder search                                             heuristic initialization grow quickly λ    λ     search capturing problems                              λ−  ladder search shown figure  search exceptionally hpnnhdnnmax    ≤    λ ≤   easy number candidates small    cases implementation reported capturing problems tested openended ar  special purpose ladder search  times faster terms eas hard restrict generation achieve prov  nodes second ldfpn used subroutine ably correct results practice programs  ldfpn                                             heuristically limit moves capture search engines                                                        regard block large number liberties es  simulation                                            caped three types generators tested  kawano’s simulation kawano  saves search time generate legal moves accurately assess  reusing proof tree similar board positions board life death status  position disproven similar board position                                                          • heuristic generator generates moves liberties  likely disproven disproof tree                                                                                            ldfpn  uses simulation pass moves       surround blocks thomsen   blocks near                                                            target block generates moves  nodes pass searched nodes                                                            cluding nd liberties target block  sults loss sibling nodes checked using disproof  tree pass way irrelevant moves • heuristic generator generates moves heuristic  help player disproven quickly             generator plus adjacent points                                                          • board generator legal moves generated    experimental results                                                          dfpn liberty threshold regard block es    setup experiments                             caped passed parameter ldfpn uses failure  test suite consists  capturing problems including search preset maximum λ order  determine   mas   modiﬁed ones  target block escaped dfpn num  original problems winning solution modiﬁed ber liberties target block used threshold  problems test case ﬁrst player loses typi ldfpn maximum λ order evaluates block  cal example shown figure  attacker black liberties escaped liberty threshold   capture crucial white stones marked triangles save dfpn roughly comparable ldfpn search  black stones marked squares correct answer maximum order  marked cross                                    parameters given ldfpn target blocks    each problem searched ways capture capturedefend λ order  stones marked triangles second defend test case considered solved returned  stones marked squares problems contained  solution given mas   blocks defended  blocks experiments performed opteron    captured counting separate problems yields ghz node limit  million nodes test position  total  test problems                            mb transposition table                                                    ijcai                                                               —            ldfpn   dfpn   pseudo λ     heuristic num solved                 heuristic num solved                board num solved                 table  number problems solved each generator                                                                               ldfpn versus dfpn                                                                      table  summarizes number problems solved                                                                     ldfpn dfpn three generators ldfpn  solved problems dfpn each case differ         ence largest board generator normal  dfpn simh sec  surprising threats based λ orders drive      ldfpn focus searching moves near target block                                                                                             yx  defender                                                                                                                                     figure  compares performance ldfpn dfpn                       ldfpn simhladder sec  each problem solved algorithms three              heuristic generator  generators figure execution time  ldfpn plotted horizontal axis dfpn         vertical axis logarithmic scales point   indicates ldfpn performed better ldfpn outperforms             dfpn three generators largest difference     board generator showing clear advantage  ldfpn pruning irrelevant moves                                   example shown left figure  solved faster                                                                        ldfpn “heuristic” generator ldfpn       normal  dfpn simh sec  searched  nodes solve problem  seconds  dfpn searched  nodes  seconds       problem black sacriﬁce  stones win stones                              yx                                                                  captured points position                   points stones used placed resulting                  ldfpn simhladder sec  increase number legal moves increases             heuristic generator  proof number node dfpn                                                                    easily proven dfpn delays searching node  apparently large proof number ldfpn tends search          smaller set moves based λ order effect  occurs frequently severe dfpn            disadvantage ldfpn occasionally  visit nodes different λ orders additional    formation λ order effective advantage ldfpn                                                                      disappears particular number possible moves normal  dfpn simh sec    small dfpn works                                           right position figure  shows example                                     yx  dfpn solved quickly ldfpn answer             marked cross figure “heuristic”                   generator ldfpn searched  nodes solve prob                    ldfpn simhladder sec  lem  seconds dfpn searched  nodes               board generator   seconds typical problem λ order  negative effect players suicidal moves   figure  ldfpn ladder vs dfpn  low λ orders ldfpn tends search dis  prove suicidal moves trying prove correct  dfpn suicidal moves result captures  nontarget blocks leading larger proof numbers  moves dfpn delays searching suicidal  moves expands correct earlier                                                    ijcai                                                    
