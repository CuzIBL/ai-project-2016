       prolog lo                            alain colmerauer                  centre mondial informatique               avenue matignon  paris                                              faculte des sciences luminy              case   marseille cedex        abstract prolog presented rigourous way   through  easily understandable figures   theoretical model completly rewrought   introducing trees inequalities   paper puts forth minimal set concepts   necessary prolog autonomous existence   independent lengthy considerations   order logic inference rules mystery   sacrificed favor    colmerauer        artificial intelligence interacts fields                                prolog  reference manual    including psychology linguistics history                                         theoretical model   geology biology medical science       sciences complex special tools needed                                   prolog  users    represent process knowledge deal                                    manual    furthermore tools    introduce new problems inherent                                         prolog  manual examples    science traditionally science knowledge    mathematical    reasonable turn logic help developing   tool intelligence                           prolog born                                                                                        abstract point view say   prolog developed     acolmerauer                                     knowledge intelligent given   proussel theorem prover based                             subject set facts   arobinsons resolution principle                                         generate subject knowledge   strong restrictions narrow search space                                      viewed set facts specified set   credit given rkowalski mvan                                rules facts represented   having pointed restrictions                                             declarative sentence case represent   equivalent use clauses having                                     fact tree drawn upside   positive horn clauses                                   fig la leaf each node   having proposed theoretical model                                   labeled atom information atom                                                                                        word group words number   computed prolog minimal herbrand                                                                                        special character structure tree   interpretation                                                                                        relevant figs la                                                                                        equivalent trees figs  lb lc   prologs close links logic proved                                                                                       examples facts three different fields   inhibiting visavis                                                                                       arithmetic   permutations   implementation necessary reformulate                                                                                       planning facts trees   theory account implementation                                                                                       trees facts obviously trees figs id   constraints new theory unencumbered                                                                                       le facts arithmetic tree   distinctions necessary logic                                                                                        fig id subtree fact fig la   enriched concepts indispensable programming   purposes inequalities say    careful implementation theoretical                                trees purposely chosen data structures    model prolog emerged model                                 capable expressing complex information    present  figures                              time simple handled                                                                                       algebraically    reader interested readings    subject referred following      automatic theorem proving logic                                                                                          ja  logic form function    edinburgh university press elsevier north                                     formulas used represent tree patterns    holland                                                                          formulas called terms consist atoms                                                                                      information  parentheses                                                                                       recall atom information    links logic prolog                                                                                      group words number special character                                                                                      left column fig syntactic    ra  logic problem solving                                                                                      structure term defined    artificial intelligence series ed nilsson                                                                                      recursive definition complex terms    nj north holland                                                                                      defined simpler terms simplest terms                                                                                      variables atoms information examples   genesis prolog                                                          terms left figs                                                                                        kanoui et ph     systeme communication hommemachine   en frangais research report groupe intelligence    faculte des sciences luminy   marseille     ph  prolog manuel reference   et dutilisation groupe intelligence    faculte des sciences luminy   marseille     prolog based ideas developed   implemented computers apple    vaxvms described three internal   reports groupe intelligence                          je remercie jacques mavoir aide   faculte des sciences luminy marseilles                                           rediger cet article en anglais colmerauer   colmerauer        variables occurring terms represent unknown                        figs depict examples    trees tree expressed term                        treeassignments example shows    depend trees assigned                         possible assignment variables    variables assignment called                           occur term contrary    treeassignment just set pairs                            possible example term contains         ai tree assigned               variable means corresponding    variable right column fig gives                      tree does depend assignment    tree represented term                   example shows systematic way coding    application treeassignment assumed                    tree term variables      contains variable    treeassignment applied                                                                             pair terms       represent    constraints                                                        equal trees pair terms  tkt                                                                         represent unequal trees fig   prolog language computes trees                        general condition     represented variables                         treeassignment constraint   computation accumulating constraints                       said solution fig   trees  constraints           shows example constraint ci   values variables                 treeassignment    fig   treeassignment variables   trees                  three constraints   shown fig constraint mc consists                    treeassi gnment   set elementary constraints each    elementary constraint                                                                                                colmerauer        during execution prolog program               basic property allows split   basic operation consists verifying             initial problem independent simpler   constraint satisfiable             subproblems constraint form   treeassignment reducing             satisfiable   seen fig purpose reducing            each constraints   simplify constraint order make          cutntn satisfiable   solutions explicit involves exhibiting            true domain natural integers   variables distinct each left members                        possible show   equalities use specific                  constraint   property trees unique decomposition            solution constraints   tree immediate subtrees property                 xyli   permits replace                                       order verify                                                               constraint satisfiable knowing                                                               check                                                               constraints                                                               equivalent constraint cutttj                                                               satisfiable remove inequality   note property hold numbers           example   wrongly conclude constraints    xy xy equivalent          way simplify equalities   succeed producing equalities left members          possible simplify inequalities allows   distinct variables               present satisfiable constraint   inequalities thpn constraint satisfiable           reduced form reduced form shows   solutions directly obtained assigning            constraint satisfiable making   arbitrary trees variables appearing left          solutions explicit general form reduced   members                                                    constraint containing inequalities                                                               scope paper colmerauer    inequalities left let number 
