                    andor branchandbound graphical models                                      radu marinescu      rina dechter                                school information science                                 university california irvine ca                                         radumdechtericsuciedu                           abstract                          graphmodel structure traverse structure                                                         blind search space overcome problem idea      paper presents evaluates power new andor search spaces introduced past year      framework optimization graphical models    shown vividly display independencies encoded      based andor search spaces virtue   underlying graphical model dechter mateescu       andor representation search space  paper develop andor branchandbound aobb      size far smaller traditional general algorithm solving cops explores      representation develop work     andor search tree depthﬁrst manner efﬁciency      straint optimization problems cop introduce  depends guiding heuristic functions past      new generation depthﬁrst branchandbound    class partitioningbased heuristic functions based      algorithms explore andor search space     minibucket approximation known static minibucket      use static dynamic minibucket heuristics  heuristics shown powerful optimization prob      guide search focus optimiza     lems kask dechter  idea step      tion problems solving weighted csps wcsp    introduce dynamic minibucket heuristics      ﬁnding probable explanation mpe  computed dynamically each node search tree      lief networks show new andor ap     schemes parameterized minibucket ibound      proach improves considerably classic   allows controllable tradeoff preprocess      space variety benchmarks including ran   ing search      dom realworld problems demonstrate     apply andor algorithms common opti      impact different lower bounding heuristics mization problems solving weighted csps bistarelli et al      branchandbound exploring andor spaces           ﬁnding probable explanation mpe                                                         belief networks pearl  experiment ran    introduction                                        dom models realworld benchmarks results show                                                         conclusively new andor branchandbound algo  graphical models constraint networks belief net rithms improve dramatically traditional ones espe  works powerful representation framework cially heuristic estimates inaccurate al  reasoning deterministic probabilistic information gorithms rely primarily search pruning  models use graphs capture conditional independen  cies variables allowing concise representation  knowledge efﬁcient graphbased query process  background  ing algorithms                                        ﬁnite constraint optimization problem cop sixtuple    optimization tasks ﬁnding likely state  hx  ⊗ ⇓ zi   xn set  belief network ﬁnding solution violates num variables   dn set ﬁnite domains  ber constraints constraint network instances   fm set constraints constraints  constraint optimization problems cop typically soft cost functions hard sets allowed tu  tackled search inference algorithms search ples loss generality assume hard  methods depthﬁrst branchandbound bestﬁrst search straints represented bivalued cost functions allowed  time exponential number variables oper forbidden tuples cost  ∞ respectively  ate polynomial space inference algorithms variable scope function fi denoted scopefi ⊆  set  elimination treeclustering time space exponential arguments fi operators ⊗ ⇓ deﬁned  topological parameter called tree width tree width ing semiring framework bistarelli et al   large high space complexity makes methods paper assume ⊗ifi combination operator  impractical                                           ⊗ifi ∈ qi fi pi fi ⇓y elimination operator    paper focus search contrast ⇓y ∈ maxs−y  mins−y scope  ference algorithms search algorithms sensitive function ⊆  scope ⇓y                                                                                             optimization task deﬁned gz  ⇓z ⊗ifi          ⊆   global optimization task ﬁnding                                                                                                   best global cost  ∅ simplicity  velop work assuming cop instance summation                              minimization combination elimination operators                                                                                          global cost function deﬁned fx   minx pi fi    primal graph cop instance variables                     nodes arc connects variables appear                     scope function                                                                    practice complete cop solvers follow depthﬁrst                        branchandbound strategy maintains upper bound                       best solution cost sofar lower bound                      optimal extension current assignment value pruning  occurs soon lower bound exceeds upper bound        figure  andor search tree      andor search spaces                                ure observe node hb roots inde  usual way search search instantiate pendent subproblems represented variable  variables turn following staticdynamic linear ordering variables   process deﬁnes search tree tree nodes theorem  dechter mateescu  given cop  represent states space partial assignments  instance pseudotree  andor search tree st    way exploit independencies encoded sound complete contains solutions  graphical model introduce nodes search size on·expm depth pseudotree  space decompose problem separate sub  problems past year dechter mateescu  search algorithm traverses andor search  troduced concept andor search spaces constraint tree depthﬁrst manner guaranteed time com  networks belief networks graphical models gen plexity exponential depth pseudotree op  eral andor search space deﬁned using backbone erate linear space contrast time complexity search  pseudotree arrangement primal graph           algorithms exploring traditional search trees exponen                                                         tial number variables arcs st annotated  definition  pseudotree given primal graph appropriate labels cost functions nodes st  cop instance pseudotree rooted tree associated value accumulating result  set vertices property adjacent vertices computation resulted subtree  branch rooted tree freuder                                                         definition  label label lx  hx  ai arc  quinn                                                                                                                                 node xi node hxi ai deﬁned  definition  andor search tree given  cop     sum cost functions values variable xi  stance primal graph pseudotree contained scope scope fully assigned  associated andor search tree st alternating levels athst hxi ai  nodes nodes nodes labeled xi definition  value value vn node ∈ st   correspond variables nodes labeled deﬁned recursively follows  hxi ai ter  hxi ai correspond value assignments domains minal node vn  lxi hxi ai ii   variables root andor search tree hxi ai internal node vn  lxi hxi ai  node labeled root  children node       ′                                                         pn′∈succnvn  iii  xi internal node   nodes labeled assignments hx  ai consis                   ′                                                     vn  min ′       vn  succn children  tent path root children node   ∈succn                                                         st   hxi ai nodes labeled children variable xi                                                           clearly value each node computed recur   path node ∈ st  denoted athst  path root st corresponds partial sively leaves root show  value assignment variables path      proposition  given andor search tree st cop                                                         instance  hx   mini value function vn    solution subtree solst st andor subtree  thati contains root ii nonterminal minimal cost solution subproblem rooted sub                                                       ject current variable instantiation path  node ∈  st solst children  sol  iii nonterminal node ∈ sol root root st  vn minimal cost     st                                      st        solution  exactly children solst                                                            traverse andor search tree  example  consider graphical model figure depthﬁrst manner compute value root  describing graph coloring problem domains   andor search tree based pseudotree figure ﬁgure denote value hb written   highlighted solution subtree given fig child bapproach require linear space storing cur                             rent partial solution subtree algorithm expands alternat                                    ing levels nodes periodically evaluating                                     value function nodes current path termi     nates root node evaluated optimal cost                                                                                                                                                                                                                                                                                              andor branch bound                                                                                                                                  each node search frontier assigned heuristic    lowerbound estimate hn vn calculate                       promising extension current partial solution sub  tree prune portion search space  irrelevant branchandbound scheme        figure  partial solution subtree  hn static heuristic function    lower bounds partial solution trees            example  active partial subtree rooted fig                                                         ure lower bound vb computed recur  stage search current partial solution                                                                         sively follows  maxhb hb  partial solution subtree denoted  nature                                                              pst                        hb  maxhhb lb hb ivdf  search process    connected contain                                                           pst                                      hf  similarly  maxhe    root node frontier containing nodes                                                                                       maxhe hhe  hhe  generated expanded leaves pst                       called tip nodes section deﬁne dynamic  branchandbound procedure  heuristic function node relative current pst   yields accurate lower bound vn hn andor search space calculate lower bound  introduce notions active path inside vn node active path using fhn  outside contexts active partial subtree       addition compute upper bound vn based  definition  given current pst  active path   portion search space  apt path assignments root pst explored upper bound ubn vn current min  current tip node inside context inap apt imum cost solution subtree subproblem rooted  contains nodes fully evaluated children figure upper bound vb ubb   nodes apt outside context outap apt min∞ vhb  vhb represents cur  contains nodes generated expanded rent best cost solution rooted lower bound fhb  children nodes apt active partial vb calculated seen previous example  subtree apt rooted node ∈ apt contains fhb ≥ ubb searching  ac  subpath children tive path guaranteed reduce ubb  nodes                                           subtree rooted pruned      illustration consider partial solution subtree fig proposition  pruning rule given active path  ure based pseudotree figure active apt current pst  node apt  path apt tip node     fhn ≥ ubn pruning subtree safe     shaded nodes left apt  inap corresponding subtrees depthﬁrst andor branchandbound aobb algo  explored outap includes nodes  rithm implements pruning rule described fig  search frontier active partial subtree apt ure  list called open simulates recursion stack  highlighted contains nodes hb list path maintains current assignment active  apt node inap  node    path arentn refers predecessor path  outap                                          parent andor tree succ denotes                                                         set successors node andor tree ch  definition  dynamic lower bound given active par                                               tial tree apt dynamic heuristic evaluation function denotes children variable xi  procedure lbn                                                         computes static heuristic estimate hn vn  fhn deﬁned recursively follows apt  consists single node ∈ inap step  search goes forward expands alter                                                         nating levels nodes expansion  fhn   vn fhn  hn ii  hxi ai                                                         algorithm successively updates lower bound function  node having children  mk fhn                                                        ancestor active path  maxhn lx  hx  ai    iii                                              discontinues search ≥ ubm  node having  child                                                                                                   step  value functions propagated  maxhn                                                       ward triggered node set suc    prove fhn lower bound optimal cessors typically happens node’s descendants  solution cost subproblem rooted fhn ≤ evaluated deadend clearly  vn deﬁnition fhn ≥ hn indicating  dynamic lower bound superior static     theorem   aobb sound complete cop algorithm aobbp                                                    bf ffa ffc   input cop    min pseudotree  root       output minimal cost solution                                      bd fdb fdc                                                                                                        initialize open adding node path ← φ                                                                                                                                        open  φ                                                     bc fca fcb            return vx           remove ﬁrst node open add path                     feb fea                                                                                                          try prune subtree                                                                                                                                                         foreach ∈ ancestor                  bb fba                                                                                                                   fhm ≥ ubm                                                                      vn ← ∞ deadend                                       ba   ea fa ca ba              goto step                                                                expand generating successors follows       succn ← φ       node denote  xi          vn ← ∞                                             figure  schematic execution mbe          foreach value ∈ di             hhxi ai ← lbxi                     tree paper extend idea andor search             succn ← succn ∪ hxi ai              spaces assume cop instance       node denote  hxi ai          ← cj  xi ∈ varcj  ∧ varcj  ⊆ path  pseudotree solved aobb search          vn ←  lxi hxi ai ← cj                                                                             pa                          active path ends node  consider          foreach variable ∈ cht xi                  augmented bucket structure bx  bxn             hy  ← lby                                                                                           succn ←                              structed ordering resulted dfs traversal        add succn open                       each possible value assignment xj  xj  static mini    succn  φ                                bucket heuristic estimate hxj  minimal cost solution          node             vp arentn ← vp arentn  vn       rooted xj computed sum original func                                                                                                                node                           tions bucket bxj  intermediate functions λ             vn ← vn  lxi  hxi ai             vp arentn ← minvp arentn vn   generated buckets bxk xk descendant          succp arentn ← succp arentn −     xj details kask dechter           path ← path –                               dynamic minibucket heuristics idea pushed          ← lastpath    goto step                                     step precompiling minibucket                                                         heuristic information possible generate dynamically    figure  andor branchandbound search aobb     during search dynamic minibucket heuris                                                         tic computes lower bound minibucket algorithm                                                         mbei each node search space restricted    time complexity algorithm aobb bounded subproblem rooted subject current partial  · expm size andor search space                                                         stantiation speciﬁcally hxj  calculated sum  pruning rule designed yield far better complexity                                                                 original λ functions residing bucket bxj                                                                                                                   λ ’s computed buckets bxk xj ’s descendants    speciﬁc lower bound heuristics                       conditioned current assignment active path  section brieﬂy general schemes                                                         example  figure shows augmented bucket struc  generating static heuristic estimates hn based mini                                                         ture generated mbei binary cop instance dis  bucket approximation schemes parameterized                                                         played figure ordering   minibucket ibound allowing controllable                                                         square brackets denote choice partitioning assume  tradeoff heuristic strength overhead                                                         during search active path current partial solution  mention scheme based notion direc                                                         subtree   tip node node  tional arcconsistency speciﬁc wcsp model                                                         static minibucket heuristic estimate hc                                                                                               minibucket heuristics                        fc  fc  λ  λ  λ  λ dy                                                         namic minibucket heuristic estimate hc  involves  minibucket elimination mbe dechter rish                                                          λ functions generated buckets bf  bd  approximation algorithm designed avoid high time λ’s computed dynamically conditioned  space complexity bucket elimination dechter                                                         current partial assignment     partitioning large buckets smaller subsets  called mini buckets each containing called ibound  directional arcconsistency heuristics  distinct variables minibuckets processed sepa                                                         adapted andor search space suc  rately algorithm outputs bound optimal                                                         cessful heuristics generators reversible dac counts rdac  solution cost collection augmented buckets                                                         meseguer et al  maintaining dac mfdac  form basis heuristics generated com                                                         larrosa schiex  proved powerful solv  plexity time space oexpi                                                         ing binary weighted csps details omitted space reasons    static minibucket heuristics past kask  dechter  showed intermediate functions gen  erated minibucket algorithm mbei used  experiments  compute heuristic function underestimates minimal section evaluate empirically performance  extension current assignment regular search new andor branchandbound approach classes   network saomb  saomb  saomb  saomb  aordac            network  ndcwh bbmfdac   aomfdac     ndct sbbmb sbbmb sbbmb  sbbmb  bbrdac                             time sec nodes time sec nodes      wh daomb  daomb  daomb  daomb aomfdac          celarsub         connectivity dbbmb dbbmb dbbmb dbbmb bbmfdac         celarsub                                                  celarsub                 time nodes time nodes time nodes time nodes time nodes celarsub               celarsub                     medium                                  table  results celar subinstances                  low                           each class algorithms denoted sbbmb dbbmb                        bbrdac bbmfdac respectively      sparse                           random binary networks                                                         random binary wcsp class characterized ﬁve      table  results random binary wcsp instances  parameter model hn wi larrosa schiex                                                          number variables domain size                                                         number constraints constraint tightness deﬁned  optimization problems weighted csp wcsp                                                        ratio forbidden tuples costs inconsistent tuples  probable explanation mpe problem belief networks  uniformly randomly distributed                     weighted csp bistarelli et al  larrosa schiex table  shows results experiments three problem         extends classic csp formalism socalled soft classes containing instances medium low low  constraints assign positive integer costs forbidden connectivity chose maximum penalty cost   tuples allowed tuples cost  goal ﬁnd com set constraint tightness  order obtain  plete assignment minimum aggregated cost model constrained problems each problem class generated  numerous applications domains resource allo  instances time limit set  seconds  cation combinatorial auctions bioinformatics      columns indexed ibound minibucket heuris    belief networks pearl  provide formalism rea tics comparing andor versus algorithms  soning conditions uncertainty belief network rep notice considerable improvement terms cpu time  resents joint probability distribution variables number nodes visited especially problems low  function graphical model encodes condi low connectivity observation veriﬁes theory  tional probability distribution variable given parents cause relatively sparse problem likely produce shal  graph viewed cost function each tuple low pseudotree turn enhances performance  associated real cost   mpe problem andor algorithms terms quality heuris  task ﬁnding complete assignment maximum tics observe static minibuckets rel  probability consistent evidence appears atively large ibound represent best choice  applications speech recognition medical diagnosis large ibounds possible dynamic minibuckets    pseudotree created suggested bayardo small ibounds preferred especially sparse problems  miranker  dfs traversal induced graph medium low connected problems mfdac proves  computed using minﬁll heuristic competing cost effective respect heuristics generators  algorithms restricted static variable ordering resulted  dfs traversal pseudotree report average radio link frequency assignment problem rlfap  effort cpu time seconds number visited nodes rlfap communication problem goal  nodes andor algorithms required sign frequencies set radio links way  proving optimality solution test instances links operate noticeable interferences  record number variables domain size number cabon et al  naturally casted binary  functions induced width height pseudo wcsp each forbidden tuple associated penalty  tree ”” indicates time limit exceeded cost table  compares algorithms bbmfdac aomf  respective algorithm best results highlighted dac solving  publicly available rlfap subinstances                                                         called celarsubi         weighted csp                                      andor approach beneﬁcial domain  domain experimented random binary wcsp celarsub hardest instance aomfdac causes  problems realworld benchmarks consider cpu speed  celarsub speed  classes andor branchandbound aobb algo    compared aomfdac  rithms each using speciﬁc heuristics generator follows btd recent algorithm introduced jegou terrioux  classes saombdaomb    guided staticdynamic   btd solves maxcsp version celarsub  minibucket heuristics aordac uses rdac based heuris  penalty costs  sec aomf  tics aomfdac maintains dac comparison  dac proves optimality  sec performance  include results obtained classic version minibucket based algorithms quite poor                                                         main low quality heuristic estimates    experiments ghz pentium iv resulted approximating subproblems large  gb ram running windows xp                         mains  values
