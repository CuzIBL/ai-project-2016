                                 ins outs critiquing                                    david mcsherry     david aha                            school computing information engineering                        university ulster coleraine bt sa northern ireland                                        dmgmcsherryulsteracuk                        navy center applied research artificial intelligence                   naval research laboratory code  washington dc  usa                                          davidahanrlnavymil                        abstract                          sume critiquing recommended product amounts                                                        rejection product user argue      eliminating previously recommended products    realistic assumption show preventing users      critiquing limits choices available users                                                        navigating products critiqued earlier dia      attempt navigate products                                                        logue result recommendation failure      critiqued earlier dialogue search                                                          show section  equally problem      cheaper alternatives worst case user                                                        previously recommended products eliminated      mayfindthattheonly  product prepared                                                        products satisfy user’s requirements      accept having ruled cheaper alternatives unreachable sequence critiques effectiveness      eliminated equally                                                        existing critiquing algorithms open ques      problem previous recommendations                                                        tion whetherornotpreviously recommended products      eliminated products satisfy user’s                                                        eliminated address issue present new version      requirements unreachable                                                        progressive critiquing mcsherry aha      sequence critiques present new version                                                        leaves open option repeating previous recommenda     progressive critiquing leaves open option tion addressing unreachability problem     repeating previous recommendation                                                          section  use examples illustrate problems     addressing unreachability problem em                                                        diminishing choices unreachability critiquing     pirical results show approach effec                                                        focus paper section      tive users refrain overcritiquing attrib                                                        problems addressed progressive critiquing     utes current values acceptable                                                        section  evaluate approach known case                                                        base investigate effects user critiquing choices    introduction                                       dialogue outcomes efficiency conclusions pre                                                        sented section   critiquing recommender systems based idea  easier users critique example product  problems critiquing  construct formal queries burke et al  hammond  et al  linden et al  early example en challenge critiquing recommend acceptable  trée restaurant recommender supports direc product based information user’s requirements  tional critiques like cheaperandreplacement incomplete imprecise recommender  critiques like french foodburkeet al personal computers example critique   approaches combine critiquing case like bigger screen does determine pre  based reasoning cbr initially recommended product cisely preferred screen size minimum size  retrieved basis similarity initial user prepared accept problem  user query burke  product recommended  improvements attribute gained  response critique typically satisfies cri expense burke  related issue  tique maximally similar critiqued product tradeoff preserving similarity critiqued prod    concern basic critiquing algorithms lead uct recommending sufficiently different  protracted recommendation dialogues prompted signifi single dimension satisfy user’s requirements bridge  research increasing efficiency critiqu ferguson  burke  salamó et al   ing mccarthy et al  mcsherry aha  avoiding long fruitless dialogues  reilly et al  approaches previ available products acceptable user im  ously recommended products eliminated implicitly portant issue critiquing mcsherry aha                                                       ijcai                                                       recommender user’s requirements available option equally natural recommender  include constraints satisfied user critique acceptable product search  user prepared relax necessary cheaper alternatives attempting retrace  user’s critiques constraints modeled steps cheaper alternatives meet  formal analysis critiquing                        requirements user choices limited                                                        previously recommended products eliminated  definition  denote matchesq possibly                                                           worst case user discover  set cases satisfy given set constraints                                                        product prepared accept eliminated    seen                                table  shows example case base residential prop                                                       erty domain use illustrate problem dimin              matchesq   ∩   matchesq               ishing choices critiquing case attributes location                           ∈                                                    bedrooms   property type detached  each ∈ matchesqisthesetofcasesthat   semidetached attributes equally weighted  satisfy                                            similarity cases number matching    critiquing user required express features  requirements formal query instead critiquing  system’s recommendations user provides feedback  uses guide search acceptable              loc beds type   product  definition  denote matchesr set cases  satisfy critique applied given case    definition  denote critiquesc set available table  example case base property domain  critiques applicable given case    critique applied case satis                         ∉                                critiquing algorithm previously recom  fies critique matchesr case mended cases eliminated figure  shows example  ∈ critiquesc previously recommended cases                                                        critiquing dialogue user looking  bed  eliminated critiquing failure occurs matchesr ce   ∅                                                     room  detached property location prepared   wheree  set eliminated cases previously rec compromise bedrooms initial query loc   ommended cases eliminated critiquing failure                           ∅                            initially recommended case case  user  occur matchesr  example sequence response critique case satisfies  repeated like cheaper critiques allowed requirements  det tries navi  eventually result critiquing failure                                                        gate case  critiquing case  location    expressiveness query language important                                                        case recommended case   issue retrieval recommended products based similar case  case  situation difficult  user queries bridge ferguson  equally im elimination case  accept  portant issue critiquing user’s constraints able case justified  expressible using available critiques  definition  say constraint expressible  ing available critiques case ∉ matchesq  exists ∈ critiquesc matchesq ⊆      case   bedscase       loc   case   matchesr                                            det             det             sem      example betweenandbedroomsis expressible   figure  example critiquing dialogue user unable  constraint property recommender supports        navigate acceptable case  critiques bedrooms upper price limit  price ≤ £ expressible holiday recommender  like cheaper critique equality constraint eliminating previously recommended products  month  expressible using replacement bound result recommendation failure user cri  critique month                                    tiques acceptable product products                                                        product case base realistic size unusual   diminishing choices problem                   small number acceptable products available  does realistic assume critiquing algo user requirements satisfied  rithms repeat previous recommendation mcsherry  diminishing choices problem  critiquing recommended product amounts rejection potentially drawback critiquing approaches  product user shoppers consider alternatives previous recommendations eliminated  recommended product deciding best                                                      ijcai                                                       theorem  shows previously rec    •  single case recommended response suc  ommended cases eliminated case satisfies given cessful critique maximally similar  set expressible constraints reached satisfy critique account  critiquing failures case exists practice taken previous critiques initial query  case reached critiquing failures  course depend user’s critiquing choices • previously recommended cases eliminated  possible practice case satisfies user’s critiquing algorithm figure  shows cases  constraints reached critiques ini recommended sequence critiques three  tially recommended case satisfy constraints critiques user progress goal                                                        fourth critique brings started  theorem   eliminating previously recommended cases  critiquing ensures case satisfies given set user better critiquing case  beds                                                        rrs choosing different critiques cases   expressible constraints reached cri                                                        reach case  resorting critiques  tiquing failures case exists                                                        inconsistent requirements negative  proof let ∈ matchesq case satisfies critiques choose beds case   constraints qifc ∉ matchesq satisfied case   initially recommended case exists ∈  ∉ matchesq constraints ex  pressible using available critiques exists ∈ cri                               ⊆  tiquesc matchesq matchesr                  loc beds type rrs   ∉ matchesq ∈ matchesqmatchesqc    ⊆  matchesqc ⊆ matchesr cc    ∉ matchesq case recommended  response rthenthereexistsq ∈ ∉  matchesqandr ∈ critiquesc matchesq ⊆  matchesr ∉ matchesq ∈ matchesq   matchesqc   ⊆  matchesqc  ⊆  matchesr cc follows matchesr          ≠ ∅                                            table  example case base acceptable case     andsor   bound succeed despite             unreachable case  elimination    ∉ matchesq case recommended  response continue long necessary confirm case  unreachable cases  construct sequence recommended cases  ck  initially recommended case suffices observe  successful critiques rrk  ck case  reached single step  ∉  matchesq previously recommended  cases   cases best  eliminated  ck ck distinct cases ck cases  initially recommended case recom  case recommended response rk supply mend case satisfies user’s require  distinct cases ∉ matchesq eventually ex  ments  hausted eventually true ck ∈ matchesq  ■                                                                     case    type  det case    unreachability problem                                    sem             bdet   table  shows second example case base property  domain use illustrate unreachability problem  critiquing example dialogue present        loc             beds  initially recommended case case   sem   user looking  bedroom detached property  location  reception rooms  det           case    rrs   case   user’s requirements satisfied case                                                                     bsem               sem   acceptable case attributes case base equally  weighted similarity cases number  matching features assume basic critiquing algo figure  example critiquing dialogue accept  rithm                                                      able case reached    •  available critiques critiques       beds reception rooms rrs replacement cri       tiques loc type                            expense susceptibility diminishing                                                        choices problem section  eliminating previously rec    •       each critique applied single attribute ommended products example dialogue result                                                      ijcai                                                                                                                                     ≤  ≤  case  recommended response user’s fourth ci ∉ matchesri cifor ik follows ck ∉  critique problem highlighted example cck ■  recommended cases critiquing dialogue                                                          allowing previous recommendations repeated  volve unnecessary compromises respect previous  critiques frustrate mislead user event progression failure progressive critiquing                                                        avoids diminishing choices problem section   delay progress goal given response                                                        show reachability cases  second critique example user begin doubt                                                        satisfy given set expressible constraints does  availability detached property  bedrooms                                                        depend elimination previously recommended cases                                                        progressive critiquing     progressive critiquing                                                        theorem  case satisfies given set expressi  progressive critiquing differs critiquing algo ble constraints reached progressive cri  rithms recommended product possible                                                        tiquing critiquing progression failures  satisfy previous critiques current critique                                                        case exists  mcsherry aha  strategy plays important  role algorithm’s ability address unreachability proof ∉ matchesq initially recom  problem version present previously mended case exists ∈ ∉  recommended products eliminated              matchesq constraints expressible                                                        ing available critiques exists ∈ critiquesc   taking account previous critiques               matchesq ⊆  matchesr ∉  improvements attribute gained matchesq case recommended response                                                                               ∈               ∉  expense burke  seen exists matchesq                                                               ∈                               ⊆  section  recommended cases involve unneces critiquescsuchthatmatchesq matchesr  sary compromises respect previous critiques pro progressive critiquing case recommended  gressive critiquing case recommended response response satisfy ifsuchacaseexistsbut                                                                   ⊆           ∩            ⊆  user’s current critique required possible satisfy matchesq matchesq matchesq matchesr                                                        ∩  previous critiques current critique matchesr existence case  rrk sequence critiques applied recommended satisfies constraints ensures existence  cases cck case ck recommended response case satisfies critiques progression failure  rk maximally similar available occurred candc distinct cases  cases                           theorem                                                           ∉ matchesq continue long necessary                ∈   ∩   matchesr                                                      construct sequence recommended cases cck                     ≤  ≤                                                   successful critiques  rk cck    nonexistence case satisfies user’s ∉ matchesq  critiques recognized progression failure event                                                                       ∈   ∩  matchesr   failure recommended case                                                                                                        ≤ ≤  maximally similar satisfy user’s cur                                                          case recommended response  rent critique case exist user select                                                                                       theorem     distinct cases  critique progressive critiquing satisfied                                                                  supply distinct cases ∉ matchesq eventually  case                                                        exhausted eventually  true    ∈    previous recommendations eliminated pro                                                                                                  matchesq ■  gressive critiquing case recommended situation  previously critiqued user  recovery progression failures  show theorem  previous recommendation  repeated progressive critiquing mechanism recovery progression failures  case satisfies user’s critiques      needed ensure progress user                                                        prepared compromise solution maintain list  theorem   previous recommendation repeated active critiques recommended case possi  progressive critiquing progression failure ble satisfy user’s current critique  occurred                                         case exists maximally similar case sat  proof let initially recommended case let  isfy current critique recommended active                                                      critiques satisfied case deleted   rk sequence critiques resulted  progression failure  ≤ ik≤ letc bethecaserec  list active critiques                                                      figure  shows example critiquing dialogue  ommended response  ri progression failure  occurred                                     personal pc domain use illustrate                                                        approach values critiqued attributes pc type screen                  ∈              ck     ∩  matchesri  ci             size inches price uk pounds shown                     ≤ ≤                           each recommended case progression failure occurred                                                      ijcai                                                     case recommended response user’s cri  empirical results  tique satisfies three critiques                                                        evaluation focuses effects user critiquing                                                        havior dialogue outcomes efficiency previ         case        type  laptop    case            ously recommended cases eliminated progressive      desktop                  laptop         critiquing expect best results achieved                                                        user refrains overcritiquing attributes cur                                                        rent values acceptable example like                                       cheaper          cheaper critique product price acceptable                                                        cause unnecessary progression failure hinders pro                                                        gress user’s goal overcritiquing         case         bigger screen    case           sult critiquing loop user keeps coming                                                        unacceptable case critiqued      laptop                    laptop        important issue critiquing loop result rec                                                        ommendation failure user decides terminate       figure  example dialogue progressive critiquing dialogue                                                          performance measures evaluation    user critiques case  critiques case  average length critiquing dialogues percent  case  case  remain force example age dialogues target case reached ex  pc recommended response faster critique case periments based leaveonein approach  mustalsobealaptopwithscreen   ifsuchacaseex      each case pc case base mcginty smyth   ists prepared compromise price user used represent user’s requirements simulated cri  instead choose navigate direction ex tiquing dialogue value lib attribute leftin  pensive options critiquing case  price cri case treated upper limit price ≤   tique bring directly case  case  value mib attribute lower limit speed ≥   laptop cheaper case  screen  values attributes make type screen size                                                     treated equality constraints leftin case                                                        serves target case critiquing dialogue   related work                                      cases satisfy user’s constraints   taking account previous critiques feature pro dialogues target case  gressive critiquing shares incremental critiquing  case similar leftin case pre  reilly et al  approach case’s similar sented initially recommended case simulated cri  ity critiqued case combined number tiquing dialogue continues target case  previous critiques satisfies single compatibility meas reached user tried possible critiques rec  ure highly similar case dominate ommended case reaching target case avail  cases satisfy critiques result case able critiques critiques lib attributes cri  recommended response critique satisfy tiques mib attributes critiques screen  user’s critiques case exists size replacement critiques nominal attributes  trast progressive critiquing previously recommended experiment simulated users categories  cases eliminated incremental critiquing feature                                                        class  choose critiques attributes fail sat  distinguishes incremental critiquing ap                                                        isfy constraints  proaches used findme systems like entrée car  navigator burke et al  hammond et al  class  choose critiques attributes fail sat    assessment similarity respect lessisbetter isfy constraints libmib attributes sat  lib attributes moreisbetter mib attributes pro isfy constraints  gressive critiquing based assumed preferences                                                          table  shows percentages critiquing dialogues  respect attributes mcsherry aha                                                         successful target case reached classes   preferred value lib attribute priceisas                                                         fact class  dialogues successful  sumed lowest value product case base                                                        provides empirical confirmation case satisfies  preferred value mib attribute assumed  highest available value advantage updating given set expressible constraints reached                                                        progressive critiquing exists theorem  class   user preferences needed response critiques                                                        overcritiquing resulted  dialogues  mib lib attributes instead user’s constraints                                                        terminated simulated user reaching target  updated avoiding problems adjust                                                        case  preferred price response like cheaper cri                                                          class  dialogues successful ve class   tique bridge ferguson                                                         dialogues figure  shows minimum average                                                        maximum  numbers critiques required reach target                                                        case lengths unsuccessful ve dialogues class                                                       ijcai                                                     
