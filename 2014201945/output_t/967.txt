                                      multiset ordering constraints         alan frisch ian miguel zeynep kiziltan brahim hnich toby walsh          dept science dept information science cork constraint computation centre              university york uppsala university university college cork                    england sweden ireland        frisch ianmcsyorkacuk zeynepkiziltandisuuse brahimtwcuccie                             abstract          identify new important global non       binary constraint ensures values        taken vectors variables viewed        multisets ordered constraint use•       ful number different applications including        breaking symmetry fuzzy constraint satisfac•       tion propose implement linear time al•       gorithm enforcing generalised arcconsistency        multiset ordering constraint experimen•       tal results show considerable promise      introduction   global nonbinary constraints factors cen•  tral success constraint programming regin     beldiceanu  global constraints specify patterns   occur problems efficient effective   constraint propagation algorithms paper identify   new important global constraint constraint en•  sures values taken vectors variables   viewed multisets ordered constraint use•  ful number domains example progressive   party problem probo cspliborg wish assign   host each guest period model vec•  tor variables each period each variable assigned  vectors variables indexed  minimum   host particular guest model unnecessary sym•   element domain  maximum   metry periods freely permuted break      maxxl function floorx assigns variables   symmetry considering multiset values associ•    minimum values whilst ceilx assigns   ated each vector ordering multisetsthe aim  maximums vector identical   paper study multiset ordering constraints domain  occurrence vector occx associ•  develop efficient effective techniques enforcing ated indexed decreasing order maximum                                                                  maxx minimum rninx value domains    formal background                                            ith element occx number occurrences                                                                  maxx  comparing occurrence vectors   constraint satisfaction problem csp consists set   assume start end occurrence   variables each finite domain values set   value adding leading trailing zeroes necessary finally   constraints specify allowed values subsets vari•            iff lexicographically equal   ables solution assignment values variables   satisfying constraints solutions explore  motivating applications   partial assignments enforcing local consistency like gener•  alized arcconsistency gac constraint gac iff     matrix symmetry         support received epsrc grr sci• constraints programs contain matrices decision vari•  ence foundation ireland thank chris beck chris jefferson ables called matrix models rows andor       constraints                                                                                                             columns matrices symmetric permuted   symmetry unlikely polynomial set    flener et al  symmetries difficult  constraints does consider symmetric matrices    deal superexponential number permu•   tations rows columns consider    ways break symmetry csp sbds gent       rows multiset ordered rows    smith  sbdd fahle et al      columns lex ordered multiset ordering rows    effective concentrate major lex ordering columns incomparable lex order•   application multiset ordering constraint adding extra ing rows columns consider symmetric matrices    symmetrybreaking constraints initial model existing    techniques dealing symmetries typically elimi•   nate symmetry additional techniques like    proposed considerable value      progressive party problem mentioned earlier    matrix rows multiset ordered    matrix decision variables matrix symmetry rows   columns lex ordered rows lex    matrix guests columns periods each ordered second matrix rows columns    variable gives host assigned given guest given pe• lex ordered does rows multiset ordered   riod periods indistinguishable columns ma• whilst orderings theoretically incomparable   trix symmetric way break column symmetry      experimental results later show multiset ordering    lex order columns frisch et al  similarly rows lex ordering columns ef•  guests indistinguishable rows     fective symmetry breaking constraint currently known   symmetric lex ordered alternatively   treat each row andor column multiset break       fuzzy constraints   symmetry multiset ordering rows andor columns         application multiset ordering fuzzy csps      unlike lex ordering multiset ordering rows matrix fuzzy constraint associates degree satisfaction as•  eliminate row symmetry example consider      signment tuple variables constrains combine de•  symmetric matrices                                        grees satisfaction use combination operator like                                                                  minimum function unfortunately minimum function                                                                  cause drowning effect poorly satisfied con•                                                                 straint drowns highly satisfied constraints solu•  satisfy constraint row multiset                                                                  tion collect vector degrees satisfaction sort   second little surprising dis•                                                                 values ascending order compare lexicographi•  cover multiset ordering does break row                                                                  cally leximin combination operator identifies as•  symmetry dominated lex ordering does                                                                  signment violates fewest constraints fargier    incomparable example                                                                  induces ordering identical multiset ordering ex•                                                                 cept lower elements satisfaction scale      row column symmetry           significant simple modify multiset ordering   multiset order rows columns like lex ordering   constraint consider values reverse order solve   rows columns eliminate row column    leximin fuzzy csps use branch bound   symmetry consider symmetric matrices                     adding ordering constraint solution en•                                                                 sure future solutions greater leximin ordering     multiset ordered rows columns unsurpris•         gac algorithm multiset ordering   ingly multiset ordering rows columns incomparable                                                                  section motivated want multiset ordering   lex ordering rows columns consider symmetric                                                                  constraints need able propagate   matrices                                                                  constraints efficiently developed efficient                                                                  gac algorithm constraints     lex ordered rows columns columns     background   multiset ordered second rows columns      algorithm exploits theoretical results re•  multiset ordered columns lex ordered duces problem testing support upper bounds     alternative way deal row column symmetry      lower bounds suitable ground vectors sec•  multiset order dimension apply symme•     ond reduces tests lex ordering suitable occurrence   try breaking method choice dimension      vectors identical results hold strict multiset ordering   best features using multiset ordering constraint reasons space omit   break symmetry compatible method      lemma  given disjoint nonrepeating vectors   dimension instance multiset order   variables nonempty domains gacx   rows lex order columns preliminary results kizil  tan smith  suggest combined method   promising combined method does eliminate                                                                                                             constraints  proof  constraint gac values sup­    domain • consider changing    port particular support best                                                                     decreases    support comes variables mini number occurrences       mums variables maximums  increases number occurrences maxx                                      similarly             occurrence vectors beneath lex ordered        « constraint ensures rnaxx supported wrong way prune value     values support maxxi support smaller      leaving single supported value  domain                                                                    singleton domains values support    values values domain xi sup­             ported analogous argument values do­       similarly check minimums support      main yi supported constraint gac qed   prune values cases      lemma reduces tests support lex or­   equal  dual pointer  prune values   dering suitable occurrence vectors                            domains cases equal    lemma  given multisets values            pointer largest index occurrence vectors                                                                beneath lex ordered wrong way value                                                                    hope change lex ordering    proof kiziltan walsh                         order vectors wrong way values    worked example                                           pruned considered each yj                                                                  following generalized arcconsistent vectors   based lemmas designed efficient algo­  rithm enforcing gac multiset ordering constraint   algorithm goes through xt yj checking sup­  port appropriate occurrence vectors incremental com­    algorithm details   putation lex ordering test avoids repetition work   algorithm uses pointers flags   consider multiset ordering constraint avoid traversing occurrence vectors each time                                                                  look support pointer set significant                                                                  index occurrences pairwise equal                                                                  ά strictly ordered vectors equal ά    construct occurrence vectors floorx ceily in­ set  pointer set significant index   dexed                                                                    ά occurrence vectors lex ordered                                                                  wrong way index exists set —                                                                   flag set true indices ά                                                                   pairwise equal flag set true subvectors    recall indexdenotes number                                                                  lex ordered wrong way example given   occurrences example index                                                                   occurrence vectors section  ά set      value  occurs twice                                                                  flags set true      check                                                                    summarise major steps algorithm performs   fail immediately value variable   support  fact                                   record pointer ά occurrence vectors    according definitions   lex ordered index  occfloorx strictly                                                                  each    maximum disturbs lex ordering   smaller index  occceily means                                                                                      occurrence vectors tighten upperbound ά   fail support   assigned new                                                                   occurrence vectors lex ordered ά   value greater  through  checking                                                                       support maximum values yi checking   support minimum values                          each yi minimum disturbs lex ordering                                                                       occurrence vectors tighten lowerbound      consider singleton domain                                        value              occurrence vectors lex ordered   support skip consider                         values support changing occfloorx               prune value need check re­                                               decreases     cursively previous support pruning changes   number occurrences ofmmii    increases         lower bounds upper bounds values   number occurrences                           continue provide support exception domain                      upsets lex ordering oc­ singleton pruning causes domain wipeout   currence vectors prune values domain    pseudocode algorithm maintains     larger ά leaves single supported value   gac multiset ordering constraint vectors      consider changing length respectively algorithm                                                     decreases    reasons occurrences vectors original vectors need     number occurrences min               identical length   increases number occurrences                           algorithm called lower bounds    value larger                   upper bounds yj change lines al build oc­  upsets lex ordering prune          currence vectors ox dy line bl calls procedure       constraints                                                                                                                                                                                                                   constraints equivalent gac original multiset ordering con•  straint arithmetic constraint feasi•  ble small existing solvers enforce   bc arithmetic constraint delay   variables instantiated      decomposition   multiset ordering equivalent lex ordering asso•  ciated occurrence vectors efficient algorithms   constructing occurrence vectors global cardinal•  table   progressive party problem using rowby  ity constraint regin  lex ordering frisch et  row labelling   al  alternative approach   following theorem shows decomposition hin•  ders constraint propagation global cardinality  each guest period guest crew visits   constraints decomposition expensive en•  host twice guest crews meet   force algorithm presented write gccx ox   spare capacity each host boat accommodating   global cardinality constraint channels vec• crew exceeded probo cspliborg   tor variables associated occurrence vector ox       matrix model problem smith et al                                                                   matrix guests periods each variable as•                                                                 signed host representing host accommodating                                                                  particular guest given time period rows                                                                  guests columns periods model col•                                                                 umn partial row symmetry periods                                                                  guests crew size indistinguishable                                                                  consider hosts  guests problem                                                                    time periods referred   prob•                                                                 lems row column symmetries      approach use sorted constraint     number time periods actual data   eclipse solver ensures values taken vec• cspliborg problem constraints pair   tor variables identical sorted order values rowscolumns equal safely pose strict   taken second vector variables post multiset or•  lex ordering distinct rowscolumns   dering constraint vectors channel each   equal viewed multisets   sorted vector lex order example demon•      smith et al  guest boats ordered   strates decomposition hinders propagation   descending order size order host boats   sorting constraint expensive enforce      descending order spare capacity choose value                                                                  succeedfirst manner results obtained rowbyrow    experimental results                                         columnbycolumn labelling strategies given tables    designed experiments test three goals     rowbyrow labelling solve    multiset ordering effective method dealing row     symmetry breaking  problem   andor column symmetry second does multiset order•       iexk breaks lot row symmetry thanhowever   ing compare lex ordering breaks sym•        reverse true columns  does   metry combined method multiset orders di•     break symmetry does multiset ordering   mension lex orders matrix superior  dimension matrix does necessarily break   does gac algorithm inference prac•       symmetry lex ordering dimension   tice decomposition similarly algorithm  phenomena occur through interactions search strat•  efficient practice decomposition                  egy search strategy lex order multiset      symmetry breaking constraints used strict lex    ordering constraints break additional symmetry smallest   ordering columns rows mul•                       search tree solving time obtained   tiset ordering rows  strict multiset ordering        lexr supports conjecture lex ordering di•  columns combinations                       mension combined multiset ordering break   constraints constraints posted adjacent      symmetry lexmultiset ordering dimensions   rowscolumns results experiments shown        columnbycolumn labelling able solve   tables  means result obtained  hour   problem break   secs experiments using log solver      symmetry smallest search tree obtained    mhz pentium iii  mb ram using windows xp         supports conjecture multiset ordering di•                                                                 mension break symmetry lex ordering    progressive party problem                                  dimensions search strategy orders   set host boats each capacity set dimensions lexicographically imposing constraint like mul•  guest boats each crew size wish assign host   tiset ordering dimension breaks additional symmetry       constraints                                                                                                           
