              graph decomposition efﬁcient multirobot path planning                                              malcolm ryan                                      centre autonomous systems                                       university new south wales                                               australia                                         malcolmrcseunsweduau                        abstract                          ﬁrst plan movement robots                                                        subgraphs resolve abstract plans      previous paper ryan  introduced                                                        sequences concrete steps subgraphs      concept subgraph decomposition means                                                        use wellchosen structure abstraction sig      reducing search space multirobot planning                                                        niﬁcantly reduce size search space resolu      problems showed partitioning roadmap                                                        tion process deterministically need      subgraphs known structure allows ﬁrst                                                        search      plan level abstraction resolve                                                          subgraphs previously described stacks      plans concrete paths need fur                                                        cliques work illustrating idea seldom      ther search solve signiﬁcantly harder                                                        real planning problems paper introduce      planning tasks resources                                                        complex kind subgraph called hall      subgraph types introduced paper stacks                                                        common real planning problems explain struc      cliques likely occur realistic                                                        ture formal properties shall demonstrate      planning problems limited usefulness                                                        value using multirobot planning real      paper new kind subgraph   problem moving cargohandler robots map      called hall used planning patrick container yard port brisbane      occurs commonly real      problems explain formal properties plan      ning component demonstrate use map      problem formulation      patrick’s container yard port bris assume work provided road      bane queensland australia                     map form graph ve representing                                                        nectivity free space single robot moving    introduction                                       world consider robots homogeneous single                                                        map sufﬁces  coordinated path planning multiple robots difﬁcult make simplifying assumptions  cause search space grows combinatorially num map  ber robots lavalle  need plan                                                          •  paths individual robots ordering map constructed robots  movements prevent colliding collide try simultaneously occupy  necessary robots detour away vertex graph vertices spaced  shortest paths order let robots pass result sufﬁciently far apart robots occupy pair  centralised planning methods barraquand  latombe    distinct vertices colliding   plan robots traditionally • robot vertex vi neighbouring vertex vj  abandoned favour prioritised planners plan provided vj unoccupied robot simulta  robot time priority order erdmann  neously entering leaving vj robots occupying  lozanop´erez  lavalle  hutchinson  berg    vertices graph affect movement  overmars  collisions avoided requiring lower •  priority robots plan avoid higher priority initial goal locations robots lie  faster search space kept relatively small roadmap  incomplete difﬁcult construct problem appropriate levels underlying control assump  prioritised solution           tions difﬁcult achieve approximate    previous paper ryan  proposed way problems  perform centralised planning efﬁcient man set robots  rrkandtwo                                                                       ner dealing problem higher level abstrac mappings ss  → representing initial goal  tion partition map set connected subgraphs positions robots respectively sri  srjiﬀi                                                     ijcai                                                    algorithm  planning reduced graph             currently occupies neighbours                               function plang                       complex naive planner attempt     pr ←∅ ∀r ∈                                      robot subgraph ﬁrst check     ≺←  ∅                                              possible forcing robots     ∈                                       subgraph exit similarly check       gr ← ∈g stsr ∈                      robot validly enter neighbouring subgraph rearrang     end                                                       ing robots subgraph permissible movement     p←plang                          subgraphs occur deliberate plan step     ∈gdo                                                          robot reached target subgraph       p←gresolvep     end                                            goal vertex lies check possible     return                                           terminate robots sub    end function                                        graph prevent reaching goal location                                                        robots exiting subgraph                                 function plang                       each subgraph structure use need im       ∀r  sr ∈ gr                                                plement three test methods used search progress       ∈                                          p←grterminatep                    • enterprv  test robot enter vertex       end                                              subgraph       return     end                                               • exitprv test robot exit subgraph     choose ∈                                           vertex     gf  ← gr                               choose gt ∈g   gf  ∈                       • terminateprv  test robot subgraph     choose vf vt ∈x ∈gx ∈ gf ∈ gt            goal vertex     p←gf   exitp vf      p←gtenterp   vt                               key efﬁcient subgraph planning carefully     add vf vt pr                                 strain allowed structure subgraphs partition     gr ←gt                                                       enterexit terminate methods sim     return plang                      ple implement require expensive search    end function                                        advantage approach each functions                                                        computed based arrangement                                                        robots particular subgraph rely  given information wish construct set plans                                                        positions robots   pr   ∈ each robot reach goal  construct partialordering ≺ plan steps three methods correctly implemented  robots occupy vertex map subgraphbased plan guarantee                                                        concrete resolution plan edge transitions    subgraph planning                                ﬁts abstraction furthermore subgraph                                                        plan concrete plan exists  stage naive centralised planner proceed fol concrete plan abstract representation search  lows initialise robot starting position algorithm complete  select robot neighbouring vertex check                                                          subgraph planning complete need addi  ing ﬁrst robot currently occupying ver                                                        tional method  tex continue fashion selecting moving  robots each step robots goals • resolvep resolve abstract plan en  course each choice presents multiple possibilities al terexitterminate events concrete sequence  ternatives searched systematic fashion movements vertices  usually breadthﬁrst a∗ search    subgraph planning proceeds similar fashion illus assumptions stated earlier resolve  trated algorithm  begin map parti movements robots subgraph reference  tioned collection subgraphs  gggm robots implement resolve  minor constructed contracting each method each subgraph type performs opera  subgraph single vertex                          tion key choose subgraph structure                                                        method implemented efﬁciently   xg                                              need additional search   exgigj       ∃x ∈ giy ∈ gj ∈                                                           proof statement long published    given partitioning planning algorithm proceeds forthcoming journal paper fundamental idea  initialise robots starting positions crete plan divided sections subgraph rearrangement  search through sequence steps each step consists interleaved transition actions robot moves  selecting moving robots case subgraph each transition step abstract  consider robot moved subgraph plan                                                    ijcai                                                                                                                                                                                vv                                                                                                                                             vk                                                                                                                                                       figure  graph containing hall subgraph         vv                                                                                                             subgraph structures  ‘subgraph structures’ allow efﬁ                  cient subgraph planning previously described use    stacks cliques subgraphs stack chain ver vv                  tices single exit end robots en  ter leave stack lastinﬁrstout order cliques                  fullyconnected subgraphs exits  subgraphs different vertices vertex  clique connected robots                   clique arbitrary order long clique                                          figure  example entering hall subgraph                                                                     enter  exit methods types sub               robot enter three possible  graphs simple place strong sequence positions       straints structure subgraph connections  subgraphs unfortunately reason  kinds subgraphs rarely occur realistic planning prob satisfying  lems need ﬁnd structures             ≥   maxn−    complex represent real problems simple          ≤   minn −   implement efﬁciently hall structure                                                        different values possible planner    hall subgraph                                consider alternatives sequences ongo  hall figure  generalisation stack include mul ing plan lead different outcomes example  tiple entrance exit points length formally isshowninfigure  induced subgraph ⊆ consisting chain ver                                                          xit  tices hvvk each linked neighbours   ‘shortcuts’                          similarly position robot occupies sequence                                                        determines edges use exiting hall       ∈ eh iﬀ −  ∀v ∈                                                robot rj wants exit hall length                                                        edges connect vertex vi  suggests imagine hall long narrow  passageway multiple exits length passage             ≥   narrow robots pass sequence            ≤  −   robots hall constrain exits  used given occupant particular time        constraint limits neighbouring subgraphs    implement planning methods enterexit   entered robot particular time  terminateresolve   halls need track                                                        terminate  sequence robots hall given mo  ment including just names order terminate robots hall provided se                                                        quence matches sequence termination positions  importantly actual vertices shall denote se                                         rirj ∈ ijterminate va vb respec  quence            each method shall                   ab  depends affects         tively                                                            esolve  enter                                                        robot enters hall compute possible resolve subgraph plan uses particular hall                                                        need know three pieces information  sequences creates robot enters vertex vi hall  length contains nkrobots sequence  list robots entered exited hall     resulting sequence form       edges entered exited                                                    inserts rrjrrjrn      sequence positions entered                                                    ijcai                                                    given information construct concrete plan  moving robots asneeds basis robot enters  shufﬂe existing occupants left right necessary  open gap appropriate sequence position  newcomer gap robot leaves  shufﬂe robots appropriately right  vertex depart requires kind  search guaranteed succeed  checks enter exit methods    finally processed entrances ex  remaining robots correct sequence  terminate just each terminal  position shufﬂing way hall  close terminating positions    complexity  enter  exit methods hall om  number different sequence positions  mitted formulae guaranteed  equal size hall hterminate  amortised robots hall resolve method  adds oh term number visits  hall each subgraph resolved fash  ion postprocessing takes extra time equal sum  lengths robots’ plans                                                        figure  reduced map each vertex represents single                                                        subgraph    experiments  evaluate advantage planning hall subgraph                                                          experiment repeated  times each values  structure applied large realistic planning task                                          map patrick port facility port brisbane queens   median running time calculated   land provided company figure  map values plotted figure  medians shown  used plan movements auto means cases planners failed  mated straddle carriers  large vehicles transport ship lack memory instances treated having  ping containers yards efﬁcient planning inﬁnite running time figure  shows percentage cases  ordinated paths vehicles important smooth ran memory each planner exceeding gb  running facility                              limit placed heap    map undirected graph  vertices  seen graphs naive planner  edges vertices naturally connected long straight works efﬁciently small problems extra  chains representing roads facility roads overhead subgraph planning quickly blows  mean vertices partitioned  hall sub number robots increased taking time  graphs  vertices left treated memory subgraph planning able handle signiﬁcantly  singletons figure  reduced graph  edges larger problems robots search  connecting neighbouring subgraphs                    space large    reduced graph constructed hand aid regard plan length use bestﬁrst search  simple interactive tool choosing partition meant planner designed achieve optimality  difﬁcult roads port obvious map outcomes mixed cases keeping halls  provide natural set halls effort optimise subgraph planner produced shorter plans  partition fashion suit algorithm  cases poorly chosen sequencing decisions meant    using map ran following experiment robots plans longer work progress construct sen  placed graph randomly selected vertices sible measures length abstract plan heuristics  force interaction each robot estimate cost completion search ap  quired starting location robot plied abstract planning problem optimise lengths  list ﬁnal robot moving location plans feel better producing  ﬁrst plans constructed using naive cen suboptimal plan quickly search optimal plan  tralised planner using subgraph planner fail  planners performed bestﬁrst search plan space using  distance heuristic based allshortestpaths matrix running times measured ghz intelr  single robot map                            xeontm cpu running sun jdk  gb heap                                                    ijcai                                                                               figure  map patrick port facility port brisbane      related work                                       abstraction halls different kinds  hierarchical planning applied pathplanning graphs especially common maps manmade  fore abstractions approximate cell decompo mains corridors roads domains  sition barbehenn  hutchinson  conte  zulli relatively easy identify halls hand structure   generalised voronoi graphs choset  burdick  simple automatic partitioning  general adhoc hierarchical maps zivkovic bakker  difﬁcult implement  kr¨ose  structures identiﬁed examples shown structure allows planning  carry multirobot scenario   large real world domain robots naive    domain taskplanning discovery use centralised planner abstraction rapidly runs  welldeﬁned subproblems shown recently popularity memory key improvement efﬁcient imple  long  fox  mccluskey  simpson  sub mentation enterexitterminate resolve  graphs considered ‘generic types’ methods improvement available having  multirobot planning domain                      sacriﬁce completeness unlike solutions priori                                                        tisation    conclusion work                          said reason abstraction  abstraction valuable tool improving incompatible prioritised planning prioritised sub  efﬁciency planning difﬁculty ﬁnding good graph planner advantage plans  abstraction commonly occurring ii easy recog main abstract plans constructed robots  nise represent iii easy reason delaying conﬂict resolution resolution step  main multiagent path planning hall subgraph allow planner produce wider range plans                                                    ijcai                                                    
