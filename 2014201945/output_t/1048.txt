 qualitative spatial temporal reasoning efﬁcient algorithms                                                  jochen renz                         research school information sciences engineering                                     australian national university                                       canberra act  australia                          abstract                          step deﬁne pairwise disjoint jointly exhaustive set                                                        base relations assume following binary rela      past years lot research effort tions entities domain exactly      ﬁnding tractable subsets spatial tem base relations holds best known calculi      poral calculi shown empirically rcc calculus randell et al  consists      large tractable subsets calculi pro topological base relations extended spatial regions      vide efﬁcient algorithms reasoning problems   interval algebra allen  consists       expressed relations contained base relations intervals calculi deﬁned      tractable subsets surprisingly efﬁcient literature different entities aspects granularities      lutions general nphard reasoning problems                                                          knowledge relationships given entities      calculi important step direc                                    xry             tion reﬁnement algorithm provides   represented form constraints                                                        variables domain entities      heuristic proving tractability given subsets                                relations paper extend reﬁnement relation set relations  powerset      algorithm present procedure identiﬁes base relations used order able express indeﬁ      large tractable subsets spatial temporal cal nite information cases exact relationship      culi automatically manual intervention known given set constraints formulate      need additional nphardness   different reasoning problems deriving unknown      proofs guarantee tractability  lations eliminating impossible base relations indeﬁnite      resulting sets experiments show relations computing minimal representation checking      rcc interval algebra procedure au  consistency given set constraints      tomatically identiﬁes maximal tractable subsets reasoning problems polynomially reduced      using procedure researchers practi sistency problem considered important      tioners automatically develop efﬁcient reason reasoning problem theoretical properties consis      ing algorithms spatial temporal calculi tency problem depend chosen set relations                                                        chosen domain consistency problem usually      theoretical knowledge                               formally analyse calculi                   nphard relations permitted calculi                                                        tractable base relations used                                                        extremes complexity deciding consistency    introduction                                       led considerable research effort past  years                                                                                                           dealing spatial temporal information essential identify larger tractable subsets given set relations                                                         maximal tractable subsets mark boundary  intelligent everyday lives                               area qualitative spatial temporal representation tractable nphard subsets    reasoning information represented terms qualitative signiﬁcance having large tractable subsets enour  relationships spatial temporal entities “a mous allows tractable reasoning cases  left b” “c occurs during d” distinguished given information restricted relations tractable  tween different aspects space time direction subset mainly considerably speeds time  topology distance sizeduration shape deciding nphard instances consistency problem  pects qualitative relationships deﬁned level emprirical studies renz nebel   granularity suits given application        shown instances nphard consistency    developing qualitative spatial temporal calcu problem rcc instances phase tran  lus select domain entities sition commonly considered hardest  described points ddimensional space stances solved surprisingly fast combining dif  tervals line segments extended spatial regions set ferent heuristics based maximal tractable subsets  spatial temporal entities usually inﬁnite rcc similar results interval algebra                                                    ijcai                                                     nebel  reasoning algorithms studies usually inﬁnite set base relations  used spatial temporal calculus provided partitions d×dinto jointly exhaustive pairwise disjoint  tractable subsets known contain base relations relations entities exactly base  tractable subsets essential efﬁcient solu relation holds domains inﬁnite work  tions spatial temporal reasoning problems tuples contained relations manipulate  turn requirement applications calculi relation symbols different operators doing    identifying tractable subsets hard problem par union ∪ intersection ∩ converse  composition ◦  ticular spatial entities like extended spatial regions weak composition  relations composition  involved easily represented ﬁned ◦s  c∃ba ∈ ∈ ssince  similar structure consistency problem spa deal tuples contained relations  tial temporal relations–they based set base cases use weak composition  relations set operators–it possible ﬁned rs  ∈b ∩r◦s   ∅ relations  velop general method applied sets rela used spatial temporal calculus contained  tions allows prove tractability given subset powerset base relations consistency prob  simply running algorithm renz  socalled lem cspsats spatial temporal calculi  reﬁnement method requires input sets relations subset deﬁned follows   set tested tractability                                                        instance asetv variables domain set  set known aclosure decides consistency                                                                                       Θ constraints xry ∈s⊆  ∈v  reﬁnement method needs reﬁnement strategy  mapping relations ∈sto relations ∈t question instantiation variables Θ  reﬁnement siet ⊆    values satisﬁes constraints Θ                                                different subsets given set base relations  consistency problem general nphard problem  apply reﬁnement method subsets subset known consis  run small number candidate sets way tency problem solved polynomial time socalled  identifying candidate sets make number np tractable subset consistency problem solved  hardness proofs order identify relations make splitting Θ sets constraints Θ  consistency problem nphard relations used constraint xry ∈ Θ constraint xry ∈ Θ  restrict number candidate sets tractable subsets r reﬁnement r ⊆ backtracking  ﬁnd reﬁnement strategy each              Θ                                                                possible sets nebel    didate set corresponding set  large local consistency algorithm approximating  existing theoretical analysis rcc interval al sistency problem algebraic closure algorithm  gebra large number nphard relations known closure algorithm renz ligozat  succes  possible apply reﬁnement method sively makes triple   variables Θ aclosed  calculi identify large tractable subsets applying following operation ﬁxpoint occurs  calculus theoretical results available xry  xry ∩ xs  ty xsz zty ∈ Θ    paper extend reﬁnement method present ﬁxpoint occurs Θ called algebraically closed  general procedure large tractable subsets arbi closed relation occurs during process Θ  trary spatial temporal calculi identiﬁed fully auto inconsistent cases aclosure decides consistency  matically need manual interaction cspsatb requirement applying  procedure return tractable subsets given methods following say set rela  spatial temporal calculus guarantee max tions tractablenphard cspsats tractablenp  imality resulting tractable subsets procedure iden hard similar relation said tractablenphard  tiﬁes maximal tractable subsets rcc interval cspsatb∪r tractablenphard  algebra resulting tractable subsets  maximal efﬁcient solutions np  reﬁnement method  hard consistency problem used split sets renz  nebel’s  reasoning algorithms              reﬁnement method renz  general method                                                                                                            paper structured follows section  proving tractability cspsats given sets s⊆                                                                                 introduction spatial temporal reasoning requires subset  aclosure  reﬁnement method section  procedure known decide cspsatt  method checks  section  apply rcc interval algebra possible reﬁne constraint involving  compare output procedure known results relation according given reﬁnement strategy  finally section  discuss results         constraint involving relation changing consis                                                        tency based following deﬁnition    background                                         deﬁnition  reduction reﬁnement                                                                      qualitative spatial temporal reasoning       let t⊆    reduced reﬁnement ifthe                                                        conditions satisﬁed  qualitative spatial temporal calculus ligozat renz   consists domain spatial temporal entities  ∈sthere ts ∈t ts ⊆                                                    ijcai                                                     algorithmcheckrefinements                             suitable reﬁnement strategy                                    inputaset  reﬁnement matrix                checkrefinements    used immediately verify         fail                output     reﬁnements make aclosed triples reasoning given set relations tractable  constraints inconsistent succeed                                                                                    t⊆b           ←  true                                      corollary  renz  let       sets   changes                                            aclosure decides cspsatt  let reﬁne   changes                                                        ment matrix suppose getrefinementssm     oldm ←                                                                                                          turns  ∈sthere ts  ∈twith    algebraically closed triple                                                                        ststrue aclosure decides cspsats    rrr  relations                                            reﬁnement rrr                                              oldmrroldmrr                general procedure identifying                          oldmrrtrue                              tractable subsets                                               ←  algebraicclosuret                                                   section present procedure automatically iden        rrr  contains        relation return fail                    tifying large tractable subsets spatial temporal calcu                                                      lus assume  given set base relations        mrr ← true                                                     weak compositions converses base            mrr ← true mrr ← true          oldm            ←  false                   relations known  aclosure decides            changes                                    cspsat     return succeed                                    sistency         consequence condition                                                         closure s set s⊆b intersection   figure  algorithm checkrefinements renz    verse weak composition complexity                                                                                                            aclosed set Θ constraints reﬁned renz ligozat  particular follows                    set Θ constraints replacing xisxj ∈ tractable need following lemma      Θ       ∈ Θ    ij                   enforcing lemma  let s⊆b aclosure decides cspsats      closure Θ does result relation                                                        aclosure decides cspsats                                 cspsatt    clear aclosure decides      set                                            t⊆b                                              proof sketch each constraint xry Θ replaced            reduced reﬁnement                                  Θ        Θ      aclosure decides cspsats sufﬁcient equivalent set constraints xy                                                         union Θxy equivalent Θ applying  proving tractability cspsats show                                                                                                   closure Θxy leads xry applying aclosure Θ  duced reﬁnement set aclosure decides                                 Θ  cspsatt   shown reﬁnement algorithm leads result applying   renz  uses reﬁnement matrix manages note condition  actually strict condition  different reﬁnements initially contains reﬁne procedure applied known  ment strategy relation ∈sto relation ∈t results procedure tractability  deﬁnition  reﬁnement matrix                        sulting sets guaranteed condition  satisﬁed  reﬁnement matrix × boolean entries  ∈s ∈ msrtrue ⊆  identifying tractable relations    algorithm checkrefinements figure  takes procedure consists three different steps  input set relations reﬁnement matrix separately ﬁrst step identify single  algorithm computes possible aclosed triples tractable relations relations tractable sub                                                              relations rrr line  enforces aclosure set combined base relations during                                                 reﬁnement rrr mrij rij  step obtain relations potentially np   true ∈   lines  hard single relations lead nphard set  reﬁnements results relation al relations combined base relations  gorithm returns fail resulting relations test single relation                                                        b  rrr  added setting mrij rij  tained reﬁned relations                                                        b                 ∈ b  true ∈   lines   relation  ﬁrst compute closure                                                      b∪r   apply reﬁnement algorithm possi  repeated reached ﬁxpoint enforcing                                   closure possible reﬁnement does result new ble reﬁnement contained algorithm  lations anymore inconsistency detected pro given figure  consists parts checksingle  cess algorithm returns succeed similar algorithm refinement csr checks reﬁnements                                                                      getrefinements returns revised reﬁnement matrix single relation added existing set relations                                                         checkrefinements  returns succeedifcheck       andfindtractablesingles   fts calls                                                                                       b  refinements  returns succeed precomputed sr relations contained  clo                                                                       possible reﬁnements aclosed triple variables sure likely contain relations  given reﬁnement matrix  applying initialise reﬁnement matrix csr reﬁnement  ﬁnements aclosed set constraints result reﬁnement propagate relations  inconsistency enforcing aclosure            decomposed relations b ∪r                                                    ijcai                                                       algorithm csr three different outcomes algorithmchecksinglerefinement csr                                                                             ∈              t⊂b  lation set  succeed failandunknown      input single relation    tractable set                                                                 t≡                               succeed  means initial reﬁnement closure   reﬁnement matrix                                                               succeed                 r∪t   ∈t  checkrefinements  computes   output          closure     reﬁned                                                           fail                       r ∈t  dated reﬁnement matrix relations clo    reﬁnement        leads                                                                        unknown  sure t∪r  reﬁned relation inconsistency      changing consistency case aclosure  s←closurer∪t good ← false  cides cspsatt  aclosure decides consistency  reﬁnement r r ∈t  closure t∪r immediate conse   newm   ←  newmrr ←  true  quence corollary  possible reﬁnements  checkrefinementsnewm ssucceed                                                                       relations fail csr returns fail case clo  ← getrefinementsnewm  sure t∪r  reﬁned attempts   ∀i ∈sthere ∈t st ijtrue  reﬁne lead inconsistency does say  return succeed  adding leads nphard set  good ← true  means tractability set proven  good  true return unknown return fail  ing reﬁnement method likelihood  resulting set nphard possible outcome algorithmfindtractablesingles fts  csr unknown means reﬁnement input set base relations                                                                                                         r ∈t does result inconsistency outputasett⊆ tractable relations set h⊆  does lead reﬁnement relations potentially nphard relations              t∪r                            closure       relations  increasing   t←closureb   ∅  relations lead successful reﬁnement rso ∀i ∈ mij ← true  false                                                                                        conclude leads tractable set  relation  ∈t    fts calls csr different relations contained   ←         rbm    b                                                   result  csr          keeping track outcome relation             succeed      t←t∪           r∪b  returns succeed leads tractable subset  result            closure                                       b∪r                      result  fail h←h∪r  relations closure   lead              tractable subset don’t tested using csr  return  conclude step following lemma          figure  algorithms checksinglerefinement    lemma   let     result ftsb   findtractablesingles  aclosure decides cspsatb decides  cspsatb∪t     ∈t                       tested resulting set reﬁned current                                                        candidate using csr algorithm line  doesn’t                                                        return fail new relation added current    identifying candidates tractable subsets     didate algorithm keeps track relations  using algorithm speciﬁed previous section added current candidate lines   identify tractable relations don’t know relations contained candidates  combined form large tractable subsets new candidate generated does contain  set forms tractable subset relation line  new candidate tested  relations lead nphardness loop algorithm tractable relations  combined each possibility ﬁnd large contained candidate possi  tractable subsets test subsets using ble candidates pair  reﬁnement method obviously tractable relations incompatible  sets know reﬁnement strategy contained candidates al  work step ﬁnd gorithm tests each pair relations contained  lations lead intractability combined each candidate set line  tests closure  purpose assume relations relations base relations reﬁned  set returned ftsb leads intractability closure relations base relations  combined assumption clear line  possible csr returns fail  pair relations contains relation clo pair added list incompatible pairs line  sure contained tractable subset  pair reﬁned new  incompatible lines  didate formed contains pair line  tested  tractabilitycandidates   ftc figure         loop algorithm pairs tested    ftc computes candidates tractable subsets start algorithm returns candidates tractable subsets  ing closure base relations successively candidates common contain  adding new tractable relations each new relation ﬁrst incompatible pair contain potentially nphard  tested incompatible relations relation single reﬁnements result  contained candidate line  incompatible ing inconsistency know  closure current candidate computed candidate reﬁned known tractable set                                                    ijcai                                                     algorithmfindtractabilitycandidates   ftc      algorithmtestcandidates                                                                                                 input set tractable relations set supposedly input candidates tractable subsets csi                                                                                       nphard relations note cl  closure             output tractable subsets tsi                                             output candidates tractable subsets csi ⊆                                                          csi   l←∅set incompatible pairs ←  max ←        queue ←∅                                                                      tatb ∈t                                  ∀r ∈   mrs ← true  false               ∪ ∩h   ∅    l←l∪                                 cl                               each ∈csib queue ← queue ∪      ∀r ∈ mrs ← true     false                                               tractable ←b                         cand ←b newcand ←b                                  loop ←  changes ← false   true                                      queue   ∅     nextrels ←∅newrel←∅                             delete ﬁrst pair  rnum  queue     tj ∈t tj  ∈ cand                      num  loop changes  false break       ∈ candsuchthat tjr ∈l            num  loop loop ← num changes ← false         nextrels ← nextrels ∪tj continue       csrr tractable  succeed      newcand ←  clcand ∪tj                             tractable ← closuretractable ∪r      newcand ∩h   ∅                               delete   queue ∈ tractable         nextrels ← nextrels ∪tj continue               changes ← true      csrtj cand   fail                 add  rnum  end queue         cand ← newcand                               tsi  ← tractable      nextrels ← nextrels ∪tj                 return tsi    csn ←  cand                                                                                   figure  algorithm testcandidates    newrel relation nextrels  csi    newrel   ∅                              each relation contained candidate reﬁnement      cand ← clb∪ newrel newcand ← cand max    known tractable subset possible    max                                  possible relation relation tested      tktj ∈t  pair st  tktj   ∈l           later stage order prove recursive computa         tktj contained csi     tion proves tractability introduce new notion                                         cs      thereisnosuchpairthen return          deﬁnition  given set s⊆btheclosure sequence      cand ← clb∪tj newcand ←  clcand ∪tk                                                                                                      cs rrn recursively deﬁned subset        csrtk cand mfail                                                            cs        s∪r         l←l∪ tktj  continue                                   closure                    ←      cand   newcand max                             cs  rnclosurecs  rn− ∪rn                                                                             figure  algorithm findtractabilitycandidates     lemma    let t⊆     suppose t≡cb   rrn                                                               testing candidates                             reﬁnement matrix diagonal true                                                        csrri cb rri−m returns succeed  step prove tractability candidates  ≤ ≤ nthencspsatt  tractable  previous section identify tractable subsets                                                        proof    csrri cb rri−m returns  candidates case tractable know                                                        succeedthensi       cb rri reduced  cspsat  b            tractable candidate set tractable reﬁnement si−  cb rri−                                cspsat   b  reduced reﬁnement     cspsatsi tractable cspsatsi− tractable  reﬁnement strategy use extend tractability know cspsatb decided aclosure    cspsat            larger set adding tractable tractability cspsatt  follows successively applying  relations computing closure relation csr corresponding closure sequence  added sufﬁcient reﬁne larger tractable sub  set obtained step new relation procedure sequence three steps  reﬁned csr returns fail know  fts  ftc  testcandidates input  add current tractable subset csr returns set base relations weak compositions  unknown try add different relation instead output tractable subsets conse  test relation later stage            quence previous lemmata obtain main results    similar algorithm theorem  given set base relations                                                                                                   ftc special treatment relations closure decides cspsatb each tsi ⊆  returned  interleaved csr calls return unknown procedure cspsattsi tractable                                            unknown  calls lines   ftc returned      instead using input procedure use  relations added candidate set aclosure decides consistency  candidate tractable process  ing required unknown occured computing theorem  aclosure decides cspsats set                                                                                          didate set use algorithm testcandidates obtained applying procedure reduced  figure  takes candidate successively tests reﬁnement tractable                                                    ijcai                                                     
