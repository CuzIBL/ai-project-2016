evolving populations better coevolving individuals blind mice                                                          problem                                                        thomas miconi                                                 rue desbordesvalmore                                                     paris france                                                  thomasmiconi freefr                               abstract                               difficulties difference behaviour sim•                                                                 pler genetic algorithm        paper evolutionary design        multiagent systems important re•              related work        cent research domain focusing        collaborative revolutionary methods ex•            simplest way evolve team collaborating agents        pose possible drawbacks methods             agents identical homogeneous        show nontrivial problem called            populations methods really different in•       blind mice problem classical ga approach          dividual evolution evaluation time evaluate        populations evaluated selected           given genotype agents created genotype in•       crossed tweaks finds         stead just resulting population evaluated        elegant nonintuitive solution efficiently       start different genotype        cooperative coevolution difference ef•       rigidly constrained method makes perfect sense        ficiency grows number agents           situations does need heterogeneity        simulation propose explanation             method used nzaera et «  evolve small        poorer performance cooperative coevolu•           groups fishlike animats controlled neural networks        tion based intrinsic fragility evalua•     perform extremely simple tasks dispersion aggregation        tion process explanation supported the•              oretical experimental arguments                        similar method used luke  evolve com•                                                                 petitive teams soccer players robocup competition                                                                  kitano et  author used adapted version    introduction                                                 genetic programming koza  at•  evolutionary algorithms methods apply principles  tempt introducing limited degree heterogeneity de•  darwinian evolution generation adaptation     composing teams small subteams defenders attackers   artificial logical entities function parameters rulesets pro• evolving different program trees each sub  grams  usability search technique sup• teams enormous search space   ported analytically schema theorem gold•       delays imposed robocup server software   berg  genetic algorithms empirically un•    approach proved intractable practice gp runs took days   countable applications overwhelming majority     produce meaningful results lack time prevented   applications generation individuals semiheterogeneous teams outperforming homogeneous      collective evolution generation andor adapta• teams   tion collaborating populations agents attracted com•  way obtain degree heterogeneity   paratively attention significant research population make change gradually time   domain especially decade   replacing agents based evaluation   research led algorithms evergrowing complexity    method new agents obtained crossover   paper work field  duplication mutation way evaluate   particularily principle cooperative coevolution   impact given individual perfectly possible per•  popular type method today       form simple genetic algorithm population     expose feel possible drawbacks co•    essence idea classifier systems iholland   operative evolution propose simpler way adapt    reitman  set rules cooperate control   canonical genetic algorithm generation populations  animat individuals evaluated animates   experiment based blind mice prob•     performance through creditsharing   lem show adapted genetic algorithm works      vein proposed simple scheme imi  pretty problem cooperative coevolution     coni  agents given arbitrary in•  difficulties finally explanation   dex agents index mate agents       multiagent systems                                                                                                      indices fell kr kr range evaluation occured   methods evolving heterogeneous    simply replacing parents offspring      populations    second parent keeping best pop•   ulations possibility discarding changes  cooperative coevolution    decreased performance simple algo•   cooperative coevolution quite elaborate mechanism in•   rithm led emergence subspecies appeared grow tuition indicates evidence confirms focusing    shrank according needs population inter• each agent requires huge number evaluations    esting feature algorithm incrementality converge solution algorithm concentrates    allowed longterm adaptive evolution      optimizing each individual agent regard rest      trying obtain fully heterogeneous systems brings   population different holistic    level complexity right realm coopera• approach traditional gas genomes ma•   tive coevolution coevolution frequently  nipulated coadaptation genes emerges naturally    applied competitive way confronting individuals   selection crossover mutation  theory    each using result confrontation     possible simply use traditional gas    evaluation individuals used cooper• generation multiagent systems regarding    ative way order evolve sets collaborating agents   systems just each agent individuals      cooperative coevolutionary ipotter dejong      simple answer approach leads large geno•   methods each agent actually taken  types genotype individual code    hidden subpopulation pool evaluate given indi•    agents instead just resulting search    vidual associated set collaborators space intractable gas cooperative coevo•   each pool resulting population evaluated lution seen simple way decompose big    resulting score attributed currently problem smaller ones smaller   evaluated individual based evaluation method     problems strongly interlaced each   classical ga cycle evaluate select reproduce applied   cooperative coevolutionary algorithms   each pool turn times needed ver• important drawback basically evaluate each   sion cooperative coevolutionary algorithm ccga      agent assessing impact performance   collaborators chosen taking best individual    problem number agents   pool ccga version evaluation      grows influence single agent   refined reevalluating agent random collabora•   systems performance tends decrease possi•  tors taking better score obtained  bly making assessment difficult   evaluations number collaborators way col•   troublesome problem stochastic component   laborators chosen way overall score computed   case simulations case evaluating   averaging different scores taking best score  population times lead different re•  taking worst score important parameters    sults consequence important   influence performance algorithms influ•    think   ence parameters studied extent      interesting classical genetic   wiegand et ai  study applied simple   algorithms adapted evolution populations   function optimization problems variables        populationoriented genetic algorithms      happens frequently good ideas cooperative coevo•   compete cooperative coevolution   lution rediscovered number times dif•  ferent names enforced subpopulations esp example       populationoriented genetic algorithms   exactly like cooperative coevolution each agent  genetic algorithms work evaluating individuals selecting   evaluated set collaborators best agents according performance crossing   pools words esp ccga al•    mutating starting pos•  gorithm method initially devised evo•  sible apply exactly method multiagent   lution neural networks gomez mikkulainen        systems evaluate populations cross   successfully applied multiagent evolution yong  creating new populations inherit agents   mikkulainen  used predatorprey sim•    parents mutate changing agents   ulation algorithm managed efficient strategies      fact multiagent systems simple   predators having predators chase prey   individuals obvious level decomposition   blocked                                  agent exploited ways     reason idea simply using standard ge•     obvious idea order cover search   netic algorithm populations fallen      space efficiently make new populations   slightly fashion probable reason   existing agents create new agents   simply obvious talked second rea•      introduce inner crossover operator   son does intrinsic drawbacks   allows cross agents creating   massive search space requires  new population importing agents parents   modifications adapted evolution populations   imported agents actually result inner   aspects discussed section                 crossover agents parents                                                                                                    multiagent systems figure  normal crossover spiced   inner crossover individual agents al•  lows creation new agents necessary   cover search space efficiently        possible make analogy traditional gas   viewpoint population crossed   agents similarity bitwise mutations            cat   standard genetic algorithm childrens            mouse   genotype present parents   genotypes exactly random mutations    figure  successful strategy mouse attracts cats   genetic material comes parents geno• mouse plays balancing role mice to•  types suggests sight inner crossover rate gether tight flock   slightly higher usual mutation rate   classical ga usually  each bit               problem trivial task sec evo•    possibility enhance traditional crossover   lution managed come elaborate solution   occasionally swapping agents populations fi•    problem   nal offspring allow better covering   experiments mice controlled simple feed•  search space explore possibil•  forward neural networks  inputs  outputs  hidden   ity present paper                                      neurons inputs coordinates center                                                                  gravity flock sum resp co•   application blind mice problem                          ordinates mice divided number mice    description experiment                              outputs real numbers   range                                                                  indicating horizontal vertical speed mouse   experiment presented based blind mice                                                                  weights real numbers   range simu•  problem flock mice controlled simple feedforward                                                                  lations use  cats   neural networks escape number cats running af•  ter toroidal world                                   evolved strategy     game three simple rules                                                                  optimal strategy problem      cats mice run closest strategy emerged successful runs vari•       mouse                                             ants strategy described figure  strategy      mice run faster cats                        led really efficient behaviour                                                                    let explain strategy mice      mice cats each  aggregated tight flock minimizes        blind input pair   probability stray cat touch        numbers coordinates center     sufficient ensure minimal catch rate        flock                                                    really important behaviour mouse labelled     cat touches mouse cat teleported an•     dancer   random location populations catch counter     mouse strange behaviour revolve   increased changed simulation   rest flock strictly circular fash•  interrupted way                                    ion instead constantly bounces flock     let consider rules make prob•     staying respectable distance moving fast   lem extremely difficult mice possible    path purpose behaviour obvi•  escape predators sec     ous sees position cats fol•  running fast possible just make bump    lowing dancing mouse simply closest   cat coming opposite direction      leaving rest flock   true random movement strategies given enormous       words purpose dancing behaviour   asymmetry information mice cats sur•       simply attract cats dancer moves fast   vival chances poor rodents appear desperately    touched cats sinuous path   human designer finding solution         multiagent systems                                                                                                        drag cats efficiently initial stage        cats mice random position       gets far cats allows cats        follow endlessly runs faster             final touch strategy seen be•  haviour mouse labelled balance   didnt appear successful runs mouse re•  volves flock closer runs   moves flock circular fashion runs   bounces usually stays opposite side   flock respect dancer believe   mouse balancing role counterbalances   effect dancer position center gravity   population allowing flock stable      variants appeared having dancers   balancer essential traits strategy   consistent aggregation mice   attract cats away flock     note strategy interdependent each agents   performance highly dependant agents behaviour    figure  performance populationadapted genetic algo•  true consider oider      rithm  mice  mice yaxis   behave way calculate trajectories indicates number mice catched during evaluation   input position center gravity  round xaxis indicates number evaluations   flock based position agents fitness best population average fitness   fact plays significant role results described be• populations shown   low                                                                 collaborators used turn order refine evalua•   experimental results                                        tion final result calculated succes•   experimental settings                                     sive evaluations various ways average best random                                                                 problem increasing   used algorithms problem simple genetic     number collaborators number evaluation   algorithm adapted inner crossover operator de•   rounds brought absolutely damag•  scribed fullfeatured cooperative revolution•   ing final score best score   ary algorithm methods used      successful method simply evaluate   mice used  populations  resp  mice    each mouse joining best individual each   algorithm  resp  pools  mice sec• pool exactly enforced subpopulations algorithm   ond each algorithm run times different  surprising result explain   random seeds                                                     algorithm reproduction populations occured   through tournament selection point crossover rate                                                                  comparison results    time populations crossed to•  gether inner crossover rate  applied mean•     algorithm simple genetic algorithm levels   ing each mouse offspring  chance   crossover proved remarkably efficient problem   result crossing parents corresponding mice runs led strategy described section    second algorithm reproduction each pool oc•    number mice simulation course   cured tournament selection point crossover rate took time  mice  typical runs    proved efficient al•    respectively   mice described figure    gorithms mutation appeared crossing mice          cooperative coevolution led different results    choosing new random value connection     mice runs algorithm failed evolve com•  weight  probability                                 petitive behaviour runs managed good     note method use limited form elitism strategy took evaluations previous al•  best individual given generation pre•  gorithm runs achieved performance compa•  served generation ensured better perfor•    rable simple genetic algorithm  mice   mance  obtained results puzzling     success rate lower runs did converge   explained                                            evaluations converged suddenly di•    finally cooperative coevolution specifies each agent  verged quickly runs   mice exhibited   evaluated set collaborators sets intriguing pattern oscillation                                                                                                    multiagent systems                                                                selected rest population                                                                  coadapted different state pos•                                                                 sible agent selected resulting                                                                  sharp increase performance  error                                                                  evolutionary process cause upanddown                                                                  oscillations fitness curve                                                                    little problem said                                                                  increasing number collaborators classical way                                                                  selecting random sets collaborators simply does                                                                  work understandable problem solution                                                                  requires highly interdependent behaviours agents per•                                                                 formance good agents play role                                                                  evaluating each agent fitting random population                                                                  likely help reach state problem                                                                                strongly interdependant agents adding random collaborators                                                                  doesnt helpful solution    figure  performance best run cooperative      devise elaborate schemes using   evolutionary algorithm curves indicate performance    secondbest each pool second set evaluators   best individual currently evaluated pool suppress problem prob•  average fitness individuals pool notice brutal lems nondeterministic component cooperative coevo•  variations curves                                      lution essentially fragile stan•                                                                 dard genetic algorithm     fitness curve described figure  shows good ex•  ample pattern result successful  conclusion   run  mice population converge                                                                  described possible pitfalls cooperative coevolu•  better behaviour suddenly diverges                                                                  tion proposed way apply canonical ge•  loose pattern starts                                                                  netic algorithm populations agents applied   cycles later                                                                  algorithms nontrivial problem blind mice prob•    expect algorithm                                                                  lem conceptually simple nontrivial solve   population remains quite stable composed                                                                  problem populationsoriented genetic algorithm   best individual each pool individual                                                                  significantly outperformed cooperative coevolution pro•  changed each cycle better best                                                                  posed explanation difference results based   individual previous generation preserved                                                                  intrinsic fragility cooperative coevolution regard   explain brutal changes fitness happening                                                                  excessive stochastic variations evaluation proces                                                                      final note old french proverb goes quand le     explanation pattern result coop•                                                                 chat nest pas la les souris dansent cat away   erative revolutions main drawback number                                                                  mice dance artificial evolution demonstrated   agents grow result evaluation undergoes im•                                                                 opposite true   portant stochastic variations performance bound de•  crease     happens point algorithm does  references   good population keeps optimizing replacing      goldberg  david goldberg genetic algorithms   each agent better turn  search optimization machine learning addison  point stochastic variations evalu•   wesley    ation process good agents perform                                                                  gomez mikkulainen  gomez mikku  nonoptimal classical evo•                                                                   lainen incremental evolution complex general behav•  lutionary algorithms occasional mistakes arc blurred                                                                    ior adaptive behavior     large number trials errors   populations performance impact anothers       holland reitman  holland reit  cooperative coevolution exceptional case sufficient  man cognitive systems based adaptive algorithms   wreck behaviour population   replace essential agent say dancer poorly        strangely potter dejong  random collab•  performing agent say random wanderer                     orators introduced precisely problems strongly inter•                                                                 acting variables roscnbrock function     agents pools evaluated turn    kind problem idea applied twovariables func•  conditions changed dramatically      tions case choosing random collaborator addition   agents selected instead previous quasioptimal     better allow algorithm escape local minima   ones error selection agent      number agents grows evaluating agent   influence pools evaluation cycle      set totally random collaborators hardly bring valuable   comes pool previously essential agent   information       multiagent systems                                                                                                    
