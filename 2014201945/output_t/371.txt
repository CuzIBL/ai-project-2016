            collaborative inductive logic programming path planning                                      jian huang    adrian pearce                                    nicta victoria research laboratory                        department science software engineering                              university melbourne victoria australia                                    jhuaadriancsseunimelbeduau                        abstract                          collaboration scheme work learning iso                                                        lation communicating interac      distributed systems learning does necessar tion agents performing learning task needs      ily involve participation agents directly elaborated agents draw knowledge      inductive process instead systems necessary draw neces      frequently employ multiple instances induction sary knowledge      separately paper develop evalu    prior work published authors huang pearce      ate new approach learning distributed sys possible synergy program execution      tems tightly integrates processes induction induction demonstrated inducing missing predi      agents based inductive logic program cates distributed program setting multiagent      ming techniques paper’s main contribution interactive learning framework mails agents equipped      integration epistemic approach reason background knowledge expressed logic programs      ing knowledge inverse entailment dur  reason know based collab      ing induction new approach facilitates sys oratively engagement learning tasks through communicat      tematic approach sharing knowledge  ing positive negative examples based prior suc      invention predicates required    cess failure goals perspective each agent      illustrate approach using wellknown path recently approach formalized wider range      planning problem compare results empirically  problem solving tasks based generalized      multiple instances single agentbased induc problem collaborative inductive logic programming      tion varying distributions data given cho ilp huang pearce      sen path planning algorithm algorithm enables  paper develop work extending      agents combine local knowledge ef integrating epistemic aspects approach better      fective way avoid central control signiﬁ evaluate approach extended task illustrate      cantly reducing communication costs              approach using wellknown path planning problem                                                        distributed setting path information reacha                                                        bility cost distributed different agents    introduction                                       each agent perceives partial information en  problem true multiagent learning far com vironment approach enables combine lo  plexity simply having each agent perform localized cal perceptions effective way collaboratively work  duction isolation stone veloso  kazakov path source destination agent  kudenko  weiß dillenbourg clearly identify able isolation empirically show  problem “interaction does just serve purpose approach shows promise avoiding central control  data exchange typically spirit cooperative reducing communication costs involved  negotiated search solution learning task” weiß collaborative inductive logic programming cilp  dillenbourg                                technique based inverse resolution approach learn    reason interaction cooperation during learn ing muggleton raedt  follow tradi  ing important crucial knowledge necessary tion prior work context sensitive models decision  learning hypothesis typically distributed number theoretic ilp efﬁciently constraining search ﬁnd  agents gives rise problem indi ing optimal models srinivasan  knowledge  vidual agent accomplish learning task based needs distribution involves scoring hypothesis  problem knowing background knowledge during induction model optimal choice  each agent required constructing global hypothesis current context relative each agents viewpoint goals  given sharing complete knowledge feasible important aspect approach seeks  constraints extremes tegrate processes deductive inductive inferenc                                                    ijcai                                                    ing during problem solving research views synergy planning problem use distributed path planning prob  combining processes effective way acquir lem show empirically advantages approach  ing new knowledge performing reasoning reducing communication costs allowing agents col  agent performing induction number deductive laboratively learn through interaction  subroutines used discretion vice versa logic programming domain capital letters used    section  deﬁnes problem collaborative ilp section denote free variables small letters bound term    details proposed induction technique reachableab stands “b reachable a”  involving distributed knowledge sources applied term linkab means “there exists link b”  distributed path planning problem section  reports link term include extra arguments containing  empirical results addressing advantages approach information link cost illustration  section  looks existing work path planning stick twoargument form assume each car  multiagent environments distributed problem solv equipped following background knowledge  ing techniques situations centralized control  linkab → reachableab  possible                                                           reachableab  ∧ reachablebc   →    collaborative ilp problem                          reachableac  process inductive logic programming deﬁned ﬁrst background knowledge simply captures mean  provided background knowledge ing exists link it’s reach  examples concept ilp algorithm constructs able likewise second clause says it’s  hypothesis ∧  muggleton reachable it’s reachable  multiagent systems ilp involves generating hypotheses it’s reachable car records links  ing collective background knowledge formally gone through previously history knowledge base  process collaborative ilp cilp multiagent systems form linkab word car  deﬁned follows                             perform deductive reasoning infer based                                                        background knowledge knowledge gained  deﬁnition  collaborative ilp problem deﬁned                                                        torically given query form reachableab  set agents background knowledge bi ∈                                                        reachable location  each agent set positive negative exam              −                                          hand inductive framework given  ples   each agent    bi                                          i∈a      query reachableab car come                                               set of background knowledge i∈a     hypotheses background knowledge       −          −      i∈a ei sets positivenegative ex explain query ∧  reachableab  amples collaborative ilp viewed process viewed slightly different perspective inductive  collaboratively generating hypothesis technique used uncover path location  following conditions hold                            path does exist inductive process    prior satisﬁability ∧ e−                   stage generate hypothesis containing link                                   −                    terms effectively corresponds actual path    posterior satisﬁability ∧ ∧                                                                                 prior necessity                                    equipped inductive process simple    posterior sufﬁciency ∧             ground knowledge approach allows car                                                       issue query form reachableab seeking    ¬∃i ∈ bi ∧                                                         path engaged answering query    ﬁrst conditions adapted ilp sin cars consulted attempt induce performing ilp  gle agent setting muggleton raedt  gen technique inverse resolution series hypotheses  eralized allow hypothesis generation agents’ total explain query based background knowledge  background knowledge ﬁfth condition asserts fig illustrates process inverse resolution gen  individual agent able induce hypothesis erating hypotheses explain query reachableag  based solely background knowledge         given   link  history linkcd     linkce    constraints associated resource bounded multi linkde linkdf linkfg    agent systems bringing distributed background knowledge ground knowledge used each step shown left  agent execute centralized ilp algorithm hypotheses generated way shown  infeasible practice inductively gener right branches hypothesis hn  reachableac∧  ating hypothesis multiagent systems relies care linkcd ∧ linkdf ∧ linkfg example  ful exchange information agents during learning interpreted reachableag query true  believe epistemic reasoning plays important long reachableac true given linkcd  role                                                 linkdf   linkfg  known true                                                          surely hypothesis generated single agent doesn’t    path planning using induction                      correspond path knowledge individual  section sections following demonstrate incomplete just happens previous  application cilp approach distributed path example based local knowledge car example                                                    ijcai                                                                                          ¬ linkab reachableabp reachableac  linkcd linkdf linkfg                                                           pp         hn               ¬ reachableab ¬ reachablebc reachableacp ···                                                    pp          ¬ reachableab ¬ reachablebc reachableacp reachableac  reachablecg                                            pp                                                   reachableag                                                   figure  inverse resolution background knowledge used shown left branches hypotheses generated right    genhypoquery                                          deduction directed search    hyplist ←query hyphistory ← ∅    hyplist  ∅                             inductively generating hypotheses uninformed way       choose hypothesis hyplist               scribed make search space intractable quickly       ∃ dijkstrat  path true           replace pathand store hyphistory reason basic algorithm extended                                                 allows path searching subroutine dijkstra’s algo           generate subsequent hypotheses hypall based rithm employed heuristic identifying promis           hypall  ∅               hyphistory ←h∪hyphistory             ing hypotheses pruning away search space mindful                                                way dijkstra run each reachable term contained               hyplist ← hypall ∪ hyplist            hypothesis uncover path based historical link   scorehypohyphistory   return hyphistory order score formation example linkcd linkdf                                                        linkfg   known path searching subrou  figure  algorithm hypothesis generation utilizing tine uncover path hypothesis   ductive shortest path subroutine scoring         reachableac    ∧ reachablecg    change                                                        hypothesis  reachableac∧linkcd∧                                                        linkdf   ∧ linkfg   having  unable ﬁnd path returning inverse resolution large number times arrive                     hypothesis helpful simply failing hypothesis  multiagent environment show shortly integrating deductive inductive processes  partial solution used during future endeavors approach allows agent performing induction employ  uncover path                                ductive subroutines used discretion ex    hypothesize paths induction                   ample agent subroutine ﬁnding short                                                        est path having subroutine ﬁnding particular    discovering partial solution relies generating path aspect research signiﬁcance  hypotheses controlled fashion basic algorithm cause deductive inference inductive inference  doing sketched fig  algorithm starts independent paths approach shown  choosing ﬁrst hypothesis hyplist initialized combined tightly effective way acquiring  contain query applying inverse resolution new knowledge performing reasoning sheds  using each background knowledge resulting hy light programming inductive agents higher level  potheses stored hyplist abstraction algorithm agent actually runs  hypothesis returned inverse resolution doesn’t hard coded instead number different  process hyplist store deductive subroutines employed deductive  hyphistory algorithm keeps picking hy subroutines utilized agents required based  pothesis hyplist way agent committed particular moment  possible hypotheses generated starting selects suitable subroutine execute problem  query explored                            solving executing induction process    hypothesis explains query  contains solution need gener  ated complexity algorithm worst  collaborative path planning  case involves expanding starting query each previous section demonstrated induction  background knowledge unifying possible allows agent ﬁnd path exists  known location hypotheses longer ‘guess’ hypothetical path pursued fur  total known path denotes number known lo ther section explore interactive aspects  cations denotes number known links denotes enable multiple agents distributed knowledge collab  number background knowledge complexity oratively ﬁnd path example fig   algorithm worst case ol × bk assume car interested going posted  generated hypotheses discarded collaborative ilp problem deﬁned section  path  halfway through search meaningless planning problem “collaboratively ﬁnd hypoth  average case complexity signiﬁcantly lower    esis example  reachableal                                                     ijcai                                                    figure  example showing path information dis  tributed agents path  adgjl    explainable using total background knowledge  agents” observed ﬁgure  hypothesis  linkad  ∧ linkdg   ∧  linkgj  ∧ linkjl    generally speaking distributed setting pursuit  global hypothesis involves following key elements figure  interaction information passing cars  global inductive problem decomposed se fig  searching path  ries localized inductive problems solved  dividual agents ii individual agent’s inductive process cppquery know  enable contribute partial solution problem  hyp ← genhypoquery  induce path  iii agents carefully maintain knowledge  pathfoundhyp                                                             path←  retrievepathknow  systematically exchange information partial  return path  solutions integrated form ﬁnal solu  ∀i ∈  tion element ii described thoroughly  hyps ← hyps∪ aski query                                                          hyps  ∅  previous sections provide description  return fail  involved iii                              pathfoundhyps                                                             path← retrievepathknow    consider example fig  interaction steps  return path  summarized follows                           hyps  ∅                                                             query ← choosebesthyps  hypothesis pursue    ae               reachablea                      know ← genknowquery  generate new knowledge    aasks        reachablea                      hyps ← hyps −query                                                                   query know    cinduces       reachablea glinkg jlinkj  cpp                                                                return fail   creplies        reachablea   adeduces       kakcreachableg                                                        figure  algorithm collaborative path planning com                    ka∃ikireachablea →                        kareachablea            bines agent interaction induction epistemic reasoning    ae               reachablea   aasks         reachablea   binduces        reachablea clinkc dlinkd eventually course requires car   breplies        reachablea                 knowledge base retrieve inferred     deduces   kakbreachablec         knows actual transfer link informa                    ka∃ikireachablea →      tion place interaction three cars                        kareachablea            example shown fig                                                   reachable                    general algorithm collaborative path planning     induces    linka                                                        given fig  engaged answering queryan    car starts step   reachableal agent ﬁrst attempts solve line   suc  wants construct explain assume car asks ceeds goes knowledge base retrieves path  car ﬁrst car perform induction obtain returns ﬁnishes fails ﬁnd path asks  hypothesis say  reachableag ∧ linkgj   ∧    agent team line   hypothesis  linkjl returns reachableag   car received agent fails path doesn’t  car infers car knows reachablegl exist hypothesis indicates path  forming reasoning deﬁnition reachable step goes knowledge base retrieves path returns   knows long knows ﬁnishes line   picks  explain reachableag path   promising hypothesis returned agents  stage step  overall problem changed proceeds new query hy  car interested constructing explain potheses tried case fails path     reachableag later through collabora    doesn’t exist during retrieval path bases  tion car able induce path knowledge knowledge base decide request  car remembers car knows   actual link information  reachablegl path communication saving comes three aspects                                                     ijcai                                                    figure  left shows communication costs information transferred associated cilp approach  collaborative path planning middle compares communication costs using cilp approach centralized approach  graph  links different numbers agents right shows communication savings information agent  increases using  agents graphs different sizes    communication link information doesn’t happen left shows increasing communication costs associ  path fully worked keeping track ated proposed cilp approach total number  knows epistemic information  car knows agents arises middle graph compares  thousand nodes ones lead node communication costs using cilp approach  transferred  instead returning generated centralized approach graph  links varying  hypotheses initiator scoring method number agents noticed communication savings  adopted discriminate hypotheses example cilp approach signiﬁcant total num  used variation minimum description length ber agents small number agents increases  mdl metric favor shorter hypotheses using entropy beneﬁt decreases  link terms implementation noticed ﬁnally cost using cilp exceeds central  regardless scoring method used just ized approach similar situation occurs using graphs  returning hypothesis highest score query sizes believe explained terms  initiator makes entire approach incomplete participation agents during solution cilp  fact each agent make assumption problem number agents increases link infor  agents’ knowledge status evaluating hypothesis mation evenly distributed agents each agent  scores assigned reﬂect knowledge solves smaller partial subproblem result each agent  world case suboptimal knowledge makes harder come  hypothesis agent party useful hypotheses consequently communication costs  actually looking generally speaking best override beneﬁt gained induction explore  increase likelihood returning better hypothesis aspect illustrate graph right relationship  earlier attempts having agents progressively returning communication costs partial knowledge repre  starting hypothesis highest score sented “links agent” cilp ap  time hypotheses returned party proach outperforms centralized approach uniformly  satisﬁed                                          different numbers agents graph sizes each agent                                                        roughly speaking  links    experiments analysis  preliminary experimental results shown     sophisticated epistemic reasoning promise ex  huang pearce focusing pairwise commu tend basic techniques presented make  nication costs during interaction agents cost effective previously commented better scoring tech  thorough experiments performed results niques used possible facilitating ex  reported paper analyze effect communication change additional epistemic information lead  costs different numbers agents varying additional savings communication example agents  graph sizes experiments varies   beneﬁt gathering considering hypotheses  varies   experiments involve distribut agent pursuing dis  ing total links randomly agents ran  criminate information source  trials different value using cilp know likely know answer partic  approach compared centralized approach ular query know based prior knowl  terms total communication cost involved measured edge avoid asking particular queries gen  number “terms” transferred centralized approach eral believe performing reasoning epistemic level  involves having agent time transferring play key role tackling problems van der hoek  distributed path information query initiator exe  model accommodates treatment  cuting path ﬁnding algorithm                       reasoning epistemic level using operator    results summarized plotted fig  knowledge base                                                    ijcai                                                    
