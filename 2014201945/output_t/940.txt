                   structurebased variable ordering heuristic sat                                            jinbo huang adnan darwiche                                              science department                                    university california los angeles ca                                               jinbo darwiche cs ucla edu                               abstract                               behavior sat problem recursively decom•                                                                 posed smaller problems solved independently        propose variable ordering heuristic sat         general concept initial sat problem        based structural analysis            decomposable broken independent sub        sat problem show heuristic              problems instantiating certain number variables        used davisputnam sat solver em•             determined structurally putting decom•       ploys conflictdirected backtracking produces         posing set variables ordering leads early        divideandconquer behavior sat            decomposition problem key        problem recursively decomposed smaller            process repeated recursively allowing recur•       problems solved independently dis•           sively decompose sat problem single clauses        cuss implications divideandconquer          key point establish analytically        behavior ability provide structurebased        critical dp solver employ conflictdirected back•       guarantees complexity davisputnam              tracking suggested order recursive decom       sat solvers report integration                                                                  positional effect        heuristic zchaff— stateoftheart           way experimentation incorporated technique        sat solver—showing experimentally signif•         publicly available zchaff program zchaff url        icantly improves performance range bench•         tested original modified programs range        mark problems exhibit structure                     sat benchmarks results indicate significant improve•                                                                 ment speed majority instances                                                                    rest paper structured follows start    introduction                                                 brief review dp solvers section  turn sec•  class boolean satisfiability sat problems    tion  proposed variable ordering heuristic   perpetual researchers areas com•     define formally terms graphical model known   puter science problems potentially      dtree decomposition tree section    exponential complexity fresh techniques continued     integration new heuristic zchaff zchaff url   proposed implemented allowing increasing num•       provide experimental results illustrate effective•  ber previously intractable problems solved rea•  ness consider theoretical analysis proposed   sonable amounts time                                       ordering heuristic section  show                                                                  coupled conflictdirected backtracking proposed or•     existing complete sat solvers based                                                                  dering generates behavior equivalent divide  davisputnam dp procedure davis putnam                                                                   andconquer search algorithm recursively decomposes   davis ct al  formulates sat problem                                                                  given sat problem way single clauses   systematic search problem space variable instanti•                                                                 correspondence allows provide guarantees   ations uses depthfirst search solution various                                                                  complexity resulting search depending structure   techniques employed dp solvers attempt prune                                                                  given sat problem finally close section    search space focus regions promise earlier                                                                  concluding remarks   discovery solution noted   things order variables instantiated great   effect resulting complexity sat algorithm    davisputnam dp search   li anbulagan  example                          start reviewing basic dp search satisfiability      propose new variable ordering heuristic sat       problem customary propositional theory expressed   based structural analysis sat problem    conjunctive normal form cnf recall satisfy   show suggested ordering heuristic used   dp solver employs conflictdirected backtracking        sec bayardo pehoushek  example dy•  silva sakallah  produces divideandconquer   namic decomposition used context model counting       satisfiability                                                                                                        algorithm  satthcory       inconsistent clause      return false unsatisfiablc      uninstantiated variable      return true satisfiable      select uninstantiated variable        return satcvtrue satcvfalse     propositional theory cnf each clauses simultane•  ously satisfied use   denote target theory having clauses denotes           figure  dtree fourclause cnf   zth clause write repre•  sent theory obtained replacing occurrences vari•  able true false theory algorithm  provides   disjoint sets uninstantiated variables    recursive description basic dp algorithm            com•  omits use unit propagation discuss later   pletely independent subproblems ordering set vari•     algorithm implemented iteratively instead  ables good strategy   recursively explores search space instantiat• point obtained constraint order   ing variables time instantiations variables variables processed followed     decisions corresponding variables decision variables  note each re•  each decisions pushed decision stack  cursively broken similar fashion variables   theory updated reflect new variable assignments partitioned sequence groups serves   inconsistency discovered theory goes    proposed variable ordering each groups   stack decision variable  algorithm free use variable order   tried ways flips proceeds therefrom case   generate variable group sequence need   previous decision variables tried ways de•  specify theory partitioned subtheories   clares theory unsatisfiablc theory declared sat•    subtheories turn partitioned   isfiable variables successfully instantiated graphical model known dtree serves nicely   clauses subsumed satisfied current   purpose allows offer guarantees   possibly partial variable assignment                        complexity resulting search darwiche       note need attempt recursive calls dtree decomposition tree cnf binary   line  case calls succeeds opportu•  tree leaves correspond clauses fig•  nity optimization try promising disjunct ure  each internal node represents subset corre•  line  note did specify choose sponding leaves root particular rep•  variable line  fact different chain decisions resents original theory tree naturally induces   lead remarkable difference complexity li    recursive decomposition scheme partitioning theory   anbulagan                                           parts represented nodes children      section variable ordering heuris•   number properties defined nodes   tic based structural analysis sat problem      dtree darwiche hopkins    provide experimental theoretical analysis   heuristic later sections                                   definition  variables internal dtree node                                                                  set variables mentioned clauses represented    variable group ordering                                    leaves node variables leaf node set                                                                  variables mentioned clause represents   recall target propositional   theory cnf alluded desire decompos•      definition  cutset internal dtree node  ing disconnected components simply      tersection childrens variables minus ancestors   split arbitrary subsets sub          cutsets cutset leaf node variables minus   theories general variables common     ancestors cutsets   qualify disconnected components                                                                    figure  depicts dtree fourclause cnf theory     overcome difficulty propose following                                                                  clauses listed corresponding   method let denote sets variables men•                                                                 leaves cutset shown inside each node   tioned ci cr respectively start dp search   cnf insist make decisions variables      assume leftright order choice orders             stage unsatisfiable declared during   affords opportunity applying heuristics   process variables          scope paper     point instantiated                         cutset usually defined leaf node dtree     observe resulting subtheories extend definition convenience                                                                                                            satisfiability    recall each dtree node corresponds  benchmarks choice sat solver zchaft zchaft   cnf theory variables dtree node simply     url ranked recent   sat   variables cnf theory cutset   competitions satex url   represents variables need instantiated additions modifications zchaft consist    subtheories disconnected assuming cut•   package implements dtree generation  separate   sets ts ancestors instantiated following   chunk code extracts variable group ordering   concepts help formally state proposed heuristic   dtree  change zchaft code pro•  ordering variables                                        gram given variable group ordering second input   definition  variable group ordering set parti•  cnf forced select variables   tion variables ordered sequence subsets       group group time following specified                                                                  group order variable group zchaff left      respect set variables figure  follow• use heuristic known variable state inde•  ing possible variable group ordering                     pendent decaying sum decision heuristic moskewicz et ai        dictates variables consid•           june  new code form addon re•  ered note strict                     placement files compile original zchaft package   variable ordering special case variable group ordering produce modified program available download   groups size                             httpreasoningcsuclaedudtreesat   definition  variable group ordering vgo              experiments carried redhat   induced dtree obtained recursively fol         mhz cpu mb memory origi•  lows output cutset root output vgo left nal zchaft program modified version   child output vgo right child discard sets dtreezchaft run sets cnfs re•                                                                 port table  comparative performance      proposed variable ordering scheme stated                                                                  programs note instances solved   simply variable group ordering induced dtree                                                                  programs included instances dtree  variable group ordering induced dtree figure                                                                   zchaft succeeded zchaft ran memory reported   example                                                                   table  reverse case did happen given test      far discussed dtrees con•                                                                 suite benchmarks aloul url   structed obviously distinct dtrees                                                                  satlb website satlib url   nontrivial cnf theory reduce complexity sat   algorithm adopted heuristic calls relatively  times shown seconds each represent total   balanced dtrees small cutsets good balance ensures   time instances group generated dtrees   nearlogarithmic tree height allows recursive de•   cnf chose smaller width during   composition finish faster smaller cutsets lead min• generation each dtree repeated each hypergraph par•  imizing number cases need considered     titioning step twice chose smaller cut reported   each decomposition strategies   dtree time includes time obtain dtree   help reduce overall complexity                            compute variable group ordering adding dtree      generate dtrees properties employ     time dtreezchaft time gives actual running   hypergraph partitioning technique described     time dtreezchaft compared   darwiche hopkins  hypergraph cnf         original zchaft figures bold highlight benchmarks   theory constructed having node each clause    proposed ordering lead improvment scores   having hyperedge each variable connect•       singleinstance basis shown column con•  ing nodes clauses mention variable hyper•  sidering groups observe dtreezchaft leads   graph partitioning tool recursively partitions set nodes improvement seven groups factor   balanced parts attempting minimize       considering individual instances   number edges small number crossing edges       leads improvement majority de•  translates small number variables shared     tailed picture included table  individual results   sets clauses resulting dtree expected  select number typical instances each group   relatively small cutsets degree balance con•     like point cnfs rel•  trolled specifying called balance factor    atively hard instances zchaft—they require   used balance factor  experiments     seconds instances zchaft finishes flash—   tells program let ratio partitions til parl uf   size large small exceed reader                   pigeonhole—our proposed ordering helpful                                                                  generating dtree time   refered darwiche hopkins  detailed                                                                  needed plain zchaft solve sat problem   description technique                                                                  finally complete picture table  reports instances                                                                  included tables zchaft ran    experimental results                                         memory dtreezchaft succeeded note   evaluate effectiveness proposed ordering tech•    nique decided integrate existing sat solver     thc notion width captures cutset sizes degree   improve performance variety    balance formal definition darwiche        satisfiability                                                                                                                                           table  overall results benchmarks                  benchmark              satunsat    dtrce dtreezchaff zchaff  improved instances                                                      time     time       time                  pigeonhole              unsat                                                fpgaunsat               unsat                                                  urq                  unsat                                                    uuf               unsat                                               uf                 sat                                               fpgasat                sat                                                 difpa                sat                                              difpw                 sat                                               iil                 sat                                                      par                 sat                                                                                                algorithm  satthcory  dtreenode             table  instances zchaff failed                                                            inconsistent clause         instance                   dtree dtrcezchaff      return                                     time      time                   hole                               hole                              return true      fpgal lunsrcr                       uninstantiated variable          urq                                  return sat           urq                                  select uninstantiated variable tcutset          urq                                  return           urq                             algorithm  sattheory  dtreenode               given cnf corresponding dtree recall each      inconsistent clause      dtree node corresponds subset cnf                                                          use  refer set clauses cnf      return false      null                                 corresponding node algorithm  takes inputs      return true                                       cnf corresponding dtree rooted node                                                     following invariant maintained algorithm clauses      instantiations                     disconnected clauses true triv•     ially algorithm  remains true                                                          recursive calls cutsets associated ancestors node      return true                                       instantiated time recursive      return false                                                          algorithm  decomposes clauses  setting vari•                                                         ables cutset node value specifically                                                          clauses decomposed smaller    total running time experiments  weeks                                                          sets andwhich solved inde•                                                         pendently sets clauses solved success•    decompositional semantics heuristic          fully instantiation original cnf declared      show section proposed variable satisfiable declared unsatisfiable    ordering heuristic integrated dp solver employs note cutset variables need instanti•   conflictdirected backtracking zchaff produces ated simultaneously given line  alogirthm —    divideandconquer behavior solver recursively instantiating variables time leads variant    breaks sat problem smaller subproblems algorithm  order variables instantiated    solved independently specifically algorithm consistent group ordering    solver using dp search method show em• induced given dtree formalized definition    ulates algorithm  explicitly uses dtree realize fact key difference algorithm     divideandconquer search significance cor• dp solver uses dtree group ordering   respondence offer structurebased guar• cutset variables dtree node instantiated algo•   antees complexity dp solvers use orders rithm  spawn independent computations    guarantees usually restricted dp solvers dp solver sequence   based resolution davis putnam  dechter computations potentially creating dependence   rish  influential sat given contradiction reached solving   intractable space complexity davis putnam  second problem sequence search   davis et al                                     backtrack variables problem                                                                                               satisfiability                                             table  esults selec instances                            instance                      satunsat       dtree   dtreezchaff   zchaff                                                                        time     time    time                             hole                   unsat                                                             hole                  unsat                                                            hole                  unsat                                                                                  unsat                                                                                 unsat                                                                                   unsat                                                        urq                    unsat                                                            urq                    unsat                                                             urq                    unsat                                                        uuf                unsat                                                        uu                 unsat                                                         uuf                 unsat                                                       uuf                unsat                                                        uuf                unsat                                                           uf                  sat                                                            uf                  sat                                                           uf                  sat                                                            uf                  sat                                                            uf                  sat                                                       fpgalsatrcr               sat                                                         fpgalsatrcr               sat                                                      fpgalsatrcr               sat                                                      difparrrcr           sat                                                     difparrrcr           sat                                                       difparrjcr           sat                                                   difpwalrcr           sat                                                     difpwalrcr           sat                                                      difpwalrcr            sat                                                        iilal                 sat                                                            par                  sat                                         eliminating benefit decomposition discuss  tiating variables start solving second prob•   impossible happen solver employs    lem involving variables realize problem    conflictdirected backtracking zchaff specifically satisfiable current settings variables    show case solver effectively con• conflictdirected backtracking guaranteed backtrack    duct independent searches subproblems corre•      variables clever realize    sponding combination                   variables contributing contradic•   dp solver ordering heuristic conflictdirected tion instead conflictdirected backtracking guaranteed    backtracking corresponds iterative implementation    immediately backtrack variable    divideandconquer search conducted algorithm        problems sequenced resulting behav•                                                                 ior similar line  algorithm       start offering brief description conflictdirected present important implication cor•   nonchronological backtracking refer reader silva respondence just established  suppose cnf    sakallah  details dp solver vari• connectivity graph known treewidth    able instantiated decision implication     known dtree exist height    through unit propagation case assignments log number clauses ev•  previously causing clause unit      ery cutset size darwiche  known    recorded causes implication recordings   running divideandconquer algorithm algo•   enable backward construction implication graph   rithm  dtree lead time complexity    conflict contradiction occurs careful analysis                   complexity apply dp    implication graph conflictdirected backtracking chooses   solver uses group ordering derived men   decision variable backtracking    causes conflict eliminated key property                                                                     connectivity graph obtained including vertex   form backtracking suppose in•   each cnf variable adding edge    stantiating variables split sat problem    vertices iff variables appear clause treewidth    independent pieces involving variables     positive integer measures graph connectivity connected    involving variables vr solve problem instan graph smaller treewidth trees treewidth        satisfiability                                                                                                       
