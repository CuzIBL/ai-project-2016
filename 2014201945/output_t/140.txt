             diagnosers diagnosability           succinct transition systems                                                jussi rintanen                       national ict australia australian national university                                            canberra australia                          abstract                          captured representing terms state variables                                                        consider compact representation state vari      reasoning knowledge agent                                                        ables results show exponentially compact      important problem areas ai exam                                                        representation leads worst case corresponding      ple diagnosis basic question                                                        crease complexity      possible diagnose                                                          structure paper follows section       possible know faulty                                                        ﬁne transition systems succinct transition systems sec      havior occurred paper investigate                                                        tion  deﬁnes framework diagnosers diagnosability      complexity diagnosability problem                                                        sampath et al insectionwepresentthemainre      size automata perform diagnosis                                                        sults establish complexity diagnosability testing      algorithms testing diagnosability section  derive tight upper lower bounds      polynomial time number states sys worstcase size smallest diagnosers section  discusses      tem succinct representations   related work concludes paper      exponentially smaller state space      diagnosability problem    preliminaries      sequently exptime show upper      bound tight decision problem deﬁne transition systems following sampath et al       fact pspacecomplete      online diagnosis carried diagnosers deﬁnition  transition systems transition                                                              x Σ  Σ  Σ δs       automata recognize faulty behavior tuple                    show diagnosers worst case      •  set states      size exponential number states                                                          • Σo set observable events      explicit succinct representa                                                          • Σ      tions consequence diagnoser hav      set unobservable events      ing maintain beliefs state • Σf set failure events                                                          • δ ⊆ × Σo ∪ Σu ∪ Σf  × transition relation    introduction                                         • ∈ initial state  faults dynamic systems diagnosed exter  nal diagnoser observes behavior infers initially state sequence events  occurrence failure events sampath et al een− takes place goes through  main problem online diagnosis construction diag states sssn sieisi ∈ δ ∈  nosers deterministic ﬁnite automata track n−   possible state basis obser  x Σo Σu Σf δs een− ase  vations detect occurrence faults existing algo quence events states ssn  rithms constructing diagnosers exponential running sieisi ∈ δ ∈n−   times construct diagnosers exponential size state sequence unobservable failure  work investigate inherent complexity diagnosers events observed detection failures based  complexity constructing giving tight upper sequence observable events  lower bounds sizes smallest diagnosers basic assumption sampath et al   time takes construct diagnosers results show inﬁnite event sequences exclusively consisting  asymptotic worstcase time memory consumption unobservable events  existing algorithms improved    work based framework proposed sampath assumption  cycle transition graph  et al  systems exhibit regularities best consisting unobservable events                                                    ijcai                                                       succinct representation                     diagnosability deﬁned possibility detect  state spaces systems highly regular occurrence failure event continuation event  transition relations events represented com sequence includes failure event future time  pactly terms changes values state variables point observationally distinguishable event se  makes possible practically represent large sys quence does include failure event  tems given set state variables state deﬁned  valuation restrict twovalued boolean state deﬁnition  diagnosability transition   variables general different val x Σo Σu Σf δs diagnosable iff integer  ues transition relation associated event ≥  sequence σ events ends                                                                                           expressed propositional formula theseta failure event sequences σ  σσ σ                                                                 consists propositional variables ∈ awhen πσ ≥d πσπσ σ includes failure  event takes place variables represent old val event                                       a  ues state variables variables represent        corresponding new values example given state variables constant called delay failures   event makes true does change detected immediately taken place  value expressed formula a ∧ ↔ b lay expresses events observed  arbitrary binary relation valuations ex certain failure taken place  pressed propositional formula suggests succinct diagnosable important  representation transition systems terms state variables trying construct diagnoser diagnoser  formulae                                         terministic ﬁnite automaton recognizes sequences ob                                                        servable events correspond sequences events  deﬁnition  succinct transition systems succinct include failure event diagnosable  transition tuple a Σo Σu Σf δs diagnoser exists    • ﬁnite set state variables                                                        deﬁnition  diagnoser q Σoγzy    • Σo set observable events                                                          • set states unrelated transition    • Σu set unobservable events                                                          • Σo set observable events    • Σf set failure events                                                          • γ  × Σo → partial function    • δ Σo∪Σu∪Σf   →lassigns each event propositional                             formula ∪ represents binary relation • ∈ initial state diagnoser      set states                           •  ⊆ set accepting states    • initial state valuation                                                          sequence een− observable events takes di    types succinct representations exam agnoser through sequence zzn states  ple based petri nets holloway et al howeverthe γzieizi execution zzn accepting  petri net representation translated logic repre zn ∈  accept means detect failure event  sentation quite easily assuming ﬁnite state petri nets    safety property vice versa logic represen deﬁnition  q Σoγzy diagnoser   tation general                               x Σo Σu Σf δs delay dif    succinct transition mapped transi                                                           sequence eenenem events  tion follows                                                            een−⊆Σo  ∪ Σu en ∈                    a Σ  Σ  Σ δs                  Σf  πenem≤d preﬁx  deﬁnition  let               succinct      πe     transition deﬁne transition rt                 diagnoser ac                                                           cepts  x Σo Σu Σf δ s    set valuations             sequence eem events diagnoser                                                         accepts πeem ∈m−    δ   ∈ x×Σo ∪Σu ∪Σf ×xs∪v ∈                                                           en  ∈  Σf  een−⊆Σo     ∪  Σu        × ∈  δe                                                            πenem≤d    diagnosability                                       deﬁne diagnosers succinct transition systems  sampath et al  deﬁnition diagnosability analogously through reduction transition systems  adapt notation                         cases ﬁnite upper bound long    let σ ∈ Σo ∪ Σu ∪ Σf ∗ sequence events failure detected  deﬁne projection πσ observable events recursively diagnosable delay bounded  follows                π                                  example  unbounded delay consider transition               πeσπσ      ∈ Σo                figure  starting state events possi               πeσeπσ     ∈ Σo                ble leftmost failure event                                                    ijcai                                                                                                             si  sj sˆi ˆsj                                                    entails pair si sˆi occurs                                                    sequence entails length sequences                                                        delay −x                                                                                   x−x                                                          bound tightened    noticing                                                        si ˆsj sˆi  sjor                                                        words order states pairs does           figure  delay arbitrarily long      matter                                                                                                                                                              complexity testing diagnosability                                                      jiang et al  shown diagnosability testing            aaaaaa                                      section show complexity upper                                                        bound tight results show exptime                                                      upper bound diagnosability problem succinct tran                                                        sition systems implied result jiang et al tight                                                                        diagnosable inﬁnite event                                                        sequences exactly observable events   figure  delay quadratic number states contains failure event                                                        condition fulﬁlled continuation                                                        event sequence failure distinguishable event  unbounded number unobservable events place sequences failure  failure diagnosed occurrence ob jiang et al  showed test ﬁni  servable event                                    tary ﬁnite state systems poly                                                        nomial time basic construction product transition    bounded delay quadratic number states called twin plant states                                                        pairs sˆ states original events repre  example  quadratic delay transition sys sent unobservable events components  tems quadratic delay depicted figure  grastien state pairs observable events shared compo                                                   sequences σ σ πσπσ  nents failure events place ﬁrst component  aaaaabaaaacaaadaaea  ﬁrst begins failure event each state pair event sequence                                      second does sequence σ continue ss sˆ includes failure event  σ generalized number ﬁrst component nonempty event sequence  states delay −   −   ···     sˆ pair inﬁnite event sequences witnessing non  n−n−                         −   number states  diagnosability exists                                                          candidate states sˆ tarjan’s strongly    upper bound bounded delays      nected components scc algorithm tarjan                                                        node contained nontrivial scc cycle contained  theorem  transition states sys scc ﬁnding sccs diagnosability test                                                                       ≤  −x        duces ﬁnding path through failure event ss  tem diagnosable delay                 sˆ  number states                                  nontrivial scc path exists                                                        diagnosable    proof   assume   sese ······sm−em smem       constructing twin plant quadratic time    sˆesˆe ······sˆm−em sˆmeˆm equally long se number states finding sccs linear time  quences observable events interleaved states number states twin plant ﬁnding path non  distinguished step trivial scc through failure event polynomial  ﬁrst contains unobservable failure event time diagnosability problem complexity  second does unobservable events states class complexity upper bound tight  immediately preceding observable event deﬁne language nondiag consists  included sequences              nondiagnosable transition systems suitable repre    sake argument assume pairs sentation  states si sˆi sj sˆj ji si  sj sˆi ˆsj ﬁrst result shows determining nondiagnosability  sequence eiej− events pairs using logarithmic space nondeter  states repeated arbitrarily times ministic turing machine decision problem  pair longer sequences events distinguish sociated nondiag nlogspace complex  able event violate assump ity class included known  tion delay bounded                       clusion proper johnson                                                     ijcai                                                     theorem  nondiag nlogspace                  proof reduce halting problem deterministic tur                                                        ing machines polynomial space bound succinct  proof proof similar nlogspace membership diagnosability problem showing pspacehard  proof testing existence path nodes reduction like reductions  graph nondeterministic algorithm takes log succinct graph reachability problems bylander  arithmic space alorithm’s data structure does represent turing machine conﬁgurations including  constant size binary counter counting contents polynomially long tape terms poly               number states cycle detected nomial number state variables represent  ptime proof jiang et al  algorithm transitions turing machine terms formula δe                    starts pair   initial states nondetermin represents unobservable event  istically chooses event successor state each mem construct transition diagnosable  ber pair event second state turing machine accepts failure event  failure observable event shared unobservable nonfailure event nf takes place  components state pair counter counts steps nonfailure case followed inﬁnite sequence  number steps including failure event events  failure case simulation turing ma                                 sˆ  algorithm reaches starting state cycle chine follows turing machine accepts event                                      sˆ  sequence events leading nondeter takes place makes possible distinguish  ministically chosen turing machine accepts cycle failure nonfailure cases diagnosable                                     completed counter reaches  turing ma turing machine accepts                                chine rejects counter reaches completing given turing machine deﬁne succinct transition                                                     cycle encountering failure event                a Σo Σu Σf δs                                                          •  consists state variables needed encod    simple proof nlogspacehardness      ing executions turing machine bound                                                            number used tape cells example bylan  theorem  nondiag nlogspacehard                    der  state variable indicates                                                            failure taken place indicates exe  proof sketch deterministic logarithmic space reduction                                                            cution started  nlogspacecomplete problem testing  node directed graph reachable node • Σo    Σu  nf Σf  fand                                                          •  johnson                                                                                                                                                                                let  ve directed graph existence    δnfi  ∧¬f   ∧¬i  ∧         ↔               ∈    ∈  path         tested reduction                              a∈afi  logarithmic space proceeds reading input graph                                                                                          outputting corresponding transition states   δ  ∧  ∧¬i ∧       ↔  a  nodes edges correspond observ         able event initial state transition sthe                    a∈afi  transition additionally failure event                                                                                                         observable event nf place state tboth δ  ¬i ∧¬i ∧f ∧ ∧¬a ∧ tm ∨ ¬f ∧¬f   events lead arbitrary state nowthetran                                                          tm formula simulating change  sition diagnosable reachable turing machine conﬁguration execution step  construction transition takes logarith                                                             state variable represents accepting inter  mic space actually constant space                 nal state turing machine turing machine                                                            rejects continues event  indeﬁnitely    similarly nondiag      deﬁne   language       turing machine accepts event   succinctnondiag consists succinct transition    takes place  systems diagnosable                                           δ  ∧                                                          •  theorem  succinctnondiag pspace                  valuation encodes initial conﬁguration                                                            turing machine sets si  proof  sketch prove npspace     member                                                       ship similarly theorem  use equality  pspacenpspace alternatively deter   succinct diagnosability problem pspace  ministic algorithm ﬁnding path graph polyno complete like pathﬁnding problems suc  mial recursion depth space consumption following                                                       cinctly represented graphs succinct streachability prob  lander                                         lem lozano balc´azar  plan existence prob                                                        lem ai planning bylander  suggests    pspace upper bound shown tight    similar approaches solving diagnosability problem                                                        example reduction propositional satisﬁability problem  theorem  succinctnondiag pspacehard          sat rintanen grastien                                                     ijcai                                                       size diagnosers                                 assumption  bounded constant ≤x                                                          graph gt  nodes gt  num  section show assuming sufﬁciently restricted                                                        ber edges high  deﬁnition diagnosers diagnosers necessar  ily quite large                                                     σ                                    size diagnosers strongly depends complex lemma  let sequence events                                                         starting initial state exactly failure  computation allowed perform complex                                            computation smaller diagnoser events occur observable event  diagnosers turing machines constant size state immediately preceded unob  need memory storing description servable event preceded observable event                                                        ﬁrst state sequence πσ gt  leads  set states executing diagnoser  ∅  ∈  expensive realtime online diagnosis                         section focus diagnosers ﬁnite au                                         σ  tomata process each observation constant time lemma  let initial state let                                                        sequence observable events σ leads gt                                                          ∅                     ∈    upper bounds size                                                                                                  sequence σ events σ  πσ σ                                                                                    use notion belief states derive upper bound leads σ includes exactly failure  size smallest diagnosers basic construct similar events  used sampath et al  size smallest  diagnosers follows construct sampath et al finally show gt  diagnoser accepting    let  x Σo Σu Σf δs transition let states bof diagnoser include known past  gt ve   graph set nodes  failure sf∈b   ∅      Σf  x×   set sets ⊆ × Σf pairs ∈       Σ                                    ×    labelled edge beb  ∈ theorem  let  x Σo Σu Σf δs  ∈ b ∈                 diagnosable delay                                                   • ∈ Σf  ∪es ∈ bs  ∈  let σ  een sequence events starting      δor                                                 assume en ∈ Σf  sequence                                                                                                                                                      events eem πeem     • ∈ Σo ∪ Σu  fs ∈ bs  ∈                                                                               eeneem sequence events      δ                                                                                                                                                  ≤  πeenee m  leads    belief state ∈ means possible gt  ∅ en ∈ sf∈b  current state history includes exactly                                                           sequence events eem path  failure events note possible ∈                                                          πeem gt  leads ∅   ∈                                                                                                  ∈ sf∈b fthene ∈eem    initial node graph bi  ∅                                                 Σf                                        Σf                                                         number belief states ⊆ ×           proof  σ  eem πσ                                                                   number states        σσ event sequence letbbnm                                                                                        graph compactly encodes states belief states the path πσσ  gt                                                                   en   ∈             reached given event sequence failure events assume      sf∈bnm   lemma                                                                                                         sequence starting initial node follow edges sequence σ events πσσσ                               ∈                                     corresponding events   node    en does occur σσ  contradicts fact                                       reached possible reach event diagnosable delay sequences                                                                                                sequence includes failure events        σ   σσ σ events πσ ≥d    diagnoser observe unobservable events πσπσ σ includes event e                          construct second graph represents diagnoser’s en ∈                  en ∈                                                                          sf∈bnm          sf∈bnm  view possible current states failure histories                                                          ≤   terms observable events construction takes poly                                                                            assume    sequence events  nomial time size anypath                         πe              ∅                                         path   m     leads       observable   unobserv                   ∈                                                            sf∈b   able represented edge label                                                                                                        σ  πeem                   given gt ve  deﬁne gt ve   follows   let                 let                                                                                      edge beb ∈ e           observable event let state immediately                                                        following em letσ  πeem πeemby    • ∈ Σo                                                  ∈     Σ   ∩e                                                         lemma                                                                             ∈         ∈eem ⊆eem         •      bi bbm  nodes      sf∈b      gt  ∈m                                                                                path eene bi ≥    let gt ve    deﬁne diagnoser cdt       een⊆Σu  ∪ Σf                             vΣoδs ∅a                                                    ijcai                                                     
