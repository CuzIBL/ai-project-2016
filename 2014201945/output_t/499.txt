          proactive    algorithms     scheduling       probabilistic    durations∗                       christopher  beck                              nic wilson                 department  mechanical               cork  constraint computation   centre                     industrial engineering                 department    science                 university toronto canada              university college  cork ireland                     jcbmieutorontoca                           nwilsoncuccie                        abstract                          probabilistic makespan solutions iii demonstrated                                                        method introduced beck  wilson      proactive scheduling seeks generate high quality                                                        corporation uncertainty deterministic problems      solutions despite execution time uncertainty build                                                        crease correlation deterministic probabilis      ing work beck wilson                                                         tic makespan providing explanation strong perfor      duct empirical study number algorithms                                                        mance      job shop scheduling problem proba                                                          section brieﬂy review previous work      bilistic durations main contributions                                                        search algorithms investigated paper deﬁned      paper introduction empirical analy                                                        section  section  presents experiments results      sis novel constraintbased search technique                                                        section  present conclusions      applied probabilistic scheduling      problems introduction empirical analysis      number deterministic ﬁltering algorithms  background      probabilistic job shop scheduling identiﬁ job shop scheduling problem jsp consists set      cation number problem characteristics activities each positive integervalued duration di      contribute algorithm performance              partitioned jobs each job associated                                                        total ordering set activities each activity speci                                                        ﬁes resource execute interruption    introduction                                       activities require resource overlap  classical models scheduling assume information execution represent formally partition  known static faced uncertainty proactive resource sets solution consists total ordering  scheduling techniques seek incorporate models each resource set union resource  certainty offline problem solving build solu job orderings acyclic relation makespan  tions achieve satisfactory level performance solution difference minimum start time  execution time beck wilson  addressed prob maximum end time activities finding solu  lem job shop scheduling probabilistic durations tion minimum makespan nphard garey john  styles algorithm using monte carlo simulation son  independent probabilistic job shop schedul  evaluate probabilistic makespan solutions paper ing problem jsp duration di associated  builds work making following contributions activity ai ∈ positive integervalued random vari  novel constraintbased search technique introduced able random variables fully independent di                                                                                                      performs series complete branchandbound searches expected value µi  variance σi  var  highly constrained problem models models gradu makespan makes solution ran  ally relaxed cost best solution model dom variable ﬁx degree conﬁdence set  previous searches used upper bound exper   experiments minimum probabilistic  imental results show algorithm performs makespan ds solution smallest value  existing branchandbound style search small prob probability jobs ﬁnish  lems signiﬁcantly outperforms larger problems ii ds  mind  prmakes ≤ ≥  number novel deterministic ﬁltering algorithms pre optimal probabilistic makespan minimum ds  sented larger problems algorithms outperform solutions  algorithms tested performance affected beck  wilson introduce analytical model develop  following factors quality deterministic solu main results demonstrated monte carlo  tions correlation deterministic simulation used ﬁnd probabilistic makespan    ∗this material based works supported science solution ﬁnd lower bound probabilistic  foundation ireland grant pic ilog makespan partial solution second shown  sa                                                   terministic jsp instance constructed probabilistic jsp instance setting duration di each activity bbdql  µiqσi appropriate choice nonnegative returns solution lowest probabilistic makespan                                                            ∗   ∗  optimal makespan deterministic instance lower    ← ﬁndfirstbbsimleaves∞   bound optimal probabilistic makespan corre  ←  sponding probabilistic jsp three algorithms deﬁned  ≥  timedout                                                                                            ∗  branchandbound approach monte carlo simulation  ← ﬁndoptbbsimleavesd   used each node ﬁnd lower bound internal nodes   nil                                                                 ∗       ∗  upper bound leaf node probabilistic makespan  ← ←  deterministic ﬁltering algorithm consisting using end  constraintbased search tabu search ﬁnd series  ← − qdec  increasingly good deterministic solutions each end                                                                 ∗  simulated empirical results indicated ﬁrst algorithm  return  able ﬁnd optimal solutions small prob  lems mediumsized problems constraintbased           algorithm  bbdql  ﬁltering algorithm best solutions largest  problems tabubased ﬁltering algorithm performed best point overall search used bbn  choosing   led stronger performance ﬁlter upper bound subsequent search  ing algorithms empirically founded explanations algorithm  presents pseudocode basic algorithm  provided explain differences problem solving make use functions deﬁned using pseu  formance                                             docode ﬁndfirstbbsimleavesc creates jsp                                                        activity durations deﬁned based value    algorithms   probabilistic jsp                 ducts branchandbound search monte carlo sim  section algorithms solving ulation used each leaf node standard constraint  probabilistic job shop scheduling problem            propagation used interior nodes ﬁrst solution                                                        probabilistic makespan    approximately  complete  branchandbound        returned ﬁndoptbbsimleavesc does                                                        ﬁndfirstbbsimleavesc solution lowest  implemented branchandbound algorithm identical probabilistic makespan returned ﬁrst  beck  wilson use stronger heuristics solution nil value returned unless  make decisions sequence activities each value low deterministic makespan  source set section  refer algorithm lower bound probabilistic makespan function does  bbn  performs branchandbound simulation necessarily return globally optimal solution ﬁnd  each node                                            starting solution   serve initial upper bound                                                        probabilistic makespan practice bbdql run    iterative descending bound search                maximum cpu  time   reached  setting activity durations based value ensures time limit algorithm approximately complete  lower bound probabilistic makespan use stan refer algorithm bbdql does series  dard constraint propagation deterministic durations branchandbound searches descending values  implicitly calculate lower bound each internal node simulation used leaves tree  each leaf node simulation used bbn ﬁnd  probabilistic makespan parameterize algo  branchandbound filtering algorithms  rithm ﬁxed value perform repeated tree searches                                                        preliminary experiments branchandbound ﬁltering                                            descending value starting high value  algorithm presented beck  wilson showed signiﬁ  begin tree search ﬁrst leaf reached                                                        simulation early search  simulation used ﬁnd ds  likely                                                   upper bound deterministic makespan rel                           minimum makespan  corresponding deter atively high solutions little chance  ministic problem larger ds  en                                                      optimal probabilistic solution deterministic  force  ≤ ds  estimating ds  through simulation                                                solution poor present constraintbased ﬁlter                                            causes search backtrack interior node  high ing algorithms seek avoid wasted simulations  tree node dqsi ≤ dse si set  solutions subtree node dqsi lower  bound deterministic makespan solutions based branchandbound timed better solution simple  standard constraint propagation high values method spend ﬁxed cpu time tinitial ﬁnd                                                                  ∗  commonly observe nodes meet solution  low deterministic makespan dinitial  criterion search space quickly exhausted ing ﬁxed value constraintbased search search  decrement value  start new tree restarted using value using dinitial  search eventually quickly reach value upper bound deterministic makespan  exists solution dqse ≤ dse solution dqs ≤ dinitial simulation  probabilistic makespan best solution run evaluate probabilistic makespan solution  bbtbsq                                           bbibsq    returns solution lowest probabilistic makespan returns solution smallest probabilistic makespan      ∗                                                     ∗    dinitial ← ﬁndoptbb∞ tinitial            dinitial ← ﬁndoptbb∞ −       ∗                                                     ∗            ∗    ←  ∞                                               ←  simulates    termination criteria unmet timedout  ←       ← ﬁndnextbbdinitial tremaining      timedout                ← simulates                                     termination criteria unmet               ∗                                                 dq ← ﬁndnextbb           ∗       ∗               ←  ←                                        dinitial ×   tremaining       end                                                      ← simulates                                                                         ∗    end                                                                   ∗                                                          ∗       ∗   return                                                       ←  ←                             bbtbs                            end                 algorithm                                  end                                                           ←                                                            end  lowest probabilistic makespan returned ei    ∗  ther entire tree searched maximum  return  allowed cpu time expired algorithm  contains pseu             algorithm  bbibs  docode approach    make use number functions ulated grow unreasonably large                                    ﬁned pseudocode ﬁndoptbb    creates jsp  treat algorithm practically incom                                    activity durations deﬁned based conducts plete refer algorithm bbibs branch                                         terministic branchandbound search cpu seconds andbounditerativebest solution  using upper bound makespan search  tree exhausted timelimit reached best solution  local search filtering algorithms  makespan returned simula experiment local search ﬁltering algorithms  tion ﬁndnextbbc produces sequence analogous constraintbased algorithms  solutions solution each time called deter tabu search used place constraintbased search  ministic makespan equal problem  deﬁned using value cpu time limit  solutions produced leaves bb search tree tabu timed better solution ﬁxed ﬁxed  order encountered algorithm value does cpu time tinitial solution lowest determinis  change given cpu time algorithm evalu tic makespan dinitial possible sought search  ate probabilistic makespan solutions deter restarted solution                                                        terministic makespan dqs ≤ dinitial simulation used  ministic makespan equal dinitial finally  simulates runs monte carlo simulation solution evaluate probabilistic makespan solution  probabilistic makespan returned               lowest probabilistic makespan returned pseu    algorithm called bbtbs branchandbound docode tabutbs bbtbs  timed better solution algorithm complete algorithm  following changes function  guarantee optimal probabilistic solution ﬁndnexttabuc replaces ﬁndnextbbc pro  deterministic makespan       duces sequence solutions deterministic makespan                                         initial        ﬁndbesttabuc function replaces                                                        ﬁndoptbbc tabu search run cpu sec  branchandbound  iterative best solution ex  onds solution lowest deterministic makespan  treme ﬁltering algorithm ﬁrst ﬁnds optimal deterministic returned algorithm tabutbs  solution uses ﬁlter choosing solutions tabutimed better solution  simulate using ﬁxed value solution optimal                         ∗  deterministic makespan dq  simulated tabu iterative best solution core tabu search imple  execute series iterations beginning   mentation does necessarily use entire cpu time  each iteration solutions se deterministic makespan create iterative tabubased solver             ∗  dqse ≤ dq ×   simulated probabilistic jsp similar bbibs ﬁrst phase  lowest probabilistic makespan returned opti using overall time limit second tabu search  mal deterministic solution cpu used ﬁnd good deterministic solution based ﬁxed  time limit best deterministic solution simulated value solution simulated remaining time  returned simulation algorithm  spent generating solutions deterministic makespan  presents pseudocode                              ﬁxed percentage initial solution’s determin    algorithm theoretically complete large istic makespan bbibs iterations run  cost bound greater deterministic increasing value starting   each iteration solu  makespan activity permutations sim tions tabu search deterministic makespanare   initial deterministic makespan                                                                                                                    σ  simulated solution lowest probabilistic              qq   paverageai∈π                                                                                                                                                √n          √n  average   σi  makespan returned algorithm termed tabuibs                                   ai∈π  tabuiterativebest search pseudocode al  gorithm bbibs algorithm  table  qvalues used following beck  wilson  substitutions tabutbs   number jobs      core algorithm  details                                                                                                 branchandbound algorithms described use texture makespan algorithm  runs lb                                                                                                    based heuristics beck fox  decide lower bound probabilistic makespan                                                                        ×      pair activities sequence sequence try ﬁrst problems  lb solving                                                                                              constraint propagation used bb algorithms terministic problems optimality using  durations                                                                                              ×   bbn use temporal propagation timetables section  beck wilson   prob                                                                                                         le pape et al  edgeﬁnder nuijten  lems optimal solutions lb  balance constraint laborie                    values represent best deterministic solutions    tabu search used beck  wilson values true lower bound  tsab algorithm nowicki smutnicki     hardware used experiments ghz pen                                                        tium   main memory running linux redhat                                                         algorithms implemented using ilog scheduler     empirical   investigations  empirical investigations aim evaluate investigate  results  performance algorithms particular inter  ested algorithm scaling problem size uncertainty table  presents results experiment each cell  level usefulness representing uncertainty mean  independent runs  problems ob  formation using values                             served mean standard deviations each cell small                                                        maximum  cells  correspond    experimental  details                            ing mean makespan mean cells  use sets probabilistic jsps size × × ×  did observe large difference val                                                                                                      ×  three uncertainty levels uj ∈    ues provided present results   deterministic problem generated using existing gen                                                                                    algorithms  erator watson et al  integer durations drawn uni problem unc bb complete bb heuristic tabu  formly interval   three probabilistic instances size level dql  tbs   ibs tbs   ibs                                                                             produced setting mean durations µi                                                                        ×  deterministic durations uniformly drawing stan                   dard deviation σi interval  ujµi distribution                                                                                                                                                ×  each duration approximately normal each problem                   size generate  deterministic problems trans                                                                                                                                                 ×  formed  probabilistic instances                                        given stochastic nature simulation tabu                                                                                                                                                ×   †  search algorithm each algorithm run  times each                     problem instance different random seeds each run  time limit  cpu seconds each monte carlo simulation table  mean normalized probabilistic makespans  uses  trials bbtbs tabutbs tinitial  each algorithm ‘’ indicates set runs  cpu seconds                                          high conﬁdence closetooptimal makespans ‘†’    heuristic techniques deterministic duration indicates problem sets normalization  signed each activities based value ex approximate lower bounds lowest mnpm  periment values used beck  wilson each problem set shown bold  displayed table  bbdql algorithm requires  initial value  decrement                                     dec                   ×  problems number algorithms ﬁnd lower                                        largest problems used      dec          mean probabilistic makespans bbn despite fact                               ×   preliminary experiments   problems indicated bbn  terminates limit cpu time    resulted long runs solutions                                                       ﬁnds approximately optimal solutions  large search space solutions avoid artifact resulting algorithms simulate                 runs used      solutions lution multiple times bbn particular solution    probabilistic makespans based conﬁdence level                                                        simulated algorithms solution                primary evaluation criterion mean simulated multiple times leading bias lower                                mnpm  normalized probabilistic makespan    each algo probabilistic makespan values based theoretic model  rithm achieves mnpma          dal                                 pl∈l dlbl         beck  wilson values correspond approxi  set problem instances da mean probabilistic mately optimal solutions  analysis                                             problem   unc       bb            tabu                                                              size    level  tbs     ibs   tbs    ibs  overall empirical results agree presented                                beck  wilson focus investigations     ×                      bbdql  behavior heuristic algorithms                         branchandbound descendingq leaves                                                                                                             ×   bbdql   outperforms bbn problem sets                                                                                                                  able reach   indication  number iterations mean minimum values each                                                                                       ×                   ×     ×     ×                            problem size                                                                ×       bbdql deterministic durations deﬁned                                                                                   × †               value serve guide prune search each iteration                     heuristic algorithms  search heuristically guided extent solutions table  difference mean normalized proba  low deterministic makespans low probabilis                                                        bilistic makespans runs using using higher  tic makespans characteristics solutions                                                        value runs outperformed runs  search unclear ideally like  search high ﬁnd solutions good probabilis  tic makespans wish ﬁnd good solutions outperforms tabuibs better  quickly probabilistic makespan values terministic solutions andor able systematically search  used prune subsequent search analysis indicates solutions higher threshold contrast problem  ﬁrst solution bbdql consistently better sets tabuibs outperforms bbibs  ﬁrst solution bbn larger problems ﬁnding better deterministic solutions   ×   ×  relative increase solution quality table  presents data using  mean normalized  subsequent iterations greater bbdql   deterministic makespan mndm calculated follows                                                        mndma                 dq al     nota  heuristic algorithms                                                 pl∈l dqminlbb−i−bs  investigate performance heuristic algorithms tion addition dqminl bbibs  look performance differences coming using lowest deterministic makespan bbibs  values extent performance algorithm runs problem mndm pro  heuristic algorithms depends factors ability vides relative measure mean deterministic makespans  ﬁnd good deterministic solutions underlying correla algorithms higher value worse  tion deterministic probabilistic makespans average makespan relative bbibs second  experimental problems                                measure iters mean number iterations performed                                                        each algorithm  effect values using nonzero value  results better performance appears par problem unc  bbibs       tabuibs  ticularly true uncertainty problem size size level mndm     iters mndm     iters  increases table  shows difference mean                                                                                       ×   malized probabilistic makespan using                                                                                                                 problem sets negative values indicate runs  deliver better mean solution far ma                                                                                       ×                      jority values greater  magnitude                            increases uncertainty problem size indicating  increasingly good relative performance problems                                                                                        ×                       show explanation performance                               problem instances   greater correlation                                                                                         deterministic probabilistic makespans         ×                                                                                                                finding good deterministic makespans hypothesize  performance heuristic techniques bb table  mean normalized deterministic makespan  dql partially dependent ability ﬁnd solu mndm number iterations iters bbibs  tions low deterministic makespans looked tabuibs  measures performance bbibs tabuibs  quality best deterministic solutions table  consistent hypotheses prob  number iterations bbibs performs lems sets large performance differences  ×   atic search deterministic solutions makespan × probabilistic makespan better performing  given threshold hypothesize problem sets algorithm does ﬁnd better deterministic makespans
