                     automated verification graphs logic automata                                                        moshe vardi                                                       rice university                                                     houston tx usa                                                 vardicsriceedu                                       httpwwwcsriceeduvardi                               abstract                               formalverification tools based modelchecking technol•                                                                 ogy clarke et al  lichtenstein pnueli         automated verification success­        queille sifakis  vardi wolper  en­       ful applications automated reasoning com­           joyed substantial growing use years        puter science automated verification uses         showing ability discover subtle flaws result ex­       algorithmic techniques establish correctness       tremely improbable events clarke et al         design respect given property au­       recently tools viewed academic        tomated verification based small number        routinely used industrial applications result­       key algorithmic ideas tying graph theory       ing decreased time market increased product in­       automata theory logic selfcontained        tegrity kurshan  fair say automated verifi­       talk holy trinity gave rise    cation successful applications automated        automatedverification tools mention         reasoning science clarke wing         applications planning                                                                   basic theory    introduction                                                 step formal verification come for•                                                                 mal specification design consisting description   recent growth power connectivity                                                                  desired behavior widely used specifica­  changed face science engineering chang­                                                                 tion languages designs temporal logic lpnucli    ing way business conducted revolution                                                                  linear temporal logics time treated each moment   driven unrelenting advances semiconductor man­                                                                 time unique possible future linear temporal   ufacturing technology semiconductor                                                                  formulas interpreted linear sequences regard   community faces challenge chip designers arc find­                                                                 describing behavior single computation   ing increasingly difficult advances                                                                  alternative approach use branching time   semiconductor manufacturing result unable                                                                  discussion linear vs branching time vardi   exploit enormous capacity technology provides                                                                     international technology roadmap semiconductors                                                                    linear temporal logic ltl formulas constructed   suggests semiconductor industry require produc­                                                                 set prop atomic propositions using usual   tivity gains greater historical  peryear                                                                  boolean connectives unary temporal connec­  increasing complexity semiconductor designs                                                                  tive eventually bi­  referred design productivity crisis                                                                  nary temporal connective example ltl   designs grow complex easier introduce                                                                  formula grequest grant refers atomic   flaws design designers use various validation                                                                  propositions request grunt true computation pre­  techniques verify correctness design unfortu­                                                                 cisely state computation request   nately techniques grow expensive                                                                  holds followed state future grant   difficult design complexity validation process                                                                  holds ltl formula grequest —► request grant   begun consume half project design re­                                                                 true computation precisely request holds   sources semiconductor industry begun refer                                                                  state computation holds state grant   problem validation crisis                                                                  holds reached      formal verification process mathematical        ltl interpreted computations viewed   techniques used guarantee correctness de­      infinite sequences truth assignments atomic   sign respect specified behavior automated        propositions computation function       supported nsf grants ccr ccr prop assigns truth values elements prop   iis iis eia bsf grant        each time instant natural number computation tt    grant intel corporation            point notation indicates formula       invited speakers                                                                                                                                                                     automatatheoretic problem follows vardi wolpcr                                                                    suppose given ltl                                                                  formula check whethermodels fol•                                                                 lows  construct automaton corresponds                                                                  negation formula  cross product                                                                  automaton obtain automaton                                                                                                                 check      designs described variety formal description language nonempty    formalisms regardless formalism used finitestate        accepts input    design abstractly viewed labeled transition sys•  theorem  let labeled transition    tem structure form       ltl formula satisfies    finite set states          set initial states design correct    transition relation indicates allowable state transi• design incorrect word accepted    tions assigns truth values                 incorrect computation modelchecking tools use algo•   atomic propositions each state la• rithms checking emptiness buchi automata emerson   beled transition essentially kripke structure  lei  courcoubetis et al  check emptiness   path starts possible infinite behavior case nonemptiness incorrect computa•  starting infinite sequence tion presented user finite trace possibly followed   states uq  cycle automaton constructed   sequence computation starts                     verification task reduced automatatheoretic problems   sequence truth assignments visited   intersecting automata testing emptiness au•  path language denoted laf consists com•    tomata highly efficient solutions vardi    putations start state wq note lm furthermore using data structures enable compact repre•  viewed language infinite words alphabet    sentation large state space makes possible verify                                                                  designs significant complexity burch et al    prop lm viewed abstract description   describing possible traces say satis•   lineartime framework limited using ltl   fies ltl formula computations lm satisfy        specification language forspee recent extension   models satisfies                    ltl designed address need semiconductor in•  say model explain technique       dustry armoni et al  prefer                                                                  use automata infinite words specification formal•  known model checking clarke et al                                                                   ism vardi wolper  fact approach      major approaches automated verification                                                                  cospan kurshan  approach given   automatatheoretic approach underlies                                                                  design represented finite transition prop•  model checkers spin holzmann  key idea                                                                  erty represented buchi related variant automaton   underlying automatatheoretic approach given                                                                  design correct computations lm ac•  ltl formula possible construct finitestate au•                                                                 cepted approach called   tomaton infinite words accepts precisely com•                                                                 languagecontainment approach verify respect   putations satisfy type finite automata infinite                                                                   construct automaton  complements   words consider defined buchi  biichi                                                                                                         product automaton  automaton tuplewhere finite                                                                                                                                                    obtain automaton amp  check automa•  alphabet finite set states set initial                                                                  ton amp nonempty design correct iff   states       nondeterministic transition func•                                                               amp verification task reduced   tion set accepting states run                                                                  automatatheoretic problems intersecting com•  infinite wordis sequence                                                                  plementing automata testing emptiness automata            run   accepting accepting state repeats in•  finitely infinitely        concluding remarks   infinite word accepted             years automated formal verification tools   accepting run language      model checkers shown ability provide   infinite words accepted denoted la following    thorough analysis reasonably complex designs goer  fact establishes correspondence ltl buchi      ing  companies att cadence fujitsu hp   automata vardi wolper  tutorial introduction ibm intel motorola nec sgi siemens sun using   correspondence vardi                    model checkers increasingly designs reduce   theorem  given ltl formula build biichi          time market ensure product quality cf beer et al   automaton                                                                     recently fruitful interaction                 exactly set computa•                                                                 model checking planning ai hand usage   tions satisfying formula                                                                  satisfiability technology solve planning problems kautz     correspondence reduces verification problem      selman  adopted model checking                                                                                                        invited speakers biere et al  copty et al  time transactions programming languages systems   symbolic techniques model checking adopted  january    ai planning cimatti roveri  finally tempo­                                                         clarke et al  em clarke grumberg   ral logic automatatheoretic perspective shown   useful planning temporally extended goals bac­ peled model checking mit press    chus kabanza   giacomo vardi  copty etai  copty fix fraer   calvanese et                                  giunchiglia kamhi tacchella                                                            vardi benefits bounded model checking indus­  references                                               trial setting aided verification proc th   armoni et al  armoni fix gerth gins international conference volume  lecture notes     burg kanza landver madorhaim tiemeyer science pages  springerverlag     singerman vardi zbar forspec          temporal language new temporal propertyspecification lcourcoubetis etai  courcoubetis vardi     language proc th intl conf tools algorithms wolper yannakakis memory efficient algo­    construction analysis systems tacas rithms verification temporal properties formal     lecture notes science  pages  methods design       springerverlag                                                           emerson lei  ea emerson cl lei tem­  bacchus kabanza  bacchus kabanza   poral model checking generalized fairness con­    planning temporally extended goals ann mathe• straints proc th hawaii international conference     matics artificial intelligence       sciences north holy wood  western pe­  bacchus kabanza  bacchus kabanza   riodicals company     using temporal logics express search control knowledge                                                          giacomo vardi  giacomo vardi     planning al                                                               automatatheoretic approach planning temporally   beer et al  beer bendavid geist      extended goals proc european conf planning     gcwirtzman yoeli methodology           volume  lecture notes ai pages      practical formal verification reactive   springerverlag      hardware proc th conference aided      verification volume  lecture notes goering  goering model checking expands veri­    science pages  stanford june            fications scope electronic engineering today february                                                               biere et al  biere cimatti em clarke     fujita zhu symbolic model checking using  lholzmann  gj holzmann model checker     sat procedures instead bdds proc th design   spin ieee trans software engineering     automation conference pages  ieee      special issue formal methods soft­    society                                          ware practice   buchi  jr buchi decision method restricted kautz selman  kautz selman plan­    second order arithmetic proc internat congr logic ning satisfiability proc european conference     method philos sci pages  stanford   artificial intelligence pages         stanford university press                                                          kurshan  rp kurshan aided verification   burch et al  jr burch em clarke kl mcmil­ coordinating processes princeton univ press      lan dl dill lj hwang symbolic model checking                                                          kurshan  rp kurshan formal verification com­     states information computation       june                              mercial setting proc conf design automation                                                            dac volume  pages     calvanese et al  calvanese giacomo     vardi reasoning actions planning ltl lichtenstein pnueli  lichtenstein     action theories proc th int conf principles pnueli checking finite state concurrent pro­    knowledge representation reasoning pages   grams satisfy linear specification proc th acm      morgan kaufmann                             symp principles programming languages pages   cimatti roveri  cimatti roveri con­  new orleans january      formant planning symbolic model checking ai pnueli  pnueli temporal logic programs     research                              proc th ieee symp foundation sci•  clarke wing  em clarke jm wing for­  ence pages       mal methods state art future directions acm queille sifakis  jr queille sifakis speci­    computing surveys                     fication verification concurrent systems cesar   clarke et al  em clarke ea emerson ap proc th international symp programming volume     sistla automatic verification finitestate concur­  lecture notes science pages —     rent systems using temporal logic specifications acm   springerverlag        invited speakers                                                                                       vardi wolper  vardi wolper      automatatheoretic approach automatic program verifi­     cation proc st symp logic science      pages  cambridge june    vardi wolper  vardi wolper reason­     ing infinite computations information compu•     tation   november    vardi  vardi automatatheoretic approach      linear temporal logic moller birtwistle edi­     tors logics concurrency structure versus automata      volume  lecture notes science pages       springerverlag berlin    vardi  vardi branching vs linear time fi­    nal showdown proc tools algorithms      construction analysis systems tacas volume      lecture notes science pages       springerverlag                                                                                            invited speakers 
