                           fast analytical algorithm solving                  markov decision processes realvalued resources∗                              janusz marecki     sven koenig     milind tambe                                       science department                                      university southern california                                  th place los angeles ca                                     marecki skoenig tambeuscedu                        abstract                          model markov decision processes                                                        mdps encoding available amounts resources      agents construct plans obey deadlines states resulting continuous state mdp      generally resource limits realvalued solved approximately discretizing state space ex      sources consumption characterized      probability distributions execution time ample discretizing probability distributions      battery power planning problems mod applying standard dynamic programming algorithms      eled continuous state markov decision processes value iteration boyan littman  major draw      mdps existing solution methods inefﬁ approach discretizing state space      cient provide guarantee quality sults combinatorial explosion number states      sulting policy present cph novel discretization ﬁnegrained      lution method solves planning problems ﬁrst response discretizationfree approaches devel      approximating desired accuracy probability oped provide strong guarantees      distributions resource consumptions phase quality resulting policy lagoudakis parr       type distributions use exponential distributions nikovski brand  hauskrecht kveton       building blocks uses value iteration solve                                  resulting mdps exploiting properties exponential lazy approximation li littman  currently      distributions calculate necessary convolutions ac leading discretizationfree algorithm solving continuous      curately efﬁciently providing strong guaran state mdps quality guarantees solves planning      tees quality resulting policy experi problems approximating probability distributions      mental feasibility study mars rover domain demon resource consumptions piecewise constant functions      strates substantial speedup lazy approximation uses value iteration solve resulting mdps      currently leading algorithm solving peatedly approximating value functions piecewise      tinuous state mdps quality guarantees       constant value functions lazy approximation prob                                                        lems increase runtime complex piecewise    introduction                                       stant functions necessary approximate probabil                                                        ity distributions closely second value functions need  recent advances robotics aerial underwater                                                        reapproximated iteration present  terrestrial unmanned autonomous vehicles possible                                                        cph continuous state mdps through phasetype proba  domains unmanned vehicles                                                        bility distributions novel solution method solves  structed vehicles construct plans obey dead                                                        planning problems ﬁrst approximating probability dis  lines generally resource limits realvalued                                                        tributions resource consumptions phasetype  sources consumption characterized                                                        distributions use exponential distributions building  probability distributions execution time battery                                                        blocks neuts  uses value iteration solve  power  major challenge ai research                                                        resulting mdps exploiting properties exponential  struct good plans domains efﬁciently bresina et al                                                        distributions calculate value functions itera   model resulting planning problems                                                        tion accurately  reapproximations efﬁciently  generalized semimarkov decision processes younes                                                        cph shares lazy approximation provides strong  simmons  model actions                                                        guarantees quality resulting policy runs sub  sume realvalued amounts resources resource lim                                                        stantially faster lazy approximation experimental    ∗this material based work supported  feasibility study mars rover domain  darpaipto coordinators program air force  search laboratory contract fac views  conclusions contained document au  planning problem  thors interpreted representing ofﬁcial poli  cies expressed implied defense advanced research use time example realvalues resource solve  projects agency government               planning problems similar ones studied li                                                    ijcai                                                                                                          expected total reward agent obtain execution                    return      return               start      base       site                                   ∈                       ≤                    base    base                  stops starts state timetodeadline                                                         ≤ Δ agent maximize expected total reward                  return return               executing action                 site  base base site                                                                                                                                                                                    site      site                    arg max                                        site                          a∈as                                                                     s∈s                                                                                                                                                                  ∗                        figure  mars rover domain                                 psat rs −  dt                                                                                                                                         ∈                     ≤  ≤                                                        state    timetodeadline    Δ  littman   modeled mdps                                           ∈   sources uncertainty action durations action outcomes explained follows executes action                                                          state ∈ incurs action duration t probability  denotes ﬁnite set states mdp                                                                                             psat ≤ ≤ transitions state ∈  ﬁnite set actions executed state ∈                                        ∈                     probability obtains expected total future  assume agent state  deadline        s ∗ s − t  ing  time units away  timetodeadline ward            execution stops executes action ∈ value iteration calculates values nst using fol  choice execution action interrupted lowing bellman updates states ∈ timeto  action duration t distributed according given deadlines  ≤ ≤ Δ iterations ≥                              probability distribution psat  depend                                                         st  state action aift ≥ timetodeadline                                                                                                            ≤  − ≤  action execution nonpositive                                                                                                                      ss                                                           st maxa∈as s∈s             means deadline reached execution stops oth                                                                                   t s s − t dt   erwise probability agent obtains reward          sa                                                      rs  ≥  transitions state ∈ timeto                               ∗                                                        holds limn→∞ stv  st  deadline − repeats process timetodeadline                                                        states ∈ timestodeadline  ≤ ≤ Δ unfortu  beginning execution   objective                             Δ                         nately value iteration implemented stated  agent maximize expected total reward execution                                                                    number values st inﬁnite each iteration  stops                                                        timetodeadline realvalued variable                                                                                           use mars rover domain figure  similar remedy situation viewing value func                                                      tions map timestodeadline corresponding values  used bresina et al  example planning  problems rover maximize expected total reward st similar liu koenig  context  timetodeadline Δ states mdp cor make following contributions show  respond locations rover start location site iterations value iteration stop ap                                                                                    ∗ −v    site  site  base station rover perform proximation error maxs∈s≤t≤Δ                                                              larger given constant  second show each  actions deterministic action outcomes outside        base station  site collect value function represented exactly vec  rock probe receives rewards    col tor small number real values each finally show  lecting rock probes sites    respectively  bellman updates efﬁciently transform vec                                                        tors value functions ns vectors value  base station perform com      munication task drains energy completely functions present three contributions  makes impossible rover perform additional ac following three steps cph  tions receives reward  performing communication  task action durations characterized exponen                         −t                              cph step   tial distribution psat  consider  case action durations characterized ei                                                        cph ﬁrst approximates probability distributions ac  ther weibull normal distributions mars rover domain                                                        tion durations exponential phasetype dis  appear small  discrete states                                                        tributions resulting chains exponential distributions  discretizes timetodeadline  time units λe−λt λ                          λ  encodes states  ∗       potentially different constants   states                                               neuts  cph uses uniformization creates                                                        selftransitions make constants λ identical                                                        changing underlying stochastic process    general approach                                   details implement wellknown steps                                                        neuts  younes simmons  details  solve planning problems encoding time provide example figure  shows action  todeadline states resulting continuous state mdp deterministic action outcome action duration  solved version value iteration boyan characterized normal distribution nμ σ  littman  follows let ∗st denote largest ﬁrst approximated phasetype distribution three                                                    ijcai                                                        initial probability distribution                         pn       start                                base                                transformation phasetype distribution              pe    pe    pe       start                                base                                                            pe                                                    pe   pe      uniformization              pe    pe   pe       start                                base                                                           pe                                                     ∗                                                 figure         value   function   start                                                                                                ∗  figure  transformation normal distribution chain sists gamma functions start                                                          ∗        ∗        ∗       ∗  exponential distributions denote ac   start    start    start    start   tion duration action outcome probabilities respectively                                                                   −    phases uniformized yield exponential distri  butions assume    cph step   loss generality action durations t                                                        explain cph uses value iteration   actions distributed according exponential distributions                                                                              value functions ssatisfy  psat pt eλ constant λ value                                           ∗            piecewise gamma show induction  iteration determine value functions                                                                  value functions piecewise gamma value  ﬁnite number iterations uniformized mdps                                                             functions  piecewise gamma show  selftransitions theorem  appendix shows                                                                bellman updates efﬁciently transform vectors  approximation error larger given constant                                                                value functions vectors value functions    value iteration stops                                                                    value iteration calculates                                                                                                           λΔ                                                                         log −       λΔ                                                                                       eλΔ rmaxe    −                        st    max      pt rs                                                                         a∈a                                                                                                                                                                      ∈s                                          iterations max  maxs∈sa∈ass ∈s                            s − t dt  running time step  cph negligible analytic                         phasetype approximation methods run time    break calculation stages                                                                                                                  st − trs sv   nst − t sec                                                                                                                                        ond v nst    ptv st − t dt                                                                                cph step                                                                                                                                   s∈s av finally                                                                                    follows directly considerations section stmaxa∈a                                                                     exist timestodeadline                                                             ∈                         s −  t       s  sms Δsuch                 stage   calculate                                                                                       tsitsi                                     −  induction assumption value                                                                                                                     „                        «        functions  piecewise gamma                                             n−                                                                  −λt                  λt                        s                                    −                              tsicsijj  stage  cph calculates −      si      si    sin −                                                                        trs sv nst−t calcu                                                                                                     parameters csij ∈  ≤ ≤ ms lating trs rs    ≤ ≤   refer timestodeadline tsi constant                                                                                    breakpoints tsitsi intervals expressions                                                                                  value functions   gamma functions                                      ms                                                                                  simpliﬁcation actually linear combinations                   ijj                                                                                   ms  euler’s incomplete gamma functions expressions           tsi                                                                                  ij  value functions   piecewise gamma func                                                                                                                  tions represent each gamma function vi vector si    sij  ij                                          ≤ ≤ ms  ≤ ≤    si   sin sijj each piecewise gamma                                          ms                                                                                                                     function    vector vectors  si                       −                                                          really use                                                                                      si sijj figure  example shows value instead t−t  respectively           ∗  function start mars rover domain         make notation cumbersome                                                    ijcai                                                                                                  v s     t s − t dt  stage  calculate                                                                                         convolution  denoted p∗v  v     ss v s                                                                                  consider value functions  deﬁned stage              s∈s                                                                          show induction                                                                                                                                                   ss    c   sa                                                                                  sai  sijj                                                                    s∈s      vi                                                                                                                                                            msa                                                                       tsai                                                                                     ijj                        −λt     λtsi                                             ∗ −       ∗ i tsi                  ∈s                                                                                  msa                                                                                                                                                       sai   saijj            i−                                          λt                    −       ∗                             i                                        v                                                        stage  calculate      maxa∈as                    i                                                        consider value functions v ns deﬁned stage                                                                                                     msa                                                                                            tsai  ∈ ts equation  holds different breakpoints                                                                ∈   v      ∗         ∈              different actions    cph introduces common break                   assume               msa  equation  holds holds points a∈as sai changing value func                                                               shown figure  use following lemma tions cph introduces additional dominance                                                    breakpoints intersections value functions en  show vi  gamma function convert vector                                                        sure each interval value functions dom  notation                                                                          m                                                                                 t   lemma   let pteλ  ∗ kkkn   inates ones let si set break                                                                                       m                                                                            t c                                                         points     si  sijj                                                                                                                                                        ∈                                                          sij  sasii actions si                                                                                                                                                   ⊆                                                               unique   si si    sasii sasii   proof symbolic integration ∗                                                                                               ∈ t t     v ≤ v                           ∗        ∗        si si            si   for constant                                      n−                           n−              action si executed according value         −                           ∗   −                    ij  nj              function current state timeto                      n−                                      ki        ∗ kn            ki − ki       kn                    ∈                    deadline   si si  kkkn                                                        summarize value functions ns piecewise                                                        gamma vectors value functions ns                                                        transformed automatically vectors value func  transform equation  vector notation     tions ns lengths vectors increase linearly                                                        number iterations number break   v s     c       sijj                                   points placed automatically during transforma                                                                            tions increase exponentially practice stays small                           c       c    ∀                        merge small intervals each iteration                sij  sij jn        value iteration reduce number breakpoints trans                                                                           formations require simple vector manipulations                          λtsi                zsi       ∗ i tsi  numerical method determines dominance breakpoints                      i                              approximately cph uses bisection method                     i−                                show experimentally transformations                                                              λtsi                         −          ∗ i tsi efﬁcient accurate                     i                                ms                   experiments              v             consequently    sijj                                                         performed experimental feasibility study mars                                 v  stage           calculate         rover domain compares cph            lazy approxima                     s∈s av consider value func tion la li littman  currently leading  tions v ns deﬁned stage     algorithm solving continuous state mdps qual                                ms                                                   ity guarantees figure  plot error  different breakpoints different states        ∗      −         s ∈ ss   cph introduces common max≤t≤Δ    start    start  calculated                                                      value function start xaxis correspond                   msa                           ms                                           breakpoints  sai      s∈sp ssa ing runtime measured milliseconds log scale  changing value functions v ns yaxis  v s       c msa       c     c      sai  sijj sij  sij experiment  determined cph lazy approx                  unique tsaitsai ⊆ tsi tsi imation trade runtime error mars                                                    ijcai                                                                                                                                                          vis  pt −  dt  vis pt −  dt                                                                                                                                                split integral ranges tsi ≤ ≤ ttsi know                                                                                                                             pt −  dt   pt −  dt         tsi                                                                                                              −λt−t   −λt−t    −λt  −t    −λt−t                     holds pt − λe       λe       ptsi −                                                                                                 si                                si                                                                −λt−tsi                                 pt −  dt − pt −  dt            ptsi −  dt                                                                                                                                                          si                                       −λt−tsi                           −λt−tsi           pt −  dt −           ptsi −  dt  vi tsi                                                                                                         −λt−tsi                 −λt−tsi       ∗ −      ∗ tsie     vi tsi         ﬁnally unroll recursion using induction assumption                                                                                           −λt−tsi                 −λt−tsi           ∗ −      ∗ tsie     ∗ tsi                                                                                                                         i−                                                                    −λtsi    λtsi                   λtsi              −                ∗ i tsi  − ∗ i tsi                                                                                                                                                                                                                                                                     −λt      λtsi                  λtsi           ∗ −       ∗ i tsi  − ∗ i tsi                             i                       i                                   figure  proof induction equation       figure  empirical evaluation cph lazy approximation experiments  tightness theoretical  planning horizon calculated theorem     rover domain action durations mars rover weibull distributions eibullα β ex  domain distributed exponentially phase periment  normal distributions nμ σ ex  type phase errors introduced approx periment  methods need approximate  imating probability distributions action durations value functions ﬁxed cph accuracy bisec  phasetype distributions distributions tion method varied number phases used ap  equal uniformization introduce selftransitions proximate probability distributions results show  value iteration run ﬁnite number iterations cph faster lazy approximation  varied cph accuracy bisection error order magnitude small errors  method determines dominance breakpoints example cph needed ms ﬁve phases lazy  lazy approximation accuracy piecewise constant approximation needed ms compute policy  approximations probability distributions ac  optimal weibull distributions ad  tion durations value functions results show dition observed cph converged faster  cph faster lazy approximation error theoretical planning horizon calculated theorem  sug  three orders magnitude small errors example gests  cph needed ms lazy approximation needed ms  compute policy  optimal cor  responds error  mars rover domain   conclusions                                                        planning realvalued limited resources mod  experiments   determined cph lazy eled continuous state mdps despite recent advances  approximation trade runtime error solving continuous state mdps stateofthe art solution  action durations mars rover domain characterized methods inefﬁcient li littman                                                     ijcai                                                    
