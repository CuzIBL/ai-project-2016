                                structural symmetry breaking                                meinolf sellmann pascal van hentenryck                            brown university department science                               po box  providence ri  usa                                          sellopvhcsbrownedu                          abstract                          classes pure value symmetry investigated      symmetry breaking shown im     proven computationally tractable approach taken      portant method speed search     generalized roneydougal et al       straint satisfaction problems contain symme notion symmetryfree search trees socalled getrees      try breaking symmetry dominance detec   introduced combination gap getrees shown      tion computationally efﬁcient symmetry break  break arbitrary value symmetries polynomial time      ing scheme achieved solve      paper continue successful line research      dominance detection problem polynomial time   studying combinations value variable symmetry      study complexity dominance detection    constraint satisfaction problems csps csps set      value variable symmetry appear simulta  variables setcsps offer three main contributions      neously constraint satisfaction problems csps ﬁrst regards combination variable value symmetry      singlevalued variables setcsps     csps singlevalued variables ﬁrst time      devise efﬁcient dominance detection algorithm  section  show corresponding dominance detec      csps singlevalued variables yields tion problem computationally tractable section       symmetryfree search trees based   build result show efﬁcient way using      abstraction actual intuitive structure dominance detection algorithm ﬁltering just      symmetric csp                                  pruning main contribution regards set variables                                                        section  show general dominance detection prob    introduction                                       lem nphard setcsps contain symmetric  during past ﬁve years symmetry breaking set variables value symmetry finally minor side  topic increasing constraint programming note section  show higher forms symmetry  community shown symmetry breaking play sets set variables symmetric sets set  decisive role solution numerous constraint prob variables combination value symmetry reduced  lems sophisticated symmetry breaking methods partial set variable symmetry case  developed addition symmetry breaking  constraints example crawford et al  sym  preliminaries  metry breaking adapting search strategy brown et  al  symmetry breaking during search sbds gent let start introducing notation use  smith  symmetry breaking dominance paper reminder paper let  tection sbdd fahle et al  focacci milano assume ∈   especially attracted lot  improvements suggested barnier brisset  deﬁnition   puget  example sbdd works checking • constraint satisfaction problem csp tuple  current choice point investigation represents sym      xn ﬁnite set  metric variant search space variables      vm set values  vestigated completely                                   dn set ﬁnite domains each    core sbdd symmetry breaking code domi     di ∈  set possible instantiations variable  nance detection automated gent et al  xi      cp ﬁnite set constraints  using generic computational group theory tool yield each ci ∈ deﬁned subset vari  ing method named gapsbdd using generic tool   ables specifying valid combinations  appealing perspective easeofuse say csp singlevalued variables iff  constraint programmer generality comes guaran di ∈ holds di ⊆  di ∈ holds                                                                              tee efﬁciency van hentenryck et al  di ⊆   denotes set subsets  special case dominance detection presence  say csp setcsp  • given csp singlevalued variables assign variable each value member symmetry class      ment set pairs ∈ × beginning classes correspond directly sets pk      ∈ implies  given setcsp ql assignments committed      setassignment set pairs ∈ × initial symmetries broken order check      ∈ implies    csp objects indistinguishable need                                                        troduce subclasses original symmetry classes  deﬁnition                                            detect remaining symmetries label    • given set set sets      pr ing each subclasses certain signature      si pi  pi pairwise nonoverlapping deﬁned set initial symmetries given assign      say partition write  ments really signatures      pi pi                                            capture intuitive wish abstract csp model                                                        hand actual structure problem    • given set partition  pi pi bijection      π   → πp   πp                                                      signatures      πs  ∈ pi called partial permutation       pi pi                                        consider following example    variables                                                            domains dx  · · ·  dx   deﬁnition                                                assume ﬁrst    • given csp   partitions     variables indistinguishable           pk≤r  pk  pl≤s ql say csp par       furthermore assume      tial variable value symmetry iff variables                each pk values each ql considered given following assignments       symmetric                                                                                                                      • given assignments partially sym                               metric csp singlevalued variables say figure      dominates iff exist partial permutations π illustration looking ﬁrst assignment                                                                                               α       value    taken             k≤r                  l≤s               variables variable        ∈ holds πx αv ∈                                                                                             value taken variable    • given   partially symmetric setcsp  set   variable  value taken      assignments say dominates iff variable hand second      exist partial permutations π  pk≤r pk assignment value taken                                                        variables variables  ii      α   pl≤s  ql aπ α ⊆                                            aπ α  πx αsx ∈       value taken variable                                                        variable iii value taken    • given arbitrary setassignments par variable variable  lining      tially symmetric setcsp problem                                                                                        → → →      termining dominates dominance detection ii →   →   →  iii      problem                                                                                                                                    → → structurally                                                        assignment extended words    symmetric singlevalued variables             dominates figure     symmetric values                                     small example abstract  ﬁrst general symmetry model study pow given model arbitrary names variables  erful manage symmetric singlevalued variables values actual structure problem  symmetric values section consider instead talking speciﬁc variables values  partially symmetric csp singlevalued considered members classes speciﬁcally each  variables assume given partition signment implicitly assigned each value signature                                                        captures members each variablesymmetry  variables pk≤r pk  partition values                                                        class taken instance signature  pl≤s ql    variables each pk                                                         ×  × shorter writing signature  values each ql considered symmetric note                                                        sig       hand signature  partitions derived static analysis                                                                  sig      consequently  constraint program main objective section                                                                                          viewed specialized  show exists effective symmetry breaking say dominates  terminology  algorithm runs polynomial time scenario                                                                                                    signature sig      dom    key idea consists introduction structural ab                                                                      inates  note sig      stractions model csp need uniquely label each                                                                              does dominate ∈  value each variable — course ∈  general  natural certain variables certain values ac    tually indistinguishable rectify viewing eachfigure  illustrates assignments gives signatures each value links pairs values  assignment dominates perfect matching proves dominates designated  solid lines    deﬁnition                                            deﬁnition     • say value assignment dominates given assignments let denote  set      value assignment iff belong duplicates values attaching prime sign                                                                                       valuesymmetry class sigav ≤ sigbw       values’ names   ∈  deﬁne                                                        dominance detection graph ddga  ∪     • say value assignment struc                      turally equivalent value assignment iff    dominates denotes      belong valuesymmetry class set arcs      sigav  sigbw                                                        theorem     dominance detection using signatures             given assignments csp partially  following lemma shows signatureabstractions symmetric singlevalued variables partially symmetric  help detect dominance relations assignments values dominance detection problem                                                        complexity om   mn  om  lemma                                                time needed determine exists perfect  assignment dominates assignment par matching ddga number values  tially symmetric csp iff exists partial permutation α number variables     dominates αv        l≤s                                             space occasions  ∈                                                omit formal proof like  proof  let assume dominates note lemma  clear dominance detec                                                        tion problem solved basically determining  exist partial permutations π pk α                                        k≤r             exists perfect bipartite matching ddga      ∈ holds        l≤s                                           additional complexity denoted theorem  πx αv ∈ πx belong necessity construct ddga ﬁrst obvious  symmetry class values ∈ achieved time onm proves  sigav ≤ sigbαv say symmetry breaking scenario tractable  dominates αv assume exists runtime improved complexity  partial permutation α pl≤s ql sigav ≤ claimed using sparse representations signatures  sigbαv ∈  each variable algorithm analysis exploit  signed value exists partial permutation tal number nonzero signature components bounded  π pk≤r pk ∈ holds oa    πx αv ∈ dominates     interestingly shown bipartite graph                                                        viewed dominance detection graph csp    consequently dominates iff exists                                                        assignments determined time lin  perfect matching bipartite graph edges                                                        ear size given graph perfect  deﬁned signaturerelation values figure                                                        bipartite matching exists iff dominates makes    ≤relation vectors deﬁned usual dominance detection problem hard bipar  componentwise comparison yields socalled dominance tite matching words show dominance  ordering  different lexicographic ordering detection takes time ∈ Ωm∩om mn                                                                              symmetrybased filtering                            ddga    differ bipar                                                        tite graph contain additional edges  theorem  break symmetries given           csp partially symmetric variables values poly incident right partition obviously                                                        tains mmatching matching contain exactly  nomial time using symmetry breaking dominance                                                   detection sbdd approach fahle et al  focacci additional edges consequently dominates   milano  annoying setting contain − matching  check choice point domi case work needs make ancestorsymmetry  nated previously expanded resistant respect  touch garbage order garbage let assume contains m−matching pro  develop algorithm does suffer vided matching using straightforward match  disadvantage                                         ing theory identify efﬁciently    achieve goal using dominance detection additional edges allow transform exist  ﬁltering just pruning obviously bruteforce ing matching perfect furthermore  approach simply try assignments use dom shown critical edges independent partic  inance detection algorithm perform ﬁltering ular − matching computed introduction  procedure lead poor runtime matching theory refer ahuja et al   following show ﬁltering based symmetry critical edges added allow construct  performed efﬁciently                mmatching ones need consider                                                                                              sbdd exists natural distinction run nodes ∈ ql  types ﬁltering apply ﬁrst consists making  ≤ ≤ exists  ≤ ≤  sure newly created children symmetric sigav ≤ sigbw  ek ﬁnd  node fully expanded node cur pair nodes single extra assignment added  rently branching applying unary branching result successful dominance detection precisely  straints assume used achieved assignment previously unassigned variable ∈ pk  shrinking domain variables accordingly funda result dominated choice point remove  mentally different type “ﬁltering” consists creation domain unassigned ∈ pk  children symmetrical each unique parts search space produce  types need addressed achieve symmetryfree search choice points symmetric expanded  tree corresponds getrees roneydougal et previously  al  distinguish types ﬁltering nam theorem  runtime needed initial value                                                                                            ing differently symmetricancestor based ﬁltering matching algorithm bounded om  mn  symmetricsibling based ﬁltering                     prove ﬁltering algorithm formulated                                                        matching computed runs time om  mn  symmetricancestor based filtering                    sbdd nm −  ancestor  goal symmetricancestor based ﬁltering shrink nodes need considered prove following  domains instantiating variable  domain values result creation search node theorem   symmetric previously expanded given csp partially symmetric singlevalued vari                                                        ables partially symmetric values achieve  deﬁnition                                            ancestorsymmetry resistance given search node time  given depthﬁrstsearch tree  say choice point                                                        onm  nm  associated homonymous assignment cap  tures previously committed unary branching decisions symmetricsibling based filtering  ancestorsymmetry resistant iff previously fully ex                                                        achieve symmetry prevention need guar  panded nodes ∈ called ancestor                                                        antee newly created siblings symmetric each  variables values ∈ dx holds does                                                        choose variable  dominate ∪                                                        signed branch need perform    assume currently investigating choice point “ﬁltering” step actually implicit prun  ancestor node does dominate ing step choose single representative value  observe instantiating variable ∈ pk each equivalence class values assigned  setting → ∈ ql change chosen variable result creation symmetric  signature sigbw sigbw  ek choice points fact sibling dom  ek denotes unit vector  kth component inates structurally equiv            set   ∪  ddga      alent deﬁnition  avoid producing symmetric                                                        siblings simply choosing exactly representative value    ’ﬁltering’ refer idea domain reduction cp  ’pruning’ refers detection sufﬁcient reason backtrack main technical idea consists use sparse sig    space omit formal deﬁnition natures proof complexity particularly insightful  search tree meaning clear context lengthy leave hereamong structurally equivalent complex proof reduce problem subgraphisomorphism  ity ﬁltering step dominated symmetric order apply theorem  need ensure graphs  ancestor based ﬁltering                              operate set nodes case set    putting ancestor siblingbased ﬁltering nodes given graphs differ easy  completed development effective symmetry subisomorphic contains nodes  breaking algorithm csps partial singlevalued vari case actually contains fewer nodes  able value symmetry runs polynomial time note easy add isolated nodes  practical performance algorithms sketched affecting subgraphisomorphism  enhanced practice example fully sufﬁcient graphs contain number nodes relabelling  check previously expanded nodes nodes graphs assume graphs  −  − hmaximum matching vari operate set nodes  able instantiations different values committed note despite negative result important  usual considering incremental updates match special cases symmetry detection problem csps  ings memory traded cputime              partially symmetric set variables values tractable                                                        instance set variables overlap algo    limits efﬁcient dominance detection             rithm developed section  adapted easily sim                                                        ply exchanging roles values variables break  having developed polynomial symmetry breaking al symmetries efﬁciently  gorithm csps partially symmetric singlevalued vari  ables presence partial value symmetry show corollary   dominance detection partially symmetric set variables dominance detection problem partially symmetric  presence partial value symmetry nphard nonoverlapping set variables partially symmetric values  precisely reduce corresponding dominance detection tractable  problem subgraphisomorphism    order achieve desired reduction construct note dominance detection problem consider  setassignment graph following way     regards arbitrary assignments implies                                                        detection problem tractable break symmetries  deﬁnition                                            efﬁciently situation changes achieve  given undirected graph     intractability result like previous meth  deﬁne set symmetric values     ods like sbdd assignments need compared                                                     differ speciﬁc fashion show  set symmetric variables  piji ∈  setassignment ag deﬁned ag     speciﬁc dominance detection problems np      ∈                        hard proving sbdd general form     ij                                             incapable breaking symmetries partially symmetric                                                        setcsps efﬁciently like stress  theorem                                              result does imply symmetry breaking nphard  given undirected graphs       general consider methods like  subisomorphic iff ag dominates remodeling adaption branching scheme  ag variables values considered  symmetric                                               higher forms symmetry    proof start showing ag dominates ag note intractability proof shows dominance  subisomorphic let σ   →  bi   detection symmetric set variables symmetric values  jective ∈ implies σi σj ∈  nphard exists set symmet  pij  ni nj ∈ ag holds ric set variables set symmetric values clearly  pσiσj nσi nσj ∈ ag ag problem stays nphard allow partial symmetry                                                        partial symmetry helpful complicated  dominates ag    let assume ag  dominates ag  forms symmetry need handled consider example                                                      social golfer problem sgp  exist functions π  → α  →  pij  ni nj  ∈ ag implies pπij nαi nαj ∈  golfers want play  groups  each week  ag  construction ag equivalent   golfers play group                                                                                                        nαi nαj ∈ ∈ α sub  weeks  isomorphism                          problem generalized parameterizing    theorem  easy prove following   groups players each playing weeks instances                                                        usually written gswformat common model                                                        problem introduces set variable each group intra  corollary                                            group symmetries broken automatically groups  dominance detection problem partially symmetric  set variables partially symmetric values nphard problem  csplib  httpwwwcspliborg
