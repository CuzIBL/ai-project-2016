 heuristic search approach planning temporally extended preferences                       jorge baier    fahiem bacchus     sheila mcilraith                                      department science                                           university toronto                                              toronto canada                          abstract                          optimizing metric function                                                          key insight developed early investigation     paper propose suite techniques plan effective preferencebased planner actively     ning temporally extended preferences teps guide search achievement preferences     end propose method compiling tep    end propose compilation method reduces plan     planning problems simpler domains containing  ning problem teps new problem containing     ﬁnalstate simple preferences metric func simple preferences metric functions new prob     tions simpliﬁed problem hand     lem contains additional domain predicates emulate     propose variety heuristic functions planning satisfaction teps original problem roughly     ﬁnalstate preferences incre means tep ϕ new predicate pϕ     mental bestﬁrst planning algorithm key feature true ﬁnal state plan iff ϕ satisﬁed dur     planning algorithm ability prune ing execution plan advantage having     search space identify conditions   compilation possibly complex process satisfying     planning algorithm generate optimal plans tep reduced problem satisfying simple pref     implemented algorithm extension    erence ﬁnalstate preference observed     tlplan  planning report exten   ﬁnd ways adapting existing heuristic search     sive testing performed evaluate effectiveness techniques achieve simple preferences obtain     heuristics algorithm planner hplanp method solving planning problems containing teps     competed th international planning competi  unfortunately heuristics classical planning goals     tion achieving distinguished performance qual directly applicable planning simple preferences     itative preferences track                         contribution paper development number                                                        new search heuristics planning simple preferences    introduction                                       exploit planning problems teps encoded  standard goals enable planner distinguish plans simple preferences  satisfy goals provide fur using heuristics propose planning algorithm  ther means discrimination successful plans pref incrementally ﬁnds better plans plan  erences hand convey information metric value used bound future plans  “good” plan enabling planner distinguish plan exceeds metric value pruned  tween successful plans differing quality simple prefer search space prove certain fairly natural  ences express preferences properties ﬁnal state conditions algorithm generate optimal plans  plan temporally extended preferences teps refer implemented planner hplanp uses  properties plan planning teps techniques ﬁnd good quality plans planner                                                                                                 subject recent research delgrande et al  built extension tlplan bacchus                                                                        son pontelli  bienvenu et al  kabanza   used implementation evalu  theme th international planning competition ipc ate performance algorithm relative    paper propose techniques planning formance different heuristics problems  teps speciﬁed pddl gerevini long ipc simple qualitative preferences tracks   pddl planning domain deﬁnition language follows brieﬂy pddl  signed speciﬁcally ipc extends pddl include line compilation method proposed heuristics al                                                             things facilities expressing teps described basic tlplan uses ltl formulae express  subset linear temporal logic ltl metric func main control knowledge ltl formulae serve prune  tion simple teps used quantify plan’s search space mechanism predicting  quality aim solving pddl planning instance future satisfaction falsiﬁcation ltl formula providing  generate plan satisﬁes hard goals constraints heuristic guidance search                                                     ijcai                                                    gorithm used realize experiments preference certain conditions hold ﬁnal state  formed evaluate conclude discussion plan declared goal example  performance related work                  following pddl code                                                        goal delivered pck depot    brief description pddl                                    preference truck truck depot  pddl extends pddl enabling speciﬁcation                                                        speciﬁes hard goal pck delivered depot  preferences hard constraints provides way                                                        simple preference truck depot simple  deﬁning metric function deﬁnes quality plan                                                        preferences externally quantiﬁed case  rest section brieﬂy describes new elements                                                        represent family individual preferences  temporally  extended  preferencesconstraints pddl                                                        metric function  speciﬁes teps temporally extended hard constraints                                                        metric function deﬁnes quality plan generally  subset ltl declared using constraints                                                        depending preferences achieved  construct preferences given names declaration                                                        plan end pddl expression isviolated  allow later reference way illustration following                                                        returns number individual preferences  pddl code deﬁnes preferences hard constraint                                                        family preferences violated plan  constraints                                          refers precondition preference expres      preference cautious                                sion returns number times precondition preference     forall  heavyobject                        violated during execution plan       sometimeafter holding                       quality metric depend function                     rechargingstation       totaltime returns plan length finally    forall  light                                possible deﬁne want maximize minimize     preference plight turnoff     metric want weigh different compo    forall  explosive holding nents example pddl metric function  cautious preference suggests agent metric minimize  totaltime  recharging station held heavy object              isviolated econ  plight suggests agent eventually turn                isviolated truck  lights finally unnamed hard constraint estab speciﬁes twice important satisfy preference  lishes explosive object held agent econ satisfy preference truck im  point valid plan                            portant useful ﬁnd short plan    preference externally universally quantiﬁed  deﬁnes family preferences containing individual pref  erence each binding variables quantiﬁer  preprocessing pddl  preference plight deﬁnes individual prefer preprocessing phase compiles away  ence each object type light domain preferences complex elements pddl yielding simpler planning  quantiﬁed externally like cautious seen problem containing simple preferences new metric  deﬁning family containing single preference   function minimized refers    temporal operators sometimeafter ex simple preferences possibly hard atemporal  ample nested pddl ap straints new problem teps encoded  proach handle general case nested teps new domain predicates  precondition preferences                                phase key adapting existing heuristic techniques  precondition preferences atemporal formulae expressing planning teps reason  conditions ideally hold state achievement tep reduced simple satisfaction  action preformed deﬁned action’s domain predicate new optional goal condition gener  precondition example preference labeled econ ating compact compiled problem key good  low speciﬁes preference picking objects formance compilation achievesthisinpartbyavoiding  heavy                                                grounding planning problem rest section  action pickup parameters  block              scribes each pddl elements   precondition clear                       scribed previous section                    preference econ heavy temporally extended preferencesconstraints   effect holding                                                        use techniques presented baier mcilraith   precondition preferences behave like conditional represent achievement ﬁrstorder temporally extended  action costs violated each time action ex formulae planning domain ending new  ecuted state condition does hold augmented problem new problem contains each  example econ violated time heavy temporally extended preference hard constraint ϕanew  block picked plan preferences domain predicate true ﬁnal state plan  violated number times                    plan satisﬁed ϕ during execution  simple preferences                                      advantage using compilation ﬁrst  simple preferences atemporal formulae express order ltl formulae directly compiled having                                                     ijcai                                                                                        true            properties world need updated accomplish                                                                                                 deﬁne automata update each automata                                                     delivered                                     delivered     planner performs update automatically performing         exists          loaded              domain action automata figure           cafe                               date include rules                                                                              loaded   forall implies autstate loaded                                delivered                             add autstate                                  loaded           object moves state                          delivered                                                loaded  true  figure     pnfa    exists     analogously deﬁne update accepting pred  cafe candbforall          icate performed immediately automata  sometimeafter loaded delivered          update—if automata reaches accepting state                                                        add accepting predicate world state                                                          addition specifying automata states  convert formula possibly large set ground dated need specify objects au  stances result compiled domain com tomata states initially means augment prob  pact avoiding exponential blowup arise lem’s initial state adding collection initial automata  grounding later section  key facts given original initial state automaton  planner’s performance                                planner computes states tuple objects    compilation process ﬁrst constructs parameterized adds corresponding facts new problem  nondeterministic ﬁnite state automata pnfa aϕ each example initial state new compiled problem  temporally extended preference hard constraint expressed contains facts stating states                                                                                                          ltl formula ϕ pnfa represents family non temporal formula originally described hard  deterministic ﬁnite state automata transitions labeled straint accepting condition automaton  sets ﬁrstorder formulae states intuitively “monitor” treated additional mandatory goal during search  progress satisfying original temporal formula use tlplan’s ability incrementally check temporal  apnfaaϕ   accepts sequence domain states iff se straints prune search space plans  quence satisﬁes ϕ figure  shows examples pnfa violated constraint  ﬁrstorder ltl formulae                                                        precondition preferences    parameters automata appear ltl formula precondition preferences different teps  externally quantiﬁed figure intuition atemporal associated execution ac  different objects tuples objects different                                                        tions precondition preference violated times dur  states automata example consider transporta                                                        ing plan pddl function isviolated  tion domain packages initially returns  loaded vehicle focusing formula figure                                                          compiled problem contains new domain  objects start states automata                                                      function isviolatedcounterp each precondition  loaded initial state means                                                        preference function keeps track times  initially objects satisfy temporal formula                                                        preference violated conditionally incre  automaton’s accepting state thatisthe                                                       mented associated action performed state  null plan satisﬁes formula figure  assume                                                        violates atemporal preference formula case  perform action loadatruck resulting state                                                        preference quantiﬁed function parameter  stays moves                                                      ized allows compute number times different  longer satisﬁes formula satisfy plan                                                        objects violated preference  reaches state delivereda true                                                          example consider pddl pickup action given    represent automata domain each au compiled domain original declaration  tomaton deﬁne predicate specifying automaton’s replaced  current set states automaton parameterized  predicate arguments representing current set action pickup parameters  block                                                         precondition clear  automaton state particular tuple objects exam effect heavy  ple fact autstate represents object           increase isviolatedcounterecon   each automaton deﬁne accepting          holding  add holding  predicate accepting predicate true tuple objects  plan satisﬁed temporal formula tuple simple preferences                                                        teps add new accepting predicates com    actions executed automata states                                                        piled domain each simple preference predi                                                        cates true iff preference satisﬁed                                                construction works subset ltl baier preference quantiﬁed parameterized  mcilraith  subset includes pddl’s  teps includes teps temporal operators metric function  nested                                               each preference deﬁne new function isviolated                                                     ijcai                                                    value deﬁned terms accepting predicates instantiations accepting predicates used convert  temporally extended simple preferences terms teps simple preferences described  violation counters precondition preferences pref goal distance function function measure  erence quantiﬁed isviolated function counts hard reach goal based heuristic  number object tuples fail satisfy preference proposed zhu givan  formally let set    metric function deﬁned just pddl goal facts appear relaxed graph furthermore  deﬁnition making reference new functions fact let  depth ﬁrst appears  objective maximize function invert sign during construction graph problem’s goal  function body henceforth assume                                                                            facts theng   ∑ ∈g wherek positive  metric minimized                     real parameter  ∞    planning heuristic search                     preference distance function function mea                                                        sure hard reach various preference facts  applying preprocessing phase described analogous preferences let set  left planning problem containing simple pref preference facts appear relaxed graph  erences propose solve problem novel com                                                              ∑ ∈p parameter notice pe  bination heuristic search techniques              nalized unreachable preference facts    heuristic search successful solving classi general plan achieve preferences  cal planing problems conjunction goals  achieved case generally impossi optimistic metric function estimate  ble satisfy preferences instead planner try value achievable plan extending partial plan reach  achieve “good” subset preferences particular ing does require constructing relaxed planning  subset preferences jointly achievable graph computed evaluating metric func  yield preferred value planners used techniques tion assuming precondition preference vio  selecting during search subset preferences lated future unviolated preferences  solving subset classical goal using standard planning achieved future condition metric  heuristics yochanps benton et al  function nonincreasing number achieved prefer  introduces nontrivial problem ﬁrst selecting ences lower bound best plan extending                                                                                                          subset                                             variant “optimistic weight” bienvenu et al      approach utilize uniﬁed heuristic search tech best relaxed metric function estimate  nique attempts tradeoff preference desirability value achievable extending utilizes relaxed  ease achieving during search plan im planning graph obtain estimate particular eval  portant factor addition preferences plan uate metric function each relaxed worlds  ning problem generally contains classical goal planning graph minimum  achieved search priority achieving values generally yield better higher estimate  hard goal                                        optimal value achievable extending    solve problem tradeoffs developed gard preferences appear relaxed states  iterative planning technique uses sequence heuristi ing unsatisﬁable slightly complex method  cally guided planning episodes instead selecting pref building relaxed planning graph guaranteed  erences want satisfy simply ask planner ﬁnd lower bound condition  better plan each planning episode               preference metric nonincreasing number achieved    turning details ﬁrst present suite heuris preferences technique used em  tics developed use each planning episode pirical results reported experiments  explain control sequence planning guaranteed lower bound  episodes                                             discounted metric function dr weighting    heuristics planning preferences         metric function evaluated relaxed states assume                                                        sssn relaxed states graph si  heuristics based wellknown tech depth discounted metric dris  nique computing relaxed planning graph hoffmann                   n−                                                                                                  nebel  view graph composed relaxed   drms    ∑ msi − msir   states relaxed state depth generated applying                 positive effects actions performed msi metric function evaluated relaxed  relaxed state depth ignoring delete lists state si discount factor  ≤ ≤   applying actions step                function optimistic respect preferences    heuristics given computed state easy pessimistic respect preferences  constructing relaxed graph starting growing look hard intuitively function estimates met  graph goal facts preference facts appear ric plan successor planning state “be  relaxed state reach empirically determined lieving” satisfaction preferences appear  bound depth relaxed states goal facts corre easier observe msi − msi  spond hard goals preference facts correspond metric value gained passing state si state si                                                     ijcai                                                                                  multiplied  decreases input  init initial state goal hardconstraintsasetofhard  creases observe metric gains dis constraints userheuristic heuristic function                                                                metricboundfn function estimating metric partial  counted preferences weighted higher pddl    plan  metric higher impact value dthat begin  achieves desired tradeoff ease achiev bestmetric ← worst case upper bound heuristicfn ←                                                           frontier ← initfrontierinit  ing preference value achieving          frontier  ∅    computational advantage function current ← removebestfrontier  easy compute opposed approaches ←evaluate hardconstraints current                                                            false  heuristic needs make explicit selection pref current plan metric  bestmetric  erences pursued planner                        output current plan                                                               ﬁrst plan  sequence planning episodes                                 heuristicfn ← userheuristic                                                                frontier ← initfrontierinit search restarted  search started plan al hardconstraints ← hardconstraints∪  gorithm uses goal distance function heuristic   alwaysmetricboundfn bestmetric  standard best ﬁrst search heuristics ignored bestmetric ← metricfncurrent  ﬁrst planning episode motivated fact succ ← expandcurrent                                                                   ←                          goal hard condition satisﬁed rontier merge succ frontier heuristicfn  problems heuristics guide planner end  wards achieving preferred plan conﬂict achieving algorithm hplanp’s search algorithm  goal cause search difﬁcult    ﬁnding ﬁrst plan algorithm restarts search  scratch time uses combination function  heuristics guide planner preferred plan pddl domains contain hard constraints  let userheuristic denote combination user    addition pruning bounding algorithm prunes  heuristic combination heuris search space state violates hard constraint  tic functions paper consider putting obtain algorithm   small subset possible combinations particular  consider prioritized sequences heuristics  properties algorithm  lower priority heuristics used break ties  higher priority heuristics                           show certain conditions search algo    achieving goal remains mandatory user   rithm guaranteed return optimal koptimal  heuristic uses ﬁrst priority lution important note conditions impose  heuristics lower priority exam restriction userheuristic function particular  ple consider prioritization sequence gdowhen ensure optimality function inadmis  comparing states frontier planner ﬁrst looks sible planning important inadmissible heuristics  function best state lower value typically required adequate search performance  lower distance goal tie require proofs metricboundfnsbea  uses best state smaller lower bound metric value optimal plan extend  value finally tie use function ing case say pruning soundwhen  section  investigate effectiveness sound pruning used optimal plans pruned  prioritized heuristics sequences                     search space sure state leads    component planning algorithm optimal plan discarded algorithm  utilize scheme caching relaxed states heuristic optimality guaranteed algorithm stops  computed states shortcircuit lemma  algorithm  terminates sound  laxed planning graph construction relaxed state pruning used plan returned  encountered constructing relaxed states optimal  expensive caching scheme yields useful speedup proof each planning episode returned better plan  increasing plan quality completed ﬁrst algorithm stops ﬁnal planning episode  planning episode using want ensure each sub rejected possible plans bounding function  sequent planning episode yields better plan        prunes optimal plan means plan better    achieved using increasingly restrictive pruning returned exists                   each planning episode particular each planning described metric function non  episode algorithm prunes search space state increasing number achieved preferences  estimate reach better plan best plan lower bound matter fact metric functions used  far estimate provided function met ipc nonincreasing number achieved pref  ricboundfn given argument search erences  algorithm metricboundfns compute estimate    lemma  does guarantee optimal solution  lowerbound metric plan extending swehave algorithm terminate  used heuristics bounding guarantee impose conditions sound                                                     ijcai                                                    
