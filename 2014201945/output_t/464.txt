reasoning interaction knowlege time concurrent actions                                                   situation calculus                                                     richard scherl                                              science department                                                   monmouth university                                              west long branch new jersey                                                     usa                                                  rscherlmonmouthedu                             abstract                                 furthermore speci£cation agents ability achieve                                                                  goal general involves requiring agent know        formal framework specifying developing                                                                  arrive goal state moore  lesperance et        agentsrobots handle knowledge                                                                  al  ability achieve particular goals        sensing actions time concurrency re•                                                                 involve ability perform concurrent actions integra•       searchers extended situation calculus                                                                  tion knowledge concurrency important step        handle knowledge sensing actions re•                                                                 fully formalizing aspects ability        searchers addressed issue adding time        concurrent actions fea•             develop framework situation calcu•       tures combined uni£ed logical theory        lus  £rstorder formalism representing reasoning        knowledge sensing time concurrency re•        effects actions language based        sult preserves solution frame problem       dialect situation calculus used cognitive        previous work maintains distinction          robotics group university toronto certainly an•       indexical objective knowledge time         formalism used ai numer•       capable representing various ways         ous varying formalisms available nrepresenting        concurrency interacts time knowledge            reasoning action shanahan         furthermore method based regression de•          baral et al  knowledge incorporated        veloped solving projection problem the•       number example lobo et al         ories speci£ed version situation calcu•    thielscher  outside ai proper fa       lus                                                      gin et al  interaction knowledge time                                                                    working situation calculus able    introduction                                                 extend previous work reasoning regression theo•                                                                 rem proving cover language developed   aim paper develop uni£ed approach                                                                  furthermore work suitable incorporated   axiomatizing interaction knowledge sensing time                                                                  robot programming languages golog congolog   concurrency actions preconditions include                                                                  used specify agents reason   knowledge preconditions sensing actions alter knowledge                                                                  interactions time knowledge concurrent actions in•  knowledge produced depends relative time                                                                  cluding sensing actions   sensing actions occur   sorts actions occur concurrently interacts  situation calculus mccarthy hayes    agents evolving knowledge time                        language modeling dynamically changing worlds      consider robot gathering knowledge environ•     changes world results actions pos•  ment moves concurrently panning camera     sible world histories consisting sequences actions   various points senses environment presence  represented situations situation calculus   objects various characteristics knowledge ob•     used agent planning goal regression reiter reiter   tained through sensing positions objects various sizes  proposed simple solution frame problem   shapes colors depends position robot   approach axiomatization situation calculus al•  particular point time angle camera  approach frame problem requires certain   purposes results sensing actions occur simplifying assumptions proven useful   time important need      foundation goal regression programming lan•  distinct concurrent sensing actions binocular stereop  guage golog goal regression extended scherl   sis simultaneous use features levesquescherl levesque  apply agent   texture gradients shading achieve knowledge depth    sense properties external world read   relationships relative absolute time numbers piece paper determine shape   important                                                     object       reasoning actions change                                                                                       paper combines extends work scherl            treat knowledge ¤uent introduce binary rela•   levesque scherl levesque  incorporating    tion read accessible treat    model concurrency time presented reiter re•        way auent words    nter  time reiters simple solution    point view situation calculus argument    frame problem preserved real difficulty per• official situation argument expressing known    form synthesis way important distinc•  situation £rst argument just auxiliary like      tion indexical objective time lesperance     broken     levesque  preserved                                   notation knowspnows read known      agent currently knows absolute time     situation introduced abbreviation    knows absolute time executing action  formula uses example    doesnt know absolute time knows    began executing action number time units ago    unless course reads clock maintaining    properties results presented allow representation special indexical instantiated situation vari•   various ways actions including sensing ac•   able expansion    tions possibly concurrent actions interact time approach handles actions make known    knowledge method regression extended   denotation term case needs notation    work augmented language                            kreftnow de£ned follows      section  gives quick introduction situation calcu•   lus section  does foundational axioms   representation knowledge sensing actions cov•   ered section  concurrency integrated frame•   work section  section  covers additional con•        general knowledgeproducing ac•  structs language illustrates representational tions ordinary actions characterize   power number properties formulation dis•      following presentation scherl   cussed section  regression covered section  fi•   levesque  function sr sensing result   nally section  conclusion                            each action sensingresult axiom form                                                                                                                             situation calculus frame problem                                                                  result yes true   space does permit exposition background      symbols given quotes indicate   material situation calculus framework developed    ents sensing result function senseq axiomatized   reiter  followed details                                                                  follows   scherl  assume frame problem   handled utilizing successor state axioms                                                                       foundational axioms                                            ordinary actions sr result   following lin reiter  reiter  founda•     sped result signi£cant example   tional axioms situation calculus utilized     axioms provide definition says                                                                                                                            sequence zero executable actions   situation situation space does    case action makes denotation   permit development material details term known   reiter  scherl                                                                                                                              epistemic fluent                                         denotation worlds                                                                  kref dorea   scherl levesque scherl levesque  adapt   standard possibleworld model knowledge situation   calculus £rst moore moore  informally       form successor state axiom con•  think binary accessibility relation   currency follows   situations situation understood   accessible situation far agent knows sit•                                                       uation situation known   true accessible conversely   known false accessible situa• relation particular situation completely   tion                                                          determined relation action        earlier version work appeared zim note using convention means arguments   merbaum scherl                                      reversed normal modal logic use                                                                              reasoning actions change  concurrency                                                  needed relate time actiontime pair   originally de£ned situation calculus mccarthy   start situation axiom giving   hayes  actions occur sequentially      start time initial situation de£ne variant   action completed begin furthermore      notation   facility deal continuous passage                                                            time contrasted formalisms event    adopt signi£cant change reiters requirement   calculus naturally handle concurrent actions   concurrent actions coherent   continuous time                                               actiontime pair collection time pairs                                                                  collection    concurrency knowledge   work pinto pinto  reiter reiter    proposed approach dealing concurrency natural   actions continuous time maintaining so•  lution frame problem reiter reiter  de£ned      set actiontime pairs coherent each   new sort concurrent sets simple actions variables       time component           represent sort actions represent             de£nition time readily extended sets   sort concurrent reiters notation time actions concurrent actions allows de£ne function   occurrence value actions temporal argument    start situation resulting execution concur•  action form each action           rent action   axiom form time required indicate   time action      concurrent actions sets ordinary actions   taken represent instantaneous acts action dura•  tion represented instantaneous actions — start ac•  tion end action additionally foundational axioms    predicate possc  means possible exe•  modi£ed rule possibility prior actions having cute concurrent action situation   later times      want represent pressing action duration   pressing button keeps light approach   de£ne actions startpress endpress   introduce auent pressing needed succes•  sor state axiom follows                                                                  possible execute concurrent actions co•                                                              herent each simple actions possible                                                                    implicitly assume additional sort ranging time                                                                  points integers rationals reals depending   approach representing actions duration some•   wants model time standard arabic numerals   thing make use                                used represent time points additionally symbols      use temporal argument actions problem• addition subtraction interpreted usual oper•  atic presence knowledge given successor state   ations numbers integers reals   axiom require agent know time   action unknown previous situation   precondition interactions   avoid represent time argument need able conclude particular concurrent   instantaneous actions                                         action possible situation order machinery     instead represent instantaneous actions asso•    developed rest paper work unfortu•  ciated times tuple form functions             nately sentence  does suffice conditional   action time de£ned returning rst second ele•      changed biconditional precondition in•  ments tuple                                            teraction problem pinto                                                                      issue needs handled axiomatizer                                                               domain example axiomatizer provide fol•                                                                 lowing axiom                                                              pairs represented variables elements   sort actiontime pairs concurrent actions set   tuples sort action contains actions   temporal argument     following                                   discussed pinto   axiomatization                                                                  precint domain dependent increasing                                                               levels       reasoning actions change                                                                                      purposes paper point what•  successor state axiom needs modi£ed    solution used precondition interaction problem include scond    ordinary situation calculus carries case    knowledge sensing     successor state axiom          concurrency    successor state axiom using concurrency    stated alternative ways depending condi•   tions wishes apply regarding agents knowledge    time continue require relation particular    situation completely determined relation     set concurrent actions                                                                   action appropriate scon axiom needs      following successor state axiom models agent                                                                  written actions action simply    knows time passing agent    accurate clock                                                                                                                                                                     language examples                                                                   constructs                                                                  wc need way refer current time speci•                                                                 fying value current time achieve use                                                                  special indexical term expansion term re•                                                                placed appropriate situation term startnow                                                                  used refer current time illustrate                                                                 example agents knowing objective time expressed    executing set concurrent actions situation know start expands   far agent knows situation    result performing previously accessible   situation provided possible            augment language number additional ex•  identical terms sensed furthermore pressions based ideas developed lesperancc   required concurrent action performed  levesque lesperance levesque  require   situations accessible identical terms use notion precedence situations de£ncd   individual actions make set                  earlier note distinguish relation      note required time actions integers used represent time points relations   accessible situations identical case situations de£ned foundational axioms   force agent know objective time execut• situation calculus   ing action required difference   start current situation start  macro happened introduced allow talk   previous situation accessible situations in• action occurring particular time point   cluding actual situation requirement does ensure   agent knows time passing ob•  jective time known known action   occurred                                                                                                                           concurrency sensing                                   speci£es action occurred prior time   readily imagine cases sensing actions        point during actions duration   desired result sensing knowing       macro wasat introduced allow assert   proposition holds depends action occurring   ¤uent true particular point time   concurrently example light needs turned   camera clicked light sensing   produces knowledge      consider representing requirement light switch   pressed sensep occurs knowledge           speci£es held time pre•  holds result execution        ceded situation preceded   senskp need de£ne predicate scond                   introduce special indexical needed                                                                 ensure correct situation substituted situa•             scondshnsepcs  pressings                                                                  tion argument predicate middle argument      possibilities considered scherl      wasat                                                                             reasoning actions change  properties formulation                               reasoning   show distinction indexical regression operator de£ned relative set suc•  objective time preserved                             cessor state axioms space limitations allow                                                                sketch regression operators details                                                                scherl                                                                    operators satisfy following regression theorem                                                                theorem  ground situation term formula                                                                                                                                 initial axiomatization domain                                                                set successor state axioms                                                                   regression operators   agents know objective time know   time passed occurrence par• regression operator de£ned relative set suc•  ticular action time particular nuent cessor state axioms £rst parts de£nition   true                                                        regression operator concern ordinary   proposition  knowledge indexical time                 knowledgeproducing actions reiter  ex•                                                               actly reiter  additionally                                                                necessary correctly regress equality predicate dis•                                                               cussed scherl levesque  reiter                                                                    additional steps needed extend regression op•  proposition  knowledge indexical time                                                                 erator knowledgeproducing actions de£nitions                                                                needed speci£cation follow arbitrary                                                                sentence situation term sentence                                                                results instantiating occurrence   additionally crucial results scherl levesque   reverse operation result instantiating    carry case considered include  occurrence   proposition  default persistence ignorance         step covers case regressing knows operator   action situation ifiknowsp holds    through nonknowledgeproducing action step vi covers   axiomatization entails                                       case regressing knows operator through knowl•                                                               edge producing action de£nitions new                                                                situation variable                                                                  does contain knowledgeproducing ac•                                                                    tion                                                                                               knowspossc                     iknowsp doa   holds                                                                vi does contain knowledgeproducing action   proposition  knowledge incorporation   knowledgeproducing action negation   vor negation ¤uent   situation axiomatization entails                    knows                                                                   special function trans replaces                                                       identical action each actiontime pairs re•                                                               places time portion relative time ex•                                                           pression form   timknow occurs                      knows                                     situation term form doc tlmer    hold                                                   starts   time action                     knows                                     time pair replaced   tlmenow   holds                                               properly handled operators regressing equality   proposition  memory situations          predicates   knowsp holds knows holds long                   regression operators happened wasat follow   axiomatization entails                                viii     results ensure actions affect knowledge   appropriate way       reasoning actions change                                                                                 
