                                          answer set optimization               gerhard brewka ilkka niemela miroslaw truszczynski            comp sci institute dept comp sci eng dept comp sci            university leipzig helsinki university technology university kentucky             leipzig germany helsinki finland lexington ky  usa    brewkainformatikunileipzigde ilkkaniemelahutfi mirekcsukyedu                               abstract                                time syntax logic programs restric•                                                                    tive allow fast implementations        investigate combination answer set pro•            highly efficient answerset provers developed        gramming qualitative optimization techniques            advanced smodels niemela si•       answer set optimization programs aso pro•                   mons  dlv eiter et al         grams parts generating program              produces answer sets representing possible          increase ease use logic programs knowledge        solutions preference program expresses               representation researchers suggested investigated        user preferences induces preference relation        extensions basic formalism wellknown ex•       answer sets based degree              amples extensions include disjunctive logic programs        rules satisfied                                programs cardinality weight constraints si•                                                                 mons et ai         discuss possible applications aso program•       ming complexity results propose imple•            important issue applications represen•       mentation techniques analyze relation•       tation preferences reasoning researchers        ship programs cpnetworks               investigated preferences program rules schaub                                                                  wang  program literals sakama                                                                 oue  contextdependent preferences literals    introduction                                                 through use ordered disjunction brewka                                                                     representing handling preferences formalism   answer set semantics gelfond lifschitz  de•         logic programs main topic paper   scribes meaning logic program terms sets      approach differs existing ones important as•  literals exact definition answer sets depends    pect specifying preference relation   kind rules used properties re• rules literals single logic program use differ•  quired answer sets closed rules  ent programs program used generate   grounded each literal derivation using appli• answer sets define space acceptable solutions   cable rules answer set programming         contextdependent preferences described second pro•  popular knowledge representation tool     gram preference program preferences   reasons                                              used compare answer sets  form pref•    logic programs expressive model typ•    erence ordering acceptable solutions intuitively rules      ical knowledge representation problems ai particu•   hard constraints specify conditions an•     lar availability default negation body rules swer set satisfy rules soft constraints      makes possible represent defeasible information      describing conditions answer set    problems reasoning actions planning diag•   considered better      nosis belief revision product configuration ele•    decoupling answerset generation answerset      gant formulations logic programs models pro•  comparison advantages      grams proofs queries problem so•                                                                  method comparing answer sets independent      lutions lifschitz  soininen  baral                                                                      type generating program    semantics answer sets intuitive avoids pit•                                                                    type logic program instance normal extended      falls resolutionbased systems like prolog instance                                                                     disjunctive involving cardinality weight atoms long      independent order rules written                                                                     welldefined semantics given collection      correctly handles loops                                                                     sets literals      authors acknowledge support dfg grant computa•   preferences soft constraints specified in•  tional dialektik br  academy finland grant       dependently  hard constraints makes pref•  nsf grant iis respectively                          erence elicitation easier task broken sepa      nonmonotonic reasoning                                                                                                    rate smaller subtasks makes overall      setting better aligned practical applications      possible determined external factors      define notion optimization program      available resources constraints environment de•                                                                 definition  answerset optimization aso program      sign engineering constraints products                                                                  pair logic program called      preferred described independently different                                                                  generating program   preference program      agents users customers groups customers                                           pr€                                                                 mentioned earlier program used      rest paper organized follows                                                                  generating answersets type require   section introduces new formalism answerset optimization                                                                  semantics given terms sets literals an•  programs defines syntax semantics subse•                                                                 swer sets associated programs   quent section provides examples additional observations                                                                    key question does preference program   basic formalism section  show meta                                                                       determine preference ordering answer sets de•  preferences preferences preference rules                                                                  scribed generating program  let consider   introduced dealt discuss complexity                                                                  answer set rule form  given set   computational problems arising context for•                                                                 literals three different situations possible   malism propose implementation techniques work   related approach proposed tboutilier et al      body satisfied    investigate relationship section  conclude   additional discussion related work possible   body satisfied satis•  extensions formalism presented                       fied                                                                   body satisfied satisfied    optimization programs                                              use separate programs space answer   case  rule irrelevant rule   sets preferences                               does apply case  subtle rule lists                                                                  preferences options options   definition  let set atoms preference program       holds consider kind irrelevance let   finite set rules form                    assume rule states red better green                                                               contains blue color case preference                                                                  red green appears irrelevant does   bjs literals expressions       mention colors case  preference   atom boolean combi•           expressed rule satisfied degree   nations defined                          holds define satisfaction degree   rule intuitively reads answer set contains                                                  irrelevant          does contain literals bi bm   preferred                     concerning relationship  sat•  precise semantics later section                    isfaction degrees viable options exist      boolean combination formula built atoms    consider  incomparable values based view   means disjunction conjunction strong de•      irrelevance compared proper satisfaction   fault negation restriction strong negation degrees according view selecting blue ex•  allowed appear atoms default nega• ample better worse selecting green   tion literals example                   red argue green violates prefer•  boolean combination using                ences blue does blue preferable   boolean combinations say literals heads   green adopt view use fol•  preference rules gives additional expressiveness us•    lowing preorder compare satisfaction degrees fig    ing conjunction express certain combinations   properties preferred combinations disjunction   allows express certain options equally preferred   instance rule says case    best option equally preferred second   best options preferred option finally   use expressions like   prefer properties having                 fig  preorder satisfaction degrees                                                                    values   regarded equally good   definition  literals satisfaction                           better addition each   boolean combination denoted defined            write strictly better                                                               definition  let preference pro                                                                gram let answer set say induces                                                                  satisfaction vector                                                                                             nonmonotonic reasoning extend preorder satisfaction degrees preorders   satisfaction vectors answer sets follows                                                                      satisfaction vectors                                                                                                      respectively                                                                   equally good maximally preferred   refer ordering preference satisfaction order• presence  answer sets   ing psordcring short                               equally good                                                                   metapreferences                                                                  notion optimality underlying approach some•                                                                 weak general optimal answer sets exist    examples                                                     wants additional means express pref•                                                                 erence rule program impor•  prototypical application aso programs configu•     tant generalization aso programs   ration problems describes possible configurations        possible express metapreferences   preferences use dinner example                                                                  definition  ranked aso program sequence   similar discussed brewka  conve•  nient use programs cardinality constraints generate   answer sets programs allow use special atoms   form literals rep•                    consisting generating program sequence   resent true     pairwise disjoint preference programs   rules built cardinality constraints principle rank rule denoted rank   replaced sets rules constraints make                                                                  unique integer ifor   problem specifications concise readable   precise definitions refer reader simons et   intuitively preference rules lower rank preferred                                                            preference rules higher rank mod•      let assume pgen consists rules               ify definition preference answer sets taking                                                                  preferences rules account                                                                  definition  ranked                                                                    aso program let answer sets pgen                                                                  define  far preference rule                                                                                    does hold rule   each constraints enforces selection exactly                                                                  rank rank   items lists answer set generates   space answer sets let assume                        clearly preorder rank extends stronger pre•                                                        order easy optimal answer sets                                                                  obtained following way select answer sets                                                                    optimal wrt pick ones optimal wrt                                                                                                                                     generalization ranked partially ordered   preference program designates nonpreferred an•    aso programs straightforward presented     swer sets containing fish white answer sets con•  lack space   taining beef red beer answer sets contain•   cases natural ordering preference rules   ing beer pie note objective derived structure preference program   answer sets eliminated accomplished      each preference program define dependency graph   simply adding three constraints                         gp follows atoms appearing form vertex                                                                  set gp directed edge vertex                                                                  vertex gp rule appears                                                                  head appears body                                                                    graph gp acyclic natural ranking   original program role preference program    atoms define rank atom   define soft constraints indepen• recursively follows   atom   dently generating program instance later    predecessors gp define   learn constraints need   included pgen additional constraints lead     possible extension concerns setting weighted   inconsistency does happen approach    preference rules compare answer sets use weighted   answer sets generated extended program             sums violation degrees preference rules       nonmonotonic reasoning                                                                                                  maximum ranks predecessors gp exists computation starts arbitrary answer set   incremented                                       generated generator answer set given      ranking atoms implies ranking rules tester program tester fails generate strictly better    define rank preference rule        optimal answer set   maximum rank atom appearing head       strictly better answer set discovered tester run     preference programs acyclic dependency  new answer set input continues optimal   graphs acyclic preference programs important answer set reached   reasons                                             technique adapted computing optimal an•    commonly appear practice preferences of• swer sets aso program choosing      described according partial order features suitable tester program given answer set      defining answer sets features im• tester program constructed adding following      portant instance dinner example rules generator program      users start preferences concerning  each preference include fact      main course condition preferences satisfaction degree      concerning appetizer beverage choice  include rules      main course finally pref•     erences concerning dessert based earlier choices      main course appetizer beverage     just demonstrated case gp      acyclic exists natural ranking rules      ranking implied program allows  add facts geq giving preorder set      strengthen ordering relation answer sets de•     scribed definition  resulting order•                                                          each boolean combination non     ing determined acyclic preference program —                                                            atomic subexpressions introduce new atom add      canonical psordering                                                            rules capturing conditions expression                                                            satisfied example disjunction    complexity implementation                          add rules   complexity aso programs depends class  each preference form  add rules   generating programs simplify treatment con•  sider generating programs deciding exis•  tence answer set npcomplete class pro•  grams includes ground normal programs possibly extended   strong negation weight cardinality constraints   lsimons eta     following results indicate allowing prefer•  ences adds extra layer complexity   theorem  aso program   answer set deciding optimal   conpcomplete                                      pt answer set  restricted original                                                          language answer set strictly   theorem  given aso program literal decid• preferred answer set answer   ing optimal answer set set exists        complete     complexity results imply unless polynomial  relationship cpnetworks   hierarchy collapses preference rules translated important approach problem eliciting ap•  generating rules polynomial time problem find• proximating preferences cpnetworks proposed   ing optimal answer set aso program developed boutilier et al  review   mapped polynomial time problem finding answer approach show relates work   set program obtained translating aso program approach ctpnetworks concerned compar•  set generating rules                        ing vectors feature values configurations let     brewka et al  implementation tech•              set features attributes each   nique computing optimal answer sets logic programs feature domain finite non•  ordered disjunction standard answer set set values selections assume   prover developed similar technique earlier domains pairwise disjoint configuration tuple   used janhunen et ai  compute stable models       disjunctive logic programs using smodels computa•    tion based tester program takes input answer  follow prolog convention terms starting capital   set generates strictly better answer set letters arc variables write avoid confusion                                                                                  nonmonotonic reasoning   user prefers configurations                represent fact including   number configurations general exponential rule             impractical directly elicit store   users preference ordering set configurations preference program   task identify partial sense basic level syntax approach extends   information users preferences develop ways cpnets particular boutilier et  concerned   approximate preference ordering implied par• fixed space configurations contain   tial information formalism cpnetworks boutilier feature exactly value domain contrast   et al  approach accomplish       approach substantial flexibility defining     cpnetwork set features pair gp answer sets varying generator program   directed graph vertices features addition approach robust user prefer•  edges graph determine dependencies ences inconsistent situation occurs prac•  features preferences value feature depend tice instance user specify preference rule   values selected parents network                           unaware situations   each feature each selection values                                                          body satisfied inconsisten•  parent features  cpnetwork specifies total ordering cies modeled cpnetworks approach   relation domain total orderings form effect preference rules   component cpnetwork                        violated bodies true     information contained cpnetwork implies pref• key question relationship   erences configurations configuration onestep semantics approaches observe   preferred configuration feature given different let consider following example   configuration  ua denote value boutilier et al  features    domain selected                            values respectively feature depends     vb  wb feature          feature preferences specified follows      feature                notation aso programs    va strictly preferred wa ordering     domain specified network selection      parents given equivalently                                                      cpordering preferred   configuration cppreferred ob•      onestep improvement leading   tained sequence onestep improvements hand strictly pre•  easy acyclic cpnetworks acyclic networks ferred psordering corresponding   arise situations occurring practice or• satisfactiondegree vectors  respec•  dering partial ordering cpordering tively reason meaning rules     show information represented approaches slightly different cpnct approach   cpnetwork features                               body means form domain fea•  represented means aso programs specify ture answer sets satisfying body answer set   space configurations answer sets program better agree features       each feature contains makes true makes true approach   following rule assume                                like soft constraint expressing                                                          body true reason prefer                                                          answer sets satisfying body answer set                                                          preferred   discussed section  rule enforces se• rules program satisfied   lection exactly listed values answer set sense different interpretation   answer sets program precisely ceteris paribus — things equal — phrase   configurations                                   precisely interpretation meant     specify preferences proceed follows let things equal cpnetwork approach   feature let set par•               things selections values fea•  ents cpnetwork selection            tures approach   values features respectively network        degree satisfaction rules program   specifies ordering say domain                 general basic approach yields weaker ordering                                                          following theorem      restriction domains totally ordered dropped   adopt following boutilier et al  discussion theorem  let acyclic cpnetwork let   simple                                                configurations strictly preferred                                                          psordering determined aso program      ordering captures intuition ceteris paribus   things equal aspect discussed boutilier strictly preferred un•  et ai                                           der cpordering implied       nonmonotonic reasoning                                                                                  
