 
　　　as a step toward automatic circuit understanding  we have developed a method for parsing circuit topology in a deductive system called duck. a circuit is viewed as a sentence and its elements as words. generating circuits with specific functions is represented by deductive rules analogous to definite clause grammars. using those rules  an object circuit is decomposed into a parse tree of functional blocks in terms of logic programming. 
	1 	introduction 
　　　electronic circuits are designed as a goal oriented composition of basic circuits with specific functions. therefore  understanding a circuit means finding a hierarchical structure of functional blocks and rediscovering the designer's original intentions. almost all designed circuits have the features of language which carries information of the speaker's intentions mapped on its structures. in addition  a circuit schematic not only represents a physical circuit  but also functions as a written language for electronic engineers. 
　　　we have developed a method for parsing circuit topology in a deductive system called duck . a circuit is viewed as a sentence and its elements as words. generating circuits with specific functions is represented by the deductive rules analogous to definite clause grammars . using those rules  an object circuit is decomposed into a parse tree of functional blocks in terms of logic programming. the parsing circuit topology is a step toward automatic circuit understanding. 
	ii 	representation of circuits 
because a resistor does not have polarity.   npn-tr q1 #1 #1 #1   denotes an npn-transistor named q1 with the base connected to node #1  the emitter to node #1  and the collector to node #1 respectively. a circuit is represented by a tuple of those terms surrounded by  !   and    . the order of the elements in the tuple is not important. 

figure 1: circuit cd1 
b. 	macro elements 
　　in designing analog ic circuits   there are many functional blocks which are viewed as macro elements  macro devices . the macro elements in figure 1  such as  diode-connected transistor    series circuit of diodes   and  voltage regulator  are represented as follows in the parsing process of the circuit. 
　　　
1 	t. tanaka 
element. macro elements correspond to non-terminal symbols  while ordinary elements terminal symbols. 
	ill 	parsing circuit topology 
a. 	rules for parsing 
　　　in order to find a specific element in a circuit  a membership predicate  mem-rest  is defined by the following assertion. 

   -marked symbols are universally quantified variables. the notation  !& x  matches any number of elements of a tuple  binding  x to a tuple of those elements. so   !& l  m !& r   matches any tuple of one or more elements  and binds  m to a member of the tuple   l to the left part  and  r to the right part of the rest  1 . using the predicate  memrest   we can separate an object circuit into an element and the rest: 
 mem-rest element object-circuit rest  
　　when we want to refer to macro elements in a circuit  we will use a predicate  subct   subcircuit  similar to  mem-resth. the difference is that the first argument of  subct  is an abstract element  macro element  rather than a real one. the 
figure 1: diode-connected transistor 
　　　rule  1  recursively defines  series circuit of diodes  as a macro element. the conjunctive part of the definition says  find a diode-connected transistor  q connected to  a and  b in the circuit  ct   and  find a series circuit of diodes  d connected to 
 b and  c in the rest of the circuit   then  give a name  s-dd  q  d  to the macro element . 
    -  subct  s-diode  name  a  c   ct  rt  
 or  subct  d-transistor  name  a  c   ct  rt   and 
 subct  d-transistor  q  a  b   ct  rt1  
 subct  s-diode  d  b  c   rt1  rt  
	 =  name  s-dd  q  d      	 1  

figure 1: series circuit of diodes 
　　　the following rule enables us to refer to a resistor represented by   resistor  r  a  b   or   resistor  r  b  a   as   res  r  a  b  . 
    -  subct  res  r  a  b   ct  rt  
 or  mem-rest  resistor  r  a  b   ct  rt  
 mem-rest  resistor  r  b  a   ct  rt    
macro elements such as  voltage regulator  and 
 current source  are also defined  figure 1  1   
　　　in definite clause grammars   a part of a sentence under processing is represented by two pointers. each pointer is composed of a list of words occurring after that point in the sentence. the last two arguments  ct and  rest of the predicate subct 
correspond to those pointers as shown in figure 1. the parsing process proceeds similarly. the main difference is that the object circuit is not a string of words but a set of elements. also  every elements has a structure representing the circuit topology. 
　　　

figure 1: sentence vs. circuit 
　　　feeding in the following goal causes duck to start parsing.  cd1  stands for the tuple of cd1. 
 1  
as the last argument of the predicate subct is substituted by a null circuit  !     the goal asks whether the total circuit cd1 pictured in figure 1 is a macro element  comparator with internal voltage reference . the comparator is defined as a conjunction of two sub-goals:  single-ended differential amplifier   and  voltage source  for reference   differential amplifier  is defined as a conjunction of  emitter-coupled pair    current source   and a resistor for load   voltage source  is defined by either  voltage regulator  or  voltage divider  as disjunctive sub-goals. these goals are searched in top-down depth-first manner. the initial goal  1  succeeds  and we can eventurally acquire values for the variables: 

	t. tanaka 	1 

　　　the name of the macro element keeps track of succeeded goals. it forms a hierarchical structure of macro elements and can be viewed as a parse tree for the circuit corresponding to the syntactic structure of a sentence  figure 1 . 
c. 	behavior of  subct  
　　　functional blocks in analog ic designs are coded into deductive rules. the rules define a set of circuits in the same way that generative grammars define a language. if the object circuit is given  and if the circuit is a member of the set  the following goal parses the circuit  
 subct  what-circuit object-circuit !    
in this case  the top-down mechanism does not work efficiently  because the first argument does not have information about how to parse the circuit. duck tries the rules one after another until the rest part of subct becomes a null circuit !  . this parsing mechanism works effectively when a circuit goal is given such as  1 . 
　　　even if an object circuit is not a member of the set  if the null circuit !   is replaced by a variable  rest  the goal can identify all functional blocks which are defined as macro elements in the circuit. 
　　　as a consequence of its realization in logic programming  data flows to the predicate subct are bilateral. if a macro element is given instead of the object circuit  the following goal works as a circuit generator. we can then acquire the generated circuit from the variable  ct. 
 subct macro-element  ct !    
	iv 	electrical conditions 
a. 	transferring conditions between goals 
　　　a  voltage divider  is defined by a pair of resistors   v-div  x  y   as shown in figure 1  duck finds ten voltage dividers in the circuit of figure 1 according to the definition  but eight of them such as   v-div rl r1   are not intended as voltage dividers. these undesired interpretations do not form macro elements which contribute to the goal of total circuit  so they are to be rejected in the parsing process. if we are informed that #1 and #1 are power nodes connected to the power supply  we can reject undesired 
　　　
1 	t. tanaka 

figure 1: voltage divider 
interpretations more efficiently. that is  we can use an electrical condition which states that the node  out of a voltage divider must not be connected to power nodes. 
　　　the electrical conditions are not only used as inputs for identifying a macro element  but also used as outputs. if  voltage regulator  is identified in a circuit  we can assume that the input node  in and the common node  com of the voltage regulator must be power nodes. those assumptions are used afterward in identifying another macro element such as a voltage divider efficiently. in order to transfer the information between goals  we will introduce new variables   incond  and   out-cond  to form a new predicate  subctc   sub-circuit with conditions . 
　　　we will also re-define  voltage regulator  using this predicate: 

b. 	context-dependent circuit generation 
　　　suppose that a goal generates two conjunctive sub-goals and each goal generates a voltage source in designing circuits. when one of the voltages is derived from the other  an engineer may combine two voltage sources into one voltage source for simplicity. that is  he has the ability to use context dependent circuit generation rules  while we have developed the rules corresponding to context-free grammars. 
　　　using the predicate subctc  we can overcome the problem of combining circuits. when a subgoal finds a voltage source  the subgoal generates information pertaining to the voltage source as an electrical condition and transfers the information to another subgoal which needs a voltage source. then the subgoal succeeds by the transferred conditions instead of finding another voltage source. 
c 	rules for combined circuits 
　　　we will define the voltage source using the predicate subctc  so that it generates a term   ctrld-voltage  v-soc  v   out  com   as an electrical condition for the output. the condition states that the voltage across  out and  com is controlled by the voltage source   v-soc  v  . if the goal succeeds  the rest of the circuit no longer contains the voltage source  but the  out-cond contains the electrical condition term for another goal which needs a voltage source. using this condition  we can define a current source which shares its voltage source with another circuit. 
	v 	conclusion 
　　　an electronic circuit is designed as a goal oriented composition of functional blocks. therefore  if a circuit goal is given  the goal contains the information needed to read the circuit. the top-down mechanism effectively analyzes an electronic circuit according to the goal. the parsing circuit topology is a step toward automatic circuit understanding similar to syntactic analysis of language. but  circuit understanding implies more than language understanding; unlike language  a circuit not only represents designer's intentions  but also represents the physical circuit itself. 
　　　we have tacitly employed a closed world assumption on circuit topology. that is  no element or device exists without being explicitly included in the circuit tuple. however  the closed world assumption is no longer appropriate for a tuple of electrical conditions. the tuple represents only a small portion of the electrical properties of an object circuit. if a specific term is not found in the tuple  we can not conclude that the circuit does not have the electrical property denoted by the term. negative information on electrical conditions must be explicitly mentioned in an open world assumption. 
　　　the electrical conditions define the relationship between a circuit topology and its electrical characteristics. we can introduce more terms relating to electrical behavior to the definitions of functional circuits. we may introduce terms of the form    q p   in which  p  and  q  specify electrical behavior. when a circuit goal succeeds  the argument  outcond of the predicate subctc contains rules of electrical behavior for the circuit. we are now in the process of developing such rules. 
acknowledgments 
　　　1 would like to thank: prof. drew mcdermott for duck  isao nagasawa and david littleboy for their helpful advice  and al-circle aiueo for discussions. 
