
reasoning about the knowledge of an agent is an important problem in many areas of ai. for example in diagnosis a basic question about a system is whether it is possible to diagnose it  that is  whether it is always possible to know whether a faulty behavior has occurred. in this paper we investigate the complexity of this diagnosability problem and the size of automata that perform diagnosis.
there are algorithms for testing diagnosability in polynomial time in the number of states in the system. for succinct system representations  which may be exponentially smaller than the state space of the system  the diagnosability problem is consequently in exptime. we show that this upper bound is not tight and that the decision problem is in fact pspace-complete.
on-line diagnosis can be carried out by diagnosers which are automata that recognize faulty behavior. we show that diagnosers in the worst case have a size that is exponential in the number of states  both for explicit and succinct system representations. this is a consequence of the diagnoser having to maintain beliefs about the state of the system.
1 introduction
faults in dynamic systems can be diagnosed by an external diagnoser that observes the system behavior and infers the occurrence of failure events  sampath et al.  1 . a main problem in on-line diagnosis is the construction of diagnosers which are deterministic finite automata that keep track of the possible state of the system on the basis of the observations and detect the occurrence of faults. existing algorithms for constructing diagnosers have exponential running times and construct diagnosers of exponential size. in this work we investigate the inherent complexity of diagnosers and the complexity of constructing them  giving tight upper and lower bounds for the sizes of smallest diagnosers and the time it takes to construct diagnosers. our results show that the asymptotic worst-case time and memory consumption of existing algorithms cannot be improved.
¡¡the work is based on the framework proposed by sampath et al. . since many systems exhibit regularities best captured by representing them in terms of state variables  we also consider a more compact representation with state variables. our results show that the exponentially more compact representation leads in the worst case to a corresponding increase of complexity.
¡¡the structure of the paper is as follows. in section 1 we define transition systems and succinct transition systems. section 1 defines the framework of diagnosers and diagnosability of sampath et al. . in section 1 we present the main results which establish the complexity of diagnosability testing. in section 1 we derive tight upper and lower bounds for the worst-case size of smallest diagnosers. section 1 discusses related work and concludes the paper.
1 preliminaries
we define transition systems followingsampath et al. .
definition 1  transition systems  a transition system is a
tuple where
¡¡  x is a set of states 
¡¡  ¦²o is a set of observable events 
¡¡  ¦²u is a set of unobservable events 
¡¡  ¦²f is a set of failure events 
¡¡  ¦Ä   x ¡Á  ¦²o ¡È ¦²u ¡È ¦²f  ¡Á x is a transition relation 
¡¡  s1 ¡Ê x is an initial state. initially  s1 is the state of the system. a sequence of events e1 ... en 1 takes place and the system goes through some states s1 s1 ... sn such that  si ei si+1  ¡Ê ¦Ä for all i ¡Ê {1 ... n   1}.
¡¡for is a sequence of events in t if there are states s1 ... sn such that  si ei si+1  ¡Ê ¦Ä for all i ¡Ê {1 ... n   1}.
¡¡the state sequence nor the unobservable or the failure events can be observed. detection of failures is based on the sequence of observable events only.
¡¡a basic assumption made by sampath et al.  is that there are no infinite event sequences exclusively consisting of unobservable events.
assumption 1 there is no cycle in the transition graph consisting of unobservable events only.
1 succinct system representation
the state spaces of many systems are highly regular  and the transition relations of events can be represented more compactly in terms of changes to the values of state variables. this also makes it possible to practically represent large systems. given a set a of state variables  a state is defined as a valuation of a. we will restrict to two-valued  boolean  state variables but in general there may be several different values. the transition relation associated with an event can be expressed as a propositional formula on. the set a consists of propositional variables a for every a ¡Ê a. when an event takes place  the variables in a represent the old values of the state variables and the variables in a represent the corresponding new values. for example  given state variables a = {a b}  an event that makes a true and does not change the value of b can be expressed as the formula.
an arbitrary binary relation on the valuations of a can be expressed as a propositional formula  which suggests a succinct representation of transition systems in terms of state variables and formulae.
definition 1  succinct transition systems 	a succinct
transition system is a tuple where
  a is a finite set of state variables 
  ¦²o is a set of observable events 
  ¦²u is a set of unobservable events 
  ¦²f is a set of failure events 
  ¦Ä : ¦²o¡È¦²u¡È¦²f ¡ú l assigns each event a propositional formula over which represents a binary relation on the set of states  and
  s1 is an initial state  a valuation of a .
¡¡there are other types of succinct representations for example based on petri nets  holloway et al.  1 . however  the petri net representation can be translated into the logic representation quite easily  assuming finite state petri nets with an n-safety property   but not vice versa  so the logic representation is more general.
¡¡any succinct transition system can be mapped to a transition system as follows.
definition 1 let be a succinct transition system. then define the transition system r t  =  where 1. x is the set of all valuations of a  and
1. 
1 diagnosability
sampath et al.  give a definition of diagnosability which we adapt to our notation.
¡¡let ¦Ò ¡Ê  ¦²o ¡È ¦²u ¡È ¦²f   be a sequence of events. we define its projection ¦Ð ¦Ò  to the observable events recursively as follows.

¡¡diagnosability is defined as the possibility to detect every occurrence of a failure event: the continuation of every event sequence that includes a failure event will at some future time point be observationally distinguishable from every event sequence that does not include a failure event.
definition 1  diagnosability  a transition system t =  is diagnosable iff there is an integer
d ¡Ý 1 such that for any sequence ¦Ò of events in t that ends in a failure event  for all sequences such that  and ¦Ð ¦Ò1  = ¦Ð ¦Ò1   ¦Ò1 includes a failure event.
¡¡the constant d is called the delay. not all failures can be detected immediately after they have taken place  and the delay expresses how many further events have to be observed before being certain that a failure has taken place.
¡¡whether a system is diagnosable or not is important when trying to construct a diagnoser for it. a diagnoser is a deterministic finite automaton that recognizes sequences of observable events that correspond to sequences of events that include at least one failure event. if a system is diagnosable then a diagnoser exists.
definition 1 a diagnoser is where
  q is a set of states  unrelated to the transition system  
  ¦²o is a set of observable events 
  ¦Ã : q ¡Á ¦²o ¡ú q is a partial function 
  z1 ¡Ê q is the initial state of the diagnoser  and
  y   q is the set of accepting states.
¡¡a sequence e1 ... en 1 of observable events takes a diagnoser through a sequence z1 ... zn of states such that ¦Ã zi ei  = zi+1. an execution z1 ... zn is accepting if zn ¡Ê y . to accept means to detect a failure event.
definition 1  is diagnoser for t	=
 with delay d  if
1. for every sequence e1 ... en en+1 ... em of events in t such that {e1 ... en 1}   ¦²o ¡È ¦²u and en ¡Ê ¦²f and |¦Ð en+1 ... em | ¡Ü d  there is a prefix of ¦Ð e1 ... en en+1 ... em  which the diagnoser accepts  and if
1. for a sequence e1 ... em of events in t the diagnoser accepts ¦Ð e1 ... em  then for some n ¡Ê {1 ... m    and
¡¡we can define diagnosers for succinct transition systems analogously through the reduction to transition systems.
¡¡in some cases there is no finite upper bound on how long it may take before a failure is detected. for a system to be diagnosable the delay must be bounded.
example 1  unbounded delay  consider the transition system in figure 1. in the starting state two events are possible  of which the leftmost one is a failure event. after this an

¡¡figure 1: delay may be arbitrarily long b
figure 1: delay may be quadratic in the number of states
unbounded number of unobservable events a may take place before the failure is diagnosed upon the occurrence of the observable event b.	
a bounded delay may be quadratic in the number of states.
example 1  quadratic delay  there are transition systems with a quadratic delay as depicted in figure 1  grastien  such that
aaaaabaaaacaaadaaea the first begins with a failure event but the second does not. the sequence ¦Ò can continue with a but ¦Ò cannot. this can be generalized to any number n of states. the delay is  n   1  +  n   1  + ¡¤¡¤¡¤ + 1 + 1 =  which is o n1  in the number of states. 
this is also an upper bound on bounded delays.
theorem 1 for a transition system with n states  if the system is diagnosable  then the delay is  where |x| is the number of states.
proof: assume s1s1 ¡¤¡¤¡¤¡¤¡¤¡¤sm 1em1smem and s 1s 1 ¡¤¡¤¡¤¡¤¡¤¡¤s m 1em1s me m are two equally long sequences of observable events interleaved with states that are distinguished at the last step  and not before  and of which the first contains an unobservable failure event and the second does not. all unobservable events and states other than s1 and those immediately preceding an observable event are not included in the above sequences.
¡¡for the sake of argument assume that there are pairs of states si s i and sj s j such that j   i  si = sj and s i = s j. now the sequence ei ... ej 1 of events between these pairs of states could be repeated arbitrarily many times to have a pair of much longer sequences of events that are distinguishable only after the last event. this would violate our assumption that the delay is bounded.
¡¡hence there are no i and j such that si = sj and s i = s j  which entails that every pair si s i occurs only once in the sequence. this entails that the length m of the sequences  and therefore the delay  is at most |x|1   |x|.
¡¡this bound can be tightened to  by noticing that there cannot be i and j such that si = s j and s i = sj  or in other words  the order of the states in the pairs does not matter.	
1 complexity of testing diagnosability
jiang et al.  have shown that diagnosability testing is in p. in this section we will show that this complexity upper bound is not tight. our results also show that the exptime upper bound for the diagnosability problem of succinct transition systems implied by the result of jiang et al. is not tight.
¡¡a system is not diagnosable if there are two infinite event sequences which have exactly the same observableevents and of which one contains a failure event and the other not. if this condition is not fulfilled  then every continuation of an event sequence with a failure is distinguishable from all event sequences without a failure.
¡¡jiang et al.  showed how this test can be made finitary for finite state systems  and how it can be done in polynomial time. the basic construction is a product transition system  sometimes called the twin plant  in which states are pairs  s s   of states of the original system  and events represent unobservable events in one or both of the components of these state pairs  or observable events shared by both components. failure events take place only in the first component of each state pair. if in this system there is an event sequence from  s1 s1  to some  s s   which includes a failure event in the first component  and a non-empty event sequence back to  s s   then a pair of infinite event sequences witnessing nondiagnosability exists.
¡¡candidate states  s s   are found by tarjan's strongly connected components  scc  algorithm  tarjan  1 : every node contained in a nontrivial scc is in a cycle contained in the scc. after finding the sccs the diagnosability test reduces to finding a path through a failure event from  s1 s1  to some  s s   in a non-trivial scc. if such a path exists the system is not diagnosable.
¡¡constructing the twin plant can be done in quadratic time in the number of states. finding the sccs is linear time in the number of states in the twin plant  and finding a path to a nontrivial scc through a failure event can be done in polynomial time. hence the diagnosability problem is in the complexity class p. however  this complexity upper bound is not tight.
¡¡we define the language nondiag which consists of all non-diagnosable transition systems in some suitable representation.
¡¡our first result shows that determining non-diagnosability can be done by using only logarithmic space by a nondeterministic turing machine  and hence the decision problem associated with nondiag is in nlogspace. this complexity class is included in p but it is not known whether the inclusion is proper  johnson  1 .
theorem 1 nondiag is in nlogspace.
proof: the proof is similar to the nlogspace membership proof of testing the existence of a path between two nodes in a graph. we give a nondeterministic algorithm that takes logarithmic space. the alorithm's only data structure that does not have a constant size is the binary counter for counting up to n1 where n is the number of states. a cycle is detected as in the p-time proof of jiang et al. . the algorithm starts from the pair  s1 s1  of initial states and nondeterministically chooses an event and a successor state for each member of the pair. the event for the second state may not be a failure  and an observable event must always be shared by both components of a state pair. the counter counts the steps. after a number of steps  including at least one failure event  the algorithm reaches a starting state  s s   for a cycle. after this a sequence of events leading back to  s s   is nondeterministically chosen. the turing machine accepts if a cycle is completed before the counter reaches n1. the turing machine rejects if the counter reaches n1 before completing the cycle and encountering a failure event. 
we also have a simple proof of nlogspace-hardness.
theorem 1 nondiag is nlogspace-hard.
proof: we sketch a deterministic logarithmic space reduction from the nlogspace-complete problem of testing whether a node in a directed graph is reachable from another node  johnson  1 .
¡¡letbe a directed graph for which the existence of a path from s ¡Ê v to t ¡Ê v is tested. the reduction with only logarithmic space proceeds by reading the input graph g and outputting a correspondingtransition system where states are the nodes of g and edges of g correspond to an observable event. the initial state of the transition system is s. the transition system additionally has a failure event f and an unobservable event nf which may take place in the state t. both events lead to the same  arbitrary  state in v . now the transition system is not diagnosable if and only if t is reachable from s. construction of the transition system takes logarithmic space  actually only constant space.  
¡¡similarly to nondiag we define the language succinct-nondiag which consists of succinct transition systems that are not diagnosable.
theorem 1 succinct-nondiag is in pspace.
proof: sketch: we could prove npspace membership similarly to theorem 1 and then use the equality pspace=npspace. alternatively  we could give a deterministic algorithm for finding a path in a graph with polynomial recursion depth and space consumption following bylander .	
the pspace upper bound can be shown to be tight.
theorem 1 succinct-nondiag is pspace-hard.
proof: we reduce the halting problem of deterministic turing machines with a polynomial space bound to the succinct diagnosability problem  showing the latter pspace-hard.
¡¡part of the reduction is like in the reductions to some other succinct graph reachability problems  bylander  1 . we can represent the turing machine configurations  including the contents of a polynomially long tape  in terms of a polynomial number of state variables  and we can represent the transitions of the turing machine in terms of a formula ¦Ä e  which represents an unobservable event.
¡¡we construct a transition system that is diagnosable if and only if the turing machine accepts. first a failure event f or an unobservable non-failure event nf takes place. in the non-failure case this is followed by an infinite sequence of events 1. in the failure case a simulation of the turing machine follows. if the turing machine accepts then an event 1 takes place. this makes it possible to distinguish between the failure and non-failure cases. so the system is diagnosable if and only if the turing machine accepts.
given a turing machine  we define the succinct transition
systemwhere
  a consists of all the state variables needed for encoding executions of the turing machine with a bound on the number of used tape cells  see for example bylander   and the state variable f that indicates that a failure has taken place and i that indicates that the execution has not started yet.
  ¦²o = {1}  ¦²u = {nf}  ¦²f = {f}  and
 



where tm is a formula for simulating the change in the turing machine configuration in one execution step and a is a state variable that represents the accepting internal state of the turing machine. if the turing machine rejects it continues with event 1 indefinitely.
when the turing machine accepts at least one event 1 takes place.
¦Ä 1  = f ¡Ä a
  s1 is a valuation that encodes the initial configuration of the turing machine and sets s1 i  = 1.

¡¡hence the succinct diagnosability problem is pspacecomplete  like some other path-finding problems in succinctly represented graphs  the succinct s-t-reachability problem  lozano and balca¡äzar  1  and the plan existence problem of ai planning  bylander  1 . this further suggests similar approaches to solving the diagnosability problem  for example reduction to the propositional satisfiability problem sat  rintanen and grastien  1 .
1 size of diagnosers
in this section we show that  assuming a sufficiently restricted definition of diagnosers  sometimes diagnosers are necessarily quite large.
¡¡the size of diagnosers strongly depends on how complex computation they are allowed to perform. the more complex the computation may be the smaller the diagnoser. there are diagnosers that are turing machines with only a constant size and that only need memory for storing the system description and the set of all states  but executing such a diagnoser may be too expensive for real-time on-line diagnosis.
¡¡in this section we focus on diagnosers that are finite automata which can process each observation in constant time.
1 upper bounds on size
we use the notion of belief states to derive an upper bound on the size of smallest diagnosers. the basic construct is similar to that used by sampath et al.  and the size of smallest diagnosers follows from the construct by sampath et al.
¡¡be a transition system. let  be a graph in which the set of nodes v =
1x¡Á1¦²f is the set of all sets b   x ¡Á 1¦²f of pairs  s f  ¡Ê
x ¡Á 1¦²f  and there is a labelled edge from
if and only if either

¦Ä}  or

¦Ä} 
¡¡a belief state b with  s f  ¡Ê b means that it is possible that s is the current state and its history includes exactly the failure events in f. note that it is possible that  s f  ¡Ê b and for some.
the initial node of the graph is bi = { s1   }.
¡¡the number of belief states b   x ¡Á 1¦²f is 1|x|1|¦²f|. this is o 1n  where n is the number of states.
¡¡this graph compactly encodes the states that could be reached by a given event sequence and the failure events in that sequence: starting in the initial node follow the edges corresponding to the events  and if  s f  ¡Ê b for the node b that is reached  then it is possible to reach s with that event sequence which includes the failure events in f.
¡¡a diagnoser cannot observe unobservable events  so we construct a second graph g t  that represents the diagnoser's view of the possible current states and their failure histories in terms of observable events. this construction takes polynomial time in the size of g1 t . any path e1 ... en e in g1 t  such that e is observable and e1 ... en are unobservable is represented in g t  by one edge with the label e.
given gdefine g as follows.
there is an edge if and only if
 where b1 ... bm are all the nodes in g1 t  such that for all i ¡Ê {1 ... m} there is a path e1 ... en e from b to bi such that n ¡Ý 1 and {e1 ... en}   ¦²u ¡È ¦²f.
by assumption 1 n is bounded by some constant ¡Ü |x|.
¡¡the graph g t  has the same nodes as g1 t  and the number of edges is at most as high.
lemma 1 let ¦Ò be a sequence of events in a system t  starting in its initial state s1  in which exactly the failure events in f occur before the last observable event and s is the last state that is not immediately preceded by an unobservable event  it is preceded by an observable event or it is the first state s1.  then the sequence ¦Ð ¦Ò  in g t  leads from { s1   } to b such that  s f  ¡Ê b.
lemma 1 let t be a system with the initial state s1. let ¦Ò be a sequence of observable events. if ¦Ò leads in g t  from { s1   } to b such that there is some  s f  ¡Ê b  then there is a sequence ¦Ò of events in t such that
leads from  includes exactly the failure events f.
¡¡finally  we show that g t  is a diagnoser. the accepting states b of this diagnoser are those that include a known past failure:.
theorem 1 let  be a system that is diagnosable with delay d.
1. let ¦Ò = e1 ... en be a sequence of events in t starting in s1 and assume en ¡Ê ¦²f. then for every sequence such thatand  is a sequenceof events in t  there is leads in g t  from.
1. if for a sequence of events e1 ... em in t the path ¦Ð e1 ... em  in g t  leads from { s1   } to b and there is  then e ¡Ê {e1 ... em}.
 proof: for  1  take any  is an event sequence in t. let b1 ... bn+m be
the belief states on the path in g t .
   assume .	by lemma 1 there is a sequence ¦Ò1 of events such that  and en does not occur in ¦Ò¦Ò.	this contradicts the fact that the system is diagnosable with delay d: for all sequences  of events in t such that and ¦Ð ¦Ò1  = ¦Ð ¦Ò1   ¦Ò1 includes the event e. hence it must be that . now for some.
¡¡for  1  assume that e1 ... em is a sequence of events in t such that the path ¦Ð e1 ... em  in g t  leads from { s1   } to b such that there is.
   let be the least m such that  is an observable event  and let s be the state immediately following. by
lemma 1  s f  ¡Ê b where f = ¦²f ¡É{e1 ... em}. since
.	
let g. we define the diagnoser cd t  =
 where

figure 1: a system requiring a diagnoser of size ¦¸ 1n 
 and
¡¡hence the graph g corresponds to a diagnoser for t. the diagnoser starts from the node { s1   }. after observing an event e ¡Ê ¦²o it follows the corresponding edge in the graph. notice that unlike in the underlying system  each event in the graph  leads to a unique successor node. when reaching a node b = { s1 f1  ...  sn fn } with  the diagnoser has detected the failure events f.
¡¡the number of nodes in in the number n of states in t. some diagnosers may have more nodes than but those diagnosers are not the smallest ones. hence
the size of the smallest diagnoser is o 1n .
¡¡since a transition system may be exponentially bigger than its succinct representation  the o 1n  bound on the diagnoser size for enumerative representations yields a o 1n  bound on the size of diagnosers of succinct transition systems.
1 lower bounds on size
we derive an exponential lower bound on the worst-case size of smallest diagnosers by constructing a system for which the smallest diagnoser has an exponential number of states. the high number of states in the smallest diagnoser is an indication of the need for the diagnoser to remember the past events. the number of possible past histories may grow exponentially in the size of the system and the length of the histories. the past histories may have to be encoded in the diagnoser and this leads to an exponential size.
theorem 1 there are diagnosable systems for which the smallest diagnoser has size ¦¨ 1n  where n is the number of states.
proof:	consider the system in figure 1.	let ¦²	= {a b c d}. the events of the transition system are a and a  for a ¡Ê ¦². in the initial state an unobservable event takes place. then a sequence of |¦²| events takes place  either a or a  for every a ¡Ê ¦²  followed by either an unobservable failure or an unobservable non-failure event. a failure event has taken place iff for some a ¡Ê ¦² bothhave taken place.
¡¡the numberof differentsequencesof observableevents before the failure events is 1|¦²|. no information on these sequences can be ignored before the last event has taken place. hence the smallest diagnoser has 1|¦²| states for representing the first |¦²| events.
¡¡clearly  similar systems can be constructed for arbitrary sets ¦²  and the number of states of these systems grows quadratically in the cardinality of ¦² and the number of states in the diagnosers grows exponentially. 
¡¡we adapt the construction in theorem 1 to succinct transition systems by replacing the events a b c d by sequences of events corresponding to binary numbers  and utilizing the regularity of the system to represent it more compactly so that the number of states is exponentialin the size of the system description. this means that the number of nodes in the diagnoser is doubly exponential ¦¸ 1n  in the size of the system description.
theorem 1 there are succinct systems for which the smallest diagnoser has size ¦¨ 1n .
 proof: let n be a size parameter that characterizes the number 1n of things to remember just like a b c d in the proof of theorem 1. instead of producing a sequence of events  indicating the different  values 
of a  b  c and d  the succinct system produces a sequence v1 ... v1n 1 of 1n events 1 or 1 followed by an unobservable failure or non-failure event  and then an event 1 or 1 for indicating a value v and a sequence of n events 1 or 1 that encodes an index i ¡Ê {1 ... 1n  1} to the first sequence. if the value vi does not match v then a failure has taken place. the construction with n = 1 is illustrated in figure 1.
¡¡because of space restrictions we cannot present the system here. the number of states of the system is exponential in n  and the size of the succinct representation of the system is linear in n. the size of the smallest diagnoser is exponential in the number of states and doubly exponential in n. 
1 related work and conclusions
we have shown that the diagnosability problem of succinct transition systems is pspace-complete. we also tightened an earlier known polynomial time upper bound of diagnosability testing of explicitly represented transition systems by showing that non-diagnosability is nlogspace-complete.
¡¡the work by sampath et al.  underlies much of the work in the diagnoser framework  and also our belief state enumeration algorithm in section 1 is based on it.
¡¡other related works include tripakis  who shows that diagnosability of transition systems represented as timed automata is pspace-complete. this result can be contrasted

figure 1: a system requiring a diagnoser of size ¦¸ 1n 
to the polynomial time result of jiang et al.  and our more tight nlogspace-membership result in theorem 1. more complex diagnosis problems for timed automata are investigated by bouyer et al. .
¡¡wen et al.  propose a polynomial time algorithm for testing diagnosability of transition systems represented as petri nets. the algorithm tests for a sufficient but not necessary condition for diagnosability  and is therefore incomplete. a variant of our theorem 1 shows that  assuming pspace=p  the test cannot be made complete by strengthening it without losing the polynomialtime property: the turing machine simulation in the proof of theorem 1 can be performed with petri nets as well.
acknowledgements
many thanks to sylvie thie¡äbaux for directing me to this research topic and to alban grastien for comments and tightening the upper bound in theorem 1 by a factor of 1.
¡¡this research was supported by national ict australia  nicta  in the framework of the supercom project. nicta is funded through the australian government's backing australia's ability initiative  in part through the australian national research council.
