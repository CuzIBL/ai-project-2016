 
a simple  model free computer vision program to determine the locations of non-overlapping parts on belt conveyors is described. this program illustrates a simple and effective procedure for segmenting objects from background in instances where simple thresholding of a gray-level image does not suffice. the procedure consists of a unique sequence of standard image enhancement processes. the resultant image exhibits silhouettes of the objects  which contain sufficient information for locating those parts whose orientation can be determined without observation of internal features. the technique has been implemented on a large research computer  as well as a mini-computer coupled to a prototype belt conveyor-robot arm part transfer system. the technique has been validated for a large variety of parts and belt surfaces. it can meet production rates and has the potential for actual production use. 
               1. introduction the problem is to sense  rapidly and reliably  the location of a variety of non-overlapping parts for automated transfer and/or assembly. these parts are often located on dirty surfaces such as conveyor belts. in the program described below  objects are extracted from the background  silhouetted  through a unique sequence of rather straightforward and standard local and global enhancement operations. the motivation for developing such a procedure follows from the realization that simple thresholding of a graylevel image w i l l not suffice for segmenting objects from their background in many industrial environments.  others have achieved success with straight thresholding of input images where very bright f l a t parts appear on black belts  rosen  1  . for example  figure 1 is a 1 x 1 digitized image with 1 gray-levels  of several automotive parts lying on an old conveyor belt. figure 1 is the same scene displayed at the optimal fixed threshold. the reader w i l l note that several objects are not connected  and there is significant visual noise in the image. thresholding at a different level in order to further connect some parts would result in the background merging into the other parts. 
               1. technique for locating objects. the 	segmentation 	process 	consists 	of 	edge detection  smoothing  	automatic thresholding  gap f i l l i n g   hole f i l l i n g   and noise removal. 
1 edge detection 
the intent is to enhance the image by increasing the values of those pixels along the boundaries  edges  of the objects. because of the noisy data  some edges may be detected in the background while not a l l real edges on the object boundaries w i l l be. this enhancement is achieved by a gradient operator. figure 1 illustrates the result of applying the sobel operator to figure 1. the implementation allows any one of 1 standard edge operators to be used  most of which produce acceptable results. 
1 smoothing 
the objective at this step in the processing is to  remove  isolated edges corresponding to noise in the background  and to  insert  more edges along the object boundaries. this is accomplished by smoothing the data by replacing the value of every pixel with the average of the values in i t s 1 x 1 neighborhood. figure 1 i l l u s t r a t e s the result of smoothing figure 1. 
1. automatic threshold selection at this point the preprocessed image is made binary by thresholding. that i s   pixels greater or equal to a threshold t are set to 1  and a l l other pixels are set to 1. the threshold t is based on the histogram of the smoothed edge data as shown in figure 1. t is computed by by finding the point on the right shoulder of the histogram where the second derivative is maximum.   i t was determined experimentally that this method produced consistent and acceptable results.  figure 1 i l l u s t r a t e s the result of automatically thresholding figure 1. in one implementation  threshold selection is set manually once during setup  since a wide range of threshold values produces acceptable results in the preprocessed image. 
1. 	gap f i l l i n g 
we now wish to assure that the boundaries of a l l parts are indeed closed in the binary image  so that they may be segmented from the background in the next step. this is done by connecting every two pixels within  a euclidean distance of  three pixels of each other. figure 1 shows the spatial configurations of a l l possible pairs of points  gaps  which we wish to connect  and the manner in which we choose to connect them. this gap f i l l i n g process is performed by the following procedure: for each pixel not already equal to 1 in the image  examine i t s neighborhoods as shown in figure 1. replace that pixel with a 1  after examining the entire image  if the condition holds that there exists at least one pixel having value 1 in each of the complementary neighborhoods north-south  or east-west  or n.e.-s.w  or n.w.s.e. figure 1 i l l u s t r a t e s the results of f i l l i n g gaps in figure 1. 
1 hole f i l l i n g through connectivity analysis we now wish to complete the silhouettes of the parts in the image by f i l l i n g in a l l  holes  inside connected regions. this is accomplished by 1-connectivity analysis of the scene. regions  of 1's  which are not connected to the image boundary are set to l ' s . then  the only remaining 1's in the image correspond to the real background. optionally  at this time  regions touching the image boundary  not completely in the f i e l d of view  or of less than a specified size  noise or other regions not corresponding to expected objects  may also be removed  set to 1 ' s   . figure 1 i l l u s t r a t e s the results of f i l l i n g holes and removing very small regions in figure 1. the reader is referred to kelly  for an algorithm for e f f i c i e n t l y labeling 1-connected regions in an image. 

v i s i o n - 1 : 	b a i r d 
1 


