 
reasoning about actions has been a focus of interest in al from the beginning and continues to receive attention. rut the range of situations considered has been rather narrow and falls well short of what is needed for understanding natural language. language understanding requires sophisticated reasoning about actions and events and the world's languages employ a variety of grammatical and lexical devices to construe  direct attention and focus on  and control inferences about actions and events. we implemented a neurally inspired computational model that is able to reason about  linguistic action and event descriptions  such as those found in news stories. the system uses an active. event representation that also seems to provide natural and cognitiveiy motivated solutions to classical problems in logical theories of reasoning about actions. for logical approaches to reasoning about actions  we suggest  that looking at story understanding sets up fairly strong desiderata both in terms of the fine-grained event and action distinctions and the kinds of real-time inferences required. 
1 	introduction 
formal approaches to model reasoning about changing environments have a long tradition in al. this research area was initiated by mccarthy  mccarthy  1 h    who claimed that reasoning about actions plays a fundamental role in common sense. trying to build language understanding programs not only underscores the importance of reasoning about actions  but also suggests that the the set of situations and the kinds of inferential processes required are richer than has been traditionally studied in formal approaches. 
language understanding requires sophisticated reasoning about actions and events. the world's languages have a variety of grammatical and lexical devices to construe  direct attention and focus  and control infer-
1 	cognitive modeling 
ences about  actions and events. consider the meaning of stumbling in the following newspaper headline  indian government stumbling in implementing liberalization 
plan'' clearly  the speaker intends to specify that the liberalization plan is experiencing some difficulty. moreover  the grammatical form is + vp-ing suggests that the difficulty facing the plan is ongoing and the final outcome of the plan is indeterminate. compare this to the subtle meaning differences with grammatical and lexical modifiers on the same root verb such as has stumbled or starting to stumble. most readers are likely to infer after reading this sentence that the government's liberalization policy is likely to fail  but this is only a default causal inference that is made in the absence of information to the contrary. finally  how does stumble  whose basic meaning is related to spatial motion and obstacles get interpreted in a narrative about international economic policies  
we have implemented a computational model that is able to reason about action and event descriptions from discourse fragments such as the one above. the system uses an active event representation that also seems to provide natural and cognitive!}- motivated solutions to classical problems in logical theories of reasoning about  actions. we first present the main features of our representation and show that if provides a computational model for existing formalisms for reasoning about actions. we then suggest how looking at story understanding sets up fairly strong desiderata for logical approaches to reasoning about actions both in terms of the finegrained event and action distinctions and the kinds of real-time inferences required. 
1 	the action model 
our action theory comprises of two central components; 1  an executing representation of actions  called xschemas  based on extensions to petri nets and 1  a belief net model of state that captures and reasons about  complex dependencies between state variables. 

1 	an executing semantics of actions 
we represent actions as a modified class of high-level petri nets  reisig  1  called x-schemas. the most relevant features of petri nets for our purposes are their ability to model events and states in a distributed system and the clean manner in which they capture sequentiality  concurrency and event-based asynchronous control. 
d e f i n i t i o n 1 . t h e basic x-schema: an x-schema consists of places  p   and transitions   1   connected by weighted directed arcs 
each arc has weight input arcs connect input places to transitions. output arcs 1*   connect 
transitions to output places. arcs are typed as enable arcs   inhibitory arcs i  or resource arcs 1v . 
x-schemas have a well specified real-time execution semantics where the next state function is specified by the f i r i n g rule. in order to simulate the dynamic behavior of a system  a m a r k i n g  distribution of tokens in places  depicted as dark circles or numbers   of the x-schema is changed according to the following firing rule. 
d e f i n i t i o n 1 . e x e c u t i o n semantics of the basic x-scheina a transition t is said to be enabled if no inhibitory arc  lias a m a r k e d source place and all sources of enable arcs  are m a r k e d and all input arcs  have at  least wpt tokens at their source place  where wpt. is the weight of the arc from  the f i r i n g of an enabled transition 
t   removes wpf tokens from the source of each noninhibitory  non-enabled input arc v and places wrp tokens in each output place of t . 
x-schemas cleanly capture sequentially  concurrency and event-based asynchronous control; with our extensions they also model hierarchy  stochasticity and / aranietenzation  run-time bindings . besides typed arcs  definition 1   the following two extensions to the basic petri net are designed to allow us to model hierarchical action sets with variables and parameters: 
first.  tokens carry information  i.e. they are individuated and typed  and transitions are augmented with predicates which select tokens from input places based on the token type  as well as relate the. type of the tokens produced by the tiring to the types of tokens removed from the input. 
second  transitions are typed. figure 1 shows the four types of x-schema transitions  namely stochastic  durative  instantaneous and hierarchical transitions. an instantaneous transifion shown as dark rectangles  fins as soon as it is enabled. a timed transition  shown as rectangles  fires after a fixed delay or at an exponentially distributed rate. hierarchical transitions  depicted as hexagons   activate a subnet.  wait for its return  or timeout. 

figure 1: basic types of transitions. 
t h e o r e m 1 .  narayanan  1  an j-schema is formally equivalent to bounded high level generalized stochastic petri net  hlgspn . the reachability graph of a marked x-schema is isomorphic to a semi-markwv process. 
1 	a belief net model of states 
our representation of states must  be capable of modeling causal knowledge and be able to support both belief updates and revisions in computing the global impact 
of new observations and evidence both from direct observations and from action effects. our implementation of the agent's state uses belief networks  jensen  1j. 
belief networks consist of a net of variables and a set  of directed links. each variable lias a finite set of mutually exclusive states. the variables together form a dag  directed acyclic oraph . to each variable a with parents b  . . . bn there1 is attached a conditional probability table 
for a belief net   the following theorem allows us to calculate the joint probability p v  from the conditional probabilities in the network. 
t h e o r e m 1 . t h e chain rule  jensen  1  let 
be a bn over i . 	then the joint proba-
bility distribution p u  is the product of all conditional probabilities specified 
 1  

1 	temporal projection 
we now turn to one of the central issues in reasoning about action  i.e. the temporal projection problem. the 
1
¡¡¡¡ note that the g ft entries could instead use the ranking function method of k -calculus  golds/midt  1   where probabilities are mapped onto a quantized logarithmic scale which forms the basis of a ranking function. 
	narayanan 	1 

problem consists of computing a final state that results from executing the action set in a given initial state s1   the solution to this problem in our action model follows. 
algorithm 1 	temporal projection 
1. set initial marking 

1. fire enabled transitions  of m with initial marking mo   the next state function described earlier takes the system to a new marking minto ¡ö the state corresponding to this marking : 
1. run the belief propagate procedure to return the most consistent aposteriori assignment   map  of values to the state variables. the new state s 

steps 1  and 1 are essentially constant time  since our notion of state as a graph marking is inherently distributed over the network  so the working memory of an x-schema-based inference system is distributed over the entire set of x-schemas and state features. the result is a massively parallel solution to the projection problem. step 1 requires belief propagation which is well known to be intractable for complex domain topologies. so in our model  executing actions is fast.  parallel and reflexive  while propagating indirect effects with complex domain dependencies to achieve global consistency is hard. in addition  the central features of our action representation  namely that they are executing provides an elegant solution to the frame problem. specifically  the actionbased executing action semantics allows frame axioms to be implicitly encoded in the structure of the net and the local transition firing rules. 
1 	modeling action theories 
although the mechanisms outlined above were developed for language understanding  they seem to be useful for some of the problems discussed in the recent literature. we assume the reader is familiar with reasoning with the syntax of action models similar to  gelfond & lifschitz  1 . to keep the exposition simple  we will consider only propositional fluents and deterministic actions. as in arv  giunchiglia & lifschitz  1   we model both  inertial    always c  where c is a formula   and  dependent    a dependsjoii b   fluents. the following rules present the basic encoding of action theories  assuming the syntax of the arv theory  in our model. 
1 	cognitive modeling 
1. static fluent names are places. actions names are transition labels. preconditions are pre-sets   *t    direct effects are post-sets   t *   of transitions. if the truth-value of a fluent  is true   in state   then the marking m - /  = 1   
1. domain constraints with inertial fluents are mod-elled as instantaneous transitions. statements in arv   of the form always   add an instantaneous transition with pre-set      post-set 
 . dependent fluents are modeled as arcs in the agent state belief net. more precisely  the statement  depends on  if   results in an arc from the variables representing to the cpt entries for  are given by the appropriate constraints  including prior knowledge . 
1. initially c   is modeled by assigning an initial marking where 
f   if depends jon fj   add an instantaneous transition with preset and post 
set 
we now look at two standard examples from the literature that illustrate some issues with reasoning about actions. one is the standard  potato in the tailpipe  problem  and the other is the  jumping into lakes  problem giunchiglia & lifschitz  1 . 
example 1 potato in tailpipe the state fluents here are potato  potato in the tailpipe   clog  tailpipe is clogged . the actions are put p   remove  p   put/remove potato in/from tailpipe   start  start the engine . the domain is characterized as put p  causes potato  remove 1  causes - potato start causes running   clog dependsjon potato  always potato 	¡ö 
example 1 wetness here the idea is that jumping into a lake   jurnptn   has the direct effect of being inlake   and the indirect of making you wet . jumping out gets you out of the lake  but you are still wet if you were in the lake. the domain is described in arv as always inlake  wet   jump in causes inlake   jumpout causes -inlake   initially - inlake. . ¡ö 
the reader can easily verify that the construction rules above result in the models shown in figure 1 and figure 1 for example 1 and example 1 respectively. 
proposition 1 . the procedure above results in a causal model for a domain description d  in the syntax of arv   in that it satisfies all the causal laws in d . furthermore  a value proposition of the form c after 
a is entailed by d  where  is the state that results after running the projection algorithm on the action set a . 
1
¡¡¡¡ in general  the representation allows states with types and integer measure fluents  in which case the multi-set representing the place would be marked by the appropriate number and type of tokens. 


figure 1: potatoes in tailpipes 

figure 1: jumping into lakes 
1 	ramifications  inertial and dependent fluents 
indirect effects are quite naturally handled by our system. indirect effects that are  inertial fluents  get set by instantaneous transitions. in figure 1  the direct effect  of jumpln sets the fluent inlake  which instantaneously sets the value of the fluent wet. note that the fluent wet persists unless some other action is taken  like drying  to change the value of this fluent. in contrast  note that in figure 1  the truth value of the 'dependent fluent  clog is determined by the fluent potato. while the value proposition after put-pat ; remove-pot   is not entailed by the description depicted in figure 1  from the uniform prior for  ; if the domain theory contains the explicit knowledge initially   the propo-
sition is entailed by the model.1 
1 understanding language about actions and events 
the frequency with which languages refer to events  the universality of such expressions  and the subtlety in the kinds of distinctions made have made the temporal character of events in language  called linguistic aspect  an object of study since aristotle. somewhat more recently  the complex and context-sensitive determination of aspectual status  or the internal temporal shape of an event has been the focus of much work  ms  1 . 
many languages have a variety of grammatical aspectual modifiers such as the english progressive construction 
1
¡¡¡¡more generally  logical entailment can he viewed as the downward closure of the final marking. 

 be + v-ing  which enable a speaker to focus on the ongoing nature of an underlying process while allowing for inferences that the process has started and that it has not yet completed. similarly  one use of the perfect construction  has v-ed  allows a speaker to specify thatsome consequences of the described situation hold. for instance  the phrase / have lost mv kevs entails that the keys are still missing  unlike the phrase / lost my keys . languages also have a variety of other means to express aspect including aspectual verbs like start  end  cease  continue  and stop and related grammatical forms. 
to model the kinds of subtle semantic distinctions made by languages  actions and events can no more be atomic transitions. in fact  we have found that cross-linguistically language makes reference to a specific structure of actions and events  which captures regularities that are relevant in the evolution of processes  enabling  inception  in-process  completion  suspension  resumption  etc.  we call this structure the c o n t r o l l e r  figure 1 . the controller abstraction seems to capture the basic temporal structure of people's conceptualization of events. the semantics of aspect arises from the dynamic binding between verb-specific x-schemas and a controller that captures regularities in the evolution of complex events  shown in figure 1. 
in our language understanding system  the causal domain structure is encoded as connected x-schemas. our domain model is a dynamic system based on inter-xsclierna activation  inhibition and interruption. in the simulation framework  whenever an executing x-schema makes a controller transition  it potentially modifies state  leading to asynchronous and parallel triggering or inhibition of other x-schemas. the notion of state as a graph marking is inherently distributed over the network  so the working memory of an x-schema-based inference system is distributed over the entire set of x-
schemas and state fluents. of course  this is intended to model the massively parallel computation of the brain. 
figure 1 depicts a simplified x-schema model of walking and reacting to obstacles  the domain of stumbling . 
	narayanan 	1 


figure 1: event structure is a x-schema simulation environment used for inference. 
for instance  during a walk  specified by a token in the ongoing phase of the walk x-schema  encountering an unanticipated b u m p   you become unstable. 1 this may lead to a f a l l unless you are able to simultaneously expend energy and s t a b i l i z e   in which case you may resume the interrupted walk. if you are unable to stabilize  and thus f a l l   you will be d o w n and h u r t . 
now consider that this complex situation described above can be coded in a single lexical item stumblel first  notice that stumble can only occur during a step  and that it is a specific kind of interrupt to the step  i.e. the presence of a bump or stumbling block . but this by itself does not capture the intended meaning of stumble  since the inference  that the agent may fall  is routinely intended by the speaker. furthermore  note that the fact that stumble is not a planned motion but an interrupt is important to infer that it is unintentional. 
it should be clear that to model linguistic distinctions in event structure  we need much finer-grained distinctions than those that been proposed in the literature for reasoning about  actions. this is also consistent with the key observation in  ms  1  that aspectual phenomena depend on a notion of event structure that captures contingency relationships among events. our framework of an active action semantics embodies a precise model of such inter-event contingency. 
while our solutions to the problems of aspect are outside the scope of this paper  the following inter-schema activation  inhibition  and modification relationships are intended to give the reader an idea of the fine-grained nature of contingency relationships involved. 
d e f i n i t i o n 1 . a c t i v a t i o n : activation relationships between schemas correspond to the case where executing one schema causes the enabling  start or continued execution of another schema. we are able to distinguish concurrent from sequential activation. 
1
¡¡¡¡in fact  the simulation is of finer granularity in that it is during an ongoing step  subschema of walk   that the interruption occurs. this is not shown to simplify exposition. 
1 	cognitive modeling 

d e f i n i t i o n 1 . i n h i b i t i o n : inhibitory links prevent execution of the inhibited x-schema by activating an inhibitory arc. again  our model is able to distinguish between concurrent and sequential inhibition as well as be able to model mutual inhibition and aperiodicity. 

d e f i n i t i o n s 1 m o d i f i c a t i o n : modifying relationships between x-schemas occur when the execution of the modifying x-schema results in setting the agent state in such a way the the currently active modified x-schema undergoes a controller state transition. 

e x a m p l e 1 examples of contingency relations in the w a l k i n g d o m a i n 
trip seq.enables fall  stabilize. 
-in control loc  	enables fall 
-stable  	enables stabilize 
grasping x  conc enables holding x . energy x  isa.resource for w a l k 


1 	metaphoric reasoning about actions and events 
we have seen how the structure of actions and events is grounded in fine-grained  dynamic representations. another ubiquitous phenomenon in language lakolf  1   is the routine projection of such fine-grained semantic distinctions across domains. systematic metaphors project features of these representations  source  onto abstract  domains such as economics  target  enabling linguistic devices to use embodied causal terms to describe features of abstract actions and processes. 
figure 1 shows an implemented system that uses projections of the action representation outlined earlier to interpret such sentences. in our model indirect effects of x-schema execution now not only propagate to dependent source domain fluents but may also be mapped by metaphor maps to other abstract domains  modeled as a temporally extended relief net  . 
continuing with the stumble example  notice that in our model effects of spatial inferences such as stumbling leads to falling can felicitously be transferred to the abstract  domain of economic policy through a conventionalized metaphor that  falling   failure  enabling the inference of plan failure. this inference context-sensitive and may be overridden by prior knowledge  in the target domain relief net  that the liberalization plan is succeeding. 
1 	conclusion 
this paper described a new framework for reasoning about actions that is motivated from story understanding. one central feature of this framework is an extremely fine-grained action model with a real-time execution semantics that is able to capture a much richer notion of contingency and causality than other models we are aware of. another key feature is our model of state where complex dependencies between state variables are modeled as a relief network. we showed how this framework is able to reason about actions  ramifications with inertial and dependent fluents  as well as inter-domain mappings which are crucial in story understanding. we believe that looking further into issues in narrative  such as into force-dynamics  rnodals  and mental spaces  can yield valuable insights that can help us build useful theories of reasoning about actions. 
1 	acknowledgments 
thanks to .1. feldrnan  g. lakoff and the ntl group at dc berkeley and 1csf 
