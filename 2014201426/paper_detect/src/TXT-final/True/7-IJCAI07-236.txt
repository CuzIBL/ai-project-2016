
we consider how to combine the preferences of multiple agents despite the presence of incompleteness and incomparability in their preference orderings. an agent's preference ordering may be incomplete because  for example  there is an ongoing preference elicitation process. it may also contain incomparability as this is useful  for example  in multi-criteria scenarios. we focus on the problem of computing the possible and necessary winners  that is  those outcomes which can be or always are the most preferred for the agents. possible and necessary winners are useful in many scenarios including preference elicitation. first we show that computing the sets of possible and necessary winners is in general a difficult problem as is providing a good approximation of such sets. then we identify general properties of the preference aggregation function which are sufficient for such sets to be computed in polynomial time. finally  we show how possible and necessary winners can be used to focus preference elicitation.
1 introduction
we consider a multi-agent setting where each agent specifies their preferences by means of an ordering over the possible outcomes. a pair of outcomes can be ordered  incomparable  in a tie  or the relationship between them may not yet be specified. incomparability and incompleteness represent very different concepts. outcomes may be incomparable because the agent does not wish very dissimilar outcomesto be compared. for example  we might not want to compare a biography with a novel since the criteria along which we judge them are just too different. outcomes can also be incomparable because the agent has multiple criteria to optimize. for example  we might not wish to compare a faster but more expensive laptop with a slower and cheaper one. incompleteness  on the other hand  represents simply an absence of knowledge about the relationship between certain pairs of outcomes. incompleteness arises when we have not fully elicited an agent's preferences or when agents have privacy concerns which prevent them from revealing their complete preference ordering.
¡¡since we wish to aggregate together the agents' preferences into a single preference ordering  we must modify preference aggregation functions to deal with incompleteness. one possibility is to consider all possible ways in which the incomplete preference orders can be consistently completed. in each possible completion preferenceaggregationmay give different optimal elements  or winners . this leads to the idea of the possible winners  those outcomes which are winners in at least one possible completion  and the necessary winners  those outcomes which are winners in all possible completions   konczak and lang  1 .
¡¡while voting theory has been mainly interested in the fairness of social choice or social welfare functions  there has been recent interest in computational properties of preference aggregation  rossi et al.  1; lang  1; konczak and lang  1; conitzer and sandholm  1b . it has also been noted that the complexity of manipulating an election is closely related to the complexity of computing possible winners  konczak and lang  1; conitzer and sandholm  1a .
¡¡in this paper we start by considering the complexity of computing the necessary and the possible winners. we show that both tasks are hard in general  even to approximate. then we identify sufficient conditions that assure tractability. such conditions concern properties of the preference aggregation function  such as monotonicity and independence to irrelevant alternatives  iia   arrow et al.  1 .
¡¡possible and necessary winners are useful in many scenarios including preference elicitation  chen and pu  1 . for example  elicitation is over when the set of possible winners coincides with that of the necessary winners  conitzer and sandholm  1b . however  recognizing when such a condition is satisfied is hard in general. in the last part of the paper we show that  if the preference aggregation function is iia  preference elicitation can focus just on the incompleteness concerning those outcomes which are possible and necessary winners  allowing us to ignore all other outcomes and to complete preference elicitation in polynomial time.
1 basic notions
preferences. we assume that each agent's preferences are specified via a  possibly incomplete  partial order with ties  ipo  over the set of possible outcomes  that we will denote by ¦¸. an incomplete partial order is a partial order where some relation between pairs of outcomes is unknown. given two outcomes a and b  an agent will specify exactly one of the following: a   b  a   b  a = b  a ¡« b  or
a b  where a ¡« b means that a and b are incomparable  and a b that the relation between a and b is unknown  this means that it can be any element of {=     ¡«}.
example 1. given outcomes a  b  and c  an agent may state preferences such as a   b  b ¡« c  and a   c  or also just a   b and b ¡« c. however  an agent cannot state preferences such as a   b  b   c  c   a  or also a   b  b   c  a ¡« c since neither are pos.
profiles. a profile is a sequence of n partial orders p1 ... pn over outcomes  one for each agent i ¡Ê {1 ... n}  describing the preferences of the agents. an incomplete profile is a sequence in which one or more of the partial orders is incomplete.
social welfare and preference aggregation. social welfare functions  arrow et al.  1  are functions from profiles to partial orders with ties. given a social welfare function f  we define a corresponding preference aggregation function  written paf  which is a function from incomplete profiles to sets of partial orders with ties  pos . precisely  given an incomplete profile ip =  ip1 ... ipn   where the ipi's are ipos  consider all the profiles  say p1 ... pk  obtained from ip by replacing any occurrence of   in the ipi's with either      =  or ¡« which is consistent with a partial order. let us then set paf ip  = {f p1  ... f pk }. this set will be called the set of results of f on profile ip.
example 1. consider the pareto social welfare function f defined as follows  arrow et al.  1 : given a profile p  for any two outcomes a and b  if all agents say a   b or a = b and at least one says a   b in p  thena   b ¡Ê f p ; if all agents say a = b in p  then a = b ¡Ê f p ; otherwise  a ¡« b ¡Ê f p . in figure 1 we show an example with three agents and three outcomes a  b  and c.

figure 1: an incomplete profile ip  its completionsp1 and p1  results f p1  and f p1   and combined result cr f ip .
necessary and possible winners. we extend to the case of partial orders the notions of possible and necessary winners presented in  konczak and lang  1  in the case of total orders. given a social welfare function f and an incomplete profile ip  we define necessary winners of f given ip to be all those outcomes which are maximal elements in all pos in paf ip  . a necessary winner must be a winner  no matter how incompleteness is resolved in the incomplete profile. analogously  the possible winners are all those outcomes which are maximal elements in at least one of the pos in paf ip . a possible winner is a winner in at least one possible completion of the incomplete profile. we will write nw f ip  and pw f ip  for the set of necessary and possible winners of f on profile ip. we will sometimes omit f and/or ip  and just write nw and pw when they will be obvious or irrelevant.
example 1. in example 1  a and b are the necessary winners  since they are top elements in all pos f pi   for all i =1. c is a possible winner since it wins in f p1 .
combined result. unfortunately  the set of results can be exponentially large. we will therefore also consider a compact representation that is polynomialin size. this may throw away information by compacting together results into a single combined result. given a social welfare function f and an incomplete profile ip  consider a graph  whose nodes are the outcomes  and whose arcs are labeled by non-empty subsets of {    = ¡«}. label l is on the arc between outcomes a and b if there exists a po in paf ip  where a and b are related by l. this graph will be called the combined result of f on ip  and will be denoted by cr f ip . if an arc is labeled by set {    = ¡«}  we will say that it is fully incomplete. otherwise  we say that it is partially incomplete. the set of labels on the arc between a and b will be called rel a b .
example 1. the combined result for example 1 is shown in figure 1.
1 possible and necessary winners
in this section we show that computing the set of necessary and possible winners of a social welfare function is  in general  np-hard even if we restrict ourselves to incomplete but total orders. we will consider the following  well known  voting rule.
single transferable vote. in the stv rule each voter provides a total order on candidates and  initially  an individual's vote is allocated to their most preferred candidate. the quota of the election is the minimum number of votes necessary to get elected. if only one candidate is to be elected then the quota is  where n is the number of voters. if no candidate exceeds the quota  then  the candidate with the fewest votes is eliminated  and his votes are equally distributed among the second choices of the voters who had selected him as first choice. in what follows we consider stv elections in which some total orders  provided by the voters  are incomplete.
¡¡in general  given an incomplete profile and a candidate a  we say possiblewinner holds iff a is a possible winner of the election.
theorem 1 possiblewinner is np-complete.
proof: in fact  membership in np follows by giving a completion of the profile in which a wins. completeness follows from the result that effective preference  determining if a particular candidate can win an election with one vote unknown  for stv is np-complete  bartholdi and orlin.  1  q.e.d.
¡¡this result allows us to conclude that  in general  finding possible winners of an election is difficult. however  it should be noticed that for many rules used in practice including some positional scoring rules  konczak and lang  1   answering possiblewinner is polynomial. the complexity of computing possible winners is related to the complexity of manipulating an election  konczak and lang  1 . for instance  it is np-complete to determine for the borda  copeland  maximin and stv rules if a coalition can cast weighted votes to ensure a given winner  conitzer and sandholm  1a . it follows therefore that with weighted votes  possiblewinner is np-hard for these rules.
given an incomplete profile and a candidate a  we say
necessarywinner holds iff a is a necessary winner of the election.
theorem 1 necessarywinner is conp-complete.
proof: the complement problem is in np since we can show membership by giving a completion of the profile in which some b different to a wins. to show completeness  we give a reduction from effective preference with stv in which a appears at least once in first place in one vote. this restricted form of effective preference is np-complete  bartholdi and orlin.  1 . consider an incomplete profile ¦° in which n + 1 votes have been cast  a has at least one first place vote  one vote remains unknown  and we wish to decide if a can win. we construct a new election from ¦° with n new additional votes  and one new candidate b. we put b at the top of each of these new votes  and rank the other candidates in any order within these n votes. we place b in last place in the original n + 1 votes  except for one vote where a is in first place  by assumption  one such vote must exist  where we place b in second place and shift all other candidates down. we observe that b will survive till the last round as b has at least n votes and no other candidate can have as many till the last round. we also observe that if a remains in the election  then the score given to each candidate by stv remains the same as in the original election so the candidates are eliminated in the same order up till the point a is eliminated. if a is eliminated before the last round  the second choice vote for b is transferred. since b now has n +1 votes  b is unbeatable and must win the election. if a survives  on the other hand  to the last round  we can assume b is ranked at the bottom of the unknown vote. all the other candidates but a and b have been eliminated so a has n +1 votes and is unbeatable. hence  if a is not a possible winner in the original election  b is the necessary winner of this new election. thus determining the necessary winner of this new election decides if a is a possible winner of the original election. q.e.d.
¡¡given these results  we might wonder if it is easy to compute a reasonable approximation of the sets of possible and necessary winners. unfortunately this is not the case. the reduction described in the proof of previous theorem shows that we cannot approximate the set of possible winners within a factor of two. in fact  we can show that we cannot approximate efficiently the set of possible winners within any constant factor.
theorem 1 it is np-hard to return a superset of the possible winners  pw  in which we guarantee |pw |   k|pw| for some given positive integer k.
proof:	we again give a reduction from effective
 preference for stv in which a appears at least once in first place in one vote. consider an incomplete profile ¦° in which n + 1 votes have been cast  a has at least one first place vote  one vote remains unknown  and we wish to decide if a can win. we construct a new election from ¦°. we make k copies of ¦°. in the ith copy ¦°i  we subscript each candidate with the integer i. we add n new additional votes  and one new candidate b. we put b at the top of each of these new votes  and rank all the other candidates except ai in any order within these n votes. the ranking of the candidates ai is left unknown but beneath b. in each ¦°i  we place b in last place except for one vote where ai is in first place  by assumption  one such vote must exist  where we place b in second place and shift all other candidates down. finally  for each candidate in ¦°j not in ¦°i except for aj  we rank then in any order at the bottom of the the votes in ¦°i. the ranking of the candidates ai is again left unknown but beneath b. we observe that b will survive till all but one candidate has been eliminated from one of the ¦°i. we also observe that if ai remains in the election  then the score given to each candidate by stv remains the same as in the original election so the candidates in ¦°i are eliminated in the same order up till the point ai is eliminated. suppose a cannot win the original election. then ai will always be eliminated before the final round. the second choice vote for b is transferred. since b now has at least n + 1 votes  b is unbeatable and must win the election. suppose  on the other hand  that a can win the original election. then ai can survive to be the last remaining candidate in ¦°i. we can assume b is ranked at the bottom of the unknown votes of all the candidates with an index i and above all the candidates with an index j different to i. thus ai has n +1 votes. if we have the corresponding ranking in the other unknown votes  will also survive. since b has only n votes  b will be eliminated. it is now possible for any of the candidates  ai where 1 ¡Ü i ¡Ü k to win depending on how exactly the ai are ranked in the different votes. thus the set of possible winners is {ai | 1 ¡Ü i ¡Ü k} plus b if a is not a necessary winner in the original election. hence  if a is a possible winner in the original election  the size of the set of possible winners is greater than or equal to k  whilst if it is not  the set is of size 1. if we know that |pw |   k|pw|  then |pw |   k guarantees that |pw| = 1  b is the necessary winner and hence that a is not a possible winner in the original election. q.e.d.
¡¡similarly  we cannot approximate efficiently the set of necessary winners within some fixed ratio.
theorem 1 it is np-hard to return a subset of the necessary winners  nw  in which we guarantee whenever |nw|   1 for any given positive integer k.
proof: in the reduction used in the last proof  |nw| = 1 if a is a possible winner in the original election and 1 otherwise. suppose a is a possible winner. then in the new election  |nw| = 1. as  it follows that |nw | = 1. thus  the size of nw  will determine if a is possible winner. q.e.d.
1 combined result
we now consider the problem of computing the combined result. we show that  while in general it is difficult  there are some restrictions which allow us to compute an approximation of the combined result in polynomial time. in the next section  we will show how it is possible to compute the set of possible and necessary winners starting from this approximation to the combined result.
theorem 1 given an incomplete profile  determining if a label is in the combined result for stv is np-complete.
proof: in fact  a polynomial witness is a completion of the incomplete profile. to show completeness  we use a polynomial number of calls to this problem to determine if a given candidate is a possible winner. q.e.d. from this result we immediately get the following corollary.
corollary 1 given an incomplete profile and a social welfare function  computing the combined result is np-hard.
¡¡we now introduce some properties of preference aggregation functions which allow us to compute an upper approximation to the combined result in polynomial time. we recall that the set of labels of an arc between a and b in the combined result is called rel a b .
¡¡the first property we consider is independence to irrelevant alternatives  iia . a social welfare function is said to be iia when  for any pair of outcomes a and b  the ordering between a and b in the result depends only on the relation between a and b given by the agents  arrow et al.  1 . many preference aggregation functions are iia  and this is a property which is related to the notion of fairness in voting theory  arrow et al.  1 . given a function which is iia  to compute the set rel a b   we just need to ask each agent their preferenceover the pair a and b  and then use f to compute all possible results between a and b. however  if agents have incompleteness between a and b  f has to consider all the possible completions  which is exponential in the number of such agents.
   assume now that f is also monotonic. we say that an outcome b improves with respect to another outcome a if the relationship between a and b does not move left along the following sequence:   ¡Ý   ¡« or =   ¡Ü  . for example  b improves with respect to a if we pass from a ¡Ý b to a ¡« b. a social welfare function f is monotonic if for any two profilesand any two outcomes a and b passing fromimproves with respect to a in one agent i and  for all i  then passing from improves with respect to a.
¡¡consider now any two outcomes a and b. to compute rel a b  under iia and monotonicity  again  since f is iia  we just need to consider the agents' preferences over the pair a and b. however  now we don't need to consider all possible completions for all agents with incompleteness between a and b  but just two completions: a   b and a   b. notice that  since f is iia  we don't need to consider complete profiles  but just the part of the profile concerning a and b. this means that transitivity issues do not arise.
¡¡function f will return a result for each of these two completions  say axb and ayb  where x y ¡Ê {    = ¡«}.
since f is monotonic  the results of all the other completions will necessarily be between x and y in the ordering    ¡Ý   ¡« or =   ¡Ü   . by taking all such relations  we obtain a superset of rel a b   that we call rel  a b . in fact  monotonicity of f assures that  if we consider profile a   b and we get a certain result  then considering profiles where a is in a better position w.r.t. b  that is  a   b  a = b  or a ¡« b   will give an equal or better situation for a in the result. thus we have obtained an approximation of the combined result  that we call cr  f ip . we will now give a characterization of this approximation of the combined result.
theorem 1 given two outcomes a and b  rel  a b    rel a b . moreover  if rel  a b  = {    ¡« =}  then either rel  a b  = rel a b  or rel  a b  rel a b  = {¡« =}.
example 1. consider the lex rule  arrow et al.  1   in which agents are ordered and  given any two outcomes a and b  the relation between a and b in the result is the relation given by the first agent in the order that does not declare a tie between a and b. consider the incomplete profile ip =  ip1 =  a   c b   c a b   ip1 =  a   b   c  . then rel  a b  = {  = ¡«  }  whereas rel a b  = {  ¡«  }.
¡¡by following the procedure described above  this approximation of the combined result can be computed polynomially  since we only need to consider two completions.
theorem 1 given a preference aggregationfunction f which is iia and monotonic  and an incomplete profile ip  computing cr  f ip  is polynomial in the number of agents.
1 computing possible and necessary winners
we will now show how to determine the possible and necessary winners  given cr  f ip . consider the arc between an outcome a and an outcome c in cr  f ip . then  if this arc has the label a   c  then a is not a necessary winner  since there is an outcome c which is better than a in some result. if this arc only has the label a   c  then a is not a possible winner since we must have a   c in all results. moreover  consider all the arcs between a and every other outcome c. then  if no such arc has label which includes a   c  then a is a necessary winner. notice  however  that in general  even if there are no arcs connecting a to every other outcome c with the unique label a   c  a could not be possible winner. a could be better than some outcomes in every completion  but there might be no completion where it is better than all of them. we will show that this is not the case if f is iia and monotonic.
¡¡we now define algorithm 1  which  given cr  f ip   computes nw and pw  in polynomial time.

algorithm 1: computing nw and pw

input: cr  f ip   where f: iia and monotonic
preference aggregation function and ip: incomplete profile;
output: p  n: sets of outcomes;
p ¡û ¦¸; n ¡û ¦¸;
foreach a ¡Ê ¦¸ do if   c ¡Ê ¦¸ such that { }   rel  a c  then
n ¡û n   a;
if   c ¡Ê ¦¸ such that { } = rel  a c  then
   p ¡û p   a; return p  n;

theorem 1 given cr  f ip   algorithm 1 terminates in o m1  time  where m = |¦¸|  returning n = nw and p = pw.
proof: algorithm 1 considers  in the worst case  each arc exactly once  thus we have o m1 .
n=nw. by construction of
iff .	by algorithm 1  
rel{a c}  and this implies that there is no result in which there exists an outcome c that beats a. thus  a ¡Ê nw. on the contrary   for all results  from which  a ¡Ê n.
¡¡p = pw. an outcome a is in pw if there is no other outcome which beats it in all results. thus  there cannot exist any other outcome c such that   is the only label in rel{a c} and  thus by construction  also in rel {a c}. thus  pw   p. to show the other inclusion we consider a ¡Ê p and we construct a completion of ip such that a wins in its result. first  let us point out that for any outcome
 
  then a is never beaten by any other outcome c and a is nw and  thus  a pw. secondly  let us consider the case in which a is such that whenever  ¡Ê rel  a c   either ¡« or    or both  are also in rel  a c  and let us denote with x such set of outcomes. then for every outcome in c ¡Ê x we choose   whenever available and ¡« otherwise. this corresponds to replacing a c with a   c in the incomplete profile. such choice on ac arcs cannot cause a transitivity inconsistency and thus can be completed to a result in which a is a winner. finally  let us consider the case in which there is at least a c such that rel  a c  = {  =}. if for every other outcome contains exactly one label from the set: {  ¡« =} then we can safely set ac to = since there is  for sure  a result with that labeling. moreover  in such a result a is a winner. assume  instead  that there is at least an outcome c such that . this means that there is at least an agent which has not declared his preference on  and that such preference cannot be induced by transitivity closure. we replace  with  everywhere in the profile  we perform the transitive closure of all the modified ipos  and we apply f. we will prove that such transitive closure does not force label   on ac. after the procedure  due to monotonicity  will contain exactly one label from the set: {  ¡« =}. let us assume that  after the procedure   and let us now consider. had it been from the start  this would have forced rel a c  = { }. however  this is not possible since a ¡Ê p. this allows us to conclude that and any of such additional labels together with can never force
 a   c. clearly  if  there is no labeling of  which can force a   c. it should be noticed that any available choice on can always be made safely due to the fact that the function is iia and that the transitive closure of the profiles has already ruled out inconsistent choices. by iterating the procedure until every   in the incomplete profile is replaced  we can construct a result of the function in which a is a winner. q.e.d.
¡¡an example of a preference aggregation function which is both iia and monotonicis the pareto rule  described in example 1. another example is the lex rule  described in example 1. a third example is the approval voting rule  for which a tractability result for computing nw and pw is given in  konczak and lang  1  since it is a positional scoring rule.
1 preference elicitation
one use of necessary and possible winners is in eliciting preferences  chen and pu  1 . preference elicitation is the process of asking queries to agents in order to determine their preferences over outcomes. at each stage in eliciting agents' preferences  there is a set of possible and necessary winners. when nw = pw  preference elicitation can be stopped since we have enoughinformation to declare the winners  no matter how the remaining incompleteness is resolved  conitzer and sandholm  1b . at the beginning  nw is empty and pw contains all outcomes. as preferences are declared  nw grows and pw shrinks. at each step  an outcome in pw can either pass to nw or become a loser. when pw is larger than nw  we can use these two sets to guide preference elicitation and avoid useless work.
¡¡if the preference aggregation function is iia  then to determine if an outcome a ¡Ê pw  nw is a loser or a necessary winner  it is enough to ask agents to declare their preferences over all pairs involving a and another outcome  say b  in pw. moreover  iia allows us to consider just one profile when computing the relations between a and b in the result  and guarantees that the result is a precise relation  that is  either    or    or =  or ¡«. to determine all the winners  we thus need to know the relations between a and b for all a ¡Ê pw   nw and b ¡Ê pw. there are examples where all such pairs must be considered. algorithm 1  in o |pw|1  steps eliminates enough incompleteness to determine the winners. at each step  the algorithm asks each agent to express their preferences on a pair of outcomes  via procedure ask a b   and aggregates such preferences via function f. if function f is polynomially computable  the whole computation is polynomial in the number of agents and outcomes.
theorem 1 if f is iia and polynomially computable  then determining the set of winners via preference elicitation is polynomial in the number of agents and outcomes.
¡¡using the results of the previous sections  under certain conditions we know how to compute efficiently the necessary winners and the possible winners. thus algorithm 1 can be given as input the outputs of algorithm 1.

algorithm 1: winner determination

input: pw  nw: sets of outcomes; f: preference
aggregation function;
output: w: set of outcomes; wins: bool;
p ¡û pw; n ¡û nw; while
choose a ¡Ê p   n; wins ¡û true; pa ¡û p   {a};
choose b ¡Ê pa; if   an agent such that a b then
ask a b ; compute f a b ;
if f a b  = a   b  then p ¡û p   {b};
;
¡¡¡¡¡¡¡û pa   {b}; until f a b  =  a   b  or pa =   ;
if wins = true then
n ¡û n ¡È {a};
w ¡û n;
return w;

¡¡it should be noticed that deciding when elicitation is over  that is checking if p = n  is hard in general since  in  conitzer and sandholm  1b  such a result has been proven for stv.
1 related and future work
in  konczak and lang  1  preference aggregation functions for combining incomplete total orders are considered. compared to our work  we permit both incompleteness and incomparability  while they allow only for incompleteness. second  they consider social choice functions which return the  non-empty  set of winners. instead  we consider social welfare functions which return a complete partial order. social welfare functions give a finer grained view of the result. third  they consider specific voting rules like the borda procedure whilst we have focused on general properties that ensure tractability.
¡¡some of our results use iia which is a strong assumption. however  we use it just to show intractability is not inevitable on incomplete partial orders. we plan to find other cases where iia can be relaxed. we also plan to consider the addition of constraints to agents' preferences. this means that preference aggregation must take into account the feasibility of the outcomes. thus possible and necessary winners must now be feasible. it is also important to consider compact knowledge representation formalisms to express agents' preferences  such as cp-nets and soft constraints. possible and necessary winners should then be defined directly from such compact representations  and preference elicitation should concern statements allowed in the representation language. finally  a possibility or a probability distribution over the completions of an incomplete preference relation can be used to provide additional information when computing possible and necessary winners.
references
 arrow et al.  1  k. j. arrow  a. k. sen  and k. suzumara. handbook of social choice and welfare. northholland  elsevier  1.
 bartholdi and orlin.  1  j.j. bartholdi and j.b. orlin. single transferable vote resists strategic voting. social choice and welfare  1 :1  1.
 chen and pu  1  l. chen and p. pu. survey of preference elicitation methods. technical report ic/1  swiss federal institute of technology in lausanne  epfl   1.
 conitzer and sandholm  1a  v. conitzer and t. sandholm. complexity of manipulating elections with few candidates. in aaai/iaai  pages 1  1.
 conitzer and sandholm  1b  v. conitzer and t. sandholm. vote elicitation: complexity and strategyproofness. in proc. aaai/iaai 1  pages 1  1.
 konczak and lang  1  k. konczak and j. lang. voting procedures with incomplete preferences. in proc. ijcai1 multidisciplinary workshop on advances in preference handling  1.
 lang  1  j. lang. logical preference representation and combinatorial vote. annals of mathematics and artificial intelligence  1 :1  1.
 rossi et al.  1  f. rossi  k. b. venable  and t. walsh. mcp nets: representing and reasoning with preferences of multiple agents. in aaai-1  pages 1  1.
     1 this work has been supported by italian miur prin project  constraints and p