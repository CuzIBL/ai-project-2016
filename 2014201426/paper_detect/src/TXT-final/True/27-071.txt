planning under uncertainty 	some key issues 

	g r e g g 	c o l l i n s 
the institute for the learning sciences 
northwestern university 
1 maple avenue 
evanston  illinois 1 
u s a 
collins ils nwu edu 
a b s t r a c t 
a planner in the real world must be able to handle uncertainty it must be able to reason about the effect of uncertainty on its plans  select plans that avoid uncertain outcomes when possible  and make contingency plans against different possible outcomes when uncertainty cannot be avoided we have constructed such a planner  cassandra  which has these properties using cassandra  we have produced the ant general solution to the keys and boxes challenge problem proposed by michie over twenty years ago 
1 	introduction 
a planner id the real world must face the challenge posed by uncertainty to be successful  it must  among other things  be able to reason about the effect of uncertainty on its plans  select plans that avoid uncertain outcomes when possible  and make contingency plans against different possible outcomes when avoidance is impossible classical planning has largely ignored the issue of uncertainty ' assuming complete and accurate knowledge of the planning context and of the results of available actions recently  however  several researchers have begun to address the issues involved in extending the classical approach to handle uncertainty  etziom et al  1  peot and smith  1  pryor and collins  1  draper et ol   1  pryor  1  this paper explores the issues in the context of the keys and boxes challenge problem  michie  1  we describe cassandra 1 a program that constructs plans that allow for uncertainly  show how it solves the keys and boxes problem  and discuss open issues 
1 	t h e keys a n d boxes p r o b l e m 
the keys and boxes problem  presented originally by michie  and discussed by tate  and sacerdoti   addresses many of the issues raised by the presence of uncertainty in the world it involves a robot locked inside a room containing an empty table  two 
'with the notable exception of  warren  1  
   1a trojan prophet fated to be disbelieved when she accurately predicted future disasters 
l o u i s e p r y o r 
department of artificial intelligence 
university of edinburgh 
1 south bridge 
edinburgh e h 1 h n 
　　　　scotland louisep aisb ed ac uk 
boxes  and a pile of red things sitting by the door a key to the door is in one or the other of the boxes the robot can leave the room only if the key is by the door it can pick up and put down small objects  the key and the red things   but has no sensing capabilities that would allow it to determine what it is about to pick up or what it has in fact picked up the problem is to construct a plan that achieves the goal of having the robot take a 
red thing out of the room the simplest workable plan is for the robot to move a red thing to the table  move the key to the door  fetch the red thing from the table  and take it out of the room 
　the problem illustrates two important general issues that arise in planning under uncertainty the first concerns the acquisition of the key because the robot cannot resolve the uncertainty about the key's initial location  it must construct a plan that will work regardless of which possibility turns out to hold 1 the second arises because of the uncertain result of picking a single item out of a heterogeneous pile if the key is put in the pile by the door before the robot tried to pick up a red thing from that pile  then the key might be picked up instead  resulting in an unrecoverable plan failure  because the robot cannot determine what it has picked up  the only way to ensure a sound plan is therefore to avoid the uncertainty by ensuring that the red thing will be picked out of a homogeneous pile of red things because the planner must  due to other constraints  get the key next to the door before picking up the red thing  the only solution is to move a red thing to another site before the key is moved  creating a new homogenous pile of red things 
　although the keys and boxes problem was invented over twenty years ago  classical planning has failed to produce a convincing solution to the problem  largely because work in this area had not until recently addressed the problem of uncertainty  tale's and sacerdoti's approaches are discussed below  to our knowledge  no adequate solution has previously been presented 
1 	c a s s a n d r a 
cassandra is a member of the snlp family of partial order planners  mcallester and rosenblitt  1  it is based on ucpop  penberthy and weld  1   which extends the basic algorithm to handle context-dependent effects and a limited form of universal quantification actions are represented by modified strips operators  fikes and nilsson  1   each defined by the preconditions for executing an action and the effects that occur as a result of executing it each possible effect has an associated set of secondary preconditions  pednault  1   specifying the conditions under which the action will have that effect 
   the use of secondary preconditions is crucial to cassandra's ability to represent uncertain effects  which it does by assigning them unknowable secondary preconditions  constructed using the pseudo-predicate unknown unknowable preconditions designate both a source of uncertainty  e g   an instance of a coin toss  and a possible outcome of that uncertainty   heads   we assume that each outcome of a given source of uncertainty has a unique came  and that the set of named outcomes is exhaustive and mutually exclusive these assumptions license two critical judgments that cassandra must be able to make  1  that two actions or effects may not co-occur because they depend upon different outcomes of the same uncertainty  and  1  that a goal will necessarily be achieved by a plan  because it will be achieved for every possible outcome of every relevant uncertainty 
　planning under uncertainty requires the planner to build plan segments that may or may not be executed  depending on the contingencies that are encountered keeping track of which elements of the plan are relevant under various contingencies requires effective bookkeeping cassandra therefore propagates labels over actions effects  and goals in the plan to indicate both the contingencies in which these elements play a role and the contingencies with which they are compatible 
　until cassandra encounters an uncertainty  it proceeds in the same manner as other planners in the snlp family  using a means-ends analysis involving the alternation of two processes planning for open subgoals and avoiding bad interactions an uncertainty is introduced into a plan when a subgoal is achieved by an effect with an unknowable precondition  and is noticed by cassandra when its current plan becomes dependent upon a particular outcome of that uncertainty in effect the plan that has been built so far becomes a contingency plan for that outcome to build a plan that is guaranteed to succeed  cassandra must also construct contingency plans for all other possible outcomes of the uncertainty it splits the plan into a set of branches  one for each possible outcome cassandra labels the components in the existing plan to show that they depend on a particular outcome of the uncertainty  and introduces a new set  of goals for each other possible outcome the plan is thus not complete until all the goals are achieved in every possible outcome this procedure is repeated whenever an uncertainty is encountered 
　once an uncertainty has been encountered and plan branches have been introduced  every new component  action or causal link  that is introduced into the plan is relevant only in some branches each component is therefore labeled with the contingencies in which it fa-
1 	planning 
cilitates goal achievement  these labels propagate backwards from the goals  and the contingencies in which it hinders goal achievement  these labels propagate forwards towards the goals  labels of the latter type are introduced when an unsafe link is detected a causal link that is threatened by another effect  the clobberer  in the plan there are two standard methods for resolving an unsafe link in planners in the snlp family separate the clobberer and the unsafe link by adding codesignation constraints ensuring that they don't unify  or reorder the actions in the plan to ensure that the clobberer occurs outside the range of the link the first of these methods is extended in cassandra another method of separating the clobberer from the unsafe link is to ensure that they only occur in different contingencies  resulting in plan components being labeled with contingencies in which they may not occur 
1 	cassandra's decisions 
when an agent executes a branching plan  it must at some point decide which branch to take previous work has simply assumed that the agent will execute those steps that are consistent with the contingency that actually obtains  warren  1  peot and smith  1  however  in order to know which contingency this is  an arbitrarily large amount of work may be necessary in order to gather the information on which the decision is based  pryor. 1  1  for a plan to be viable  the planner must be able to ensure both that it will be in a position to make the decision by acquiring the necessary information  and that the information-gathering steps do not conflict with the rest of the plan 
　our approach to this problem is to treat decisions as explicit plan steps  along with the actions to acquire and evaluate information that support the decision making procedure cassandra therefore adds an explicit decision step each time it encounters a new source of uncertainty it is added to the plan along with ordering constraints ensuring that it occurs after the step with which the uncertainty is associated and before any step with a subgoal the achievement of which depends upon a particular outcome of the uncertainty 
　in cassandra  the action of deciding which contingency to execute is modeled as the evaluation of a set of condition-action rules each decision step in a plan is annotated with the set of rules that will be used to make it to evaluate a decision rule  the executing agent must be able to determine whether the rule's antecedent holds thus  the preconditions for the decision step must include goals to know the current status of each condition that appears as an antecedent of a rule in this condition the preconditions of a decision step become open conditions in the plan in the same way as do the preconditions 
of any other step 
　since the intended effect of evaluating the decision rules is to choose the appropriate contingency given the outcome of a particular uncertainty  the conditions are intended to be diagnostic of particular outcomes of the uncertainty the agent cannot  of course  directly determine the outcome of an uncertainty  so it must infer it from the presence or absence of effects that depend upon 

i n i t i a l when  keyos 	1  
 and  at key bdi1   at thing boh   idt  at key boh   
　　　　　　　 ot  at thing bdi1    when  keyos 	bok1  
 aid  at key box1   at thing b1   ot  at key b1   
                          ot  at thing b1    other initial condition* st p 1  1   decide keyos  
	parallel branches for 	keyos 
step 	1  b  	 pick-up bdx1  
step 1  1   put-dowe door  1 t t p 1  1   pick-up box1  
step 	b  1   put-dows door  
goal 	 at key door  
1 -   at key door  	1 	 keyos 	b1  1 -   at key door  	1 	 keyos box 1  
figure 1 	cassandra's plan to get the key to the door 
that outcome 
   the most straightforward approach to constructing decision rules would be to make the antecedent for a given contingency be the conjunction of all the effects that could be expected to result from the relevant outcome of the uncertainty however  this turns out to be overkill in fact  it need only be verified that the contingency plan can succeed the decision rule antecedent for a contingency u thus the conjunction of all the direct effects of the relevant outcome that are used to establish subgoals in that branch of the plan 
1 	cassandra's solution 
cassandra solves the keys and boxes problem by explicitly representing and reasoning about the underlying uncertainty of the domain it also performs sensibly on reasonable van at ions of the original problem for instance  a planner that would produce the same plan for the problem despite being given the ability to see and distinguish objectfl clearly could not be considered to be competent in this domain cassandra produces the correct plan for this case as well we consider cassandra's approach to the two major parts of the problem separately 
1 	r e t r i e v i n g t h e k e y 
the retrieval of the key presents two interesting issues the planner must be able to recognize how the uncertainty about the key's location affects its plan to acquire the key  and the planner must be able to recognize that  in the absence of a method for determining the key's location in advance  it must try picking the key up from all the possible locations in general  uncertainty affects a plan when the achievement of a subgoal depends on an outcome of the uncertainty for example  the uncertainty about the key's location affects the keys and boxes plan just because the operator for acquiring the key  pickup  depends on the location of the object to be picked up were this not the case  the uncertainty would be irrelevant for example  if the planner were given a goal to trigger a radio-controlled bomb that could be in either of the two boxes  the uncertainty about 
st p 1  1   scan 	box1  slip 1  1   scan 	b1  step 1  1   decide keyos  
 and  hot  at thing box1  
 at key box1  
	t  -   keyos 	box1  
 and  i1t  at thug b1   
 at key box1  
	t  -   keyos 	b1  step 1  1   pick-up b1  	yes 	 keyos b1  	＊1 	 keyos 	box1  
　　steps labeled with the appropriate contingencies figure 1 part of another plan to get the key to the door 
that location would not affect the resulting plan 	cas-
sandra recognizes when any given uncertainty affects its plans  irrelevant uncertainties are simply ignored during the planning process 
   a plan is sound only if it achieves its goal for every possible outcome of each relevant uncertainty there are two strategies for accomplishing this the planner can make contingency plans for each outcome  and decide during execution which should be executed  or it can make contingency plans for each outcome and execute them all  in parallel   having determined that they do not interfere with each other cassandra pursues both these strategies  thus  when it cannot find a plan for making an explicit decision  it can find one involving parallel execution 
   cassandra's flexibility is a result of its explicit representation of decisions as plan steps as well as the type of decision described above  in which rules are used to determine which plan branch should be executed  cassandra can also use a type of decision in which all branches are executed when uncertainty is encountered during the planning process  either type may be used the decision type affects the remainder of the planning process if the decision uses rules  the necessary knowledge preconditions must be added and threats can be resolved by ensuring that the ciobberer and the threatened link occur only in different contingencies if the decision is to execute all plan branches  no knowledge preconditions are added  and all steps and effects must be compatible with all others  regardless of which branch they are in 
   figure 1 shows the plan cassandra constructs when given the goal of getting the key to the door the initial conditions state that either the key is in box1 and something else is in box1  or vice versa the plan's decision step says to execute both branches in parallel the goal is achieved separately in each contingency-for instance  step 1 will not achieve the goal if the key was onginally in b o x l   but will do so if it was in box1 
   if we give cassandra a variant of the problem in which it has an operation  scan  that can be used to spot the location of the key in advance  it constructs a plan in which the robot first scans the area  then picks up the key from the correct location figure 1 shows part of this plan the decision has two rules  one for each outcome of the uncertainty the antecedents of the rules become knowledge preconditions for the decision step  and are achieved by the scan actions in the original 
	collins and pryor 	1 

problem  the lack of such a sensing operation makes it impossible to determine which contingency holds  which is why in that case cassandra produces a plan calling for ail branches to be pursued at once 
1 	a c q u i r i n g the r e d t h i n g 
a plan that will fail for some outcome of an uncertainty is unsound one approach to constructing a correct plan in the face of such an uncertainty is to ensure that the problematic outcome does not arise for example  consider the classic example of drawing a ball from an urn from the planner's point of view  the outcome of the action is uncertain  since any of the available balls might be drawn if a plan cannot be elaborated to deal with the case in which  say  a black ball is drawn  then the planner's only alternative is to ensure that no black ball is present in the first place 
   for a non-sensing robot  the action of picking an object from a pile is identical to the problem of drawing a ball from an urn since the robot cannot distinguish one object from another  it is unable to construct sound plans for cases in which it is attempting to pick up a needed object from a heterogeneous pile  unless  of course  any of the objects in the pile will suffice for its purposes  the planner's only alternative in these cases is thus to enforce the condition that no object of the wrong type is present when it does a pickup cassandra uses a special construct  the one of construct  to represent the type of uncertainty found in this sort of situation one of the effects of the pickup action is shown in figure 1  representing the fact that the action will result in the robot holding one of the moveable objects that are present at the location at which the action is executed 
　when cassandra encounters a one of condition in a subgoal  it enumerates the objects that meet the type specification  in this case  all noveable objects these designate all possible outcomes of the uncertainty attached to this construct     grab in the example  since individual branches may be made impossible if the conditions for their occurrence are not met  cassandra maintains completeness by trying each possible combination of outcomes  adding sub goals to ensure that only the appropriate branches will occur in the example  these subgoals concern the presence or absence of the relevant objects at the specified location of course  the combination with only one possible outcome effectively removes the uncertainty  and cassandra recognizes that there is no need to add a decision into the plan in this case 
　when cassandra schedules an action to acquire a red thing by picking it up  it will try to find contingency plans for outcomes in which it picks up some object other than that a red thing  but will fail 1 the only alternative 
1
　　 cassandra can also construct an appropriate plan when there is a sensing action available 
1 	planning 

available is to make sure that no other objects are in the pile thus  for every instance in which the robot must pick something up  cassandra will explicitly ensure that no unwanted objects are present figure 1 shows the relevant steps from the plan for the situation in which the key is in b o i l 
　the construction of the correct plan for the keys and boxes problem follows directly from this since it is impossible to construct a sound plan for the case in which the red thing is picked up from beside the door 1 the red thing must be picked up from another location  i e   from one of the boxes or from the table if a box is chosen  the constraint that the key not be at the pickup location will again conflict  in a different way  with the schedul ing of the movement of the key  and the obvious plan of moving a red thing to the box  then moving the key to the door cannot be completed 1 in the plan involving the table  the constraint that the key is not on the table is unproblematic however  cassandra must ensure that there is a red thing on the table  meaning that it must put one there to do this  it must possess a red thing  which it can get by picking it up from the pile by the door since this operation can only succeed if the key is not by the door  it must be scheduled before the key is moved thus  we get the plan red thing to table  key to door  red thing out 
1 	previous solutions 
there have been two previous attempts at solving the keys and boxes problem by tate  and sacerdoti 
 we discuss them in turn 
   1 	tate's solution 
tate's planner  interplan   represents an early attempt to solve the keys and boxes problem tate explicitly recognized three important issues  1  actions have 
   1 if the red thing is picked up first  there will be no way to get out of the door  if the key is moved first  it will be in the pile before the pickup 
   1 in fact  the less obvious plan of key to table  red thing to box  key to door  red thing to outnde works-and cassandra can find it  but arrives at the simpler plan first 
uncertain outcomes   1  the robot cannol tell which object is a key  and  1  the planner cannot keep track of what objects are at each location 
　although tate recognized that uncertainty plays a key role in the problem  interplan could not handle the general case of actions with uncertain effects  but only the special case required by the problem picking up one of a set of objects at a location it did this by using sets in the representation of the preconditions and effects of its actions for example  a precondition of its pickup action is that there is a subset of set x. of objects at the robot's location  the effect is that the robot is holding a subset of set i when the robot moves  the things that it is holding move with it interplan's solution of the problem thus depended on a set-matching facility that can match patterns such as  subject x    union x y  and  setninus x y  it also needed the ability to represent such knowledge as  if a set of objects has some property p  then a subset of that set has that property   these facilities were not implemented tate presents a simulation of interplan's solution to the problem moreover  the implemented version of interplan could not fully represent the initial conditions of the problem that the key is either in b o i l or in box1  and that all the objects at the door are red 
　interplan solved the problem of getting the key to the door by reasoning that a subset of the things at b o i l and a subset of the things at box1 must be at the door this reasoning is accomplished by way of a special eitherof construct the set matching facility should transform  at  subset  either of a b   door  into two conditions  both of which must be achieved cat  subset a  door  and  at  subset b  door  interplan could thus only handle uncertainty by executing plans for all contingencies at once  it could not build a plan with separate branches  only one of which should be executed 
　next  interplan detected that it would run into trouble if it tned to move the key to the door while holding the red thing it had several strategies that it could use in this situation it first tried to reorder the plan actions  but found this ineffective its next strategy was to introduce another action into the plan that will achieve the goal of holding the red thing  in this case picking it up from the table it is not clear from tate's description how the table is chosen as the intermediate staging point rather than  say  either of the two boxes 
　interplan thus failed to provide a fully general solution to the keys and boxes problem it could handle only special cases of actions with uncertain effects  could not handle simple variants of the problem  and did not explicitly reason about removing sources of uncertainty 
1 	sacerdoti's 	solution 
sacerdoti  describes in detail how his planner noah  can be made to handle the keys and boxes problem because noah did not reason explicitly about uncertainty  the approach necessarily involves neither recognition of the uncertainties that characterize the problem nor explicit reasoning about methods for coping with these uncertainties as such  the solution is 
1 but the behaviour of the set matcher was fully specified 
suspect from the start  a close examination of the details confirms this judgment 
　noah's solution to the key acquisition problem is somewhat difficult to interpret the initial state is represented as having  piles of keys  in both boxes  apparently a pile is to be interpreted as something that may have zero size  when noah expands the subgoal of getting a key to the location of the door  it simply constructs an iterative plan to move items from both boxes to the door this can be interpreted as  compiling in  a rather specific rule about how to acquire a single object from a set of possibly empty piles however  there is no obvious way in which noah would behave differently if it were known that the piles were all of non-zero size  in this case it would apparently still pick up an object from each pile thus  the approach at best trivializes the problem  and at worst leads to incorrect solutions of related problems furthermore  there does not appear to be any representation of the fact that the key must be on one pile or the other  it thus does not appear that noah has any way of knowing if its plan will succeed or an adequate rationale for planning to move the two 
piles 
　the approach to the acquisition of the red thing is more complex the process proceeds as follows 
  since the robot must possess a red thing in order to achieve the overall goal of the plan  noah schedules an action to pick one up  
  noah realizes that the necessary action of moving the key will interfere with the goal to keep holding the red tlung that has been picked up 
  noah repairs this bug by scheduling an action to put the red thing down while it moves the key  
  noah elects to have the robot put the red thing on the table  this choice being governed by a heuristic that says that objects should always be put down 
in the least crowded available place  
  noah schedules an action to reacquire the red thing by picking it up from the table  followed by the action of leaving the room 
　there are several problematic aspects of this solution that deserve mention first  the solution depends serendipitously on the action of the  put things down in the least crowded place  heuristic the justification for this heuristic is unclear  since other alternatives such as putting the object in the nearest spot  or putting it back from whence it came seem equally sensible if noah were given a variant of the problem in which the pile of red things was initially on the table  it would apparently pick one up  and then put it down in a less-crowded box  thus producing an unsound plan worse yet  noah has method other than this heuristic of rejecting a plan in which the red thing were put back in the pile by the 
door 
　second  noah's response to the perceived bug in its initial plan-not being able to hold on to the red thing while moving the key-uses an apparently sub-optimal repair strategy the problem is an instance of the threatened violation of a protection interval one of noah's 
	collins and pryor 	1 
standard strategies in such cases is to constrain the interfering action to occur before the establishment of the goal  this was termed promotion by chapman  notice that promotion is in general preferable to the interruption strategy  since it involves achieving the goal only once  rather than achieving the goat  undoing it  and re-achieving it * it is thus difficult to see why n o a h would elect to use the interruption strategy  in fact  it is difficult to see why it would have such a strategy 
   one possible answer to this question is that noah might use interruption when it recognizes a situation in which  as in the keys and boxes problem  the use of promotion will not lead to a correct plan once again  however  the knowledge necessary to make such a judgment is entirely lacking n o a h is unable to recognize the problem caused by heterogeneous piles of objects  as far as it is concerned  were the bug repaired using promotion  the resulting plan would be entirely acceptable 
   sacerdoti's approach to the keys and boxes problem thus fails to come to grips with either of the two interesting aspects of the problem a sound plan is constructed only through a series of contingent accidents  and n o a h has no knowledge that would allow it to reject unsound alternative plans in short  it cannot be considered a legitimate solution to the problem 
1 	conclusion 
reasoning under uncertainty is an important issue for any planner intended to operate in real-world domains we have constructed a planner  cassandra  that is capable of constructing viable plans in the face of uncertainty cassandra has a number of important properties that are not found in other approaches to planning under un certainty using cassandra  we have produced the first known solution to the keys and boxes challenge problem  first proposed by michie over twenty years ago 
1 	h o w c a s s a n d r a s o l v e s t h e p r o b l e m 
cassandra's ability to solve the keys and boxes problem  and its variants  stems from its general ability to handle plans affected by uncertainty there are several aspects of cassandra's approach that lead to its success 
  cassandra's representation of uncertainty allows di-verse phenomena to be treated within a. single framework any set of initial conditions or operator effects can be viewed as representing alternative 
potential outcomes of a source of uncertainty  each effect can also have conventional preconditions  
  for a given goal  cassandra can find plans that are unaffected by a given contingency as well as plans that are affected by that contingency this is because it determines the relevance  or lack thereof  
    the interruption strategy might be justified as a response once execution of the plan has begun  ＊ e   if the executing system has achieved a goal and subsequently discovers that it must execute an action that will undo it when planning in advance  however  it is clearly preferable to avoid the conflict 
from the start 
1 	planning 
of a source of uncertainty to its current plan by waiting until an outcome of that uncertainty is used to 
establish an effect in the plan  
  whenever cassandra encounters an uncertaint that is relevant to its plans  it constructs contin-
gency plans for each relevant outcome of the uncer tainty  
  any number of uncertainties can be handled within a single plan 
  because of the explicit representation of decisions  cassandra can construct plans involving making decisions between different contingency plans as well as those involving executing all contingency plans in parallel  
  cassandra can recognize that plans involving pick-ing an object from a heterogeneous pile in the keys and boxes world are unsound because it recognizes when it is impossible to plan for a relevant contin gency 
  using the one of construct  cassandra can repre-sent the situation in which different possible out comes of a given uncertainty are contingent on dif ferent antecedent conditions for example  it can represent the uncertainty of drawing a ball from an urn  where the alternative outcomes-particular balls that might be drawn-depend upon different jnitial conditions-whether a given ball is in the urn before the draw  
  cassandra considers plans that avoid potential out comes of an uncertainty since it can plan to rule out outcomes as well as planning to achieve its goal in the face of outcomes  it can exhaustively consider viable plans for dealing with a particular source of uncertainty 
   many of these capabilities are unique to cassandra other recent planners that address issues connected with uncertainty are sensp  etzioni et al   1   c n l p  peot and smith  1  and c - b u r i d a n  draper et al  1  none of these has a fully general representation for un certainty  pryor and collins  1  none of them can handle uncertainty when it is impossible to sense the actual outcome that has occurred  as is the case in the keys and boxes domain  and none can allow for the execution of contingency branches in parallel to our knowledge  cassandra is the only planner to consider ruling out potential outcomes by ensuring they cannot occur  and no other planner can represent the type of uncertainty for which cassandra uses the on of construct 
1 	o p e n issues 
the application of cassandra to the keys and boxes problem highlights several general open issues in planmn under uncertainty space permits only a brief glance at some of these 
   first  it is potentially extremely inefficient for cassandra to consider every object in a given pile as representing a different alternative outcome of the uncertainty involved in picking something up from that pile  since in many instances different objects id the pile ma 

function identically as far as the planner is concerned for example  in the keys and boxes problem it does not matter which red thing is picked up in other words  red things form an equivalence class for this problem  and the planner need only reason about the outcome of picking up a generic red thing the ability to spot equivalence classes among uncertain outcomes is one that would prove highly useful 
　second  the one of construct  like the f o r a l l construct suggested by pednault  and implemented by penberthy and weld  ranges over every object of a given type defined in the planning universe explicit consideration of all of these objects may represent a tremendous amount of overhead in a crowded universe the planner should have some filter that allows objects that are technically in the scope of a oneof or f o r a l l to be considered explicitly only when there is some reason 
to do so 
　third  cassandra exhibits the problem of exhaustive search faced by all classical planners the introduction of contingency plans and  especially  the proliferation of choices resulting from the handling of the oneof construct  increase the size of the search space enormously without effective domain-independent search heuristics  plans for even simple problems take an impractical length of time to construct one way of reducing this problem would be to merge plan branches tliit consist of the same actions unfortunately  this turns out to be extremely com plex  see  pryor and collins  1   
　finally  cassandra cannot in principle achieve an explicit  general understanding of the problem that heterogeneous piles pose for the non-sensing robot-every time it considers doing a pickup from such a pile during plan construction  it in effect rediscovere the same problem a better approach would be to incorporate a mechanism whereby the planner could formulate a general description of the problem once  and recognize it quickly whenever it recurred  this is in the spirit of sussman   see  collins et al  1  for ideas about how to formulate this sort of genera  problem characterization  
　future work will tackle these and other central issues in the design of planners that can cope with uncertainly 
r e f e r e n c e s 
 chapman  1  d chapman planning for conjunctive goals artificial intelligence  1-1  1 
 collins et al  1  g collins  l birnbaum  b krulwich  and m freed plan debugging in an intentional system in proceedings of the 1th international joint 
conference on artificial intelligence  pages 1  sydney  australia  1 ijca1 
idraper et al   1  d draper  s hanks  and d weld probabilistic planning with information gathering and contingent execution in proceedings of the 1nd international conference on artificial intelligence planning systems  pages 1  chicago  il  1 aaai press 
 etziom el al   1  e etzioni  s hanks  d weld  d draper  n lesh  and m williamson an approach 
to planning with incomplete information in proceedings of the 1rd international conference on knowledge representation and reasoning  boston  ma  1 morgan kaufmann 
 fikes and nilsson  1  r e fikes and n j nilsson strips a new approach to the application of theorem proving to problem solving artificial intelligence  
1  1 
 mcallester and rosenbhtt  1l  d mcallester and d rosenbhtt systematic nonlinear planning in proceedings of the 1th national conference on artificial intelligence pages 1  anaheim  ca  1 aaai press 
 mcdermolt  1  d v mcdermott a critique of pure reason computational intelligence  1-1  1 
 michie  1  d michie on machine intelligence edinburgh university press  edinburgh  1 
 pednault  1  e p d pednault synthesizing plans that contain actions with context-dependent effects computational intelligence  1-1  1 
 pednault  1  e p d pednault adl exploring the middle ground between strips and the situation calculus in proceedings of the 1st international conference on principles of knowledge representation and reasoning morgan kaufmann  1 
 penberthy and weld  1  j s penberthy and d s weld ucpop a sound  complete  partial order plan ner for adl in proceedings of the 1rd international conference on knowledge representation and reasoning  boston  ma  1 morgan kaufmann 
 peot and smith  1  m a peot and d e smith conditional nonlinear planning in proceedings of the 
	1st 	international conference on artificial intelligence 
planning systems  college park  maryland  1 morgan kaufmann 
 pryor and collins  1  l pryor and g collins cassandra planning with contingencies technical report 1  institute for the learning sciences  northwestern university  1 
 pryor  1  l pryor opportunities and planning in an unpredictable world technical report 1  institute for the learning sciences  northwestern university  
1 
 pryor  1  l pryor decisions  decisions knowledge goals in planning in j hali am  editor  hybrid problems hybrid solutions  proceedings of aisb-1   pages 1 1s press  1 
 sacerdoti  1  e sacerdoti a structure for plans and behavior american elsevier  new york  1 
 sussman  1  g j sussman a computer model of skill acquisition american elsevier  new york  1 
 tate  1  a tate using goal structure to direct search in a problem solver phd thesis  university of edin-
burgh  1 
 warren  1  d warren generating conditional plans and programs in proceedings of the aisb summer 
conference  university of edinburgh  1 
	collins and pryor 	1 
　　　1 this problem is essentially isomorphic to moore's  bomb in the toilet  problem  mcdermott  1  
	collins and pryor 	1 
   ---------------

   ------------------------------------------------------------

---------------

------------------------------------------------------------

