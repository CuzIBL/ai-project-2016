*a system which allows students to explore algorithms 
d h sleeman 
computer based learning project 
	department 	of 	computer studies 
the university of leeds  england  uk 

a b s t r a c t 
       this paper discusses the problems of making a l g o r i t h m s ' t r a n s p a r e n t ' . the approach taken has been to d e f i n e a formal language f o r the problem domain which describes t h e m a i n s t e p s i n t h e a l g o r i t h m under d i s c u s s i o n . this formal language has been used in a system which allows the student to enquire about selected p a r t s of the a l g o r i t h m and in a f a c i l i t y which comments on the s t u d e n t ' s e x p l a n a t i o n s o f c e r t a i n p a r t s o f the a l g o r i t h m . some i n d i c a t i o n is given as to how the system's f a c i l i t i e s can be extended to answer a f u r t h e r range o f q u e s t i o n s   but i t i s concluded t h a t i n order to make s u b s t a n t i a l progress in t h i s p u r s u i t a s i n g l e r e p r e s e n t a t i o n for algorithms is r e q u i r e d which can be both executed and used as a basis f o r e x p l a n a t i o n s . 
	1 . 	i n t r o d u c t i o n 
       there are c l e a r l y two major d r i v i n g forces in the f i e l d of generative cai  computer a s s i s t e d i n s t r u c t i o n   ; namely  the p r a c t i c a l one of i m p l e menting systems which are capable of producing teaching m a t e r i a l   and secondly the i n t e r e s t of the ai   a r t i f i c i a l i n t e l l i g e n c e   p r a c t i t i o n e r s who seek t o r e p l i c a t e various f a c e t s o f i n t e l l i g e n t behaviour  teaching c l e a r l y being one such a c t i v i t y     generative cai systems have used e s s e n t i a l l y two types of knowledge bases: semantic nets and algor i t h m s . in t h i s paper we s h a l l be concerned only w i t h the l a t t e r type and we s h a l l see t h a t   given an a l g o r i t h m which is able to solve problems in a p a r t i c u l a r domain  i t enables the system t o o f f e r a range of teaching modes. these c a p a b i l i t i e s can b e d i v i d e d i n t o t h r e e l e v e l s o f s o p h i s t i c a t i o n which are represented by the a b i l i t y t o : 
 i  t e l l the student whether or not h i s s o l u t i o n i s c o r r e c t . 
  i i   show the student how the a l g o r i t h m would solve the same problem   t h i s is e s s e n t i a l l y showing the student the t r a c e o f the a l g o r i t h m   . 
  i i i   debug the s t u d e n t ' s explanation of how the a l g o r i t h m   or p a r t of the a l g o r i t h m works. 
*this is a r e v i s e d v e r s i o n of a paper given at the ssrc  computers in education  seminar held at the u n i v e r s i t y of warwick  uk  j u l y 1. 
       the main problem w i t h l e v e l one systems is d e c i d i n g whether or not the answer given by t h e student i s e q u i v a l e n t t o t h a t generated b y t h e a l g o r i t h m . i n g e n e r a l   t h i s i s a n o n - t r i v i a l t a s k : but so f a r areas have been chosen where the answer r e q u i r e d is a number or a simple l i t e r a l and hence t h i s d i f f i c u l t y has been avoided  see f o r instance u h r   1     . p e p l i n s k i l 1   has implemented a second l e v e l system which gives students l i n e a r equations to solve and r e q u i r e s them to respond w i t h the value f o r the unknown. a f t e r a number of unsuccessful a t t e m p t s   the program presents t h e student w i t h a l l the steps which the a l g o r i t h m performs in s o l v i n g the problem. in t h i s paper we s h a l l discuss a system which presents the student w i t h the t r a c e of the a l g o r i t h m and then allows him t o discuss c e r t a i n aspects o f t h i s i n f o r m a t i o n . f u r t h e r   we wish to consider the t h i r d and more c h a l l e n g i n g problem of designing a system to comment on  debug  the s t u d e n t ' s e x p l a n a t i o n s . 
       the system we have implemented assumes t h a t the students are f a m i l i a r w i t h the a l g o r i t h m but may need some assistance in e x t r a c t i n g the e s s e n t i a l i n f o r m a t i o n from t h a t presented f o r a p a r t i c u l a r problem  and t h a t the students may need some help 
i n
　 processing t h i s information. suppose that the given algorithm contains *n' sequential processes  p1 to pn: suppose that the essential feature of the f i r s t n-1 processes is that each calculates the value of a variable  say v1 to vn-1  and f u r t h e r suppose that the essential feature of the nth process is to calculate the value of a further variable  vn using the values of the variables v1 to vn-1. if the student requests help about this algorithm  it seems reasonable to present him with a trace which consists of n-l facts  variable values  and a single deduction  the value of the nth variable. 
  this information is referred to as the system's trace and t h i s f a c i l i t y as the help mode.  clearly  the form of the trace w i l l depend upon the algorithm being discussed and w i l l usually be a series of interspersed facts and deductions. on the other hand  whatever the form of the trace it is possible that the help provided would not be at a s u f f i c i e n t level of d e t a i l and so the student would want to ask some subsidiary questions about the various statements. this can be viewed as the student asking for more detailed information about one of the processes. ideally  the student would be able to further query this second-level information and so on u n t i l a l l his queries are answered. 

　　　essentially  this f a c i l i t y has been designed to help the student determine the short-comings in his understanding of the algorithm   i . e . to help him 'debug' his algorithm . however  we can attempt to do this more directly by getting him to outline the essential features of the algorithm  or section of the algorithm  and for the system to comment on the student's explanation. there are a number of results which indicate that this is a powerful teaching approach  for instance see pask  . further  designing such a system is a challenging problem from the point of view of a i / computer science. looking again at the problem of following the student's reasoning from the p e r spective introduced when discussing the help mode  
we could say that the objective is to infer from the student's response a series of facts and deductions and to compare these with the trace of the algorithm when it attempts to solve the same problem. 
　　　although we are talking about the discussion of algorithms in general  we w i l l take examples 
from a system which helps students interpret nmr  nuclear magnetic resonance  spectra. the student is presented with a spectrum and a molecular formula  and he has to postulate a maolecular structure which explains the spectrum given the constraints of the molecular formula and the various rules which apply in this physical domain. it is usual to consider the interpretation of nmr spectra as p sub-problems  namely the specification of p groups which constitute the molecule. a distinctive feature of the interpretation procedure is that it is not always possible to specify a unique solution for a particular sub-problem. in these cases one could select a 'solution' to a sub-problem  and proceed u n t i l the problem is solved or one realizes that a basic constraint has been violated: after a v i o l a t i o n   one backtracks and selects an alternative solution to a sub-problem. essentially  we are suggesting that a depth-first search is a 'natural' way to solve these tasks . 
　　　in order to discover the d i f f i c u l t i e s which students experience when they f i r s t encounter this task  we asked a dozen or so such students to work a series of problems recording a l l the stages of their solutions. on analysing these protocols we noted that the students were often unaware t h a t a solution to a sub-problem violated a constraint and so they continued solving the problem after they had given an.unacceptable solution to a sub-problem. secondly  it was noted that many students were unable to handle the backtracking inherent in the search and that they frequently omitted to return the 'resources' used in the steps through which they had backtracked. as a result of this analysis we implemented a system which constrains the student to follow a consistent strategy  namely depth-first search   which t e l l s him whether his solution to a sub-problem is acceptable and provides him w i t h a number of socratic f a c i l i t i e s .  we r e f e r to the student's solution to a sub-problem as an assertion.  the socratic f a c i l i t i e s includes the help f a c i l i t y   which as indicated above provides the student with a hint as to how to proceed in solving the next sub-problem. the explain f a c i l i t y   which is only available after an incorrect assertion  points out why the last assertion is unacceptable. 	this explanation may merely involve pointing out the rule 
which has been violated or it may be necessary to demonstrate that given the last assertion it is not possible to find a solution which is consistent with the data and which does not violate a physical rule.  to reach this conclusion it is necessary to produce a l l possible solutions to the problem and hence this f a c i l i t y needs access to the algorithm  build  which can perform an exhaustive search of the problem space.  the reader is referred to  for further discussion of these f a c i l i t i e s and for an extensive system's protocol. 
	1. 	the extended help facility 
　　　in order to implement both the extended help and the fsr f a c i l i t i e s we defined a fl  formal language  which describes the major steps in the algorithm  including the topics which we wish the student to discuss . thus in this formulation  giving the student help consists of executing the algorithm  build  in a special mode which creates a trace: the trace is then returned to the help process which in turn calls a further algorithm that converts the fl statements into reasonable nl  natural language . the fl to nl conversion algorithm is discussed by hendley. figure 1 gives a protocol for the help f a c i l i t y showing the basic help and the subsidiary queries which can be answered by the system: figure 1 shows the fl statements which correspond to these various traces. in this system the fl statements have been embedded in the algorithm and these statements  together with appropriate values are appended to the trace when certain conditions are satisfied.  essentially a parameter indicates which  if any  of the traces is to be created.  
　　　if we now interpret figures 1 and 1 in terms of the more general schema given in section 1  we see that here we have three processes. p1 corresponds to a process which determines the group's valency  p1 determines the group's interaction and p1 determines the selection of the group. thus dialogue  a  of figure 1 corresponds to the 'result' of p i   the 'result' of p1 and the consequent decision made by p1. dialogue  b  shows in more detail how p1 calculates i t s result: similarly  dialogue  c  gives a more detailed explanation for the result of p1. finally  dialogue  d  provides more details about how p1 reached i t s result  this process makes use of the results from p1 and p1 and 'globally' available information . these dialogues also bring out two further points which were not mentioned in our i n i t i a l discussion in section 1. f i r s t l y   the dialogues show how the system is able to cope with decision making  i . e . how it handles conditional statements. we see in these protocols that the conditional statement is presented as a fact  the relevant variable values are given as a series of facts followed by the deduction.  for example  see dialogues  b  and  c  of figure 1.  secondly  these same dialogues show that we are dealing with two types of facts  namely equations and particular values of variables. so far we have only allowed the student to i n i t i a t e more detailed discussion 

specialized systems-1: sleeman 1 

a  
*help please 
parses to: help  
the valency of this group is 1 or 1 and the interaction of this group is 1. 
so the list of possible groups is  c h 1  . 
b  
input your option .-valency 
if the length of the chain is 1 then the valency of this group is 1 
otherwise the valency of this group is 1 or 1. 
the molecule so far is   c h 1    . 
so the length of the chain is not 1. 
so the valency of this group is 1 or 1. 
c  
input your option:interaction 
if the interaction of the last group is 1 
then the interaction of this group is unknown otherwise the interaction of this group is the splitting of the last group - the interaction of the previous group. 
the interaction of the last group is not 1. 
and the splitting of the last group is 1. 
and the interaction of the previous group is 1. so the interaction of this group is 1. 
d  
input your option:selection 
the remaining molecular formula is c 1 h 1. so the list of possible groups is  c h 1   1 h   c h 1   c h 1   c 1   1  . 
   the list of remaining spectra is  1   1   . so the list of possible groups is  c h 1   c h 1   c 1    1   . 
the valency of this group is 1 or 1. so the list of possible groups is  c h 1   c h 1   c 1   1  . 
the interaction of this group is 1. 
so the list of possible groups is  c h 1  . 
input your option:continue 
figure 1  
 a system p r o t o c o l showing the extended help f a c i l i t y . 
 the s t u d e n t ' s responses are underlined  
a  
f v tg  = 1 v 1 f l tg  = 1 
	t 	pg 	= 	  c h 1   
b  
f 	if length mod=1 then v tg  	= 	1 else v tg  	1 	v 1 
	f 	mol =   c h 1   
	t 	length mol  # 1 
	t 	v tg  	= 1 v 1 
c  
f if l lg  = 1 then i tg  =u else l tg  =s lg -l pgl 
f 	l   l g   # 1 f 	sllg  = 1 
	f 	i pg  = 1 
	t 	l tg  = 1 
d  
	f 	rmfr =  c 1 h 1  
	t 	pg =   c h 1   c h 1   c 1   1   1 h   c h 1    
	f 	rspc =   1   1   
	t 	pg =   c h 1   c h 1   c 1   1   
	f 	v tg  = 1 v 1 
	t 	pg -    c h 1   c h 1   c 1   1   
	f 	ittg  = 1 
	t 	pg =   c h 1   
figure 1 
formal language statements  produced by the build a l g o r i t h m in response to the various requests f o r help in figure 1. 
a  corresponds to a request f o r basic help 
b  to a d i s c u s s i o n of the group's valency 
c  to a d i s c u s s i o n of the group's i n t e r a c t i o n 
and 
d  to a s e l e c t i o n of a group. 

s p e c i a l i z e d s y s t e n s - 1 : sleeman 

about deductions and variable values   i . e . it is 	if we look again at the dialogues given in figure 1 not possible for a student to ask for an explana-	we see that: 
tion of an equation . 
                                                         argument  a  is essentially factl  fact1 and d. 1. following the student's reasoning argument  b  is essentially d  factl and fact1. argument  c  is d and fact1   i . e . factl is 
	so far three sections of the algorithm have 	omitted . 
been considered in this way: the s p l i t t i n g of a argument  d  is essentially an incorrect form peak  the selection of a group and the j u s t i - of factl  fact1 and a consistent  and hence fication of an assertion   i . e . a solution to a sub- incorrect deduction  d'. 

problem  . these three tasks were selected because they were considered to be sufficiently different from each other  but to have similarities with 
other tasks which exist in the domain. however  only one of these tasks  the s p l i t t i n g of a peak  is discussed here. 
 a  the s p l i t t i n g of this group is greater or equal to the interaction of the last group. the interaction of the last group equals 1 therefore the s p l i t t i n g of this group is greater than or equal to 1. 
 b  the s p l i t t i n g of this group is greater or equal to 1 because the s p l i t t i n g of t h i s group is greater or equal to the i n t e r action of the last qroup and because the interaction of the last group is equal to 1. 
 c  the s p l i t t i n g of this group is greater or equal to 1 because the interaction of the last group equals 1. 
 d  the s p l i t t i n g of this group is 1 because the s p l i t t i n g of this group is equal to the interaction of the last group and the interaction of the last group is equal to 1. 
figure 1 
gives protocols for a student reasoning about peak splitting 
1 fsr = spl: discussing the splitting of a peak 
     in figure 1  we see protocols of students' reasoning about the s p l i t t i n g of a peak. these protocols were collected by modifying our original system so that the student was asked to type in an explanation for the value he had given for the s p l i t t i n g before the system told him whether or not his assertion was correct. these responses were then analysed 'manually' and we subsequently designed and implemented the fsr mode which comments on such explanations. in this mode the algorithm would return the following trace: 
	f 	s tg   = i  lg  
	f 	l lg  	= n 
	t 	s tg   = n 
that is the trace contains: 
 i  a basic equation which holds for the problem-domain  factl. 
 ii  a value for a particular variable  fact1.   i i i   a deduction  d. 
　　　for the moment  we have implemented a comparison algorithm for each of the tasks which can be considered by the fsr f a c i l i t y . the comparison algorithm for this task should obviously accept 
'inverted' arguments such as dialogue  b  of fig.1.  in our present system the 'standardisation' of the order of the fl statements is performed by the nl to fl conversion algorithm  . on the other hand  the comparison algorithm should point out the inaccuracies of information given in arguments such as  d  and possibly the incompleteness of arguments such as  c . the comparison algorithm for this task makes the following 'tests' on the student's trace: 
factl 	 i  checks that this argument includes the s p l i t t i n g of this group  
 ii  if necessary inverts the fact so that st  tg  is the 'subject' eg. f l lg   = s tg  is transformed to f sttg   = illg . 
  i i i   if i   l g   is not mentioned in the  transformed  factl  then the system checks whether the item which is mentioned can be transformed into i t .  note  given this domain the area of peak  the number of hydrogens on a group and the interaction of a group are numerically equal.   iv  checks the relationship is  = . 
fact1  this may be omitted: whether the complete argument is correct or incorrect this omission is pointed out to the user.  
 i  checks to see whether l lg   or i t s equivalent  is present  
 ii  checks that a 	numerical value is given  
  i i i   checks the numerical value against that given in the trace. 
deduction 
 i  checks that the s p l i t t i n g of this group  sttg  is the 'subject' of the conclusion. 
 ii  checks the correct relationship  in this case  = is given. 
  i i i   checks that a numerical value is given. 
 iv  checks the numerical value against that given in the trace. 
　　　the protocol given in figure 1 illustrates some of the features of the comparison algorithm discussed above. dialogue  a  merely illustrates the a b i l i t y of the nl to fl interface to cope with arguments where the deduction precedes the facts. in dialogue  b  the system transforms factl into standard format and further checks that the area of the last group is related to the interaction of the last group: f i n a l l y the system points out that 

s p e c i a i i z e d 	s y s t e m s - 1 : sleeman 
1 

the value deduced for the s p l i t t i n g is inconsistent with the value given earlier. dialogue  c  i l l u s trates that the comparison algorithm rejects arguments which do not contain the  basic  factl. having some simple c r i t e r i a for rejecting completely irrelevant arguments is obviously very helpful as it saves a great deal of unnecessary analysis. on the other hand  one might argue with considerable j u s t i fication that the comparison algorithm should accept the argument fact1 and deduction. we shall discuss in section 1 how this comparison algorithm could be 
made more powerful and more general purpose. 
     the reader w i l l have noticed in figure 1 that after the student has typed his arguments the system responds by typing a 'paraphrase' and asks the user whether it is acceptable. this 'paraphrase' is the nl equivalent of the fl statements which the system has extracted from the student's response.  in fact  the fl to nl algorithm used here is the same as that used by the help f a c i l i t y .   
the reason for presenting the student with the  paraphrase' is that in the case of his input being mishandled by the system  this feature allows the student to prevent the analysis of an erroneous argument. 	secondly  it was f e l t that the 'paraphrase' 	might help the student restate arguments which were mishandled by the system  and thirdly it was a very useful diagnostic during the debugging phase. 
1 natural language to formal language conversion algorithm 
     at an early stage  we realized that it was not feasible for students to express their arguments in a fl as this was l i k e l y to interfere appreciably with their problem solving and distort their explanations. hence it was decided that some form of nl interface was necessary. it was clear that keyword matching techniques would be inadequate for analysing students' arguments  but we were able to classify the topics encountered in these arguments as a series of semantic entities. essentially this situation resembles that encountered in the sophie system  and so we also implemented a fuzzy semantically driven parser. the grammar which our parser uses is the fl for the section of the algorithm which we expect the student to discuss. nevertheless  the parser can accept sentences which are both irrelevant and which contain inappropriate relationships/values  eg. see dia logue  c  of figure 1 . similarly  this parser would accept the sentence: 
the interaction of the last group is ch1. 
     comments on a student's arguments are made by routines which have more specialised knowledge of the domain  namely the comparison algorithms. for example  given the above sentence this comparison algorithm would point out that a numerical value is expected.  the nl-fl programs used in this system are discussed in  and w i l l be discussed more f u l l y in a separate paper.  
	1. 	possible enhancements to the current system 
　　　we shall discuss three enhancements: the f i r s t applies to the extended help f a c i l i t y and the others to the fsr f a c i l i t y . f i r s t l y   there are s t i l l many questions which a student may wish to ask about the algorithm which the system is unable to answer. the system could further use the traces which are already produced to answer questions such as: 
why was the ch1 group eliminated  
the answer to this question could be based upon the 
fact which occurred in the trace immediately before this group was eliminated from the l i s t of possible groups  see figure 1 d  . 	and so in this case the system might respond: 
because the interaction of the group being considered is 1. 
further  using the facts in the trace it would be possible to answer questions such as: 
what is the interaction of the ch1 group  
analagous questions about the last or previous groups could be answered by accessing the relevant trace. 
　　　secondly  the system could profitably be enhanced to t e l l the user whether or not his argument is consistent with an aspect of the assertion he has given.  in the case of the fsr f a c i l i t y discussed in section 1 . 1   the system would compare the values for the s p l i t t i n g of the peak given in the student's assertion and in his subsequent explanation.  there are five cases for consideration: 
 i  correct assertion and correct explanation  
 ii  correct assertion but incorrect explanation  
  i i i   incorrect assertion and correct  and hence incompatible  explanation  
 iv  incorrect assertion and compatible explanation  
 v  incorrect assertion and a further incorrect  but incompatible  explanation. 
　　　the third enhancement concerns the-implementation of a more general purpose comparison algorithm. it was pointed out in section 1 that these particular tasks had been chosen for discussion because it was f e l t that they were f a i r l y different from each other and yet representative of a number of other tasks which form part of the overall  build algorithm. in section 1 you w i l l see that we categorize the three statements which form the trace for the task discussed as: 
 i  the basic equation which holds for the problem domain  
 ii  the value for particular variable s . 
  i i i   the deduction of a value of a variable using  i  and   i i   . 
　　　the algorithms for determining the valency and the interaction of a group are analogous to that for determining the s p l i t t i n g of a peak as can be seen from the system protocol in figure 1 and from traces given in figures 1 b  and 1 c . thus there is a strong incentive to produce a more general 

specialized systems-1: sleeman 

 a  please input your stmts 
:the splitting of this group is greater than or equal 
to 1 because the splitting of this group is greater 
than or equal to the interaction of the last group 
and because the interaction of the last group is 1 
//the 'meaning'extracted from the student's argument system. indeed  we propose implementing a subsystem to monitor the student's performance as he attempts to deduce the value of the variable. the system w i l l comment when it thinks the student has introduced a circular argument or a t o t a l l y i r r e l e vant equation  or fact . on the other hand  when the splitting of this group is greater than or equal asked the system should be able to give advice 
to the interaction of the last group. 
and the interaction of the last group is  1  . so the splitting of this group is greater than or equal to   1   . 
is this what you intended:yes 
we are considering: 
 the splitting of this group is greater than or equal to the interaction of the last group. this stage is fine 
we are considering: 
 the interaction of the last group is   1   . this stage is correct 
we are now considering: 
so the splitting of this group is greater than or equal to   1   . 
good your arg. is absolutely correct 
 b  please input your stmts 
:the area of the last group is less than or equal to 
the splitting of this group and as the area of the 
last group is 1 then the splitting of this group is greater than or equal to 1 
//the'meaning'extracted from the student's argument the area of the last group is less than or equal to the splitting of this group. 
and the area of the last group is  1  . 
so the splitting of this group is greater than or equal to  1 . 
isl this what you intended:yes 
we are considering: about possible paths 	which the student has not ex-
plored. 	it seems f a i r l y clear that such a system w i l l be able to replicate the type of dialogue shown 
in figure 1. 	indeed  such a system should be more 
powerful as it has the potential to generate a l l possible solution-paths as opposed to the tracebased system which has access to the subset given in the trace s . further  we propose using this 
sub-system as a component of the enhanced fsr mode. 
1. some thoughts about the design of a further system 
　　　a problem which merits further attention is that of producing a single data structure for rep-
resenting algorithms which can be both executed and used to give an explanation of the algorithm. the conditional statements in the fl are very analogous to conditional statements in some programming lan-
guages  including bcpl  see richards  the p r o gramming language used to implement the c u r r e n t system . thus in response to the question about the valency of the group the system produced the fl statements shown in figure 1 b . an inspection of 
the relevant part of the bcpl code which determines the valency of groups  shows that this algorithm is indeed very analogous to these fl statements. if such a unified representation were available f o r 
both execution and discussion then the student would be able  at least in principle  to ask the system 
for an explanation of any task which the algorithm 
can perform and similarly  the system could also ask the student to discuss any part of the algorithm. the splitting of this group is greater than or equal  as opposed to the current situation when we must 
to the area of the last group 	decide in advance that certain aspects of the algo-
unexpected term: you gave the area of the last group - rithm may be discussed and include appropriate fl i expected the interaction of the last group 
ihereis a transformation and so your arg. may be acceptable 
this stage is fine 
we are now considering: 
 the area of the last group is   1   . this stage is correct 
we are now considering: 
so the splitting of this group is greater than or equal to  1  
i expected a numerical value in this expression 
consistent with your earlier value of 1 statements in the algorithm.  
　　　for the moment  l e t us assume that the algorithm is represented in a unified data structure  very 
probably a lisp-like structure. secondly  we argue that this data-structure needs modifying to include relevancy tags in order to be usable with the help 
and fsr modes: and thirdly that the system w i l l need an index to relate discussable topics to processes.  given this extended data-structure it is clear that an interpreter w i l l be needed in order to execute the algorithm.  in discussing the extended help f a c i l i t y earlier  we noted that the  c  please input your stmts 
:the valency of this group is 1 and so the possible 
groups are ch1 ch1 cho oh 
//the 'meaning' extracted from the student's argument the valency of this group is   1   . 
so the list of possible groups is   c h 1   c h 1   c ho    o h     . 
is this what you intended:yes 
basic fact omitted-form of fact expected: 	figure 1 	 see opp.  
shows two systems dialogues w i t h the 
fsr-spl mode. the s t u d e n t ' s responses are again underlined and the s y s t e m p r i n t s a 'paraphrase' of what the student has typed i n . the splitting of this group is greater than or equal to the interaction of the last group. 
	specialized 	systems - 1 : sleeman 
1 

i n i t i a l help gave the student a summary of the three processes involved and that as a result of subsidiary questions the student was presented with more details about the processes. this can be conceptualized as a particular data-element in a process having the highest relevance and that further discussion of a process reveals statements with the next level of relevance and so on. similarly  when the fsr mode attempts to follow the student's argument it w i l l have access to a data-base of 'highly relevant* equations and variables. if this i n i t i a l search is unsuccessful  then the search w i l l be continued with further equations and variables which are judged to be the next most relevant  hopefully this choice w i l l be guided by the type of mis-match recorded in the earlier search as well as by the relevance tags in the data-structure . i d e a l l y   such a f a c i l i t y would be able to: 
 i  comment on solutions which contain irrelevant and unnecessary steps  the comparison algorithm proposed in section 1 w i l l be able to do this to a limited extent . 
 ii  cope with arguments at various levels of detail   i . e . a 'plan' at the 'top' level or a more detailed 'plan' or a mixture of levels  . 
  i i i   cope with changes of attention. 
 iv  decide whether or not the student is discussing the appropriate topic. 
further  the current system is unable to answer questions such as: 
　　　　　　what is the valency of carbon  despite the fact that the system has this knowledge. considering these various points it would seem that any future system should have the following databases : 
 i  global information  such as the valency of atoms and groups . 
 ii  the algorithms  to be represented in the 
	 unified' 	format . 
  i i i   problem dependent information i.e. traces which correspond to each stage of the problem's solution. 
	1. 	footnote 
readers who are familiar with sri's computer 
based consultant project  w i l l have noted that both projects have similar objectives. namely  to provide a supportive problem solving environment: in particular to provide advice when the user is unable to solve the next stage of a problem and to analyse the user's response in detail when he has made an error. the heart of sri's consultant is sacerdoti's plan generator  which represents a plan as a procedural net  and uses semantic knowledge about the user's problem to expand the net as necessary. despite the very different representations used for algorithms in the two systems they provide analogous f a c i l i t i e s in similar ways.  for example  the plan expansion of sri' s system is paralleled by the relevancy levels in the system outlined above.  however  to date the sri group has not reported work where their system comments directly on a student's explanation of an action. but if such a f a c i l i t y were to be attempted  a possible approach would be the analogue of the one discussed in this paper; namely the comparison of two procedural nets  one produced by the system and the other extracted from the student's explanation. 
  a more detailed comparison between the two systems w i l l be included in a subsequent paper which reports progress on the system outlined in the last section.  
　　　finally  there are two crucial issues which have to be thoroughly investigated with both these systems; namely the level of support which the systems provide to their users  and secondly the range of algorithms which can be 'discussed' using these systems. 
acknowledgements 
　　　this work was started whilst i was associated with professor r f simmons' research group in austin  texas  and was partly supported by grant number nsf 1x. the f a c i l i t i e s afforded by the cbl project's modular one system enabled me to continue this work. in particular i gratefully acknowledge the use of list processing library routines implemented in bcpl by j a self and a j cole. further  i am very grateful to austin tate  edinburgh  for discussions about the planning aspects of this work and to r j hendley who programmed the natural language handling routines. 
