 	new tasks. 

this paper describes a versatile machine 
vision system that can recognize a variety of complex industrial parts based on the previously learned models of them. it proposes a model guided approach for recognition in which models of objects direct recognition process by suggesting the features to be examined next and their predicted locations. for the system to be readily applied to new tasks  it can automatically generate the models of objects while a human operator showing example parts and teaching important features of them interactively on displays. the system has 
been applied to various sets of parts of small industrial gasoline engines and the result was 
satisfactory. 
introduction 
     a machine vision for simple objects has been studied by many people and is already performing a variety of simple tasks in laboratory settings  1 1 . to apply these systems for real industrial uses of such as assembly and inspection  a machine vision system that can recognize complex real objects should be developed. 
　　　recognition of real industrial parts is a new field. ejiri et al. proposed a vision system which could be used to classify simple industrial parts a . olsztyn et al. made a good experimental system which located studs on hubs and stud holes in wheels and mounted wheels onto automobile hubs  1 . although it demonstrated the feasibility and usefulness of the machine vision for an industrial application  the system was restricted to the specific task and extensive reprogramming was necessary to perform other tasks. recently  as a 
　　　related project  chien et al. are studying on automatic inspection of hybrid circuits 1 . 
     to give a machine vision the versatility to perform a variety of tasks  the vision system should be incorporated with abilities of: 
　　　1. effective method for extracting useful information from scene data for complex industrial parts with heavy noise. 
　　　1. flexibility of the system chat can easily be adapted to perform new tasks. 
     this paper describes a versatile machine vision system that can recognize a variety of complex industrial parts based on the previously learned models of them. we use a model guided approach for recognition in which models of objects direct the recognition process by suggesting which features to examine next and their predicted locations. these models can be automatically generated by the system with aids of a human operator showing example parts and teaching important features of them on displays in an interactive way so that the system can be readily applied to input pictures and model guided approach 

　　　fig. 1 shows examples of industrial parts used in our experiment. the task of the system is to recognize or classify each object in a scene when machine parts are carried on a belt conveyor. images are taken from a nearly vertical direction by a t.v. camera and digitized into 1 bits of gray level. there are two sampling modes; one for sampling a quarter region of the t.v. frame in a high resolution and the other for sampling the entire frame in a low resolution. in both modes  a 1 digitized picture la sent to and stored in a buffer memory. in this paper 
we assume that each part in a scene is isolated and not occluded by other objects. this assumption   however  does not restrict the system's performance since parts on a conveyor belt are usually isolated when they are seen from the vertical direction. even when there were overlapping objects in a scene  the vision part could tell their location and the manipulator could crack and isolate them. objects are not modified in any way to simplify the task of recognition algorithm  and are very noisy with dirts  grease and highlights. examples of digitized images and thier differentiated images are shown in figs. 1 and 1. in the figures i t will be noted that each industrial part has a few stable states and each face of it has different pattern from the other ones. since we also want to know in which stable states each industrial part is  we call each face of the part as an object. 
     most previous works on pattern recognition employed a serial approach of preprocessing  feature extraction and then recognition. this approach is  however  difficult to apply for industrial parts since it is difficult to extract complete features at the stage of feature extraction because of complexity of structures of objects and heavy noise caused by dirts  grease and highlights. we use the model guided approach in which models of objects guide the recognition procedure. a model is a description on the structure of each object and directs the procedure to search and identify a particular object in a scene. it proposes which features to examine next and their predicted locations. this makes the task of feature extraction easy since it is much easier to verify the existence of the predicted features rather than finding them without any knowledge. these models are given for each stable state of the industrial parts and a collection of models represent the system's knowledge on the objects included in the system's repertoire. 
1      an outline of the recognition process is as follows. the system first extracts the most reliable or easy-to-extract information such as size and shape of the outline of an object in a 
scene to get candidate models for the input object. based on the first stage information  an analyzer examines differences between the input object and the models and proposes the moat promising one in a heuristic way to direct the recognition process. the selected model then comes in control of recognition process and suggests 
which features to examine next and their assumed locations as long as the observed information agrees with the expected one. when they contradict the predicted one  which means the proposed model was a false one   the other promising model is selected by the analyzer based on the infor-
mation collected up to now. 
     next we consider the problem: how much and what kind of information should be given to the models since it determines the efficiency of the recognition process. let us see some examples in fig. 1. size or shape of the outline of the object 1 is enough to distinguish it from the other objects. the outline information is not enough  however  for the object 1 and the line a is necessary to distinguish it from the object 1. when objects as shown in fig. 1 are added to the system's repertoire  then a still other feature such as the hole b should be used to distinguish the object 1 from the objects 1 and 1. as we can see f/om the above example  complete descriptions of each object are not necessary and a few important features are enough to discriminate it from the other objects. therefore we give the 
models just enough information to distinguish each object from the other objects  in the order of more distinguishing features to more details. although the models thus organized makes the recognition process efficient  they should be modified so as to give enough description to distinguish each model from the other models when a new object is included in the system's repertoire. 
     the generation or modification of models should be done easily so that the system can be readily applied to new tasks without extensive reptogramming. in our system  it is done automatically by the system while a human operator is showing example objects and teaching important features of them on displays with a cursor in an interactive way. described below is a general strategy for learning a new object  where a model of the currently learning object and models of previously learned objects are called a new model and previous models respectively. since the first features described in models are always the easyto-extract ones such as size and shape of the outline  they are extracted first from the example object and stored in the new model when the example object is shown by the operator. then a difference analyzer examines differences between the new model and the previous models and determines similar models. display routines then show model structures and images of the example object and the similar ones  therefore it is easy for the human operator to tell which features are the most useful to distinguish the example from the similar ones. he can teach it by specifying a suitable feature extractor and disignating their locations on the displayed image. after the instructed features are extracted and the models are updated  the difference analyzer decides the similar models based on the updated models and the operator instructs more details until the 
example object is sufficiently discriminated from the previous models. 
     the idea of teaching the machine interactively in itself is not a new one and was proposed by tennebaum et al. recently for developing strategies to find a specified object in an office scene 1 . the major difference of our learning system from theirs is that ours always tries to recognize the example object and displays similar objects at each time the operator instructs new features as described above. this allows the following advantages : 
1  the operator can tell the distinguishing features of the example object easily since they can be found only by comparison with the previously learned objects. 
1  he can notice when sufficient features have been instructed  thus the models are given just enough information. 
system description 
preprocessing and first stage processing 
     for both of learning and recognition  the preprocessing and the first stage processing are performed to get coarse information on each object in a scene. the preprocessor first inputs a scene data in low resolution and detects outlines of objects to locate them in the scene. since the precise outline is not necessary to locate each object in the scene  a simple procedure is used to find them for speeding up the processing. as the background is assumed to be darker than objects  those points having gray level greater than a certain threshold are considered to be object points. therefore  a histogram of gray levels of the entire picture points is first computed to determine the threshold as shown in fig. 1. in the figure  it is decided as the gray level having the first deep valley after the highest peak. when the threshold is determined  the picture data is scanned till an point having gray level greater than the threshold is found. after checking if it is a 
     noise point  the preprocessor traces along the outline of the object in a clock wise direction seeing the object on the right. when the outlines of a l l objects in the scene have been found  the first stage processor is called and each object is separately analyzed. 
     it first inputs the picture data of the narrower region containing a certain object in a high resolution to obtain the finer outline of i t . the procedure is similar to the one used in the preprocessing except that the histograms of local data containing a portion of the outline instead of the entire data is used to determine the threshold in this case. the reason of using the local histogram is to detect the outline precisely  adapting the threshold dynamically to variances of intensities of the background and the object 1 . the sequence of applying local 
windows is shown in fig. 1. the local window of the size of 1 points is first set surrounding the starting point of the outline obtained at the preprocessing. after computing the intensity histogram of this region  a new threshold is determined in the similar way as the preprocessing. 
1 then it searches the point having gray level 
greater than the threshold and traces along the outline in the local window. when i t touches the current window wall  it sets a new local window* computes a new threshold and continues to track along the outline using the newly computed threshold. fig-1 shows the outline obtained from the object 1 of fig. 1. 

the model m consists of a set of models m1  
m  ... corresponding to each object class 1.  1  .... we utilize a tree structure for description of a model mi which has a set of ordered component nodes c1. c1. associated with each component ci is a feature type  ftype   a score  score   a parameter list  plist  and an attribute list 
 alist . we use several kind of features such as outline  hole  line and texture for description of objects and ftype specifies which type of features is used to extract the component c . each model has a corresponding example object ei. which is stored in a disk. values of plist and alist are those extracted from the example objects. 
     plist designates location of a component in the r-1 coordinate system whose origin being the center of gravity of an object e＼. plist of hole components  for example  has the r-1 coordinate of center of the hole  see fig. 1 . a line com-

similar i f they have the same ftype  similar plist and similar alist. score indicates reliability of extracting the component since some components can be reliably extracted while some others are difficult. it can take a discrete value of 1 to 1. outline component is always given score s as i t is considered to be the most reliable feature. 

associated with c is subtracted from their score table which has been initially set to a certain score. then the difference analyzer checks the score table and sends the similar models having the score larger than ts to display routines. 
     our system is provided with a storage type vector display  sdisp  and a reflesh type color 

1 

display rdisp  a* graphic oucput devices. the dlplay routines then show model structures of mn .. on sdisp  and their images  e and on rdisp. fig. 1  a   b  showsnthem feature is obtained. since the outline information is not sufficient to discriminate m from n . ...  one should instruct more details. seeing the displays  it is easy for the operator to tell which features are the most important to distinguish e from e . .... in the figure  he will notice that the role a is the most distinguishing one. he can teach this idea to the machine in the following steps while answering the machine's inquiry as shown in fig. 1  c - e . 
1  the system first asks feature type and  in this case  the operator types in hole. 1  i t then inquires which object  to know from which object the specified feature should be extracted since it is sometimes necessary to add 
more description to the similar models. in this case* the operator types in new as he wants to extract the hole a of e . 
1  the system then calls a hole finder to detect holes of e and displays them on sdisp  fig. d . then the operator instructs the hole a by designating it with a cursor. 
1  then he inputs 1 for score since the hole a seems to be reliably extracted although other holes may vary according to the lighting condition and noise. 
     the hole finder uses similar algorithm to the first stage processor and the attributes of size and thinness ratio are stored in alist of hole component. if the hole's shape is round  its radius is also added to alist. then the similar 
models are determined in the same procedure as described before. fig.  f  shows images of e and es1.. if the operator is not satisfied with the result  he can cancell the last instruction and can teach another feature. in this case  he regards that the last instruction was satisfactory since the number of the similar models is decreased from three to one  and thus instructs more complex features. 
     in fig.   f     we observe that the lines with the arrow  -   are distinguishing e form e . thus the operator responds line to the system's inquiry  g   and then the system calls the gradient operator and displays the differentiated image of them  h . since he wants to instruct the lines of e   he inputs new to which object  1 . then the 1lfferentlated image of en is displayed on sdisp in a higher resolution and the operator teaches those lines by designating a few representative points of them with the cursor. then the line finder detects the lines as follows. it first sets the region as shown in fig. 1 where l is the predetermined length  and then searches an optimum curve in the region. the dynamic programming method proposed by montanarl lo  is used to detect the optimum line. although this method gives good results to detect lines in a noisy scene  it has disadvantages of consuming too 
plist. alist of the line component is the average gradient value. then the difference analyzer again searches the similar models. when no similar models exist  i t means that just enough information has been given to the models. fig. 1  1  shows an outline  a hole and lines of e   superimposed on the digitized image and table 1 gives the generated model. 
recognition 

     a block diagram of the recognition process is shown in fig. 1. in the figure  the preprocessor  the f i r s t stage processor and the difference analyzer use the same program modules as the learning process. first of a l l   the preprocessor locates each object in a scene and sends one of them to the first stage processor which extracts the outline information of the input object. the difference analyzer then examines differences between the models and the observed information and selects candidate models mc1 mc1  .... these candidate models are selected in the same way as the similar models in the learning process although a different term is used. those information such as the score and the matched angle computed by the difference analyzer are retained in the score table and the matched angle table respectively. 
     next the model proposer selects the most promising model mp among the candidate models mc   mc1  ....to direct the recognition process in the following steps. 
1  examine the score table and select the models having the best score among the candidate models. 1  check score of the next node of them and select the models having the largest value if step 1 selects multiple models. 
1  check ftype of them  and select the models having the computationally cheaper feature in the order of hole  line and texture. 
a  if there still exist more than one model for mp  then go to step 1 and check score and ftype of the lower nodes of them. 
     then the selected model mp directs the recognition process in the following sequence: 1  take next node of mp to propose which feature to examine next and its assumed location. ftype of the node specifies the feature type to be used and plist predicts the location of the proposed feature by checking the matched angle of mp in the matched angle table. 
1  extract the proposed feature by corresponding feature extractor. 
1  compare the observed parameters and properties to the values of plist and alist of the current 
node of mp. 
1a  if they are similar  in a sence defined at the previous section   updates the matched angle table based on the measured parameter  then go to step 1. if not  go to step 1. 
                                                         now and the model proposer selects another promismuch computation time and memory space. in our 
                                                         ing model mp. then go to step 1. case  however  the search space is restricted to 
the narrow region and thus the computation time 
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　the above loop ends when some model mp reaches and memory space can be considerably saved. when the terminal node  that is  nothing to do is left the lines have been found  the line finder approxiin the model. since the threshold st i s initially mates the curve into several line segments and set to a strict value to make the tree search fast  stores r-1 coordinates of their end points in it sometimes happens that no candidate models 
1 1  the difference analyzer determines the candidate models based on the information collected up to exist even if any model have not reached the terminal node. then the threshold st is lowered until some model reaches the terminal node. 
     fig. 1 shows an example of experimental results where  a  is an differentiated image of an input object and  b  shows an outline  a hole and a line that have been used to recognize the input object. it was successfully recognized as a top face of the industrial part no. 1  see object 1 of fig. 1   and its position and orientation were also measured precisely. 
conclusions 

     this paper has described a versatile machine vision system that can recognize a variety of complex industrial parts based on the previously learned models of them. the system has been implemented in a mini-computer dec pdp-1/e with a 1 kw core memory and an additional buffer memory  1 k bytes  which is used for the data structure of the digitized image and the models. 
     to test the proposed system  it has been applied to various sets of parts of small industrial gasoline engines each of which consisting of twenty to thirty parts. models of them could be successfully generated even by the persons who arc not familiar with computer programming. then these learned models have been used to recognize randomly placed industrial parts and most of them have been correctly recognized. recognition time and instruction time for an object were about 1 seconds and 1 minutes respectively. 
     computing time for recognition is too long for practical applications because no attempt is 
made to save i t   and we consider some programming effort could decrease it considerably. color information is not used in the current system since most industrial parts used in the experiment are gray. color information however  wiil be useful for the first stage classification when objects have different color. the most restrictive assumption in the present system is assumption that each object in a scene is isolated  and a future study is necessary to recognize the occluded objects. 
