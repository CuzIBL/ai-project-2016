 
during the conceptual analysis  the coexistence of several kinds of ambiguities tends to complicate the task of every kind of disambiguation module we tackle this problem here for two types of ambiguities anaphors and the pp attachment we show what kind of problems every conceptual analyser has to face we present  then  our solution to resolve these problems we study the efficiency of the proposed solution and its adequacy regarding dependencies between both ambiguities 
1 introduction 
the problems of anaphors and pps are largely tackled in the nlp domain and still under study for pps see eg  frazier and fodor 1  hobbs and bear  1. wilks  1  shubert  1   and for anaphora see among others  carter  1  sidner  1  however  one less addressed issue is that of managing the treatment of both ambiguities in the same conceptual analysis we tackle this issue here by proposing an algorithm to co-ordinate the treatment of these two ambiguities we have already given preliminary ideas about this problem in  azzam  1j presenting an algorithm for this coordination we present here more details about the proposed algorithm  moreover we study its efficiency considering the frequency of each kind of ambiguity and their apparition order in the sentence we study also the adequacy of the algorithm considering how deeply these two phenomena depend on each other 
the section 1 expands the motivations to tackle the co ordination of anaphors and pp attachment treatment the section 1 gives a brief description of the conceptual analyser clam  cobalt linguistic analyser module  we have implemented clam in the context of the cobalt project  lre 1    azzam  1  the examples are extracted from its corpus in the financial domain  reuters news  the section 1 presents the proposed algorithm the section 1 evaluates the efficiency of the proposed algorithm and the section 1 its adequacy considering the dependencies existing between both ambiguities 
1 what's the problem  
let's take an example given by wilks whose study about pp attachment rules is one of the closest to ours in its using essentially semantic information  wilks 1  first  he proposes first  for the pp attachment  a rule called the  first trail attachment rule   before presenting a more elaborated rule   one of the main reasons he gives to explain the failure of this rule the problem of pronouns  this rule would of course have to be modified for many special factors  eg pronouns  . for example  in  she wanted the dress on the shelf' this rule normally attaches  dress  to  shelf  but it fails for  she wanted it on the shelf1 our claim is that the correct application of pp attachment rules must not depend on anaphors occurring before in the text  i e  anaphors should not constitute an obstacle to such rules 
more generally  if a sentence contains several kinds of ambiguities and if each kind of ambiguity is treated locally by its own module  e g anaphora module  pp attachment module   then the problem of the interaction between several linguistic phenomena should be managed first 
for what concerns anaphors and pps  how do anaphora resolution and pp attachment procedure interact together  having in mind that such procedures operate on conceptual structures  css   we list three main problems that lead to a  stuck situation  there are 

       1 a pp that should be attached to an anaphor antecedent can not be attached to the css until the anaphor has been resolved  i e until its antecedent is represented in the css 
       1  	conversely  	an 	anaphor 	whose antecedent is a part of an ambiguous pp can not be resolved until the pp is attached to css  1 e an anaphor can not refer to an entity that is not in the 
css in  if a pp contains anaphors  the attachment procedure can not perform the attachment  because attachment rules need information about the semantic content of the pp  object  lessened with unresolved anaphors 
1 the conceptual analyser 
unlike the way of solving ambiguities  anaphora or 
pp  that can differ from one system to another  the method we propose for managing interactions between the two disambiguation modules does not depend on our conceptual analyser strategy the problem arises in every conceptual analysis and have the same consequences on the css  desenbed in i  u and hi  
our conceptual analyser strategy is described briefly to show how the invoked problem arises dunng the conceptual analysis the strategy of the semantic module consists in a continuous step bystep  translation  of the original natural language sentences to css represented in nkrl  narrative knowledge representation language   zarn  1  
this  translauon  refers constantly to the results of the syntactic analysis  syntactic tree  it is a progressive substituuon of the nl terms located in the syntactic tree with concepts and templates of the conceptual representation language  tnggenng rules' are a sort of production rules  that are evoked by words of the sentence and allow the activation of nkrl templates the antecedent part of a tnggenng rule is a  syntacuco-semantic filter  expressed under the form of a tree-like structure  to be unified with the syntactic tree if the unification succeeds  the consequent parts are used 1 generate well-formed templates the values caught in the syntactic tree by the filter vanables will fill the roles of css in case of pp attachment ambiguities  the values associated to  object  pps are not caught because of their  uncertain' position in the syntactic trees this causes empty or unfilled roles in css if the caught values are anaphors  they are considered as unbound vanables in the css and result in unfilled roles in the css 
1 pp attachment module 
the strategy adopted to treat pp ambiguities in clam is charactensed by the following items 
　it operates on a single incomplete syntactic tree instead of several trees each representing a possible attachment  incomplete  means that attachments are not performed the syntactic representation is a kind of  forest  containing the main syntactic tree and the unattached sub-trees  each representing an ambiguous pp 
- each preposition has its own set of attachment rules that express syntactic  semantic and pragmatic restnctions on both the pp  object  and css roles in order to attach the pp to css for example  one attachment rule associated to the preposition 
 from  is  stated in a simplified procedural form   if the object o f   f r o m   pp is a location  then fill the empty role location in the css  
- the disambiguation procedure fills the empty roles in the css using the attachment rules and it uses set of heuristic rules to reduce the number of possible readings 
1 anaphora module 
the anaphora module is characterized by the following items  see also  carter  1  
- it uses a set of resolution rules based on the focusing approach  see  sidner  1  - each land of anaphor has its own set of resolution rules these rules are applied to the conceptual representation their outputs are candidate antecedents 
- the antecedents are validated using a filter based on syntactic restrictions   e g   the c-command rule  reinhart  1  and semanuc restrictions associated with css 
1 interaction between ambiguities 
the procedure we propose is based on successive calls to the anaphora module and the pp attachment module  see figure 1  of course the modules work exclusively on the semantic representation  css  of the sentences the output of each call is a set of css representing the intermediate results exchanged between each call and on which both modules 
	azzam 	1 

operate in turn. each module tnes to fill the empty roles due to anaphors or unattached pps 

figure 1 
these are the successive steps of the algorithm 
       1  if the sentence contains anaphora to be resolved  the anaphora module is applied 
       1  if there are unattached prepositions  the pp attachment procedure is applied 
       1  if some anaphora are left unresolved  the anaphora module is applied again for the remaining anaphora 
       1  if there are still unattached pps  the attachment procedure is applied again only on these prepositions 
       1  repeat  1  and  1   until all pps and anaphora are treated 
as shown in figure 1  each module may have several sets of css as an output they represent several disjunctive readings and are due to ambiguities that can not be ruled out by the anaphora resolunon or attachment modules for example  if the attachment rule  see  infra. section 1  associated to the preposition  from  applies on several css  which means that there are several  empty location roles  that can be filled by the object of  from    the vanous possibilities will represent disjunctive readings 
the successive calls that are necessary to process all the unattached pps and anaphors of a given sentence are referred to as a cycle the number of calls in the cycle is the cycle length 
the algonthm of interaction for the resolution of ambiguities is based on two main principles pnnciple 1 
the algorithm is applied on the text sentence by sentence  so that the ambiguioes of the previous sentences have already been considered  they may be resolved or not  principle 1 
the procedure skips the resolution of a given anaphor when this anaphor is preceded by an unattached preposition this is because the unattached preposition may result in an empty role as a parameter in the anaphor resolution rules  which might be a problem the anaphor resolution is postponed until a further phase of anaphora resolution the same applies for pps that are preceded by unresolved anaphora this explains why each module is called several times 
the algonthm faces the three problematic situations presented in section 1  i  u  and ill  it performs as follows 
　　　　a  when an anaphor occurs before a given preposition in the sentence  its resolution does not depend on where the preposition is to be attached  except for cataphors that are quite rare  moreover  the attachment of the pp may depend on the resolution of the anaphor in this case  the anaphora module can be applied before the attachment procedure the example 1  second sentence  below shows how the resolution of the pronouns  it  must be performed first  the  with  pp being attached later 
1 general partners said it sold 1 1 shares of gencorpon apnl 1 at 1 dlrs a share in an open market transaction on the new york stock. exchange jl said the sale leaves it with 
1 gencorp common shares 
b  when the anaphor occurs after one or 
several unattached prepositions  it can be an intrasentenual anaphor  i e referring to an entity in the same sentence   then its resolution may depend on one of the previous prepositional phrases  as it is 

shown in example 1  second sentence   where  its  cannot be resolved until the pp  by matsushita  is attached  so that  matsushita  fills a role in the css  in this case  the resolution of the anaphor is postponed till the next call to the anaphora module according to principle 1 stated above 
1 matsushita electric industrial co said it signed an agreement with the city of peking to establish a joint venture to produce color television picture tubes the venture  which would be the japanese electronics company s first in china  would be equally owned by matsushita and us. chinese partners and would require an investment of about $1 million 
       c  when the anaphor is included in a pp  part cular case of b   the situation is different again pp attachment rules need semantic information about the  object   head  of the pp  see example 1    when it is a pronoun  no semantic informanon is available  so that the attachment rules can not be applied the pronouns have to be resolved first  so as to determine what semantic class they refer to   the pp attachment procedure can then be applied when a sequence contains more than two pps containing anaphors as objects  the length of a cycle is more than 1 concerning example 1  second 
sentence  a cycle of length 1 is required  as follows 
1 miura kogyo co   yamamoto kozai co and ondo kosakusho co  all of hiroshima  japan  each will own 1% o ♀ the joint venture the remaining 1% will be held kx mazda  throuek its mazda north america inc subsidiary 
- the pronoun  its  can not be resolved by the anaphora resolution module because it is preceded by the unattached  by  pp. the resolution of  its  is skipped 
- the pp attachment procedure is then called to determine the attachment of  by   but not that of  through  since the object of the  through  pp comprises the pronoun  its   case c  - the anaphora module is called again to resolve the anaphoric pronoun  its   which is now possible since all the previous pps   by   have been attached and no other anaphors occur before 
- finally  the pp attachment procedure has to be called again for  through  
let's notice that postponing the resoludon for  its  is justified in this example because the antecedent of this pronoun is the object of  by  pp that has not yet been attached to the css this is not the case for the pronoun  its   to its partner  in example 1  since its resolution does not depend on the attachment of the  in  pp however all the 
sentences must be treated by the same algorithm  i e in the same way  see also section 1 about equity  
1 taiwan s president enterprises group has agreed to sell its 1 percent stake in premierfoods corpjfl us partner   a company official said m an interview 
1 algorithm efficiency 
why is the anaphora module applied before the attachment procedure  and not in the reverse order    let's call the algorithm with the reversed order ra 
 reversed algorithm   and the proposed one na  normal algorithm  as a matter of fact  the main reason for our choice between ra and na can be expressed in terms of efficiency efficiency is measured in thus case with the length of the cycle this means that the most efficient algorithm is that which processes most of the sentences with the shortest cycle length our choice is then based on statistical data performed on cobalt corpuses in fact  a higher number of news can be processed with a snorter cycle using na rather than ra 
to illustrate this efficiency  let's first consider an example for which na is more advantageous than ra example 1  which comprises a sequence of more than two pps containing anaphors anaph 
pp prep anaph  pp  prep anaph  the processing of this sentence requires a cycle of 1 calls  while it requires 1 calls with the ra let's consider this sentence in detail with na 
1 general partners  a texas partnership that recently ended us bid to take over gencorp ic  told the securities and exchange commission  h sold neail  of lis 1 percent remaining stake m. lllfi company 
       1  anaphora that  its  it  its can be resolved  because no unattached pps occur before  
       1  pp the   o f pp can be attached because its object is resolved  its    in can not be attached because its object is anaphoric   the company  is a definite noun phrase that refers to  gencorp   
	azzam 	1 

       1  anaphor 	 the 	company' 	can be resolved because the of pp before has been attached  
in the previous call 
       1  pp the  in  pp can be attached since its object is now known 

if we consider the same sentence with ra  1 e   starting with a call to the pp module  vt will be processed in a cycle of length 1 in fact  the ra involves an additional call to the pp. the first call that is useless since neither the of pp nor the in pp can be processed  their objects are both anaphors  the same remark applies for example 1 for the two in pps figure 1 summarises each cycle length for the five examples presented in this section. 
to conclude on efficiency  it seems that na architecture is more suitable for sentences where anaphors precede pps at the beginning of the sentence  like in examples 1  1  1   whereas ra is more adapted for sentences where pps precede anaphors at the beginning of the sentence  examples 1 and 1  for the financial news we are dealing with in cobalt  in a corpus of 1 news  there are 1 news having anaphors as the first ambiguity to process while the 1 others have pp as the first ambiguity 
an alternative solution would be to use a procedure that starts either with pp attachment  ra  or anaphora resolution  na   depending on the first ambiguity of the sentence to be processed 
1 h o w much do pp and anaphora processing depend on each other 1 
one crucial issue has to be discussed in this paper  namely how much does pp attachment depend on anaphora resolution1 conversely  how much does anaphora resolution depend on pp attachment  we remind first the meaning of  dependency  
　　　　a  one anaphor depends on a pp  if the anaphor antecedent is contained in this pp   in this case the anaphor can not be  interpreted  if the pp is not attached to the css  see  example 1 for the pronoun  its   
　　　　b   one pp depends on an anaphor  if either the pp attachment position is this anaphor  see example 1 where with is attached to it    in this case the pp can not be attached if the anaphor is not resolved  i e   its antecedent is not present in the css   or the pp  object  is an anaphor   the semantic class of the pp  object  is unknown if the anaphor is not resolved  see examples 1 and 1  
we demonstrated how our algorithm manages these various situations now  what is the adequacy of this algorithm considering the kind of dependencies existing between these two phenomena  is it fair to process both phenomena equally  while one of them does not always depend on the other1 this may appear as a drawback for instance  in example 1  the algorithm attaches the preposition in   in an interview   only after the two pronouns  its  have been treated  even if the attachment of in does not depend on them however  we consider that postponing pp attachment or anaphora resolution  is not really a deficiency even if each module is called several times  there is no redundancy in the processing the algonthm should be considered as the splitting of both anaphora resolution and pp attachment procedures into several phases and not as the repetition of each procedure each anaphor or pp is processed only once  i e if it has already been resolved it will not be processed again 
we measured in a certain way  the dependency between the two phenomena our feeling was that  pp attachment can give better results without the anaphors being resolved than anaphora resolution without pps being attached  we studied three sets of corpuses. corresponding to financial sub-fields  respectively to the fields of  stake modification    joint venture  and both fields we calculated  see figure 1  the number of pps  of anaphors  of anaphors that depend on pps  according to the dependency  a above  and of pps that depend on anaphors  the dependency  b  above  the ratio of pps that depend on anaphors is very low comparing to that of anaphors mat depend on pps one of the main reasons is that pps are largely more frequent in corpuses than anaphors are 

1 conclusion 
instead of slowing down each other  the anaphors and pps treatment could be managed efficiently to produce a complete conceptual analysis the solution we propose is to exploit at each step all the results that can be provided by each component  taking into account the general dependencies between the two phenomena this is realised by considering only the results given by the two modules and by avoiding to introduce particular rules for particular cases inside each module the algorithm we proposed in this paper is independent of the approaches we used in both anaphora and attachment modules it concerns rather the way of managing the interaction between the two modules 
future work addresses rather the problems within each disambiguation module we are presently studying how to take into account another important problem that weakens our results that is 
' conjunct identification   see e g    agarwal and boggess  1  it concerns the identification of the appropriate conjuncts of the co-ordinate conjunctions in a sentence in example 1  the and in 'would be equally owned by matsushita and its chinese partners points to this problem and suggests to take into account other properties between anaphors and pps as the  parallelism  induced by the form of pps and anaphors 
references 
 agarwaj and bogges  1  agarwal  r and boggess l   a simple but useful approach to conjunct identification in proceedings of the 1rd annual meeting of acl  pages 1  1 
 azzam  	1  azzam  s 	clam cobalt 
conceptual analyser technical report dehv1 pans cril ingenierie 1 
 azzam  1  azzam  s how to co-ordinate anaphora resolution and pp attachment in a conceptual analyser1* in proceedings of the 1th european chapter of acl pages 1  1 
 carter  1  carter  d interpreting anaphors in natural language texts chichester ellis horwood 1 
 frazier and fodor  1  frazier  l and fodor  j 
the sausage machjne a new two stage parsing model  cognition  1  1 
 hobbs and bear 1  hobbs  j r and bear j two principles of parse reference in proceeaings of the 1th international conference on computational linguistics - coling/1  1  karigren  h   ed helsinki umveisity press  1 
 reinhart  1  remhart t anaphora and semantic interpretation london croom helm  1 
 schubert 1  schubert  l on parsing p