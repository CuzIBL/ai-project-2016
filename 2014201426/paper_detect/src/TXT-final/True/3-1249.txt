
there are numerous applications where we need to ensure that multiple moving objects are sufficiently far apart. furthermore  in many moving object domains  there is positional indeterminacy - we are not 1% sure exactly when a given moving object will be at a given location.  yaman et al.  1  provided a logic of motion but did not provide algorithms to ensure that moving objects are kept sufficiently far apart. in this paper  we extend their logic to include a  far  predicate. we develop the checkfar algorithm that checks if any given two objects will always be sufficiently far apart at during a time interval. we have run a set of experiments showing that our checkfar algorithm scales very well.
1 introduction
all of us fly in airplanes. we know that flight plans are almost never 1% accurate. we all have a vested interest in ensuring that planes we fly in are sufficiently far from other planes that are flying in the sky at the same time. the goal of this paper is to develop a hybrid logical and constraint based framework to ensure that moving objects with positional uncertainty  where will the object be at a given time  remain sufficiently far apart.
¡¡our work builds on  yaman et al.  1  who developed the concept of a  go-theory . a go-theory is a finite set of  go-atoms.  a go-atom can express statements such as 'plane p1 leaves location l1 some time between 1 and 1 and arrives at location l1 at some time between 1 and 1 and during the flight the speed of the plane is between 1 and 1 . they provide algorithms to check if a given plane is within a given region at a given time point. they also introduce ground atoms of the form near o1 o1 d t1 t1  - intuitively  this means that at all times during the interval t1 t1  o1 and o1 are guaranteed to be within d units of each other.
¡¡in this paper  we introduce a predicate symbol called far o1 o1 d t1 t1  - intuitively  this means that at all times during the interval t1 t1  o1 and o1 are guaranteed to be at least d units apart.
¡¡one may think that near   and far   are complements of each other. unfortunately  this is not true. yaman et. al. yaman et al.  1  define interpretations and a notion of satisfaction. for near o1 o1 d t1 t1  atom to be a logical consequence of a go-theory g  for every interpretation i that satisfies g  it must be the case that for all times t1 ¡Ü t ¡Ü t1  the distance between the locations of o1 and o1 at time t is less than or equal to d. thus   near   o1 o1 d t1 t1  is a logical consequence of g if for every interpretation i which satisfies g there exists a time t1 ¡Ü t ¡Ü t1  the distance between the locations of o1 and o1 at time t  according to the interpretation i  is greater than d. in contrast  for far o1 o1 d t1 t1  to be entailed by s  it must be the case that for every interpretation i which satisfies g and for every time point t1 ¡Ü t ¡Ü t1  the distance between the locations of o1 and o1 at time t is greater than d. thus  entailment of far   atoms is not the same as entailment of either near   atoms or  near   literals.
¡¡in this paper  we define the semantics of far   and develop an algorithm called checkfar to check entailment of ground far   atoms by a go-theory g. we have conducted extensive experiments on the computational feasibility of checkfar - our experiments show in a compelling way that in real world situations1  checkfar will work very well indeed. in our experiments we answered far queries in less than 1 seconds for go theories up to 1 atoms per object.
1 background on go-theories
we now provide a quick overview of go-theories from yaman et al.  1 . we assume the existence of several sets of constant symbols: r is the set of all real numbers  o is the set of names of objects  p = r ¡Á r is the set of all points in two-dimensional cartesian space. we assume the existence of three disjoint sets of variable symbols  vr  vo  and vp  ranging over r  o and p  respectively. a real term t is any member of r ¡Èvr. object terms and point terms are defined similarly. ground terms are defined in the usual way. we now define atoms as follows.
  if o1 o1 are object terms  and d t1 t1 are positive real terms  then near o1 o1 d t1 t1  is an atom. intuitively  this atom says that o1 o1 are within distance d of each other during the time interval  t1 t1 .
  if o is an object term  p1 p1 are point terms  and t1 t1 are positive real terms  then in o p1 p1 t1 t1  is an atom. intuitively  this atom says that object o is in the rectangle whose lower left  resp. upper right  corner is p1  resp. p1  at some point in the time interval  t1 t1 .
  if o is an object term  p1 p1 are point terms  and  are positive real terms  then go is an atom called a go atom. intuitively  this atom says that object o leaves point p1 at some time in  and arrives at point p1 during   traveling in a straight line with a minimum speed v  and maximum speed v+.
ground atoms are defined in the usual way. a go theory is a finite set of ground go-atoms. note that go-theories do not contain near   or in   atoms.
notation. if  then 
obj g  = o v  g  = v  v+ g  = v+ loc1 g  = p1   loc1 g  = p1  .if g is a go-theory and o is an object id  the restriction of g to o  denoted go is the set {g ¡Ê g | obj g  = o}. an interpretation is a continuous function i : o ¡Á r+ ¡ú p. intuitively  i o t  is o's location at time t.
definition 1 let g = go o p1 p1 t 1  t+1  t 1  t+1  v  v+  be a ground atom and i be an interpretation. i satisfies g w.r.t. a time interval t =  t1 t1  iff:
 and i o t1  = p1

   t ¡Ê  t1 t1   i o t  is on the line segment  p1 p1 
   t t1 ¡Ê  t1 t1   t   t1 implies dist i o t  p1    dist i o t1  p1   where dist is the function that computes the euclidean distance between two points.
  for all but finitely many times in  t1 t1   v = d |i o t | /dt is defined and v  g  ¡Ü v ¡Ü v+ g .
this intuitively says that i |= g w.r.t. a time interval t =  t1 t1  iff o starts moving at t1 and stops moving at t1 and furthermore  during  t1 t1   the object moves away from p1 towards p1 without either stopping or turning back or wandering away from the straight line connecting p1 and p1. we are now ready to define the full concept of satisfaction.
i satisfies a ground literal  denoted i |= a  in these cases:
1.  iff there exists an interval  t1 t1  such that i |= a w.r.t.  t1 t1 .
1. i |= near o1 o1 d t1 t1  iff dist i o1 t  i o1 t   ¡Ü d for all t1 ¡Ü t ¡Ü t1.
1. i |= in o p1 p1 t1 t1  iff there are numbers t ¡Ê
 t1 t1   x ¡Ê  p1x p1x  and y ¡Ê  p1y p1y  such that i o t  =  x y .
1. i |=  a iff i does not satisfy a.
the above definition can be extended in the obvious way to handle quantification - in this paper  we will only consider the ground case.
¡¡i satisfies  or is a model of  a set of ground atoms mt iff i satisfies every a ¡Ê mt. mt is consistent iff there is an interpretation i such that i |= mt. l is a logical consequence of mt  denoted mt |= l  iff every model of mt is also a model of l.
1 far   atoms
we are now ready to extend the logic in  yaman et al.  1  to include far   atoms. if o1 o1 are objects  and d t1 t1 are real terms  then far o1 o1 d t1 t1  is a far   atom.
definition 1  satisfaction of far   atoms  suppose f is a
ground far atom and i is an interpretation. i |= f iff for all t1 ¡Ü t ¡Ü t1  dist i o1 t  i o1 t     d.
we say a go theory g entails f iff whenever i |= g  it is also the case that i |= f. the far  -entailment problem is that of checking whether a given go-theory entails a ground far  -atom. the entailment of a negated near literal does not imply entailment of the associated far atom. similarly entailment of a negated far literal does not imply entailment of the associated near atom. however  the following results hold:
lemma 1 suppose g is a go theory and suppose far o1 o1 d t1 t1  and near o1 o1 d t1 t1  are ground. if g |= far o1 o1 d t1 t1   then
g |=  near o1 o1 d t1 t1 . if g |= near o1 o1 d t1 t1   then g |=  far o1 o1 d t1 t1 .
¡¡the following result tells us that checking for entailment of a ground far  -atom is co-np complete.
theorem 1 let g be a go theory and f = far o o1 d t1 t1  be a ground atom. checking if g |= f is conp-complete.
we will omit the proofs due to space constraints.
1 far algorithm
finding an algorithm to solve the far  -entailment problem is a complex task. our solution involves the following steps. first we partition a go-theory into clusters go of go-atoms about the same object o. next  for any given go-atom g  we define the temporal certainty interval which specifies a time interval when the object is guaranteed to be on the line segment  loc1 g  loc1 g  . third  we define the positional certainty interval that finds the smallest subsegment of the above line in which the vehicle is guaranteed to be at time t. both temporal and positional certainty intervals are defined w.r.t. a given ordering of go-atoms. our fourth step is to explain how to solve the far  -entailment problem when a go-theory has only two go-atoms  one for each object  and t1 = t1 in the far   atom whose entailment we are trying to check. our fifth step generalizes this to the case when t1 ¡Ü t1. finally  we show how to remove the assumption that g contains only two go-atoms.
¡¡due to space constraints  we will proceed under the assumption that g is non-collinear as defined below. extending our algorithm to remove this assumption is straightforward 1our implementations do not require this assumption.
definition 1 a go theory g is non-collinear iff there are no go-atoms g g1 ¡Ê g such that obj g  = obj g1  and the following two conditions both hold:
  the intersection of line segments  loc1 g  loc1 g   and  loc1 g1  loc1 g1   is a line segment  p q  such that p is visited before q in both g and g1 and  and.
1 temporal and positional certainty intervals
in this section  we define the notions of temporal and positional uncertainty.
definition 1  c g o v   let g be a go theory and o be an object id. let v be any total ordering on go. the set c g o v  of linear constraints associated with g o v is defined as follows:

- 
¡¡¡¡- v  ¡Á eg  sg  ¡Ü dist p1 p1  ¡Ü v+ ¡Á eg  sg    for every g g1 ¡Ê go such that g v g1: eg ¡Ü sg1.
sg and eg are variables associated with an atom g which intuitively denote the start time and end time of the movement described by g. when go has only one atom g we will use c g  as a short hand notation.
example 1 let g = go o  1   1  1 1 1  1  and g1 = go o  1   1  1 1 1 . suppose g = {g g1} and g v g1. then c g o v  contains the following constraints:
  1 ¡Ü sg ¡Ü 1  1 ¡Ü eg ¡Ü 1  
  1 ¡Á  eg   sg  ¡Ü 1 ¡Ü 1 ¡Á  eg   sg .
  1 ¡Ü sg1 ¡Ü 1  1 ¡Ü eg1 ¡Ü 1     1 ¡Á  eg1   sg1  ¡Ü 1 ¡Ü 1 ¡Á  eg   sg  
  eg ¡Ü sg1.
we now use linear programming methods to define the temporal certainty interval of a go atom.
definition 1  tci g o v g   let g be a go theory  o be an object  and v be a total order on go such that c g o v  has a solution. the temporalcertaintyinterval  tci g o v g   of an atom g ¡Ê go w.r.t. v is the time interval  t  t+  where
  t  is the result of solving the linear program:  maximize sg subject to c g o v   
  t+ is the result of solving the linear program:  minimize eg subject to c g o v  .
tci g o v g  is undefined if t    t+.
when go has only one atom g we will tci g  as a short hand notation. intuitively  tci g o v g  is the interval when we know for sure that object o is within the line specified in go-atom g.
example 1 let g and g1 be the two go atoms in example 1. tci g  is  1 . if g = {g g1} and g v g1  then tci g o v g1  =  1 .
conversely  given a time point t and a ground go-atom g  we wish to know the potential segment on the line connecting loc1 g  and loc1 g  where the object associated with g could possibly be. to find this  we need another linear program.
definition 1  pci g o v g t   let g be a go theory  o be an object  and v be a total order on atoms of go such that c g o v  has a solution. let g be an atom in go such that tci g o v g  is defined and t be any time point in tci g o v g . the positional certainty interval  pci g o v g t   of atom g at time t w.r.t. ordering v is defined as follows:
  let c g t  be the set of constraints:
- 
- 
where d = dist loc1 g  loc1 g  . note that this is a linear program when g is fixed because many terms above  such as d  v  g  v+ g  are constants .
 be the result of solving the linear program minimize dg t subject to c g o v  ¡È c g t .
  let dmaxg t be obtained by maximizing the objective function in the above linear program  instead of minimizing .
  let p  g o v g t  be the point exactly units away from loc1 g  on the line connecting loc1 g  loc1 g  and likewise  let p+ g o v g t  be the point exactly units away from loc1 g  on the same line.
the positional certainty interval pci g o v g t  is the line segment from p  g o v g t  to p+ g o v g t .
when go has only one atom g we use the shorter notation pci g t .
lemma 1 let g be a go atom such that tci g  is defined  i be an interpretation  and suppose t ¡Ê tci g . if i |= g  then i o t  is on the line segment pci g t .
1 binary go-theories about a single time point
a binary go-theory is one which contains two go-atoms g = {g g1} where obj g  = o obj g1  = o1. consider a ground far   query far o o1 t1 t1 d  where t1 = t1. we need to check if the distance between o and o1 is guaranteed to be greater than d at time t. the following lemma presents necessary and sufficient conditions for entailment of such queries under the above assumptions.
lemma 1 let g = {g g1} be a go-theory such that obj g  = o and obj g1  = o1 and let f = far o o1 d t t  be a ground atom. g |= f iff
  t ¡Ê tci g  and t ¡Ê tci g1  and
  the minimum distance between line segments pci g t  and pci g1 t  is greater than d.
example 1 let g = go o  1   1  1 1  1  and g1 = go o1  1   1  1 1 1  be two atoms. let.
tci g  =  1  and tci g1  =  1  both include the

figure 1: the polygon on the left is the space envelope of g1 during  1  and the volume on the right is 1-neigbourhood of g during time interval  1 . g and g1 are as defined in examples 1 and 1.
time point 1. at time 1  o is somewhere on the line segment pci g 1  =   1   1 1   and object o' is on the line segment pci g1  =   1 1   1 1  . the minimum distance between these two lines is 1 which is greater than 1 so g |= f.
¡¡consider the atom near o o1 d t t  atom instead of far o o1 d t t  then the second bullet of lemma 1 becomes:  the maximum distance between line segments pci g t  and pci g1 t  is less than or equal to d . this maximum distance is achieved at the end points of pci g t  and pci g1 t   e.g. p  g t  and p+ g1 t . however the minimum distance between pci g t  and pci g1 t  is not necessarily at the end points hence its computation is more complex.
1 binary go-theories with temporal intervals
the complexity of computing far queries gets magnified even more when we consider the case t1 ¡Ü t1. for the near atom this is easy because it is enough to check the distance at the end points of pci g t  and as shown in  yaman et al.  1  end points of pci g t  are piecewise linear functions over a time interval. this is not enough for the far atom. for this reason answering far queries over time intervals requires a different approach then the one in  yaman et al.  1 .
¡¡we first define the space envelope of a go-atom. intuitively  the space envelope of a go-atom g is the set of all  x y t -triples such that there exists a model i of g in which i obj g  t  =  x y . in other words  it defines where and when it is possible for object o to be.
definition 1 let g be a ground go-atom such that tci g  is defined and let t =  t1 t1  be any time interval such that t   tci g . the space envelope  se g t  of g during interval t is { x y t  | t ¡Ê t and  x y  ¡Ê pci g t }.
theorem 1 se g t  is a convex set.
example 1 let 
1  be a go atom. the space envelope of g1 over time interval  1   is shown in figure 1 on the left side. it is easy to see that se g1  1   is convex.
we now define the set of points that are closer than a given distance d to any possible location of an object at a given time.
definition 1  d-neighbourhood  let g be a ground go-atom such that tci g  is defined. let d be a real number and let t =  t1 t1  be a time interval such that t   tci g . the d-neighbourhood of g during t  denoted nbr g t d  = { x y t  | t1 ¡Ü t ¡Ü t1 and  x y  ¡Ê nearpts g t d } where nearpts g t d  = { x y  |   x1 y1  ¡Ê pci g t  and dist  x y   x1   ¡Ü d}.
intuitively nearpts g t d  is the set of all points p such that all points on the line segment pci g t  which are d units or less in distance from p at time t. similarly nbr g t d  is the set of all points  x y t  such that it is possible for obj g  to be within d units of  x y  at some time t in interval t.
theorem 1  i  nbr g t d  is a convex set.  ii  if d = 1  then nbr g t d  = se g t .
example 1 let g = go o  1   1  1 1  1  be a go atom. the 1-neighborhood of g over time interval  1  is shown on the far right hand side of figure 1. it is easy to see that it is a convex set.
the following theorem states necessary and sufficient conditions under which {g g1} |= f.
theorem 1 let f = far o o1 d t1 t1  and g = {g g1} be a go theory where obj g  = o and obj g1  = o1. g |= f iff
   t1 t1    tci g  and  t1 t1    tci g1 
  nbr g  t1 t1  d  ¡É se g1  t1 t1   =  
thus  an algorithm to solve the far  -entailment problem only needs to check both these conditions.  mantyla  1  provides polynomial algorithms to check for the intersection of two convex sets - these can be used directly to check the second condition above.
example 1 let g = go o  1   1  1 1 1  1  and g1 = go o1  1   1  1 1 1  be two go atoms. let.
then tci g 	=	 1  and tci g1 	=	 1 .
both include the time interval  1 . figure 1 shows nbr g  1  1  and se g1  1  . it is apparent from the figure that the two do not intersect: hence g |= f.
1 arbitrary go-theories with temporal intervals
we now remove the restriction that g is a binary go-theory. doing so introduces several complications. for any single o  there may be many possible total orderings associated with go. furthermore  for some theories we can predict the possible locations of an object not only in the certainty interval of an atom  but also during a time interval that spans over several atoms. the following lemma gives the necessary and sufficient conditions when this can be done.
lemma 1 let g be a go-theory  o be an object  and v be a total order on go such that c g o v  has a solution. suppose g1 v g1 ... v gn are the atoms of go. tci g o v  gi  ¡È tci g o v gi+1 ... ¡È tci g o v gj  is a single time interval iff for every 1 ¡Ü i ¡Ü k   j ¡Ü n with tci g o v gk  =  tk  tk+  the following are true
  tk+ = tk +1
  loc1 gk  = loc1 gk+1 
definition 1 let g be a go-theory  o be an object  and v be a total order on go such that c g o v  has a solution. suppose s   go. s is temporally relevant to time interval
 t1 t1  is iff
  the atoms in s satisfy the conditions in lemma 1 and
  there are atoms g  g' in s such that t1 ¡Ê tci g o v
 g  and t1 ¡Ê tci g o v g1 
example 1 let g1 = go o  1   1  1 1 1  1  and g1 = go o  1   1  1 1 1  be go atoms. if g = {g1 g1} and g1 v g1 then
c g o v  has a solution.	moreover tci g o v g1  =
 1   tci g o v g1  =  1  and tci g o v  g1  ¡È tci g o v g1  is a single interval. suppose t =  1  then {g1 g1} is temporally relevant to t.
we now generalize definitions 1 and 1 to accommodate nonbinary go-theories.
definition 1  se g o v t   let g be a go-theory  o be an object  and v be a total order on go such that c g o v  has a solution. if t =  t1 t1  is a time interval  then
se g o v t  is the set of all points  x y t  such that
  t ¡Ê t and t ¡Ê tci g o v g  for some g ¡Ê go 
   x y  is on pci g o v g t .
se g o v t  is not defined if there is a time point t ¡Ê t such that for all g ¡Ê go  t ¡Ê1 tci g v g .
¡¡note that se g o v t  is not necessarily convex when t spans over multiple go atoms. we can generalize nbr to nbr g o v t d  in a similar manner - these are omitted due to space constraints. nbr g v t d  also may not be convex. we now state a theorem describing the conditions under which a go theory g entails a far   atom.
theorem 1 suppose g is a go-theory and o o1 are objects. the ground atom f = far o o1 d t1 t1  is a logical consequence of g iff for every pair of total orders v and v1 on go and go1 such that c g o v  and c g o1 v1  are solvable:
   s   go such that s is temporally relevant to  t1 t1 
   s1   go1 such that s1 is temporally relevant to  t1 t1 
  nbr g o v  t1 t1  d  ¡É se g o1 v1  t1 t1   =  .
example 1 let g1 and g1 be go atoms in example 1 and
. let g =
{g1 g1 g1} and f = far o o1 1 . if g1 v g1 and v1=   then figure 1 shows nbr g o v  1  1  and se g o1 v1  1  . the figure also shows that the sets intersect - hence g 1|= f.
¡¡as are not always convex  computing their intersection is tricky. we partition t into subintervals t1 t1 ... tn  we call this a convex partition of t  such that for all i   n  the end point of ti is the end point of the temporal certainty interval of some g ¡Ê go ¡È go1. it is easy to verify that n ¡Ü |go| + |go1|. for each ti  nbr g o v ti d  and se g o1 v ti  are convex and we leverage this in the checkfar algorithm below.

figure 1: the space envelope of o1 with respect to g and 1-neighbourhood of o w.r.t. g and v during time interval
 1 . g and v are as defined in example 1
algorithm checkfar g v v1 f 
suppose f = far o o1 d t1 t1 ;
if has no solution then return true
let so   go such that so is temporally relevant to  t1 
o1
let so1   g such that so1 is temporally relevant to  t1  if no such so or so1 exists then return false let t1 t1 ...tn be the convex partition of  t1 t1  for each i   n do if 
then return false
end for return true
theorem 1 suppose g is a go-theory and f = far o o1 d t1 t1  is a ground atom. then: f is entailed by g iff for every total order v and v1 on go and go1  the algorithm checkfar g v v1 f  returns  true .
1 implementation
we have implemented the checkfar algorithm in matlab. our test results show that checkfar g v v1 f  runs in linear time. note that a single run of checkfar does not check if g |= f. in fact checkfar g v v1 f  should be executed for every possible v v1 pair that produce a solvable set of constraints. although in theory this number is exponential which leads to conp-hardness  in practice we expect this number to be bounded by a manageable constant k. in general individual movements can have some uncertainty however the order in which they are going to be accomplished is usually well known. figure 1 shows the running time of 1 far queries as we vary the number of atoms per object when k = 1. each data point is an average of 1 runs. for these experiments we created go theories g with at most 1 total orderings and all atoms are in a rectangle of size 1 by 1. we queried those theories using three query templates q1 = far o o1 t1 t1   q1 = far o o1 t1 t1  and where  t1 t1  is a random time interval with length 1. the reader will notice that as the distance increases  the time to compute the query decreases. in the case of q1 which is trivially false it takes almost no time to return the answer. queries q1 and q1 take at most 1 seconds for go theories with 1 atoms per object.

figure 1: time to compute three far queries q1  q1 and q1 when k = 1.
1 related work
to our knowledge  there is no work on a logical foundation for checking separation between moving objects in the presence of temporal and spatial uncertainty. however  almost all models of moving entities like cars  airplanes  ships  humans and animals are subject to uncertainty about where they are at a given point in time.
¡¡ gabelaia et al.  1; merz et al.  1; wolter and zakharyaschev  ; cohn et al.  1  study spatio-temporal logics where time is a discrete sequence rather than being continuous.  muller    describes a formal theory for reasoning about motion in a qualitative framework that supports complex motion classes. the work is purely symbolic.  shanahan  1  discusses the frame problem  when constructing a logic-based calculus for reasoning about the movement of objects in a real-valued co-ordinate system.  rajagopalan and kuipers  1  focuses on relative position and orientation of objects with existing methods for qualitative reasoning in a newtonian framework. the focus of these works is qualitative - in contrast our work is heavily continuous and rooted in a mix of geometry and logic rather in just logic alone. far   queries are not studied in any of these papers.
¡¡there is also some peripherally related work in computer graphics  lin and gottschalk  1  and in  moving object databases   erwig et al.  1  - they provide no model theory or algorithms for far   queries nor allow any uncertainty.
1 conclusions
the ability to query a large number of objects moving uncertainly in time and space so that separation constraints between objects are maintained is critical to many applications  e.g. air traffic control  shipping port lane management . in this paper  we have extended the  logic of motion  proposed by yaman et. al.  yaman et al.  1  via a far   predicate. we develop a model theory for far  -entailment. we show that the far  -entailment problem is conp-complete. we develop an efficient algorithm called checkfar that effectively checks if a given total ordering of atoms in a go-theory preserve separation constraints. to check whether two objects are guaranteed to be at least d units of distance away from each other during an interval of time  we must apply checkfar to different possible orderings of the atoms in the gotheory. in real-world applications such as air traffic control and a shipping port lane management we have built  we expect such orderings to be relatively small in number even if the number of objects is very large. the reason for this is that usually the flight plan for each airplane consists of a sequence of steps which only yields 1 ordering of the atoms per airplane  whereas our experiments have used 1 . our experiments show that checkfar performs very well in practice.
acknowledgements
this	work	was	supported	in	part	by	aro	grant
daad1  arl grants daad1 and daal1  the arl ctas on telecommunications and advanced decision architectures  nsf grants iis1 and iis1 and 1 and uc berkeley contract number sa1  subcontract from darpa's real program .
