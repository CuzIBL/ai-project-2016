
this paper presents a conceptual graph  cg  framework to the generation of referring expressions  gre . employing conceptual graphs as the underlying formalism allows a rigorous  semantically rich  approach to gre. a number of advantages over existing work are discussed. the new framework is also used to revisit existing complexity results in a fully rigorous way  showing that the expressive power of cgs does not increase the theoretical complexity of gre.
1 introduction
generation of referring expressions  gre  is a key task in natural language generation  reiter and dale 1 . essentially  gre models the human ability to verbally identify objects from amongst a set of distractors  as when we say 'the wooden bookcase'  'the cup on the table'  and so on  to single out the object in question. a gre program takes as input  1  a knowledge base  kb  of  usually atomic  facts concerning a set of domain objects  and  1  a designated domain object  called the target. the task is to find some combination of facts that singles out the target from amongst all the distractors in the domain. these facts should be true of the target and  if possible  false of all distractors  in which case we speak of a distinguishing description . once expressed into words  the description should ideally be 'natural'  i.e.  similar to human-generated descriptions   and effective  i.e.  the target should be easy to identify by a hearer . many of the main problems in gre are summarized in dale and reiter  1 .  see also dale and haddock 1 for gre involving relations; van deemter 1 and horacek 1 for reference to sets and for the use of negation and disjunction . here  we focus on logical and computational aspects of the problem  leaving empirical questions about naturalness and effectiveness  as well as questions about the choice of words  aside. we do not argue for one particular flavour of gre  but show how different flavours can be 'implemented' using cgs.
모recently  a graph-based framework was proposed  krahmer et al. 1   in which gre was formalised using labelled di-graphs. a two-place relation r between domain objects x and y was represented by an arc labelled r between nodes x and y; a one-placepredicatep true of x was represented by an looping arc  labelled p  from x to x itself. by encoding both the description and the kb in this same format  calling the first of these the description graph and the second the scene graph   these authors described the gre problem in graphbased terms using subgraph isomorphisms. their approach is elegant and has the advantage of a visual formalism for which efficient algorithms are available  but it has a number of drawbacks. most of them stem from the fact that their graphs are not part of an expressively rich overarching semantic framework that allows the kb to tap into existing ontologies  and to perform automatic inference. it is these shortcomings that we address  while maintaining all the other advantages of the approach of krahmer et al.
모conceptual graphs are a visual  logic-based knowledge representation  kr  formalism. they encode ontological  't box'  knowledge in a structure called support. the support consists of a number of taxonomies of the main concepts and relations used to describe the world. the world is described using a bipartite graph in which the two classes of the partition are the objects  and the relations respectively. the cg semantics translate information from the support in universally quantified formulae  e.g.  'all cups are vessels' ; information from the bipartite graph is translated into the existential closure of the conjunction of formulae associated to the nodes  see section 1 . a key element of cg is the logical notion of subsumption  as modelled by the notion of a projection   which will replace the graph-theoretical notion of a subgraph isomorphism used by krahmer et al.  1 . cgs have been used in computational linguistics before  e.g. nicolov et al. 1  but  to the best of our knowledge  never to gre.
1 conceptual graphs  cgs 
1 syntax
here we introduce the conceptual graph  cg  model and explain how it can be used to formalise the information in a domain  or 'scene'  such as figure 1. in section 1 we show how the resulting cg-based representations can be used by a gre algorithm that refers uniquely to objects in the scene.
모the cg model  sowa  1   is a logic-based kr formalism. conceptual graphs make a distinction between ontological  background  knowledge and factual knowledge. the ontological knowledge is represented in the support  which is encoded in hierarchies. the factual knowledge is represented by a labelled bipartite graph whose nodes are taken from the support. the two classes of partitions consist of concept nodes and relation nodes. essentially  a cg is composed of a support  the concept / relation hierarchies   an ordered bipartite graph and a labelling on this graph which allows connecting the graph nodes with the support.
모we consider here a simplified version of a support s =  tc tr i   where:  tc 뫞  is a finite partially ordered set of concepttypes;  tr 뫞  is a partially ordered set of relation types  with a specified arity; i is a set of individualmarkers.
모formally  chein and mugnier  1    a  simple  cg is a triple cg=  s g 뷂 :
  s is a support;
  g =  vc vr e  is an ordered bipartite graph ; v = vc 뫋vr is the node set of g  vc is a finite nonempty set of conceptnodes  vr is a finite set of relationnodes; e is the set of edges {vr vc} where vr 뫍 vr and vc 뫍 vc;
  뷂 : v 뫸 s is a labelling function; if v 뫍 vc then 뷂 v  =  typev refv  where typev 뫍 tc and refv 뫍 i 뫋 { }; if r 뫍 vr then 뷂 r  뫍 tr.
모for simplicity we denote a conceptual graph cg=  s g 뷂  by g  keeping support and labelling implicit. the order on 뷂 preserves the  pair-wise extended  order on tc  tr  and considers i elements mutually incomparable.
모consider the following kb described in figure 1. the cg scene graph description is given in figure 1.
bowl

bowlfloorcup
figure 1: a scene

figure 1: a cg-style scene graph
모in figure 1 the concept type hierarchy tc of the support is depicted on the left. the factual information provided by figure 1 is given by the labelled bipartite graph on the right. there are two kinds of nodes: rectangle nodes representing concepts  objects  and oval nodes representing relations between concepts. the former are called concept nodes and the second relation nodes. the labels ri and vi outside rectangles and ovals are only used for discussing the structure of the graph  they have no meaning. {v1 ... v1} are the concept nodes and {r1 ... r1} are the relation nodes. each edge of the graph links a relation node to a concept node. the edges incident to a specific relation node are ordered and this ordering is represented by a positive integer label attached to the edge. for example  the two edges incident to the relation node r1 are {r1 v1}  labelled 1 and {r1 v1}  labelled 1; we also say that v1 is neighbor 1 of r1 and v1 is neighbor 1 of r1.
모in the graphs of krahmer et al.  1   relations with more than two places are difficult to handle  but cgs can represent these naturally  because relation instances are reified. consider that x gives a car y to a person z  and a ring u to v. this is modelled by using two instances r1 and r1 of giving  each of which has a labelled arc to its three arguments.
모the label of a concept node  inside the rectangle  has two components: a concept type and either an individual marker or    the genericmarker. the concept node designates an entity of the type indicated by the first component. if the second component is    this entity is an arbitrary one; if it is an individual marker then the entity is a specific one. in figure 1 all concepts have generic markers and the nodes v1  v1 and v1 designate three  different  arbitrary objects of type cup  v1 designates an arbitrary object of type floor  etc. for a relation node  the label inside the oval is a relation type from tr. the arity of this relation type is equal to the number of vertices incident to the relation node r  denoted by deg r . the objects designated by its concept node neighbours are in the relation designated by the label. in figure 1 the relation node r1 asserts that the bowl designated by v1 is on the table designated by v1.
모overall the conceptual graph in figure 1 states that there is a floor on which there are a table  a cup and two bowls; on the table there is a a bowl and in this bowl there is a cup.
1 formal semantics of cgs
cgs are provided with a logical semantics via the function 붯  which associates to each cg a fol formula  sowa  1  . if s is a support  a constant is associated to each individual marker  a unary predicate to each concept type and a nary predicate to each n-ary relation type. we assume that the name for each constant or predicate is the same as the corresponding element of the support. the partial orders specified in s are translated in a set of formulae 붯 s  by the following rules: if t1 t1 뫍 tc such that t1 뫞 t1  then  x t1 x  뫸 t1 x   is added to 붯 s ; if t1 t1 뫍 tr  have arity k and t1 뫞 t1  then  x1 x1 ... xk t1 x1 x1 ... xk  뫸 t1 x1 x1 ... xk   is added to 붯 s .
모if cg=  s g 뷂  is a conceptual graph then a formula 붯 cg  is constructed as follows. to each concept vertex v 뫍 vc a term av and a formula 뷋 v  are associated: if 뷂 v  =  typev    then av = xv  a logical variable  and if 뷂 v  =  typev iv   then av = iv  a logical constant ; in both cases  뷋 v  = typev av . to each concept vertex r 뫍 vr  with 뷂 r  = typer and degg r  = k  the formula associated is 뷋 r  = typer ang1  r  ... angk r  . the existential closure of the conjunction of all formulas associated to the vertices of g is 붯 cg . that is  if vc    = {vi1 ... vip} is the set of all concept vertices having generic markers  then
붯 cg =  v1 ...vp 뫇v뫍vc뫋vr뷋 v  .
모if g is the graph in figure 1  then  using only one quantifier  붯 g  =  xv1xv1xv1xv1xv1xv1xv1xv1 cup xv1  뫇 bowl xv1 뫇table xv1 뫇cup xv1 뫇floor xv1 뫇bowl xv1 뫇 bowl xv1  뫇 cup xv1  뫇 isin xv1 xv1  뫇 ison xv1 xv1  뫇 ison xv1 xv1  뫇 ison xv1 xv1  뫇 ison xv1 xv1  뫇 ison xv1 xv1  뫇 ison xv1 xv1  뫇 isin xv1 xv1 .
모if  g 뷂g  and  h 뷂h  are two cgs  defined on the same support s  then g 뫟 h  g subsumes h  if there is a projection from g to h. a projection is a mapping 뷇 from the vertices set of g to the vertices set of h  which maps concept vertices of g into concept vertices of h  relation vertices of g into relation vertices of h  preserves adjacency  if the concept vertex is the ith neighbour of relation vertex then 뷇 v  is the ith neighbour of 뷇 r   and furthermore 뷂g x  뫟 뷂h 뷇 x   for each vertex x of g. a projection is a morphism between the corresponding bipartite graphs with the property that labels of images are decreased. informally g 뫟 h means that if h holds then g holds too. 붫 g h  denotes the set of all projections from g to h.
모for the gre problem the following definitions are needed to rigorously identify a certain type of a subgraph. if g =  is an ordered bipartite graph and  then the subgraphspannedby a in g is the graph  a g =  where ng a  is the neighbourset of a in g  that is the set of all concept vertices with at least one neighbour in a  and e is the set of edges of g connecting vertices from a to vertices from ng a . clearly  a g 뫟 g since the identity is a trivial projection from  a g to g.
1 cgs for generation of referring expressions
1 stating the problem
let us see how the gre problem can be stated in terms of cg. given a cg g  a concept node v1 in g  a cg h and a concept node w in h  we define that the pair  w h  refers to the pair  v1 g  if there is a projection 뷇 from h to g such that 뷇 w  = v1. furthermore   w h  uniquelyrefersto  v1 g  if  w h  refers to  v1 g  and there is no concept node v in g different from v1 such that  w h  refers to  v g . the gre problem may now be stated as follows: givenacg g anda conceptnode v1 in g findapair  w h  suchthat  w h  uniquelyrefersto v1 g .
모but  analogous to krahmer et al. 1   the gre problem means that we are interested in referring graphs 'part of' the scene graph. by the above definition  if  w h  uniquely refers to  v1 g   then there is a projection 뷇 from h to g such that 뷇 w  = v1. if 뷇 h  is the image of h  then 뷇 h  is a spanned subgraph of g namely   뷇 vrh  g  containing v1 such that there is no projection 뷇1 from 뷇 h  to g such that
. therefore it is possible to formulate gre using only the combinatorial structure cg g and the vertex v1.
모more precisely  any spanned subgraph containing v1  that is  ifthen v1 뫍 ng a   and if a =   then  is called a v1-referringsubgraphof
g. a v1-referring subgraph  a g is called v1-distinguishing if v1 is a fixed point of each projection 뷇 from  a g to g  that is 뷇 v1  = v1  뷇 뫍 붫  a g g . the gre problem is now:
instance: cg=  s g 뷂  a conceptual graph representation of the scene; v1 a concept vertex of g.
output: a   vr such that  a g is a v1distinguishing subgraph in cg  or the answer that thereisnov1-distinguishingsubgraphincg.
example. consider the scene described in figure1. a =   is not a solution for the gre instance  cg {v1}  since g1 =
 {v1}      can be projected to  {v1}      or  {v1}     .
however  a = {r1 r1} is a valid output since g1 =
 {r1 r1} g is a v1-distinguishing subgraph  note that the intensional description of the entity  cup  represented by v1 in g1  붯g1 v1 x  =  xv1 xv1 bowl xv1  뫇 table xv1  뫇 isin x xv1  뫇 ison xv1 xv1   has the intuitive meaning the cupinthebowlonthetable  which clearly individualizes this cup in the set of the three cups in the scene .
모note that if g1 =  a g is a v1-distinguishing subgraph in cg then if we denote by a the relation node set of the connected component of g1 containing v1  then  is a v1-distinguishing subgraph in cg too. for brevity  we consider only connected v1-distinguishing subgraphs. on the other hand  intuitively the existence of a v1-distinguishing subgraph is assured only if the cg description of the scene has no ambiguities.
theorem 1 let  cg {v1}  be a gre instance. if  a g is v1distinguishing then  is v1-distinguishing for each vrg such that .  proof omitted for reasons of space.  in particular  taking  we obtain:
corollary 1 there is a v1 distinguishing subgraph in g iff there is no projection 뷇 from g to g such that 뷇 v1 .
모a concept vertex v1 which does not have a v1distinguishing subgraph is called an undistinguishableconceptvertexin g. we say that a cg provides an well-defined scenerepresentation if it contains no undistinguishable vertices. testing if a given gre instance defines such an ambiguous description is  by the above corollary  decidable.
1 complexity results
some of the main complexity results in gre are presented in dale and reiter  1 . among other things  these authors argue that the problemof finding a uniquely referring description that contains the minimum number of properties  henceforth  a shortest description  is np-complete  although other versions of gre can be solved in polynomial or even linear time. as we have argued  cg allows a substantial generalisation of the gre problem. in what follows  we shall show that this generalisation does not affect the theoretical complexity of finding shortest descriptions.1
모let v1 뫍 vc be an arbitrary concept vertex. the set of concept vertices of g different from v1  in which v1 could be projected  is  by projection definition  contained in the set
distractors1 v1  = {w|w 뫍 vc   {v1} 뷂 v1  뫟 뷂 w }.
clearly  if distractors1 v1  =   then v1 is implicitly distinguished by its label  type + referent   that is  {v1}      is a v1-distinguishing subgraph.
모therefore we are interested in the existence of a v1-distinguishing subgraph for concept vertices v1 with
. in this case  if ng v1  =    clearly
there is no v1-distinguishing subgraph  the connected component containing the vertex v1 of any spanned subgraph of g is the isolated vertex v1 . hence we assume.
모a simple case considering all relation vertices unary. this means that g is a disjoint union of stars centered in each concept vertex. intuitively  this means that each object designated by a concept vertex in the scene represented by g is characterized by its label  type and reference  and by some other possible attributes  properties  and each r 뫍 vrg designates an unary relation. this is the classical framework of the gre problem  enhanced with the consideration of basic object properties  the types  and the existence of a hierarchy between attributes. even with these enhancements we will show that the gre problem complexity results remain similar. indeed  if ng v1  = {r1 ... rp} p 뫟 1   the properties of the concept designated by v1  then for each ri 뫍 ng v1  let: xi := {w|w 뫍 distractors1 v1  such that there is no r 뫍 ng w  with 뷂 ri  뫟 뷂 r }.
모in words  xi is the set of v1-distractors which will be removed if ri would be included as a single relation vertex of a v1-distinguishing subgraph  since there is no r 뫍 ng w  such that 뷂 ri  뫟 뷂 r  it follows that there is no projection 뷇 of the subgraph  ri g to g such that 뷇 v1  = w .
lemma 1 there is a v1-distinguishing subgraph in g iff:
.
 proof. if there is a v1-distinguishing subgraph  a g  then we can suppose that a   ng v1  = {r1 ... rp}  because we can suppose that  a g is connected . suppose that there is
. by the definition of the sets
xi it follows that for each ri 뫍 a there is such that. if we take
for each ri 뫍 a  then 뷇 is a projection of  a g to g with
  contradicting the hypothesis that  a g is a v1-distinguishing subgraph.
conversely  if   then taking
a = ng v1  = {r1 ... rp}  a g is a v1-distinguishing subgraph. indeed  if there is 뷇 a projection of  a g to g such that
  then for each ri 뫍 a the edge v1ri is projected in some edgesuch that 뷂 v1  뫟 뷂 w  and 뷂 ri  뫟
. this means that contradiction.
모to summarize  if all relation vertices have degree 1  deciding if a vertex v1 admits a v1-distinguishingsubgraph canbedoneinpolynomialtime. however  the above proof shows that  a g is a v1-distinguishing subgraph if and only if a   ng v1  and 뫋ri뫍axi = distractors1 v1 . therefore the problem of finding a v1-distinguishing subgraph with a minimum number of vertices  e.g.  dale and reiter 1  is reduced to the problem of finding a minimum cover of the set distractors1 v1  with elements from x1 ... xp  which is an np-hard problem.
모we now prove that the decision problem associated with minimum cover can be polynomially reduced to the problem of finding a concise distinguishing subgraph. let us consider the following two decision problems:
minimum cover
instance: o = {o1 ... on} a finite nonempty set; s =  s1 ... sp  a finite family of subsets of o; q a positive integer.
question:	are there si1 ... sit 뫍 s such that 뫋tj=1sij = o and t 뫞 q  
shortest description
instance:scg=  g s  a conceptual graph such that dg r  = 1  for each relation node r 뫍 vr; a vertex v1 뫍 vc; s a positive integer.question:is there a v1-distinguishing subgraph  a g such that |a| 뫞 s  theorem 1 shortest description is np-complete.
모proof. we have shown that checking if a guessed a   vr such that  a g is v1-distinguishing can be done in polynomial time  we need to test if v1 뫍 ng a  and 뫋ri뫍axi = distractors1 v1 ; all sets involvedcan be computed in polynomial time . hence shortest description belongs to np.
모we outline a polynomial reduction of minimum cover to shortest description. let o = {o1 ... on}  s =  s1 ... sp  and q an instance of minimum cover. let us consider the bipartite graph g with vc = {o1 o1 ... on}. the label of each concept vertex is . the relation vertices set of g is initialized as vc = {rij|i 뫍 {1 ... n} j 뫍 {1 ... p} }  where each vertex rij is a neighbor of the vertex oi   all edges oirij are added to g . the type of the vertex rij is ai. the final cg g is obtained by deleting some relation vertices using the following rule: for each i and j  if oi 뫍 sj then rij is deleted from g  together with the edge oirij . clearly the graph g is constructed from the instance of the minimum cover problem in polynomial time. the desired instance of the shortest description problem is obtained by taking as input this graph  vertex o1 and s = q. an illustration of this construction for the instance o = {o1 o1 o1}  s =  s1 = {o1 o1} s1 = {o1 o1} s1 = {o1 o1}  and q = 1  of minimum cover is given in figure 1:

figure 1: minimum cover illustration
모it is easy to see that there is no o1-distinguishing subgraph with at most s = 1 relation vertices and also there is no cover of o with at most q = 1 members of s. if in the instance of the minimum cover problem we have q = 1 then the answer is yes since  s1 s1    s1 s1  or  s1 s1  are all covering of o with 1 members of s. the corresponding instance of the shortest description problem  the same graph and s = 1  also returns  yes ; since  r1 r1 g   r1 r1 g or  r1 r1 g are all o1-distinguishing subgraphs with 1 relation vertices.
모returning to the proof  we must show that in the constructed conceptual graph there is an o1-distinguishing subgraph with at most s relation vertices if and only if there is a covering of o with at most q = s members from s. but this is an easy consequence of the observation that the above construction is such that the sets xi  destroying the distractors by the relation vertices r1i  are exactly the sets si 뫍 s.
1 a simple gre algorithm
in the general case  each object in the scene represented by g is characterized by its label  type and reference   by some other possible attributes  properties  and also by its relations with other objects  expressed via relation nodes of arity 뫟 1. in this case  if v1 an arbitrary concept node  it is possible to have vertices in distractors1 v1  which cannot be distinguished from v1 using individual relation neighbors but which could be removed by collective relation neighbors. let us consider the scene described in figure 1 :

figure 1: scene illustration
모note that relation labels are assumed to be incomparable. clearly  ng v1  = {r1 r1} and distractors1 v1  = {v1 v1}. the vertex v1 can be removed by r1  v1 has no relation neighbor with a label at least know  and by r1  despite of the existence of a relation neighbor r1 labelled isnear  v1 is the second neighbor of r1; v1 is the first neighbor of r1 . the vertex v1 cannot be removed by r1   r1 g 뫟  r1 g   and by r1  r1 g 뫟  r1 g   but {r1 r1} destroys v1   there is no projection of  {r1 r1} g mapping v1 to v1 and in the same time mapping v1 to a common neighbor of r1 and r1 .
모this example suggests an algorithm for constructing a v1distinguishing subgraph in general. for an arbitrary concept vertex v1  let us denote n1 v1  =    n1 v1  := ng v1  and for i 뫟 1  ni v1  = ng ng ni 1 v1   . clearly  since g is finite  there is k 뫟 1 such that ni v1  = nk v1  for each i 뫟 k. this parameter is called the eccentricity of v1 and is denoted ecc v1 . we can inductively construct distractors of higher order for a vertex v1  as follows: if we consider distractors1 v1  = {w|w 뫍 vc   {v1} 뷂 v1  뫟 뷂 w }  then for each i = 1 ecc v1   distractorsi v1  = {w|w 뫍 distractorsi 1 v1   ni v1  g 뫟  ni w  g}.
theorem 1 let  cg {v1}  be a gre instance  and let i1 be the first i 뫍 {1 ... ecc v1 } such that distractorsi v1  =  . if i1 exists then  ni v1  g is a v1-distinguishing subgraph  otherwise v1 is an undistinguishable vertex.
모proof. the theorem clearly holds due to the definition of the distractors sets.
모this theorem basically defines a breadth-first search algorithm for finding a v1 distinguishing subgraph.
1 generalisations and extensions
apart from the benefits shown throughout the paper  using
cgs for representing gre means that a number of interesting and useful extensions can be developed. this section sketches two kinds of extensions: the addition of inferential rules  to increase reasoning power   and the addition of negation and full quantification  to increase expressive power .
1 adding inferential rules
an important further generalisation of the gre problem can be obtained by bringing inferentialrulesto bear  as an integral part of cg  baget and mugnier 1 . if s is the support of the cg representing the scene  a rule defined on s is any cg  h  over the support s  and having specified a bipartition  hyp conc  of its set of relation nodes. the subgraph of h spanned by hyp   hyp h is called the hypothesisof therule h  and the subgraph spanned by conc   conc h  is the conclusionoftheruleh. applyingaruleh toacg g means to find a projection 뷇 from  hyp h to g  to add a disjoint copy of  conc h to g  and finally to identify in this graph each concept node  its image by 뷇. the new cg obtained  g  is called animmediate derivationof g by the application of rule h following 뷇. let r a set of rules defined on s and g a cg over s. then g  r derives a cg g if there exists a sequence of immediate derivations leading to g by applications of rules in r.
모let us consider again the scene represented in figure 1. if we want to express that the conceptual relation near is symmetric  then we add the rule h described in figure 1:

figure 1: rule illustration
모here the hyp set contains only the  gray  relation node s1 and the set conc is the singleton set {s1}. without this rule  the vertex in figure 1 v1 뫍 distractors1 v1  can be removed by by adding r1 to a v1-referring subgraph  despite of the existence of a relation neighbor r1 labelled isnear  v1 is the second neighbor of r1 while v1 is the first neighbor of r1 . considering the rule h  which intuitively asserts that  if a person a isnear a person b then b isnear a  too   v1 can not be removed by adding r1 to a v1-referring subgraph.
모we have therefore an interesting extension of the basic gre problem  which can be formally stated as follows. let s  g and r a scene representation  and v1 a concept node in g. a derivedv1-distinguishing subgraph is any v1distinguishing subgraph of some derived cg g from g and r. the extended gre problem asks to find such a derived v1-distinguishing subgraph or the conclusion that it does not exists for a specified s  g and r scene representation.
1 increasing expressive power
like all other gre algorithms that we are aware of  the cgs discussed so far are essentially limited to the expression of atomic facts. in the cg framework  however  various extensions are naturally forthcoming.
negation. explicit negation can be added to the kb  which is an interesting way to allow gre to produce descriptions involving the absence of a property  cf. van deemter and krahmer  in press  for alternative approaches .
모let a f   vr such that a뫌f =  . the pair   a g  f g  is called av1-distinguishingpairofsubgraphsif v1 뫍 ng a   that is   a g is a v1-referring subgraph   and each projection 뷇 from  a g to g such that can be extended to a projection 뷇 from  a 뫋 f g to g  that is 
  such that we have.
모the set f   vr  offorbiddenrelation nodes  is used to kill each concept node from the set confusablea v1   where
confusablea v1 	=	{w|w	뫍	vc   {v1}  뷇	뫍
붫  a g g  such that 뷇 v1  = w}.
모in the example in figure 1  {r1} {r1}  is a v1distinguishing pair of subgraphs  with the intuitive meaning themanknowingapersonandwhichisnotnearjoe. similarly  for the scene represented in figure  1    {r1} {r1}  is a v1-distinguishing pair of subgraphs  with the intuitive meaning: thebowlonthefloor notcontainingacup.
모clearly  if  a g is a v1-distinguishing subgraph  then   a g  f g  is a v1-distinguishing pair of subgraphs  for each f   vr such that a 뫌 f =  . the basic gre problem can be extended by replacing the output requirement with:
output: a f   vr such that   a g  f g  is a v1-distingushing pair of subgraphs in sg  or the answer that thereisno v1-distinguishingpairofsubgraphsinsg.
full quantification. suppose our cg-based kb expressed the  non-atomic  proposition that every table has exactly one cup on it; this plus the fact that there is only one wooden table  for example  would be sufficient to justify a description like 'the cup on the wooden table'  even if the kb does not say which table this is. extensions of this kind would enable gre programs to model human communication far more extensively than has so far been possible.
1 conclusions
using cg to formalise gre means that we can benefit from:
  the existence of a support. cgs make possible the systematic use of a set of  ontological commitments  for the knowledge base. a support  of course  can be shared between many kbs.
  a properly-defined formal semantics  reflecting the precise meaning of the graphs and their support  and including a general treatment of n-place relations. further extensions of the expressive power of the formalism are possible  as we have seen  section 1 .
  projection as an inferential mechanism. projection replaces the purely graph-theoretical notion of a subgraph isomorphism by a proper logical concept  since projection is sound and completewith respect to subsumption . optimized algorithms for cg projection have been studied in croitoru and compatangelo  1 . this inferential mechanism can be further enhanced by the addition of 'axiomatic' rules  section 1 .
1 