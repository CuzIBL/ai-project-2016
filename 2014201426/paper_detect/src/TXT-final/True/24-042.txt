 
we propose a language for programming in autoepistemic logic that extends the standard logic programming and incorporates incomplete information. by syntactically distinguishing the  true negation  from the  lack of information   we also provide a way to define negative information explicitly. a fixpoint semantics can be defined for stratified and conservative programs. in this paper  we investigate definite autoepistemic programs. we investigate fixpoints of definite autoepistemic programs and show that they coincide with the declarative semantics of these programs. we also define a resolution procedure  called slsae-resolution  for such programs. slsaeresolution is sound and complete for stratified  conservative  and solvable programs. 
1 	introduction 
there are two serious limitations of traditional logic programming: 
1. negative information is represented indirectly through the absence of positive data  which may be undesirable in situations where a direct representation is called for. for example  given a rule than fairness is not eligible; the fourth rule says that students whose eligibility is not determined by the above rules should be interviewed by the scholarship committee. obviously  not/ in the above example represents that / is not known  which is different from the negation of /. 
in this paper  we present a framework for programming in autoepistemic logic that incorporates unknown information and explicit definition of negative information. we show that for certain programs  consistency is guaranteed and the fixpoint and declarative semantics coincide. there are two major differences between this paper and  gelfond and lifschitz  1 : 
1. we provide a syntactic restriction to guarantee the consistency of a program. 
1. our base language is first-order  and we provide a resolution procedure to compute the answer set for restricted programs. 
the structure of the paper is as follows: section 1 gives a brief introduction to autoepistemic logic  its syntax  semantics  variations  and extensions. section 1 introduces autoepistemic programs. sufficient conditions are given for the existence of a unique  consistent iterative expansion. a resolution procedure  slsae-resolution  is defined in section 1. section 1 presents conclusion and future work. 

and a fact bird tweety   we shall 
logic programming 


	kuo 	1 

logic programming 


	kuo 	1 

logic programming 


1 	conclusion and future work 
we presented a fixpoint semantics for stratified and conservative autoepistemic programs  which uniquely determines the only iterative expansion of such a program. a resolution procedure  called slsae-resolution  is also defined. slsae-resolution is sound and complete for solvable programs. the following issues merit further investigation: 
1. the results of this paper allow us to generalize the framework to permit objective clauses  not only ob-
jective literals  in the programs. such programs are called disjunctive autoepistemic programs. disjunctive autoepistemic programs are strictly more general than any of the current approaches in the literature that combine negation and disjunction. the following example illustrates this: 
example 1 consider the following database: 

the first rule says every student must be in at least one of the two projects proj1 and proj1. the second rule says those students who are neither in proj1 nor in proj1 have not yet decided which project to undertake. given the query kundecided x   the 
answer should be  but not vise versa. without the operator k  for example in  ross  1b   this distinction can not be made  hence the first rule can be used to exclude x - c as an answer to the query 
		i   
1. another issue to pursue is the efficient implementation for autoepistemic programs. for example  one may try to generalize the sygraf approach in  kifer and lozinskii  1  to definite and dis-
junctive autoepistemic programs. 
acknowledgements: 	i would like to thank weidong 
chen and michael kifer for many helpful discussions and invaluable suggestions. an anonymous referee's suggestion is also helpful to improve the presentation of this paper. 
