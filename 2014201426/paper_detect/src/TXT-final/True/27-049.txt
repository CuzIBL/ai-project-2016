 
multilingual instructions generation has been the object of many studies recently motivated by the increased need to produce multilingual manuals coupled with the cost of technical writing and translating ihese studies concentrate on the automatic generation of instructions leavidg technical writers out of the loop in many cases  however it is not possible to dispense with human intervention entirely  for at least two reasons first  the system must be provided with a semantic knowledge base from which the instructions can be generated second  it is the technical writers who have the expertise necessary for producing instructions appropriate for a specific product or company and it is not necessarily an easy task to make this expertise available to a system the results of a requirement analysis stud} confirm the view that the moat useful tool is not a stand-alone writing tool but rather one that supports technical writers in their task in this paper  we describe buch a support tool which wc developed based on the results of our user requirement analysis 
1 	i n t r o d u c t i o n 
the automatic generation of instructional texts has been the object of many studies recently  motivated by the increased need lo produce manuals coupled with the cost of technical writing  the time required to produce documentation  and the potential flexibility offered h  the automatic generation of instructions researchers have concentrated on designing methods for integrating graphics and text  e g    wahlster el at   1  feiner and mckeown  1   and for tailoring instructions to the user s level of expertise  e g    peter and roener  1  at a more linguistic level of concern others have studied various ways of realising purpose expressions in english  
    thia work is partially supported by the engjneermg and physical sciences research council  epsrc  grant j1  by bc/daad arc project 1  and by the com mission of the 
european union grant lre-1 
e g  vander linden 1  and of generating appropriate referring expressions  e g  dale  1  more recently there has been an emphasis on the generation of multilingual instructions e g  rosner and stede  1  kosseim and lapalme  1  the latter is not entirely surprising since multilingual manuals are important not only for european manufacturtrs  who are required to produce manuals in the language of the end-user  but al1 for other multinational companies whose overseas sales are reporled to constitute over half of their total sales multilingual generation is also more appealing than monolingual generation followed by translation because  1  the texts can be generated in several languages simultaneously rather than waiting for the translation process   1  the underlying knowledge being expressed in monolingual instructions can be used to generate instructions m different languages  and  1  generating directly from the underlying knowledge base can produce more natural texts as the output text 1 not constrained by a source text 
¡¡most of the prototypes developed so far are intended to be used as stand alone tools leaving the technical writers out of the loop the  assume that an underlying knowledge base containing all the information necessary to produce instructions  or documentation  is already available to the generation system  or can be easily obtained however  this is unlikely in the near future generating texts from an underlying knowledge base is indeed a very knowledge intensive task furthermore  this knowledge base must contain user-oriented information  as user-oriented documentation is recognised to be more effective than product-oriented documentation such information concerns the goals of the user and the ways in which the product can be used to achieve these goals it is not always available from the design specification of the product consequently  it needs to be entered by hand  a task which is neither simple nor straightforward in addition  most companies have specific house-styles'  these are not always set out in the form of detailed and explicit rules but tend to be tacitly learnt by technical writers for all these reasons  the expertise of technical writers might not easily be embodied in a computer system 
¡¡available evidence thus suggests that it would be desirable at this point to provide a support drafting tool  as opposed to a stand-alone writing tool   recognising 

that it would need to be integrated into the technical writers' wider working practices such a lool would not be intended to bypass the human authors but would rather help them in their task by automatically generating drafts in several languages our first step towards developing such a tool was to conduct a user requirements analysis  identifying the wider environment in which the proposed tool would be used based on the results of our btudy  we have developed drafter  a drafting tool intended to be used by technical writers in producing multilingual instructions our current domain of application is software manuals in this paper we bncfiv describe the results of our user requirements analysis  present the resulting drafter architecture  and  finally  illustrate the system with an example of how a ttchnical writer might work with drafter we give examples for creating multilingual instructions for the open windows calendar manager 
1 	the user requirements analysis 
to study the technical writers needs  we conducted interviews with technical authors   mostly software documentation specialists   both ln-houst and fret lance the discussions covered a range of issues from overarching constraints of time and budget to the areas of the job perceived as interesting  difficult etc the authors explained the succession and timing of the processes in the documentation task  and their coordination and monitoring they also described the form in which the evolving document is represented the sources and channels of information  and the tools and resources used while lack of space prevents us describing lhit stud} in detail 
we present the main findings  set  power ft al 1  for details   
1 	the technical writer's tasks 
interestingly  we found that technical writers spend little time working on new texts the greater part of their work is updating existing documents the notion of reuse is thus quite important five main tasks emerged from our discussions knowledge acquisition document planning  composition  validation and maintenance these tasks are of course interleaved in the production process 
knowledge acquisition technical writers have to work in close collaboration with designers and engineers to gather and structure the information about the product or procedure they need to document this is done by consulting the designers  reading the comments in actual code  and experimenting with prototvpe versions of the new product the task of knowledge acquisition is very difficult  and it occupies as much time as the writing proper the main burden of knowledge acquisition is borne by the authors when they first encounter the product  at which time they must construct a mental model of the product from the end-user s perspective authors acknowledge that a formal record of this model would be useful in documenting subsequent modifications of the product by the same writer or by colleagues it could also be used when the same procedure needs to be explained again but in a different context  such as a different part of a manual however such a model typically is not created explicitly 
doc time at planning writers need to establish the overall structure and purpose of the document it is widely recognised thai a task-oriented viewpoint is more communicatively effective than a product-oriented one faking such a viewpoint  a typical structure for an in structional manual is to ha*e a short  about a page  chapter for each self-contained task  broken down into operations of about six or seven lines 
composition technical writers typically write several drafts of a document they aim to be effective communicators avoiding jargon and conveying their message in clear and concise terms bv training and experience  authors become conversant with general standards of technical writing  e g   the convention for distinguishing notes from warnings  
¡¡ lost companies also have style guides  formal or informal which further constrain the authors a style guide might  for example recommtnd or even prescribe the use of specific constructions and terminology a rigorouslv formalised style guide imposes a controlled language which is sometimes difficult and time-consuming to master 
validation quality assurance mechanisms range from informal proofreading by colleagues to formal reviews by committee some organisations require their writers to submit their output for critiquing by an automatic terminology and grammar checker this process may be reptated over several drafts  depending on the time available for preparation 
maintenance a significant proportion of a writers time is spent on maintaining documentation when changes are made to existing products 
1 	desiderata for a support writing tool 
from our discussions with technical writers and our understanding of their task  the following desiderata for a 
support writing lool emerged 
  support for knowledge reuse by helping authors create a formal model of the knowledge they acquire as a lot of time is spenl in knowledge acquisition and knowledge is reused frequently authors indicated that they would welcome a tool that would help them formalise their knowledge about the product allowing then to structure it in a consistent manner  examine it later  and share it with colleagues 
  production of alternative formulations when possible - as there are often several ways to express a sel of instructions  the authors expressed a desire to have several drafts produced  from which they can choose the most appropriate one 
  availability of early drafts produced simultane-ously in several languages - the possibility of producing drafts as soon as some mental model 
	paris  etal 	1 

of the task is formalised would help authors find out what underlying knowledge is still missing to provide good instructions it also speeds up the whole process 
propagation of changes throughout document and languages - when a change is required  authors would like to make the change only once modifying the same text in several places is a tedious task  and it jeopardises consistency support for accurate and consistent terminology - technical terms need to be employed consistently within and between documents even if these are produced by several authors furthermore  there are often constraints imposed by the company authors would welcome a tool to help them learn these constraints and ensure that they are applied systematically retain creative satisfaction of technical writing - a tool to support writers should automate those aspects writers find tedious  such as revision and some of the rudimentary aspects of composition  e g   consistent terminology and syntax   and leave to the authors the tasks they find interesting and challenging  such as structuring knowledge and expressing ideas 
1 	drafter 
based on the user requirements analysis described above  we have designed and implemented drafter a software manual drafting tool for english and french the overall architecture of drafter is shown in figure 1 it contains three processing modules  which form two main support tools 
  an interface for the technical writer this allows authors to specify formally the procedures necessary for the user to achieve their goals  thus supporting user-oriented instructions it also allows them to control the drafting process 
  the drafting tool this comprises two major components the strategic planner and the tactical generator the strategic planner determines the content and structure of the text  
and the tactical generator performs the realisation of the sentences the result is english and french drafts of the instructions for the procedures defined so far by the author using the interface 
underlying the processing components is a domain model  i e   the main repository of information about the domain 
1 	t h e d o m a i n m o d e l 
the domain model  implemented in loom  macgregor  1   is a collection of entities representing the information commonly occurring in the software domain these entities include actions  states  objects  and a set of relations between them this knowledge  derived from a study of a multilingual corpus of software manuals  is treated as language-independent  an important requirement fot multilingual generation it is hierarchically organised  using the upper model  bateman et al  1 as its root  and maintaining three further levels of structure corresponding to  1  the concepts and relations general to all instructions   1  those general only to soft-
1
¡¡¡¡the upper model is an ontology of distinctions employed to determine how to express the concepts linguistically 



of the knowledge base in tabular or graphical form the author may  for example  view the relationship between actions  methods and sub-actions as illustrated in figure 1 there  we see the method the author has defined for the action schedule an appointment  shown on the left  the method  sehcdule-cm-mcikod-instancel  is shown to have four sub-actions type the description of the appointment  choose the start time of the appointment  choose the end time of the appointment  and click on the insert button the two small squares under the name of the method indicate that this method has a precondition and a side-effect  namely in this case the cm editor window must be opened  and the appointment just defined appears id a list of appointments these 
can be viewed {and updated  by chcking on the rectangle representing the method 
¡¡the knowledge visualiser is fully integrated with the facility to construct and update the knowledge base so that the writer can trigger interface functions such as editing or generating on ever} constituent of a visualisation allowing a parallel development of knowledge base and natural language text 
the draft text viewer 
after the procedures and objects have been specified  text in french and english can be generated the text is mouse-sensitive  allowing the author to access the knowledge base entry for selected part of the text in this way  the author can modify the underlying knowledge base while working from the text in some cases the writer will decide to modify the generated text rather than the underlying knowledge for this purpose  a text editor is currently provided we intend to develop a more sophisticated tool that will constrain and record this post-editing 
1 	t h e strategic planner 
we use an existing text planning system that constructs text by explicitly reasoning about the communicative goal to be achieved  as well as how the goals relate to each other rhetorically to form a coherent text  moore and paris  1  given a communicative goal the system finds from its library of discourse strategies  or plans 1 a plan capable of achieving this goal plans typically post further sub-goals to be satisfied these are expanded  and planning continues until primitive speech acts are achieved the result of this planning process is a discourse tree  in which the nodes represent goals at various levels of abstraction {the root being the initial goal  and the leaves the primitive realisation statements 
   1 it is possible that there will be different plane for the different languages 
speech acts such as inform the discourse tree also includes coherence relations  mann and thompson  1  indicating how the various portions of the text are related rhetorically 
¡¡some of the constraints imposed by writing standards or house style concerning the structure of a manual can be embodied in the discourse strategies  and  by associating several strategies for the same discourse goal  it is possible to provide alternative drafts  as desired by the authors 
1 	t h e tactical generator 
we employ the kpml environment  bateman  1  for our tactical generators we have extended its coverage in english to generate the types of sentences found in instructional manuals  and are using the flexible environment it provides to develop a french grammar kpml  a descendent of penman  mann  1   is based on systemic functional linguistics  sfl   halliday  1   expressing its grammar in terms of system networks the rules dictated by the general standards of technical writing which are formally defined can be added to the linguistic resources available to constrain the general potential of the generators 
¡¡the output of the strategic planner is passed through the text plan interface which constructs statements in the sentence plan language  spl   rasper 1   kpml b input language this interface takes into account the discourse tree and the potentially different forms of expression appropriate in english and french 
1 	working with drafter an example 
suppose the author wishes to generate instructions for scheduling an appointment with the openwindows calendar manager he or she mu1t specify the exact steps a user must carry out this might be done by defining all the objects the user will bee in the appointment editor window  using the drafter window description interface   and specifying the method proper the author can then ask for the instructions to be drafted for this action at this point  drafter calls the strategic planner with the discourse goal make the user competent to perform the action of scheduling an appointment the strategic planner builds a discourse tree  which provides the deep representation of the text to be generated this tree is passed through the text plan interface  and then 
   1 we are currently working to allow the specification of the input to the generator to be at a level of abstraction such that this interface would built the same structure regardless of the language and the differences in syntactic realisations would be dealt with within the tactical generator proper 



formula 'il faut'  'one must'  was chosen instead of the more direct 'vous devez  'vou must   
1 	u p d a t e a n d re-use 
suppose the author decides that the specification of the procedure for scheduling an appointment is not appropriate  and that there is no need tor a precondition instead of having to update the instructions themselves  and risk inconsistency between the two texts  he or she can simply change the underlying specification for this procedure  removing the precondition the change made  drafter can be asked to re-generate the instructions in the two languages these will automatically reflect the change  and the precondition will be absent from both texts the rest remains the same 
1 s u m m a r y 
in this paper we have discussed drafter  a tool we have developed to support the technical author in the drafting of multilingual software manuals based on a user requirements analysis we described the facilities which allow the author first to specify the procedural knowledge necessary for using the software and then to generate drafts in english and french and illustrated them with an example in our future work we will be developing additional tools to provide a richer drafting environment and evaluating the system with professional technical authors 
r e f e r e n c e s 
 bateman tt al  1  john bateman robert rasper  johanna moore and richard whitney 1 general organization of knowledge for natural language processing the penman upper model technical report  university of southern california/information sciences institute  usc/is1  march 1 
 bateman  1  john bateman 	kpml 	the komet-
penman  multilingual  development environment technical report  institut fur lntegrierte publikationsund informationssysteme  1psi   gmd  darmstadt  sept 1 
 dale  1  robert dale 	generating referring expres sions 	constructing descriptions in a domain of ob-
jects and processes 	mit press  cambridge  ma  1 
 delin et al  1  judy delin anthony hartley  cecile paris  donia scott and keith vander linden expressing procedural relationships in multilingual instructions in proceedings of the 1th international workshop on natural language generation  kennebunkport  mn 1 
 feiner and mckeown  1  steve feiner and kathleen mckeown coordinating text and graphics in explanation generation in proceedings of aaai '1  pp 
1  boston  ma 1 
 fikes and nilsson  1l  richard fikes and nils nilsaon strips a new approach to the application of theorem proving to problem solving artificial intelligence  1-1 
1 	natural language 
 halliday  1  michael halliday language as a social 
stmiotic the social interpretation of language and meaning university park press  baltimore  1 
 kasper  1  robert kasper a flexible interface for linking applications to penman's sentence generator in proceedings of the darpa speech and natural language workshop philadelphia pa  february 1 
 kosserm and lapalme  1  leila kosserm and guy lapalme content and rhetorical status selection in instructional texts in proceedings of the 1th international workshop on natural language generation  kennebunkport  mn 1 
 macgregor  1  robert macgregor a deductive pattern matcher in proceedings of aaai 1  st paul  mn  1 
 mann and thompson  1  willlam mann and sandra thompson rhetorical structure theory toward a functional theory of text organization text  
1 1 1 
 mann  1  william mann an overview of the penman text generation system in proceedings of aaai 1 pp 1 1 
 moore and paris 1  johanna moore and cecile paris planning text for advisory dialogues capturing intentional and rhetorical information computational linguistics  1  1 1 
 peter and rosner  1  gerhard peter and dietmar rosner user-model-driven generation of instructions / ser modeling and user adapted interaction  1  1 1 
 power tt al  1  richard power  lyn pcmberton  anthony hartley  and louise gorman user re quirements analysis  drafter internal report  ttr1  february 1 
 rosner and stede  1  dietmar rosner and manfred stede towards the automatic production of multilingual technical documents technical report fawr-1  research institute for applied knowledge processing  faw  ulm  germany  1 
 sacerdoti  1  earl sacerdoti a structure for plans and behavior elsevier  new york  1 
 vander linden 1  keith vander linden speaking of actions choosing rhetorical status and grammatical form in instructional text generation phd thesis  university of colorado  july 1 available as technical report cu-cs-1 
 wahlster tt al 1  wolfgang wahlster elisabeth andre  wolfgang finkler  hans-jurgen profitlich  and thomas rist plan-based integration oi natural language and graphic generation artificial intelligence  1-1 
1 	natural language 

1 	natural language 

1 	natural language 







1 	natural language 

1 	natural language 

1 	natural language 







1 	natural language 

1 	natural language 

1 	natural language 













