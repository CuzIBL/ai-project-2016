 
　　　we investigate several methods of inductive reasoning in the domain of difference equations  including the method of generalization with beliefs  the method of successive refinement  and temporal methods based on comparisons with previously solved problems. 
1. introduction 
　　　we begin a study of inductive reasoning in mathematics. inductive reasoning in mathematics d i f f e r s from inductive reasoning in the empirical sciences in that there is an ultimate test although not necessarily a decision procedure  which can be used to determine what is a correct induction. namely  that if what is induced is true  that i s : if it can be deduced by one's deductive system then it must be correct. because of this relationship between induction and deduction one of our goals is to classify what instances of reasoning are inductive and what are deductive. 
　　　our main goal however  is to create a taxonomy of feasible inductive methods. such a goal is not unrelated to the work of the mathematician: g. polya   1  1a  1b   it is just more detailed. in particular  we t r y to carry out the analysis of each method to a level detailed enough so as to be programmed. also  where necessary  we relate the inductive methods to the level and capabilities of contemporary deductive systems. due to this requirement for detail we shall r e s t r i c t our attention to a particular  but significant domain. 
1 our problem domain 
　　　we consider the problem of trying to find by inductive reasoning a closed-form solution  that is an algebraic solution  to a recursive function. 
that i s   from a set k of equations of the form*: 
ψk  n fn f  n-h   f  n-1h  . . .  =1 or rather: 
fn = ψk   n   f   n - h     f   n - 1 h     . . .   we wish to find an equation of the form: 
vn fn -  n where f does not occur in  . 
　　　for example  given the recursive equation for the fibonacci function: f n+1  = f n+1 +fn 
fl = 1 
fo = 1 
we would like to find a theorem of the form: vn fn =  m 
where  n is a sentence constructed from algebraic symbols such as numerals  plus  +   times  *   power       minus  -   division  /   logarithm  in   
* our convention for parenthesizing complex subexpressions is to place the l e f t parenthesis before the function symbol as is done in eval-lisp. 
thus we write  f n  and  a + b  not f n  and  a  +  b . 
	s o c i a l i z e d 	s 
1 
sten-ake tarnlund 
dept. of information processing & computer science 
university of stockholm  
royal institute of technology  sweden. 
sine  sin  and cosine  cos . 
　　　or as another example  given the recursive equations for the minimum number of moves that must be made in the tower of hanoi puzzle of n discs  a description of this puzzle may be found in luger 
 1.  
h n+1  = 1 hn +l ho = 1 we would like to find a closed form solution: vn hn =  n. 
1 a definition of  inductive reasoning  
　　　of course if we  or rather our program a l ready  knew  a closed form solution  n for a recursive function such as f or h then we would not want to c a l l the method by which that  n was produced:  inductive reasoning . the problem then of defining just which methods of producing  n are examples of inductive reasoning  and which are not - resides in the question as to what it means for a system to  know  something. for example if the 
system had; vn hn =  n 
e x p l i c i t l y stored as an axiom we would clearly say that the system knew that vn hn =  n. furthermore  if the system could apply a sequence of items   i . e . axioms  lemmas  axiom schemas and lemma schemas  written say in lisp  which transformed hn into  n  then if the system knew that each application of an item in that sequence produced a correct result  then again we would say that the system knew that  vn hn =  n  . 
　　　so far this is an omnipotent sense of knowledge: we know whatever is deducible. we would l i k e to modify it by the further requirement of f e a s i b i l i t y . that i s   any sequence of application of items must not be so long as to exhaust the system's resources or our patience. in regard to f e a s i b i l i t y   it is pointed out that we don't s t r i c t l y speaking have to  know  that each application of an item is correct   for after a l l   proofs from axioms only are very long   but rather a l l that is needed is the p o s s i b i l i t y of  knowing  that our items are correct in the sense of an extensible deductive system 
 brown  1a    coupled with the  belief * that our items are correct in at least the sense of never having been refuted   i . e . shown to be incorrect   popper  . 
　　　in summary then we w i l l c a l l any method of producing a closed-form solution  n  which is not  known  to be the closed-form solution  inductive reasoning. for example  enumeration of a l l possible algebraic functions or random guessing would count as inductive reasoning  albeit poor inductive 
* we speak of  knowledge  as true  belief . the point is that although we hope that our deductive system is sound  there does not seem to be anyway to absolutely guarantee this fact. 
stems-1: brown 
1 
reasoning  because as items of a deductive system they would quickly be refuted by producing false results. 
1. elementary inductive methods 
　　　we f i r s t describe two basic methods of i n ductive reasoning  and then compare them. 
1 the method of generalization with beliefs one popular theory of inductive reasoning 
 meltzer   plotkin 1  1  popplestone   feldman  hardy  suggests that it is basically generalization.* consider for example the tower of hanoi problem. using the recursive equations we can deduce closed-form solutions for numerical instances of hn. ho = 1 
hi = ho+1 = 1-1 = 1 
h1 - 1+1 = 1+1 = 1 
h1 - 1+1 = 1+1 = 1 
h1 = 1+1 = 1 . 1 + 1 - 1 
h1 - 1+1 = 1+1 = 1 
h1 - 1+1 = 1+1 = 1 
i suspect the reader has already induced a closedform solution for hn  but l e t us investigate how 
this might be done. from h1 hl=1 h1 h1 h1 h1 h1 
we wish to f i n d * * 
to the elements of each sequence. for example in the case of hn we might subtract from each element of the belief sequence  the corresponding element generated by hn  obtaining 
 this would give us the know-
and via our belief  we induce that: hn = 1 n - 1 which in fact is true. 
　　　there i s   however  another inductive method which  other than for possibly the triggering of the belief that the closed form solution might i n volve an expenential function of base 1  does not really need to produce those instances of the hn function. nor does it need to go through any generalization steps. we c a l l this method  the method of successive refinement. 
1 the .method of successive refinement 
　　　the basic idea of the method of success refinement is to make an i n i t i a l  incorrect  guess 


　　　f i r s t l e t us note that a least general generalixation method such as plotkin  1  does not 
work because the least general generalization: 

　　　furthermore even if we include an algebraic matching f a c i l i t y similar to that used in feldman  and hardy  i1 ***which allows us to t r y to relate the arguments of the hn function to i t s v a l ues by adding multiplying subtracting and dividing  we s t i l l would not obtain a solution. for example  adding one to the sequence of values of hn gives: 
ho+1 hl+1 h1+l=1 h1+l=1 h1+l=1 h1+l=1 h1=1 

but s t i l l the remaining least general generalization is false. 
　　　so how can the closed form solution be induced  let us suppose that the inductive system has a v a i l able a belief that any function which produces the sequence of values 1  1  1  1  1  1  for the arguments o  1  1  1  1  1  is probably equal to the exponential function of base 1: 
  belief 1  1  1  1  1  1 is probably 1n  then given this belief a system might t r y to compare the sequence 1  1  1  1  1  1 to the sequence of values given by the recursive function by applying various algebraic operations pairwise * we consider analogy to be an essential component of the method of generalization as here described  and hence do not define a separate: method of analogy. 
** v is our symbol for a l l . 
*** in our case  however  we work directly on the numbers themselves rather than applying algebraic operations to the number of occurrences of symbols such as: the successor symbol. 
as to what is the closed form solution  l e t a theorem prover t r y to prove this guess  and when it f a i l s to prove i t   go back and try to modify each branch of the protocol on which n had been produced. for example  l e t us suppose that we believe a solution to hn might involve an exponenti a l function to a power of two:  belief hn involves 1n  
in other words  l e t us f i r s t form the hypothesis that; 
       hn - 1 n and see what a deductive system w i l l do to this expression. inducting on n we get*: 

already we are in trouble as the deductive system shows that our hypothesis is false  on the base case. can we modify our hypothesis to induce a better one  analysing our proof we see that if the expression 1 = 1 were replaced by 1 = 1 - 1  
then o and not n would be produced. this means that 
ho ＊ 1 would have to be ho = 1 - 1  
ho = 1 would have to be ho = 1 - 1  and hn = 1n would have to be hn = 1n - 1. 
giving our new hypothesis to a deductive system we get: 
* ＊ is our symbol for true; a is our symbol for false  and  - is our symbol for implication. the l e f t branch is the base of the induction  and the right branch is the induction step. 

specialized systems-u: brown 


which we deduce to be true. 
　　　we see then that we can obtain a proof by modifying a previous unsuccessful attempt at proving a theorem. this leads naturally to the question as to what is the space of a l l such modifications  although  potentially this space may be quite large  we w i l l only consider two simple modifications: 
1  addition of a constant to an equation in order to make it true 
1  multiplication of a constant to an additive part of an equation in order to make it true. we have just seen an example of  1  in obtaining a solution to the hanoi function. an example of 
 1  applied to the false equation 
1 - / 1 would be to multiply /1 by 1//1 and an example of  1  applied to an additive part of the false equation 
1 - 1 + /1 
would be to multiply the additive part 1 by - 1//1 
　　　note that modifications are only made to the right hand side of an equation. the reason for this is that that side contains the closed-form solution whereas the other side merely contains the recursive function. 
　　　the reader w i l l see in the method of successive refinement an echo of meltzer's  hypothesis that inductive reasoning is inverse deduct i o n . but in our case  this is not so much a semantical hypothesis: if a- b then a may be i n duced from b  as it is a notion of search strategy in the sense that if b is deduced from a by applying the item* a -  b to a  then a is induced from b by applying the item in the opposite direction. 
　　　we have seen how the closed-form solution for hn may be obtained from the belief that the solution involves an exponential function of base two. note that this belief is stronger than what is necessary  and that the belief that some arbitrary exponential function a is involved suffices: that i s   if 1 is replaced by a in the previous protocols  essentially the same result w i l l be obtained. 
1 comparison of the two methods 
　　　so far  we have found that simple generalization methods are not sufficient and that sophisticated beliefs seem to be used in inductive reasoning. we have cast doubt on the suggestion that inductive reasoning is only generalization by describing another technique  the method of successive refinement  which seems to be more powerful  because it needs a weaker belief to produce the solution . 
　　　one advantage of the generalization method is the possibility of triggering the 1n belief by an algebraic matching of the 1  1  1  1  1  1  sequence to the sequence generated by the hanoi function: hn. a second advantage is that it is * -  is our symbol for i f f   i f and only i f   . 
quite easy to explain how the belief  that a function whose i n i t i a l instances are 1  1  1  1  1  1  is the exponential of base 1: 
 belief 1  1  1  1  1  1 is probably 1n  n was produced by simply instantiating n in 1 to successively 1  1  1  1  1  1 whereas it does not seem quite as easy to explain the production of the i n i t i a l hypothesis that hn involved some exponential function: 
 belief hn involves an  
are we for example to believe that the closed-form solution of every recursive function involves an exponential function or what  
　　　although it is easier to explain the origins of a belief of the form: 
 belief 1  1  1  1  1  1 is probably 1n  than of the form: 
 belief hn involves a   we note that if a recursive function is not actua l l y equal to a simple algebraic function such as 1 then it is quite improbable that the necessary belief of this f i r s t form could be available to be used in obtaining the closed-form solution. we w i l l now give an example of such a function and suggest that the closed-form solutions of most recursive functions are of this character. this example is interesting because it supports the view that inductive reasoning based only on the method of generalization even with sophisticated beliefs  is not sufficient  and that other methods are also needed. 
　　　our example is the fibonacci function. using i t s recursive equations we deduce: fo = 1 
f1 = 1 
f1 = fl + fo = 1 + 1 = 1 f1 = f1 + fl = 1 + 1 = 1 
f1 = f1 + f1 = 1 + 1 = 1 
f1 = f1 + f1 - 1 + 1 = 1 
f1 = f1 + f1 = 1 + 1 = 1 
f1 = f1 + f1 = 1 + 1 = 1 
thus from 
f1 fl=l f1 f1 f1 f1 f1 f1 we wish to f i n d : 
fn =   
but there is no simple algebraic function which produces an i n i t i a l sequence anything like 1  1  1  1  1  1  1. in other words there could not be any belief of the form: 
 belief a 1 ....a m is probably a   which would be helpful in solving this problem. for after a l l we cannot expect to have beliefs about every algebraic function in our system; only the simple ones. we can see that the closed-form solution is not simple  by actually exhibiting i t . concurrently we w i l l take the opportunity to show how this closed-form solution could be obtained by the method of successive refinement using the belief that the solution involves two exponential 
functions: 
 belief fn involves a   b   where a # 1 can b # 1. 
　　　from this belief we form an i n i t i a l hypothesis that: fn = an + bn 
and see what our deductive system w i l l do to this expression. inducting on n twice  because fn 

specialized systems-1: brown 1 
does not recurse on fn+1  we obtain; 	working upwards we see that the five previous lines in the proof must have been something l i k e : 
　　　the induction step seems to be true  but the two base cases are false. can we modify our hypothesis to induce a better one  
analysing the fl base case we see that if the 
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　: in  1 = /1  had been divided by 〔 1 then ＊ would 
have been produced. 	this means that the base case would have had to have looked something l i k e : 
fl=afo+  b-a //1 b 
f l = a - 1 +     b - a   / 1   - l 
fl-1+ b-a /〔1 
fl= b-a //1 
1=  b-a /〔1 
1=   l-〔1 /1- l+〔1 /1 /〔1 
1= 1〔1〔1 
1 
d 
* in contemporary deductive systems  brown  1b  1   boyer   the equality or unification items would end up replacing a l l occurrences of say  a  by b-1. a system used in successive refinement should not do this because if fn = an + bn is false a might not equal b - 1  and then we would 
not want to propagate this f a l s i t y into the branch 
of the proof which is the induction step which may after a l l be true as in this example. the reason 
we prefer to have n derived on the branch of the 
proof which is the induction base rather than the induction step is that it is a simpler branch and is true. 
　　　replacing a and b by the algebraic terms that we have found them to be in our proof we find that the closed form solution for the fibonacci function i s : w i l l be easier to analyse why it produced n  in order to induce a hypothesis. 
special fzed systems-1: brown 
1 


thus we see that although it is plausible that we might be able to induce this solution by the i n ductive method of successive refinement  it is not very plausible that we could have induced this solution by the generalization method. the reason for t h i s   as w i l l be recalled  is because the generalization method would require prior beliefs t h a t : 

and it simply does not seem plausible that such beliefs would be available. 
1 the supplementary method of existential 
functions 
　　　we have one f i n a l point to make about the fibonacci example: if we had a slightly more sophisticated belief as to what the closed-form solution might be  then our deductive system would be able to obtain the solution in a very direct manner. let us suppose that we have the belief that the closed-form solution of the fibonacci i n volves a linear combination of two non-zero functions : 
 belief fn involves α an + βbn   
then the hypothesis i s : 		+βbn 
a solution is obtained by inducting twice on n: 

this technique of using existential functions has been used by bibel  in our case constants: a b α β .because it is so powerful that we shall raise it to the status of a t h i r d inductive method which we shall c a l l : the supplementary method of existential functions. it should be noted that this technique is no substitute for the more general method of successive refinement  for i t s power depends on knowledge possessed by the deductive system. in the protocols using the method of existential functions we have assumed the a b i l i t y to solve equations of the form: 
f - 1 
for an arbitrary existential constant. this knowledge was not assumed when not using this method. we shall see more of this method in section 1. 
1 summary 
　　　in summary then we have described two basic inductive methods and one supplementary method; and have shown that the effectiveness of each method depends on the a v a i l a b i l i t y of particular beliefs. we have suggested that the beliefs needed by the generalization method would only be available if the recursive function is equal to some very simple algebraic function  such as is the case with the tower of hanoi function. for most other recursive functions such as the fibonacci functions we have suggested that the beliefs needed by the generalization method would not be available. 
　　　in section 1 we describe how the beliefs needed by the method of successive refinement might be automatically produced. 
1. temporal inductive methods 
　　　we now describe methods of inductive reasoning based on information obtained from the solutions of previously solved problems. 	such methods are called temporal inductive methods. 	there are two temporal inductive methods  distinguished by the type of information on which they are based. 	the f i r s t temporal method is based solely on information obtained from the theorem which expresses a previously solved problem  whereas the second temporal method is based on information obtained from the proof of a previously solved problem. 
　　　referring back to section 1 we shall see in section 1 how the second temporal method may be applied to producing the kind of beliefs needed by the method of successive refinement. 
1 the temporal method based on theorems 
　　　the basic idea of the temporal method based on theorems is for any given problem f to t r y to find a similar problem h which has already been solved  and then to use something similar to the solution for h as a hypothesis for the solution of f. 
　　　for example l e t h be the tower of hanoi problem whose solution we discovered in section 1  and l e t f be the fibonacci function whose solution we are trying to f i n d . the theorem which expresses the solution to the hanoi problem is then:  vn h n+l =1 hn +laho1  -  hn=1n-1 and the  as yet incomplete  theorem which expresses 

specialized systems-1: brown 

we see that there is no reasonable analogy that we can make which w i l l help us to solve f. for example  if we form the analogy that m is n - 1 from  hn+1 fm+1   then we might conjecture that: fm=1m-1 -1 
which is false. in any case  so much syntax has been l e f t unexplained by this analogy  for example the 1.   +1  ho = 1  +fm  and fl = 1  that we can have no confidence in this conjecture anyway. 
　　　furthermore even if our generalization system were sophisticated enough to rewrite the h theorem as the equivalent theorem:  vnh n+1 =1h n+l +l 'hl l ho=1  + hn=1n-1  vrof m+1 -f ra+l +fm / fl-1   fo=1  + fm=  the closest analogy would s t i l l not explain the 1*   +1  and +fm. 
　　　the problem here is that h and f are so d i s similar that no immediate analogy can be made. 
1 temporal method based on proofs 
　　　the basic idea of the temporal method based on proofs is as follows: 
1  first using the temporal method based on theorems find a problem h which is similar to the problem f you are trying to solve and conjecture a solution for f. 
1  using the deductive system produce the proof of h and a protocol of f with that hypothesis. 1  finally compare the proof with the protocol to find out why no solution was obtained  and form a new hypothesis. 
suppose  now that we are trying to find a solution to the fibonacci function f  given that we already know the solution to the tower of hanoi function h. we shall use the proof of the solution of h which is given as described in section 1 starting with: 
1a vn hn = a n - 1 
the hypothesis for the solution of f is 
1 a vn fn - a n -l 
 we could throw in a few existential constants  for example: fn = a.an -1  but it won't make any d i f ference at this stage.  
was f i r s t applied. we then see that the steps in the base case of proof and protocol were the same  and that the f i r s t few steps on the induction step branch of the proof and protocol were the same. in 
fact we find that they d i f f e r exactly where h n+1  
is replaced by 1 hn +l h n+l =a hn +a-l 
this then is the problem. on f the theorem prover inducts because it can't recurse  because f recurses on n+1 not n+1  whereas h immediately recurses to obtain a solution. 
　　　so granted that f recurses on n+1 and that the theorem proven inducts twice the question  i s : why is not a solution obtained after the second induction  let us compare the steps beginning with the second induction in f to the steps in hn: 1a vn hn = an - 1a vn. f n+1  = afn+a - 1 we see that hn involves some term  a  exponentiated by the induction variable n. comparing hn to fn+1 this leads us to suspect that fn+1 might also i n volve some term exponentiated by the induction term n+1. thus we would hypothesize that fn+1 involves some term b or rather than fn involves some term b . the reader should bear in mind that the hypothesis is not a for this a would clash with the bound variable a already occuring in the above fibonacci expression. the point is that the  a  in the hanoi expression and  a  in the fibonacci expression are two distinct bound variables which do not necessarily refer to the same number. 
　　　there are two other indications that fn i n volves a term of the form b . inducting on n in each ca se we get respectively the base cases: 

　　using our deductive system we obtain the f o l lowing protocol: 
thus  for three reasons we are lead to the belief 
we now compare this protocol with the proof of hn. 	that fn involved some term b 	where b is not neces-
we see that in both cases the induction principle 	sarily a. 	we now go back and modify our original 
specialized systems-1: brown note that in the proof of h a skolem function disappears by having a replaced by 1 whereas in the protocol of f no skolem function disappears in this manner. here then is a second indication that a term of the form b or rather b is needed in the fibonacci protocol. 
belief: that fn involves a :  belief fn involves a   to the new belief that fn involves both a and b : 
 belief fn involves a 	+ b   
and this new belief  as we have already seen in section 1  sufficies to find the closed-form solution to the fibonacci function. 
1 summary 
　　　in summary we have described two temporal i n ductive methods  one based on comparing the statement of a problem with the statement of a similar previously solved problem  and the other based on comparing the unsuccessful attempts to solve a problem with the proof of an analogous problem. in either case we have found that inductive reasoning depends on the a b i l i t y to make use of previous solutions. 
　　　we have also seen how the type of belief needed to apply the method of succession refinement to the fibonacci problem might be generated. 
1. conclusion 
　　　we have investigated and described several feasible methods of inductive reasoning which are useful in the domain of solving difference equations. we stress that these methods use no mathematical knowledge in terms of lemmas  strategies or rules other than that which would be available to a simple algebra theorem prover which has only the following rules*. 
1  rules to simplify algebraic expressions. 
1  the logical rules needed to put formulas in conjunctive and disjunctive normal form. 1  the two equality rules: 

1  a mathematical induction principle. 
1  rules to equate the coefficients of various types of expressions.  this a b i l i t y is needed by the method of existential functions  of course  if we were to allow the use of sophisticated mathematical techniques we could easily solve the problems we have considered in this paper. in particular  we could implement a theorem prover based either on the rules of the f i n i t e difference calculus  spiegel   jordan    or on the method of generating functions  lin   bekenbach   knuth   jordan  . 
　　　but this is just what we do not want to do for this would not explain how the mathematical knowledge embedded in these techniques was actually created. in our view of mathematics  we see that this knowledge is basically created by trying to solve a number of problems using only one's general inductive a b i l i t i e s and the current status of one's deductive a b i l i t i e s . then one generalizes and organizes the methods that one has found useful in solving these problems into some sort of deductive calculus  such as for example the theory of f i n i t e difference equations or the method of generating functions. one then adds this calculus to one's 
deductive a b i l i t i e s   henceforth making what were d i f f i c u l t problems quite easy  thus allowing one 
* these rules are embedded in an algebra theorem prover which one of the authors  brown  implemented about a year ago. 
to t r y to solve problems in more d i f f i c u l t domains by repeating this process. 
acknowledgements 
we thank professor b. meltzer for c r i t i c i z i n g a draft of this paper and for arranging for dr. tarnlund to v i s i t the department of a r t i f i c i a l intelligence so that we could collaborate on this research. 
