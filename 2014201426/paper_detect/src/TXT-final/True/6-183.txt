 
in many applications of temporal reasoning we are interested in reasoning incrementally in particular  given a csp of temporal constrains and a new constraint  we want to maintain certain properties in the extended csp  e.g.  a solution   rather than recomputing them from scratch. the point algebra  pa  and the interval algebra  ia  are two well-known frameworks for qualitative temporal reasoning. most of the existing algorithms for pa and the known tractable fragments of ia  such as ordhorn  has been designed for  static  reasoning. in this paper we study the incremental version of some fundamental problems of temporal reasoning  proposing new algorithms that amortize their complexity when processing a sequence of input constraints. after analyzing the role of path-consistency for incremental satisfiability  we propose algorithms for maintaining a solution of a csp over either pa or ord-horn  and the minimal labels of a csp over pa. our algorithms improve the complexity of using existing techniques by a factor of where n is the number of variables involved in the csp. 
1 introduction 
constraint-based qualitative temporal reasoning is a widely studied area of ai in which the most prominent approaches are allen's interval algebra  ia   and vilain and kautz's point algebra  pa  . given a csp of temporal constraints  fundamental reasoning problems are deciding satisfiability of the csp  finding a solution  and computing its  minimal labels . these problems arc np-hard for the full ia  while they are polynomial for pa and for several fragments of ia  such as nebel & burckert  1 ord-horn subalgebra  which is the unique maximal tractable subclass of ia containing all the basic relations. 
　in many applications of temporal reasoning we are interested in  dynamic  or on-line reasoning. for instance  given an initial  possibly empty  csp of temporal constraints  whenever a new constraint is asserted  we want to in maintain a solution of the csp  rather than recomputing it from scratch using a  static  algorithm. 
　the design of algorithms for dynamic polynomial problems is an important research field in operation research and theoretical computer science  e.g.   ausiello et ai  1  . a dynamic problem can be either semi-dynamic or fullydynamic. in the semi-dynamic version we deal with information that is incrementally given  or decrementally retracted . 
in the fully-dynamic version  we deal with both assertions and retractions. typically  the worst-case performance of an algorithm for a dynamic problem is specified in terms of its amortized complexity for a single operation  assertion or retraction   that can be defined as the average runtime per operation over a worst-case sequence of operations  tarjan  1 . 
　the large majority of the algorithms that have been developed for reasoning within tractable classes of qualitative temporal constraints are static. in this paper we investigate the incremental version of some reasoning problems for pa and ord-horn  discussing the behavior of existing techniques and proposing new ones. given a sequence s of  input constraints involving n variables  our incremental algorithms improve the total runtime required for processing s using existing techniques by a factor of  
　in section 1 we give the necessary background on pa and i a. in section 1  after analyzing the use of a path-consistency algorithm for incremental satisfiability checking  we propose new incremental algorithms for finding a solution of a csp over either pa or ord-horn  and for computing the minimal labels of a csp over pa. finally  in section 1 we briefly discuss the fully-dynamic version of the problems considered  and we mention further results and future work. 
1 background on pa and ia 
vilain and kautz's point algebra  consists of three basic relations between time points all possible unions of them where   is the universal relation   and of the empty relations allen's interval algebra  consists of thirteen basic relations between temporal intervals  all possible unions of these relations  and the empty relation. pa and ia are closed under the operations union 
intersection  difference  converse  and composi-
tion  o . the first four operations are defined in the standard way. the composition for two relations can be derived from the transitivity tables of the basic relations in pa and ia. 
　a qualitative temporal constraint satisfaction problem  or briefly temporal csp  in our context is a set of constraints of the kind xru  where x and y are cither point variables or interval variables  and r is either a pa-relation  if x and y are point variables  or an ia-relation  otherwise . 
　given a temporal csp  over either pa or ia  a fundamental reasoning problem is deciding the satisfiability of  is satisfiable if and only if there exists a solution for i.e.  
an assignment of temporal values to the variables of  rational numbers for point variables  pairs of rational numbers for interval variables  such that all the constraints in 1 are satis-

temporal reasoning 	1 

fied. the problem of deciding the satisfiability of will be called psat  if is over pa  and isat if is over ia. the problem of finding a solution for will be called psol  if is over pa  and isol otherwise. 
　a related reasoning problem is finding a scenario that refines a given temporal csp a scenario of a csp is a satisfiable refinement of  where the constraints between all pairs of variables are basic relations. a csp  is a refinement of if and only if and involve the same variables  and for every pair of variables  x y  such that  and 
 any scenario of a satisfiable temporal csp over pa  ia  identifies a total order  of the point  interval endpoint  variables of the csp that is consistent with the constraints of the scenario  and in which point  interval endpoint  variables that must have the same interpretation are mapped to the same position. clearly  from a we can derive a solution for the csp by just assigning to the points  endpoints  of a numbers consistent with their relative order.1 
　any temporal csp  involving n variables can be processed using a cubic time algorithm that refines to an equivalent path consistent csp  montanari  1 . a csp is path consistent if for every subset of constraints involving three variables i  j  and k  the relation  between i and a; is stronger or equal than  i.e.  is a subset of  the composition 
of  
   a temporal csp is minimal if  for every pair of variables i  j  the relation  between i and k is the strongest relations between i and k that is entailed by the csp  i.e.  for each basic  relation in  there exists a scenario for the csp in which rij is refined to f we call the problem of computing the minimal csp pmin for pa  and imin for ia. 
　from a computational point of view  pa and ia have different properties. the reasoning problems introduced above are polynomial for pa  while they are np-hard for ia  vilain and kautz  1 . in particular  psat and psol can be solved in time using van beek's method   while pmin requires time ivan beek  1; gerevini and schubert  1 . these techniques use a graph-based representation of the csp that in  gerevini and schubert  1  is called temporally labeled graph  tl-graph . a tl-graph is a graph with a set of labeled edges  where each edge connects a pair of distinct vertices v  w representing the point variables of the temporal csp. the edges are either directed and labeled or or undirected and labeled   =-constraints are represented by a pair of -constraints   van beek's method for finding a scenario for a satisfiable csp of pa-constrains is based on first identifying the strongly connected components  scc  of the tl-graph representing the csp  cormen et a/.  1  using only its -edges. each scc is then collapsed into a single vertex representing an equivalent class of variables that must be interpreted with the same temporal value. if we omit the -edges from the resultant graph  we obtain a directed acyclic graph that we call the induced precedence 
　　without loss of generality we assume that  if no information between x and y is provided  r is the universal relation  and that for every pair of variables  x  y  such that  
   1 e.g.  we assign an integer i to the points in the first position of o  i + 1 to the points in the second position  etc. if we have a solution  we can derive a total order  and hence a scenario  in a trivial way. graph of the csp. from a topological sort of the vertices of this graph we can easily derive a scenario for the csp.1 
　enforcing path-consistency to a temporal csp requires cubic time and is sufficient to decide psat fladkin and maddux  1   but it does not solve pmin. in order to solve pmin for a csp over pa  in addition to enforce pathconsistency to it  we need to identify particular 1-variable constraint subsets of the path consistent csp containing a -constraint that should be refined to  such subsets are called forbidden subgraphs in ivan beek  1  and diamonds in  gerevini and schubert  1 . 
   regarding ia  several tractable fragments have been identified. the simple interval algebra  sia   van beek  1; ladkin and maddux  1  is formed by the ia-relations that can be translated into a conjunction of pa-constraints between interval endpoints. all reasoning problems for a csp  over sia can be solved by applying the corresponding al-
gorithms to the pa-translation of  the most interesting tractable fragment of ia is nebel and biirckert's ord-horn class . ord-horn subsumes sia and is the unique maximal tractable sub-algebra of ia containing all the basic relations. each constraint c over ord-horn can be translated into a set of disjunctions of pa-constraints of the form p = q. p q or p q  where p and q are endpoints of intervals in c  and at most one literal is of type   =   or given a temporal csp over ord-horn  will denote the csp of pa-constraints formed by the unary disjunctions  pa-constraints  in the point translation of all interval constraints in  
　like psat  isat for ord-horn can be decided in cubic time by using a path-consistency algorithm. isol for ordhorn can be solved in square time  if the input csp is known to be path consistent gerevini and cristani  1   in cubic time otherwise  ligozat  1 . 
　in the rest of the paper  the incremental version of the reasoning problems for a temporal csp is indicated by adding the prefix   i   to the name of the corresponding static problem  e.g.  the incremental version of psol is i-psol. without loss of generality  we assume that the initial temporal csp al-
ready involves all variables  possibly constrained only by the universal relation. moreover  our amortized complexity analysis is based on input sequences of length quadratic in the number of the variables. these assumptions are discussed in an extended version of the paper  gerevini  1 . 
1 incremental tractable reasoning 
1 path-consistency for i-psat and i-isat 
although van beek's method for solving psat requires only quadratic time  when we consider the incremental version of this problem  i-psat   enforcing path-consistency turns out to be more efficient than a simple iterative application of van beek's  static  algorithm. in fact  we can use a pathconsistency algorithm like the one given in figure 1  pc   which was proposed in  allen  1  and slightly reformulated and improved in  vilain and kautz  1; bessiere  1   to incrementally process a sequence of  pa-
　　1 a topological sort for a dag is a linear order a of its vertices such that if v is a successor of w in the graph  then v precedes win a. 

1 	temporal reasoning 


temporal reasoning 	1 

1
　　update-tsort is similar to a technique used by marchetti el ai  in the context of an algorithm for detecting cycles in a dag. 
theorem 1 incremental-pa-sol 	solves 	i-psol 	in 
1 n1  total time  	where n is the number of temporal variables. 

1 	temporal reasoning 

                                                           proof  sketch . since the algorithm eliminates all new diamonds  correctness follows from theorem 1 and fact that constraints. hence  in order to make minimal  it suffices any path consistent csp over pa with no -diamond is mini-

to identify and eliminate all diamonds involving one of these constraints. figure 1 shows the only four possible types of diamonds that can be generated in by the new constraint 
       note that cases  1  and  1  are symmetric and can be reduced to the same case  analogously for  1  and  1  . 
	if 	 and 	then the propagation of  
cannot give rise to new -constraints  and hence in order to make minimal  it suffices to identify and eliminate all new diamonds involving  
　our algorithm for solving i-pmin is given in figure 1. it uses a modification of ipc  called 1pc-1  which like ipc-i is a revision of ipc to keep track of certain constraints generated by the propagation of xry. ipc-1 adds all pairs of variables whose relation has been refined to  to a list l. l is a global variable that is initialized by steps 1 of 
incremental-pa-min to the list containing either  x y   
 y  x  or no pair. a pair of variables is added to l by the subroutine revise-1 of ipc-1  a modification of revise in which after step 1 we perform the following additional steps to update l: 
mal  gerevini and schubert  1  complexity follows from theorem 1 and the fact that the total number of pairs that can enter into l is o n1 .  	
1 	an algorithm for i-isol over ord-horn 
gerevini and cristani  showed that isol for a path consistent csp  over ord-horn can be solved in time by using a solution for the -translation of figure 1 gives an algorithm solving i-isol for which exploits this property and uses incremental-pa-sol. our algorithm requires  total time  while the application from sketch of a known static algorithm each time a new constraint is asserted requires  total time. this cost can be reduced to 1 n1  total time by using ipc combined with gerevini & cristani's algorithm  which is still one order worse than the complexity of the algorithm presented here. 
　our algorithm uses a modification of ipc  called ipc-1  which again is a revision of ipc to keep track of certain constraints generated by the propagation of the new input con-
straint  given the path consistent c s p o f 	the 	 

temporal reasoning 	1 

complexity only for any subsequence of constraint assertions. e.g.  consider an instance of the fully-dynamic version of pmin in which we have k retractions during an input sequence of  assertions. when we process a retraction  we can recompute from scratch the minimal labels  while assertions are processed using our algorithm. the total time complexity is then which is still more efficient than applying van beek's static a l g o r i t h m t i m e s .  
　while in this paper we have not addressed i-imin for ord-horn  very recently we have proved that this problem can be solved in  total time. future work includes incremental algorithms for other tractable classes  krokhin et al  to appear  and a deeper study of fully-dynamic problems. 
