 
we propose a translation approach from modal logics to first-order predicate logic which combines advantages from both  the  standard  relational translation and the  rather compact  functional translation method and avoids many of their respective disadvantages  exponential growth versus equality handling . in particular in the application to serial modal logics it allows considerable simplifications such that often even a simple unit clause suffices in order to express the accessibility relation properties. 
although we restrict the approach here to firstorder modal logic theorem proving it has been shown to be of wider interest  as e.g. sorted logic or terminological logic. 
1 introduction 
today's calculi for modal logics can be divided into two main groups. the first group is concerned with the extension of already existing calculi for classical logic by suitable additional inference rules. typical examples can be found in  fitting  1  where the well known tableau calculus and the sequent calculus are appropriately extended and  wallen  1  in which the connection method is utilized for reasoning within modal logics. 
   the other group tries to exploit the experience and progress made in the development of classical predicate logic calculi and defines a translation morphism from modal logics to classical logic such that calculi which are known to be efficient can be utilized. the simplest one of those certainly is the so-called relational translation method   moore  1   which makes the implicit model semantics explicit in the translation. its disadvantage lies in the size of the resulting formulae which get exponentially bigger than the original ones. 
   based on wallen's ideas  hans jiirgen ohibach and others   ohlbach  1; ohibach  1; auffray and enjalbert  1; farinas del cerro and herzig  1   developed the functional translation approach which avoids exponential growth of the translated formulae. 
   here the number of clauses and literals inside clauses is exactly as big as if the modal operators would have been 
ignored  although  of course  literals get bigger by the addition of extra arguments . the disadvantage of this approach lies in the handling of the modal theory  as e.g. reflexivity  transitivity  symmetry  directedness  which gets encoded by certain equations and thus requires a rather strong equality handling mechanism. however  some of these properties and their combinations allow for the definition of suitable theory unification procedures  although finding such an algorithm is indeed a non-trivial task. 
　the approach proposed in this paper can be viewed as a mixture between the relational and the functional translation method. it is tried to combine their respective advantages and to avoid their disadvantages if possible. to be more precise  it consists of both  a relational translation which does not result in an exponential growth in the number of clauses and a functional translation which does not require that the modal theory has to be described by  more or less untractable  equations. 
　this paper is organized as follows: section 1 is a brief repetition of the modal logic syntax and model semantics. in addition it describes the relational translation formally. section 1 is concerned with the definition of what we call a functional simulator and its application to the result of a relational translation. this result gives rise to some considerable simplifications which are exemplified in section 1. how this result can be extended to varying domains and multiple modalities is shown in section 1 and 1. finally  in section 1  we summarize the effect of the approach. 
1 modal logics 
it is out of the scope of this paper to give an overview over modal logics in general. the reader not familiar with modal logics is referred to  chellas  1  and  hughes and cresswell  1 . 
　nevertheless  at least the notions of interpretations and satisfiability have to be repeated briefly  since they will be needed in later sections. 
　by a modal logic interpretation  we understand a tuple where w is a non-empty set of worlds and is a binary accessibility relation between worlds  is one of these worlds  the actual world    is a variable assignment and is a mapping from worlds to signature structures which consist of a domain and interpretations for the given function and predicate symbols. 
　for convenience let us start with a constant domain structure  i.e. we assume that the domains of the respective signature structures are all identical. thus  if we refer to some domain v we mean the domain common to all signature structures. the case of varying domains will be handled in section 1. 

 1 he cases for the logical connectives and quantifiers are just as in classical first-order predicate logic and are therefore omitted here. 
　the various modal logics known from the literature mainly differ in the properties associated with the respective accessibility relations. the most common accessibility relation properties are reflexivity  symmetry  transitivity  euclidity  seriality  directedness and linearity. all of these properties but one  linearity  will be handled in this paper. 
1 	relational translation 
the idea behind relational translation is to make the implicit semantical parts of modal logic explicit in the predicate logic variant of the given modal logic formula. hence we assume a new sort w distinct from the domain sort d  a new constant l which is supposed to represent the actual  or current  world  a relation symbol r which denotes the accessibility relation and  for every function and every predicate symbol f  p respectively  a new function symbol /'  predicate symbol p'  which accepts one more argument than f  p   namely a world  or actually a term representing a world . 
　the following definition describes the formula morphism which accepts a modal logic f o r m u l a a n d a term w  which denotes a world  and results in a firstorder predicate logic formula. it can be viewed as a direct translation from the satisfiability definition 1 into classical logic. 
the remaining cases are treated by the usual homomorphic extension. the initial call for the translation of an arbitrary formula  then simply is 
　this translation indeed behaves as desired we formulize this by the theorem below. for a proof see eg  moore  1; ohlbach  1; nonnengart  1   
theorem 1 relational translation is sound and complete  i.e. a modal logic formula  is satisfiable if and only if  axioms is  predicate logic  satisfiable  where axioms denotes those formulae which stem from the additional properties of the accessibility relation of the modal logic under consideration  i.e. the accessibility relation properties . 
　the big disadvantage of this relational translation lies in the exponential growth of the resulting formulae such that already fairly simple theorems can hardly be proved because of the enormous search space. in the following 
section we therefore introduce an alternative translation method which has its origin in the functional translation approach  but is rather a mixture between functional and relational translation. 
1 functional simulation 
given a binary predicate r it is possible to split r into predicates r1  r1 ... such that each of the ri denotes a  partially  functional relation. intuitively this can be done as follows: arrange the pairs which belong to r  in a two-dimensional array such that every column is responsible for r-pairs with identical first element having completed this procedure the resulting field contains all element pairs of r and each row of this field represents a subrelation of r which is evidently  partially  functional by construction. thus  instead of  or additionally to  reasoning with r we can reason with the respective subrelations from the above construction. note that it is not really necessary to consider the so generated elements as relations  or partial functions . since by construction there are no more of them than denumerably many  provided r is denumerable  we can equally consider a new sort of the same cardinality and a new function symbol which is supposed to denote something like the applyfunction. 
　the following section provides with a formal definition of such functional simulators and some of its most important properties. 
	nonnengart 	1 

1 	application to the relational translation 
in the sequel we assume that the modal logic formulae are already transformed into negation normal form  i.e. all implications and equivalences are removed and the negation signs occur solely in front of the atoms. evidently  any modal logic formula can easily be transformed into an equivalent one which is in negation normal form. 
　for convenience we also assume in the sequel that we are dealing with serial modal logics unless otherwise stated. the case of non-serial modal logics will be broached in section 1. 
definition 1  the formula morphism let be a modal logic formula in negation normal form. 
　the notation u:f is used for readability instead of apply f  u . it is shorter and reflects the order of the in the original formula. thus  for instance  the formula gets translated into where bracketing to the left is 
assumed. 
　according to the functional simulator properties described above we define the two simulator axioms and 
and 

　what has been gained so far  it is not too hard to see that the new formula morphism behaves as desired provided the two simulator axioms and are added to the clause set. but introduces an equality and one might expect that equations devour all that has been gained so far. 
   fortunately it is not that bad. as the following theorem shows this simulator axiom  is in fact superfluous and thus merely the unit clause from sim1 has to be added to the clause set. 
theorem 1 let m be a  serial  modal logic and let be a m-formula. then 

where axioms denotes the correspondence axioms for the modal logic m and  denotes the usual predicate logic satisfiablity relation. 
proof: 	from theorem 1 we know that 

thus  and because of the fact that for any r there exists a suitable functional simulator  we obviously have that 

simply because under the assumption that fr is a functional simulator of r  i.e. the simulator axioms hold   the two formulae and are logically equivalent. remains to be shown that is in fact superfluous. written in clause form gets: 
where the symbol / is new to the whole clause set. as it is known from the area of equality reasoning  it is never necessary to paramodulate into or from variables. therefore the equality from  needs to be applied only from left to right. however  as a simple induction shows  no term of the form  produced by the translation contains a universally quantified fr-variable and thus  no application of the equation from left to right is possible. since the one direction is not possible and the other direction is not necessary we can simply forget about the whole clause and we are done. 
　we have gained quite a lot already: there is no exponential growth in the number of clauses any more  in fact  the number of clauses generated is exactly as big as if we entirely ignored the modal operators as can be shown by a simple induction; although the clauses themselves might get bigger of course  and the price to be paid is merely the addition of a simple unit clause  namely from nevertheless  we can do even better. 
　another fairly easy induction shows that the result of the translation of some arbitrary modal logic formula does not contain any positive r-literals. this is remarkable  for it allows to examine the theory clauses which stem from the properties of the underlying accessibility relation independently of the clauses produced by the translation. and this indeed leads to some further considerable simplifications. 
1 simplifications 
the main idea behind the following simplifications is as follows: since we know that the translation of modal logic formulae into predicate logic produces clauses which do not contain any positive r-literals  the only possibility where we can have positive r-literals is via the accessibility relation properties  i.e. via axioms and 
　call a clause positive in r if it contains no negative r-literal and consider the set of clauses which are positive in r and which are derivable from axioms and sim1 by finitely many resolution steps. we call this set generated from axioms and  then. now it is not very 
hard to see that the set generated from axioms and sim1 suffices as the modal logic theory since any negative rliteral which occurs in axioms can only be resolved with the help of axioms itself  and r u  u:x  of course . this means that any clauses which generate the same set will do for our purposes as well. for more details see  nonnengart  1 . 
   in the following application to some well known modal logics we will make use of this fact. for historical reasons we name the various modal logics with the help of abbreviations for the respective accessibility relation properties. hence d is used for seriality  b for symmetry  1 for transitivity  1 for euclidity  s1 for reflexivity 
plus transitivity and s1 for reflexivity plus euclidity. 
1 	t h e logics k d a n d k d b 
note that serial ty is already covered by sim1- for kd there exists merely a single unit clause anyway and we are already done. 
for k d b a further unit clause can be derived between sim1 and the symmetry clause which is r u:x  u . thus  a single unit clause for kd  namely r u  u:x   and two unit clauses for k d b  namely r u u:x  and r u:x u   suffice for the description of the respective modal logic theory. 
1 	t h e logics k d 1 a n d s 1 
here the set generated by axioms and sim1 is infinite. nevertheless  its elements have a common structure which is r u  u:x1 . .. :x n   where n   1 for s1 and n   1 for kd1. it is thus very easy to find an alternative clause set which generates exactly the same set  namely the two-literal clause - r   u   v   v r u v:x  plus r u  u  for s1 and r u  u:x  for kd1. the overall effect of this translation is therefore that at least the transitivity clause gets simplified. 
1 	t h e logics k d 1   k d 1   a n d s 1 
for these logics the generated set consists of the clauses 
for 
kd1. again it would be very easy to find a suitable clause set which generates the same clauses and which is simpler than the original theory. however  we can do even better if we exploit a useful result known from the modal logic literature  namely that we are allowed to consider only worlds which are accessible from the initial world by finitly many r-steps. thus  if we instantiate the u from above with i and have in mind that any world whatsoever can be described in the form t:y1 ... :ym for suitable instantiations of the yi we get r u  v  for s1  r u v:x  for kd1 and r u:x v:y  for kd1. these unit clauses for s1 and kd1 even subsume sim1 and hence their respective theories are determined by a single unit clause. r u:x v:y  does not subsume r u u:x   nevertheless it can be used for a simplification getting r i i:x   since all other cases are in fact subsumed by 
r u:x  v:y . note that these simplified versions nicely reflect segerberg's discovery   segerberg  1   that s1 is characterized by the universal accessibility relation  a non-degenerate cluster; therefore r u v  for all worlds u v  and that kd1 and kd1 are characterized by a single world followed by a non-degenerated cluster with the only difference that in the latter the single world has access to any world in the following cluster whereas in kd1 this is not necessarily the case. 
hence  the theories for s1 and kd1 are described by a single unit clause respectively whereas the theory for kd1 requires two simple unit clauses. 
1 	o t h e r i n t e r e s t i n g p r o p e r t i e s 
r is called directed if any two worlds which have a common predecessor in r also have a common successor in r. the clause set generated by this formula and sim1 is infinite. however  the special structure of translated formulae allows to take the simple unit clause 

as a substitute for the directedness axiom. this can be proved by showing that the application of any other generated unit clause can be replaced by several applications of . in fact  this unit 
clause nicely reflects our intention what the directedproperty is concerned for it states that for any two worlds u:x and u.y  which are both accessible from u  there is a world u:y:f u  u:x  u:y  which can be accessed by u:x. 
r is called dense if no world has a unique successor in 
r  different to this very world . by a similar argument to the above this property can be simplified to 

which states that for any u and any u:x accessible from u there is a world u:g u  u:x  between u and u:x; just as we expected. 
1 	n o n - s e r i a l m o d a l logics 
in non-serial modal logics we are not any more allowed to assume that each world is normal with respect to the accessibility relation  hence  the simple unit clause from sim1  which is r u  u:x   is not valid anymore since it might happen that x is not defined on u. therefore  assume a new unary predicate  which is supposed to denote  normality . the simulator axiom sim1 thus has to be changed to  moreover  the information that certain worlds are normal has to be reflected in the formula morphism which becomes: 

unfortunately  some of the nice results we got for serial modal logics are lost this way. so  for instance  we get again an exponential growth in the number of clauses after translation. nevertheless  the simplifications from above still work provided some n-literals are added at appropriate places in the simplified clauses. 
   as an example consider the logic k1 which is characterized by either a single unconnected worlds or a frame as we know it already from kd1. analogous to the argument for kd1 we get the theory clause 
 i.e. the successors of every normal 
world can be accessed by any world. 
　again  the reader interested in more details is referred to  nonnengart  1 . 
	nonnengart 	1 
1 	varying domains 
recall that we assumed constant domains in the definitions 1 and 1. 
if we want to take varying domains into account a further predicate has to be introduced  namely one which expresses existence of domain elements in given worlds. thus the relational translation changes to 

where the predicate symbol e denotes  existence . the other cases remain as in definition 1. the idea is now to functionally simulate this e-predicate just as we did for therl-predicate before. hence  let fe be a functional simulator for e  the formula morphism changes to: 
where gets replaced by u:y. note that we asume that no domain is empty and therefore each world is normal with respect to e. if there are no extra properties given for e then the theory is simply reflected by the simulator axiom 
e u u:x  where the x now ranges over fe-
   usually  however  one is not really interested in arbitrary varying domains. often one considers either increasing or decreasing domains  i.e. either nothing gets lost or no elements get newly generated. the axiom for increasing domains is 

note that again the translation from above produces formulae whose clause normal forms do not contain any positive e-literals. we therefore look for a suitable simplification by examining the clauses generated by 
 this results 
in 

which states that if x exists in world u then it exists in any world accessible by u as well. interestingly this theory clause is not only characteristic for increasing domains in the logic kd but also for kt  kd1 and s1. for the logics kd1 and kd1 we can get even simpler ax-
ioms because of their simple characteristic frames which guarantee identical domains everywhere but possibly for the actual world. this fact can easily be represented by the unit clause e u:x  v:y   where x ranges over fr and y over fe  which states that every domain element  denoted by v:y  is known to any world apart from the initial world i. for i itself we still have the unit clause e u u:x  which can thus be simplified to e i i:x . 
　decreasing domains can be worked out in a similar manner. we omit here the technical details and just provide the result of the possible simplifications. for the logics kd  kt  kd1 and s1 we get the theory clauses and where y ranges over 
fe and x belongs to fr and for kd1 and kd1 we get the two simple unit clauses and with the fe element x and the fr element y. 
　in the non-serial case we are again not allowed to ignore the  normality -property. so  for instance  we get the clause  for k1 and k1  i.e. we have to assure that the fr-variable x is indeed defined on u. this evidently has to be done for any of the above simplifications. we omit details here; the interested reader is referred to  nonnengart  1 . 
1 	multiple modalities 
1.1 	a simple temporal logic 
	consider two kd1-modalities 	and 	where 
is responsible for the future and for the past respectively. moreover assume that there is only one thing said about their connection  namely that the associated accessibility relations  i.e. the  later - and the  earlierrelation  are converse. thus we have as a theory axiom: re u  v  rp v  u  for any two worlds  time instants  u and v. this leads to the following  time-theory : 

because 	of the 	equivalence 	between 	rr u v  	and 
rp v  u   it is not really necessary to consider both predicates  i.e. we can for instance  replace any occurrence of rp in the translated formula as well as in the theory axioms by rf provided the arguments are reversed. we thus get the theory axioms  where r is taken as a shortform for r f   : 

with this we can now start our simplification process which finally results in: 

whether or not these theory axioms should be prefered to those from above is not merely a matter of taste. it is indeed the case that the search space gets smaller in the simplified case because the positive r-literal of the transitivity axiom can unify with arbitrary negative rliterals from the translated formula of the theory axioms whereas the latter theory clauses do restrict this. 
1.1 	multiple agents 
　the logic kd1 seems appropriate for the forrnulization of the belief of agents since it incorporates consistency of beliefs  seriality axiom  as well as positive and negative introspection  transitivity and euclidity axiom respectively . 
   now assume a set of agents where each agent's belief obeys the kd1 properties. a first idea would be to add the kd1 theory clause to the clause set for each of these agents. however  since this would mean that the kd1 properties hold over the whole world structure  we would automatically have that also each agent considers his own and the other's agent's beliefs as consistent with positive and negative introspection. if we do 

not want this  we have to assure that the kd1 properties only hold in the worlds which are accessible for the respective agents. this can be done with the help of a new predicate w which  given an agent and a world tells us whether this world is accessible for the agent or not. formally: for all agents a and all in 
where u ranges over the worlds of the whole universe and xa belongs to the functional simulator of   agent a's belief relation . thus the respective agents theory of belief is then given by 

i.e. the kd1 axiom holds only for those worlds which are accecssible for agent a. for all other worlds we still have  which states that nothing else is assumed for the agent's beliefs. finally  we have to provide the correspondences between w and n which is simply given by:   because of seriality . 
   note that this technique also allows to express mutual beliefs of many agents. to this end  we introduce a mutual belief accessibility relation  which evidently must obey the kd1 properties as well  since each of the agents does . thus the simple unit clause  for all agents a  will do for this purpose. 
   for more details on this issue the reader is again referred to  nonnengart  1 . 
1 summary 
we proposed a translation method from modal logic into first-order predicate logic which allows a considerable simplification of the accessibility relation theory. this approach is some sort of a mixture between the standard relational translation approach and the functional translation method proposed by ohlbach and others. it shows to behave particularly nice in the application to serial modal logics. so  e.g.  the background theories for the modal logics k d   kd1  kd1  and s1 get so simple that even a direct incorporation into the translation morphism becomes possible. 
   a comparison between this approach and the fully functional translation might be interesting at this stage. for the logic kd both methods are identical as can easily be checked. for s1  kd1 and kd1 the mixed approach evidently works better  even if somebody is able to find some suitable theory unification algorithm for these theories  because of the simple background theory described by a single unit clause respectively. what the logics k d b   kd1 and s1 are concerned  we do not have a general answer yet. we have to distinguish between theorem provers which do allow the definition of arbitrary theory unification algorithms and those which don't. in the latter case a rather strong equality handling mechanism is necessary for the functional translation approach and this might cause troubles for the prover. in the former case the functional translation approach will be more efficient in general. nevertheless  we can think of some easy control strategy for the mixed approach in which resolution steps between non-il-literals are allowed only if the r-literals in the resolvent can be eliminated by the theory clauses. we did not yet implement this  however  there is some strong evidence that such a control strategy makes the mixed approach behave only slightly worse  in the worst case  compared to full functional translation. 
　this method  as it stands now  can only be applied to modal logics which have first-order describable accessibility relation properties. part of our future work will be to examine more properties and property combinations which might be useful and/or interesting. 
