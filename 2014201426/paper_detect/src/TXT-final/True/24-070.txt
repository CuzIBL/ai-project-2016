 
a basic feature of intelligent tutoring systems  its  is their ability to represent domain knowledge that can be attributed to the student at each stage of the learning process. in this paper we present a general  first order logic  framework for the representation of this kind of knowledge acquired by the system through the analysis of the student answers. this represantation makes it possible to describe the behaviour of well known itss and to provide a direct implementation in a logic programming language. moreover  we point out several improvements that can be easily achieved by exploiting the features of a declarative approach. in particular  we address the representation and use of the knowledge that the system knows not to be possessed by the student. 
1 introduction 
the goal of intelligent tutoring systems  itss  is to support the learning process of a student on a specific sub 
ject domain. this is usually achieved through a conversational system which aims at providing the student with the knowledge and skills required for solving problems in the domain of interest. the learning status reached by the student is also tested  mistakes are discovered  tlieir causes are diagnosed and eliminated by appropriate remediation actions. 
　itss usually embody a knowledge base built by analyzing the student's responses to tests and problems. this knowledge base  called student model  represents the knowledge attributed by the system to the student and can therefore include explanations of the student's mistakes. such explanations are built by tak ing into account empirical knowledge about students1 mistakes derived from the study of typical student behaviours. the idea is that the its attempts to single out matters that the student may have not well understood and therefore need further attention  for a detailed description of the typology and role of student modelling in itss see for instance  self  1  vanlehn  1  . 
a first part of the work presented in this paper is concerned with a rational reconstruction of the process of building and maintaining the knowledge base representing the system knowledge about the student knowledge in existing itss  with the aim of identifying a domain independent formalization schema that accommodates apparently different approaches. previous results of this work are presented in  cialdea et al.  1  cialdea  1  and show that it is indeed possible to provide a common framework for the specification of some well-known systems and that such a formal specification can be directly translated into a run liable logic program. 
　a further important outcome of this formalization  winch is in the spirit of self's computational mathetics  self  1   is that within a simple declarative framework some previously neglected aspects of the representation and use of the system knowledge about the student become easily available. 
　the main goal of our work is to improve the representation and use of the system knowledge about student  knowledge. we take a deductive approach to representing knowledge  where the information manipulated by the system is represented in knowledge bases  for generality  we consider them to be sets of first-order logic formulae  called contexts   arranged in a met.a-level architecture. this approach originates from our work on reasoning about knowledge and reasoning in a multi-agent scenario  aiello et al.  1  . in the case of itss  we have two agents the system and the student. the interaction between the system and the student can therefore be regarded as a process that enables the system to acquire new knowledge about the student. 
　the process is activated by the answers provided by the student to specific problems. they can be definite answers  either correct or incorrect  or  i don't know'1 answers. typically  existing itss do not analyze  i don't know  answers  that  conversely  can provide useful information about the student's learning status. 
　the analysis of student answers  diagnosis  leads to what we call an explanation. we compute it by finding a derivation for the answer. an explanation can be formed by looking at the student knowledge and at two separate knowledge sources: the expert knowledge  i.e. the knowledge of the teaching domain that the system typically uses to find the correct solution to a problem  and the buggy knowledge  i.e. information about student mistakes  generally expressed in the form of mal 
	aiello  cialdea  and nardi 	1 
rules . the kind of explanation built by the system depends on the answer: correct  incorrect and  i don't know . a correct answer requires to find all possible explanations and select a preferred one. an incorrect answer requires to identify all possible explanations by using buggy knowledge and then to select a preferred one. a  1 don't know  answer requires to identify which knowledge the student is lacking  that would enable him to provide a correct answer. therefore  explanations of  i don't know  answers are given by considering every explanation of the corresponding correct answers. in the rest of the paper we show how this analysis can be phrased in terms of operations on knowledge bases. 
　once the system has found an explanation for the student's answer  the representation of the knowledge the system has about the student should be updated accordingly. the above sketched analysis suggests that the system maintains a representation of what it knows to be known by the student  as well as of what it knows not to be known by the student. 
　the paper is organized as follows. we first discuss the structure of ttss in terms of a deductive approach and present a simple meta-level framework based on 
first-order logic. we then show how the diagnostic behaviour of three well-known ttss proposed in the literature  namely sedaf  aiello and micarelli  1   lms  sleeman and smith  1  sle eman  1   and the 
buggy/debuggy system  brown and burton  1  
burton  1   can be rephrased. we finally address some features that can be considered in order to improve the performance of itss: the exploitation  on the side of the system  of the informative content of the student 
ignorance. 
1 a deductive approach to the representation of student knowledge 
this section describes the meta-level architecture underlying the formulation of the diagnostic principles of itss: the fundamental object-level contexts  the metalanguage and some basic definitions and axioms shared by any met a-theory. 
1 	object-level structures 
the fundamental object-level structures representing the system's knowledge about the teaching domain and the student's learning status are here provided an abstract description. such structures are what the meta-theory reasons about. 
　as already mentioned  we assume that any statement about the teaching domain is represented as a first order formula. such a simplification is made only for methodological reasons and it does not impose an a priori restriction to the approach. for example  domain knowledge can itself be organized into meta-levels  where heuristic principles and reasoning strategies are represented at higher levels  following  vivet  1 ; or else  the cumbersome logical expression of some operations on objectlevel entities can be avoided by using semantic attachments  weyhrauch  1 . 
according to the above assumption  the object-level language is a first order language containing constants  predicates and functions denoting corresponding types of objects in the teaching domain. the expert knowledge and the student's beliefs can thus be represented by sets of first order formulae  called contexts. 
　at the object-level there are two contexts  corresponding to the expert module and the student model of itss: e  that contains formulae denoting correct statements about the teaching domain  and s  containing formulae believed by the student. 
　in a malrule approach  a  bug catalogue  is also considered: at the object-level there is a context  b  containing formulae corresponding to the incorrect beliefs that could possibly be ascribed to a student. it plays the role of a database which the teacher consults when trying to explain a wrong answer given by the student. 
usually   
　contexts e and s can be considered as standard logical theories  in the sense that they contain correct logical inference rules  even if possibly incomplete  and proper axioms representing domain knowledge. for the sake of generality  we do not make any assumption on the kind of logic in such contexts  even if  in actual implementations  it is not full first-order logic  for example  s and e may be production systems or horn clause theories . however  we assume that the two contexts have the same logic. even if such an assumption  that the student and the expert have the same reasoning capabilities  looks quite strong  it seems necessary in order for the system to be able to tell anything about the student's reasoning in the teaching domain. context b has no logical inference rule at all: deductions within b make no sense. hence  the only set of object-level inference rules we consider is that of context e. we do not make any assumption about the consistency of contexts: b is very likely to contain contradictory formulae. the same may happen to s  although its logic is correct. 
　in the sequel  any finite set of object-level formulae will be considered as a context  as well as the union of any pair of contexts. formulae in any context will be called axioms of that context. proofs in any context are built by means of the inference rules in e. 
1 	meta-theory 
we now introduce the basic meta-language and definitions that will be shared by any meta-theory  the generic meta-theory will be called m t   . the meta-language contains suitable constants  functions and predicates allowing the object-level entities to be referred to. among them  the constants e  b s will be used  to denote respectively contexts e  b and s. moreover  the language of mt contains a functional symbol allowing the representation of finite sets of object-level formulae and the predicate  defining the membership relation. mt contains a functional symbol denoting union of contexts  so 
that  if and d e n o t e a n d t h e n  denotes their union.   
　the meta-language contains constants denoting object-level symbols and functional symbols allowing the meta-level coding of object-level complex formulae. if a is an object-level formula  denotes the representation 

　answers given by the student are coded by the metalevel predicate answers  we consider only positive answers  since a question requiring a value as an answer  is turned into a relation instantiated with the answered value  and negative answers can be obtained by negating the question. 
   in order for mt to be an adequate meta-theory for the object-level contexts  the derivability relation in any context has to be definable in m t . as we are interested not only in knowing whether a formula is a theorem of a given context  but also which axioms are effectively used to derive it  the key meta-level formula linking the object-level context c to the meta-theory is the formula derivablcc{x y  with two free variables  such that for any finite set of formulae and formula  if there exists a  non trivial  proof of a in c using exactly the formulae 
in  as axioms  then 	derivable 
　we assume that such a notion of derivability excludes trivial cases  i.e. is a minimal set of axioms from which a can be derived in and is not contradictory. the consistency condition may seem a strong requirement in computational terms  because it is a generally nondecidable predicate. however  in actual systems  the proof procedure used at the object-level usually guarantees both the consistency and the minimality requirements  so that there is no need to check for non triviality of proofs. or else  as it is the case of the three systems described in section 1  consistency can be defined in a more constructive way. in fact  the object domain of such systems is formalized as a production system  where each malrule is associated with a correct rule  so that a set of axioms is contradictory only if it contains either both a correct rule and one of its buggy versions  or two buggy versions of the same correct rule. in such cases  if the predicate buggyversion defines the relation holding between a rule and one of the associated malrules  consistency can be defined as: 

　other basic formulae defining object-level relations in mt are the following: subconjunct   defines the relation holding between a subconjunct and the whole conjunction; for any context c   defines the set of axioms of c. 
　we assume that the meta-theory contains also simple axioms ruling the relations among contexts  such as  for any context c1  c1: 

1 the diagnostic principles of some existing systems 
in this section we show how to express in our metalanguage the diagnostic principles adopted by three existing itss  namely sedaf  aiello and micarelli  1   the two versions of lms  sleeman and smith  1  sleeman  1   and the buggy/debuggy system 
 brown and burton  1  burton  1 . we abstract from some features that are strictly peculiar to a system  in order to point out how the general diagnostic principles can be expressed and compared in our formalism. 
　the meta-theory of each system contains the predicate ascribes representing the result of a meta-level reasoning. different hypotheses on the student's way of reasoning can be expressed by means of the meta-level axioms defining the predicates ascribes-
　let us assume that the student admittedly believes to be true and that we already know how to find out the set  of the axioms in  that best explains then the system can conclude that every formula in must be in s. so  each of the meta-theories corresponding to the diagnostic principles of the systems considered below contains the following axiom: 

the hard task is the definition of the predicate explains. 
as expected  the theories we are now going to consider differ fundamentally in the axioms defining the predicate explains. however  all of them are patterned in the same style. 
1 	the system sedaf 
sedaf teaches students to graph mathematical functions by solving for the characteristics of the function  singular points  asymptotes  maxima  etc . it embeds an expert module consisting of a set of correct rules  a database of malrules and a student module consisting of a set of correct rules and malrules. 
　during each phase in the study of a function  sedaf asks questions to the student. if the student's response is correct  the system assumes that it has been correctly derived and that the student knows all the facts and rules used in the corresponding deduction built by the expert module. so  a first  axiom defining explains is: 

this axioms assumes that there is always a single correct way of proving a correct statement. this corresponds to a design choice made in sedaf  where  like in many other itss  the focus of the diagnostic activity is on finding out reasons for wrong answers  while taking the correct ones more or less for granted. a more articulated version of el could cope with the case of multiple explanations for a correct answer  see for example  cialdea  1  . 
　if the response provided by the student is incorrect  sedaf takes the student's solution as a goal  and tries to build a deduction that leads to the goal  using also malrules. during this process the system interacts 
1 
with the student in order to discriminate among different inference chains  by asking him to confirm which rule/malrule he has actually used. this is described by the following axiom  where test student  represents the fact that the student confirms he believes a. 

　these formal statements compactly describe the diagnostic principles of sedaf. in addition  they point out an incoherence in their application: sedaf assumes that correct responses have been correctly derived  axiom el ; but this principle is not recursively applied when building subproofs of correct statements used to reach a wrong conclusion  as axiom shows; in fact  in such cases  the student is questioned to confirm his use of any rule and not malrules only. 
1 	the system l m s 
lms models students who are learning to solve linear algebraic equations in one variable. the domain knowledge is represented as a production system and both the expert and the student's procedure to solve a problem are represented as ordered sets of production rules. the order in which rules are applied may be relevant; in fact  precedence of operators is modelled by the ordering of rules  e.g.  compute products before sums   rather than by modifications of the rules' preconditions. bugs are represented either as variants of correct rules or as an incorrect order of application of correct rules. the fact that control errors are represented by an incorrect ordering of rules is irrelevant  for our purposes  so we assume that the object domain of lms is represented as an unordered set of production rules  where control is expressed by additional requirements for the applicability of relevant rules and corresponding malrules drop such additional requirements. 
　in lms-1  sleeman and smith  1   a first version of lms  the student is presented with a sequence of problem sets of growing complexity; each of them requires the application of one new rule and it is assumed that if the student has applied a given sequence of rules  either correct or incorrect  in solving a problem set  he will apply the same rules  plus one more  to the probems at the next level. so  the student model is incrementally built: once a partial student model has been inferred  the subsequent one is obtained by the addition of the next correct rule or one of its incorrect variants. 
　it is also assumed that  the set of problems presented to the student at each level is discriminatory  so that it can never happen that two different extensions of the existing student model explain the student's answer. 
　in terms of the meta-language proposed in this work  the diagnostic meta-theory of lms-i is characterized by the following axiom: 

set of problems  at a given level . 
　the second version of lms  sleeman  1  takes into account the fact that  for instance  the ability to apply a correct rule may depend on the complexity of the problem. lms-ii thus rejects the assumption that partial student models are never contradicted. in order to reduce the search space of all possible  ordered  subsets of the rule and malrule set  in an off-line phase  the system generates a complete and non reduntant set of models  retaining only those which give unique results with the predefined problem set. proper subsets of a given model are considered as different models  because they pertain to a different level. so  in particular  the system has a set of expert models  one for each level. in the on-line phase  the student's performance is compared against such models. it is still assumed that the set of problems for each level is adequate to discriminate among all possible models at that level. 
   the on-line phase of lms-ii could be described by introducing a set of expert and buggy theories   which are assumed to 
result from the off-line phase. in that case  a set of rules explains the answer given by the student to a prob-
lem set if  for some i  is a theorem of and is the set of axioms of cj. however  if we abstract from the computational problems dealt with in the off-line phase  we see that the subset of corresponding to the model entailing can equally well be seen as the set of axioms used to prove in the context so  the metatheory embedding the diagnostic principles of lms-ii is characterized by the following axiom for explains: 

note that el is a derivable from e1. 
　of course  the simplicity of e1 is due to the assumption that  is a discriminatory set of problems  so that  in practice  there is not a real diagnostic problem  the emphasis of lms is rather on the reduction of the search space of possible models . 
1 	b u g g y and d e b u g g y 
brown and burton  brown an d burton  1  proposed 
 the buggy model   a descriptive theory of bugs  where students' mistakes in simple procedural skills are seen as symptoms of local modifications  bugs  to the correct procedure. the model was developed and explored in the domain of place-value subtraction. 
　the object domain is represented by a set of goals and methods for satisfying these goals  linked together in a procedural network  where links represent goal-subgoal relations. corresponding to each goal  there are correct and incorrect methods. a student's incorrect behaviour can be reproduced by replacing some correct methods by one of their buggy variants in the basic  correct  network. the same structure can of course be represented by other means and  for our purposes  we consider it as represented by a set of rules. 
　a first naive diagnostic system based on the buggy model compares the student's answers on a given set of problems with the output of each network obtained by replacing a single method with one of its bugs. so  if one single bug can explain the student's answers  it is assumed to be possessed by the student. buggy diagnostic system assumes  like sedaf  that  if part of the solution is correct  then the student achieved it correctly; and  like lms  that diagnosis is fired on the results of a discriminatory test: there can be at most one bug explaining the student's behaviour on the entire test. 
　abstracting from some details  buggy met a-theory is characterized by: 

note that el is derivable from e1 and e1 is derivable from e1. 
   debuggy  burton  1   a development of buggy  is a much more sophisticated diagnostic system  that takes into account both the fact that more than one bug can cause the student's errors and the fact that sometimes there is no hypothesis explaining the student's behaviour completely  so that the system has to find out the model that best explains it. the diagnostic technique in debuggy is quite heavy and we shall only sketch it here  just to show that it can be expressed in the same style as the others. 
   debuggy assumes that simple bugs that form multiple ones can also be detected individually. so  an initial set of hypotheses is generated  containing all single bugs that explain at least one of the student's incorrect answers  for effectiveness reasons  the initial set of hypotheses is then reduced by eliminating bugs subsumed by others and bugs that can be considered as casual matchings. we shall not describe here the criteria used for the reduction . to represent this fact  we emulate the dynamic construction of a new context    the initial set of hypotheses containing simple bugs  by defining: 

this definition allows us to define the predicate derivable  in the obvious way. 
　the elements of the set  of hypotheses are then combined and compound bugs  up to a given depth  are added to the set of hypotheses if they explain more of the student's behaviour than their constituents. a compound bug that is a good candidate to explain  can be defined as a set of axioms in that entails a subconjunct of and is more explicative than any of its subsets: 
here  stands for proper set inclusion; the predicate explainsrnore defines the fact that  if e u ♀ entails the subconjunct of and entails the subconjunct of then is a proper subconjunct of 
 if we abstract from computational problems  in the above definition  can be replaced by b. 
　after the generation of compound bugs  i.e. good candidates   each bug is compared with the others  by taking into account not only the number of predicted answers  but also the number and type of mispredictions and a simplicity criterion. finally  the best of them is chosen as an explanation of the student's behaviour. if we assume that the predicate wins represents the fact that is a better candidate than according to the above quantitative and qualitative criteria  then diagnosis in buggy is performed according to the following: 

　various considerations can be made after the analysis we have just performed. the most relevant one is that the diagnostic principles followed by the three itss can be accommodated in a unique framework that is independent of the domain and largely independent of the particular diagnostic strategy adopted by each system. the three systems essentially differ in the criteria used to choose the best explanations for given answers. this last aspect is somewhat more domain dependent and often neglected. it deserves a more analytical investigation and the use of a formal tool such as the one we propose could be of great value and effectiveness. 
1 r e p r e s e n t a t i o n a n d use o f   i d o n ' t k n o w   a n s w e r s 
most existing intelligent tutoring systems concentrate their diagnostic effort on the justification of incorrect answers provided by students  in terms of bugs present in their procedures or misconceptions in their knowledge. correct answers are rarely analysed in some depth.  1 don't know  answers  even when admitted  only trigger the system to give help to the student  and no information about the student's knowledge is inferred from them. the logical treatment presented in the previous sections accommodates the diagnostic principles coping with both correct and incorrect answers provided by the student. in this section we briefly show how a tutoring system can gather information about what the student does not know and how it can be used. so  we assume that the student is given the possibility to tell the system  i don't know . of course  as shown in the sequel  information about the student's ignorance can also be obtained indirectly  by met a- reasoning. 
1 	an explicit representation of the student ignorance 
both during the diagnostic and teaching-remediation phase  the system has to access what the student knows and what he doesn't know. it must  be remarked  however  that the system cannot be assumed to have complete knowledge about the student beliefs1. so if a formula is not contained in s  the system cannot infer that the student does not believe  it only means that the system does not know whether the student believes  or not. in other words  s contains what the system knows that the student believes. for this reason  we add 
　　1 the system's knowledge may also be partially incorrect  in the sense that a previous hypothesis can reveal to be inconsistent with a new assertion of the student. this problem will not he touched upon within this work. 
1 
a fourth component to the object level structure: context u  containing what the system knows the student does not know1. 
　considering the nature of the diagnostic task in this wider view  two main cases can be distinguished: 
1. the system has to discover the reasons why the student believes something  either correctly or not ; 
1. the system has to explain where the student's ignorance of some facts originates from. 
in the first case the system has to deal with an abductive task: if the student believes are all the possible  non- trivial  proofs of   that can be constructed in then only one of them has to be chosen. let's say that is the preferred one; if are all the axioms of eub used in   then it can be concluded that the student believes all of point 1 above will be called the abductive aspect of diagnosis. 
　the second case represents the dual situation. if the student does not believe and if are all the possible proofs of that can be constructed in then the system can reasonably conclude that the student is not able to construct any of them. in this case there is no abductive problem  being the system's taskpurely deductive. however  there is again a choice problem  at the level of the subsets of axioms used in the proofs: if are all the axioms of used in   for then surely the student does not believe the conjunction but this does not mean that the student lacks all of so an extra investigation should be performed in order to single out which of them the student actually does not know or possibly believes to be false. this second aspect of diagnosis will be called deductive. 
　it is worth noting that the abductive aspect of diagnosis is treated very roughly in sedaf  just ask the student what he thinks  and it is absent in both versions of lms and in buggy. the difficulty of finding good criteria for abductive diagnosis supports our conviction that it is important to have a formal language to state them clearly and explicitly. note that standard techniques for abduction only consider sets of assumptions  while here we are interested in general axioms used in the derivation. 
1 	the deductive aspect of diagnosis 
answers given by the student are now coded by the metalevel predicate answers  where t is either the constant yes or dontknow. the axioms dealing with the deductive aspect of diagnosis allow the system to conclude that the student does not believe something  i.e. ascribe  
     1 usually  existing itss identify the student's ignorance with the systems's ignorance about the student. mizoguchi  mizoguchi et al.  1  recognizes the importance of the distinction  by use of four truth values for statements a about the object domain: true  the student knows  false  the student knows  unknown  the student does not know  and fail  which is a meta-truth attribute  referring to the system's knowledge  the system cannot attribute any of the previous three values to  
the first axiom states that if the student answered  1 
note that a is a conjunction of axioms in   so axiom d1 can lead to conclude that the student does not have a misconception. even if such information is usually of no importance for the teaching and remediation activities  it can be useful when the student model is used during the diagnostic process itself. in fact  knowing that the student cannot have used a given misconception can help to reduce querying/testing the student about her or his beliefs  when an incorrect answer has to be explained. 
　the second axiom of the deductive aspect of diagnosis concludes that the student does not believe something from the fact that he believes something else. it states in fact that if the student believes  to be true  then he does not know any way to derive the negation of in other words  axiom d1 states a minimal consistency hypothesis about the student's knowledge. 

the problem of reducing the size of an unbelieved conjunction has been addressed in  cialdea  1 . 
　the explicit representation of what knowledge the student has shown to lack can guide the choice of a suitable teaching action. for instance  if the system realized that the student has not mastered some basic abilites yet  it tries to remediate before going on with more complex concepts and problems. 
　information about what the student does not know can also help in the diagnostic task. for example  if the student believes to be true and can be derived using 
exactly the axioms in then can be considered as a good explanation of only if it does not contain any statement that the system has checked to be unknown to the student. so  the following requirement could be added to the preconditions of any axiom enabling a conclusion of the form explains 

a complete example showing how to state axioms for the abductive aspect of diagnosis that take into account such principle can be found in  cialdea  1 . 
1 	c o n c l u s i o n s 
in this paper we have presented a formal framework for the description of diagnostic principles in itss. it consists in a set of object level  first order  theories along with a meta-theory  where reasoning about reasoning is described. our formal framework has been used to ra tionally reconstruct the diagnostic process of some well known existing itss and to propose further extensions to the diagnostic capabilities of itss  namely by allowing them to make also a sense out of  1 don't know  answers provided by a student  i. e. answers that point out student's ignorance. 
　there are several good reasons supporting the usefulness of a formal approach to the problem of specifying general principles for student modelling in educational systems. first  the meta-language we have proposed is a design tool for itss: it can be used as a high level specification language  when conceiving the student modelling features of a concrete system. 
　second  the high level specifications thus obtained can be directly implemented in a  logic  programming lan-
guage; the prototypes constructed that way help to test the validity of the specifications and give the possibility of modifying them rapidly  at low cost  as described in  cialdea et ai  1 . 
   furthermore  the proposed framework can be an instrument for a comparative study of existing systems: the analytical study of the student modelling guidelines adopted in existing systems leads to point out enhancements and enlargements of such principles. to support this last claim  in the paper we have shown how the analytical study and logical formulation of the principles informing meta-reasoning in the student modelling component of educational systems can lead to take into account something new: the possible uses of the student model during the diagnostic process itself  in order to reduce querying/testing the student and the possible uses of an explicit representation of what the system knows the student does not know. 
　our proposal can be extended and refined in many directions. as a first example  different strategies for treating the set of malrules can be easily accommodated. for instance  it would be easy to organize misconceptions into subsets  possibly ordered according to a likelihood criterion. a further important issue that can be addressed is the treatment of student's contradictory beliefs. and more: what happens if the student is allowed to have incomplete and possibly incorrect reasoning ca pabilities  
　it is of great importance to deal with such issues in a uniform way  by exploiting both the theoretical and software engineering advantages of a logic specification. 
acknowledgements. the work reported here has been partially supported by esprit basic research action compulog and by progetto finalizzato  sistemi informatici e calcolo parallelo  of the italian national research council. 
r e f e r e n c e s 
 aiello et a/.  1  luigia aiello  daniele nardi  and marco schaerf. reasoning about knowledge and reasoning in a meta-level architecture. international journal on applied intelligence  in press. 
 aiello and micarelli  1  luigia aiello and alessandro micarelli. sedaf: an intelligent educational system for mathematics. applied artificial intelligence - an international journal  1: 1  1. 
 brown and burton  1  john s. brown and richard r. burton. diagnostic models for procedural bugs in basic mathematical skills. cognitive science  1: 1  1. 
 burton  1  richard r. burton. diagnosing bugs in a simple procedural skill. in d.ii. sleeman  j.s. brown  editors  intelligent tutoring systems  pages 1  academic press  london  1. 
 cialdea et al  1  marta cialdea  alessandro micarelli  daniele nardi  james c. spohrer  and luigia aiello. a rational reconstruction of the diagnostic 
process in intelligent tutoring systems. in proc. of 
	pacific 	rim 	international conference 	on 	artificial 
intelligence pricai '1  nagoya  japan  november 1. 
 cialdea  1  marta cialdea. meta reasoning and student modelling. in e. costa  editor  new directions for intelligent tutoring systems  nato asi series f  springer-verlag  in press. 
 mizoguchi et ai  1  riichiro mizoguchi mituru ikeda  osarnu kakusho an innovative framework for intelligent tutoring systems. in p. ercoli and r. lewis  editors  artificial intelligence tools in education  north-holland  amsterdam  1. 
 self  1  john a. self. student models - what use are they  in p. ereoli and r. lewis  editors  artificial intelligence tools in education  north-holland  amsterdam  1. 
 self  1  john a. self. computational mathetics: the missing link in intelligent tutoring systems research  in e. costa  editor  new directions for intelligent tutoring systems  nato asi series f  springer-
verlag  in press. 
 sleeman and smith  1  derek h. sleeman and m.j. smith. modelling students' problem solving. artificial intelligence   g: 1  1. 
 sleeman  1  derek h. sleeman. inferring student models for intelligent computer aided instruction. in r.s. michalski  j.g carbonell  p.m. mitchell  editors  machine learning: an artificial intelligence approach  pages 1  morgan kaufmann  palo alto  california  1. 
 vanlehn  1  kurt vanlehn. student modeling. in m. c. poison  j. j. richardson  editors  foundations of intelligent tutoring systems  pages 1  lawrence erlbaum associates publishers  hillsdale  new jersey  1. 
 vivet  1  martial vivet. reasoned explanations need reasoning on reasoning and reasoning on the student. in p. ereoli and r. lewis  editors  artificial intelligence tools in education  pages 1  north-holland  amsterdam  1. 
 weyhrauch  1  richard w. weyhrauch. prolegomena to a theory of mechanized formal reasoning. artificial intelligence  1: 1  1. 
1 
1 	principles of al applications 

aiello  cialdea  and nardi 



