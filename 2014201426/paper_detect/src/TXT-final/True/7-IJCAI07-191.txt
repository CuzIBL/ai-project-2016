
we add a limited but useful form of quantification to coalition logic  a popular formalism for reasoning about cooperation in game-like multi-agent systems. the basic constructs of quantified coalition logic  qcl  allow us to express properties as  there exists a coalition c satisfying property p such that c can achieve   . we give an axiomatization of qcl  and show that while it is no more expressive than coalition logic  it is exponentially more succinct. the time complexity of qcl model checking for symbolic and explicit state representations is shown to be no worse than that of coalition logic. we illustrate the formalism by showing how to succinctly specify such social choice mechanisms as majority voting  which in coalition logic require specifications that are exponentially long in the number of agents.
1 introduction
game theoretic models of cooperation has proved to be a valuable source of techniques and insights for the field of multi-agent systems  and cooperation logics such as alternating-time temporal logic  atl   alur et al.  1  and coalition logic  cl   pauly  1  have proved to be powerful and intuitive knowledge representation formalisms for such games. many important properties of cooperative scenarios require quantification over coalitions. however  existing cooperation logics provide no direct facility for such quantification  and expressing such properties therefore requires formulae that are exponentially long in the number of agents. examples include expressing the notion of a weak veto player  wooldridge and dunne  1  in cl  or solution concepts from cooperative game theory such as nonemptyness of the core in coalitional game logic  agotnes  et al.  1 . an obvious solution would be to extend  for example  atl  with a first-order-style apparatus for quantifying over coalitions. in such a quantified atl  one might express the fact that agent i is a necessary component of every coali-
tion able to achieve   by the following formula:

however  adding quantification in such a naive way leads to undecidability over infinite domains  using basic quantificational set theory we can define arithmetic   and very high computational complexity even over finite domains. the question therefore arises whether we can add quantification to cooperation logics in such a way that we can express useful properties of cooperation in games without making the resulting logic too computationally complex to be of practical interest. here  we answer this question in the affirmative.
¡¡we introduce quantified coalition logic  qcl   by modifying the existing cooperation modalities of cl in order to enable quantification. in cl  the basic cooperation constructs are  meaning that coalition c can achieve  1; these operators are in fact modal operators with a neighbourhood semantics. in qcl  we replace these operators with expressions  and  p  ; here  p is a predicate over coalitions  and the two sentences express the fact that there exists a coalition c satisfying property p such that c can achieve   and all coalitions satisfying property p can achieve    respectively. thus we add a limited form of quantification to cl without the apparatus of quantificational set theory. we show that the resulting logic  qcl  is exponentially more succinct than cl 

while being computationally no worse with respect to the key problem of model checking.
¡¡the remainder of the paper is structured as follows. after a brief review of cl  we introduce a language for expressing coalition predicates  and show that the satisfiability problem for this languageis np-complete. we then introduce qcl  and give its complete axiomatization. we show that while qcl is no more expressive than coalition logic  it is nevertheless exponentially more succinct  in a precise formal sense. we then extend the language of coalition predicates to talk about the cardinality of coalitions  and show that the corresponding completeness and succinctness results also hold for qcl over this extended language. we illustrate qcl by showing how it can be used to succinctly specify a social choice mechanism  which in cl requires specifications that are exponentially long in the number of agents; we then round off with some conclusions.
1 coalition logic
since qcl is based on pauly's coalition logic cl  pauly  1   we first briefly introduce the latter. cl is a propositional modal logic  containing an indexed collection of unary modal operators and  c   where c is a coalition  i.e.  a subset of a given set of agents ag. the intended interpretation ofis that c can achieve    or  that c is effective for  . formulae of cl are defined by the following grammar  with respect to a set ¦µ1 of boolean variables  and a fixed set ag of agents :

where p ¡Ê ¦µ1 is an atomic proposition and c a subset of ag. as usual  we use parentheses to disambiguateformulaewhere necessary  and define the remaining connectives of classical
and
   
¡¡a model m for  over ¦µ1  ag  is a triple where
  s = {s1 ... so} is a finite non-empty set of states;
  e : 1ag ¡Á s ¡ú 1s is an effectivity function  where t ¡Ê e c s  is intended to mean that from state s  the coalition c can cooperate to ensure that the next state will be a member of t; and
  ¦Ð : s ¡ú 1¦µ1 is a valuation function.
call the set of all models general models  denoted by gen. it is possible to define a number of constraints on effectivity functions  depending upon exactly which kinds of scenario they are intended to model  pauly  1  pp.1 . unless stated otherwise  we will assume that our models m are weak playability models m ¡Ê wp  where effectivity functions are outcome monotonic  i.e.   c   ag  s ¡Ê s  x y   s  if x ¡Ê e c s  and x   y   then y ¡Ê e c s   and moreover that effectivity functions satisfy pauly's weak playability conditions  pauly  1  p.1 . an interpretation for cl is a pair m s where m is a model and s is a state in m. the satisfaction relation  |=cl  for cl holds between interpretations and formulae of cl. we say that coalition c can enforce   in s if for some t ¡Ê e c s     is true in all t ¡Ê t. that is  c can make a choice such that  irrespective of the others' choices    will hold. formally  the satisfaction relation is defined by the following inductive rule  we assume the cases for p    negation and disjunction are clear :
 such that  t ¡Ê t 
we have m t |=cl  .
the notions of truth of   in a model  m |=cl    and validity in a class of models c  c |=cl    are defined as usual. the inference relation cl for cl is given in table 1  taken from  pauly  1   but adapted to our notation : it is sound and complete with respect to the class of weak playability models wp   pauly  1  p. 1  .
1 quantified coalition logic
propmp	
distrif we have n agents in ag  and one wants to express that some coalition can enforce some atomic property p  one needs to table 1: axioms and rules for coalition logic. in  prop   ¦× is a propositional tautology  in axiom  ¡Í   we require c   c  and for  s   c1 ¡É c1 =  .
enumerate 1n disjunctions of the formp. the idea behind quantified coalition logic  qcl  is to avoid this blowup in the length of formulas. informally  qcl is a propositional modal logic  containing an indexed collection of unary modal operators. the intended interpretation ofis that there exists a set of agents c  satisfying predicate p  such that c can achieve  . we refer to expressions p as coalition predicates  and we now define a language for coalition predicates; qcl will then be parameterised with respect to such a language. of course  many coalition predicate languages are possible  with different properties  and later we will investigate another such language. throughout the remainder of this paper  we will assume a fixed  finite set ag of agents.
coalition predicates: syntactically  we introduce two atomic predicates subseteq and supseteq  and derive a stock of other predicate forms from these. formally  the syntax of coalition predicates is given by the following grammar:
p ::= subseteq c  | supseteq c  |  p | p ¡Å p
where c   ag is a set of agents. one can think of the atomic predicates subseteq c  and supseteq c  as a stock of 1|ag|+1 propositions onefor each coalition  which are then to be evaluated in a given coalition co. the circumstances under which a concrete coalition co satisfies a coalition predicate p  are specified by a satisfaction relation  |=cp   defined by the following four rules:
co |=cp subseteq c  iff co   c
co |=cp supseteq c  iff co   c
co |=cp  p iff not co |=cp p
co |=cp p1 ¡Å p1 iff co |=cp p1 or co |=cp p1
now we can be precise about what it means that  a coalition co satisfies p : it just means co |=cp p. we will assume the conventionaldefinitions of implication  ¡ú   biconditional      and conjunction  ¡Ä  in terms of   and ¡Å.
¡¡coalitional predicates subseteq ¡¤  and supseteq ¡¤  are in fact not independent. they are mutually definable - due to the fact that the set of all agents ag is assumed to be finite. we then have that   agotnes and wal-  icki  1   subseteqsupseteq {i}  and supseteqsubseteq. the reason that we include both types of predicates as primitives is a main motivating factor of this paper: we are interested in succinctly expressing quantification in coalition logic.
¡¡we find it convenient to make use of the following derived predicates:
eq c ¡Ôsubseteq c  ¡Ä supseteq c subset c ¡Ôsubseteq c  ¡Ä  eq c supset c ¡Ôsupseteq c  ¡Ä  eq c incl i ¡Ôsupseteq {i} excl i ¡Ô incl i any¡Ôsupseteq   neic incl i  ei c  ¡Ô  nei c 
the reader may note an obvious omission here: we have not introduced any explicit way of talking about the cardinality of coalitions; such predicates will be discussed in section 1.
¡¡we say that a coalition predicate p is ag-consistent if for some co   ag  we have co |=cp p  and p is ag-valid if co |=cp p for all co   ag.
¡¡the model checking problem for coalition predicates is the problem of checking whether  for given co and p  we have co |=cp p  clarke et al.  1 . it is easy to see that this problem is decidable in polynomial time. the satisfiability problem for coalition predicates is the problem of deciding whether p is consistent. we get the following.
theorem 1 the satisfiability problem for coalition predicates is np-complete.
quantified coalition logic:	we now present qcl. its formulae are defined by the following grammar:

models for cl and qcl are the same. the satisfaction relation for the new operators is as follows.

e c s  such that  t ¡Ê t  we have m t |=qcl  .
m s |=qcl  p   iff  c   ag: c |=cp p implies  t ¡Ê e c s  such that  t ¡Ê t  m t |=qcl  .
readers familiar with modal logic may wonder why we did not introduce the universal coalition modality  p   as the dual. in fact such a definition would not serve the desired purpose. consider the pattern of quantifiers in the semantics of . taking the dual  ¡¤  would yield the quantifiers      rather than the desired     pattern. of course  this does not mean that  p   is not definable from  and the propositional connectives  in some other way. in fact: 
thus  for expressiveness  together with the propositionals are adequate connectives  and  p   is definable. the reason we introduce the box cooperation modality as a separate construct is one of the main motivations in this paper  as discussed before for the different predicate operators: succinctness of expression.
example qcl expressions: to get a flavour of the kind of properties we can express in qcl  we present some example qcl formulae. first  note that the conventional cl/atl ability expression is defined simply as: 
we can also succinctly express properties such as the solution concepts from qualitative coalitional games  wooldridge and dunne  1 . for example  a weak veto player for   is an agent that must be present in any coalition that has the ability to bring about  : wveto
of course  if no coalition has the ability to achieve    then this means that every agent is a veto player for  . a strong veto player for   is thus an agent that is both a weak veto player for   and that is a member of some coalition that can achieve  : veto i    ¡Ô wveto
a coalition c is weakly minimal for   if no subset of c can achievesubset. and c are simply minimal if they are weakly minimal and also able to bring about. finally  gc c  says that c is the grand coalition: gc c  ¡Ô  supset c  ¡Í.
model checking: model checking is currently regarded as perhaps the most important computational problem associated with any temporal/modal logic  as model checking approaches for such logics have had a substantial degree of success in industry  clarke et al.  1 . the explicit state model checking problem for qcl is as follows:
given a model m  state s in m  and formula   of qcl  is it the case that m s |=qcl   
notice that in this version of the problem  we assume that the components of the model m are explicitly enumerated in the input. it is known that the corresponding problem for coalition logic may be solved in polynomial time o |m| ¡¤ | |   pauly  1  p.1   as may the explicit state atl model checking problem  alur et al.  1  . perhaps surprisingly  the qcl model checking problem is no worse:
theorem 1 the explicit state model checking problem for qcl may be solved in polynomial time.
of course  this result is not terribly useful  since it assumes a representation of m that is not feasible  since it is exponentially large in the number of agents and boolean variables in the system. implemented model checkers use succinct languages for defining models; for example  the reactive modules language  rml  of alur et al  alur and henzinger  1 . assuming an rml representation  coalition logic model checking is pspace-complete  hoek et al.  1   and thus no easier than theorem proving in the same logic  pauly  1  p.1 . it is therefore more meaningful to ask what the model checking complexity of qcl is for such a representation. we only give a very brief summary of rml - space restrictions prevent a complete description; see  alur and henzinger  1; hoek et al.  1  for details.
¡¡in reactive modules  a system is specified as a collection of modules  which correspond to agents. here is a  somewhat simplified  example of an rml module:
module toggle controls x
	init	
	update	x  x
  x   x
this agent toggle  controls a single boolean variable  x. the choices available to the agent at any given time are defined by the init and update rules. the init rules define the choices available to the agent with respect to the initialisation of its variables  while the update rules define the agent's choices subsequently. the init rules define two choices for the initialisation of this variable: assign it the value  or the value ¡Í. both of these rules can fire initially  as their conditions    are always satisfied; in fact  only one of the available rules will ever actually fire  corresponding to the  choice made  by the agent on that decision round. with respect to update rules  the first rule says that if x has the value   then the corresponding choice is to assign it the value ¡Í  while the second rule 'does the opposite'. in other words  the agent non-deterministicallychooses a value for x initially  and then on subsequent rounds toggles this value.
¡¡the following can be proved by an adaption and extension of the proof in  hoek et al.  1 .
theorem 1 the model checking problem for qcl assuming an rml representation for models is pspace-complete.
this result  we believe  is potentially much more interesting than that for explicit state model checking  since it tells us that qcl model checking is no more complex than coalition logic even for a realistic representation of models.
expressive power: we now argue that qcl is equivalent in expressive power to coalition logic. to begin  consider the following translation ¦Ó from qcl formulae to cl formulae. for atoms p andis the identity  and it distributes over disjunction  and moreover:

¡¡we already know from above that we have a translation in the other direction: let us call it ¦Ä  with defining clause
.
as an example  suppose ag = {a b c} and let p =
 supset {a} ¡Åsupset {b} ¡Åsupset {c}  ¡Ä eq {a b c} . now  consider the qcl q while ¦Ä ¦Ó ¦×   = q. hence  one
can think of ¦Ä ¦Ó     as a normal form for    where the only coalition predicate in   is eq. that qcl and cl have equal expressive power follows from the fact that the two translations preserve truth.
theorem 1 let m be a model  and s a state  and let   be a qcl formula  and ¦× a cl formula. then:
1. m s |=qcl   iff m s |=cl ¦Ó   
1. m s |=cl ¦× iff m s |=qcl ¦Ä ¦× 
p	cp supseteq   
p	cp supseteq c  ¡Ä supseteq
  supseteq
p	cp supseteq c  ¡ú  subseteq
p	cp subseteq c ¡È {a}  ¡Ä  supseteq a 
¡ú subseteq c 
p	cp subseteq c  ¡ú subseteq
prop
mp¦Äax	
¦Är	table 1: axioms and rules for quantified coalition logic.
the condition of p1 is c   for p1 it is c 
in prop is a propositional tautology; ax in ¦Äax is any claxiom  r in ¦Är is any cl-rule
axiomatization: the translations introduced above provide the key to a completeaxiomatizationof qcl. first  recall pauly's axiomatization of coalition logic  table 1 . given this  and the translations defined previously  we obtain an axiom system for qcl-formulae as follows. first  qcl includes the ¦Ä translation of all the cl axioms and rules  and axioms that state that the ¦Ä-translation is correct: see the lower part of table 1. on top of that  qcl is parametrised by an inference relation cp for coalition predicates. the axioms for this in table 1 are taken from  agotnes and walicki  1   .
theorem 1
1.   agotnes and walicki  1     cp is sound and complete: for any p  |=cp p cp p
1. for any cl formula
1. let   be any qcl formula. then
and  in particular .
theorem 1  completeness and soundness  let   be an arbitrary qcl-formula. then: iff |=qcl  
examples of derivable properties include:
	|=qcl  p1   ¡ú  p1  	when |=cp p1 ¡ú p1
|=qcl   p1   ¡Ä  p1    ¡ú  p1 ¡Å p1  
these illustrate that we not only have primitive modal operators  but also some kind of operations over them  like negation and conjunction. this of course is very reminiscent of boolean modal logic  where one studies algebraic operations like complement  meet and join on modal operators  gargov and passy  1 . we will not pursue the details of the connection here.
succinctness:	theorem 1 tells us that the gain of qcl over
cl is not its expressivity. rather  the advantage of qcl is in its succinctness of representation. for example  for the qcl formulaq  the translated cl formula is exponentially longer  since it has to explicitly enumerate all coalitions in ag. is it however generally the case that ¦Ó    is shorter than    since the translation does some computations under |=cp  this is in general not the case. for instance  if p = supseteq {a}  ¡Ä supseteq {c}  ¡Ä supseteq {b}  ¡Ä  subseteq {a b c}  ¡Å subseteq {a b d}    thenq would have as a ¦Ó-translation q  which is shorter than the original qcl-formula ¦×. but then again  ¦Ä ¦Ó ¦×   is a qcl formula that is equivalent to ¦×  but that has a size similar to ¦Ó ¦× .
¡¡to make this all precise  let us define the length of both qcl and cl formulas    as follows:
	 	=	1
	 	=
	 	=	
coalsize
with
prsize subseteq c  =coalsize c  + 1prsize supseteq c  =coalsize c  + 1prsize  p =prsize p  + 1prsize p1 ¡Å p1 =prsize p1  + prsize p1  + 1coalsize c =| c |¡¡let   and ¦× be x and y formulas  respectively  where x and y both range over cl and qcl. then we say that they are equivalent with respect to some class of models if they have the same satisfying pairs m s  that is  for each m s in the class of models it is the case that m s |=x   iff m s |=y ¦×. this definition naturally extends to sets of formulas.
¡¡in the following theorem we show that qcl is exponentially more succinct than cl  over general models. this notion of relative succinctness is taken from  lutz  1   who demonstratesthat public announcementlogis is more succinct than epistemic logic.
theorem 1
there is an infinite sequence of distinct qcl formulas  1  1 ... such that  not only is the cl formula ¦Ó  i  equivalent to  i for every i ¡Ý 1  but every cl formula ¦×i that is equivalent  with respect to general models  to  i has the property.
1 coalition size
as we noted earlier  an obvious omission from our language of coalition predicates is designated predicates for expressing cardinality properties of coalitions. in this section  we explore extensions to the framework for this purpose. the obvious approach is to introduce primitive coalition predicates geq n   where n ¡Ê n  with semantics as follows:
c |= geq n  iff |c| ¡Ý n
given this predicate  we can define several obvious derived predicates  see also  agotnes and alechina  1    for a discussion of a similar language .
gt n ¡Ôgeq n + 1 lt n ¡Ô geq n leq n ¡Ôlt n + 1 	maj n 	¡Ô	geq
	ceq n 	¡Ô	 geq n  ¡Ä leq n  
the first natural question is whether geq n  is definable in qcl. indeed it is:
	geq	supseteq c 	 1 
c ag |c|¡Ýn
however  we again see that such a definition leads to exponentially large formulae  which justifies extending the predicate language of qcl with an atomic coalition predicate geq n  for every n ¡Ê n. call the resulting logic qcl ¡Ý   and let |=cp¡Ý and |=qcl ¡Ý  denote the satisfiability relations for qcl ¡Ý  predicates and qcl ¡Ý  formulae  respectively. once again  the gain is not expressiveness but succinctness. as another example of the added succinctness  consider the cl formulap. in qcl this cannot in general be written by any less complex formula than subseteq c  ¡Ä supseteqp  but in qcl ¡Ý  it can be simplified somewhat to supseteq  which in general is simpler since one of the enumerations of the agents in c is replaced by a number .
¡¡a subtle but important issue when reasoning with the logic is the way in which the natural number argument of the geq ...  predicate is represented. suppose   following standard practice in complexity theory   that we represent the argument in binary. now  we ask whether a given coalition predicate p is satisfiable  where p contains a constraint geq n . now checking the satisfiability of such constraints is not obviously in np. the problem is that the witness c to the satisfiability of p is exponentially larger than the constraint geq n . of course  if we express the natural number n in unary  then this is not an issue. but unary is not a realistic or practical representation for numbers. it turns out  however  that we do in fact get np completeness for the satisfiability problem also for qcl ¡Ý   although the argument requires some more work. the reason is that we can use an efficient encoding of the witness c. this was shown by  agotnes and  alechina  1  for a similar problem  cf. section 1 .
¡¡let ag p  and subp p  denote the set of agents  and the set of sub-predicates  respectively  occurringin a predicate p.
lemma 1 any satisfiable qcl ¡Ý  predicate p is satisfied by a coalition consisting of no more than 1 + maxp agents  where 1 + maxp equals
max {|ag p | max {geq n  : geq n  ¡Ê subp p } } 
theorem 1 the satisfiability problem for qcl ¡Ý  coalition predicates is np-complete.
it is straightforward to lift the translation ¦Ó from qcl to
cl to the case when also the additional predicates of qcl ¡Ý  are allowed  and it is easy to see that theorem 1 holds also for qcl ¡Ý  formulae. for axiomatisation  we only need to add axioms for the geq n  predicates to the predicate calclulus. that can be achieved simply by adding  1  as an axiom

table 1: extra predicate calculus axioms for qcl ¡Ý .
schema. a more  direct  axiomatisation of geq n  is shown in table 1  taken from  agotnes and alechina  1   . let cp¡Ý denote derivability in the qcl predicate calculus  from table 1  extended with the axioms in table 1. the following is easily obtained from a similar result in  agotnes and  alechina  1 :
lemma 1 the qcl ¡Ý  predicate calculus is sound and complete: for any qcl ¡Ý  predicate p  |=cp¡Ý p   cp¡Ý p
let denote derivability in the system obtained by replacing cp with cp¡Ý in the definition of qcl  table 1 .
theorem 1  completeness and soundness  let   be a qcl ¡Ý -formula. then: iff |=qcl ¡Ý   
¡¡to illustrate the use of qcl c  for reasoning about multiagent systems  consider the expression of majority voting:
an electorate of n voters wishes to select one of two outcomes ¦Ø1 and ¦Ø1. they want to use a simple majority voting protocol  so that outcome ¦Øi will be selected iff a majority of the n voters state a preference for it. no coalition of less than majority size should be able to select an outcome  and any majority should be able to choose the outcome  i.e.  the selection procedure is not influenced by the  names  of the agents in a coalition . one outcome must be selected  but both outcomes should not be selected simultaneously.
we express these requirements as follows. first: any majority should be able to select an outcome.
¡¡¡¡¡¡¡¡¡¡¡¡  maj n  ¦Ø1  ¡Ä   maj n  ¦Ø1  no coalition that is not a majority can select an outcome.

either outcome ¦Ø1 or ¦Ø1 must result.

both outcomes cannot be selected simultaneously.

notice that majority voting cannot be succinctly specified using regular coalition logic.
1 related work and conclusions
quantified coalition logic adds a limited but useful form of quantification to coalition logic  which is computationally tractable. the motivation is succinctness rather than expressiveness: qcl is exponentially more expressive than cl.
¡¡while first-order temporal logics have been studied in the literature  and cl can be seen as the next-time fragment of atl which again is a generalisation of the branchingtime temporal logic computational tree logic  ctl   we are not aware of any other works on quantification in cl or atl. lately  there has been some work on generalising the coalition modalities in another direction: to explicitly include actions and strategies  van der hoek et al.  1; agotnes  1 	 .
¡¡opportunities for future work include a more detailed understanding of the relationship between qcl and boolean modal logic.
