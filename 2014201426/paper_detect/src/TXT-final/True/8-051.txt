using relational operators to structure long-term memory 
	alan l. 	tharp and g i l b e r t k. krulee 
the technological i n s t i t u t e 
	northwestern 	u n i v e r s i t y 
	evanston  	i l l i n o i s 
summary 
	 nouns  	in n a t u r a l language passages. 	the other 

     this paper describes a system for  rememberi n g   a s t o r y or passage in english and f o r the subsequent r e t r i e v a l of responses to questions. 
although it functions as an i n f o r m a t i o n r e t r i e -
c l a s s   denoted q    consists of words that are l o g i c a l connectives: most of them are conjunctions which  in t r a d i t i o n a l grammar  connect sentences. the r e l a t i o n a l operators  g'   bind sentences i n t o l a r g e r semantic u n i t s . 

v a l system  it is a l s o intended as a model f o r long-term human memory. i n f o r m a t i o n is stored in the form of predicates and property l i s t s . in t r a n s l a t i n g from n a t u r a l language  the system c a r r i e s out a t r a n s f o r m a t i o n a l analysis of each sentence and i d e n t i f i e s i t s deep s t r u c t u r e i n t e r p r e t a t i o n . this grammatical analysis is e s s e n t i a l to the i d e n t i f i c a t i o n of the predicates as w e l l as r e l a t i o n s h i p s among them. 
　　　the f i r s t two subsystems carry out the grammat i c a l a n a l y s i s . a t h i r d i d e n t i f i e s the p r e d i cates and property l i s t s   determines a time and p r i o r i t y s t r u c t u r e   forms a l o g i c a l map of r e l a t i o n s h i p s among p r e d i c a t e s   and eliminates some predicates based on an assignment of p r i o r i t y . the f o u r t h subsystem is used to answer i n q u i r i e s about the stored i n f o r m a t i o n . 
     the method is i l l u s t r a t e d w i t h references to one s t o r y t h a t has been processed and w i t h examples of questions that might be asked. 
     keywords and phrases: memory  i n f o r m a t i o n r e t r i e v a l   r e l a t i o n   r e l a t i o n a l operations  p r e d i c a t e   i n f o r m a t i o n r e t r i e v a l   question-answering system. 
     this paper describes an i n f o r m a t i o n r e t r i e v a l system although it may a l s o be i n t e r p r e t e d as a s i m u l a t i o n of long-term memory. more s p e c i f i c a l l y   the system simulates the a b i l i t y to read a 
     s t o r y or some form of connected m a t e r i a l w r i t t e n in e n g l i s h   to store a r e p r e s e n t a t i o n of t h a t s t o r y   and l a t e r to be able to answer questions about it based on the a b i l i t y to r e c a l l . 
     in designing t h i s system  we have been i n f l u enced by some r e l a t e d studies which have used an intermediate formalism f o r the s t o r a g e . o f i n f o r -
m a t i o n . such systems include baseball   sad sam   sir   deacon   altair   safari  1and the systeras1developed by woods   rosenbaum   and hillman . the r e l a t i v e success of these e f f o r t s i n d i c a t e s that an intermediate formalism is an important p a r t of the s i m u l a t i o n . in a d d i t i o n   each of these systems accepts n a t u r a l language  english  i n p u t s . the system described in t h i s paper a l s o allows n a t u r a l language inputs and usee r e l a t i o n a l operators as an intermediate f o r malism. 
     a r e l a t i o n a l operator connects two e n t i t i e s in a q u a l i t a t i v e manner. two classes of r e l a t i o n a l operators are used in c o n s t r u c t i n g the model. the f i r s t class is denoted e and cons i s t s o f v e r b s   which u s u a l l y j o i n e n t i t i e s 
       the f i r s t l e v e l formalism of a predicate l o g i c is used to represent each sentence of an i n put passage. the r e l a t i o n a l operators are the key elements in the p r e d i c a t e s   which provide the basic memory structure  for the model. a sentence may be transformed i n t o a two-place predicate which is w r i t t e n e  a b   where a is the r e l a t i o n a l operator ** is the deep s t r u c t u r e subject of the sentence  and 1* is the deep s t r u c t u r e obj e c t of the sentence. if  t  is n u l l   the sentence is imperative. if 1 is n u l l   the sentence is i n t r a n s i t i v e . i f and b are both n u l l   the p r e d i cate represents a p a r t i c i p l e used as an argument of another p r e d i c a t e . 
     sentences j o i n e d by the r e l a t i o n a l operators  g   are t r e a t e d as n-place p r e d i c a t e s   where n 
is the number of sentences connected by a s p e c i f i c operator. for example  the l i n k e d . sentences  s   and s  and s   may be represented: 
	＊ a 	1 	s 	1 	1 	1 	1 	1 
some operators which connect sentences have precedence over o t h e r s . for example  the r e l a t i o n a l operator   i m p l i c a t i o n     represented by the l o g i c a l connectives   i f . . . t h e n     is more b i n d i n g than the r e l a t i o n a l operator   a n d .   
       in t r a n s l a t i n g from n a t u r a l language i n t o a series of p r e d i c a t e s   the system c a r r i e s out for each sentence a t r a n s f o r m a t i o n a l analysis and assigns to each a s t r u c t u r a l d e s c r i p t i o n repres e n t i n g i t s deep s t r u c t u r e i n t e r p r e t a t i o n .  see jacobs and rosenbaum f o r a d e t a i l e d d e s c r i p t i o n of t r a n s f o r m a t i o n a l theory which includes the concepts of deep and surface s t r u c t u r e .   the just t i f i c a t i o n f o r t h i s grammatical analysis i s essent i a l l y as f o l l o w s . given a k e r n e l sentence  one can e a s i l y t r a n s l a t e from english i n t o a p r e d i c a t e . kernel sentences are c l o s e l y r e l a t e d to a c t i v e d e c l a r a t i v e sentences such t h a t the verb names the p r e d i c a t e and the subject and p o s s i b l y the object of the verb become the arguments of the p r e d i c a t e . when transformations are applied to k e r n e l sentences  they complicate the r e l a t i o n s h i p between sentence and p r e d i c a t e . for 
example  the passive t r a n s f o r m a t i o n reverses the order of the arguments; by using more complex t r a n s f o r m a t i o n s   one creates sentences which may c o n t a i n two or more k e r n e l sentences. given a deep s t r u c t u r e i n t e r p r e t a t i o n of a sentence  one can r e a d i l y i d e n t i f y the k e r n e l sentences as w e l l as the r e l a t i o n s h i p s among them and the process of t r a n s l a t i n g i n t o a series of predicates is f a c i l i t a t e d . 

-1-

　　　the system has been used to process c h i l dren's non-fiction stories about famous inventions taken from childcraft1 and makes use of four subsystems. the edit component accepts passages 
which have been manually translated into a restricted subset of english  and these restrictions are necessary because of the limiations inherent in the second subsystem for carrying out the gram-
matical analysis. 	 the appendix contains the translated form of the passage  what a bother.   edit replaces pronouns with their corresponding nouns according to the heuristic  replace a pronoun with the most recent noun of the same gender.  the pronouns may have referents across sentence boundaries. 	edit then isolates the sentences and forms a map to record the logical relationships among them. 
　　　in the second subsystem  petrick's recognition procedure programmed in lisp for transformational grammars ' is used to assign structural descriptions to the input sentences isolated by edit. before the sentences can be analysed  however  it is necessary to apply manually an inverse number agreement transformation snd an inverse verb-affix transformation. in addition  
words such as participles  plurals  and verbs in the past tense have to be separated into their constituent morphemes before the analysis can be performed. 	although the grammar chosen for the system was the most extensive one available at the time  it contains many features which l i m i t the class of sentences that it can process. 	the gram-
mar cannot handle such items as sentence fragments  possessive or reflexive pronouns  most prepositional .phrases and i t s a b i l i t y to handle adjectives and adverbial phrases is limited. clearly  the capabilities of the system could be expanded by the elimination of these snd then restrictions from the grammar. 
　　　within i t s l i m i t s   the recognition procedure assigns to the sentences structural descriptions representing their deep structures.. for example  the sentence   the store-owner shoved the papers   
would be assigned the structural description: 
s1 np det def the   n store-owner   
              aux auxa tns past     vp v shove   np det indef s   n paper   . 
this lisp s-expresslon corresponds to the tree diagram in figure 1. 

the symbols used as nodes in the tree structure are defined in table 1. the symbol  s1  specifies that the structure describes the nineteenth sentence in a passage. 

　　　digest  the system's third component  has two sections. the f i r s t segment of the routine forms property l i s t s and predicates snd assigns p r i o r i ties to the predicates. digest scans the structural descriptions of a sentence  such as the one above  and searches for the verb. if the verb is a copula  be   the structural description is converted into a property l i s t . if the verb is not a copula  v   the structural description is converted into a predicate. the second segment orders the predicates and then condenses and e l i -
minates information. 
　　　to i l l u s t r a t e how digest operates  the structural description of the sentence represented in figure 1 w i l l be converted into the intermediate formalism. the structural description is decom-
posed into a noun phrase 
　　　 det def the   n store-owner   an auxiliary 
 auxa tns past    
and a verb phraae 
 v shove  np det indef s   n paper  . 
the noun  store-owner  is isolated from the noun phrase snd becomes the f i r s t argument of the predicate. 
the verb phrase is decomposed into the verb 
 shove  and the noun phraae  np det indef s   n paper    the verb is the relational operator which w i l l be used in the formation of the predicate. the noun  paper  is isolated from the second noun phrase and is labeled as argument two of the predicate. with the second argument isolated  the predicate representation of the sentence is complete: predicated - shove store-owner paper . 
　　　instead of forming a predicate  digest forms a property l i s t if the sentence  such as  the eraser would be handy always   has a copula verb. 

-1-

the recognition procedure would assign to the sentence the structural description: s1 n  det def the   n eraser   aux auxa tns pres   m would    vp be pred adj handy   advb always  . 
a tree diagram corresponding to this analysis appears in figure 1  

the structural description is again decomposed i n to the noun phrase 
　　　　　　　 det def the   n eraser     the auxiliary 
　　　　　　　 auxa tns pres  m would   and the verb phrase 
be pred adj handy  advb always . 
the noun  eraser  is isolated from the noun phrase  and the auxiliary is again ignored. 
　　　when the verb phrase with the copula is decomposed  the adjective  handy  is isolated as a 
member of the class  pred   and the adverb   a l ways  is also isolated. in forming the property l i s t   both the adjective and the adverb are considered as values of the attributes which they describe. how these attributes  properties  are categorized is explained in the discussion of digest's lexicon. the adjective  handy  specifies the property of expedience; while the adverb  always  specifies the property of frequency. the noun  eraser   isolated previously  is l a beled as the name  head  of the l i s t . the property l i s t formed is eraser  expedience handy  frequency always . 
　　　the property l i s t is compared with a l l previously formed property l i s t s   and if an identical l i s t exists  no action is taken. 	however  if the l i s t is a new one  it is added to the set of pro-
perty l i s t s for the passage and labeled with the letter  l  followed by an identifying number. the system w i l l process more complicated sentences such as  the store-owner who was hyman llpman simp l i f i e d wirting using a pencil.  the structural description for this sentence is given in figure 1 and from it a suitable series of predicates and property l i s t s w i l l be obtained. 


-1-

　　　the lexicon  internalized dictionary  for digest  which is used in the preparatory segment of the routine  has two classes of entries: one for adjectives and adverbs  and one for verbs. the definitions of adverbs and adjectives are used in forming property l i s t s ; while the definitions of verbs contain information for assigning p r i o r i ties to the predicates digest has formed. 
　　　the entries for adjectives and adverbs are constructed on a principle similar to that used in constructing a thesarus. a thesarus  rather than defining words  groups them on the basis of simil a r i t y into approximately 1 categories. in setting up the lexicon for digest  a more stringent requirement was established: the categories would be mutually exclusive. since an adjective or adverb may then appear in one and only one category  assigning words to categories tends to be d i f f i cult and somewhat arbitrary. the categories chosen are combinations of the categories in roget's thesarus for example  the two categories  heat and cold  were combined into one named  heat;  cold is the lack of heat. each dictionary entry consists of the word  i t s part of speech  either adjective  adj  or adverb  adv  and its attribute category. 
　　　verbs provide the second type of entry in the lexicon for digest. the entry consists of the verb  a notation which indicates whether it is transitive  vt  or intransitive  vi   and a p r i ority number which indicates the relative importance of the verbs in a passage. digest uses this p r i o r i t y number along with several other factors in order to provide an index of the relative importance of each predicate in forming the 
memory structure. to the best of our knowledge  no empirical data exlats to support our procedure for the assignment of p r i o r i t i e s ; it should be interpreted as an educated  guess  about how one 
might evaluate the relative importance of each predicate in a given passage. the following factors are used in the assignment of p r i o r i t i e s . 
 a  syntactic class of the verb: transitive verbs are more important than intransitive verbs  which  in turn  are more important than equational verbs  be  become  f e e l   seem.   .   . 
1 
 b  semantic class of the verb  kats : a c t i v i t y verbs  eat  speak  walk  are more important than process verbs  grown  freeze  dress   which in turn are more important than state of being verbs  sleep  wait  suffer . 
 c  semantic sub-class of the verb: verbs of a physical nature  chase  run  are more important than verbs of a mental nature  think  remember  within the same semant i c class. 
 d  attache ment of a preposition to the verb: a preposition attached to a verb reduces the verb's t r a n s i t i v i t y or forcefulness. 
 e  number of meanings of the verb: 	the information content of a verb is inversely proportional to the number of its menaings. 
1 
 f  frequency of use of the verb  kochen  	the information content of a verb is inversely proportional to the frequency of its use. 
　　　after the individual verb  relational operator  p r i o r i t y numbers have been assigned and stored in the lexicon  they are used in digest's computation of sentence  predicate  p r i o r i t i e s . three other factors  in addition to that of relational operator p r i o r i t y   are also used in deter-
mining predicate p r i o r i t y . 
　　　these are the precedence level of the relational operators   i f . . .then  and  or  etc.  as 
previously defined; the location of a sentence in a passage with those at the beginning and end receiving a higher p r i o r i t y and higher p r i o r i t y is given to active sentences over their passive equivalents. 
　　　the assignment of predicate p r i o r i t i e s   making use of the formula 
predicate priority-relational operator verb  p r i o r i t y 
+ relational operator   q   p r i o r i t y 
1- location p r i o r i t y 
- correction for passive 
completes the f i r s t segment of the digest routine. 
　　　condensing the predicates into the most easily remembered information involves several different processes. the predicates are f i r s t ordered in a time-priority structure for the i n i t i a l elimination and condensation. to determine the moat important person of the passage  the predicates are then represented as a connected graph. a centrallty .index as defined by harary  norman  and cartwrlght is computed for each argument. this index is used in order to identify the most important person. the most important person hss the highest centrallty index while the main idea is that predicate with the highest p r i o r i t y . after this determination  the predicates are arranged in a matrix for further elimination and f i n a l storage. the time and p r i o r i t y structure is a linear time axis on which the predicates and their assigned p r i o r i t i e s are ordered. along i t   the tenses are ordered as follows: past perfect  simple past  present perfect  present  future perfect  and simple future. the auxiliary part of a sentence  isolated in the f i r s t segment of the routine and denoted by the symbol aux  is interrogated to determine the tense of the verb used in a sentence.* 

-1-

　　　once the tense of a verb is determined  the predicate which corresponds to the sentence containing the verb is placed upon one of six tense l i s t s . each l i s t is push-down: the most recent item added to the l i s t appears at the top. after a l l the sentences of a passage have been converted into the predicate notation and placed on the tense l i s t s   the l i s t s are joined together in the reverse order of the tense l i s t i n g above. the resulting ordering along a time axis produces the time and p r i o r i t y structure. 
　　　the completed time and priority structure is used twice in the condensation. first it is scanned for predicates with priorities less than onehalf the largest p r i o r i t y . since predicates with such low p r i o r i t i e s are evaluated as not important to the main or supporting themes in the passage  they are eliminated. next  the time and p r i o r i t y structure is checked for identical predicates. since1 predicates that occur more often in a passage are more likely to be remembered  the p r i o r i t i e s of identical paredlcates are increased. 
　　　the predicates which remain after the i n i t i a l condenstaion are converted into a series of connected graphs  and from these graphs  the most important person  character  or idea in a passage is determined. 
　　　for the efficient r e t r i e v a l   straight-forward revision  or simple addition of a predicate  the graph structure is stored in an n x m matrix  where n equals the number of distinct f i r s t arguments of predicates in a passage  and m equals the number of distinct second arguments. the entry for each element of the matrix contains an ordered set of three fields. the f i r s t field denotes the name  number  of the predicate; the second  the name of the relational operator  verb  joining the two arguments of the predicate; and the t h i r d   the predicate's p r i o r i t y number. 
　　　once the information about the predicate is stored in the matrix  the final condensation can be made. to determine the f i n a l p r i o r i t y of the predicates  the most important argument is located. for each predicate that contains this argu-
ment  the p r i o r i t y is increased. with the final p r i o r i t i e s assigned  another search of the predicates is made  and a l l predicates with priorities less than one-half of the largest priority are eliminated. 
　　　after the final condensation  the following information is then available from the digest routine for use as a data base in the retrieval section of the system: 
 1  the matrix containing the information about the predicates  
 1  the set of property l i s t s   
 1  the set of secondary  embedded  predicates  
 1  the time and p r i o r i t y structure  
 1  the logical map formed by edit  with predicate and property l i s t names  numbers  substituted for the appropriate sentences. 
　　　using the snobol programming language and operating with a cdc 1 computer  digest's analysis of the passage  what a bother  took 1 seconds to execute using 1 octal locations of computer central memory. the average time per statement was 1 ms. 
　　　in the fourth subsystem of the text-based information-retrieval system  information obtained from the data base output of digest is used to answer inquiries about the natural language passages that were inputs to the edit routine. 	this retrieval routine has not been imple-
mented; instead  manual simulations of its functions have been performed. 
　　　the routine accepts two kinds of inquiries: questions and imperatives. the questions are inquiries about a single predicate whereas the imperatives are inquiries about the relations of one sentence  predicate  to another in the passage. the questions are parsed according to the same procedure used for the input passages; hence the questions must also be stated in the same restricted subset of english. one advantage of parsing over the keyword matching used in many retrieval systems is that parsing allows a question to be phrased in several ways and yet be 
mapped into the same predicate. mapping the questions into the same type of predicate used to represent the input sentences allows a straightforward method of retrieval. since the imperatives  on the other hand  deal with more than one predicate  the predicate formalism obtained from the parsing output is not useful in answering the second type of inquiry. hence keywords 
were used in analyzing imperatives. 
　　　throughout the retrieval segment  inquiries are answered individually. if an answer cannot be determined  the following is printed out:  i do not know the answer to your inquiry  question : could you please rephrase i t .   if an answer can be located  both answer and inquiry are printed out. 
　　　inquiries seeking information from one predicate f a l l into two categories: the yes no question and the wh question. as the name implies  yes-no questions can be answered with either  yes  or  no.  wh questions are introduced by an interrogative pronoun  who  what  when  where  which  and are usually answered with a noun phrase. both categories are subdivided into several question types. 
-1-　　　two types of yes-no questions are differentiated according to whether the verb is a copula or a non-copula. 	when the verb is not a copula  the question is parsed and transformed into a predicate. the storage matrix is searched to determine if the predicate exists. the element of the matrix indexed by the predicate's two argu-
ments is scanned to discover if it contains the predicate's relational operator. if it does  the answer is  yes;  if not  the answer given is  yes;  if not  the answer given is  no.  if an element with the given indices is not found  the  i do not know  answer is printed out. 
　　　the other type of yes-no question  that with a copula verb  is also parsed  but it is transformed into a property l i s t instead of a predicate. the set of property l i s t s is searched to determine if a l i s t with the appropriate name has the attribute-value pair specified. if a property l i s t with the given name is not found  the answer i s    i do not know.  
　　　the second major category of questions has six basic types. an interrogative pronoun from one of three functional classes introduces each wh question  which may bgve either a copula or non-copula verb. sledd   whose classification has been used in the retrieval routine  calls the wh words  interrogative words   rather than pronouns  because they also function as adjectives or adverbs. examples of these three functions include: 

a wh question is converted into either a predicate or a property l i s t   and an unknown is sought. if the verb is a non-copula  the question is converted into a predicate with the unknown as one of the arguments. the storage matrix is then searched for possible values of the unknown. if the verb is a copula  the question is converted into a property l i s t whose listname is unknown. in this case  the set of property l i s t s is scanned for possible answers. 

from the storage matrix  especially from the prior i t i e s . an imperative inquiry is handled by locating the keywords in a command. the keyword  give  always introduces an imperative. representative examples of inquiries and responses for the paasage  what a bother  are given in the appen-
dix. in addition  deductive capabilities could be added to the system as in the information r e n trleval system of green and raphael kuhns also has chosen a predicate logic to rorm the data base for his deductive proposal and his method of question answering by computer would use theoremproving techniques to deduce non-explicit answers from the data base. such techniques of deduction could also be incorporated into this informationretrieval system  since it also represents sentences with predicates. 
appendix 
 what a bother  translated into the restricted 
subset of english. 1 
　　　the store-owner could not find the eraser. he rummaged through the papers that were scattered on the desk that he had been writing on. 
he frowned angrily as he shoved around the papers. he became impatient because the eraser was missing. 
　　　the store-owner was tired and he was hungry because he had worked a l l day. he worked in a store that sold stationery. but he could not go to the home u n t i l he finished figuring. he kept 
s record which told how many items were sold each day. 
　　　as he finished writing in the book  s l l things went wrong. he made mistakes that needed erasing. as he reached for the eraser  it disappeared among papers on the desk. it bounced across the floor. 
　　　the store-owner groaned as he picked up the evasive eraser. he looked at the rubber piece he was holding. 
　　　he wasted some time as he looked for the eraser. other people who use pencils must waste some time as they chase erasers. erasers should be convenient as we are w r i t i n g . 
　　　the store-owner picked up a pencil and he looked at the top. pencils having erasers that f i t t e d into tops could be made. if a small eraser was glued at the top that a pencil has  then it would be handy always when it was needed. 
　　　the store-owner who was hyman lipman simplified writing using a pencil. 
original version from the 1 edition of childcraft-the how and why library  used with permission of field enterprises educational corporation. 
1-

i n q u i r i e s   i   	and responsesfr  	f o r the passage 
 what a bother  
i: did the store-owner waste time  r: yes. 
i: 	who could not 	f i n d the eraser  
r: 	t do not know  	. 	.# 
i: where was the small eraser glued  r: at the top that a p e n c i l has. 
i: 	give the main t o p i c of the s t o r y . 
r-: 	the store-owner rummaged through the papers that were s c a t t e r e d on the desk that the store-owner 	has been w r i t i n g on. 
r : a small eraser was glued at the top that a p e n c i l has implies the eraser would be handy always when the eraser was needed. 
i: was the store-owner hungry  r: yes. 
i: 	what was evasive  
r: 	the eraser was evasive. 
i: who kept a record which t o l d how many items were sold each day  
r: 	the store-owner. 
i: give what i m p l i e d the eraser would be handy always when the eraser was needed. 
r: 	a small eraser was glued at the top that a p e n c i l has. 
i: 	which store d i d the store-owner work in  r: 	the store that sold s t a t i o n e r y . 
i : 	where d i d the store-owner f i n i s h w r i t i n g   r: 	i do not know . 	. 	. 
i: 	which people waste time  r: 	people who use p e n c i l s . 
i: 	did the store-owner shove around the papers  
r: 	i do not know . 	. 	. # 
i: who wasted time  r: the store-owner. 
i: 	where were the papers scattered  
r: on the desk t h a t the store-owner had been w r i t i n g on. 
i: 	which eraser is handy  
r: 	the always eraser is handy. 
i: was the eraser handy never  r: no. 
i: 	who was hyman lipman  
r: 	the store-owner was hyman lipman. 
i: 	give the r e l a t e d t o p i c s of the s t o r y . 
r: the store-owner who was hyman lipman s i m p l i f i e d w r i t i n g u s i n g a p e n c i l . 
note: # attached to an output i n d i c a t e s that a predicate w i t h t h i s i n f o r m a t i o n many have been eliminated by digest. 
