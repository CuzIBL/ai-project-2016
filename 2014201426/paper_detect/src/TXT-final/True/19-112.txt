 data type. 
ctaskfligible  self  a semanticproceduremetaunit supers  taskprocess ingproc 
               messagepass ingprotin terpproc     msg  select-if resume-if  msg-pos-answ   select-if t drop not-yet fail  
　　　　　　　 resume-if t drop not-yet fail   def au 1 t-msg-answ   select-if t     resume--i f t   
not-in-range-event  select-val-not-in-range   new  a messagepassingcase selector select-if send-to task:instance t  select task   
drop  do not select  not-yet  make task suspended  fail  exit instantiation system   ...j 
	fig. 	1: task eligible  unit 
c. 	discussion 
　　when designing semantic constructs  the programmer must have already acquired a good 
understanding of the application domain. semantic editors appear as local mutation mechanisms able to turn an existing construct into a class of 
different useful and meaningful constructs. what constitutes a meaningful mutation must be decided in advance for each construct. meaningful mutations can be seen as modifying some previous assumption made during program design. this idea may be fruitful for further developments of this approach. 
　　this explains why with semantic constructs the programmer is not designing a single program  but a class of potential programs any of which can become real by appropriate semantic editing. this helps enforce a kind of design for change. 
　　the programmmer s apprentice  uses plans to capture middle level programming knowledge. our semantic constructs are aimed more at representing problem specific knowledge. this makes semantic editing possible and distinct from what is ment in  1 by knowledge-based editing. this distinction also explains the use of a special plan language in  and the use of a more general representation language for semantic constructs. the draco  system also uses problem oriented languages  but its major goal is to achieve reuasbiiity and the technology used 
qui te different. 
barbuceanu  trausan-matu  and molnar 1 


1 	knowledge representation 
