 
this paper describes an approach to robotic control that is patterned after models of human skill acquisition. the intent is to develop robots capable of learning how to accomplish complex tasks using designer-supplied instructions and self induced practice. a simulation is presented in which a rule-based system supervises the training of a neural network and controls the operation of the system during the learning process. simulation results show the interaction between rule-based and network-based system components during various phases of training and supervision. 
introduction 
neural networks have been shown to be very efficient at learning from experience. however  there area number of problems to be overcome before they become useful components of truly autonomous learning systems. presently  training data must be supplied by an outside operator who must closely supervise the learning process. also  if the system containing the neural network is required to perform its task during learning  a provision must be made to control its operation during this period. we have developed an automated approach to solving these problems in which a rule based system supervises the training of a neural network and controls the operation of the system during the learning process. the operation of this system exhibits properties which are similar to the stages of motor learning in humans in which control shifts from an explicit  verbally oriented representation to an implicit reflexive representation and execution. 
   for a preliminary demonstration of these concepts  a simulation has been constructed in which a two link manipulator is taught how to make a tennis-like swing. a schematic of this approach is illustrated in fig. 1. the control system first determines how to make a successful swing using rules alone. it then teaches a neural network how to accomplish this task by having the network observe 
   * this work was supported by the james s. mcdonnell foundation. 
and generalize on the rule-based task execution. following initial training  a rule based execution monitor evaluates the neural network performance  and re-engages rulebased swing-maneuver control whenever errors due to changes in the manipulator or its operating environment necessitate retraining of the network. the rule-based system thereby ensures proper task completion while neural network re-learning takes place. the simulation shows the interaction betweeen rule-based and network based system components during various phases of training and supervision. 

phases of skill acquisition 
it is well known that humans pass through various levels of competence as motor skills are acquired. fitts and posner  define three phases of skill learning: 1  the cognitive  early  phase  wherein a beginner tries to understand the task  1  the associative  intermediate  phase  where patterns of response emerge and gross errors are eliminated  and 1  the autonomous  final  phase  when task 
	handelman  lane and gelfand 	1 
execution requires little cognitive control. adams f 1  defines two stages of motor learning: 1  the verbal-motor stage  where corrections are based on verbal descriptions of how well the task is being accomplished  and 1  the motor stage  where conscious behavior eventually becomes automatic  and attentional mechanisms pick out only those channels of information relevant to learning. brooks  points out that there are numerous structures in the brain associated with motor learning. centers involved in emotion  attention  memory and motor control all participate. within this system the cerebellum is particularly concerned with coordination and skill acquisition. although it is not well understood at this time whether control of motor learning specifically passes between various structures in the motor system it is known  however  that fine motor control cannot be learned or executed without the participation of the cerebellum. 
   the distinctions between various stages of motor learning and control are also found in more general cognitive skill acquisition and memory. kupfermann  differentiates between reflexive and declarative memory and learning. task execution based on reflexive memory and learning relate specific responses to specific stimuli. learned functions appear automatic and require little or no thought. declarative memory and learning can usually be expressed in verbal statements. execution of tasks based on declarative memory usually requires evaluation  comparison and inference. most complex tasks attempted for the first time usually require some form of declarative reasoning. 
   anderson  has modelled the transition between the cognitive and associative stagesoffittsand posnerf 1  as a knowledge compilation process whereby a more general declarative form of task knowledge is converted into a specific procedural representation. during the transition from declarative to procedural processing  operational production rules become more condensed and task specific. in anderson's model the final shift to the most autonomous form of processing is accomplished by fine tuning the selectivity of the problem solving search procedures. 
   a quasi-neural model for the development of automatic processing accompanying skill acquisition has been proposed by schneider  and schneider and detweiler . in this  model a shift in the control mechanism changes the gating of information vectors between visual  lexical  semantic  and motor processing units. in schneider's model the initial stage of cognitive processing involves direct control of information between units. during practice  associative learning enables direct association of input/output vectors pairs and priority learning determines the transmission strength of these vectors between processing modules. a gradual transition from controlled to automatic processing occurs with practice. in the final and most automatic stage of skill acquisition  communication between processing units is not gated by the controller butisdetermined soley by the transmission strengths learned during the priority learning process. 
1 	parallel and distributed processing 
   in the model presented by anderson  knowledge representations and functional architectures remain the same as the system goes through various stages of skill acquistion. in schneider's model  the interconnections and processing modules remain the same  but a change in the control of information flow between units causes the execution to shift from a serial to a more parallel processing mode. in this paper we explore the properties of a system in which both control and learning are shifted between two differentfunctional architectures with differentrepresentations of the control problem. we shall use the terminology  declarative and reflexive control  patterned after kupfermann  to describe the shift between knowledgebased system and neural network control because it most nearly represents the differences between these two approaches. 
   because the rule base used for the control of the arm is quite task specific  the system described here corresponds most closely in its operation to the shift in anderson's procedural phase represented by the rule-based system to an automatic phase represented by the neural network. we plan to implement in the near future a more complex rulebased system which also exhibits the shift from a declarative representation to procedural processing in anderson's terminology. in the work reported here  we made no attempt to optimize the design or performance of the individual knowledge-based system or neural network components but rather used simplified versions of both to highlight the properties of the integrated system. 
   it is important to note that the shift of processing from controlled to automatic is a central component of the allocation of resources in human processing. tasks initially learned declaratively become reflexive through repetition. in this way tasks performed most often are processed in a way that requires the smallest allocation of processing resources. however  when familiar tasks are attempted in novel situations  there must be a shift back into a declarative form of processing in order to accomplish the task. for example  although one may become adroit at tying one's own necktie  tying someone else's necktie requires some thought due the change in perspective. the intent of the present research is to endow robots with a similar capability  combining reflexive and declarative forms of information processing for highly adaptive and dexterous robotic control. 
integrating knowledge-based 
systems and neural networks 
artificial neural networks and knowledge-based systems represent the desired reflexive and declarative forms of processing  respectively. artificial neural networks exhibit characteristics of associative memory  pattern matching  generalization  and learning by example  rumelhartand mcclelland  1  fahlman and hinton 1 . insofar as they direcdy compute specific outputs in response to specific inputs  neural networks can be viewed as imple-

meriting reflexive task knowledge. knowledge-based systems have demonstrated the ability to encode and exercise expert knowledge within limited domains  providing a hierarchical software organization and explainable solutions  charniak and mcdermott 1 . the inferencing capabilities of these systems effectively implement declarative task knowledge. 
   the control task chosen to illustrate the integration technique involves teaching a two-link manipulator how to make a tennis-like swing. the swing eventually will become part of a higher-level task that involves striking a ball to hit a specific place on a wall. presently  only the swing is considered. the manipulator  shown in fig. 1  is composed of two cylindrical links  each with a length of 1 m and a radius of 1 m. the inner link  located between the shoulder and elbowjoints  has a mass of 1 kg  and the outer link mass varies between 1 and 1 kg in the simulations described below. rotation of the shoulder and elbowjoints occurs in a vertical plane  against gravity. the overall task of the control system is to vary joint torques over time such that the outer link moves from its vertical resting position  pointing straight down  through an imaginary contact point. the outer link is to strike the contact point at the link's mid-point  and at a specified angle  slope . a swing is deemed successful when the two swing-maneuver performance measures  contact position error and contact slope error  fall within specified bounds. a more complete description of the system and its performance is given by handelman et. al.   1 . 
   figure 1 shows a block diagram of the controller used to accomplish this task. three levels of a controller task hierarchy are defined: low-level reflexes  a reflex modulator  and an execution monitor. on the lowest level  the innermost loop in the block diagram   each joint is endowed with simple reflexes that command torque as a function of angular position and velocity. the term  reflex  is borrowed from human motor control and is meant to represent cither a simple position or force servo system. it is believed that many human voluntary motions involve the modulation of reflexes  stein and capady 1 . therefore the middle loop of fig. 1 is used to provide the low-level reflex loops with time-varying gains and commands needed to carry out the swing maneuver. finally  the execution monitor supervises various phases of 

figure 1. two-link manipulator 
reflex modulation learning.these levels of the controller hierarchy are described in detail below. 
rule-based swing reflex modulator 
on the lowest level  each joint reflex acts as a hybrid position/torque servomechanism. the two available reflexes are 1  spring-like position control with joint angle and angular velocity feedback  and 1  constant torque control. reflex gain and command modulation is used to generate the manipulator swinging motion. implemented in the middle feedback loop of fig. 1  modulation is accomplished using either rules  a neural network  or both  depending on the mode of operation. table 1 presents the rules used to execute a rule-based swing. the rules are invoked by a cyclic goal-directed search through a knowledge base of parameters  rules  and procedures in much the same way that aircraft emergency procedures are executed by handelman and stengel  1 . the rules were obtained by the control system designer through trial and error. no explicit knowledge of the dynamics was used in this process. a single base torque is used and is scaled for each joint by an appropriate parameter. 
network-based swing reflex modulator neural-network-based reflex modulation is performed with a cmac  cerebellar model articulation controller  network module developed by albus . a cmac is used to encode implicitly  through learning  the sensorimotor relationships represented explicidy by the swing-maneuver rules of table 1. the cmac module is a 


perceptron-like table look-up technique for reproducing functions with multiple input and output variables over particular regions of the function space. a cmac can learn by example  and its mapping scheme provides auto matic generalization  interpolation  between input states  so that similar inputs produce similar outputs. 
   the cmac network modules are used to implement a 
   reflexive swing maneuver. with the cmac properly trained  input values representing the manipulator state cause the cmac to output gains and commands to the low-level reflexes that ultimately move the manipulator into the next task-dependent area of the manipulator state space. the resultant manipulator state then defines new input values which  in turn  produce cmac outputs that again  push  the manipulator into the nextdesired state. thus  after the cmac network has been trained  rules initiate a networkbased swing by  throwing  the manipulator into an area of the manipulator state space recognized by the network. the network then reflexively executes the swing maneuver. when the manipulator finally enters a configuration recognized by rules as concluding the swing maneu-
ver  the rules disengage the cmac network and once again take over reflex modulation responsibility. training and supervision of cmac reflex modulation are performed by the execution monitor. 
rule-based execution monitor 
the execution monitor is entirely rule-based  and implements three swing modes that correspond to various phases of reflex modulation learning. the swing modes are termed rule-based  rule-and-network-based  and network-based. under rule-based swing mode  reflex modulation is carried out by rules only. when certain conditions are met  the cmac network modules concurrently attempt to duplicate the rule-based reflex modulation commands  learning by example. under rule-andnetwork-based swing mode  rule-based and cmac-based 
1 	parallel and distributed processing 
reflex modulation suggestions are generated in parallel  and cmac learning continues. cmac-based outputs are fed directly to the reflexes when they are deemed close enough to the  optimal  rule-based command suggestions. finally  under network-based swing mode  cmac learning ceases  and cmac outputs direcdy modulate shoulder and elbow joint reflexes throughout the entire swing maneuver. switching between swing modes is dictated by the rules shown in table 1. 
simulation results 
operation of the integrated swing-maneuver controller of fig. 1 was simulated on a personal computer equipped with a 1-mhz 1 processor  an 1-mhz 1 math coprocessor  and 1 kbytes of random-access memory  ram . source code for the cmac modules was written in pascal  whereas the rule-based system components  including 1 rules  were translated automatically from lisp to pascal as described handelman and stengel . following a discussion of simulation results detailing the operation of the controller  real-time performance issues will be addressed. 
   figure 1 depicts the activity of the rule-based system components during various phases of the swing maneuver. each data point in the top plot corresponds to the number of rules tested by the controller inference engine during a goal-directed search cycle. adjacent data points are separated by the amount of time required to complete a search cycle  in this case forced to coincide with a controller sample rate of 1 per sec. at the start of the simulation  the manipulator outer link mass is set at 1 kg  and the base torque command is set at 1 nm. 
   the controller performs swings at 1 sec intervals. it begins swinging at t= 1 sec while in rule-based swing mode. peaks and valleys in the number of rules tested reflect execution of the various swing steps of table 1. as shown by the plot of swing contact error in fig. 1  errors associated with the first 1 swings remain high. the outer link never reaches the contact point because the applied torques do not overcome gravity by a sufficient amount  prompting successive increases in base torque. by t =1 sec  a base torque command of 1 n m results in acceptable contact error  enabling training of the cmac neural network modules. 
   during the 1 swings between t = 1 sec and t = 1 sec  the rule-based system components teach the cmac network how to modulate reflexes in order to accomplish a successful swing. the first 1 swings arc performed in rulebased swing mode  with the cmac network learning  but not contributing to  modulation of the shoulder and elbow joint reflexes. by t=1 sec  cmac command suggestion errors have dropped low enough for the controller to enter rule-and-network-based swing mode. at t = 1 sec  the controller momentarily switches to network-based swing mode  but the resulting swing falls short of the contact point. finally  by t = 1 sec  four consecutive 

network-based swings can be accomplished. note in fig. 1 that the number of rules tested during network-based swings drops considerably  reflecting a shift from a declarative to a reflexive form of processing. 
   in order to demonstrate the inherent adaptability of the integrated controller  the outer link mass is increased from 1 kg to 1 kg at t = 1 sec. as shown in fig. 1  insufficient base torque causes the manipulator to miss the contact point over the next 1 swings. during this time the swing mode regresses from network-based  to ruleand-network-based  to rule-based  and the base torque command is steadily increased. by t = 1 sec  a base torque of 1 nm results in a successful rule-based swing. 
between t = 1 sec and t = 1 sec  the cmac network re-learns by rule-based example how to modulate properly the low-level joint reflex gains. by t = 1 sec  four successful network-based swings once again can be performed. 
   utilizing the personal computer hardware and software described earlier  processing requirements for the various controller operations included the following. while in rule-based swing mode with no cmac learning  a typical controller goal-directed search cycle testing 1 rules required 1 sec. the cmac network  1 inputs  1 outputs  required approximately 1 kbytes of memory  ram . the reading  recall  of a single set of cmac network outputs required 1 sec  and the updating 
 learning  of a set of cmac input-output points required 1 sec. although the present controller implementation configuration cannot support the simulated sample rate of 1 per sec  implementation of the integrated controller on multiple state-of-the-art microprocessor boards should achieve real-time performance. 
conclusions 
knowledge-based systems and artificial neural networks offer very different capabilities concerning control system design  implementation  and performance. the approach taken in this paperwas to develop a robotic control system that utilizes the strengths of each processing technique where appropriate. a rule-based system initially finds acceptable first-cut solutions to the given control objective  then teaches a neural network how to accomplish parts of the task which are amenable to the network's learning and generalization abilities. the net-
work learns on-line by examples provided by rule-based task execution. the resulting integrated system enables a natural division oflabor; strategics for task execution  embodied by the execution monitor of the swing maneuver described above  remain within an expressive rulebased representation  whereas specific tactics  such as reflex gain modulation  are delegated to the most appropriate form of processing. in addition  by replacing rule groups with neural networks in a modular fashion  integration of the two computational paradigms occurs within the convenient hierarchical software architecture provided by knowledge-based programming techniques. 
   when integrated  knowledge-based systems and artificial neural networks merge declarative and reflexive forms of information processing. for the swing-maneuver controller described above  shifts between declarative and reflexive processing are traced by variations in the number of rules being tested and the errors associated with the network outputs during learning. furthermore  a shift from declarative to reflexive processing implies changes in the controller's focus of attention and allocation ofcompu-
	handelman  lane and gelfand 	1 

lational resources. by integrating aspects of declarative knowledge-based systems and reflexive artificial neural networks in real time  the stage may be set for the development of highly adaptive and dexterous robotic control systems. 
   many additional issues related to the integration of neural networks and knowledge based systems for autonomous control will be investigated in future research. these include: l if we were to use special purpose parallel architectures for the neural network and rule-based system control  would neural network control be significantly more efficient for the automatic control phase as in humans   1 how should optimal learning strategies used by the execution monitor be generated   1  in the preliminary example we investigated  we were able to transfer control smoothly between the knowledge-based system and neural network. what stability problems might arise in more complex systems   1  given a group of neural networks assigned to perform a complex  multi-faceted task  how should the execution monitor knowledge base be set up to optimally allocate knowledge among networks and determine their training order   1 can the transfer of knowledge among system components be bi-directional  that is  can the knowledge-based system infer new rules or modify existing ones based on neural network performance   
acknowledgements 
the authors acknowledge many helpful discussions with gregory clark  carl olson and paul thagard of the princeton university psychology department. 
