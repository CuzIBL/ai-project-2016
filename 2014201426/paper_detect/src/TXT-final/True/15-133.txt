 
　　for n a t u r a l language d i a l o g systems  going beyond domain independence means the attempt to create a core system that can serve as a basis for i n t e r f a c e s to various a p p l i c a t i o n classes that d i f f e r not only w i t h respect to the domain of discourse but also w i t h respect to dialog type  user type  intended system behavior  and background system. in the design and implementation of ham ans. which is presently o p e r a t i o n a l as an i n t e r f a c e to an expert system  a v i s i o n system and a data base system  we have shown that going beyond domain independence is p o s s i b l e . ham-ans is a large n a t u r a l language d i a l o g system w i t h both considerable depth and breadth  which accepts typed input in c o l l o q u i a l german and produces typed german responses q u i c k l y enough to make it p r a c t i c a l for r e a l - t i m e i n t e r a c t i o n . one goal of t h i s paper is to report on the lessons learned 
during the r e a l i z a t i o n of the system ham-ans. this paper introduces the o v e r a l l s t r u c t u r e of the system's processing units and knowledge sources. in a d d i t i o n we describe some of the innovative features concerning the strategy of semantic i n t e r p r e t a t i o n . 
	i. 	introduction 
　　in the past  considerable e f f o r t has been devoted to the development of domain-independent n a t u r a l language  nl  i n t e r f a c e s . as it turns out  domain independence does not mean that such nl i n t e r f a c e s can be adapted for such diverse information processing systems as cao  s i m u l a t i n g   and operating systems  which we w i l l henceforth c a l l background systems . thus going beyond domain independence means the attempt to create a core system that can serve as a basis for i n t e r f a c e s to various a p p l i c a t i o n classes  see f i g . 1  that d i f f e r not only w i t h respect to the background system but also w i t h respect to d i a l o g type  user type  intended system behaviour  and discourse domain  see upper half of f i g . 1 . we define the core system of an nl i n t e r f a c e as c o n s i s t i n g i d e a l l y of those knowledge sources  kss  and processes that are common to a l l a p p l i c a t i o n s . of course t h i s is a very ambitious goal that does not seem to be a t t a i n a b l e in i t s f u l l g e n e r a l i t y in the near f u t u r e according to the current state of the a r t   but we have shown that it is feasible in a more l i m i t e d sense in our design and implementation of the system ham-ans  hamburg a p p l i c a t i o n oriented natural language system   which is presently o p e r a t i o n a l as an i n t e r f a c e to an expert system  a 
　　v i s i o n system  and a data base system  see lower h a l f o f f i g . 1 . 
　　ham-ans is a large nl d i a l o g sytem of both considerable depth and breadth  whose components have been developed over a 1-year period w i t h an e f f o r t of approximately 1 man-years. the system accepts typed input in c o l l o q u i a l german and produces typed german responses quickly enough 
 1 	seconds 	on 	an 	unloaded pop-1  to make it 
research on ham-ans is c u r r e n t l y being supported by the german 	m i n i s t r y 	of 	research 	and 	technology 
 bmft  	under c o n t r a c t 1bit1b 
p r a c t i c a l for r e a l - t i m e i n t e r a c t i o n . the project represents a massive approach towards developing and implementing an actual application-independent  e a s i l y adaptable system. the design of ham-ans draws mainly upon work on co-op   1     planes   1     intellect   1   . team  and ham-rpm   1   . 
i i . 	ham-ans 	as an nl interface to highly diverse background systems 
　　our research strategy has been to b u i l d the core system w i t h a set of diverse a p p l i c a t i o n s included from the very beginning. as the upper h a l f of f i g u r e 1 shows. the three a p p l i c a t i o n classes considered in ham-ans are defined by choosing a d i f f e r e n t value for each of the dimensions. before the c a p a b i l i t i e s of the working system are demonstrated  l e t us b r i e f l y characterize the communicative s i t u a t i o n s that we have focused on in the various a p p l i c a t i o n classes l i s t e d in f i g u r e 1. 
　　in the hotel reservation s i t u a t i o n the system takes the role of a hotel manager  who t r i e s to persuade the user to book a room  see f i g . 1 . the c a l l e r is assumed to have the o v e r a l l goal of determining whether the room offered meets his requirements. the system must attempt to recognize the user's s p e c i f i c desires concerning the room as they are revealed - usually i n d i r e c t l y - in his utterances and to make use of the various devices a v a i l a b l e in n a t u r a l language that permit the room in question to be presented in a p a r t i c u l a r l y favorable l i g h t   e . g . the generation of tendentious d e s c r i p t i o n s using hedged r e l a t i v e a d j e c t i v e s   . 
　　in the t r a f f i c domain we presuppose the f o l l o w i n g s i t u a t i o n a l context: the system is observing a street i n t e r s e c t i o n and supplies the user  who is f a m i l i a r with the scene but cannot see from his remote l o c a t i o n   w i t h information about the t r a f f i c at that i n t e r s e c t i o n on the phone   c f .   1     . a geometrical d e s c r i p t i o n of the observed scene is provided by the image sequence analysis system na1s/m1ri1   1     1   . in t h i s a p p l i c a t i o n   in contrast to the h o t e l domain  where at the beginning of the d i a l o g the user must be assumed to have no d e f i n i t e knowledge about the i n t e r i o r of the room being o f f e r e d   both partners are assumed to have shared knowledge about d e t a i l s of the domain discussed. this d i f f e r e n c e has strongly motivated our design of parameterized components for the generation and r e s o l u t i o n of d e f i n i t e d e s c r i p t i o n s and anaphora. 
　　in the database a p p l i c a t i o n  ham-ans provides marine s c i e n t i s t s w i t h nl access to a f i s h e r y database  which contains data c o l l e c t e d 
　　during i n t e r n a t i o n a l expeditions in the south a t l a n t i c and the indian ocean. the complex structured data sets  which consist of cruise data concerning the vessels' voyages  k r i l l biology data  relevant net hauls and oceanographic data  are stored in a r e l a t i o n a l database w i t h a pascal/r data base management system. pascal/r is an extension of the well-known programming language pascal  having the data s t r u c t u r e r e l a t i o n ' and a general content-based s e l e c t i o n mechanism for r e l a t i o n s   1   . in contrast to the h o t e l reservation s i t u a t i o n   where the system t r i e s to s e l l a p a r t i c u l a r room  in accessing the v i s i o n 
　　
system and the database system ham-ans has no i n t e r e s t beyond helping the user by responding in a 
cooperative way. 
　　we believe it to be very important that each new or modified process be testable in an e x i s t i n g and running program. so that each extension of the system takes place under comparable c o n d i t i o n s . only then it is possible to i d e n t i f y early enough in the design process the application-independent components  the interfaces needed between them and application-dependent ones  and the tools that make it feasible to b u i l d an nl i n t e r f a c e based on the core system. we have attempted to develop the d i f f e r e n t l i n g u i s t i c   communicative  and c o g n i t i v e a b i l i t i e s of the core system as evenly as possible. 
　　often we started with highly non-deterministic but easy to handle c o n t r o l structures for the rapid development of new components. in l a t e r stages of development  a f t e r c a r e f u l evaluation of the actual flow of c o n t r o l in these components  optimizations were performed which often produced sequential and simple c o n t r o l s t r u c t u r e s . 
　　even in the simplest settings it seems i l l u s o r y to develop an a p p l i c a t i o n - o r i e n t e d nl i n t e r f a c e 
merely by r a d i c a l l y c u t t i n g away advanced features from r e l a t i v e l y complete. but i n e f f i c i e n t nlsystems that are used as vehicles for basic research  cf.    1     . therefore  in the design and implementation of ham-ans we have dealt from the beginning with phenomena l i k e anaphora r e s o l u t i o n   user modelling. the generation of extended responses  and focus s h i f t i n g   always 
w. hoeppner et al. 1 
l o o k i n g f o r s i m p l e and e f f i c i e n t s o l u t i o n s t h a t p r o v i d e t h e u s e r w i t h a n a d e q u a t e f u n c t i o n a l i t y i n l i m i t e d domains w i t h o u t t r y i n g t o s i m u l a t e human p e r f o r m a n c e . 
	the 	t e c h n i c a l 	q u e s t i o n 	o f 	c o m m u n i c a t i o n 	b e t w e e n 
ham-ans and t h e b a c k g r o u n d s y s t e m i s n o t a d r e s s e d in f i g u r e 1. we have i m p l e m e n t e d a module in hamans f o r c o m m u n i c a t i n g w i t h i n t e r a c t i v e b a c k g r o u n d 
s y s t e m s a c c o r d i n g t o t h e iso r e f e r e n c e m o d e l f o r open system i n t e r c o n n e c t i o n '   1   . the s e s s i o n c o n t r o l l e v e l i s r e a l i z e d a s a n a s y m m e t r i c i n t e r p r o c e s s c o m m u n i c a t i o n ; i . e . ham-ans c o n t r o l s   f o r e x a m p l e   t h e pascal/r i n t e r p r e t e r as a s l a v e 
p r o c e s s . t h i s a l l o w s t h e n l i n t e r f a c e t o p r o c e e d 
w i t h a d i a l o g w i t h t h e u s e r w h i l e pascal/r i s 
p e r f o r m i n g a n a s s i g n e d t a s k . a t t h e p r e s e n t a t i o n 
l e v e l   t h e b a c k g r o u n d s y s t e m i s e x p e c t e d t o b e a b l e 
t o t r a n s f o r m f r o m e x t e r n a l t o i n t e r n a l r e p r e s e n t a t i o n s and v i c e v e r s a . t h i s a p p r o a c h seems t o c o n t r i b u t e t o a p p l i c a t i o n i n d e p e n d e n c e . however  an e q u i v a l e n t module must be d e f i n e d in t h e nl i n t e r f a c e f o r each a p p l i c a t i o n . 
	i i i . 	an overview of the core system 
     in ham-ans a u s e r s u t t e r a n c e is p r o c e s s e d in a m u l t i - l e v e l f a s h i o n   c f .   1     : i n i t i a l and f i n a l d i a l o g s e c t i o n s i n t h e h o t e l r e s e r v a t i o n a p p l i c a t i o n   c f . f i g . 1   a r e h a n d l e d b y a s u r f a c e l e v e l m o d e l w h i c h i s r e a l i z e d b y a s c r i p t - l i k e d i a l o g - g r a m m a r   s i n c e t h e s e s e c t i o n s o f a t e l e p h o n e 
     c a l l c o n s i s t l a r g e l y o f s t a n d a r d p h r a s e s . the u s e r s more s p e c i f i c q u e s t i o n s a b o u t t h e h o t e l 
　　
1 	w. hoeppner et al. 
room  however  are analyzed in a l i n g u i s t i c a l l y deep manner. in this section  only the second l e v e l of processing is considered. 

　　figure 1 gives an overview of the most important components in ham-ans. arrows between components and the three major processing units indicate the sequence of control usually followed by the system. as it is impossible to give a detailed description of each processing unit of ham-ans in this paper we w i l l focus on the way the system i n t e r p r e t s the i n t e r n a l representation of a user's input. the analysis and generation components w i l l only be sketched. 
　　the central representation formalisms of ham-ans are the logic-oriented semantic representation languages surf and deep. although for reasons of e f f i c i e n c y we use a wide range of specialized representation formalisms for the many kinds of knowledge sources needed in ham-ans  see f i g . 1   it has been very important to have one central meaning representation formalism to f a c i l i t a t e collaboration in the production of such a largescale nl system  so that code portions generated by a l l team members work properly together. 
	surf 	and 	deep 	are 	designed 	to 	be 
declarative equivalent to a logic of a higher order  and  because their d e f i n i t i o n i t s e l f is d e c l a r a t i v e   easily extendable. the difference between the two is that surf is s t r u c t u r a l l y as close as possible to nl utterances  whereas deep is better suited for the evaluation of utterances on the basis of the system's domain specific knowledge. for example  q u a n t i f i e r scope is not yet e x p l i c i t in surf representations - quantified substructures are ordered according to t h e i r i n t r i n s i c scope. this approach is modelled after that of hendrix   1   . modified for the german q u a n t i f i e r system. surf is the target language for the parser and the source language for the generator. the components normalize and inverse normalize transform expressions in surf into deep and deep i n t o surf  respectively. 
　　some of the salient features of surf/deep are the inclusion of question operators and l o g i c a l operators for expectability and value-judgement p a r t i c l e s such as of course' and unfortunately' and the representation of vague q u a n t i f i e r s such as 
'almost every' and hedged predicates l i k e 'reasonably comfortable'. moreover surf/deep include constructions for conjoined terms  e.g. one bed and several c h a i r s '     noun-phrases with 'of t h e . . . . '  e.g. 'three to f i v e of these rooms'  and complex coordinative conjunctions  e.g. b u t   . surf and deep also use lambda abstraction and metapredicates for marking deep cases  tense and voice. 
　　dissimilar applications require that diverse concepts be expressable in the representation languages. for instance  the semantics of locomotion verbs mainly studied in the t r a f f i c domain can be adequately represented by case frames instead of term and predicate structures  which serve as a representation formalism for state descriptions occuring t y p i c a l l y in the hotel reservation s i t u a t i o n . the surf/oeep languages are easily complemented by constructs for new concepts and even a complete reformulation of the case system and i t s integration i n t o the processing components affected by it took less than 1 manweeks. thus the design of these central representation languages supports our approach to build a core system for diverse domains. 
　　the processing of a user's nl input starts with a rather elaborate l e x i c a l and morphological analysis which r e f l e c t s the more synthetic character of german as opposed to english. the syntactic analysis comprises two d i f f e r e n t strategies. both of which use the same atn-
d e f i n i t i o n s of syntactic categories  e.g. for noun phrases and prepositional phrases. the difference between these strategies l i e s in the amount of domain knowledge guiding the parsing process. the case-driven analysis strategy  contains more specific r e s t r i c t i o n s for possible case slot f i l l e r s than the other strategy  which uses a surface-grammar to cope with word-order v a r i a t i o n s . the atn-interpreter incorporates a mechanism to save complete substructures of an utterance as surf representations  thus enabling the e l l i p s i s recognition component to handle several types of contextual e l l i p s i s by inserting the p a r t i a l semantic representation into the complete representation of the previous utterance. 
　　the grammar of the core system currently includes rules for complex noun phrases  a l l common sentence types in various tenses  conjunction  including the most common forms of gapping   replacement e l l i p s i s   a l l common q u a n t i f i e r s   r e l a t i v e clauses  sentences with sentential complements  and adverbial modifiers. it does not include comparative and superlative constructions  expansion e l l i p s i s   counterfactual sentences or other complex types of subordinate sentences. before giving a more detailed description of the i n t e r p r e t a t i o n unit in the next section  we w i l l sketch the generation of natural language responses  for a detailed description see   1     . 
　　the input to the generation unit is a surfrepresentation of a complete utterance. the e l l i p s i s generation component compares this structure to the one constructed by the analysis and i d e n t i f i e s the relevant  i . e . new or questioned parts to be passed on to the verbalization component. possible relevant substructures are rated by applying the system's reconstruction c a p a b i l i t i e s in an a n t i c i p a t i o n feedback loop   1   . 
　　the task of the verbalization component is to produce a s t r i n g of canonical words and their grammatical features. this process uses a sat of t r a n s l a t i o n rules attached to each category of surf expressions and is guided by the message to be expressed rather than by the h i e r a r c h i c a l structure of the grammar. a special subcomponent provides for the generation of noun phrases as descriptions of domain i n d i v i d u a l s   which may be part of the surf expression to be verbalized. f i n a l l y the surfacetransformations' component yields a standard word order schema of the utterance and the correctly i n f l e c t e d forms of the canonical words. 
　　
　　although  in general  uniformity of representation is one of the a r c h i t e c t u r a l principles of al-systems    davis  has pointed out with an example of two larger expert- systems that while a uniform representation is useful for communication between components  the attempt to enforce the same uniformity on a l l components either f a i l s completely or causes intolerable performance degration. our experience gained during the development of ham-ans also provides evidence against a strong uniformity p r i n c i p l e . in an application-oriented nl dialog system there are so many kinds of processes  cf. f i g . 1  that require special kinds of knowledge  cf. f i g . 1 that a uniform representation schema is unfeasible. there is hardly any common knowledge representation formalism adequate for e.g. the morphological data  conceptual semantic data and case-frame lexicon. naturally non-uniformity per se is not a design goal in our approach: wherever possible we have used uniform formalisms  cf. f i g . 1  implementation formalisms' and   1     . 
　　during the process of developing the l e x i c a l analysis component  we tested several representation formalisms. f i r s t we used an associative net for representing the word lexicon and deduce procedures  similar to planner s thconse theorems  for carrying out morphological analysis 
	w. hoeppner et al. 	1 
  1   . these mechanisms were the same as those used in the evaluation component. the disadvantages were that a blind search was performed by the control regime of the deduce procedures and memory requirements of the associative net were r e l a t i v e l y high. me used associativity although it was not needed because of i t s ease of e x t e n d i b i l i t y . after discovering which operations must be applied in which order the deduce procedures were substituted by a discrimination tree for suffixes and lisp functions to interpret i t   freezing the morphological analysis as a s t r i c t l y sequential deterministic process. because the l e x i c a l analysis component accesses the lexicon only by words  we replaced the associative net by a random access f i l e containing l e x i c a l knowledge indexed by words. 
　　similar experience was gained by using atns in the verbalization component  cf. f i g . 1 . it seems conceptually elegant to use the same representation formalism for generation as for syntactic analysis. because atns only recognize linear structures and not tree structures such as surf expressions  an atn must analyze the surf expression in linear form  thereby i m p l i c i t l y building the structure that is already present in the surf expression. having experimented with atns we now use the recognizer functions for surf expressions which are more appropriate in this application. 
　　
1 w. hoeppner et al. 
	iv. 	an example of semantic interpretation 
　　the i n t e r p r e t a t i o n of deep expressions may be i l l u s t r a t e d by an example taken from a dialog in the hotel-reservation s i t u a t i o n . we assume a s i t uation similar to that of the example in figure 1: 
　　user: is there a lamp next to every bed  ham-ans: yes  next to almost every one. 
　　several features are worth noting in the way the system answers t h i s question. f i r s t   the system 
does not merely answer negatively  when a u n i v e r s a l l y quantified expression cannot be v e r i f i e d in a s t r i c t sense  but rather t r i e s to modify the q u a n t i f i e r . second  the system answers yes-no questions in an extended and cooperative way. this is one of the reasons for constructing a system capable of producing complete responses. third  the system's utterances contain only those parts which bring in new information. in the example above t h i s is p a r t i c u l a r l y notable  since the noun phrase has been reduced down to i t s q u a n t i f i e r p a r t . we may now take a closer look at the way the example is interpreted and the response is formulated. 
	the 	analysis 	unit 	constructs 	a 	surf 
representation r e f l e c t i n g the question of whether the r e l a t i o n next/ to holds between the subject np a lamp' and the np 'every bed'. normalize transforms t h i s surf formula i n t o a deep formula and embeds the f i r s t noun phrase into the second one. since the q u a n t i f i e r 'every' is stronger than the i n d e f i n i t e a r t i c l e ' a '  cf. the argument of the f i r s t test in f i g . 1 . this deep representation excludes the i n t e r p r e t a t i o n : does a single lamp exist such that it is next to each bed '. 
　　the task of i n t e r p r e t i n g a deep formula is governed by a generate and test strategy. generate and test procedures can be viewed as being activated by pattern-directed invocation and d i f f e r from each other in that the generate procedures assign i n t e r n a l object i d e n t i f i e r s to variables in deep formulas  while the test procedures y i e l d two values  the f i r s t of which is either a f u l l y i n s t a n t i a t e d formula equivalent to the input formula or a modified one depending on the state of a f f a i r s   and the second of which indicates the t r u t h value of the input formula in the range   1   1   . in the i n t e r p r e t a t i o n phase these two processes i n t e r a c t in such a way that a test attempt activates generate procedures which again c a l l test procedures and so on. 
　　we may now take a closer look at the way the deep formula in our example is treated in ham-ans. 
normalize 	has ordered the q u a n t i f i e d terms for the 
nps 'a lamp' and 'every bed' such that the i n t e r p r e t a t i o n can proceed from l e f t to r i g h t   resolving the np with the stronger q u a n t i f i e r 'every' before searching for referents for the second np. this deep-formula is shown at the top of figure 1 as the argument of the f i r s t test. the i n t e r p r e t a t i o n process now attempts to v e r i f y the complete formula in a top-down manner using the system's i n f e r e n t i a l capacity and other domain s p e c i f i c knowledge sources   e . g . semantic networks and v i s u a l data . 
　　
　　as soon as t h i s process of decomposing the complete formula discovers a structure containing variables  a set of generate procedures is activated and produces the set of object i d e n t i f i e r s in the hotel room being considered. since the c l i e n t in the i n i t i a l dialog has asked for a three-bed room  this set is instantiated by  bed1  bed1  be1 . the rest of the formula is then recursively sent to a test process with variables substituted by elements of the reference set for beds one after the other. being aware that the r e l a t i o n to be v e r i f i e d is a s p a t i a l one  a special subset of procedures produces the i d e n t i f i e r of the 
most salient object that is in the r e l a t i o n next/ to with the specific bed. 
　　a subsequent test phase determines whether the generated object belongs to the class of lamps. if this cannot be shown  as in the example of the deepest test attempt  a further object in the neighbourhood of the specific bed is generated and tested u n t i l either the conditions are s a t i s f i e d or no more objects in the r e l a t i o n next/ to can be generated. success or f a i l u r e of the test phases are noted in local memory-registers  hits and misses  which form the basis for composing a complete deep formula that comprises the result of the entire i n t e r p r e t a t i o n process. 
　　with the q u a n t i f i e r every   the i n t e r a c t i o n between generate and test processes is performed 
w. hoeppner et a!. 1 
u n t i l a l l o f t h e e x t e n s i o n a l e n t i t i e s o f t h e c o n c e p t ' b e d ' have been i n s p e c t e d . i n our example t h e s p a t i a l r e l a t i o n between two o f t h e beds  bed1 and bed1  and a lamp c o u l d be e s t a b l i s h e d w h i l e no o b j e c t o f t h e c l a s s l a m p ' c o u l d b e g e n e r a t e d t h a t met t h e r e s t r i c t i o n of next/ to w i t h r e s p e c t to bed1. this b u l k of s p e c i f i c knowledge c o u l d be t r a n s f e r r e d t o t h e c l i e n t   b u t t h e n a t u r a l l a n g u a g e 
d e s c r i p t i o n s n e c e s s a r y t o b e produced f o r each o f 
t h e o b j e c t s w o u l d o n l y be u n d e r s t o o d by someone 
w i t h 	i n t i m a t e 	knowledge 	o f 	t h e 	s p e c i f i c 	h o t e l 	room. t h e r e f o r e 	t h e 	i n f o r m a t i o n 	saved 	i n 	t h e 	l o c a l memories 	i s 	summarized: 	s i m i l a r 	p a r t i a l 	a s s e r t i o n s a r e 	merged 	i n t o 	a 	s i n g l e 	e x p r e s s i o n   	whose 
q u a n t i f i e r - p a r t 	i n d i c a t e s 	t h e 	number 	o f 	successes   o r 	f a i l u r e s   . 
     i n a d d i t i o n   t h e i n t e r p r e t a t i o n p r o c e s s uses l i n g u i s t i c hedges t o e x p r e s s t h e r e l a t i o n between s u c c e s s f u l and u n s u c c e s s f u l p a r t i a l r e s u l t s . i n t h e example of t h e t h r e e - b e d room  o n l y two beds w i t h a lamp n e x t t o them are i d e n t i f i e d and t h e r e s u l t i n g 
     deep q u a n t i f i e r is r e p l a c e d by t h e s i n g l e hedged 
     q u a n t i f i e r a l m o s t e v e r y ' . a l t h o u g h t h e g e n e r a t e 
     and t e s t s t r a t e g y remains t h e same in each a p p l i c a t i o n c l a s s access t o e x t e r n a l d a t a bases 
     must be a b l e to h a n d l e t h e e x p r e s s i v e power of t h e 
     db q u e r y l a n g u a g e . 
　　
1 	w. hoeppner et al. 
	v. 	conclusion 
     a v e r s i o n 	of 	ham-ans w r i t t e n 	in uci-lisp/fuzzy 
  1     1   i s p r e s e n t l y r u n n i n g under t h e tops1 o p e r a t i n g system on a decsystem 1  ki 1   . c o m p r i s i n g a p p r o x i m a t e l y 1 p r o c e d u r e s . t h e c u r r e n t v e r s i o n r e q u i r e s 1k o f 1 - b i t w o r d s . 
     b u i l d i n g a n a c t u a l a p p l i c a t i o n - i n d e p e n d e n t   e a s i l y a d a p t a b l e system i s t h e r e s e a r c h t o p i c i n our p r o j e c t ham-ans. to meet t h i s demand our r e s e a r c h s t r a t e g y has been t o b u i l d t h e c o r e system t a k i n g i n t o a c c o u n t a s e t o f h i g h l y d i v e r s e a p p l i c a t i o n s   s o t h a t each m o d i f i c a t i o n   e . g . e x t e n s i o n s t o t h e l i n g u i s t i c   c o m m u n i c a t i v e and c o g n i t v e c a p a b i l i t i e s   i s t e s t a b l e under v a r y i n g 
c o n d i t i o n s . 
　　we have p r o v i d e d a d e t a i l e d p r e s e n t a t i o n of t h e i n t e r p r e t a t i o n p r o c e s s   whereas some o f t h e o t h e r 
d i s t i n g u i s h i n g f e a t u r e s o f our s y s t e m   e . g . m u l t i l e v e l p r o c e s s i n g o f u s e r u t t e r a n c e s   m u l t i s t r a t e g y p a r s i n g and g e n e r a t i o n o f c o m p l e t e system u t t e r a n c e s   were o n l y i n t r o d u c e d b r i e f l y . 
     f u r t h e r work w i l l c o n c e n t r a t e o n b r o a d e n i n g t h e s y s t e m ' s c a p a b i l i t i e s w i t h a more e l a b o r a t e p a r t n e r m o d e l . t h e h a n d l i n g of nl db u p d a t e s   f a c i l i t i e s f o r e x p l a n a t i o n o f t h e systems speech a c t s   f o r t h e t r e a t m e n t o f word f o r m a t i o n   1     and f o r n l knowledge a c q u i s t i o n . a l t h o u g h t h e ham-ans c o r e s y s t e m d e s c r i b e d i s o p e r a t i o n a l   s e t t i n g our work i n r e l a t i o n t o t h e s o f t w a r e l i f e c y c l e   w e a r e 
     s t i l l a t t h e system d e v e l o p m e n t s t a g e and i t w i l l be a l o n g t i m e b e f o r e t h e system is ready f o r d i s t r i b u t i o n to a user community. 
