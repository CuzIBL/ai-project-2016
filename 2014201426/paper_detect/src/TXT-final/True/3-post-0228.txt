
we describe a family of kernels over untyped and typed prolog ground terms and show that they can be applied for learning in structured domains  presenting experimental results in a qspr task.
1 introduction
starting from the seminal work of haussler on convolution kernels  haussler  1   several researchers have proposed kernels on discrete data structures such as sequences  trees and graphs  see  gartner  1“   for a review . recently  kernels over complex individuals have been defined using higher order logic abstractions  gartner“ et al.  1 . the family of kernels developed in this paper originates from a specialization to first-order logic of such kernels  as it is designed to work on individuals represented as prolog ground terms. there are several reasons for such a specialization. simplicity: prolog representations provide a simpler representational framework. sufficiency: useful higher order structures such as sets can be simulated in prolog. types can also be introduced. in practice  prolog based representations are sufficiently expressive for many application domains. legacy: many inductive logic programming systems and knowledge bases are actually based on first order logic and prolog is a well supported language. extendibility: first-order logic programs have been extended to deal with uncertainty through the use of probability resulting in models such as stochastic and bayesian logic programs  see  de raedt and kersting  1  for a review ; these extensions can be very interesting in the context of machine learning.
﹛we develop variants of the kernel on typed and untyped terms. the present formulation allows us to obtain a relatively simple proof of positive definiteness based on showing that kernels over terms are a special case of convolution kernels  haussler  1 . we finally present experimental evidence of the usefulness of these kernels by learning the boiling point of alkanes from their chemical structure.
1 kernels on prolog ground terms
we begin with kernels on untyped terms. for a given program p we denote by b the herbrand universe of p  i.e. the set of all ground terms that can be formed from symbols in p  by c   b the set of all constants  and by f the ranked set of functors.
definition 1  kernels on untyped terms . the kernel between two terms t and s is a function k : b ℅ b 1↙ ir defined inductively as follows:
  if s ﹋ c and t ﹋ c then k s t  = 百 s t  where 百 :
c ℅c 1↙ ir is a valid kernel on constants;
  else if s and t are compound terms and have different arities or functors  i.e. s = f s1 ... sn  and t = g t1 ... tm   then
	k s t  = 牝 f g 	 1 
where 牝 : f ℅f 1↙ ir is a valid kernel on functors;
  else if s and t are compound terms and have the same arity and functor  i.e. s = f s1 ... sn  and t = f t1 ... tn   then
		 1 
  in all other cases k s t  = 1.
﹛we call 百 and 牝 atomic kernels as they operate on nonstructured symbols. a special but useful case is the atomic match kernel 汛 defined as 汛 x z  = 1 if x = z and 汛 x z  = 1 if x 1= z.
﹛a finer level of granularity in the definition of ground term kernels can be gained from the use of typed terms. this extra flexibility may be necessary to specify different kernel functions associated with constants of different type  e.g. numerical vs. categorical . it may also be necessary in order to specify different kernels associated to different arguments of compound terms. our approach for introducing types is similar to that proposed in  lakshman and reddy  1 . we denote by t the ranked set of type constructors. the type signature of a function of arity n has the form 而1℅ ... ℅而n ↙1 而1 where n ≡ 1 is the number of arguments  而1 ... 而k ﹋ t their types  and 而1 ﹋ t the type of the result. functions of arity 1 have signature ﹠ 1↙ 而1 and can be therefore interpreted as constants of type 而1. the type signature of a predicate of arity n has the form 而1℅ ... ℅而n 1↙   where   ﹋ t is the type of booleans. we write t : 而 to assert that t is a term of type 而. we denote by b the set of all typed ground terms  by c   b the set of all typed constants  and by f the set of typed functors. finally we introduce a  possibly empty  set of distinguished type signatures d   t that can be useful to specify ad-hoc kernel functions on certain compound terms.
definition 1  kernels on typed terms . the kernel between two typed terms t and s is defined inductively as follows:
  if s ﹋ c  t ﹋ c  s : 而  t : 而 then k s t  = 百而 s t  where 百而 : c℅c 1↙ ir is a valid kernel on constants of type 而;
  else if s and t are compound terms that have the same type but different arities  functors  or signatures  i.e. s = f s1 ... sn  and t = g t1 ... tm   f :
考1℅ ... ℅考n 1↙ 而1  g : 而1℅ ... ℅而m ↙1 而1  then
	k s t  = 牝而1 f g 	 1 
that construct terms of typewhere 牝而1 : f ℅f 1↙ ir is a valid kernel on functors而1
  else if s and t are compound terms and have the same type  arity  and functor  i.e. s = f s1 ... sn   t = f t1 ... tn   and f : 而1℅ ... ℅而n 1↙ 而1  then
 
 1 
x
	  : 牝而1 f f +	k si ti  otherwise
i=1
  in all other cases k s t  = 1.
﹛in the case of numerical constants  examples of useful kernels include 百real x z  = exp  污 x   z 1  and 百real x z  = min{x z}.
theorem 1. the kernel functions on prolog ground terms given in definitions 1 and 1 are positive definite  pd .
proof sketch. let us introduce the following decomposition structure  see  shawe-taylor and cristianini  1  : r = h x1 x1  r  k1 k1 i with x1 = f  the set of functors  
x1 =  f in b    and
r = { f  f n a  s  s.t. s is a term having functor f  tuple of arguments a  and f has arity n}
then it can be immediately verified that the kernel function of eq. 1 and 1 correspond to the direct sum decomposition kernel associated with the decomposition structure r if k1 = 牝 and k1  f n a   g m b   = 汛 f g 汛 n m k1 a b  where given a =  s1 ... sn  and b =  t1 ... tn 
.
since kernels are closed under direct sum  if k is pd then k1 is also pd. the proof then follows from haussler's decomposition framework  haussler  1  and by induction using as base step the fact that 百 is a valid kernel on constants.
﹛the proof that kernels on typed terms  def. 1  are pd is obtained similarly  replacing functor arities by type signatures in the decomposition structure. 
﹛alternative forms of typed and untyped kernels can be obtained by replacing sums with products in eq.  1  and  1   while keeping the rest of the definitions unchanged. since kernels are closed under tensor product  positive definiteness can be proven using the same technique as in theorem 1.
1 experimental evaluation
the kernel has been tested on a quantitative structureproperty relationship  qspr  prediction task  namely predicting the boiling point of alkanes given their chemical structure. alkanes can be represented as ordered rooted trees using a very simple procedure  bianucci et al.  1   and trees can be easily encoded as prolog ground terms  as shown in

c h h h c c h h h  c h h h  c c h h h  c h h h  c h h h    
figure 1: ground term representation of an alkane.
fig. 1. we addressed this task using kernel ridge regression  shawe-taylor and cristianini  1  with the kernel k on untyped terms of def. 1  a match kernel for functors  carbon atoms   and a null kernel for constants  hydrogen atoms . in this way the kernel measures the number of carbon atoms in corresponding positions. as an additional source of information  we extracted the depths of the trees representing the molecules  and summed their product to the term kernel  obtaining a more informed kernel k1. finally  we employed a gaussian kernel on top of k and k1. performance was evaluated by a ten fold cross validation procedure  hyperparameters  namely  the gaussian width and the regularization parameter   were chosen by a hold-out procedure on the training set of the first fold  and kept fixed for the successive 1 fold cross validation procedure. when using kernel k we obtained an average mean square error of 1 celsius degrees while using k1 the error can be reduced to 1 degrees. these results are comparable to those produced by the highly tuned networks developed in  bianucci et al.  1 .
acknowledgements
we wish to thank luc de raedt for fruitful discussions. this research is supported by eu grant april ii  contract n  1  and by miur grant 1.
