 
we introduce two mechanisms for scaling computations in the framework of temporal reasoning. the first one addresses abstraction at the methodological level. operators are defined that engender flexible switching between different granularities of temporal representation structures. the second one accounts for abstractions at the interface level of a temporal reasoning engine. various generalizations of temporal relations are introduced that approximate more fine-grained representations by abstracting away irrelevant details. 
1 introduction 
most of the challenging ai problems exhibit a computational complexity that is inherently intractable. in a seminal paper  jerry hobbs   1  proposed a parsimonious reasoning mode based on different granularities of representation structures. he suggests to have a hierarchy of theories available - shallow ones that come with cheap computations  more sophisticated ones that require increasing costs. hence  a trade-off between expressiveness and computational resources is managed by shifting between different granularity levels. the intrinsic mechanism needed in such a model are switching operators that move from one representational layer to the other. 
　the necessity to account for different granularities in temporal reasoning has been widely acknowledged in diverse applications such as natural language understanding  nakhimovsky  1  or planning fsathi etal  1 . nevertheless  granularity has often only been considered as an addendum to temporal reasoning schemes  bettini et al.  1 . in contradistinction  we treat granularity as a fundamental notion  one that underlies the relation between the most common temporal reasoning formalisms. 
staab and hahn 	1 　we here build on the notion of generalized temporal networks  gtns  as introduced by staab  1b . gtns  cf. section 1 for an overview  constitute a highly expressive constraint formalism. they subsume several widely known temporal reasoning approaches  allen  1; vilain et al.  1; kautz and ladkin  1; dechter et al.  1; meiri  1; 
badaloni and berati  1  and integrate them in a common framework. however  as staab  1b  concedes  reasoning at the most specific level of gtns is not a panacea. what is lacking though is a mechanism that might mediate between the computation of complex temporal relations still requiring resource-intensive constraint solvers at the high end of intractability  and the computation of simpler temporal relations for which tractable constraint systems might suffice. so  our goal is to extend the gtn framework such that a cascade of constraint formalisms organized at different axes of expressiveness/computational complexity can be defined  together with operators for navigating this cascade to choose the appropriate level of constraint evaluation  cf. section 1 . 
　this scaling between different levels is also motivated by our natural language text understanding application  staab and hahn  1  that demands for reasoning in different temporal granularities. the potential for abstraction is not limited to the internal representation and reasoning mode  but it is also useful for accessing the system from the outside via its interface  cf. section 1 . so  the ultimate goal is to support reasoning and access by uniform abstraction mechanisms. 
　the latter point deserves particular attention when basic research results from the area of temporal reasoning are to move to public use  or even commercial applications. the availability of flexible  easy-to-use  explanatory adequate interfaces has already proven to be a major asset in comparably complex domains such as terminological reasoning  cf. mcguinness and patel-schneider  . in the framework of temporal reasoning then  finding the right level of abstraction for querying is considered a crucial factor for enhanced usability of temporal reasoners. though very expressive models  meiri  1; staab  1b  might be required by the actual application  they usually do not lend themselves easily to communication with the human user or with high-level system modules due to an overly fine grain size. in order to propagate flexibility to the interface level  we abstract away irrelevant details from the low-level representations at the price of only approximate  though sufficiently explicit solutions. so  providing the right level of abstraction is also a matter of adequacy of temporal reasoning  in general  and increased applicability of temporal reasoners  in particular  rather than just a detrimental loss of expressiveness at the gain of lowering computation costs. 

1 a temporal reasoning scenario 
in order to facilitate the understanding of the concepts we introduce  we here give an everyday scheduling problem that will be used throughout this paper for illustration purposes: 
 1  james is a shuttle driver for a major hotel in new york. today's schedule posts mr. rogct and mr. meyer from paris  mrs. meyer from philadelphia  and mr. george from sidney for transportation. the hotel's clerk told him that mr. roget and mr. meyer have tickets for different flights from paris to ny. mr. roget is scheduled to arrive with the concorde in ny at 1pm local time  and mr. meyer should arrive in ny two hours later. however  they currently try to arrange for sharing a flight which would arrive in ny at 1pm local time. when mr. meyer arrives in ny he will immediately call his wife  mrs. meyer  who will get the next train to ny. hence  she will be in ny less than 1 hours after her husband has arrived. furthermore  mr. george's flight leaves sidney at 1pm local ny time  and he has got a very long flight. 
problem: in which order must james service the guests  
1 the gtn model 
we here give a brief description of the gtn model  summarizing those aspects relevant for the mechanisms of scaling - the focus of this paper. a detailed explanation of gtns and a comparison to related models is given in  staab  1b .1 
　the gtn model builds on time point variables and relations that describe restrictions between two or more variables at a time. a given network of relations is tightened by propagation  and thereby  conclusions are computed until weakly generalized path consistency  wgpc  is reached. relations consist of disjunctions of conjoined primitive constraints. formally  a relation comes in the following form:  1  
　　hereby  are constraints between the temporal variables and  are intervals such that denotes the number of dis-
junctions of the relation and denotes all pairs of time point variables between which a constraint of relation 
may hold. the set of all relations is decorrespondingly  its topology is defined by 
thus  example  1  can be modeled in the following way: 
 1  a. 1pm: 
b. end of mr. roget's flight: 
c. end of mr. meyer's flight: 
d. arrival of mrs. meyer in ny: 
e. beginning of mr. george's flight: 
f. end of mr. george's flight: t1 
g. if mr. roget arrives at 1pm  then mr. meyer ar-rives two hours later; otherwise  they arrive together at 

mr. george has a very long flight: 
mr. george's flight starts at 1pm: 
*for proofs of the formal claims we make  cf.  staab  1a   
1 	temporal reasoning 
　in order to compose relations  propagate resulting restrictions  and determine when wgpc is reached  staab  1b  provides interval mappings  projection and sub sumption. relying on these  and some other  auxiliary means  he states a constraint propagation algorithm that enforces wgpc on gtns. this algorithm can be applied unaltered to the scaling problems we discuss here. we will now formally introduce those auxiliary means  because the notion of scalability we develop makes direct use of them. 
first  we define the notion of projection: 
function 
constraints in defined at three levels - that of simple conjoined constraints  of disjunctions of conjoined constraints  and of conjoined relations. its input is described by referring to sets  of tuples  and 
　an example for is given in  1  which incorporates the information given in  1g : 
 1  
　second  the gtn model allows for different interval structures from which the intervals qij k i may be taken. 
 definition 1 an 	interval 	structure  is 	a 	quadruple  i is a set of  semi-intervals on a domain d. 
i is closed under the composition and intersection operators  and 	respectively. 

bers  iq all intervals on the rationals  + interval addition  and u set intersection. 
　in order to compose constraints from different interval structures  interval mappings are established that communicate restrictions. 
definition 1 interval mappings are functions from one interval structure  to another one  such that the following properties are fulfilled: 
db  it is also required that 
   for instance  the resulting quantitative constraints in  1  are mapped onto a common ordinal one by 

　for instance  the result in  1  subsumes the input given to the result in  1  subsumes the result of  1   and due to the transitivity of subsumption the relation in  1  subsumes the one in  1g . 
　finally  before proceeding with the topic proper of this paper  we give the definition of an unambiguous gtn  a ugtn: 
definition 1 a ugtn is a gtn  where 
1 	abstraction at the reasoning level -
switching between levels of granularity 
the gtn model is the foundation for switching between different levels of reasoning. gtns based on intervals from the reals   bring about a very fine-grained level of temporal reasoning as a general frame of reference. switching to coarser models is possible relative to at least two dimensions: first  the dimension of interval structures of different granularities permits such changes  e.g.  abstractions from quantitative constraints to qualitative  i.e.  ordinal ones  like  or granularity changes between days  weeks and months as they have been described by bettini et ai . second  one may consider disjunctions of conjoined constraints as already too sophisticated a level of representation. from such a level  it is  nevertheless  possible to move into a sparser theory  by using abstraction on the propositional level as investigated by giunchiglia and walsh . 
　　figure 1 is an excerpt of a network heterarchy of temporal reasoning schemes  with arrows pointing from less towards more expressive formalisms . gtn  and gtn denote gtns based only on the interval structures and  respectively. stp and tcsp stand for non-disjunctive and disjunctive quantitative constraint systems  respectively  as described by dechter et al .1 the term integration stands for the integration of tcsps with allen's model  meiri  1 . tcsp-lpc  cf. schwalb and dechter   is not really a representation schema on its own. viewed from a representational perspective  it is equivalent to tcsps  but it propagates only a limited number of disjunctions in each step such that propagation  as a whole  remains polynomial in the number of relations. 
   this heterarchy mirrors the well-known trade-off between expressiveness and efficiency. determining consistency is figure 1: expressiveness of reasoning schemes 
np-hard in all formalisms  except for the point algebra and for stp networks  cf. vilain et al.   dechter et al  . however  even approximating constraint propagation algorithms can be very expensive when large ranges are embodied in the network. 
　we attempt to deal with this complexity bottleneck by providing smooth shifts among different levels of expressiveness. following hobbs's strategy that  idealization allows simplifications into tractable local theories   our proposal approximates given information by  simpler  one. these shifts are performed by two families of operators already introduced in the previous section: the first one   takes interdependent constraints as input and disregards their relationships  e.g.  as with the disjunction in  1 . the second one  ui r  i   allows switching between different interval granularities  as  e.g.  illustrated by collapsing information in  1 . 
　as can be read off from the diagram  both idealizations abstract from networks composed of detailed representations  with expensive constraint processing  to coarser representations  which allow for more efficient reasoning. hence  expressiveness is traded off against efficiency. disregarding structural interdependencies  e.g.  allows the projection of gtn  information into an efficiently solvable point algebra. a coarser level of quantities  and thus a small overall range  is directly reflected by a tighter worst-case bound for constraint propagation  cf. theorem 1 in  staab  1b  . 
　the soundness of both abstraction operators is ensured by definition 1 for operators and by lemma 1 for operators 
lemma 1 for all e and the constraints given by entail the constraints 
given by 
　let us now illustrate the use of these abstraction mechanisms by considering the temporal reasoning problem given in  1 . in order to retrieve qualitative ordering information  such as determining arrival orderings  it is often desirable to move down the heterarchy from gtn to a point algebra. this is done for two relevant pieces of knowledge   for  1g  by the combination of  1  with  1   and for  1h  by  1 . 
 1  
from  1  and  1  we may easily read off that mr. roget  
mr. meyer and mrs. meyer arrive just in this order  the men may even arrive simultaneously. 
	staab and hahn 	1 

　given that we have neglected knowledge about durations  we do not know how mr. george's arrival is ordered with respect to the other ones. what is needed is reasoning at the level of tcsps - on the one hand: 

from  1  and  1h  we conclude: 

　on the other hand  one needs to account for background knowledge about the duration of flights. assuming an interval structure  like the ones in clementini et al.   referring to flights of  short    medium    long   and  very long  time extension  a common grounding between  very long  and hour units may be that  very long flights  take at least 1 hours. with this information and with  1   one may conclude  finally  that mr. george will arrive last. 
　though for most temporal reasoning mechanisms the two families of abstraction operators  and  play the major role  one may think of alternative operators  too. for instance  schwalb and dechter   1  encountered the tcsp fragmentation problem by restricting propagation to  almost  convex constraints. an operator  that abstracts from general nonconvex relations into a limited number of convex disjunctions may render constraint propagation more efficient. however  the disadvantage remains that the resulting network does not have a similarly relevant status as  say  an interval algebra  for which path consistency has been determined. 
　with these abstraction operators  problems stated at one level are mostly lifted onto a coarser level of reasoning. however  going the other way round may also prove fruitful. reasoning at the coarser level is cheap and all the conclusions that are inferred at the coarser level also hold at a finer grain size. very often the switch backwards is given by the identity operation1  e.g.  between gtns based on  and 
1 	abstraction at the interface level 
generalizing by approximating relations 
increased expressiveness and the application of powerful abstraction mechanisms that mediate between different precision levels of reasoning may actually aggravate the application of a temporal reasoning system. while thirteen qualitative interval relations in allen's calculus or disjunctions of interval constraints in tcsps may already pose non-trivial problems for a human to deal with  gtn relations have an even more complicated structure. thus  gtn relations are often too unwieldy to be used in a temporal query language 

or by a module of a larger system  though an application may actually require their use. for instance  a text understanding and generation system dealing with the scheduling problem as given in  1  may need to account for complex propositions such as  1g . this means that high-level conceptual representation structures  e.g.   a very long flight  or  x arrives after y'  that are typically employed by such a system must be translated to low-level gtn expressions when in-depth temporal reasoning is required. 
　to bridge the conceptual distance  we here introduce an interface level that abstracts from unnecessary details and  hence  generalizes to the relevant distinctions that need to be made. in doing so  we provide definitions of abstracting relations that are used to move from the interface level down to the reasoning level - and in the reverse direction. switching from the interface to the reasoning level  e.g.  when posing a query to a temporal reasoning system  one simply has to expand the definition of the abstracting relation. table 1 shows some examples of such  macro  definitions. switching back  i.e.  outputting an abstracted relation to the interface level  
e.g.  as an answer to a query posed by a  naive  user  requires reasonable criteria for the selection of those interface relations that are best suited to abstract from a given low-level relation. we here define two notions of  best approximations : 
definition 1 let a set of abstracting relations be given by 

　a relation r  is a smallest upper approximation of a relation r with regard to and there is no 
such that 
   a relation is a greatest lower approximation of a relation r with regard to iff and there is no 
such that 
　this definition may yield several smallest upper and greatest lower approximations. a unique upper approximation is given by the conjunction of the best upper bounds  while a unique lower approximation is given by the disjunction of the best lower bounds. 
we do not present an algorithm here for computing the 


1
   one notable exception arises when granularity levels are not directly comparable  e.g.  month vs. week  cf. bettini et al.  1 . 
1 	temporal reasoning 

table 1: a sample of abstracting relations 

approximating relations  since its appropriateness depends heavily on the abstracting relations being given and the temporal reasoning system being used. two obvious problems may illustrate these interdependencies: first  for abstracting relations with quantitative parameters the proper instantiation of free parameters with actual values in the corresponding relation allows for redundant variation. symmetric relations like  time point t1 is at most 1 unit away from t1  require particular care  since the equivalent  time point t1 is at most   unit away from t1  does not yield any new information. second  additional constraints are needed to control proper instantiation of an abstracting relation. for instance  the definition a in table 1 should be supplemented by the restriction that ab and ae really form an interval. though  in principle  all pairs of time points may determine an interval that one could talk about  in practice  this generality should be avoided. another additional constraint considered plausible for all abstracting relations is the unique name assumption which prevents  e.g.  the unification of the three variables a  1  c in the abstracting relation f from table 1. 
　let us now illustrate our notion of generalization with two examples. assume we want to mine the gtn resulting from  1  for interesting complex rules. for our first example  we are interested in temporal rules on how the arrival time of mr. roget influences the schedule of mrs. meyer appearing after him. then  we add an unconstrained relation to the 
gtn with  composing  in the way defined by staab  1b   the relation given in  1g  with the one from  1h  and projecting the result onto yields: 
　generalizing this relation  obviously  only the abstracting relations d  e and f may apply  cf. table 1   since the other ones require intervals instead of time points  e.g.  a and b  or a different number of time points  viz. four as in c . approximating  from above'*  abstracting relation f does not generalize  1  at all  while  time points appear in this order'' is the best generalization  since it is more specific than the corresponding instantiation of e. an approximation  from below  fails  because none of the abstracting relations is more specific than the relation in example  1 . 
　correspondingly  we may ask how mr. george's arrival correlates with those of mr. roget and mr. meyer. given that we have only qualitative information about the length of mr. george's flight  it seems most appropriate to reason entirely on a qualitative interval structure. for the sake of brevity  we may here ignore many of the indicating presuppositions involved in algebraic operations on qualitative durations  cf. clementini et al.   and simply present the result derived from the corresponding inference process: 
 1  
   this result is generalized  ufrom above and below   by  time point being at least a medium time after  correlates with being at least a medium time after time point 

　conceptualizations at the interface level are of particular value for combining single evidence and generalizing it. in our text understanding application  e.g.  we represent graded information like  hard disk a is faster than hard disk b  by gtn relations  cf. staab and hahn  . most of these relations can be handled by a comparatively inexpensive representation formalism. however  we also have to deal with much more complex utterances like  up from a block size of 1 kb the data throughput decreases from 1 kb/s to less than 1 kb/s'  which require more expressive representations  and  hence  costly reasoning. by flexibly assigning reasoning tasks to the least expensive representation level the entire understanding process might still be executed within feasible bounds. when just few of the represented gtn relations are complex  which is the case most of the time  reasoning at the finer levels remains feasible. only if complicated gtn relations abound  one must resort to reasoning at coarser levels as an approximation - and eventually to an abstracting interface level that makes generalizations accessible to the user instead of a myriad of tiny bits of detail. 
1 related work 
the scalability of temporal reasoning  as a static notion  is already inherent to the hierarchy of calculi discussed in section 1. it derives from the fact that these constraint systems stand for different levels of expressiveness. as the arrows in fig. 1 indicate there are rather limited calculi  e.g.  point algebra  vilain et al  1    ones with increased expressiveness  e.g.  allen's calculus  alien  1  or tcsps  dechter et al  1   and fairly general ones  such as integration models for allen's calculus with metrical reasoning  kautz and ladkin  1; meiri  1; badaloni and berati  1  . as a framework for our research  we have introduced a very general model  viz- gtns  whose expressiveness exceeds that of all previously mentioned calculi. so this hierarchy lays down the foundations for formalizing temporal constraints at different levels of granularity. weaker constraint systems may be an appropriate choice for applications which require less specific constraints and offer on their bonus side the tractability for certain reasoning algorithms. 
　using this trade-off between expressiveness and computational complexity in a strategic manner leads to the idea to navigate this graph of different levels of expressiveness on demand - depending on the needs of the particular application. the idea to dynamically shift between less expressive and computationally cheaper systems and more expressive though computationally more expensive ones during run-time is the starting point of our work  and has been on the research agenda for quite a long time  cf. hobbs   sathi et al   nakhimovsky  . this flexible manouvering between granularities as a principle method rather than as an impeding side conditions constitutes the main difference between our approach and common reasoning systems that implement several metric systems. 
　for instance  bettini et al  have extended stp networks in order to represent interval structures from a large 
	staab and hahn 	1 

range of granularity levels. thereby  they have even included non-contiguous structures  e.g.  business days . as an approximating reasoning algorithm they propagate constraints in parallel networks of single granularities. operators that map constraints between granularities communicate between the different networks. however  propositional abstraction  such as defined by our operator  is neglected in their approach as well as in other temporal reasoning systems. 
　this negligence may even be a drawback with regard to performance issues. approaches for efficient temporal reasoning use  e.g.  approximating propagation mechanisms  schwalb and dechter  1  or heuristics that optimize the search process  stergiou and koubarakis  1 . though our proposal still lacks comparable empirical evidence  we can guarantee the determination of criteria important for the inferencing task  e.g.  consistency for point algebra  path consistency for qualitative relations  in polynomial time  when granularities are switched to compute coarser results first  and refinements at more precise levels are postponed to subsequent rounds. optimized schemes like those in  schwalb and dechter  1; stergiou and koubarakis  1  may still not terminate and  if they are terminated from outside due to exhausted time budgets  as set up by anytime devices  cf. russell and zilberstein    the network cannot be asserted to be in a similarly well-defined state as a cascade of gtns at different granularities. 
　a complementary proposal has been made by euzenat   who permits to represent seemingly contradictory information at different levels of granularity  e.g.  at some given level one may perceive that two intervals meet  while at a finer level one may recognize that the first is just a tiny bit before the second. his abstraction operators reflect how perception may change by switching between different levels. 
1 	conclusion 
in this paper  we defined operators for transient moves between different abstraction levels of temporal reasoning. operators that were originally devised for constraint propagation   are used in our scalability framework for switching smoothly between different granularities as far as the reasoning proper and communication via interfaces are concerned. furthermore  we proposed macro definitions to achieve abstraction by approximating relations at the interface level  a research issue that to the best of our knowledge has not been dealt with so far. 
　the major open issue is then when to bring what level of abstraction into play. in our opinion  there is no general solution to this problem. in the research environment we work in  a natural language text understanding system  the appropriate choice of adequate abstraction levels often comes with the author's choice of specific linguistic expressions occurring in the text  their corresponding semantic interpretation and the progression of the text  cf. matsushita et al.  . having fixed such a starting point  we proceed from the cheapest level possible and turn to more expressive and expensive levels only when this is needed for proper text understanding. 
1 	temporal reasoning 
acknowledgements. 	s. staab was a member of the graduate 
program human and machine intelligence at freiburg university  which was funded by dfg. 