 
this paper presents a simple mechanism for the resolution of anaphora in limited domain natural language systems. for such domains  this mechanism provides functionality equivalent to the natural communication mechanism of anaphora as used and understood by people  but without the deep inferencing or cognitive modelling required for full simulation of human performance. the mechanism covers simple pronoun anaphora  and set selection anaphora  e.g.  last one    one before    others  . it was developed to provide the most efficient and effective communication between system and user  even if this meant diverging significantly from human performance when this performance was impractical to reproduce. in cases of radical divergence  we were careful to make the behaviour of the mechanism very simple and easy to predict. in this way  the user can rely either on his experience of human performance or his knowledge of the artificial  but simple  substitute to predict the behaviour of the system m response to his inputs. an algorithmic description of an implemented version of the mechanism is presented. a similar approach to other aspects of man-machine interfaces is recommended as a promising way to address the problem of habitabiiity that still plagues all natural language computer interfaces.1 
1. introduction 
   there has been considerable interest recently in natural language interfaces to interactive computer systems. a primary motivation behind such interfaces is the belief that a user will be able to communicate much more naturally and easily with a computer system if he can do it in his own language  instead of having to learn a special artificial one. however  the ability to parse natural language into an internal formalism is not in itself sufficient to make an interface appear natural and graceful to its user. to create this impression  an interface must also deal with pragmatic linguistic phenomena  such as ellipsis and anaphora  including those that arise from spontaneous language use  such as grammatically deviant utterances. mechanisms to deal with some of these phenomena have been developed for many recent natural language interfaces to limited domain systems  including sophie   lifer   pal  and planes   as well as in work by grosz  1  'and by hayes and mouradian  1j. 
this research' was sponsored by the defense advanced research projects 
agency  dod . arpa order no 1. monitored by the air force avionics 
laboratory under contract f1 c 1 the views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies  either expressed or implied  of the defense advanced research protects agency or the us government. 　in this paper  we present another such mechanism; one to resolve anaphoric reference by pronouns or noun phrases. while anaphora resolution has been provided by several of the systems mentioned above  the mechanism we present deals with some aspects of the phenomena that have not been considered before  and perhaps more importantly  is the product of a distinctive approach to the development of such mechanisms. in developing our anaphora mechanism  we have viewed the anaphora employed by humans as a natural communication mechanism which provides its users with a certain functionality  viz. the ability to identify certain things to their hearers via highly abbreviated descriptions such as pronouns. our aim has been to provide the users of a computer system with an equivalent functionality  viz. the ability to identify certain things to the system via similarly abbreviated descriptions. the stress here is on equivalent. in other words  given the two goals of: 
1. simulating human performance in the interpretation of anaphora; 
1. providing the functionality of anaphora in whatever form will make for the most effective and efficient communication between system and user. 
we have chosen the second in preference to the first. now  one might argue that the best way to achieve goal 1 is  in fact  to achieve goal 1. however  even if this is true  pragmatic considerations rule out preferring 1 over 1 for any interface to be constructed in the near future. as research on the broader problem of anaphora resolution in general natural language  e.g.  1 1   has shown  simulation of human performance requires the application of massive amounts of real world knowledge. even given the much more constrained worlds  such as data base retrieval or command interaction  that natural language interfaces typically operate in  full simulation of human understanding of anaohora would require far more information than it is currently feasible to encode in a practical interface. 
1    the fact that we chose goal 1 over goal 1 does not mean that we believe human performance on anaphora should be totally ignored. indeed  if we can base the performance of our mechanism on the human version  it will be much easier for a human to use the mechanism because he will be able to predict the behaviour of the mechanism by analogy to human behaviour. the only problem is that the system user might over-generalize and predict that the systems anaphora mechanism will perform the same as a human in cases where it cannot. for this reason  any interface system using this mechanism must have good feedback techniques to alert the user to when this might be happening. on the other hand  choosing goal 1 over goal 1 enables us to depart radically from human performance if this turns out to make things simpler for our anaphora mechanism without reducing the functionality available to the user. however  when we do this  we must be careful that it is easy for the user to understand and remember how those aspects of the mechanism will work  since he cannot rely on his human expectations. we can sum this up as follows: 
  in those areas in which the mechanism approximates human performance  we can rely on a user's human expectations  so long as we take appropriate precautions against over-generalization. 
  in those cases in which the mechanism diverges radically from human performance  the way in which the mechanism operates must be easy to understand and predict. 
the anaphora mechanism we present below meets these criteria. 
remaining sections of the paper delimit the range of functionality provided by the mechanism  describe the mechanism from the user's point of view  present algorithmic details of the mechanism  and finally examine some problems that still remain. 
1. aspects of anaphora to be covered 
　this section presents the types of anaphoric references covered by the mechanism we have developed for the resolution of anaphora in limited domain natural language interfaces  
　the device of anaphora in human language allows a speaker to identify an entity to his listener without giving a  full  description of that entity. when a speaker describes something anadhorically  the description he gives is not sufficient to distinguish the entity from everything that the listener knows about  but only to distinguish it from a much smaller group of entities that are directly related to the current state of the dialogue or discourse. the resolution of anaphoric references in general natural language has been studied actively for some time now  see charniak 1  or sidner  1  for an introduction to the literature of this area . the work reported here is not presented as a theoretical advance in this area  although the aspect concerning set selections  see below  might have some interest from that point of view   but rather as a piece of applied natural language research in the spirit of the planes system of waltz   or the lifer system of hendrix . 
　the functionality of anaphora is very useful for computer interfaces  whether based on natural language or not . the full description of  say  a file or a data base item might be quite lengthy  requiring considerable typing  so it would be very convenient for the user of a computer system that dealt with such objects to be able to refer to them  using a  presumably much shorter  anaphoric description  once they had been introduced into the interaction either by him or by the system. the basic functionality we wish to provide the user of an interactive computer interface is  therefore  the ability to refer to system objects without describing them fully  after they have been introduced into the dialogue  and while the dialogue is still  related  to them. a precise definition of what  related  means here must wait until the algorithmic description of our anaphora mechanism given in section 1. in the meantime  let us examine some examples of the kinds of anaphoric descriptions to be covered. the examples we give are all drawn from the domain of an electronic mail system with which we have been experimenting. we assume the system responds appropriately after each line of 
　　1note that we will not make the careful distinctions between reference  specification  indirect specification  and co specification employed by sidner we will confuse all these relations under the broad term of reference this lack of precision may be partially excused by the lack of any real world associated with limited domain systems the real world of such a system is its database 
the user's input. 
 one of the simplest and most useful forms of anaphora is the use of pronouns to refer back to some recently mentioned object as in: 
display all messages from campbell 
delete them 
display all messages to him 
here  them  refers to all the messages from campbell  that the system knows about   and  him  refers to campbell. most such references can be interpreted correctly by the well known rule that such pronouns refer back to the last mentioned object of the same type and number  so  him  refers to the last animate  male  singular object  viz. campbell  and  them  refers to the last plural object  viz. all the messages from campbell. the selectional restrictions imposed by the actions or states in which the pronouns participate can also be used to help determine the possible referent  so that  in the example above   them  should refer to a plural object that is deleteable. these selectional restrictions are very powerful in limited domains. for instance  in our example domain  only messages are deleteable  so that  them  in the example above must refer to the last mentioned set of messages. a clearer example of the power of selectional restrictions in limited domains is: 
display the messages from campbell or murray delete them 
display any messages copied to them 
here  the first input mentions three sets of objects  of types message and person  respectively  but selectional restrictions allow the referents of  them  in the second and third inputs to be properly identified. it is only the leverage available from the strong selectional restrictions typical of limited domains that makes such domains so tractable for natural language processing. inferences that would normally require much more complicated mechanisms in more general domains can be  compiled into  the selectional restrictions. all limited domain natural language systems depend very heavily on this leverage. 
　the  last mentioned  rule should not be used to distinguish between items mentioned in the same input  so for example  in: 
display the messages from campbell to murray display the messages copied to him 
 him  is ambiguous between campbell and murray. even the much more sophisticated focus tracking rules proposed by sidner 
  for referent determination cannot help in this situation. of course  a more detailed knowledge of the user's goals might enable another human to resolve the referent of  him  quite easily  but this is precisely the kind of information that there is no simple or efficient way to encode in current interfaces. our anaphora mechanism should  therefore  report that the referent of  him  is ambiguous between campbell and murray  and leave it up to other aspects of the interface to determine by interaction with the user which was really intended. one other point to note is that multiple instances of the same type of item in the same input create an implicitly mentioned set of the union of all the instances  so that if  him  was replaced by  them  in the last example   them  would refer to the set of campbell and murray1. 
　besides straightforward references back to previously mentioned objects  a second very useful type of anaphora that has 
　　1whether the input would then be a request to display all the messages to campbell plus all the messages to murray or only those messages that are to both campbell and murray is not a matter for the anaphora mechanism to decide. 
1 

received less attention in the literature relates to pronouns which select certain elements out of larger sets. these selections may be absolute  the last one  the first three  the second through the fourth   or relative to other elements of the set  the one before  the following two  the others . examples of the use of these pronouns include: 
show the headers of the messages from campbell 
display the last one display the one before display the first two delete the others 
note that  others  refers to all the messages from campbell except for the first two and the last two  although  as in the case of any destructive operation whose operands were obtained through anaphora  a prudent interface would ask for confirmation of this conclusion. the anaphora algorithm we present below allows the use of such set selection pronouns. in essence  it allows absolute set selection pronouns to select from the last set mentioned that satisfies the selectional restrictions applicable to the pronouns; relative set selection pronouns operate relative to the last selection from the set  or in the case of  others   relative to all the selections that have been made from the initial superset. 
　in all the preceding examples  we have assumed that the underlying message system maintained a universe of objects of type message and person  so that referents for  campbell  and  all the messages from campbell  could be determined by the system. this assumption of a global data base or context against which non-anaphoric descriptions can be resolved is an appropriate one for most limited domain interfaces. in the cases we looked at above there was never any confusion about whether a description should be resolved against the global context or treated as anaphoric references to the local context; pure pronouns are always treated as anaphora  and the other 
descriptions were clearly non-anaphoric. but consider examples like-
display the messages from campbell display the ones to murray 
display the messages from campbell 
delete the last message 
does  the ones to murray  mean those messages that are both from campbell and to murray or all the messages in the global context that are to murray  does  the last message  mean the last one of those from campbell  or the last one in the global ordering  assuming such an ordering exists   in general these questions are impossible to answer without knowing why the user is issuing the commands he is issuing  and as we said before  attempting to keep .track of such information is impractical for current technology. 
　to deal with this problem of deciding whether a particular description is global or anaphoric  we have adopted the following simple principle  descriptions that are headed by pronouns will be considered anaphoric  and descriptions headed by nouns will be considered to refer globally. thus  in the examples above   the ones to murray  means the messages that are both from campbell and to murray  while  the last message  means the last message in the global order. this rule will result in behaviour that is sometimes quite different from the behaviour of a human in similar circumstances  but the complexity of the information involved in simulating human performance in this case is too great and a compromise of some sort is unavoidable. the rule we have adopted will correspond to human behaviour more often than not  but most importantly it is simple and results in easily predictable system behaviour. if the user wants to refer to something 
anaphorically  it is easy enough for him to remember to use a 
pronoun  while if he wants to give a global description  he need only use the appropriate noun. and if he forgets  the unexpected result will be easily explainable. 
1. presenting the anaphora mechanism to the user 
　our prime requirement for providing a computer interface with the functional equivalent of a natural communication mechanism like anaphora  s that the workings of the mechanism be either directly analogous to human performance or very easy to understand and predict. in this way  the user can rely either on his experience of human performance or his knowledge of the artificial  but simple  substitute to predict the behaviour of the system in response to his inputs  and thus construct his inputs to use the mechanism to best advantage. the following user-level description of our anaphora mechanism demonstrates that this mechanism fulfills this requirement. note  in particular  that the aspect of the mechanism which displays the greatest divergence from human performance  viz. the radically different treatment of pronouns and nouns  is also the simplest aspect to explain. 
1. the interface maintains a current context of all the system objects mentioned by the user or the system. 
1. you may use the pronouns  he  she. it. they  and their derived forms  to refer back to objects in the current context. only descriptions involving pronouns will be interpreted with respect to the current context  descriptions whose head is a noun will be interpreted with respect to the global context in the normal way. 
1. the referent of such a pronoun is the last mentioned object that agrees with the pronoun in type  message  person  date  etc  and number  singular or plural . the input context is considered in determining the type of a pronoun  e.g. in  display it    it  is restricted to be message since the argument to display must be a message . 
1. the pronoun  one  may be used: 
a. in place of the head noun of a noun phrase  e.g.  the ones from smith    
b. with the adjectives  last  first  second  third  etc. to refer to an individual member of a larger set  e.g.  the second one    the last one from smith    
c. with the adjectives  before  after  to refer to set members on either side of those previously selected  e.g.  the one before  . 
1. wherever appropriate  numbers other than one may be used as pronouns in the same way as one  e.g.  the first three from smith    the two after ; 
1. once some elements have been picked out of a larger set  the pronoun  others  may be used to refer to the remaining elements of the set. 
　the above explanation relies on the user's understanding of the human treatment of anaphora for those aspects of the mechanism that most closely approximate human performance. however  these aspects are still not exact simulations of human performance  and so the explanation must be supplemented by examples which show how the mechanism actually works  especially when it fails to follow human norms. such examples and counterexamples provide protection against the user overgeneralizing and crediting the system with greater capabilities 

1 

than it really has. 	confirmation here since an undelete operation is available. 
　the following examples  commented as they might be for a display the last one user's benefit  were generated through a preliminary implementation of the anaphora mechanism according to the message 1 is displayed again. the absolute set selections in 
description given in the next section. the implementation is any sequence of absolute and relative set selections are always preliminary in the sense that it is not yet connected either to a real interpreted relative to the same superset. this superset  called the current selection superset  will always be the superset from message system or to a parser - its input was parsed into internal which the first absolute set selection in the sequence was 
format by hand. approximately three times the number of made. note also that the system cannot take into account that examples given here is necessary to cover all aspects of the it is being asked to do the same thing over again. 
mechanism's behaviour in what appears to us sufficient detail for a novice user. however  no reasonable number of examples is delete the others likely to familiarize the user with every idiosyncracy of the 
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　messages: 1 deleted mechanism  so detailed feedback of the referent choices made by the mechanism will still be essential when the mechanism is whenever   others  is used  it resets the system's memory of actually functioning in an interface. the cumulative subset of objects that have already been display the messages from campbell selected from the current selection superset to contain only the objects just referred to by  others . thus  the previous use of because this description contains no pronouns  it is interpreted  others  reset the  already selected  subset to be {1  1. 1   with respect to the global context. the intervening reference to message 1 added it to this set  
leaving {1. 1} as the referent set for  others . 
	1 	june 1 	campbell 	meeting tommorrow 
undelete them 
	1 	june 1 	campbell 	paper details 
messages: 1 restored 
delete them 
pronouns can be used to refer to sets or individuals selected 
 them  refers to the last mentioned set of messages ＊ only from a larger set through anaphora. messages can be deleted. messages: 1 deleted 
1. an algorithm for the anaphora 
	display any messages to him 	mechanism 
the messages description is headed by a noun  and so is in this section  we give details of the algorithm we have interpreted globally  but its subdescription   him   is a pronoun  implemented to realize the anaphora mechanism we have been and refers to the last mentioned person  either male or female   describing. the task of the algorithm is to map already parsed the system doesn 't understand the difference   in this case the 
person is campbell. 	input descriptions into system objects  e.g. to map a parse of  the 
ones from campbell  into a set of messages . the parsed form of 
	1 	june 1 	=  campbell 	re: meeting 	an input description is a structure with the components: 
1 june 1 =  campbell paper deadline type: one or a list of domain types that the description 1 june 1 =  campbell conference proceedings may refer to. 
1 	june 1 	=  campbell 	tgif number: 	singular or plural 1 	july 1 	-  campbell 	recent bugs 
1 july 1 ＊  campbell more bugs pronoun. true or false  depending on whether the head of the description is a pronoun. 
	display the fifth one 	components: a property list of descriptions of components of 
single messages are displayed in full format  and multiple the top-level object; the corresponding messages are displayed as above in header format  so at this components of the top level referent must agree 
point  the system displays the full text of message 1. message 	with these component descriptions. 
1 is chosen rather than message 1  because pronouns are abs set sel: indicates a selection from a larger set  specified interpreted relative to the local rather than the global context. by an offset from the start or end of the set. 
display the one before 
                                                                   rel set sel: indicates a selection from a larger set  specified for similar reasons  the system displays message 1. not relative to a previous selection from that set. message 1. display the one after thus   the last one from campbell  would be represented by: 
the system displays message 1. because the last two  type: message selections from the larger set form a contiguous subset  and number: singular message 1 is the one directly after that contiguous subset. pronoun: true components: 
	delete the others 	 sender: 	representation for  campbell    
abs-set-sel:  start: -1 number: 1  
messages: 1 1 deleted 
  
after one or more such selections have been made from a set of the  start  of the abs set sel specifies the starting place for the objects   others  refers to all the members of the set that have selected subset in the ordered superset  negative numbers count not yet been selected. the system does not ask for a backwards from the end of the set. 
1 

the algorithm maintains three structures: current  new  and 
backup. current contains the context established by the last input from the user and the reply to it by the system. backup contains the residual context from earlier inputs. new contains the context built up during the processing of the current input and the reply to it by the system. back up contains a list of individual objects  and a list of  non-empty  non-singleton  sets of objects. these constitute potential singular and plural referents for pronouns which do not refer to anything in the last exchange between the user and system. the lists wilt generally contain the last mentioned singular and plural objects of each type. current and new have an identical structure   current is replaced by new after each exchange between the user and system. they contain lists of individuals and sets just as in backup  and in addition  have a list of selection records. a selection record consists of a superset - the one selected from  a current subset ＊ the subset  possibly a singleton  last selected from it  a cumulative subset   the union of all subsets that have been current so far  unless it is reset by  others    see below   and a contiguous subset containing the union of all subsets produced by the last unbroken sequence of relative set selections  together with the absolutely selected subset the sequence started with. 
　referents are determined according to the following algorithm  which uses current and back-up only. 
1. apply the algorithm recursively to any descriptions in components of the current description. replace those descriptions by their referents. 
1. if pronoun of the current description is false  the referent is the set of all objects in the global context that agree with the components of the description. 
1. if there is no absset sel or rel set sel  and the description is plural  find all the sets listed in current that agree with the description in type and components. if there is just one of these  it is the referent: if there is more than one  the reference is ambiguous. if the description has components  the component matching procedure may select a subset of one of the sets in the list. if so  the selected subset will be the referent  or one of them in the case of ambiguity . if no referent is found in current  repeat the search in the list of sets of back-up1 
1. if there is no absset-sel or rel set sel  and the description is singular  perform a search analogous to the one in step 1  but using the lists of individual objects of current and backup. if no referent is found this way  perform the search exactly as in step 1  using the sets of current and back-up  referents found this second way will be ambiguous  unless the component matching selects exactly one element out of exactly one of the sets. 
1. if there is an abssetsel. the first step is to determine the set to be selected from. this is done by matching the description against the sets in current  but not back-up  in the same way as in step 1  i.e. as if it were plural and had no set-selection. the only change is that sets which are not in the ordinary list of sets in current  but are supersets of one of the selection records of current  are considered first as possible referents. once this preliminary set has 
　　note that searching in current before searching in back up helps to resolve pronouns with no inherent type restrictions  like  them   when the input content does not provide sufficient selectional restrictions to determine the type of the pronoun in such cases  the referent will be just those items in current of the corresponding number this provides part of the effect of the focus stack in the model of focus movement developed by sidner |1j. but cannot duplicate the effect 
been found  the actual referent is found by applying the set selection to it. 
1. if the description has a relsetsel. the referent must be determined relative to one of the selection records in current the selection record to use is determined by the matching procedure of step 1. but applied only to the supersets of the selection records. once the selection record has been identified in this way. the referent of the description is determined by either taking the complement of the cumulative subset  in the case of  others   or by taking the elements immediately preceding or following the contiguous subset  in the case of n before or after. this algorithm can. of course  either fail to produce a referent at all. or produce set referents for singular descriptions  or individual referents for plural descriptions. we take the view that such problems should be resolved by the other parts of the interface  possibly in consultation with the user  rather than by the anaphora mechanism itself. 
　the other important part of the anaphora mechanism concerns the way in which new is constructed while the current description is being resolved  and how current and back-up are modified ready for the next exchange between the user and system. the procedure is as follows: 
t. every referent found during the processing of the current input is added to new. as either one of its individuals or one of its sets as appropriate. 
1. if a referent is found as a result of an absolute set selection from a set which is not a superset of a selection record in current  then a new selection record is added to new. the superset of this record is the set selected from; the current subset contains the one or more objects involved in the referent; and the cumulative and contiguous subsets are the same as the cumulative subset. note that the subset selection possibility mentioned in step 1 of the referent determination procedure is also treated as an absolute set selection for the purposes of this step and the next one. 
1. if a referent is found as a result of an absolute or relative set selection from a set which is the superset of a selection record in current  then the selection record is copied from current to new  changing the current subset to the referent just found  and with the following additional changes: 
a if the selection was absolute  the contiguous subset is the same as the current subset  and the cumulative subset is the union of the current subset and the previous cumulative subset. 
b if the selection was  others   the cumulative and contiguous subsets are made the same as the current subset. 
c if the selection was a relative selection different from  others   the cumulative and contiguous subsets are augmented by the elements of the current subset. 
1 any objects or sets of objects mentioned in the system's response are added to new in the manner specified in step 
1. 
1. after the response has been completed and before the next input. current is replaced by new  and all objects in the individuals and sets of new are added to back-up. any objects already in back up of the same type and number are removed at this time. if this procedure involves adding to current more than one individual object of the same type  the set of all those individuals is also added to the set lists of back up and current. 

of returning to a previous context that occurs when this stack is popped 
1 
1. finally  new is made empty in preparation for the next input. 

the treatment of  others . in: 

1. problems with the anaphora mechanism 
display the messages from campbell 
display the last one 
display the one before 
delete it 
delete the others 

　while the anaphora mechanism we have been considering provides much of the functionality of the corresponding natural communication mechanism without any deep inferencing or cognitive modelling  there are still some aspects of its behaviour which neither correspond to human intuition  nor operate straightforwardly enough to make prediction by the user easy. we present below the two such aspects of the algorithms behaviour that we are currently aware of  together with some thoughts about how to improve them. 
both problems concern the set selection part of the mechanism. 
the first is the most important and concerns multiple levels of set selection. an example is: 
display the messages from campbell display the ones copied to smith delete the last one 
the first message description is resolved globally because it is headed by a noun. the second is resolved as a subset of the messages from campbell  since it is headed by a pronoun  and that set was the last mentioned set of messages. the question is: which set of messages should  the last one  be resolved against  the current mechanism resolves it against the messages from campbell because it is a set selection and set selections are always resolved first against sets currently selected from. this avoids the problem of developing multiple levels of selected sets  and is not an unreasonable interpretation for the above example  representing an easy to predict choice between what are  from the human point of view  two ambiguous interpretations. unfortunately  it provides an unintuitive result in the case of: 
display the messages from campbell 
delete the ones copied to smith undelete the last one 
the problem here is that the user is able to apply knowledge 
 about only undeleting messages that have been already deleted  that cannot be encoded into the selectional restrictions of the domain  and so is unavailable to our anaphora mechanism. 
　there are two potential solutions to the problem: one is to allow multiple levels of selected sets and make the anaphora mechanism generate ambiguous  to it  alternative referents in such situations  leaving the resolution up to a more knowledgeintensive part of the system. the second alternative  more in keeping with the spirit of our enterprise  is to document this aspect of the system's behaviour very carefully  and expect the user to learn  with the support of lots of feedback  to live with it. to make make this second alternative more palatable to the user  it would be possible to augment the anaphora mechanism to allow the user to specify the set to be selected from explicitly  as in: 
display the messages from campbell 
delete the ones copied to smith 
undelete the last of them 
by the rules of the existing system   them  refers to the messages that are from campbell and copied to smith  and a possessive construction of this form could conventionally be interpreted to indicate the set to be selected from. 
a second problem with the set selection mechanism involves there is a problem about whether  the others  includes the last of the messages from campbell. the present algorithm would say that it does  but a human would lean towards saying that it does not. note that there would be little doubt that it did if the fourth input   delete it   were omitted. one solution would be to change the accumulated subset of a selection record to be its current subset if the current subset were ever referred to directly by a pronoun. 
　neither of these problems can be resolved satisfactorily without testing potential solutions through use of the anaphora mechanism in a real interface. such testing will probably also turn up other problems that we have not yet considered. we expect to carry out such tests in the near future. another interesting experiment that we are considering would involve giving the anaphora mechanism the ability to explairt why it made a referent selection the way it did. such an explanation facility might make it much easier for a user to learn to live within the limits of the mechanism. 
1. conclusion 
　this paper has presented a simple mechanism for the resolution of anaphora in limited domain natural language systems. for such domains  this mechanism provides functionality equivalent to the natural communication mechanism of anaphora as used and understood by people  but without the deep inferencing or cognitive modelling required for full simulation of human performance. the mechanism covers simple pronoun anaphora  and set selection anaphora  e.g.  last one    one before    others  . it was developed to provide the most efficient and effective communication between system and user  even if this meant diverging significantly from human performance when this performance was impractical to reproduce. 
　we believe the same approach can be used to develop similar algorithms for other natural communication mechanisms such as 
those involved in the resolution of ellipsis or the recognition of ungrammatical input  and we suggest this general approach as a way to address the problem of habitability  first raised by watt   that has long been a major stumbling block for natural language computer interfaces. 
