
monitoring a diffuse event with a wireless sensor network differs from well studied applications such as target tracking and habitat monitoring and therefore we suggest that new approaches are needed. in this paper we propose a novel low power technique based on a multiple agent framework. we show how a set of simple rules can produce complex behavior that encompasses event characterization and  data routing. we demonstrate the approach and examine its accuracy and scalability using a simulated gaseous plume monitoring scenario. 
1 	introduction 
perhaps one of the major promises for sensor networks is the vision of a large-scale  environmental monitoring system that is deployed by a poorly-controlled dispersal and yet operates optimally for several years  ramanathan et al. 1; werner-allen et al.  1; estrin 1;  szewczyk et al.  1 . however  many challenges stand in the way of the vision  not least the issues surrounding efficient power usage to sustain the life of such a large  distributed sensing instrument. while  it is clear that hardware advances in mote and battery technology will play a key role in overcoming some of this power problem  we believe that significant advances in software will also prove important. indeed  many environmental sensor networks will require significant software sagacity to achieve their goals in a power-efficient fashion.  
　consider  any large-scale monitoring system that must amalgamate sensed data to accurately characterize an event  like a gas-plume moving across countryside.  such an instrument will need to route and collate significant amounts of data in order to identify and dynamically track a complex event as it moves through the environment. not only will this sensor network have to carry out these tasks  but it will need to do them exhibiting an energy optimal and energy balanced strategy; for example  the overall network must  take care not to use the same sensor nodes continuously. if they do nodes are lost as their batteries become exhausted. conversely  using too many nodes to create a data route will ultimately use more energy and shorten the overall useful life of the network. some current systems have considered some of these issues  though they have often concentrated on target tracking  horling and lesser  1; lesser et al.  1; intanagonwiwat et al.  1 .  in this paper  we propose a novel multi-agent technique designed to handle the problems presented by large scale diffuse events.  
1 large-scale environmental monitoring 
energy management is perhaps the most critical constraint facing wireless sensor networks  wsns   culler et al.  1 . the routine response to this problem is to employ routing algorithms that limit communication overhead  akyildiz et al.  1 . yet most of these techniques are designed for traditional target tracking applications - essentially scenarios with small numbers of data sources. 
　large-scale environmental sensing of spatially-distributed events will routinely cause many nodes to generate readings at the same time. furthermore  these multiple data points will need to be amalgamated efficiently. for example  consider a wsn tasked with reporting the limits  shape and location  and average concentration of gas plumes. while average concentration may be estimated accurately from a subset of data points  circumscribing the shape of a plume requires data points along the perimeter of the plume to be captured and fused.  
　although achieving such high resolution and high fidelity might be viewed as the bad news  there is some good news for such applications. they can be reasonably delay tolerant. in particular the evaluation interval for environmental monitoring  is likely to be of the order of months to years. in cases where the sensor network is tasked with an emergency response role the delay tolerance could be of the order of hours.  although quite different  both of these time intervals are delay tolerant relative to network latencies and routing delays. further discussion of delay tolerant networking may be followed from  ho and fall . 
　we have suggested that algorithms developed for target tracking may not scale well in terms of efficiency as the size of a monitored phenomenon grows. figure 1 provides some evidence for this intuition  as it shows the number of messages generated  as an indication of energy used  by a version of directed diffusion  intanagonwiwat et al.  1  running within the j-sim network simulation package  sobeih et al.  1 . although the algorithm ultimately scales in a manner close to linear it experiences an initial phase of explosive growth in the number  messages generated. this behavior occurs as the size of the target exceeds a few percent of the overall monitored area. for us  large-scale phenomena are of interest and our aim is to achieve  at worst  linear growth in the number of messages generated as target size scales from below 1% to 1% of the monitored area. 

figure 1. the average number of messages generated per node by directed diffusion for phenomena of varying scale  scale is shown as the percentage of the monitored area affected by the event . 
1 	the multi-agent approach 
our application context is set in the near future  where low cost but powerful sensors can be deployed in very large numbers to monitor  with a focus on phenomena that require data from a large area to be integrated. the nodes are assumed to in place long before any event occurs  and conserve energy by using long sleep cycles - we are essentially suggesting that for long term monitoring most nodes must be powered down most of the time. our approach also specifically trades latency almost entirely for energy conservation.  

figure 1. an agent is dispersed across several static nodes  square s   and the overall instrument consists of several agents at any one time traveling through the network. the large circle represents a contour of some notional event. the smaller circles represent the one hop  radio range  neighbourhood of leader nodes and the arcs depict the leader-member relationship that constitutes an agent. 
we cause a number of agents to be generated spontaneously within the network and these agents gather and process the data. the approach is novel in that each agent is distributed across a number of nodes and the agents move by transferring part of their state to other wsn nodes. the wsn nodes themselves are static and may form part of many different agents during the lifetime of the instrument. we aim to show that a simple rule set can produce complex behavior allowing a small number of agents to satisfy accuracy and energy efficiency requirements of the application. 
1 distributed agent architecture 
our agents are composed of a set of roles distributed across multiple nodes. each agent consists of a leader role operating on one node  and multiple member roles each operating on nodes adjacent to the leader node. we do this for two reasons. firstly it provides the agent with some spatiallydistributed knowledge of the environment which can then be used for navigation. the agent uses this knowledge to navigate through the network to regions of different sensor readings. secondly  the distribution of responsibilities achieved through nodes' adoption of roles provides some redundancy that gives the agent an ability to survive failure of individual nodes. this can occur because of energy depletion or damage - however this aspect is not examined in this work. the agent architecture consists of the agent state embodied in various roles along with a terse communication protocol for role deliberation and a rule set for navigation. each node can assume only one role at a time  agents may overlap spatially but not in terms of membership .  
　the roles are sleeper leader  member and router. by default nodes adopt the sleeper role. this role exists outside the scope of any individual agent and defines the default responsibilities - a sleep cycle punctuated by listening cycles in which the node is receptive to membership requests from nearby leader nodes.  
　the overall wsn operates by seeding itself with a number of agents. this is achieved by sleeper nodes having a small probability of converting to the leader role at each wake cycle if its sensor reports a data reading. a leader recruits a number of nearby nodes that become members. once formed a data agent consisting of a leader and a set of members  then uses its combined spatial knowledge to navigate according to a rule set. the final role - router - is a specialized leader role originating at the data sink that is used to harvest data from leader nodes.  
1 the roles 
1.1 the sleeper role 
by default all nodes assume the sleeper role  in which they operate a sleep cycle to conserve energy. they wake periodically and listen for membership requests from nodes in their immediate environment  i.e.  one radio hop away .  
rulesleeper role s1if a leader's member request message is received adopt the member role.s1if a member acknowledgement message  m1  is received from any neighbor role broadcast sensor reading to all neighbors.s1check probability of becoming a leader or router role  leaders are only formed if a local data reading   1  and routers if the data sink is a neighbor .s1calculate local hop count  based on messages received and local sensor reading  to event and forward to neighbors.table 1. the rules used to define the sleeper role. 
if multiple requests are received the sleeper role causes its node to select one randomly and join that agent thus assuming the membership role. if no requests are received within some period the node powers down and the sleep cycle recommences. 
1.1 the leader role
leader roles form the basis of data gathering agents  data agents  and are created randomly within the network  via rule s1 . their first duty is to grow their membership. in our demonstration the leader seeks to enlist a minimum of three neighboring nodes with the aim of providing good spatial coverage. the leader then uses the sensor readings from these nodes  or their hop count to the nearest data reading  to calculate a gradient across its sensed area. the leader selects one of its members  either upstream or downstream depending on the mapping algorithm in operation and declares it the new leader.  the old leader forwards current mapping information - a series of tuples {reading  location  time} - to all neighbors and then all members retire to sleeper role and the process commences again. section 1 describes the leader rule sets used to implement contour mapping. 
1.1 the member role
once a leader requests a node's membership the member senses its local data level and transmits this to the leader along with a membership acknowledgement.  
rulemember role m1acknowledge membership on receipt of message from leader.m1adopt leadership if transferred  leader nomination  from leader.m1return to sleeper role after some period if leader nomination message or keep awake message is not received from current 
leadertable 1. the rules used to define the member role. 
1.1 the router role 
this role is randomly created by nodes neighboring data sinks  base stations . initially routers use a navigation rule {r1} similar to that of leaders' {l1  l1} until an event contour is located. on the outward journey the router navigation differs from leaders in that a number of random moves are used to balance energy usage against burn out of nodes close to the sink. once data levels close to the desired contour has been located routers wait to encounter other agents. if they encounter an agent carrying a significant amount of data then this is harvested and the router attempts to return to the data sink. each node in a router's path records the identity of the previous node to allow routers to retrace its steps for return journeys.
rulerouter role r1 move router leadership to member with reading closest to desired contour level or - periodically - select a member at random. r1 if reading is within some margin of the desired contour then stop transferring leadership  shed membership and increase sleep durations. r1 if a data agent is encountered request its data  if more than some number of data points are available return to base.  r1 if returning to base  move  leadership by retracing outward path. r1 if no move is available transfer leadership to a randomly selected neighboring node. table 1. the rules used to define the router role 
1 the contour-mapping algorithm  
each agent moves through the static wsn node field by transferring the leader role from one node to another. to map the contours of the event  the agents need to move through the wsn field until an event is detected  e.g.  a gas plume . once the event is encountered the agent should locate a sensor reading close to the required level and attempt to circumnavigate the contour.  this can be achieved using the following rules: 
ruleleader role l1transfer leadership to the member node with a sensor reading closest to the desired contour. l1do not transfer leadership to member nodes that recently held a leader role. table 1. the rules used to define the leader role
these rules although simple  are effective in enabling agents to follow the event contour. the second rule  l1  has a dual purpose - it causes an agent to move away from areas recently explored and it also contributes to overall efficiency as it causes other agents to avoid the same areas. depending on the direction of an agent's initial approach to the contour some agents move in a clockwise direction while others travel in a counter clockwise direction. 
1 	experiments and results  
to demonstrate the proposed multi-agent algorithm  we have developed a sensor network simulation incorporating an abstract event - essentially a disk shaped phenomenon.  to gauge the effectiveness we have created two experiments  the first examines the accuracy of our approach by recording the positions reached by our agents as they seek to map the event contour. the second explores the effect of increasingly diffuse targets on the efficiency of our algorithm. all experiments in this section simulated 1 nodes in a two dimensional 1 grid  see figure 1  and each trial ran for 1 seconds. the target event and sensor nodes are stationary.
1 parameter discovery and selection 
a number of parameters dictate the operation of our approach. the following  parameter choices  table 1  have been developed during our experimentation however we have not explored the parameter space in a systematic manner and we expect that more optimal parameter sets exist. 
parametervaluenumber of members in a data agent 1 sleeper sleep duration 1 sec sleeper wake duration 1 sec no move period 1 sec sensor minimum threshold 1 margin for rules r1   l1 1 number of data points  rule r1  1 number of moves  rule r1  1 member stay awake period  m1  1 sec table 1. the parameters used in this work 
1 results 
to test out hypothesis that the leader navigation rules {l1 l1} will cause agents to circumnavigate the contours of an event we have recorded and superimposed the locations reached at each time step by agents over several different experimental runs  figure 1 .  

figure 1. the superimposition of 1 runs  each showing the node location at each second of agent's leader roles. each run consisted of one agent navigating for 1 seconds with a target event similar to that displayed in figure 1.  
though simple the rules are very effective in identifying and tracking the presented contour. in a real scenario we are likely to be interested only in the actual contour data returned to the sink node  as opposed to an accumulation of locations reached as shown in figure 1 .  the following  figure 1  provides an example of the useful information generated and routed to the data sink during a single simulated task.   

figure 1. an example of the contour data  data target is 1 plus or minus 1%  returned during one experimental run using 1 leaders and 1 routers  the x axis is cropped and compressed compared to figures 1 and 1 . 
the second experiment examines the relationship between energy usage and the physical size of the target event. as discussed in this papers introduction this relationship is important as many extant algorithms have been developed  for target tracking applications  figure 1  where the target is likely to account for less than 1% of the sensed area.  in figures 1 and 1 the probabilities used for rule s1  table 1  result in an average of 1 data agents and 1 router agents being used for the duration of each experimental run.  

figure 1. the number of messages generated per node  each point is an average of 1 trials  by our approach for phenomena of varying scale  shown as the percentage of the monitored area affected by the phenomenon  compared to the implementation of directed diffusion  intanagonwiwat et al.  1  packaged with j-sim  sobeih et al.  1 . 
the amount of energy used  as indicated by the number of messages generated  is several orders of magnitude smaller than that of directed diffusion. the number of messages per node shown in figure 1 is on average only 1% of those for similar event sizes. while these numbers are not directly comparable due to the different aims of the algorithms it is clear that our approach is significantly more efficient for this application. the results also show  figure 1  that our approach is almost free of dependence on phenomenon size and therefore meets our design aims for use with large diffuse events. however as you might expect the number of agents used  as dictated by the probabilities used for rule s1  has an effect on both the system accuracy and the energy used. in figure 1  we define accuracy  as the total number of unique contour values returned to the data sink. 

figure 1. the effect of varying the number of agents deployed on the average energy usage per node for an event covering approximately 1% of the sensed area. 

figure 1. the effect of varying the number of agents deployed on the overall accuracy for an event covering approximately 1% of the sensed area. 

figure 1. average elapsed time before the event data was delivered to the data sink compared to the number of agents deployed. 
the results shown in figures 1 and 1 show an increase in both accuracy and energy used as additional agents are used. this is to be expected as more agents should generate more messages  as well as the potential to deliver more useful data. the increase in energy expenditure does achieve a considerable increase in the amount of data delivered to the data sink. the figures  1 and 1  show that the trends are linear and suggests that the ratio of accuracy gain to energy expenditure is likely to be favorable  offering the potential that designers could tune the approach to their own accuracy or resolution requirements. however as noted in section 1   our approach eschews the elapsed time to return results to save energy and this is measured and shown in figure 1. 
1 	related work  
multi agent systems  mas  are increasingly being applied to wireless sensor networks. o'hare et al.  argues that strong agency in the form of bdi agents  rao and georgeff 1   might have significant potential for decision making within wsns.  
　in the context of traditional target tracking  lesser et al.  1  discuss the application of various agent techniques to wsns. more recently  tynan et al.  1  have shown how multi agent systems can be used for the rapid design and verification of sensor network algorithms and topologies. this is interesting as they have developed tools which automate the translation and deployment of agent architectures to nodes  specifically from agent factory  o'hare et al.  1  to mica1 motes  crossbow technologies  1 .  
　in this paper  we have advanced a multi-agent algorithm for sensor networks that is capable of both routing and processing data for diffuse events. the idea of a persistent agent composed of several roles has been informed and inspired by the role-based techniques described in  mac ruair┴ and keane 1  and by beal's description of persistent nodes  beal 1 . in beal's work nodes are symmetrical clusters of hundreds or thousands of nodes in an amorphous computing context that can move and preserve state using a simple rule set. although our  motivation in terms of resilience to node failure is similar; our agents are closer in context and scale to those in rumor routing  braginsky and estrin  1 .  however our notion of an agent comprising of roles dispersed across different nodes  driven by  a need for spatially-distributed information  is novel. our approach also differs in that we embed features such as contour mapping specific to monitoring large diffuse targets.  
1 	conclusions and future work 
　we have described and implemented  a sensor network algorithm capable of mapping contours during large diffuse events such as gas plumes. using a multi-agent paradigm where each agent is composed of roles distributed across multiple nodes  this algorithm achieves efficient routing and data processing within the sensor network. our simulations have shown that this approach can accurately identify an event's contour and return the information to the data sink. a primary motivation of this work was to achieve such event detection in an energy efficient manner  given the finding that some extant algorithms degrade as the target size increases. our results suggest that our approach scales extremely well in this regard and furthermore generates significantly less network traffic than a parallel implementation using  directed diffusion.  
　in this study  our event model is quite abstract and so in the near future we will examine more complex phenomena. one interesting set of future issues is to examine the effect that different network densities has on the approach.  by varying the contour-mapping rule-set we hope to allow the algorithm to adapt to network density and to provide additional application functionality  beyond contour mapping. 
　we have offered a novel multi-agent approach to data processing within sensor networks. this is aimed at monitoring large scale diffuse events - a sensor network task understudied relative to target tracking. we believe this contribution to be important not only in advancing current practice but also in highlighting this progressively more vital sensor network application domain.  
acknowledgments  
this work was funded in part by grants from dundalk institute of technology in ireland to the first author and science foundation ireland under grant no.1/in.1/i1 to the second author. 
