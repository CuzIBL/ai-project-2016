* 
this paper presents the semantics of trio*  an object oriented language devoted to specify realtime systems referring to different time granularities. time granularity allows to describe the behavior and the properties of a system and its environment with respect to different time scales. trio* semantics is expressed by translation into a logical framework supporting the notion of time granularity. such a semantics provides the executability of object oriented specifications. 
1. introduction 
   the aim of the paper is to present the semantics of trio*  an object oriented language  devoted to specify real-time systems  in which several temporal granularities can be referred. the semantics is provided by means of translation into a logical framework supporting the notion of time granularity  ciapessoni 1   and this paper focuses on the translation of temporal aspects. this allows to get both a formal semantics and the logical executability of the object oriented framework. the logical language supports the specification of granular real-time systems. it is a revision of previous time granularity formalization proposals  corsetti 1a/1b   based on a metric temporal logic named trio  ghezzi 1 . temporal granularity is a significant issue in ai  both in a theoretical and applicative perspective. from a theoretical point of view  dealing with time granularity requires to structure temporal models into differently grained components and to formally define their relationships. from an applicative point of view  temporal granularity plays a major role in several domains as temporal data base  planning  scheduling  diagnosis and natural language understanding. the notion of granularity allows to embed different levels of knowledge in a 
   representation language and refers to the level that abstracts from the domain only those aspects relevant to the actual 
¡¡the work is funded by the centro ricerche automauca  cra  of the electricity board of italy  enel   and partially by the national research council  cnr   within piano finalizzato informatica e calcolo parallelo. 
goal. in particular  temporal granularity enhances both the expressive and the computational power of a knowledge representation formalism. 
about the former  time granularity allows to represent the dynamics of different processes according to different time constants as separate as possible  corsetti 1a   and to model the dynamics of a process with respect to different time scales. 
about the latter  time granularity supports different grains of reasoning. in such a way it allows to deal with incompleteness and uncertainty of knowledge  allen 1 . further  it allows to switch among different temporal granularities during the execution of a task in order to solve each incoming problem at a temporal granularity as coarse as possible  dean 1 . such a switching among temporal granularities requires the definition of a number of simplification and articulation rules  hobbs 1    greer 1 . it minimizes the computational complexity of the problem solving process. the simplification  induced by the minimization  speeds up the reasoning  but implies a relaxation of the precision of the solution  levesque 1 . the ratio between the temporal granularities provides a measurement of the approximation of the achieved result. 
 the main issue addressed in this paper is the semantics of the temporal aspects of the object oriented language expressed into the granular logical language. the object oriented language extends the temporal logic one with modular and abstraction primitives in order to deal with the specification in the large. with respect to other framework that deal with the description of actions and change  our proposal is more general. indeed  it allows to deduce assertions by means of classical inference rules  without any mechanism of default reasoning  mccarthy 1    kowalski 1  and  montanari 1 . the semantics is provided by objects translation into logical formulae  and a number of rules stating the theory articulation and simplification. 
 the semantics of the object oriented language allows the verification of specifications. that is  a verification that ensures the consistency and the adequacy of the specification  at each step of the incremental development. the paper is organized as follows: section 1 presents how to deal with time granularity  section 1 briefly sketches the logical granular language  and section 1 presents the object 
	ciapessoni at al. 	1 

oriented extension and the main semantic issues regarding time granularity. 
1. assertions over several time granularities 
it is possible to point out a wide class of systems  whose main characteristics are time critical response to external stimuli and dynamic behavior regulated by very different time constants. we call such class of systems real-time granular systems. 
   let us consider as an example a simplified specification of a controller of a pondage-power plant. such specification requires the definition of the temporal constraints: each action affecting the system has a specific time constant  which is the time needed for its completion. for instance  the filling the empty-reservoir  with a given input of water  takes  about  two months  whereas the closing an opensluice-gate takes one minute. 
   the description of a granular system in a language without any abstraction structure and with just one temporal domain  of instants  points   constrains to specify the whole system with respect to the finest time granularity  to avoid loss of information. thus  if in the previous example the finest temporal domain is the domain of seconds then  closing takes 1 seconds and filling takes 1*1*1 = 1 * 1* seconds  assuming 1 days a month . 
   dealing with different time granularities improves the naturalness of system description  simplifying its model  but involves difficult semantics problems. referring to the specification of a company as an example  the underlying assertions in:  every month  if an employee works  then he. gets his salary   cannot hold over all instants of each temporal domain finer than months. a unifying model for the above sentences provides a set of temporal domains  including at least months and days  and a refinement mechanism to relate a formula asserted on a domain to finer  or coarser  ones. such a mechanism must allow that if an employee works during a month  then he works at most during 1 days of this month  whereas  he gets his salary in 
just one day during the month. 
   we summarize the steps that provide time granularity in a temporal logic language: to replace a single temporal domain with a temporal universe; to allow the contextualization of a formula over a temporal domain  the assertion of a formula over time instants in correspondence with the current one  and the definition of rules to relate assertions to several  finer or coarser  temporal domains. 
  	the temporal universe 
the temporal universe  t  is a set of instants  points   and includes a finite number of temporal domains  tl.. tk . temporal domains of the universe are totally ordered with respect to the binary granularity relation  such that if ti 
tj then tt is coarser than tj  or tj is finer than ti 
   among time instants and temporal domains three relations are stated. the first relation allows to contextualize an instant with respect to a temporal domain  the second one 
 logic programming 
expresses a displacement between each couple of instants of a temporal domain and the third one puts into correspondence instants belonging to the temporal universe. the contextual relation is specified so that the set of temporal domains constitutes a partition of the temporal universe. further  the displacement relation is specified by a number of properties so that the notion of metric temporal logic   koymans 1   is supported by any temporal domain. the correspondence relation is subject to a number of properties that constrain time instants and temporal domains to specify a certain kind of temporal universe. for instance given the temporal domains of years  months and days  the correspondence of a calendric-universe can be specified. the correspondence between each couple of temporal domains obeys to the instant-articulation and intervalsimplification rules. giving two temporal domains such that tj   tj  each time instant of the coarser one is put into correspondence with an interval of time instants of the finer one  and vice versa. next figure depicts the rules. 

for instance  according to such a rule it is possible to state the correspondence between a minute and its 1 corresponding seconds. in order to get the specification of a real universe  a new relation between temporal domains is needed. the relation of disjointedness states that given two temporal domains such that ti i tj  if each interval simplification of tj over tt is disjoined from the other ones  then tj z tj holds too. for instance  month articulations over weeks are not disjoined  whereas month articulations over days are disjoined. in fact there can be a week corresponding to two months  but each day corresponds to one  and only one  month. the whole set of properties stated over temporal universe relations are formally defined in  ciapessoni 1 . 
  	contextualization  correspondence and projection 
in a temporal logic language each formula implicitly refers to a time instant belonging to the underlying temporal domain   ghezzi 1    rescher 1  and  pnueli 1  ; replacing the temporal domain with a temporal universe is useful to specify which temporal domain the current instant of a formula belongs to  and to assert the truth of a formula over instants in correspondence with the current one. to this aim a couple of intensional operators are needed. for instance  given the assertion  rains   it can be contextualized either to the minutes temporal domain or to the days temporal domain  and so on   and it is possible to assert over a day that there is a corresponding hour over which it  rains . 
temporal logic languages can be thought as a way to qualify the truth of classical first order formulae with respect to instants. thus  in a temporal logic language that 


	clapessonl et al. 	1 

where is the current instant of the universe. the language provides an axiomatic system to define both the temporal universe properties and the correspondence rules for first order formulae between temporal domains. the former set of axioms was defined in  ciapessoni 1  and its soundness checked in  corsetti 1 . the latter set includes several axioms stating the chosen correspondences between temporal domains. among them  let us show the formalization of weak downward projection. weak downward projection is defined by the following axiom schema: 

such a schema states that for each couple of temporal domains related by disjointedness relation  if a formula o holds over an instant of the coarser one  then it holds in at least an instant of the finer one. according to such a formula the theorem stating the upward projection1 rule can be deduced. 
1. the object-oriented extension 
1. the language: ontology and syntax 
   the object oriented framework allows to partition the specification by means of objects  and to link them by relations. an object represents a stereotype likewise a frame  minsky 1   and it holds the minimal part of a specification. with respect to a methodological point of view an object can identify a class or an instance  and from an ontological point of view an entity or an event   borgida 1  . according to the methodology an objectclass denotes a collection of related individual concepts  while an object-instance denotes an individual concept  e.g.  in the block world  the class of blocks and the block#l  respectively . according to the ontology an object-entity denotes an object that persists in time  while an object-event denotes the instantaneous change occurred in entities  e.g.  in the block world the entity block and the event of block-change-position . the set of relations among objects is partitioned into relations among instances and classes  relations among classes  and relations among instances. relations among instances and classes and relations among classes are the usual relations of belongings and  monotonic  inclusion  respectively  brachman 1   and both are identified by is-a. relations among instances provide the definition of an object-class: methodologically identify the relevant characteristics and logically identify the object signature. in a very simplified view the object-class signature may be thought as the specification of the cartesian product for each relation declared within the object  providing class identifiers and 

!the following formula states the upward projection rule: 

for each couple of disjontdeness temporal domains if  o  holds over an interval on the finer temporal domain  then it holds over the corresponding simplification on the coarser one. 
logic programming 
class cardinalities  i.e.  the number of class instances involved into relation extension . object-instances comprise ground-instance relations declared within the classes they belong to. entity and event signatures mainly differ for the at-time relation that must be declared within each event. such a relation specifies the occurring instant and the granularity of the event. 
the subset of relations declared in an object and changing in time defines object-state  time dependent relations . 

relations declared within objects must satisfy integrityconstraints  if any. integrity-constraints state general and atemporal conditions about object relations  and are expressed by first order formulae. 
the complete event-class specification needs the description/prescription of the conditions referring to the state of the entities before and after the event occurrence. conditions state causal and temporal relationships between the event occurrence and the entity-states. causal relationships codify constraints over the states that validate  sufficientconditions  and are validated  necessary-conditions  by the event occurrence. temporal relationships allow to refer to intervals whose starting  or ending  point is the event occurrence instant. conditions are expressed by means of logical formulae. differently from other models of change based on the notion of event  e.g. the event calculus  kowalski 1   the conditions encompass both the deduction of relations from events and the deduction of events from relations. 

1such a keyword denotes a relation defined for each classinstance. 


	clapessoni et al. 	1 


conclusions 
the paper has defined the semantics of the temporal aspects of an object oriented language that supports the notion of time granularity. such a semantics is expressed by means of object translation into a logical formula. thus  the object oriented language gets a formal semantics and gains logical executability. further  in the translation we proposed a number of projection rules  between temporal domains  grounded on the object oriented ontology. such projection rules could be embedded within the logical language to improve its expressiveness. 
acknowledgments 
we would like to thank angelo montanari for the contributions he gave to the argument during his working period at cise. further  we are grateful to paolo mancarella and dino pedreschi for helpful comments on an early draft of this paper. 
logic programming 
