 
     this paper presents a new definition for plans the objects defined are called plan nets  and are similar in spirit to sacerdoti's procedural nets  1  it is argued that plan nets are more descriptive tham procedural nets  because they can easily describe iterative behaviour the plan net definition is motivated by providing an operational semantics for the procedural net  and noticing that all procedural net state spaces are  loop free  this is seen to restrict the behaviours that can be described by the procedural net to those which do not. include iteration it is suggested that plan net. state spaces can contain loops  and thus can describe iterative behaviour 
1. paper overview 
     in the next section we give sacerdoti's definition of the procedural net  a simple method for deriving procedural net behaviours is also presented  and it is argued that the procedural net cannot describe iteration section 1 defines and discusses the plan net two sample plan nets are given an operational semantics is suggested for the plan net  and it is argued that plan nets can describe iteration the procedural net and the plan net are compared in section 1 section 1 concludes 
1 the procedural net 
     a procedural net has been defined as  a network of actions at varying levels of detail  structured into a hierarchy of partially ordered time sequences    sacerdoti  1  p 1  the basic objects in a procedural net are actions  and some ordering relations on the actions because of this  we refer to the procedural net as an  event space  representation a net can be drawn as an action-on node graph  with directed arcs between nodes an arc running from one node a to another node b means that the action denoted by a must occur  before  the action denoted by b 
     we can derive the possible behaviours of a 
     given procedural net by analyzing the state space which it describes. a net's state space can be produced by playing a version of the  pebbling game   pippenger  1  while pebbling was not developed with this application in mind. it does capture our intuition of what  before  means in a procedural net in our version of this game  we place  pebbles  on the nodes of a procedural net as they are executed the net starts out pebble-free. and finishes up pebble laden each node must be pebbled; that  is  each action must be executed pebble placement is carried out according to the rule: a node may be pebbled if all of its immediate predecessors arc pebbled. 
the procedural net has been criticized recently 
 mcdermott. 1  rosensehein. 1  this paper addresses the procedural net's inability to describe  iterative  behaviour such behaviour is difficult to model in a natural way using a procedural net since the arcs of a net are taken to mean  before   one cannot simply direct an arc from an action  back into  the net 
     it is obvious that all procedural net state spaces will be loop free  since the number of pebbles on a net must increase monotonically there will never be an action which removes a pebble; thus never an action which can produce an earlier state this is due to the strict   before  interpretation of the procedural net's arcs 
     while sacerdoti did include a mechanism for dealing with iteration  it hides the notion of  process  inside a special replicate node his treatment of iteration poses problems below  we suggest that by defining an alternative  event space  representation for plans  we can describe iterative behaviour. this new definition follows the belief that iteration must be expressed in terms of the structure of a plan  so that a planner can reason about the iteration 

m. drummond 1 
1 comparing the nets 
     in this section we argue that the plan net representation is more powerful than the procedural net because of an explicit epistemological commitment to conditions and events the 
procedural net makes no clear distinction between them. using the allow and before relations as defined above  we can produce state spaces which contain cycles; that is  ones which correspond to iterative behaviour. 
     noah  sacerdoti  1   and its descendents  such as nonlin  tate  1   deviser  vere. 1 . and sipe  wilkins  1  all use plans based on sacerdoti's original procedural net the following comments are expressed principally in terms of noah  but apply equally to these newer planners 
     the allow relation takes the form of a  before  link in a procedural net which has been introduced by pattern-directed operator invocation. such a link might appear  for instance  between an action which must make block a clear  and an action which must stack a on b. 
