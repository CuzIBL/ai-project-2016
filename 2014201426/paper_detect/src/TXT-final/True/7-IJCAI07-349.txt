
this paper addresses the problem of recovering the locations of both mobile devices and access points from radio signals  a problem which we call colocalization  by exploiting both labeled and unlabeled data from mobile devices and access points. we first propose a solution using latent semantic indexing to construct the relative locations of the mobile devices and access points when their absolute locations are unknown. we then propose a semi-supervised learning algorithm based on manifold to obtain the absolute locations of the devices. both solutions are finally combined together in terms of graph laplacian. extensive experiments are conducted in wireless local-area networks  wireless sensor networks and radio frequency identification networks. the experimental results show that we can achievehigh accuracywith much less calibration effort as compared to several previous systems.
1 introduction
accurately tracking mobile devices in wireless networks using radio-signal-strength  rss  values is a useful task in robotics and activity recognition. it is also a difficult task since radio signals usually attenuate in a highly nonlinear and uncertain way in a complex environment where client devices may be moving. existing approaches to rss localization fall into two main categories  ferris et al.  1 :  1  radio propagation models  maligan et al.  1; savvides et al.  1   which rely on the knowledgeof access point locations;  1  statistical machine learning models  nguyen et al.  1; letchner et al.  1; bahl and padmanabhan  1   which require a large amount of costly calibration.
¡¡however  in cities and large buildings where wireless networks are set up by different network suppliers  it is not easy to ask them to share the location information of all access points for business or privacy reasons. besides  a mobile device may also want to locate access points for obtaining stable connections or to spot them in hostile areas. in all these cases  sufficient calibration  labeled  data on mobile devices and access points may not always be available due to the lack of gps coverage or costly human effort.
¡¡in this paper  we address the problem of simultaneously recovering the locations of both mobile devices and access points  a problem which we call co-localization  using labeled and unlabeled rss data from both mobile devices and access points. we take two steps for solving this problem.
in the first step  we assume that only unlabeled rss data are given. in such case  we show that the problem can be solved by latent semantic indexing lsi  or singular value decomposition  svd   deerwester et al.  1   techniques that are popular in information retrieval. consequently  the relative locations of aps and mobile device trajectory can be determined. in the second step  we assume that a small amount of labeled rss data from mobile devices and access points are given. to determine the absolute locations of the devices and access points  we apply a semi-supervised algorithm with graph laplacian and manifold learning  chung  1; belkin and niyogi  1; ham et al.  1 . finally  we provide a unified frameworkfor both the above unsupervisedand semi-supervised solutions.
¡¡we tested ourco-localizationalgorithmsin differentindoor environments using both static and mobile client devices. we also tested the algorithms with different hardware such as 1 wireless local area networks  wlan   wireless sensor networks  wsn  and radio frequency identifiers  rfid . experimental results showed that we can achieve a higher accuracy with much less calibration effort in different environments  motion patterns and with different hardware.
1 related works
propagation-model-based approaches are widely used for location estimation due to their simplicity and efficiency  letchner et al.  1 . these methods usually assume that access points are labeled  e.g.  their locations are known. they estimate the distance of the mobile devices relative to some fixed access points based on signal strengths through models that predicts the signal propagation patterns  savvides et al.  1 . researchers have also used bayesian models to encode the signal propagation pattern  letchner et al.  1; maligan et al.  1  and infer the locations using monte carlo methods  thrun et al.  1 . a drawback of propagation-model-based methods is that these models may become inaccurate in a complex domain.
¡¡an alternative is to apply machine-learning-based algorithms. with these algorithms the labels of access points need not be known. instead  they usually rely on models that are trained with rss data collected on a mobile device and are labeled with physical locations  letchner et al.  1; nguyen et al.  1; ni et al.  1; bahl and padmanabhan  1 . the training data are usually collected offline. these signal values may be noisy and nonlinear due to environmental dynamics. therefore  sufficient data shall be collected to power algorithms for approximating the signal to location mapping functions using k-nearest-neighbors  bahl and padmanabhan 1   kernels  pan et al.  1   bayesian filters  letchner et al.  1  and gaussian processes  ferris et al.  1 . a drawback of these models is that they may require much calibration effort.
¡¡a viable approach is to use both labeled and unlabeled data. for example  bayesian frameworks can be applied to use both labeled and unlabeled access points  letchner et al.  1  and mobile device trajectory  chai and yang  1 . our work differs from the above in that we treat mobile devices and access points in a completely symmetric manner: we use both the labeled and unlabeled data from mobile devices and access points to recover the locations of both of them rather than locating the mobile devices only. to the best of our knowledge  this is the first such work.
1 methodology
1 problem definition
consider a two-dimensional co-localization problem. assume that a user holds a mobile device and navigates in an indoor wireless environment c   r1 of n access points  which can periodically send out beacon signals. at some time ti  the rss values from all the n access points are measured by the mobile device to form a row vector si =  si1 si1 ... sin  ¡Ê rn. a sequence of m signal strength vectors form an m ¡Á n matrix   where  prime  is used to denote matrix transposition. here  the locations of some access points and the mobile devices at some time t are known or labeled  while the rest are unlabeled.
¡¡our objectives are stated as follows: we wish to estimate the m ¡Á 1 location matrix  where pi =  pi1 pi1  ¡Ê c is the location of the mobile device at time ti and the n ¡Á 1 location matrix where qj =  qj1 qj1  ¡Ê c is the location of the j access points. our objectives are to determine the locations of all of the remaining access points and the trajectory of the mobile device. we call this problem co-localization.
example 1 as an example  figure 1 a  shows an indoor 1 wireless lan environment of size about 1m¡Á1m. it is equipped with n = 1 access points. a user with an ibm t1notebookthat is equippedwith an intel pro/1bg internal wireless card walks from a through b ... e to f at time ta tb ... tf. m = 1 signal strength vectors are extracted and the 1 ¡Á 1 matrix s is shown in table 1. by walking from a to b ... e and finally to f in the hallways  we collected 1 signal strength vectors from 1 access points. note that the blank cells denote the missing values  which we can fill in a small default value  e.g.   1dbm.
¡¡our task is to estimate the trajectory matrix p of the mobile device at all times and to determine the location matrix q of the access points ap1 ap1 ... ap1.
1 svd-based relative co-localization
given unlabeled data only  we can determine the relative locations of the mobile device and the access points. this problem is called relative co-localization. intuitively  we may observe the following characteristics of the data  see table 1 :
table 1: signal strength  unit:dbm 
ap1ap1ap1ap1ap1ta-1-1-1-1tb-1-1-1tc-1-1td-1-1-1te-1-1-1-1tf-1-1-1 all values are rounded for illustration 
1. considering two rows of the data  the mobile device at two different time may spatially close to each other if their signal strengths are similar when received from most access points  e.g.  the time ta and te.
1. considering two columns of the data  two access points may be spatially close to each other if the signal strengths to the mobile device be similar most of the time  e.g.  ap1 and ap1.
1. considering a single cell sij of the data  the mobile device and the j access point may spatially close to each other at time ti if the signal be strong  e.g.  the mobile device is close to ap1 at time td.
the above observations enabled us to relate co-localization with information retrieval. not surprisingly  the colocalization is closely related to the latent semantic indexing  lsi   deerwester et al.  1 . in this view  we treat an access point as a term and a mobile device at some time as a document. the above three observed characteristics would be mapped to the similarities of document-document  termterm and document-term respectively. estimating the positions of the mobile device and the access points corresponds to discovering the latent semantics of documents and terms in some concept space.
¡¡more specifically  we can estimate the relative coordinates by performing singular value decomposition  svd .
1. transform the signal matrix s =  sij m¡Án to a nonnegative weight matrix a =  aij m¡Án by a linear function aij = sij   smin where smin is the minimal signal strength detected  e.g.  the noise level or  1dbm.
1. normalize the weight matrix by.
here  d1 and d1 are both diagonal matrices such that  where and
 where.
1. perform svd on the normalized weight matrix by. the columns of um¡Ár =
 u1 ...ur  and vn¡Ár =  v1 ...vr  are the left and right singular vectors. the singular values of the diagonal matrix ¦²r¡Ár = diag ¦Ò1 ¦Ò1 ... ¦Òr  are ranked in nonincreasing order.
1. the  latent  location matrices of the mobile device p and that of the access points q can be estimated using
. note that
we skip the first singular vectorsu1 and v1 which mostly capture some constant since matrix an is not centering.

	 a  wlan test-bed	 b  wsn test-bed	 c  rfid test-bed
figure 1: the wireless lan  wireless sensor network and the rfid test-beds

 1	 1	 1	 1	1.1.1.1	 1	 1	 1	1.1.1.1.1	 1	 1	 1	1	1 x  unit : m 
 a   linear  svd co-localization	 b   nonlinear  svd co-localization	 c  manifold-based co-localization
figure 1: 1 wireless lan test in an indoor environmentas an example  after performing svd on data in example 1  we obtained the latent coordinates of the mobile device and the access points  which are shown in figure 1 a . in this example  it is easy to see that the hallway structure is not well preserved by comparing the true location sequence shown in figure 1 a . this is because svd assumes a linear subspace  while the correlation of rss values and distance to aps is often nonlinear  nguyen et al.  1 .
¡¡a better solution is using kernel svd or simply transforming signal strengths to weights by some nonlinear function. more specifically  we transform the signal matrix s =  sij m¡Án to a new weight matrix a =  aij m¡Án by a gaussian kernel aij = exp  |sij   smax|1¦Òa1   where smax is the maximal signal strength detected  e.g.  the signal strength around an access point or  1dbm. figure 1 b  plots the co-localization result using p and q. intuitively  the reconstructed hallway structure and the locations of access points are better than that shown in figure 1 a  while referring to the ground truth illustrated in figure 1 a .
1 manifold-based absolute co-localization
when the physical locations of some access points and the mobile device at some time are known  we can ground the unknown coordinatesby exploiting the geometry of the signal distribution. more specifically  we can use manifold-based learning  which generally assumes that if two points are close in the intrinsic geometry of the marginal distribution  their conditional distributions are similar  belkin et al.  1; ham et al.  1 . this implies that the mobile device shall be spatially close to each other if their signal vectors are similar along some manifold structure  patwari and hero  1; pan et al.  1 . for example  the mobile device at time ta and te shall be spatially close to each other  figure 1 a   since their signal strengths are similar  table 1 .
¡¡when the manifold assumption holds  the optimal solution is give by f  = argmin¦²li=1|fi  yi|1 +¦Ãftlf  ham et al.  1  where the first term measures the fitting error and the second term poses the smoothness along the manifold and l is the graph laplacian  chung  1 . for our problem  the objective is to optimize:
p  = argmin
p¡Êrm¡Á1
here  p is the coordinate matrix of the mobile device to be determined; jp	= diag ¦Ä1 ¦Ä1 ... ¦Äm  is an indication matrix where ¦Äi = 1 if the coordinate of the mobile device at time ti is given and otherwise ¦Äi = 1; yp = is an m ¡Á 1 matrix supplying the calibration data where yi is the given coordinate of the mobile device at time ti if ¦Äi = 1 and otherwise the value of yi can be any  e.g.  yi =  1 ; ¦Ãp controls the smoothness of the coordinates along the manifold; lp = dp   wp is the graph laplacian; wp =  wij m¡Ám is the weight matrix and if si and sj are neighbors along the manifold and otherwise wij = 1; dp = diag d1 d1 ... dm  and	m	.
¡¡setting the derivative of equation  1  to zero  the optimal solution is given by  ham et al.  1 
	p  =  jp + ¦Ãplp  1jpyp	 1 
similarly  the coordinates of the access points are given by
q  = argmin
           q¡Êrn¡Á1 and
¡¡¡¡¡¡¡¡¡¡¡¡q  =  jq + ¦Ãqlq  1jqyq  1  where lq = dq   wq is the graph laplacian  wq is the weight matrix and dq is constructed from wq.
¡¡thus  when the locations of the mobile device and the access points are partially known  we can co-localize them by solving equations  1  and  1  respectively. alternatively  we can combine them into a single equation as
	r  =  j + ¦Ãblb + ¦Ãclc  1jy	 1 
here   is the coordinate matrix of the mobile device and the access points; gives the label information; is the indication matrix; lb =
 are the graph laplacians.
¡¡in practice  the graph laplacians lb and lc in equation  1  are normalized  belkin and niyogi  1; shi and malik  1 . figure 1 c  shows an example of the manifoldbased co-localizationwhen the locations of the mobile device at time ta  tb  tc  td  te  tf and the access pointsap1  ap1  ap1 are known. as can be seen  the trajectory of the mobile device is well grounded when compared to the ground truth shown in figure 1 a . however  due to the limited number of access points  their locations are estimated badly  e.g.  the location of ap1.
¡¡in the following  we will combine the svd-based and the manifold-based co-localization together so that we can align the mobile device and the access points to the ground truth and to each other.
1 a unifying framework
so far  we have formulated the unsupervised co-localization based on svd and the semi-supervised co-localization based on the manifold assumption using equation  1  by exploiting the correlation within the mobile device and the access points. in this section  we integrate them through a unifying theory. essentially  performing svd on an is equivalent to solving the generalized eigenvalue problem  dhillon  1 
	laz = daz¦«	 1 
where la = da wa is the graph laplacian  chung  1    and. the eigenvalues of the diagonal matrix ¦« = diag ¦Ë1 ¦Ë1 ... ¦Ëm+n  are ranked in non-decreasing order. z =  z1 z1 ...zm+n  are the eigenvectors. . note that we skip the first eigenvector z1 since the solution is trivial. furthermore  it is interesting to see that we have ¦Ëi = 1   ¦Òi where i = 1 ... r  dhillon  1 . detailed analysis and comparison of lsi  svd and graph laplacian can be found in latent semantic indexing  deerwester et al.  1; dhillon  1; hendrickson  1 .
putting these together  our objective is to optimize:
	r  =	argmin 
r¡Êr m+n ¡Á1
the first term measures the fitting error and the second term constrains the smoothness among the mobile device and the access points. l = ¦Ãala + ¦Ãblb + ¦Ãclc = d   w. the solution is given by:
	r  =  j + ¦Ãl  1jy	 1 

figure 1: co-localization with graph embedding
¡¡in practice  the graph laplacian l is normalized. an example of applying the above co-localization algorithm using equation  1  is shown in figure 1 when the locations of the mobile device at time ta  tb  tc  td tf and the access point ap1 are known. as can be seen  most of the locations are correctly recovered while using less calibration data than that in figure 1 c .
1 experiments
we evaluated the performance of the co-localization algorithm on three sets of different devices and test-beds:
 1  wireless local area network  wlan : a person carrying an ibmc t1 notebook  which is equipped with an intelc pro/1gb internal wireless card  walked in an indoor environment of about 1m¡Á1m in size as shown in figure 1 a . a total of 1 examples are collected with sample rate 1hz. the ground-truth location labels are obtained by referring to landmark points such as doors  corners and dead-ends. the localization area is composed by one-dimensional hallways.  1  wireless sensor network  wsn : we used a number of mica1 sensors from crossbowc for experiments. as can be seen from figure 1 b   1 static nodes  ap  were placed in a room of size 1m ¡Á 1m. one mobile node  md  was attached on the top of a robot that moved around freely in this domain. a total of 1 examples are collected with sample rate 1hz. the ground-truth location labels of the mobile node were supported by the cameras deployed on the ceiling. the localization area is a two-dimensional plane.
 1 radio frequency identification  rfid : we used 1 mantis readers  ap  and 1 tags  md  from rf codec . they were all deployed as stationary nodes  which is shown in figure 1 c . a total of 1 examples were collected. the ground truth locations were marked down manually.
we summarize our three experimental setups in table 1.
¡¡for comparison  we also run the following baseline algorithms  1  landmarc  a nearest-neighborweighting based method designed for rfid localization  ni et al.  1 ;  1  support vector regression  svr   a simplified variant of a kernel-based method used for wsn localization  nguyen et al.  1 ;  1  radar  a k-nearest-neighbor method for wlan localization  bahl and padmanabhan  1 .
table 1: the experimental setups of wlan  wsn and rfid
infrastructureapmdtest-bedscaledataset sizemotion patternwlan1 access points1 notebookhallway1m ¡Á 1m1mobile  robot wsn1 static nodes1 mobile noderoom1m ¡Á 1m1mobile  human rfid1 rfid readers1 rfid tagsroom1m ¡Á 1m1static¡¡in each experiment  we randomly pick up 1 examples for training and the rest for testing. the training data is further split into labeled and unlabeled parts. the results shown in figure 1 are averaged over 1 repetitions for reducing statistical variability. all results are measured in relative error distances  which are error distances in percentage while referring to the maximal error distance in each figure for easy comparison. all parameters are determined from a validation subset. landmarc  radar and svr use the labeled part of training data only.
¡¡in contrary  the co-localization method used both labeled and unlabeled data. we will show how our algorithm benefits from the additional unlabeled data and reduces calibration effort. in all  we tested on two configurations for the co-localization method:  1  'co-localization no ap' uses partially labeled data from mobile devices for training  in which we tries to recover the locations of the access points; and  1  'co-localization with ap' repeats the same experiments with the locations of all access points known.
¡¡figures 1 a   1 b  and 1 c  show the localization error of different mobile devices by varying the number of labeled examples in a training subset which size is fixed to be 1. the three figures could be read in two directions. first  if we compare the results vertically in each figure  we can see how the unlabeled data help improve the result in the proposed methods. for example in figure 1 c   most compared methods have a relative error distance of around 1% when using 1 labeled examples. in contrary  the proposed methods have an error of around 1% by employing additional 1 unlabeled examples. secondly  if we compare the results horizontally in each figure  we can find how our methods reduce calibration effort. for example in figure 1 a   most compared methods have a relative error distance of around 1% when all 1 examples are labeled. the proposed 'co-localization with ap' has a similar performance when using 1 labeled and 1 unlabeled examples. we save the calibration effort.
¡¡we found that the mobility of the mobile device and the environment complexity are two main factors that affected the performance of the co-localization algorithm. in a static and plane-shaped test-bed  figure 1 a    the radio signals are less noisy and the 'co-localization no ap' configuration demonstrated similar performance as radar  landmarc and svr when the number of labeled examples is small. in a mobile and complex environment  as shown in  figure 1 c    the radio signal is more noisy and the 'colocalizationno ap' performed much better and more robust than the compared methods. we have also tried some other combinations of experiments that led to a similar conclusion  such as using rfids in a mobile scenario.
¡¡while comparing the results of 'co-localization no ap' and 'co-localization with ap' in figures 1 a   1 b  and 1 c   we can find that knowing the locations of access points is more helpful for localizing the mobile devices in a static and planar scenario  figure 1 a   than in a mobile and complex environment  see figure 1 c  .
¡¡similarly  we can see from figures 1 d   1 e  and 1 f  that knowing the locations of mobile devices are more helpful for localizing access points in a static and plane-shaped scenario rather than a mobile and complex environment.
1 conclusion
we have developeda novel graph laplacian approachto solve the problem of simultaneously recovering the locations of both mobile devices and access points. in our co-localization framework  we find the relative locations of mobile devices and access points by exploiting a svd based method  and find the absolute locations using a small collection of labeled data through graph laplacian methods. our extensive experiments in three different configurations showed that we can achieve high performance with much less calibration effort as compared to several previous approaches. the significance of the work is that we can leverage both the knowledge of the access point locations and the mobile device trajectories to obtain more accurate localization. indeed this is one of our future works. besides  we would try to evaluate the performance in a large-scale and dynamic environment  e.g.  in a city level and in different time. we may also vary more parameters such as number of access points and their deployment density and study the robustness.
acknowledgement
we thank nec china lab  neclc1.eg1  for their generous support of this research.
