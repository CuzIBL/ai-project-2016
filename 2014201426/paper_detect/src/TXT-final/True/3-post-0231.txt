 
current knowledge acquisition tools have limited understanding of how users enter knowledge and how acquired knowledge is used  and provide limited assistance in organizing various knowledge authoring tasks. in this paper  we present a novel extension to existing knowledge acquisition tools where the system 1  captures the episodes of knowledge acquisition and knowledge use through a set of declarative reflection patterns 1  performs assessment on how to improve the future knowledge acquisition and knowledge use based on captured episodes  and 1  provides assistance to the users by combining the assessment results. 
1 introduction 
knowledge acquisition  ka  remains a key challenge to knowledge-based ai applications. there have been increasing interests in supporting end users  i.e.  ordinary users who do not have computer science background  directly enter complex problem solving knowledge on how to perform tasks. although these techniques have been applied in building sizable knowledge bases in some cases  detailed analyses of the user interactions reveal that existing ka tools provide limited assistance in organizing and executing various knowledge authoring tasks  kim and gil 1 .   systems do not reflect on how users perform ka tasks  how acquired knowledge  called k-items  is tested and used  and how future k-items should be built based on past experience. users themselves have to keep track of the past mistakes  current status  potential new problems  and progresses made over time in order to decide the best options among possible courses of actions.  the challenges in supporting these reflective capabilities include:  
  the system should be self-aware  accessing and reasoning on interesting aspects of knowledge acquisition and knowledge use in assisting users. 
  the system should relate the current situation to similar situations in the past and assess the levels of confidence in pursuing alternative options based on the relations.  

  the system should recognize dynamic changes in the problem solving and decide how to guide users in modifying and using relevant k-items.     
1 	echo: reflection patterns for interactive knowledge acquisition 
in this paper  we present a novel extension to existing ka tools where the system adds an additional layer to existing tools and explicitly keeps track of knowledge acquisition and knowledge use episodes through a set of declarative reflection patterns. reflection patterns allow the system to be aware of interesting knowledge acquisition and knowledge use episodes  called meta-events  that the system can make use of in assisting users. each meta-event is a sequence of basic knowledge acquisition and knowledge use events such as the user ignored a suggestion and then the problem solving failed. the system assesses the levels of confidence in providing a suggestion based on its supporting and opposing meta-events captured in the reflection patterns.  any changes that are noticed  e.g. confident k-item became inconsistent with problem solving results  and associated k-item modifications are explicitly captured in the reflection patterns and are used in guiding the user. 
we have built a system called echo  meta-cognitive history analysis and organization  that provides these capabilities. echo dynamically captures a set of meta-events by matching the reflection patterns against the episodes of how different types of k-items are acquired  modified and used over time.  the captured meta-events affect how the suggestions to the user are provided  i.e. how confident it is on the suggestion  as well as the content of the suggestions. 
a prototype system has been developed for a domain of interactive scheduling where the user incrementally builds scheduling constraints and the user entered constraints assist users during scheduling.  since scheduling constraints can change over time  the system should be able to assist users in making associated modifications. the details of the system are described in  kim 1 .  
in developing reflection patterns and determining which meta-events the system needs to keep track of we have analyzed typical ways in which failures can occur in interactive knowledge capture and use.  the reflection patterns are built help users avoid those failures. figure 1 shows the paths that echo exploit currently. depending on a particular need of a given ka system and its undesirable paths  we can include other meta-events in the reflection patterns and adjust the assistance provided by the system. 

figure 1: paths that lead to failures. 
existing ka systems make use of these implicitly. that is  consideration of the above failures not explicit in the design and they are reflected in the implementation of the tool. example-based validation approaches refine k-items collectively  and cannot tell 'when' and 'how' k-items can be improved and 'how' they should be used.  
the above steps can be enhanced by exploiting related meta-events. in particular  we make use of predictive assessment of similar situations and assessment on dynamic changes including how k-items can be improved.  
algorithm  
a. assess likeliness of potential failures due to missing k-  items by collecting and relating meta-events of 
¡¡- steps failed without k-item assistance 
¡¡- how similar steps failed without k-item assistance 
¡¡- how similar steps were assisted by k-items   and produce suggestions to create new k-items based on - assessments on how to create k-items  see e  
b. assess likeliness of potential failures due to incorrect k- item definitions by collecting and relating meta-events of  - inconsistencies with the current problem solving result  
 - the degree of inconsistencies with valid past results  
 - inconsistencies with confident k-items  and produce suggestions to modify k-items based on 
 - assessments on how to modify k-items  see e  
c. assess likeliness of potential failures due to changes by collecting and relating the meta-events of  
- how similar k-items were modified in similar situations  - modification in similar situations led to successes 
- the user agreed to modify k-items in similar situations 
- the user specified when to modify k-items      and produce suggestions to modify k-items based on 
- assessments on how to modify k-items  see e  
d. assess likeliness of potential failures when k-items are   ignored by collecting and relating the meta-events of  
 - consistencies between k-items and current result 
 - consistencies between k-items  with past valid results 
 - inconsistent decisions resulting in failures  
 - consistent decisions resulting in successes  and produce suggestions to use k-items based on the assessment 
e. assess how to create or modify k-items by collecting and relating the meta-events of 
- incorrect definitions or modifications of similar k-items  resulting in further failures 
- k-item definitions and modifications resulting in successes the above algorithm is represented by a set of declarative reflection patterns described in  kim 1 .  
 	assessment: usefulness of the current tom's meeting time 
 	. . .	constraint  k-item-1 -resultk-item-1 conflicts with the current 
 	-usedk-item-1 has been successfully  	assessment : need of modification 
to tom's meeting time constraint 
 due to changes -meeting time   carpool change may affect tom's modification ofsuggestk-item-1  assessment: need of modification 
to mary's meeting time due to 
 changes - carpool change affected mary's 	assessment: how to define k-items  meeting time   	for tom's meeting time to avoid potential failures - k-item-1 was modified once due to a 
 	failure: conflict with soccer practice    
figure 1: relations between assessments 
figure 1 shows how different assessments assist a k-item modification. in this case  echo predicts that k-item-1 needs to be modified because it is less confident about the usefulness of the k-item  due to the current conflict  and more confident on potential changes needed  the suggestions include how the system predicts the k-item can be modified based on relevant past modifications  i.e. consideration of soccer practice time . 
1. preliminary results  
we performed a preliminary evaluation of echo with a set of synthetic scenarios with varying user interactions and mistakes. we compare two ka systems where both of them use the same episodes of problem solving and problem changes but one of them was enhanced with echo's reflection patterns. the results show that with echo  the ka system can reduce the number of incorrect suggestions and the number of problem solving failures.  
average per scenariowith reflection patternswithout reflection patternsavg # decisions assisted with kitems # total decisions 1  1 1  1 avg # wrong user decisions1avg # additional user mistakes11avg # k-items creation or modification11avg # sugg
 avg # confident sugg 1  1 1  1 avg # wrong sugg11avg # failures 11table 1. with and without reflection patterns 
