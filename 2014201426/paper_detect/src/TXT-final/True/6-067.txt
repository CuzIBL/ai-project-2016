 
inverse  or identification  problems involve deciding whether or not an explicitly given set of data points have an implicit description  for instance  in the form of a constraint network. such problems provide insight into the relationships among various representations of knowledge  which may have differing computational properties. this paper formalizes and studies the inverse circumscription problem  which  roughly speaking  is to decide  given a set of models  if there exists a formula whose circumscription describes the input set. 
1 introduction 
the relationship between implicit and explicit descriptions of information is a central theme in knowledge representation and reasoning. for example  the core reasoning task of propositional satisfiability is to decide  given a propositional formula  whether or not the explicit set of models described implicitly by the formula is non-empty. 
¡¡recently  kavvadias and sideri  studied a complementary task  which they called inverse satisfiability  given a set of models  is there a propositional formula with exactly the given set as its satisfying assignments  without any restrictions on the class of formulas considered  the question is trivial  since for a given set of models m  it is always possible to create a formula in disjunctive normal form  dnf  capturing exactly m. kavvadias and sideri consider this question with respect to the class of formulas expressible by a prespecified constraint language - a set of relations which can be used to express constraints. their intriguing main result is that the complexity of the inverse satisfiability problem reflects exactly that of the classical satisfiability problem: for a fixed constraint language  inverse satisfiability is intractable if and only if satisfiability is intractable! for instance  inverse 1-sat is intractable  as 1-sat is intractable; but  inverse 1-sat is tractable  as 1-sat is tractable. 
¡¡the inverse satisfiability problem is akin to the identification problems studied by dechter and pearl   which involve deciding whether or not explicitly given relational data in the form of tuples has an implicit description as a constraint network with particular features. studying such inverse or identification problems is valuable for a variety of reasons  as articulated in  dechter and pearl  1; kavvadias and sideri  1 . first  certain restricted forms of propositional formulas  such as horn formulas  facilitate efficient reasoning. hence  the ability to decide when an explicitly given set of models can be represented in such a restricted form  is desirable. second  model-based representations of information have been proposed as a viable alternative to formula-based representations  kautz et a/.  1; khardon and roth  1 ; inverse problems address the relative expressibility of these two types of representations. third  discovering structure in empirical data is a crucial component of scientific activity  and so understanding when structure discovery is computationally feasible sheds light on the nature of such activity. 
¡¡in this paper  we further investigate the relationship between implicit and explicit descriptions of data by considering the complexity of inverse circumscription  an analog of the inverse satisfiability problem for circumscription. circumscription is a well-studied non-monotonic reasoning formalism intended to embody common sense  and provides an alternative semantics for propositional formulas  mccarthy  1 . intuitively  the models of the circumscription of a formula are those models of the original formula which make as few  assumptions  as necessary. the inverse circumscription problem addresses the expressiveness of circumscription: this problem involves deciding  roughly speaking  if a set of models can be described by a circumscribed formula  over some constraint language . studying the complexity of this problem is natural not only for the aforementioned reasons  but also because circumscribed formulas are more space-efficient than uncircumscribed formulas: knowledge can be represented more succinctly with the former than with the latter  in a sense made precise in  cadoli et a/.  1 . 
¡¡there are at least two generalizations of the inverse satisfiability problem to the context of circumscription. one generalization is the problem of deciding  given a set of models  whether or not there exists a circumscribed formula  over a specified constraint language  with exactly the input set as its models. a second generalization is the problem of deciding  given a set of models  whether or not there exists a formula such that all models of the input set are models of the circumscribed formula - in other words  the problem is to decide the existence of an approximating formula whose circumscribed 

models covers the input set of models. we note that the tightness of the approximating formula is not what is at stake. in our formulation of this problem  it is possible to efficiently compute a candidate formula  such that if there is any formula  covering the input set of models  then also covers the input set and has fewer models than    that is  the model set of is a subset of the model set of 
¡¡as we will show  the complexity of the first generalization  for almost all constraint languages  can be characterized fairly easily using previous results. consequently  the focus of this paper is on the complexity of the second generalization  which we call the inverse circumscription problem. our main result is a dichotomy theorem in the complexity of inverse circumscription  which states that for all constraint languages  inverse circumscription is either in p  or is co-npcomplete. 
¡¡complexity dichotomy theorems arc important because they demonstrate a full understanding of the complexity of a problem  with respect to a particular form of problem restriction  in our case  a restriction on the constraint language . the first dichotomy theorem was obtained by schaefer  who showed that the propositional satisfiability problem over a fixed constraint language is either in p  or is np-complcte. the non-trivial tractable cases of satisfiability given by this result are 1-sat  horn sat  and xor-sat  where each constraint is a linear equation in the field with two elements . since schaefcr's result  many other dichotomy theorems have been established  creignou et al  1 j. 
¡¡kirousis and kolaitis  1a  very recently established a dichotomy theorem in the complexity of model checking for circumscription. the model checking problem is to decide  given an assignment and a formula  whether or not the assignment is a model of the circumscribed formula. their theorem states that  for any constraint language  the model checking problem is either in p or is co-np-complete. interestingly  we show that  for any constraint language  the complexity of inverse circumscription is exactly the complexity of this model checking problem  giving a correspondence analogous to that between the complexity of inverse satisfiability and the complexity of satisfiability. in fact  to establish hardness of inverse circumscription  we will reduce from the model checking problem. 
1 	preliminaries 
in this section  we present the definitions and notation that will be used throughout the paper. we first introduce the notation of a constraint; constraints will be the building blocks of the propositional formulas we consider. 
definition 1/1 subset of  is called a logical relation  and is said to have arity k. 
¡¡a constraint over variable set v is a logical relation r paired with a list of v a r i a b l e s w h e r e k is the arity of r  and is written 
¡¡a constraint with constants over variable set v is a logical relation r and a list of variables or constants y  ...  y  € where k is the arity of r  and is written we next introduce the notion of a 1-formula  which is a propositional formula built using the relations of a constraint language s as  templates.  
definition 1 a constraint language s is a finite set of logical relations  which may contain relations of different arities .' the maximum arity of s is the maximum over the arities of the relations in s. 
¡¡an 1-formula over variable set v is a set of constraints  over v  where the logical relation of each constraint is in 1. 
¡¡an 1-formula with constants over variable set v is a set of constraints with constants  over v  where the logical relation of each constraint is in s. 
¡¡we move on to describe the set of models associated with a formula. intuitively  a model of a formula is an assignment to the variable set which obeys all constraints. 
definition 1 let  be an s-formula  possibly with constants  over variable set v. 
¡¡an assignment to  when w is a subset of v  f  w denotes the restriction off to w; and  
denotes the extension of f where 
.     for all 
¡¡the assignment f satisfies a constraint ...  x   of if the tuple 	is in r. 
¡¡the assignment f satisfies //  it satisfies all constraints in in this case  it is said to be a satisfying assignment or model of* 
	define models 	to be the set containing all models of 
¡¡for a fixed 1  the problem of deciding whether or not an input 1-formula has a satisfying assignment is in np  since in non-deterministic polynomial time  a satisfying assignment can be guessed and verified. the following example demonstrates that there is an s for which this satisfiability problem is equivalent to that for 1-sat  and hence np-complete. 

1-satformula can be efficiently converted into a s1-formula with exactly the same set of satisfying assignments  and viceversa. for example  the 1-sat formula 

is equivalent to the 

¡¡we generalize the definition of s1 in example 1 as follows. 
definition 1 let 	be the set of relations where 	and is the tuple with 1 in the first i coordinates  and 1 in the remaining k - i coordinates. 
constraint languages are non-empty. 
1 	knowledge representation throughout this paper  we assume that all logical relations and 
   having defined the notion of a model of a formula  we now define what it means for a model to be minimal. the circumscription of a formula is considered to have  as its models  the minimal models of the original formula  mccarthy  1. we consider minimality with respect to a subset p of the variable set: a model is minimal if there is no model  below  it in a comparison based on the variables in p. 
definition 1 let  be an s-formula  possibly with constants  over variable set v  and let p be a subset of v. let   denote the standard total ordering o n w h e r e 1   1. 
   suppose that a n d   a r e both assignments over the same variable set v. we write a -p b if for all . we write if for all 
                 w e w r i t e a n d i t i s not the ease that we write if neither nor holds. when the set p is equal to v  the entire domain of we sometimes omit it when writing the above relations. 
   we say that is a minimal satisfying assignment  or minimal model  of with respect to p if is a model of : and  
for all 	m o d e l s i m p l i e s 
¡¡define minmodels to be the set containing all minimal models of with respect to p. 
   we now introduce some terminology that can be used to describe constraint languages; this terminology will prove to be quite wieldy in describing many of the complexity dichotomy theorems presented in the next section. as usual  we define a cnf-sat formula over variable set v to be a con-
junction of clauses  where each clause is the disjunction of literals from v.  a literal from variable set v is either a variable u v itself  or the negation of a variable  literals of the former type are called positive  whereas those of the latter type are called negative.  an assignment / : v -  {1} satisfies a cnf-sat formula  if every clause of  contains a literal evaluating to true under /. 
definition 1 a injunctive formula is a cnf-sat formula where each clause contains exactly two literals. 
   a  dual  horn formula is a cnf-sat formula where each clause contains at most one positive  negative  literal. 
an affine formula is a conjunction of equations of the form  where the xi are variables and  {1} 
is a constant.  the symbol   denotes the logical  exclusive or/'  
definition 1 let r  be a logical relation of arity n  and s be a constraint language. 
the relation r is 1-valid if it contains the all-zeroes tuple 
  1   . . .   1  of arity n  and is 1-valid if it contains the all-ones tuple   1   . . .   1  ofarity n. 
   the relation r is bijunctive  horn  dual horn  affine  if there exists a bijunctive  respectively horn  dual horn  affine  
formula o v e r w i t h the same set of satisfying assignments as the -formula 
	the constraint language s is 1-valid  l-valid  	bijunctive  
horn  dual horn  affine  if every relation contained in s is 
1-valid  respectively l-valid  bijunctive  horn  dual horn  affine . 
   the constraint language s is schaefer if at least one of the following four conditions hold: s is bijunctive  s is horn  s is dual horn  s is affine. the constraint language s is nonschaefer if it is not schaefer. 
1 	related work 
this section reviews relevant work done previously; throughout  s is used to denote a constraint language. we first mention the seminal work of schaefer  who proved a complexity dichotomy theorem on the satisfiability problem for sformulas. 
definition 1 	the sat s  decision problem. 
	input: an 	s-formula 
	question: 	is 	satisjiable  
   the satq s  decision problem is identical  except the input s-formula can have constants. 
   in other words  the s a t   s   problem is to decide  for a given s-formula   if the set models  is non-empty. remarkably  schaefer proved that for any constraint language s  s a t   s   is either in p or is np-complete; in addition  he gave a precise description of which constraint languages yield a tractable satisfiability problem  and which do not. 
theorem 1  schaefer  1  let s be a constraint language. 
   if s is 1-valid  l-valid  or schaefer  then sat s  is in p; otherwise  s a t   1   is np-complete. 
   if s is schaefer  then  is in p; otherwise  sat c  s  is np-complete. 
   kavvadias and sideri  studied the  inverse satisfiability problem   denoted here by i n v e r s e s a t c   s     . in the  standard  satisfiability problem the goal is to decide  given a formula  whether or not there exists a satisfying assignment. in the  inverse  problem  the given input is a set of assignments  and the goal is to determine whether or not there exists a formula with exactly the given assignments as its set of satisfying assignments. 
definition 1 	the inverse satc s  decision problem. 
input: set a of assignments over the same variable set v. 
   question: is there an s'formula  with constants such that a = models 
a dichotomy theorem was established by kavvadias and 
sideri  which shows that the inverse satisfiability problem is always in p  or is co-np-complete. intriguingly  the complexity of the inverse problem reflects exactly the complexity of the satisfiability problem:  is intractable if and only if i n v e r s e s a t c   s   is intractable! 
theorem 1  kavvadias and sideri  1  let s be a constraint language. 
¡¡if s is schaefer  then inverse satc s  is in p; otherwise  i n v e r s e is co-np-complete. 
   we now formalize the model checking problem for circumscription  which was called  minimal satisfiability  in  kirousis and kolaitis  1a . 
definition 1 	the mln s a t   s   decision problem. 
¡¡input: an s-formula over variable set v  an assignment  satisfying and a subset p ofv. 

¡¡question: is the assignment  a minimal model of  with respect to p  
¡¡the mln satc s  decision problem is identical  except the input s-formula can have constants. 
¡¡the mln sat s  problem is in co-np  as deciding whether or not a is a minimal model of a formula amounts to verifying - for all assignments - that if is a model  then  is not strictly below in the ordering cadoli  showed that this problem is co-np-complete in general  and also identified some tractable cases. more recently  the following full dichotomy theorem was proved concerning the complexity of mln sat 1 . 
theorem 1  kirousis and kolaitis  1a  theorem 1 1 let 1 be a constraint language. 
¡¡if s is schaefer  then mln s a t c   1   is in p; otherwise  mln satc 1  is co-np-complete. 
¡¡if s is 1-valid or schaefer  then mln sat s  is in p; otherwise  mln sat s  is co-np-complete. 
1 	the inverse circumscription problem 
the inverse satisfiability problem  defined formally in the previous section  is to decide  given a set of assignments  whether or not there is a formula with precisely the given input set as its models. the inverse circumscription problem  denoted by inverse mln s at 1   is similar in that the input is also a set of assignments and the task is to decide whether or not there is a formula describing the input set. however  in the inverse circumscription problem  the question is whether there exists a formula such that all of the given assignments are minimal models of . 
definition 1 the inverse mln sat s  decision problem. 
¡¡input: set a of assignments over the same variable set v  and a subset p of v. 
	question: 	is there an s-formula  f  such that a 
minmodels 
¡¡the inverse mln satc{s  decision problem is identical  except the question is to decide if there is an s-formula with constants satisfying the stated condition. 
¡¡as mentioned in the introduction  there is a natural variant of the inverse m i n satc 1  problem which has an identical description  except the  symbol is replaced with an = symbol in the  question.  let us denote this variant by 
inverse exact m i n s a t c   1   . we have the following results concerning this question. 
theorem 1 let s be a constraint language. if s is bijunctive or horn  then 
inverse exact m i n s a t c   1   is in p. 
¡¡¡¡1 wc note that the notation of  kirousis and kolaitis  1a  is different from ours. in particular  their decision problem min sat s  involves checking  given an assignment and formula  if the assignment is minimal with respect to all variables. it is easily verified that our definition of mln s atc  1  is equivalent to their  p; q; z  - mln s at 1   and that our definition of mln s at 1  is equivalent to their  - mln sat 1 . the theorem is stated here with respect to our notation. 
¡¡ifs is non-schaefer  then inverse exact mln satc 1  is co-np-complete. 
for non-schaefer constraint languages 1  hardness of 
inverse exact can be shown by first establishing the hardness of inverse exact m i n s a t c   1   
by reduction from inverse   and then reducing from inverse exact m i n s a t c   1   to inverse exact m i n   using a technique in 
 kavvadias and sideri  1 . for schaefer constraint languages 1  the existence of an output polynomial time algorithm for computing minimal models of a 1-formula implies the tractability of inverse exact m i n satc 1 ; see ikavvadias et al.   1  for such algorithms in the case of constraint languages s that are bijunctive or horn. 
for the remainder of this paper  we focus on the 
inverse m i n sat s  decision problem. given an input set a of this problem  it is possible to efficiently compute a  candidate formula  having the property that if there is any formula containing a in its set of minimal models  then the candidate formula is such a formula. that is  the candidate formula serves to witness that  yes  is the answer to the decision question of definition 1 - so long as some formula does. 
definition 1 suppose that s is a constraint language and that a is a set of assignments over the same variable set v. define the candidate 1-formula for a to be the set containing all constraints  over v and with relation in s  that are satis-
fied by every assignment in a. similarly  define the candidate 1-formula for a with constants to be the set containing all constraints with constants  over v and with relation in s  that are satisfied by every assignment in a. 
lemma 1 suppose that 1 is a constraint language and that a is a set of assignments over a variable set v. let p be a subset of v  and let  be the candidate s-formula  with constants  for a. there exists an s-formula  with constants  such that minmodels if and only if 
a 	minmodels 
¡¡for a fixed constraint language 1  the candidate 1formula for a set of assignments a can be computed in polynomial time  measured with respect to the size of the representation of a . by the key property of the candidate formula  lemma 1   it follows that inverse m i n sat s  is in co-np: an assignment  which is not included in a  satisfies the 1-candidate formula of a  and is strictly below an assignment in a  with respect to   serves as a succinct and efficiently checkable proof that a is a  no  instance of inverse m i n sat 1 .  by similar reasoning  
inverse  and inverse exact m i n satc s  can be shown to be in co-np  as discussed in ikavvadias and sideri  1 .  
1 	knowledge representation ¡¡whenever the model checking problem m i n sat 1  is in p  the inverse problem inverse m i n sat 1  will be in p. this is because deciding whether or not an input set a to the inverse m i n sat 1  problem is a  yes  instance amounts to verifying that every assignment in a is a minimal model of the candidate formula for a  clearly  this can be done in polynomial time when mln sat 1  is in p. to prove a full dichotomy theorem on the complexity of inverse m i n sat s   it remains to describe the complexity of inverse m i n sat s'  for the constraint languages s such that m i n sat s  is not in p. 
1 	dichotomy theorem 
in this section  we describe completely the complexity protile of the  inverse circumscription problem.  in particular  we show that for those constraint languages s such that m i n sat s  is co-np-hard  inverse m i n sat s  is also co-np-hard  and similarly for m i n satc s  and 
inverse m i n satc s  . 
	our 	first 	step 	is 	to 	prove 	hardness 	of 	the 
inverse m i n sat 1  problem for 1-sat formulas  where the circumscription is performed with respect to all of the variables. this initial hardness result is then used to establish the hardness of inverse m i n sat s  for other constraint languages s. 
theorem 1 the 	problem 	inverse mln sat 1   	is 
co-np-hard  even with the restriction that the subset p must be equal to the entire variable set. 
¡¡the proof of this theorem is sketched in appendix a; the hardness result claimed by the theorem is achieved by reduction from the mln sat s  problem. the hardness of inverse m i n sat s 1   can then be leveraged to establish the hardness of inverse mln s a t c   ¡ê     for the remaining constraint languages s. 
theorem 1 let s be a constraint language. if s is nonschaefer  then inverse mln satc s  is co-np-hard. 
¡¡then  constants can be  removed  in such a way that allows the hardness of inverse m i n sat s  to be established  based on the hardness of inverse m i n satc s . 
theorem 1 let s be a constraint language. if s is neither 1-valid nor schaefer  then inverse mln sat s  is co-nphard. 
¡¡collecting together the theorems of this section as well as the discussion at the end of section 1  we have the following dichotomy theorem. 
theorem 1 let s be a constraint language. 
¡¡ifs is schaefer  then inverse mln satc s  is in p; otherwise  inverse m i n satc s  is co-np-complete. 
¡¡if s is 1-valid or schaefer  then inverse mln sat s  is in p; otherwise  inverse mln sat s  is co-np-complete. 
1 	conclusions and future work 
in this paper  we formalized and studied inverse circumscription. we established a full dichotomy theorem in the complexity of this problem  theorem 1 . a fascinating phenomenon is that the complexity of inverse circumscription reflects exactly the complexity of model checking for circumscription  theorem 1 . this correspondence in complexity parallels the intimate relationship between the complexity of inverse satisfiability  theorem 1  and that of satisfiability  theorem 1 . the resemblance between the results on circumscription and those on propositional logic seems quite strong  as the hardness of inverse circumscription is established by reduction from model checking for circumscription -just as the hardness of inverse satisfiability is established by reduction from satisfiability  kavvadias and sideri  1. 
¡¡it would be of great interest to investigate further the relationship between  inverse  problems  mapping an explicit description to an implicit description  and more classical  forward  problems  mapping an implicit description to an explicit description . a concrete goal for future work is to study inverse problems for other non-monotonic reasoning formalisms. 
acknowledgements. the author wishes to thank bart selman for useful discussions and suggestions  and joe halpern for his advice on the preparation of the final version of this paper. 
a 	proof sketch of theorem 1 
definition a.l let a be a set of assignments over the variable set v. for   we say that an assignment b : v 
{    1} is k-compatible with a if for every size k subset w of v  there exists an assignment a a such that 
lemma a.1 let s be a constraint language with maximum arity k  and let a be a set of assignments over the variable set 
v. suppose that 	is the candidate s-formula for a  with 
¡¡¡¡¡¡  if b is r-compatible with a for all r = 1   . . .   fc  then b satisfies 	moreover  the converse holds if 
definition a.1 let s be a constraint language. for r 1  an r-pattern of an s-formula over v is a pair  w  t  such that -  {1} is an assignment 
to the variables of w  and for all clauses 
	if t is defined on the variables 	r x1........ xk 	 that is  
  then t satisfies 
¡¡in other words  an r-pattern for a formula is a subset w of the variable set of of size r along with an assignment to 
w which does not falsify any clause of 
¡¡before giving the proof  we introduce the following notation. a vector x of length k is an ordered list of variables 
 x 1  ...  xk . if 	is a bit vector 	and f 
is a vector of length fc  we let   j denote the function mapping xt to bi for all  ...  fc. if and v : are assignments with disjoint domains  that is  by we denote the function with domain equal to on v   and equal to v on when z is a vector of variables and / is an assignment defined on the variables of we let denote the restriction of / to the variables of for a positive integer fc  we let denote the set { 1   . . . fc}. 
proof. by  kirousis and kolaitis  1a  theorem 1   the version of mln  where the variable set p is promised to be the entire variable set is co-np-complete. to prove hardness of i n v e r s e w e give a reduction from this version of  . in particular  given a s1formula   and an assignment a satisfying   we create a set of assignments a over a variable set x such that there is an s1 formula  with a minmodels if and only if a is 

is not a minimal model of   this implies the correctness of our reduction  as then we have that there exists no -formula such that a if and only if a is not a minimal model of 
