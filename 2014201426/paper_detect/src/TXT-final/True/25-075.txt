 
the assumption-based truth maintenance system 
 atms   de kleer  1  is the most well known implementation of any dynamic reasoning system. some connections have been established between the atms and various nonmonotonic logics  e.g. autoepistemic logic  reinfrank et al.  1  . we describe the relationship between the atms and the a g m logic of belief  gardenfors  1   and show that it is possible to simulate the behaviour of the atms using the a g m logic by encoding the justificational information as an epistemic entrenchment ordering. the atms context switching is performed by agm expansion and contraction operations. we present an algorithm for calculating this entrenchment ordering  and prove its correctness relative to a functional specification of the atms. this result demonstrates that the a g m logic  which is based on the coherence theory of justification  is able to achieve both coherence and foundational style behaviour via the choice of epistemic entrenchments. 
1 introduction 
few would dispute the necessity of having a method of representing justificational information in a nonmonotonic reasoning system  but there is less agreement on what form these justifications should take. there are two distinct philosophical approaches to formalising the requirements for a belief to be justified by another belief or set of beliefs; these are called the foundational and coherence theories of 
justification  pappas and swain  1; gardenfors  1 . 
1 	the foundational theory 
foundational reasoning is based on the concept that each fact or belief is accepted on the grounds of other beliefs which justify it. these beliefs are in turn justified by others  forming a chain of supports for each belief. infinite chains of supports are disallowed  as are cycles in the chains  so that each chain of inferences starts from a set of premises or assumptions. these are called the foundational beliefs  since they give support to the whole of the belief set  and yet are not supported themselves by any other beliefs. 
　　a number of operational systems based on the foundational model have been developed  the most wellknown of which is the assumption-based truth maintenance system  atms   de kleer  1 . the atms is used in diagnosis and qualitative physics  so functionality and efficiency are real concerns in its design. hence we have in the atms an operational and reasonably efficient implementation of the foundational style of reasoning. 
1 	the coherence theory 
the coherence theory of justification takes a different view of what constitutes a valid justification or reason to believe a proposition. a belief is considered valid on the basis of its coherence with all of the other beliefs  rather than having an explicit justification  as required by the foundational theory. in other words  a belief or fact need not have any explicit support for it to be included in the set of beliefs. the main criterion for the acceptance of a belief is that it is coherent with all or as many as possible of the other accepted beliefs. in this way  beliefs are able to justify each other in a circular fashion  so there is no concept of a foundational belief. 
　　the coherence theory is also accompanied by a principle of minimal change: when accepting a belief which is inconsistent with the belief set  the aim is to modify the belief set as little as possible whilst incorporating the new belief and maintaining a coherent set of beliefs. 
　　the most well-developed system of this sort is the a g m logic of belief  gardenfors  1 . the a g m logic is defined by a set of rationality postulates  which are intended to capture the notion of rational change of belief. in addition to these postulates  there is an ordering on the beliefs  called the epistemic entrenchment  gardenfors and makinson  1   which ensures that the system can evaluate a unique solution within the constraints imposed by the postulates. one major drawback with the agm logic is that the operations all produce closed theories  which are usually infinite. various solutions to this problem have been proposed  using finite theory bases to represent belief sets. see  nebel  1; 1; williams  1   where the a g m postulates are weakened to provide more efficient revision algorithms. an implementation of williams' approach is described in  dixon  1 . 
1 	motivation and overview of the paper 
one desirable property of any reasoning system is a means of expressing explicit justificational information  and reasoning with it foundationally. we show that although the 


1 the agm logic 
the agm belief revision logic has been described at length in  gardenfors  1 . it is based on a logically closed set of beliefs  kf with the closure operator denoted conseq  so that k = conseq k . three basic operations arc central to the system: expansion  contraction and revision  denoted  respectively  where a is the sentence by which the belief set is being expanded  contracted or revised. the inconsistent belief set is denoted k1. expansion involves adding a new belief to the belief set  with all of its consequences. a contraction is the removal of a belief from the belief set  accompanied by the removal of sufficient other beliefs so that the belief set remains consistent and closed under logical consequence. that is  the belief being removed must not be derivable from the remaining belief set. the third operation  revision  comprises the addition of a new belief to the belief set such that any conflicting beliefs are removed from the belief set  maintaining the consistency of the system. revision can be defined as a contraction of the negation of the belief  followed by an expansion operation; this is called the levi identity. 
   the postulates for contraction and revision do not define a unique function for either operation  so it is necessary to add some further constraints  in the form of an epistemic entrenchment relation  which is an ordering on the members of the belief set. let ent p  denote the entrenchment of proposition p  where the entrenchments are ordered by the normal relational operators:      and =. entrenchment orderings obey the following five axioms  gardenfors  1 : 

1 translation algorithm 
1 constructing an entrenchment relation 
to specify an entrenchment ordering completely requires an ordering on the dual atoms. the number of dual atoms is exponential in the number of atoms in the language  and this gives us reason to look for a partial ordering which contains sufficient information to define the contractions which interest us  and which is consistent with the entrenchment axioms. in doing this  we are not defining an alternative to the agm entrenchment axioms  but instead we are allowing many of the entrenchment values to be unknown  since we will never need to consult these values to implement the agm contraction operator. thus the partial entrenchment relation which we define may be extended to any full entrenchment relation  as long as it is consistent with the agm entrenchment axioms   without affecting our results. 
   since we are modelling atms environment changes  the only beliefs to be added or contracted are atms assumptions  which are atomic. in fact  our algorithm contracts one atom at a time  and for the results we require  the only beliefs we need to check for membership in k are also atomic  atms nodes . from the definition of contraction  we only need to know entrenchment relations between each assumption and the disjunction of the same assumption with each other atom. for any atoms a and b  
 ee1  constrains this relation to which allows two possibilities. 
. for this algorithm  it is sufficient to use 	only 	1 	distinct 	entrenchment 	values  	denoted 
e1  e1  e1  e1 and e1  where e1   e1   e1   e1   e1. we denote the entrenchment of a proposition p  when the 
agm system represents the atms in environment ♀  by 
ente p . then by 	for 
consistent k. by 
tautology. since atms justifications cannot be altered once they are provided by the problem solver  they are entrenched at the next highest level of entrenchment  e1. the atoms in the current environment have entrenchment e1  and all disjunctions of an assumption and any other atom are initially given the entrenchment e1. 
1 definitions 
let the set of all atoms be denoted 
   from the functional specification of the atms  it is possible to work backwards to a definition of the label of a node. each environment in the label of a node p is a support set for p  so the label is a set of support sets  which we may define as follows: 

   the first condition requires that the label contain assumptions only  that is  the foundational beliefs of the node. the second condition ensures soundness  the third minimality  and the fourth consistency. completeness is achieved when the label contains all sets fulfilling the four conditions. 
   the above definition uses the atms provability relation to extract the internal data structure from the atms. however  an explicit definition is necessary to implement the following algorithm. the label update algorithm is performed as follows: 
agm logic is based on the coherence theory of justification  it is possible to use epistemic entrenchment to achieve foundational behaviour. we describe an algorithm for translating the justificational information stored by the atms into an entrenchment ordering on the beliefs in the 
a g m model. this algorithm uses the agm expansion and contraction operations to perform atms context switches. we prove that this algorithm creates a system which is behaviourally equivalent to the atms  relative to the specification of the atms given in section 1. 
　　one motivation for developing this algorithm was to show that by using epistemic entrenchment it is possible for the agm logic to exhibit foundational behaviour  without the limitations of the atms. in the atms  the problem solver and the truth maintenance systems are separate  so that the justifications are not part of the logic. attempts have been made to formalise the logic of the atms freiter and de kleer  1; selman and levesque  1 . we do not attempt to formalise the logic of the atms in this paper  but we have formalised the functional behaviour of the atms in order to prove the correctness of the simulation algorithm. there is no corresponding problem with formalising the agm logic  since the justifications are part of the logic  so it is possible to reason about the system directly. also  the a t m s s separation of justifications from the data means that the justifications cannot be altered without restarting the system  whereas the agm logic allows the justifications to be varied dynamically. 
by establishing a constructive connection between the 
agm logic and the atms  we can use existing relationships between the atms and other logics to calculate the epistemic entrenchment relations which correspond to these logics. to date there have been very tew constructive definitions of entrenchment relations which achieve the same behaviour as other systems. 
　　in section 1  we describe the atms and give a formal specification of its behaviour. the agm logic is outlined in section 1  followed by the algorithm for simulating the atms in the agm logic in section 1  with the proof of the correctness of the algorithm in section 1. section 1 summarises the paper  and outlines areas of future research. 
1 the atms 
the atms is an implementation of the foundational approach to modelling states of belief. each belief must be justified by some set of beliefs  and any proposition that does not have such a justification is not accepted as a belief. the exception to this rule is the set of foundational beliefs  which require no justification at all. in the atms  these beliefs are called assumptions. for a justification to be valid  the beliefs which justify any proposition must be justified themselves  so that chains of justifications are formed. 
　　the foundational theory places two restrictions on these chains: firstly they must be acyclic  so that no proposition can form part of its own justification  and secondly the chains must be finite  regressing to the beliefs which require no further justification. the atms removes the restriction that justifications be acyclic  since the  atms mechanism will never mistakenly use it as a basis for support   de kleer  1  p. 1 . naturally  the atms has no way of representing infinite chains of justifications. we place one additional restriction on the atms: we do not allow the assumptions to be justified  in keeping with the concept of foundational beliefs   de kleer  1  p. 1  provides a technique which  avoids ever having to justify assumptions   so this restriction does not reduce the power of the atms at all 
　　in the atms  each proposition is represented by a node  and is treated as atomic. any logical relationship between nodes must be provided by the problem solver  in the form of justifications which are passed to the tms. the justifications represent propositional horn clauses  with the normal provability relationships  except that inconsistency is avoided by the use of nogoods  which have a separate data structure. nogoods are sets of assumptions which cannot be held simultaneously  and they are used to reduce the size of the search space  improving the efficiency of the atms. 
　　the current set of assumptions is called the environment  and the set of facts derivable from this environment is called the context. an atomic proposition p is held to be true in an environment e if and only if it is a member of the current context. in this work  atms provability is denoted p. 
　　for a node representing a proposition to be held true in a particular context  it must have a well-founded supporting justification  that is  a chain of justifications starting from a set of assumptions  where each of these assumptions is part of the current environment. the only other conditions under which a node is considered true are when it is an assumption  and therefore requires no justification  and when the current environment is inconsistent  in which case all nodes are accepted as true. 
　　the implementation of the atms achieves a high level of efficiency by creating a static data structure in place of a theorem prover to calculate revisions of belief sets. the justifications and nogoods are  pre-compiled  into this data structure initially  and after this they are not consulted again. 
for each proposition p  the atms creates a node representing it  and associates a label with it  which stores the justificational information. the label represents the set of environments in which the proposition p is true. the label must be consistent  sound  complete and minimal. a label is consistent when each of its members is a consistent environment. that is  a label must not contain an environment which is a superset of any nogood set. the label for p is sound when p is derivable from each environment of the label. if every environment from which 
p can be derived is a superset of some environment of its label  then the label is complete. a label is minimal if no environment of the label is a superset of any other. 
1 	a t m s functional specification 
let e* represent the set of all assumptions. as described above  no member of e* may appear as the consequent of any justification. let a and c represent atoms  and a a set of atoms. the input to the atms consists of a set of 
a set of nogood and the current 
update label  p  
for each justification 
if the label of any member of b is empty continue with next justification 
for all choices of one environment from each member of b 
let l be the union of these environments if l subsumes any nogood environment continue with next choice 
else if l is subsumed by any environment in label p  continue with next choice 
else if l subsumes any environments in label  p  
remove those environments from label  p  
add l to label  p  
if label  p  has changed 
for each justification  b q   j such that p b 
update label  q  
end {updatw label  
   the foundational beliefs of an atom p in the environment e  denoted fb p e   is the set of support sets of p which are held to be true in e. if no such set exists  then the atom has no well-founded justification. formally: 

the essential support set  es p e   is defined: 

   from the functional specification of the atms  an atom is considered true if and only if it is an assumption  or the environment is inconsistent  or it has a well-founded 
justification. in terms of the above definitions: 

   using these definitions  we now describe the algorithm which calculates the entrenchments for the agm logic to simulate the atms behaviour. 
1 algorithm atms to agm 
this algorithm calculates the epistemic entrenchments necessary to simulate atms environment change in the agm logic via the agm belief change operators described in section 1. the belief set k contains all of the current beliefs  and corresponds to the atms context. obviously  since k is logically closed  it is a much larger set than the corresponding atms context  but we show that for all 

   the algorithm encodes the current support relationships in the entrenchment relation. that is  if p is an essential support for q  then the removal of p must force the removal of q  and this  according to the definition of contraction  requires that the entrenchment relation contain 
               . since ent p  = e1  this is achieved by setting alternatively  if q is not dependent on p  then we have by setting 
   for each environment change  the translation algorithm computes the corresponding changes in the entrenchment relation from the changes in the essential support sets. for each new assumption a in the essential support of the proposition b  the entrenchment of  is set to e1   so note that the default entrenchment  for atomic x and y  encodes the fact that x and y are unrelated  since if x is removed from k  y is unaffected. it is the job of the problem solver  not the tms  to point out any relationships between the various atoms  or if it is considered expedient  to refrain from doing so. 
   the amount of work performed by the algorithm suggests that simulating the atms in agm logic is not trivial. the reason for this is that foundational reasoning is independent of history - for example the atms context depends only on the current environment  and is not affected by any previous environment  whereas the agm logic relies on a principle of minimal change when moving from one theory to the next. unfortunately  this minimal change principle cannot also apply to the entrenchment relation  thus extensive revisions of the entrenchment relation are often necessary to keep the system  effectively independent  of its previous state. 




1 conclusions and further research 
we have shown that the atms can be simulated in the 
agm logic by using a suitable epistemic entrenchment relation to encode the foundational justifications of the beliefs  and using contraction and expansion operations to perform context changes. the atms encoding does not specify a complete entrenchment relation  but calculates the class of entrenchments for which the agm's behaviour with respect to atoms is equivalent to the atms. thus the coherence-based agm logic is able to mimic the behaviour of a foundational system  the atms. this illustrates an advantage of the agm logic with entrenchment over the many purely foundational systems: it is possible to express all types of justificational information using epistemic entrenchment. current research involves using epistemic entrenchment to model non-foundational justifications  dixon and foo  1b   such as a coherence-based truth maintenance system. another advantage is that the agm logic is a formal system  so it is possible to reason directly about the system  which is not true of the atms. 
   other extensions of this work are rule revision  which is not allowed by the atms  but could be easily implemented in the agm logic by decreasing the entrenchment of the justifications. one application of rule revision would be to model default rules and exceptions  by creating a stratified rule base  with various sets of rules being placed at different levels of entrenchment. current research also includes extending the implementation in  dixon  1  to a belief revision system which satisfies all of the agm postulates. 
