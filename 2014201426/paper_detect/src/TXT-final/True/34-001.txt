 
f i r s t order theories not only can be used in proving properties of programs  but have also rele -
vance in representation theory. the desire to represent f i r s t order theories in a computer in a feasible way requires the f a c i l i t y to discuss meta mathematical notions. using metamathematics w i l l eventually allow to construct systems which can formally discuss how they reason. in this paper we present two d i f f e r e n t f i r s t order axiomatizations of the metamathematics of the logic which pol   f i r s t order logic proof checker  checks and show several proofs using each one. the difference between the axiomatizations is that one defines the metamathematics in a many sorted logic and the other does not. proofs are then compared and 
used to discuss the adequacy of some fol features. 
section 1 introduction 
　　　this paper represents a f i r s t attempt at a x i omatizing the metamathemat ics of a f i r s t order 
  f i r s t order logic . the logic whieh fol checks is described in d e t a i l in the user manual for this program  weyhrauch and thomas 1. it is based on a system of natural deduction described in prawitz 1  1. 
　　　our motivation in axiomatizing the metamathemat ics of fol was the desire to work on an example which could he used as a case study for projected features of fol and  at the same time  had independent interest with respect to representing the proofs of s i g n i f i c a n t mathematical results to a computer. 
　　　the eventual a b i l i t y to c l e a r l y express the theorems of mathematies to a computer w i l l require the facility to state and prove theorems of meta-
mathematics. there are several clear examples: 
a. axiom schemas. how exactly do we express that 

is an axiom schema  we need to say:   i f for any first order sentence v with one free variable y we 
denote by p n  the formula obtained from p by sub-
s t i t u t i n g n f o r y assuming n is free for y in p  then the sentence 

    
this research was carried out while the author was v i s i t i n g at the a . i . lab.  computer science department  stanford university. 
i 
is an axiom of arithmetic.  
b. theorem schemas. the following kind of  theorem  is sometimes seen in set theory books 

it asserts the existence of some particular proje♀ tion of n+1-tuples. in its usual formulation this is not a theorem of set theory at a l l   but a metatheorem which states that  for each n  the above sentence is a theorem. we do not know of any machine implementation of f i r s t order logic capable of expressing the above notion in a straightforward way. 
c. subsidiary deduction rules. below we show 
how to prove that if there is a proof of vx y. wff then there is also a proof of vy x. wff  where wff is any well formed formula. we chose this task be-
cause it seemed simple enough to do  and is a theorem which may actually be used. the use of 
metatheorems as rules of inference by means of a reflection principle w i l l be discussed in a future memo by richard weyhrauch. eventually we hope to check some more substantial metamathematical theorems. 
d. interesting mathematical theorems. we pres 
ent two examples. the f i r s t is any theorem about f i n i t e groups. the notion of f i n i t e group cannot be defined in the usual f i r s t order language of group theory. thus many  theorems  are actually metatheorems  unless you axiomatize groups in set theory. the second theorem is the  duality p r i n c i ple  in projective geometry. 
　　　finally  from the viewpoint of a . i . and representation theory the ability to state and prove theorems of metamathematies can be very helpful in answering the questions of how we  reflect  on the reasoning we are doing and if a proper axiomatizat ion of the metamathematics of an fol language together with some sort of computationally realizable reflection principle allows us to discuss in an adequate way our reasonings. 
　　　this paper is divided into two sections. in the f i r s t one  we present the two axiom systems and the proof of the metatheorem:  for a l l variables x y and well formed formulas f  
is a theorem also 	a theorem . in 
the second section we look at proofs appearing in the appendices in order to explore the features 
of fol that need improving and their use in earry ing out formal proofs. 

section 1 the axiom system 
       in this hoclion we present two axiomatizauons of the mctamalhcmatics of f i r s t order logic. the iiuji 1 difference between lhcm is that one is done iu a many sorted f i r s t order logic and the other not. these axioinilizalions represent an a t tempt at experimenting with proots about properties of formulas and deductions. no e f f o r t has been spent on guaranteeing that the axioms are i n dependent. it would not only have been uninteresting but also contrary to our basic philosophy. we 
wish to find axioms which naturally r e f l e c t the relevant notions. at the moment this axiomatization is far from being in its f i n a l form. neither the extent of the notions involved nor the best way of expressing them is considered settled. 
　　　strings and sequences of strings have been axiotnatized and used to define metamathematical notions. for instance  well formed formulas are represented as strings of symbols which satisfy the predicate' form defining which combinations of constants  variables predicates and functions symbols represent a wff.; deductions are then represented as sequences of wff's satisfying the predicate prooftkkk. 
1 the sorts 
　　　the sorts we have defined correspond to the basic notions ol the metamathematics i.e. terms  formulas  individual variables  logical symbols  function symbols etc. and the notions of the domains  strings and sequences of strings  in which the axiotnatizat ion has been defined. koi   see weyhrauch and thornas 1  allows the declaration of variables to be ot a certain sort. in the formulas appearing in this paper  each variable is declared to be of some particular sort. for i n stance f   f l   f 1   .   . are of sort well formed formulas t   t l   t 1 . . . of sort terms etc. for the complete set of fol declarations see aiello and wcyhrauch 1. 
1 the domain of representation of the metamathemat ics. 
　　　the basic notions of the metamathematics of f i r s t order logic have been axiomatized in terms of strings and sequences of strings. the primitive 
functions on them are concatenation  c for strings  cc for sequences  and selectors  car  cdr for strings and scar  scdr for sequences   c and cc are i n f i x operators. 
1.1 formulas and terms 
　　　formulas and terms arc represented by the s t r i n g of symbols appearing in them. terms are defined recursively as strings which either represent an individual variable or can be decomposed into n+l substrings representing a function symbol of a r i t y n  followed by n terms. the two predicates defining terms arc: 
where the function substring s n n  returns the substring of s s t a r t i n g from its m-th element and ending with the n-th. len s  computes the length of s and  n gp s  selecls the n-th element of s. 
　　　well formed formulas  wffs  are represented as strings which either are elementary formulas  defined by the predicate km-'  or can be partition  ed into substrings for formulas and logical connectives. formulas are defined by: 

gen is the i n f i x operator that maps i t s arguments x and f into the s t r i n g   fokallsym c x  c f  r e presenting the well formed formula vx.f. the oper ator ex is used f o r the e x i s t e n t i a l q u a n t i f i e r   d i s   con and impl are the i n f i x operators for the d i s j u n c t i o n   conjunction and implication of two formulas finally neg is the operator which maps a formula into i t s negation. 
　　　we could possibly represent wffs as s t r u c t u r ed objects   l i s t s   trees  etc.  which contain a l l the information about the structure of the formula and do not require any parsing. this approach a-
mounts to axiomatizing metamathematics in terms of the abstract syntax of f i r s t order l o g i c   i n stead of strings of symbols. both of these possib i l i t i e s should be explored. we have chosen the f i r s t alternative because: 
　　　1  it is the most t r a d i t i o n a l   i . e . luetanuith ematics  as it appears in logic books  is usually stated in terms of strings. 
　　　1  axioms in terras of abstract syntax are simply theorems of the theory expressed in terms of strings. thus the two representations look sub s t a n t i a l l y the same with respect to  high l e v e l   theorems. 
　　　1  ill-formed formulas can be mentioned. this is of course impossible in an axiomatization in terms of the abstract syntax. 
　　　the properties of wffs relevant to our theory have been defined by the predicates fr  frn  geb and sbt  fr x f  is true i f f the variable x has at least one free occurrence in the wff f  while frn x n f  and ceb x n f  are respectively true when the variable x occurs free or bound at the place n in the formula f. in addition to these predicates  some generalized selector functions are defined  which evaluate the f i r s t or the k-th free occurrence of a variable in a wff  or the number of i t s free occurrences. the predicate sbt is then defined. it axiotnatizes the notion of sub s t i t u t i o n of a term for any free occurrence of a variable in a wff. 
1 


　　　the proof of the equivalence of sbt and sbv when t is a variable is very simple. it is based on the fact that n1 coincides with nl when the term t has length 1  see aiello and weyhrauch 1   the function sbt  sbv  evaluates to the s i r i n g representing the result of substituting a term  variable  for every free occurrence of a 
　　　variable in a gi ven wff. sbt and sbv are defined from the predicates sbt and sbv as follows: 

　　　the problem of finding the best way of d e f i ning functions in fol is c r u c i a l : in the axiom system given in this paper a uniform way has not been followed. in defining the substitution we are interested in properties of the functions sbt and sbv and in drawing conclusions from the fact that a substitution has been made. it is thus useful to have a predicate which defines the relation 
between formulas before and after a substitution instead of i n f e r r i n g it from the d e f i n i t i o n of the functions  stated for example as a system of equa tions  as in kleene 1 . one of the motivationt of the present experiment was to explore d i f f e r ent ways of defining functions. we do not yet have enough examples of proofs to make a clear statement about this matter. 
1.1 rules ot inference  deductions and the notion of p r o v a b i l i t y 
　　　the rules of inference with one premise  are expressed by means of a binary predicate whose arguments are two sequences of wffs  sq  pf  which satisfy prooftree. 
the predicate is true i f f pf is the scdr of sq and the f i r s t element of sq is a wff obtained by applying that particular deduction rule to the f i r s t wff of pf. the rules with more antecedents are defined in a similar way. 
　　　derivations are recursively defined as sequences of wffs which either are a single wff or are obtained from one or more derivations by applying one of the deduction rules. the recursion is i m p l i c i t l y stated by saying that there exist 
objects of sort pkooktkkk which s a t i s f y one of the predicates defining the rules of inference. these 
1 
applied; there exist two proof trees and one of the two premises rules has been applied; f i n a l l y   there are three prooftrees and the predicate def i n i n g the v-elimination rule is true. note that the root of a prooftree is not necessarily a theorem in a given theory. a predicate depend has been defined which is true if a given wff is a dependence for the root of a prooftree. the axioms about depend allow to decide a l l the dependencies of a prooftree. 
　　　since some of the deduction rules  the i m p l i cation introduction  for instance  eliminate depen  dencies  not a l l the leaves of a prooftree pf are dependencies for a wff f such that f - s c a r   p f   . the predicate depend is true only for those leaves of the prooftree which the formula f actually depends on. the axioms depend state which dependencies do not change by applying the deduction rules and are transferred from one prooftree to the other. the axioms ndepend state which rules dicharge dependent cies in a given prooftree. 
　　　using this notion of dependence  the provab i l i t y of a formula in a theory is defined as follows: 

　　　a w f f . f is a theorem in a given theory if there exists a prooftree whose f i r s t element is f and whose only dependencies are axioms in that theory. we have l i m i t e d our attention to theories in which axioms have no free variables. this property is defined by the axiom: 
f k   x . f     . 



1 




	prawitz  	d   
1 	natural deduction  a proof theoretical study 
alaquist and wikseil  stockholm  1 . 
godel  k.  
1 die 	voilatandingk.it 	der axione dea logischen funktionenkslkule monatshefte fur matheoatik und physik 1   1  1. 
	godel  	k.  
1 uber formal unentacheidbare satse der principle mathematics und vervandter systems i  monatahefte fur matheoatik und physik 1  1  1. 
veyhrauch  r.w.  and thomas  a . j .   
	1 	pol: a proof checker for first-order 
logic stanford a r t i f i c i a l 	intelligence laboratory  memo aim-1  1 . 
aiello  m.  and weyhrauch  r.w.  
1 checking proofs in the metaaetheaatics of f i r s t order logic  stanford a r t i f i c i a l intelligence laboratory  memo aim-1  1 . 
1 
