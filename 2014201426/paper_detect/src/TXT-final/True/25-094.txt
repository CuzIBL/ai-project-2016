 
in a recent paper we have proposed terminological default logic as a formalism which combines both means for structured representation of classes and objects  and for default inheritance of properties. the major drawback which terminological default logic inherits from general default logic is that it does not take precedence of more specific defaults over more general ones into account. the present paper addresses the problem of modifying terminological default logic such that more specific defaults are preferred. it turns out that the existing approaches for expressing priorities between defaults do not seem to be appropriate for this purpose. therefore we shall consider an alternative approach for dealing with prioritization in the framework of heifer's default logic. the formalism is presented in the general setting of default logic where priorities are given by an arbitrary partial ordering on the defaults. we shall exhibit some interesting properties of the new formalism  compare it with existing approaches  and describe an algorithm for computing extensions. 
1 	introduction 
early knowledge representation formalisms such as semantic networks and frames comprise both means for structured representation of classes and objects  and for default inheritance of properties. however  these formalisms did not have a well-defined formal semantics  and subsequent formalisms trying to overcome this problem usually concentrated on one of these two means of representation. nonmonotonic inheritance networks are concerned with defeasible inheritance  sometimes in combination with strict inheritance  but the nodes in these networks are unstructured objects or classes.1 
   *this work has been supported by the german ministry for research and technology  bmft  under research contract it w 1. 
1
　　 there are some attempts to generalize this approach to structured classes  but they work in a very restricted setting  and it is not clear how to obtain more general results in this terminological representation formalisms  on the other hand  can be used to define the relevant concepts of a problem domain in a structured and well-formed way. this is done by building complex concept descriptions out of atomic concepts  unary predicates  and roles  binary predicates  with the help of operations provided by the concept language of the particular formalism. in addition  objects can be described with respect to their relation to concepts and their interrelation with each other. the concept descriptions are interpreted as universal statements  which means that they do not allow for exceptions. as a consequence  the terminological system can use descriptions to automatically insert concepts at the proper place in the concept hierarchy  classification   and it can use the facts stated about objects to deduce to which concepts they must belong  but objects cannot inherit properties by default. 
   the problem addressed in this paper is how to bring together both means of representation originally present in semantic networks and frames  without losing the advantages of terminological formalisms  such as being equipped with a formal and well-understood semantics and providing for automatic concept classification. an integration of defaults would often greatly enhance applicability of terminological systems  or would at least make their use more convenient in most applications  see  e.g.   which shows that embedding defaults into terminological systems is an important item on the wish list of users of such systems . for this reason  several existing terminological systems  such as back   classic  1j  k-rep   l l     or loom   have been or will be extended to provide the user with some kind of default reasoning facilities. as the designers of these systems themselves point out  however  these approaches usually have an ad hoc character  and thus do not satisfy the requirement of having a formal semantics. 
   as a first attempt to give a formally well-founded solution to this problem  an integration of reiter's default logic into a terminological formalism was proposed in  1j. one reason for selecting default logic  out of the wide range of nonmonotonic formalisms  was that reiter's default rule approach fits well into the philosophy of terminological systems. most of these systems already provide their users with a form of  monotonic  forward 
direction  see  e.g.   . 
	baader and hollunder 	1 
rules  and it turned out that these rules can be viewed as specific default rules where the justifications are absent. a second pleasant feature of terminological default logic  as introduced in   is that it becomes decidable provided that applicability of default rules is restricted to objects explicitly present in the knowledge base. it should be noted that this constraint is also imposed on the monotonic rules in terminological systems. 
　the major drawback which terminological default logic inherits from general default logic is that it does not take precedence of more specific defaults over more general ones into account. for example  assume that we have a default which says that penguins cannot fly  1 and another one which says that birds can fly  and that clas-
sification shows that penguins are a subconcept of birds. intuitively  for any penguin the more specific first default should be preferred  which means that there should be only one default extension in which the penguin cannot fly. however  in default logic the first default has no priority over the second one  which means that one also gets a second extension where the penguin can fly. this behaviour has already been criticized in the general context of default logic  but it is all the more problematic in the terminological case where the emphasis lies on the hierarchical organization of concepts. 
　in the present paper we shall consider the problem of modifying terminological default logic such that more specific defaults are preferred. after a short recapitulation of default logic and its specialization  terminological default logic  in section 1  we shall consider the 
existing approaches for expressing priorities between defaults  and shall point out why they do not seem to be appropriate for our purpose  see section 1 . for this reason we present in section 1 an alternative approach for dealing with prioritization in the framework of reiter's default logic. the formalism is presented in the general setting of default logic where priorities are given by an arbitrary partial ordering on the defaults. for terminological default theories the priorities between defaults will be induced by the position of their prerequisites in the concept hierarchy. we shall exhibit some interesting properties of the new formalism  and shall compare it with existing approaches. it turns out that every extension according to our definition  sextension  is an extension according to reiter's definition  r-extension ; however  r-extensions which are not compatible with the partial ordering on defaults are excluded by our formalism. not all default theories with an r extension have an s-extension  but every normal default theory has an s-extension. if the defaults are further restricted to prerequisite-free normal defaults then our approach coincides with the one of brewka and junker  1; 1 . in section 1 the problem of how to compute sextensions will be addressed. 
1 	default logic 
this section briefly reviews reiter's default logic and its specialization  terminological default logic. 
　　1 the reader who is surprised that this is only taken as a default property should have a look at the cover of . 
1 	knowledge representation 
reiter's default logic reiter  deals with the problem of how to formalize nonmonotonic reasoning by introducing nonstandard  nonmonotonic inference rules  which he calls default rules. a default rule is any expres-
sion of the form 

where are first-order formulae.1 here a is called the prerequisite of the rule   is its justification  and  its consequent. for a set of default rules v  we denote the sets of formulae occurring as prerequisites  justifications  and consequents in v by pre v   jus d   and con d   respectively. 
a default rule is closed iff  do not contain 
free variables. it is semi-normal iff its justification implies the consequent  and it is normal if its justification and consequent are identical. a default theory is a pair  w v  where w is a set of closed first-order formulae  the world description  and v is a set of default rules. a default theory is close.d iff all its default rules are closed. 
　intuitively  a closed default rule can be applied  i.e.  its consequent is added to the current set of beliefs  if its prerequisite is already believed and its justification is consistent with the set of beliefs. formally  the consequences of a closed default theory are defined with reference to the notion of an extension  called r-cxtenswn in this paper   which is a set of deductively closed firstorder formulae defined by a fixed point construction  see   p.1 . in general  a closed default theory may have more than one r-extension  or even no extension. depending on whether one wants to employ skeptical or credulous reasoning  a closed formula 1 is a consequence of a closed default theory iff it is in all r-extensions or if 
it is in at least one r-extension of the theory. 
　to generalize the notion of an r-extension to arbitrary default theories one just assumes that a default with free variables stands for all its ground instances. in roller's original semantics the world description and the consequents of all defaults have to be skolernized before building ground instances  over the enlarged signature . as shown in  skolemization leads to both semantic and algorithmic problems  which is the reason why we 
shall dispense with it in the case of terminological default theories. 
terminological default logic for lack of space we shall not formally introduce a particular terminological language  see e.g.  for details . instead we shall just mention the features of terminological languages which will be important for the following. the terminological part of such languages allows one to build complex 
concept descriptions out of atomic concepts  unary predicates  and roles  binary predicates . for our purposes it suffices to know that a concept description c can be regarded as a first-order formula c{x  with one free variable x. the subsumption hierarchy between concepts 
　　1  for the sake of simplicity we consider only defaults with one justification. however  our results can easily be extended to the general case of defaults with finitely many justifications. 
corresponds to implication of formulae: c is subsumed by d iff  is valid. 
   the assertioal part of the language can be used to state that an object is an instance of a concept  1  or that two individuals are connected by a role r. logically  this means that one has constant symbols a  b as names for objects  and can build formulae c a  and r a b  by respectively substituting a for the free variable in c   r   and applying the binary predicate r to the constants a  1. a finite set of such formulae is called an a box. important inference problems for aboxes are whether a given a box is consistent  and whether an object a is an instance of a concept c  i.e.  whether c a  is a logical consequence of the given abox. it should be noted that the formulae c x  obtained as concept descriptions of a 
   terminological language belong to a restricted subclass of all first-order formulae with one free variable. for this reason the subsumption  consistency and instantiation problems are usually decidable for these languages. 
a terminological default theory is a pair  a  d  where 
a is an abox and v is a finite set of default rules whose prerequisites  justifications  and consequents are concept descriptions. obviously  since aboxes can be seen as sets of closed formulae  and since concept descriptions can be seen as formulae with one free variable 1 terminological default theories are subsumed by reiter's notion of an open default theory. however  as motivated in section 1 and 1 of   we do not skolemize before building ground instances. this means that an open default of a terminological default theory is interpreted as representing all closed defaults which can be obtained by instantiating the free variable by all object names occurring in the abox. with this interpretation  it is possible to compute all r-extensions of terminological default theories  see   section 1 and 1 . 
1 	approaches to prioritization 
when conflicts occur in reasoning with defaults it is quite obvious that the more specific information should prevail over the more general one. in the context of terminological default theories this means that for an instance of the concepts c and d a default with prerequisite c should be preferred if c is subsumed by d. as mentioned in the introduction this requirement is not taken into account by reiter's approach. if we assume that p  b  and f are concept descriptions defining penguins  birds  and flying objects  where p is subsumed by b  then the terminological default theory consisting of the world description 
{/' danny   and the defaults 

has two r-extensions. one of them contains f{danny  and the other one  danny   and the semantics gives no reason for preferring the second one  in which the more specific default was applied. 
1
　　the formulae occurring in one rule are assumed to have identical free variables. 
　to overcome this kind of problem several approaches for realizing priorities among defaults have been proposed in the literature. the priorities may be induced by specificity of prerequisites  as described above   but may also come from other sources  such as reliability of defaults . 
   reiter and criscuolo show how some kind of prioritization between defaults can be achieved without changing the formalism by encoding the priority information into the justifications of semi-normal defaults . although our simple example from above could be handled with this approach  it is not clear how to treat more complex situations. reiter and criscuolo do not describe a general method for solving these problems; they just  focus on certain fairly simple patterns of default rules.  another problem is that  even if one starts with normal defaults  as in our example   one ends up with seminormal defaults when realizing priorities this way. but this means that one has to face the undesirable properties of non-normal defaults  such as non-existence of extensions. 
   in order to avoid the introduction of semi-normal defaults brewka  takes the ideas underlying prioritized circumscription   and defines an iterated version of default logic  which he calls prioritized default logic. as pointed out by brewka himself  this approach makes sense only if it is restricted to prerequisite-free normal defaults. in this restricted case  prioritized default logic yields a prioritized version of poole's approach to default reasoning  l1   and it seems to exhibit a quite reasonable behaviour. one reason why this is nevertheless not an appropriate formalism for treating specificity in terminological default theories is that the defaults have to be put into levels of priorities which are totally ordered. however  subsumption between prerequisites only gives us a partial ordering on defaults. 
   in  1; 1  prioritized prerequisite-free normal default theories are generalized to ordered default theories which allow for an arbitrary partial ordering on defaults. we shall describe this approach in more detail because- in combination with an approach for approximating defaults with prerequisites by prerequisite-free normal defaults-it yields a first solution to our problem of treating specificity in terminological default theories  even though we shall argue that it still exhibits some undesirable properties. in addition  the default theories with specificity we shall propose in the next section turn out to be a generalization of ordered default theories to defaults with prerequisites. 

	baader and hollunder 	1 

sequent of the default is added if 
consistent with the set of formulae obtained after step 1. otherwise  the current set of formulae remains unchanged. the limit of this process is the extension. 
　even though ordered default theories allow for priorities given by a partial ordering  this approach cannot directly be used to realize specificity in terminological default theories. the reason is that the restriction to prerequisite-free defaults is too severe. in fact  for terminological default theories the priorities we wanted to consider were induced by subsumption relationships between the concept descriptions in the prerequisites. but this means that for prerequisite-free terminological defaults we no longer have a need for prioritization. 
　the situation is  however  not as bad as it seems. as shown in  1; 1   the closed normal default can be approximated by the closed prerequisite-free normal default  thus one could start with a normal terminological default theory  determine the priorities between defaults from their prerequisites  and then transform the defaults into the corresponding ones without prerequisites. this way one ends up with an ordered default theory which approximates the terminological default theory  and which handles priorities induced by specificity of prerequisites in the terminological default theory. 
　however  we claim that this approach is still not satisfactory because it gives us a lot more than we bargained for. as pointed out in   the approximation not only gets rid of prerequisites  but also equips the defaults with properties of classical implication  such as reasoning by cases and reasoning using contrapositives of the original defaults. for example  assume that  in addition to the concept descriptions for penguins  birds  and flying ob-
jects  we have a description w for objects having wings  and that the only subsumption relation is the one between penguins and birds. if we consider the terminological default theory consisting of the world description 
{p danny } and the defaults 
then the preferred extension should be the one in which danny has wings  but does not fly. the approach we have described yields this extension; but it also yields another one in which danny does not have wings  because as soon as the  approximation of the  first default 
has fired  the contrapositive of the third one can be fired  
which gives us -w  danny  
　this shows that in this approach the defaults no longer behave like simple forward rules. but the similarity of default rules with the monotonic forward rules of terminological systems was one of our reasons for choosing default logic in the first place. 
1 	default theories with specificity 
to overcome the problems pointed out in the previous section we shall now propose a new approach for handling priorities among defaults with prerequisites. the semantics will be very close to reiter's semantics  and 
1 	knowledge representation 


	baader and hollunder 	1 

   a proof of soundness and completeness of this algorithm can be found in  l . the idea behind the sets ji is as follows. if the consequent of a minimal active default is not included in  then the reason must be that its justification is not consistent with the final extension. thus  if we exclude such a default from  we know that the negation of its justification must belong to the extension. the condition on  corresponds to the fact that defaults whose consequents are added to an s-extension must have justifications that are consistent with the extension. the condition on  can only ensure local correctness of our choices. for this reason we have to check the two conditions on  to ensure global correctness. 
   for terminological default theories  all the steps of the algorithm are effective  provided that the consistency and instantiation problem for the underlying terminological language is decidable  an assumption which is usually satisfied . in addition  since one has only finitely many closed defaults  the iteration will become stable after finitely many steps. 
1 	conclusion 
we have addressed the question of how to prefer more specific defaults over more general ones. this problem is of general interest for default reasoning  but is even more important in the terminological case where the emphasis lies on the hierarchical organization of concepts. of the existing approaches for handling priorities among defaults  brewka's ordered default theories turned out to come nearest to what is needed for solving the specificity problem in terminological default theories. but its restriction to prerequisite-free normal defaults seems to be too severe to make it an adequate solution in the terminological case. 
   therefore we have proposed a new approach  called default theories with specificity  for handling priorities among defaults with prerequisites. the properties we could prove for this formalism demonstrate that it is a quite reasonable extension of reiter's default logic and of brewka's ordered default theories. in addition it correctly handles examples for which the other approaches give unintuitive results. we have also described a method for generating the extensions of a default theory with specificity. this method is effective provided that the base logic is decidable  and one has only finitely many closed defaults. these restrictions are satisfied in the terminological case  which means that terminological default logic with specificity is decidable. 
   an interesting point for further research is to consider priorities on terminological defaults which not only take subsumption between prerequisites of defaults into account  but also the role relationships in aboxes. 
a c k n o w l e d g e m e n t s we should like to thank peter 
patel-schneider for interesting discussions on specificity of defaults  and bernhard nebel for helpful comments on a draft of this paper. 
1 	knowledge representation 
