
a major problem when developing neural networks for machine diagnostics situations is that no data or very little data is available for training on fault conditions. however  the domain expert often has a good idea of what to expect in terms of input and output parameter values. if the expert can express these relationships in the form of rules  this would provide a resource too valuable to ignore. fuzzy logic is used to handle the imprecision and vagueness of natural language and provides this additional advantage to a system. this paper investigates the development of a novel knowledge insertion algorithm that explores the benefits of prestructuring rbf neural networks by using prior fuzzy domain knowledge and previous training experiences. pre-structuring is accomplished by using fuzzy rules gained from a domain expert and using them to modify existing radial basis function  rbf  networks. the benefits and novel achievements of this work enable rbf neural networks to be trained without actual data but to rely on input to output mappings defined through expert knowledge.
1 introduction
radial basis function  rbf  neural networks are a form of local learning and are an efficient alternative to multi-layer perceptron  mlp  neural networks. in this paper we investigate how symbolic knowledge can be inserted into an rbf network  the advantage being to capitalize on those situations where no training data exists but an domain expert may be able to formulate if..then rules. figure 1 presents an overview of a much larger system that was developed  the work on rule extraction and knowledge transfer described elsewhere. it is the module related to the synthesis of rbf networks that is the focus of this paper.
　neural networks  like any other inductive learning algorithm such as decision trees and clustering techniques are data driven. without a sufficient supply of training data these algorithms cannot be used to produce a reliable model of the problem domain. in such cases  the usual solution to these problems range from duplicating data with additional noise

figure 1: overview of architectural transformations
added or to simulate the data. the extraction of knowledge in the form of rules has been successfully explored before on rbf networks using the hrex algorithm  mcgarry et al.  1 . this work inspired the authors to develop knowledge synthesis or knowledge insertion by manipulating the rbf network parameters but information flow/extraction was in the opposite direction.
　domain experts often express their knowledge in vague and imprecise linguistic terms. it is therefore a natural step to use the ability of fuzzy sets and fuzzy logic to model this imprecision. fuzzy sets and rules created by the knowledge elicitated from a domain expert are used to manipulate the parameters of selected rbf hidden units. knowledge synthesis is a technique to be used in those situations where data for training is unavailable but specific knowledge about the application is at hand. converting the fuzzy rules into rbf network format avoids the integration issue of assigning confidence factors when interpreting conflicting module outputs. therefore  the local representation characteristics of the rbf networks are used to integrate hidden units placed by data driven learning with artificially synthesized hidden units.
　the remainder of this paper is structured as follows: section two describes the radial basis function neural network  and the how certain functional equivalences to fuzzy systems are exploited. section three describes the work on knowledge synthesis for rbf networks for improved performance. section four outlines the details of the fuzzy system employed and how it integrates the domain rules with the rbf network. section five discusses the experimental results. section six provides a brief overview of the related work and finally section seven presents the conclusions and areas for future work.
1 radial basis function networks
radial basis function  rbf  neural networks are a model that has functional similarities found in many biological neurons. in biological nervous systems certain cells are responsive to a narrow range of input stimuli  for example in the ear there are cochlear stereocilla cells which are locally tuned to particular frequencies of sound  moody and darken  1 . the rbf network consists of a feedforward architecture with an input layer  a hidden layer of rbf  pattern  units and an output layer of linear units. the input layer simply transfers the input vector to the hidden units  which form a localized response to the input pattern. the activation levels of the output units provide an indication of the nearness of the input vector to the classes. learning is normally undertaken as a two-stage process.
　the radial basis functions in the hidden layer are implemented by kernel functions  which operate over a localized area of input space. the effective range of the kernels is determined by the values allocated to the centre and width of the radial basis function. the gaussian function has a response characteristic determined by equation 1.
!
 1 
where: μ = n-dimensional parameter vector  σ = width of
receptive field  and x = input vector.
　the response of the output units is calculated using equation 1.
xj
	wljzj x 	 1 
　　　　　　　　　　　　j=l where: w = weight matrix  z = hidden unit activations and
x = input vector.
　rbf networks are an appropriate choice for both classification tasks and function approximation. it is interesting to note that already jang  jang and sun  1  discovered certain functional similarities exist between rbf networks and fuzzy systems. jang identified five criteria that are necessary for the two techniques to become functionally equivalent.
1. the number of rbf units must be equal to the number of fuzzy rules.
1. the output of each fuzzy rule is a constant.
1. the membership functions within each rule are gaussians with the same widths.
1. the t-norm operator computes the firing strength of each rule through multiplication.
1. the rbf network and the fuzzy inference system both use either normalized or unnormalized output calculations.
　the main advantage of the functional equivalence relationship is the ability of using one model's learning rules for the other and vice-versa. other fuzzy-rbf researchers  hunt et al.  1; halgamuge  1  have extended jang's work to produce hybrid learning models. fuzzy models are generally robust when faced with noisy and missing data and are more comprehensible than a purely neural network approach  sun  1 .
1 knowledge synthesis
knowledge synthesis is a technique intended for those situations in which no actual training data is available but some form of domain knowledge is at hand. the experts knowledge is encoded as fuzzy sets and rules which are used to synthesize new hidden unit parameters for incorporation into a new or existing network. the fuzzy rules describe a set of output classes and the possible input values denoting their characteristics  based on the experts opinions . the objective of converting from fuzzy rules to rbf networks is to have the knowledge in a consistent format. it would be possible to have the domain knowledge in the form of a stand-alone fuzzy module  interacting with the rbf based system in some loosely or tightly coupled protocol. however  by converting the fuzzy rules into an rbf architecture they can be subjected to further analysis by rule extraction and it also avoids hybrid system integration issues.
　the rbf hidden layer parameters  spread and centre values  can be converted from fuzzy sets by the rule defined by  jang and sun  1 :
		 1 
　where:μa1 x1  is the fuzzy linguistic labels containing the domain knowledge  c is the centre of the receptive field i.e. the rbf function  σ1 is the rbf spread. modification of the rbf output layer parameters was accomplished by use of the pseudoinverse matrix xp  kubat  1 .
	w =  xtx  1xtc = xpc	 1 
　where: c is the classification matrix containing class labels  w is the hidden-to-output unit weight matrix  x is the matrix containing the converted information from fuzzy sets  gained from eqn 1 .
1 the problem domain
an industrial machine vibration data set was chosen because of the availability of several domain rules relating spectral data to fault conditions. this knowledge is available in text books  journals and rules taken from a large european collaborative project.
　a common problem encountered with many diagnostic applications is the lack of data for certain system conditions especially fault situations. the diagnosis data obtained for the experimental work described in this paper overcame such problems by using a mixture of simulated and test rig data. this data enabled an experiment to be conducted which assumed that data collected at low motor speeds was available but not at high speeds. at high motor speeds the values of several input features can be expected to change  increase or decrease  also the severity of the faults may appear different. however  by using vibration theory heuristics it was possible to predict how certain parameters and fault conditions would behave at higher speeds. the following method was used for the vibration data experiment:
1 methodology
1. the vibration data was divided into two groups  i. motor speed classed as low and ii. motor speed classed as high.
1. an rbf network was trained on the low speed data and the accuracy was examined with a separate low speed test data.
1. the rbf network was tested with the high speed data  i.e. the data it was not trained on  and the accuracy was noted.
1. the domain rules were converted into fuzzy sets and fuzzy rules.
1. the hrex algorithm was used to assign hidden units to the output classes.
1. for each of the three fault classes considered the hidden units assigned to them were duplicated and modified using the fuzzy inferencing system.
1. the modified rbf network had its hidden-to-output weights and biases recalculated.
1. the modified network was re-tested on the high speed data and the accuracy noted.
　the vibration data was divided into two sets based on the speed of the motor: low speed data consisting of examples with motor speeds of 1 rpm  rotations per minute  and high speed data containing data from motor speeds of 1 rpm. however  both sets of data still consisted of 1 input features and eight output classes. an rbf network was trained on the low speed data and its accuracy was observed on both low speed and high speed test data. the results are shown in figure 1.
　the rbf network trained on low speed data has an accuracy 1% on the low speed test set. unfortunately  the accuracy falls dramatically to 1% when introduced to the high speed data. this is a common phenomena that rbf neural networks can generate well to new patterns only if they stem from the same distribution of input patterns. if the task is very different they do not generalise well. the unreliability of such a classifier would prevent it from being deployed in any application running at high speed. therefore  a substantial increase in accuracy is required for knowledge synthesis to be of practical use.
	classification rate: 1%	classification rate: 1%

11111111111111111111111111111111
11111111111111111111111111111111original network accuracy on	original network accuracy on low speed data	 high speed data
figure 1: confusion matrix showing accuracy of the original rbf network. the numbers represent test cases and those lying on the diagonal have been classified accurately  while those off the diagonal have been misclassified. the accuracy of the rbf network trained on low speed data is 1%  but when introduced to test data with high speed characteristics  accuracy falls to 1%. high speed training data is not available  thus motivating the need to integrate some form of knowledge insertion.
　although the original rbf uses 1 input parameters only three parameters were used in the experimental work. this is because the majority of heuristic rules use only these  rpm1  rpm1 and rpm1  parameters because most faults can be identified by them. in addition  only three machine conditions were considered: unbalance  misalignment and looseness.
1 defining the fuzzy system
the knowledge for the fuzzy system was obtained from a domain expert and the available machine fault diagnosis literature. the fuzzy rules  sets and membership functions were manually developed through a process of trial and error.
1 defining the fuzzy sets
a number of criteria were under consideration for the construction of the fuzzy sets.
  type of membership function  gaussian  triangular etc .
  number of membership functions per set.
  number of rules to required to cover the intended input/output space.
  defuzzification method used.
　the type of membership function to be used proved not to be critical  as the set for the motor speed uses triangular but similar results were achieved for gaussian. as long as there is some overlap between the membership functions then the actual type of function does not appear to affect the results to any great extent  this is true for the vibration domain .
　the motor speed fuzzy set was used as an input to the inferencing system. triangular functions were used with the apex of the triangle at the mid-value of the set. the  slow  membership function is present only for completeness as it did not participate in the fuzzy inferencing process. figure 1 shows the membership functions for the fault severity. this set was used as an input to the system and the values for the membership were determined by the domain experts belief as how much a fault has to be present  percentage  to constitute a problem. in figure 1 the looseness fault can be seen as a major problem for the motor since only a small amount of looseness is required to be classed as a serious fault. looseness refers to the amount of physical movement experienced by the motor and usually indicates that the mounting bolts are not secure.

figure 1: fuzzy sets defining the fault severity
　figure 1 shows the membership functions for the rpm parameters. these fuzzy sets were used as outputs by the system and the values for the rpm parameters were calculated by the inferencing system. those values were then used to modify the centre positions of the new rbf hidden units. the membership values were mainly based on averages of both simulated and test-rig high speed data. the diagnostic system used rules based on testing the ratios of the rpm parameters as opposed to absolute values. some of these rules provided useful information that was incorporated into the fuzzy rules to determine the rpm parameter values.
1 defining the fuzzy rules
figure 1 shows 1 of the 1 rules for the three fault conditions: unbalance  misalignment and looseness. rule 1 was present to prevent the fuzzy system from making a decision when no fault conditions were present. each fuzzy rule consisted of an antecedent and consequent. the antecedent was
1
figure 1: fuzzy sets defining the parameter modifications
quite simple compared with the rules extracted from the rbf networks as there were only two input features i.e. the motor speed and fault severity. the consequent was more complex as it consisted of values assigned to the three output parameters.
　the structure of the rules were almost identical to the reasoning of the domain expert. in addition to comprehensibility there is also the added advantage of system maintainability. adding further fuzzy rules to cover extra conditions could be easily made but without the problems of  side-effects  that can be encountered in non-fuzzy systems i.e. adding extra rules may cause unanticipated logic errors. also the coding complexity in non-fuzzy systems can be greatly increased. this was avoided to a great extent with the fuzzy system because a lot of the knowledge was encoded into the fuzzy sets. therefore  if required the fuzzy sets could be recalibrated/altered to take advantage of new situations without recoding the rules.
1 fuzzy inferencing system
the inferencing method used is the mamdani method which is the most commonly used method for this type of fuzzy system  mamdani and baakini  1 . it enabled multiple fuzzy sets to be used as outputs  i.e. in the rule consequents . these fuzzy sets are eventually used to modify the rbf internal parameters  after defuzzification .
　the system operates by combining the consequents from each rule through the aggregation operator and returning a defuzzified fuzzy set to provide the system output. the fuzzy mamdani model is composed of rule sets of if..then type rules  mitra and hayashi  1 .
in order to identify which particular hidden rbf units to rule 1: if  mspeed is fast  and  unbalance is minor  then  rpm1 is vsmall  rpm1 is none  rpm1 is none 
rule 1: if  mspeed is fast  and  unbalance is substantial  then  rpm1 is small  rpm1 is vsmall  rpm1 is vsmall 
rule 1: if  mspeed is fast  and  unbalance is severe  then  rpm1 is subs  rpm1 is subs  rpm1 is subs 
rule 1: if  mspeed is vfast  and  unbalance is minor  then  rpm1 is vsubs  rpm1 is vsubs  rpm1 is vsubs 
rule 1: if  mspeed is vfast  and  unbalance is substantial  then  rpm1 is large  rpm1 is large  rpm1 is large 
rule 1: if  mspeed is vfast  and  unbalance is severe  then  rpm1 is vlarge  rpm1 is vlarge  rpm1 is vlarge 
rule 1: if  mspeed is fast  and  misalignment is minor  then  rpm1 is small  rpm1 is vsmall  rpm1 is none 
rule 1: if  mspeed is fast  and  misalignment is substantial  then  rpm1 is small  rpm1 is vsmall  rpm1 is vsmall 
rule 1: if  mspeed is fast  and  misalignment is severe  then  rpm1 is subs  rpm1 is subs  rpm1 is subs 
rule 1: if  mspeed is vfast  and  misalignment is minor  then  rpm1 is subs  rpm1 is subs  rpm1 is subs 

figure 1: fuzzy domain rules for machine vibration domain  where: looseness  misalignment  unbalance are the faults that can be encountered by the machines  minor  substantial severe  describe the extent of the fault  rpm1 rpm1 rpm1 are the parameters that indicate the presence or absence of the faults  none  small  vsmall  subs are the amount of change required to the parameters.
modify  the hrex algorithm was implemented  mcgarry et al.  1  and was run on the rbf network which produced a list of hidden units contributing to the identification of the three fault classes. table 1 details the hidden unit allocations for the classes.
　having identified the relevant hidden units  their associated centres  spreads and hidden-to-output unit weights were modified by the fuzzy inferencing system according to the values of the fuzzy sets.
1 analysis of knowledge synthesis results
the results are shown in figure 1. overall  an improvement of 1% was made with unbalance gaining 1 correct  misalignment gaining 1 and looseness gaining 1 correct classifications. the original rbf network had an overall tendency to misclassify most examples as  ok  but now the domain rules table 1: identification of hidden units with output classes
fault classhidden units responsive to fault class
unbalance1  1  1  1  1  1  1  1misalignment1  1  1looseness1  1  1  1  1enabled tighter bounds to be placed around the  ok  category. classification rate: 1% classification rate: 1%
1111111111111111111111111111111111111111111111111111111111111111original network accuracy on  high speed datamodified network accuracy on  high speed datafigure 1: confusion matrix showing accuracy of the original rbf network compared with synthesized rbf. the numbers represent test cases and those lying on the diagonal have been classified accurately  while those off the diagonal have been misclassified. the original network has an accuracy of 1% on the high speed data but when it is modified by inserting domain rules that are characteristic of the nature of high speed data  the accuracy goes up to 1%.
　the effects of the large number of shared hidden units  1%  within the network are still an open issue. theoretically  since each shared hidden unit is duplicated and modified for each class there should be no undue interference effects. however  with additional rules these results could be improved upon but obtaining such rules would be difficult as the inter-parameter relationships are complex.
　the existing rules cover a relatively simple input to output space mapping that was common to most machine behavior  generic  and was easy to produce from the knowledge acquisition process. it would be possible to conduct a statistical analysis of the high speed data for particular relationships and then to produce rules which could be used on different types of machines i.e. the analysis might have proved that certain relationships exist between low and high speed data on machine  x  and then to have applied these rules to machine  y . the difficulty of this approach is that of modelling the specific data too closely and not the underlying relationships  if they exist .
1 related work on knowledge synthesis
previous work involving assigning prior knowledge into locally responsive units used a bayesian framework which enabled the incorporation of an inductive bias  roscheisen et al.  1 . other approaches have considered the problem in terms of inserting symbolic rules into a rbf network  andrews and geva  1; tresp et al.  1 .
　in the past researchers have attempted to incorporate domain knowledge in the form of fuzzy rules within a neural network. jin and sendoff  jin and sendhoff  1  use fuzzy rules in the form of hints as described by abu-mostafa  abumostafa  1 . the  hint  is expressed as a fuzzy rule that describes qualitively the function to be learned and is used as a regularization term by the learning algorithm. narazaki describes the use of fuzzy rules to manipulate the classification boundaries of the hidden units in a mlp network  narazaki  1 . casalino developed a fuzzy basis function  fbf  network that has some similarity of operation with an rbf network  casalino et al.  1 . however  the main conclusion of casalino work was to identify that the fbf characteristics were closer to a competitive learning model than a feedforward. the work by kishore  kishore and rao  1  has the strongest similarities to the work presented in this paper. however  kishore defined fuzzy sets to represent the step-size of the learning rate for training rbf networks.
1 conclusions
knowledge synthesis i.e. the modification of existing rbf networks using heuristic rules has obvious benefits when used in certain situations. the use of knowledge synthesis only makes sense when the available data is insufficient to build a reliable classifier. in such a situation it is advantageous to use heuristic rules to modify an existing rbf network to detect infrequently encountered input vectors that would otherwise be misclassified. however  care must be taken when applying the domain rules. unless the domain rules can cover a large proportion of the synthesized input to output space it is likely that not all the necessary centre positions will be moved into appropriate locations. this effect will reduce the effectiveness of the new centres. fortunately  because of the local characteristics of the rbf network the existing centres will be relatively unaffected and should still be able to classify with the same accuracy before knowledge synthesis occurred.
