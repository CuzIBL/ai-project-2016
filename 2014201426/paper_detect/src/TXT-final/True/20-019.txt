 
for natural language understanding systems designed for domains including relatively complex equipment  it is not sufficient to use general knowledge about this equipment. we show problems which can be solved only if the system has access to a detailed equipment model. we discuss the structure of such models in some detail and  in particular  the mixed static/dynamic nature of the model. as an illustration  we describe parts of a simulation model for an air compressor. finally  we demonstrate how to find referents in this model for noun phrases. 
	i. 	introduction 
the work presented here is part of proteus*  prototype text understanding system   currently under development at the courant institute of mathematical sciences  new york university.** the objective of our research is to understand short natural language texts about equipment. our texts at present are casualty reports  casreps  which describe failures of equipment installed on 
navy ships. our initial domain is the starting air system for propulsion gas turbines. a typical casrep consists of several sentences  for example: 
unable to maintain lube oil pressure to sac  starting air compressor   disengaged immediately after alarm. metal particles in oil sample and strainer. 
     it is widely accepted among researchers that in order to create natural language understanding systems robust enough for practical application  it is necessary to provide them with a lot of common-sense and domain-specific knowledge. however  so far  there is no consensus as to what is the best way of choosing  organizing and using such knowledge. 
     the novelty of the approach presented here is that  besides general knowledge about equipment  we also use a 
    this research was supported in part by the defense advanced research projects agency under contract n1-k-1 from the office of naval research and the national science foundation under grant dcr-1. 
¡¡  this work is being done in collaboration with unisys defense systems  formerly the system development corp.  as part of the darpa strategic computing program. 
1 	natural language 
quite extensive simulation model for the specific piece of equipment which the texts deal with. we see the following merits of having a simulation model: 
  the model provides us with a reliable background against which we can check the correctness of the understanding process on several levels: finding referents of noun phrases  assigning; semantic cases to verbs  establishing causal relationships between individual sentences of the text 
  the requirements of simulation help us to decide what kind of knowledge about the equipment should be included in the model  how it could best be organized and which inferences it should be possible to make. it appears that the information needed for simulation largely coincides with that necessary for language un derstanding. 
  the ability to simulate the behavior of a piece of equipment provides a very nice verification method of the understanding process at the level of interaction with a user - a dynamic graphical interface provides the user with insight into the way his input has been understood by the system. 
     in the remainder of this paper we shall address three issues: why is a detailed equipment model needed  how should such a model be structured and  in particular  what balance should we strike between a static model and one created dynamically as the text requires  how should a noun phrase analyzer be organized to utilize such a model  and how is it affected by this static/dynamic balance  
	i i . 	need for a model 
in many natural language processing systems  the domain knowledge consists of general information about the objects and operations in the domain. in the equipment domain  this would include knowledge of the possible states and actions of equipment components  such as valves  pumps  and gears. it is clear  however  that such knowledge is not sufficient for a complete understanding of the casrep messages we are studying. 
     one feature of technical texts is the heavy use of nominal compounds. it seems that their average length is proportional to the complexity of the discourse domain. in the domain of the starting air system  examples like 
     
     stripped lube oil pump drive gear are by no means seldom occurrences. 
     the problem with nominal compounds is their ambiguity. the syntactic analysis is of almost no help here. even using semantic  selectional  constraints  as in  finin  
1   substantial ambiguity often remains. when we know that the nominal compounds refer to objects existing in the system  and have access to a model of the system. we can impose much tighter constraints  thus reducing the ambiguity. 
     the need for an equipment model is even more evident when we consider the analysis of a multi-sentence text such as 
starting air regulating valve failed. 
unable to consistently start nr lb turbine. 
 this is an excerpt from an actual casrep . in the starting air system  our initial domain  there are three different valves regulating starting air. two questions might be posed in connection with this short text:  1  which of the three valves wa.s meant in the first sentence   1  could the failure of the valve mentioned in the first sentence be the cause of the trouble reported in the second sentence  
     the general knowledge of equipment may tell us a lot about failures  such as: if a machinery element fails  then it is inoperative  or if an element is inoperative  then the element of which it is part is probably inoperative as well  etc. unfortunately  such knowledge is not enough: there is no way to answer these two questions  not only for an artificial understanding system  but even for us  humans  without access to rather detailed knowledge about how various elements of the given piece of equipment are interconnected and how they work as an ensemble. in our case we could hypothesize  using general knowledge about text structures  that there is a causal relationship between the facts stated in the two sentences. to test this  we would have to consider each of the three valves in turn and check how its inoperative state could affect the starting of the specific  i.e. nr lb  turbine. to perform these tests we would need a simulation model. if one of the three valves  when inoperative  would make the turbine starting unreliable  then we could claim that this valve is the proper referent for the starting air regulating valve mentioned in the first sentence. this finding would let us also answer question  1  affirmatively. 
     the above two considerations demonstrate that in cases where the domain is very specialized and complicated  a typical situation for real-life equipment   language understanding systems should be provided not only with general knowledge about the equipment but also have access to its model. 
	iii. 	proteus structure 
proteus consists of a syntactic analyzer  a semantic analyzer and a discourse analyzer. the semantic analyzer translates the regularized syntactic analysis into a predicate-argument structure. as part of the semantic analysis  the noun phrase analyzer  described below  identifies elements of the equipment model corresponding to the referents of noun phrases. the discourse analyzer  joskowicz et al.. 1    using the equipment model  identifies implicit causal and temporal relations in the message.  grishman et a/.  1  describes the overall organization of proteus. the system is implemented on symbolics lisp machines. 
	iv. 	simulation model 
a. 	structure of the simulation models 
the target domains for proteus are equipment units  eu : complex technical systems which accomplish physical tasks on demand. these tasks are carried out as serial and parallel combinations of simpler tasks  which are performed by constituent eus of the main equipment unit. often these simpler tasks can be decomposed further  leading to a hierarchy of tasks and eus. 
     the eus transmit their effects through various media  such as gases  liquids  mechanical movement  and electric current. these media travel from one eu to another through conduits appropriate to the different types of media. 
     proteus models have the structure of a set of transition networks. they consist of nodes connected by directed links. the nodes correspond to the constituent eus of the system; the links to the conduits connecting the eus. the hierarchical structure of the eus is reflected in the hierarchical structure of the networks. to represent the internal structure of an eu  we have the corresponding node point to another network in the model. 
associated with each link is a working-substance 
 ws . these wss correspond to the media entering and leaving an eu  for example  the rotary motion provided to a pump and the fluid entering and leaving the pump . we can think of the wss associated with links entering and leaving a node as the input and output data of the node. 
     associated with the nodes  links  and working substances are properties  recording the structure  function and  time-dependent  state of the system elements. 
     one design criterion for our models is that they make possible the qualitative simulation of the modeled eus  in most cases a precise quantitative simulation is not required for language understanding . the model includes timedependent values for the states of modeled components and functions which determine the state and outputs of the nodes. simulation is performed by an event-driven algorithm which is triggered by an external event  such as operator action or reported failure  and continues until a stable state is reached. 
     we have implemented the model by defining prototypes for the various types of components  valves  gearboxes  etc.  and then assembling a system as a collection of instances of these prototypes  implemented in flavors . information about each type of component is stored in the 
	kalazyk  qrisahman  and starling 	1 
     
prototype  so that only information specific to a particular component need be stored in the instance. for example  in the case of a gearbox  the information about its function  speed change  should be stored in the prototype  and only the ratio of this change should reside in the instance of a specific gearbox. the 'library'of prototypes should greatly simplify the creation of new equipment models within the system. 
b. 	level of detail 
how detailed a model should we construct  a first re sponse might be to include everything which potentially may be referred to in the reports. this  however  seems impractical. consider a typical sentence from one of the reports: 
investigation revealed a broken tooth on the hub ring gear. 
considering that there are several different gears in our starting air system and each of them has many teeth which are very much alike  it's obvious that creating a separate description for each of them wouldn't be reasonable. the same remark is true for balls bearings or for connecting elements like screws  bolts or pins. on the other hand  information about the tooth conveyed in the above sentence cannot go unnoticed. the solution we accepted for such elements is not to include their descriptions in the model on a permanent basis but to keep open the possibility to create and add them to the model if such a need arises during the analysis. a rule of thumb for deciding  whether a particular element deserves a permanent place in the model can be formulated as a question: how much information specific to this element is necessary to solve understanding problems  like finding referents or making inferences  
     if there is substantial specific information  the element is included as part of the permanent model. on the other hand  if all the needed information can be derived from the larger unit of which this element is a part  the gear of tooth on gear   and this larger unit is always mentioned in descriptions of the part  then the element can be added to the model dynamically when it is mentioned in a message. 
c. 	an example: the starting air system 
as our initial domain we have chosen the  starting air system  used for starting gas turbines on navy ships. the model consists of 1 networks with a total of about 1 nodes. one of these networks is shown in fig. 1. this figure is a symbolics screen image generated by proteus from the model networks. some parts of the display are dynamic: gears rotate  oil moves as visible particles  etc. this provides a direct visual presentation of the system's understanding of a message  oil may stop flowing or a gear rotating . the dynamic displays are achieved as a side effect of the simulation used for understanding purposes. 
1 	natural language 

figuie 1. the lube oil system 
	v. 	noun phrase analysis 
a. 	the role of noun phrase analysis 
the goal of the' noun phrase analyzer  npa  is to convert a noun phiase into a set of referents that may be used by subsequent stages of the system. to accomplish this it uses the equipment model two ways. fust  the model is used to confirm possible relations between noun phrase constituents  for example  that there is a gear which is an adjacent part to a pump  second  the model provides a set of referents for the phrase 
     the npa converts from the linguistic representation to one in terms of domain predicates. the interface between the npa and the model is called the model query processor  mqp . the mqp evaluates the domain predicates relative to the equipment model  and creates internal representations for eus when needed. major equipment units are part of the static model; others must be created dynamically. 
b. 	the analysis procedure 
the npa fetches a semantic class and various other features for each word in the noun phrase. constituents are combined bottom-up based on a set of rules stated in terms of these classes. these rules identify relationships of the form  pred arg-1 arg-1 ...  where pred is a predicate of the domain and the arg-i are constituents of the noun phrase. we have analyzed a corpus of 1 sentences and identified a set of 1 predicates for analyzing noun phrases: 
adjacent-to alarm couple drive lube made-of measure name operate-on part-of regulate start location 
     
     most current systems validate the application of these rules through such selectional checks  constraints on the argument classes of each predicate   finin  1  we perform such checks  then go a step further and check for the existence of the specific relation between specific entities. this is done through the mqp. the mqp is first invoked for each word to obtain its internal representation in the model  and then for each proposed predicate to verify the existence of the corresponding relation in the model. if the relation exists  the mqp returns the representation for the head constituent of the relation. 
     for post-nominal modifiers the predicate is strongly indicated by the preposition  and arguments  the head noun and the object of the preposition are explicit and delimited . pre-nominal modifiers are more difficult. the problem is to decide what predicates should be used and what are the arguments of these predicates. both the predicates as well as their arguments may be given explicitly or implicitly. examples are: temperature regulating valve  the predicate and both its arguments are explicit   drive gear  the predicate and one of its arguments are explicit  the other argument  the object of drive  is implicit   pump shaft  the predicate  part-of  is implicit  both of its arguments are explicit . the npa considers the semantic features of the items  together with order constraints  to match the items with arguments of some canonical predicate. a match is considered successful  if it is possible to identify some  not necessarily all  of the arguments of the ptedicate among the modifiers. for verification purposes  it is assumed that the empty arguments match anything. once a matching canonical predicate has been found and as many of their arguments matched with the modifiers as possible  the npa poses a verification query to the model. 
     in many cases the noun phrase does not determine a unique entity  so a set is returned. context and default information are used to resolve such references. this is handled by the reference resolution module  following  pahnei et ai  1 . 
c. 	model query processor 
we have observed the mixed static/dynamic characteristic of our representation. since the other modules are designed to be independent of the model representation  this distinction must be hidden by the mqp. we discuss here only queries posed by the npa  i.e. requests for the representation of a word  and predicate verification queries. 
     the main eus are recorded permanently in the equipment model. for words corresponding to these eus  the mqp contains pointers to all the nodes in the model to which the word may refer  for example  the entry for pump will point to all pumps in the model . however  two classes of eus are created dynamically by the mqp. the first class consists of components too small to justify including in the model  eg. connecting pin in pump drive assembly or tooth of hub gear.  the second class involves aggregates of el-
ements which are described in the text and treated as a unit but do not correspond to a single unit in the model hierarchy. there are several examples in our corpus  such as the coupling from diesel to sac lube oil pump. 
     the predicate verification queries must also distinguish between static and dynamically created eus. where all the arguments are statically modeled  the mqp need only check the model attribute corresponding to the predicate. when dynamically created  the mqp will generally have to modify theargument to reflect the constraint expressed by the predicate. for example  in verifying {partof clutch sac   where both clutch and sac are statically modeled  we check the part-of role of clutch: whereas  in verifying  part-of tooth gear   with tooth dynamically created  we fill the part-of role of tooth. 
	v i . 	future work 
in addition to noun phrase analysis  the equipment model is used heavily in discourse analysis - identifying implicit causal and temporal relations. we have developed a preliminary implementation of discourse analysis  joskowicz tt al.  1  but much work remains to be done  particularly regarding time dependencies. we also intend to develop tools for the more efficient acquisition of equipment models  and to study techniques for dealing with gaps in the domain model. 
     the initial motivation for proteus was text understanding for subsequent querying  summarization  and trend analysis. our use of a detailed equipment model similar to that employed in simulation systems  eg. steamer hollan et al  1   and diagnostic systems suggests that proteus is also useful as an interface to such systems. 
