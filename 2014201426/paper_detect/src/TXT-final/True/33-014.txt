 
　　　in this communication  we discuss an interesting aspect of natural language interaction with 
dynamically changing knowledge bases - the a b i l i t y to monitor for relevant future changes in that knowledge. we also indicate the status of our current work in this area and the overall goals of our research on question-answering and monitoring dynamic knowledge bases. 
	1. 	introduction 
　　　the overall goal of this research is support for natural language interactions with a dynamically changing knowledge base.* one significant aspect of this environment is the added dimension along which a system can respond: that i s   it can take the i n i t i a t i v e and attempt to provide additional information presumed relevant to the user. in particular  the system can offer to inform the user of any information it may learn in the future  that is relevant to the user's query. for example   s: system  u: user  
u: 	did a t & t common stock go up today  
s: 	yes. 	shall i let you know if it keeps rising  or 
s: 	no. 	but shall i let you know if it starts a comeback  
in order to take such i n i t i a t i v e s the system must be competent enough to monitor only for conditions which might possibly occur. of course  this monitoring behavior must also be relevant to the user's intentions. the major issues that must be addressed 
here are as follows: 
　　　1. identifying those properties of actions  events  and processes that influence what monitoring behavior is appropriate  e.g. what aspects of 
+ 	- 
this work is partially supported by a grant from the national science foundation  mcs 1. 
 for some work on cooperative responses in static knowledge bases  see   1       1     and   1   . some issues concerning updatability are discussed in . for some work on temporal aspects of knowledge bases  see   l       1       1     and   l 1   . 
the world may change and hence  what updates to the knowledge base are expected or possible  how those aspects of the world may change and hence  
what constraints exist on updates  etc. the latter are also necessary for maintaining the consistency of the knowledge base as updates occur. given that the event1  processes and actions that the knowledge base reflects may not  or perhaps should not  be modelled as independent  knowing exactly what needs to be monitored w i l l involve addressing the frame problem as well   1   . 
　　　1. developing an adequate knowledge representation capable of representing such properties.  since our primary concern is appropriate monitoring behavior  a f u l l representation of actions  events and processes may not be necessary . 
　　　1. developing a language for expressing monitors. 
　　　1. identifying natural language cues to the kinds of additional information a user would find relevant**. 
　　　1. designing and implementing a system which exhibits appropriate monitoring behaviors. 
　　　we have begun research in these five areas  and the brief examples which follow illustrate not only our current status but also the larger goals of the research on question-answering and monitoring over dynamic knowledge bases. 
	1. 	example 
　　　for the purpose of i l l u s t r a t i o n   we assume an entity-relationship type of model   1     as i l l u s trated in figure 1. entity sets are shown in rectangles  relationships set in diamonds with arrows from participating entity sets  and attributes 
　complete knowledge of the user's intentions would clearly help to frame appropriate monitoring behavior. however achieving this unambiguously is a formidable if not impossible problem. on the other hand  it is possible for the system to presume a certain intent and then exhibit the corresponding monitoring behavior. what is necessary here is that the system inform the user of i t s presumptions so that s/he had the opportunity to correct them. 
1 

with dotted links to the entity sets. so  for example  this particular schema shows that some users may run some programs  some have a name and a password  some users register for some courses  etc. the crucial aspect is that the possible changes in the world represented in this database   i . e .   i t s updatability  can be encoded in the schema. updatability here corresponds to the a b i l i t y to update instances of an entity set  relationship set or attribute. 
　　　one method of encoding updatability information is by means of the form  square brackets i n dicate choice and angle brackets  variables . 
	 updatability 	 entity  	 add  no-add   delete  
no-delete   
	 updatability 	 relationship   add  no-add  
 delete  no-delete   
	 updatability 	 attribute   update  no-update   
　　　these assertions basically state whether or not additions and deletions can be made to a set and whether or not the value of an attribute may be updated. 	the following updatability assertions might be made for the schema shown in figure 1. 

　　　however  such assertions are insufficient since updatability may i t s e l f change over time. for example  at many universities  a student's a b i l i t y to change his/her registration status depends on whether it is registration period  break  drop-add period  etc. thus the updatability of the registration relationship set is better represented 

now consider the following question and the various periods during which it may be posed: 

 during break  drop  or after drop  no-add  
..  
	s: 	 no . 
contrast that behavior with 
	u; 	 is john s t i l l registered for cse1   
 during registration or drop  delete ...  
　　　s:  yes  but i ' l l let you know when he i s n ' t .   
　　　 during pre-registration  break or after drop  no delete ...  
	s: 	 yes.  
　　　the rule in operation here is to set up a monitor when a situation expected by the user might possibly occur. while the rule is clearly oversimple  it does lead to the relevant behavior. a crucial assumption here is that the length of interaction is short enough that updatability w i l l not i t s e l f change during the interaction. although this is adequate for displaying such behaviors during short interactions  say a terminal session of a few hours  it is clearly not the case for those job functions that span the entire l i f e of the knowledge base. the determination of the interaction length is therefore c r i t i c a l in the inference of appropriate monitors. 
　　　in addition to i l l u s t r a t i n g how outside properties shape appropriate monitoring behavior  the previous examples i l l u s t r a t e two syntactic forms   i s / s t i l l   has/yet  that suggest the user's interests and hence what monitor might be relevant. that i s    yet  conveys that an event is expected to occur and   s t i l l     that a state is expected to continue holding. appropriate monitoring behavior then in the f i r s t case involves an offer to announce the event  or such an event  when it occurs  e.g.  but i ' l l t e l l you when he does    and in the second case  an offer to announce when that state no longer holds  e.g.    i ' l l let you know when he i s n ' t     . in the absence of such cues as  yet  and   s t i l l     the system might query the user about the possibility of setting a monitor. however  to allow maximum f l e x i b i l i t y   we include an extra slot in the updatability assertion indicating whether a monitor should be set  not set  or a question posed to the user. 
	1. 	summary 
　　　natural language interactions with dynamically changing knowledge bases  invite types of cooperative behavior beyond those needed for interacting with static knowledge bases. we have briefly indicated the status of our work in this 

1 

area and our larger goals for the research on monitoring aspects of dynamic knowledge bases. 

