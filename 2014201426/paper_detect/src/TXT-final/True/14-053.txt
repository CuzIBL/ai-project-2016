 
　　we describe a scheme for developing expert interpretive systems and transferring them to a microprocessor environment the scheme has been successfully implemented and tested by producing a program for interpreting results from a widely used medical laboratory instrument a scanning densitometer specialists in the field of serum protein electrophoresis analysis provided the knowledge needed to build an interpretive model using expert  a general production rule system for developing consultation models by constraining a few of the structures used in the general model it was possible to develop procedures for automatically translating the model to a specialized application program and then to a microprocessor assembly language program thus  the model development can take place on a large machine  using established techniques for capturing and conveniently updating expert knowledge structures  while the final interpretive program can be targeted to a microprocessor depending on the application our experience in carrying out the complete process illustrates many of the requirements involved in taking an expert system from its early development phase to actual implementation and use in a 
　　real world application 
i introduction 
　　most knowledge-based medical consultation systems developed during the 1s were relatively large-scale experimental prototypes   1   1  1  their advice on diagnostic and treatment problems typically involved approximate reasoning over a space of many interrelated hypotheses  characteristically supported by hundreds of observations linked to them by various types of reasoning rules by adopting symbolic reasoning methods with more powerful representations than the traditional mathematical decision-making schemes  these knowledge-based systems produced results that were generally easier to analyze  explain and update than those from more conventional systems human engineering features were often stressed as an important means of enhancing the interaction with the expert systems successful clinical experience with many of these systems has been reported in pilot demonstration projects  yet none is in routine clinical use at present both technical and social factors contribute to the difficulties of introducing expert systems into the every day practice of medicine one often cited technical factor is the slow rate of manual data entry required by most of the larger systems this problem is minimized for applications where most of the data can be read directly off a clinical instrument  and only few items need be entered manually the commercial availability and use of automated 
electrocardiogram interpretation programs  using traditional algorithmic techniques  supports this point regardless of the methods used in constructing a knowledge base  or its complexity  instrument-derived interpretations are more likely to be accepted because they can be seen as extensions of the instrument and since many advanced medical instruments are already microprocessor controlled. it may be possible to add an interpretive module that enhances the performance of such a device at relatively little extra cost 
　　in this paper we briefly describe how we were able to accelerate the development of interpretive software for a widely used laboratory instrument  the scanning densitometer we did this by automatically producing a 
　　computer translation of an expert model for serum protein electrophoresis interpretation  developed on a mainframe computer  into a microprocessor assembly language version the translation methods have been generalized so that this process can be repeated for expert  models in any domain  with a few restrictions on the types of knowledge structures used 
　　by taking this approach  we have demonstrated that knowledge engineering methods from expert systems can be used to full advantage in producing an effective model  which can then be transferred with ease to a 
microcomputer 
ii methods 
　　several general purpose schemes for building consultation systems have evolved from work on the earlier more specific domain-dependent systems two such schemes that were originally designed for representing medical consultation problems in particular are the expert and emycin  systems both provide built-in control mechanisms operating over specific types of productionrule models the consultation program of expert is primarily event-driven  while that of emycin is predominantly goal directed 
　　the expert system has been used in building a number of expert medical consultation models  mainly in ophthalmology  rheumatology  and endocrinology  and pilot prototypes in several non-medical areas  spectroscopy interpretation  car repair  hazardous spill management  and oil well-log interpretation  
　　the process of model design and transfer that we used in developing the microprocessor based expert model for serum protein electrophoresis interpretation involved the following tasks 
  specification 	of 	the 	knowledge 	base 	using expert. 
1 
  empirical testing with several hundred cases; 
  refinement 	of 	the 	knowledge 	base 	by 	the expert 
  further cycle of testing with additional cases  and review by independent experts; 
  test of the final model on the large machine; 
  automatic translation of the expert model to a specialized program and a microprocessor assembly language program. 
* interfacing of 	assembly 	language model with instrument 
this last step requires detailed knowledge of the instrument in this application the manufacturer interfaced the interpretive program to the existing program for printing instrument readings. 
　　figure 1 illustrates the types of conclusions reached by the interpretive system  and the type of rule used in reasoning the most significant restriction on the type of production rules used in the model was to limit the use of confidence measures to 1 values representing confirmation  denial  or unknown status in applications of this type  it should be noted that the strategy of questioning is not a significant task because most of the information will be obtained directly from the instrument in building the expert model we simulated this situation by entering the values of certain key features of the instrument signal  figure 1   that are currently given as a digital output by the instrument these features include peaks of the waveform and areas under certain segments of the waveform a few items  patient identification  age. and some waveform features that are more easily scanned by the technician  are entered manually 
　　the serum protein electrophoresis model required several stages of refinement over a period of six months  with the aid of one principal expert and comments and suggestions from the independent experts we began with a relatively small and simple model  having 1 conclusions and a production rule for each after the first cycle of revision we had about 1 conclusions and 1 rules which included many for handling interactions among the hypotheses the current model has 1 conclusions and 1 production rules its performance on 1 test cases covering the full spectrum of conclusions is 1% acceptable to our experts they expect differences of opinion on the amount of detail included in the present set of conclusions  but feel that covering infrequently found problems would detract from a model that is to be disseminated widely. an option for allowing users to add a written record of their own opinions on such unusual cases has been provided in the final microprocessor implementation 
iii conclusions 
　　the completed microprocessor version of the interpretative serum protein electrophoresis model may not look much different than if it had been hand coded directly in the assembly language of the microprocessor  or translated from an algorithmic language there is. nevertheless  a fundamental difference with our system. we can rapidly produce new versions of the microprocessor program from our high level expert model in response to any changes suggested by the experts or resulting from future empirical analysis and clinical tests in the field in contrast  considerable effort would usually be required to recode directly on a microprocessor besides  the original expert derived model is also very different than one produced by more traditional methods our conclusions and intermediate hypotheses were developed in such a way that they include not only diagnostic considerations but also prognostic  treatment  and future test selection decisions for motivating their use the large amount of experimentation that took place with the model as it went through its cycles of testing and modification could only be carried out on a larger system  with adequate facilities for analyzing many cases  and knowledge engineering tools for changing the model a recently published version of an interpretive model in this domain developed with very traditional programming techniques  shows a contrasting sparsity in diagnostic statements  in addition  the conclusions of this model appear to be overly specific given the nature of the supporting data thus  while programs of this type may be initially simple to implement  they do not incorporate the elements of expert reasoning that are essential to a clinically helpful program 
　　in conclusion  the work reported here is a novel illustration of the requirements needed in taking an expert system from an early developmental phase to actual implementation and use in the real world such applications can lead to the increasing acceptance of expert systems in medicine and other domains where similar problems can be found 
acknowledgments 
　　this work was supported in part by grant rr1 of the nih drr-brp technical assistance was provided by 
helena laboratories  beaumont  texas 
