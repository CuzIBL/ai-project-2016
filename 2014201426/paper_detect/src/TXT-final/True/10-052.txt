 
       teiresias is a program designed to function as an assistant in the task of building large  knowledge-based systems. it embodies a particular model of interactive transfer of knowledge from a human expert to the system  and makes possible knowledge transfer in a high level dialog conducted in a restricted subset of natural language. this paper explores an example of teiresias in operation  and demonstrates how it guides the acquisition of new inference rules. the concept of meta-level knowledge is described  and an illustration given of its utility and contribution to the creation of intelligent programs. 
this work was supported in part by the bureau of health sciences research and evaluation of hew under grant hs-1 and by the advanced research projects agency under arpa order 1. it was carried out on the sumex computer system  supported by the nih under grant rr-1. the views expressed are solely  hose of the author. 
 1  introduction 
       the knowledge base for a high performance  domain-specific program  e.g.  dendral   macsymaflo   is traditionally assembled by hand  an ongoing task that typically involves numerous man-years of effort. a key element in the construction process is the transfer of expertise from a human expert to the program. since the domain expert often knows nothing about programming  the interaction between the expert and the performance program usually requires the mediation of a human programmer. 
       we have chosen this transfer of expertise task as a case study  and have sought to create a program that could supply much the same sort of assistance as that provided by the programmer. that is  we have attempted to create an assistant that will help build intelligent programs. the result is a system called teiresias  1-1 a large interlisp program designed to offer assistance in the interactive transfer of knowledge from a human expert to the knowledge base of a high performance program. 
       work on teiresias has two goals. we have attempted first to develop a set of tools and empirical methods for knowledge base construction and maintenance  and sought to abstract from them a methodology applicable to a range of systems. the second  more general goal has been the development of an assistant capable of offering increasingly more sophisticated aid. this involves confronting many of the traditional problems of al  and has resulted in the exploration of a number of solutions reviewed below. 
       this paper describes a number of the key ideas in the development of teiresias and discusses their implementation in the context of a specific task  acquisition of new inlerence rules1   for a 
       specific system  a rule-based computer consultant system modelled after the mycin system  1}.  while the discussion deals with one particular task  system and knowledge representation  it should become clear that the main ideas are applicable to a number of more general issues. 
 1 meta-level knowledge 
a central theme that runs through this and related papers 
  1-1   is the concept of meta-level knowledge. this takes several different forms as its use is explored  but can be summed up generally by saying that a program can  know what it knows . that is  a program can not only use its knowledge directly  but may also be able to examine it  abstract it  reason about it  and direct its application. 
       to see in general terms how this might be accomplished  recall that one of the principal problems of al is the question of representation and use of knowledge about the world  for which numerous techniques have been developed. one way to view what we have done is to imagine turning this in on itself  and using some of these same techniques to describe the program itself. 
       the resulting system contains both object level representations describing the external world  and meta-level representations which describe the internal world of representations. as the discussion of  rule models  in section  will make clear  such a system has a number of interesting capabilities. 
 1} perspective on knowledge acquisition 
¡¡¡¡¡¡one of the aims of creating teiresias was to provide a vehicle for developing a particular approach to knowledge acquisition. we describe that approach here; section {1} contains some comments on its likely range of applicability. 
       we view the interaction between the domain expert and the performance program in terms of a teacher who continually challenges a student with new problems to solve  and carefully observes the student's performance. the teacher may interrupt to request a justification of some particular step the student has taken in solving the problem  or may challenge the final result. this may uncover a fault in the student's knowledge of the subject  and result in the transfer of information to correct it. 
       there is an important assumption involved in the attempt to establish this sort of communication: we are assuming that it is possible to distinguish between basic formalism and degree of expertise  or equivalently  that control structure and representation in the performance program can be considered separately from the content of its knowledge base. the basic control structure s  and representations are assumed to be established and debugged  and the fundamental approach to the problem assumed acceptable. the question of how knowledge is to be encoded and used is settled by the selection of one or more of the available representations and control structures. the expert's task is to enlarge what it is the program knows. 
       there is a corollary assumption  too  in the belief that the control structures and knowledge representations can be made sufficiently comprehensible to the expert  at the conceptual level  that he can  a  understand the system's behavior in those terms and  b  use them to codify his own knowledge. this insures that the expert understands system performance well enough to know what to correct  and can then express the required knowledge  i.e.  he can  think  in those terms. thus part of the task of establishing the link between the expert and the system involves insulating the expert from the details of implementation  by establishing a discourse at a level high enough that we do not end up effectively having to teach him how to program. 
 1  design of the performance program 
{1} program architecture 
       figure 1 shows a picture of the sort of performance program that teiresias is designed to help construct.  the program described here is modelled after the mycin system  which provided the context within which teiresias was developed. we have abstracted out here just the essential elements of mycin's design.  the knowledge base is the program's store of task specific knowledge that makes possible high performance. the inference engine is an interpreter that uses the knowledge base to solve the problem at hand. 

inference engine knowledge base figure 1 - architecture of the performance program 
       the main point of interest in this very simple design is the explicit division between these two parts of the program. this design is in keeping with the assumption noted above that the expert's task would be to augment the knowledge base of a program whose control structure  inference engine  was assumed both appropriate and debugged  if all of the control structure information has been kept in the inference engine  then we can engage the domain expert in a discussion of the knowledge base and be assured that the discussion will have to deal only with issues of domain specific expertise  rather than with questions of programming and control structures . the explicit division also offers a degree of domain independence. if ail of the task specific knowledge has been kept in the knowledge base  then it should be 

knowledge acq.-1: davis 1 

possible to remove the current knowledge base   plug in  another  
and obtain a performance program for a new task.1 
       in this discussion we assume the knowledge base contains information about selecting an investment in the stock market; the performance program thus functions as an investment consultant.  mycin  of course  deals with infectious disease diagnosis and therapy selection  and the rules and dialog shown below dealt with that subject initially. the topic has been changed to keep the discussion phrased in terms familiar to a wide range of readers  and to emphasize that neither the problems attacked nor the solutions suggested are restricted to a particular domain of application. the dialog shown is a real example of teiresias in action that has been transferred to the new domain by substituting a few words in a medical example: e.g  ecoli became at&t  infection became investment  etc.  
       an example of the program in action is shown in section {1}. the program interviews the user  requesting various pieces of information that are relevant to selecting the most appropriate investment  then prints its recommendations. in the remainder of this paper the  user  will be an expert running the program in order to challenge it  offering it a difficult case  and observing and correcting its performance. 
{1} the knowledge base 
    knowledge in the knowledge base is in the form of a collection of decision rules of the sort shown in figure 1.  the rule is stored internally in the interusp form shown; the english version is generated from that.  each rule is a single  chunk  of domain specific information indicating an action  in this case a 
 conclusion  which is justified if the conditions specified in the premise are fulfilled  
rule1 
if  the time scale of the investment 1s long-term  
 the desired return on the investment 1s greater than 1%  and 
 the area of the investment 1s not known  and then at&t 1s a likely  .1  choice for the investment. 
premise 	 sand  same objct timescale long-term  
greater objct returnrate 1  
                    notknown objct investment-area   action  conclude objct stock-name at&t .1  
figure 1 - example of a rule 
       the rules are judgmental  i.e.  they make inexact inferences. in the case of the rule in figure 1  for instance  the evidence cited in the premise is enough to assert the conclusion shown with only a weak degree of confidence  .1 out of 1 . these numbers embody a model of confirmation described in detail in . 
       finally  a few points of terminology. the premise is a boolean combination of one or more clauses  each of which is constructed from a predicate function with an associative triple  attribute  object  value  as its argument. for the first clause in figure 1  for 
example  the predicate function is same  and the triple is  timescale of investment is long-term.   the identifier objct is used  rather than the name of a specific object  for reasons dealing with implementation conventions; see  for details.  
{1} the inference engine 
       the rules are invoked in a simple backward-chaining fashion that produces an exhaustive depth-first search of an and/or goal tree. assume that the program is attempting to determine which stock would make a good investment. it retrieves all the rules which make a conclusion about that topic  i.e.  they mention stock-name in their action   and invokes each one in turn  evaluating each premise to see if the conditions specified have been met. for the rule in figure 1  this means first determining what the timescale of the investment ought to be. this is in turn set up as a subgoal  and the process recurs. 
       the search is thus depth-first  because each premise condition is thoroughly explored in turn ; the tree that is sprouted is an and/or goal tree  because rules may have or conditions in their premise ; and the search is exhaustive  because the rules are inexact  so that even if one succeeds  it was deemed to be a wisely conservative strategy to continue to collect all evidence about the subgoal.  
 1} a word about natural language 
       natural language has not been a major focus of this work  and for the most part the simplest techniques have been used that would support the level of performance required. for instance  all questions and responses from teiresias are either pre-formed  or manufactured by filling in templates with appropriate words  as evidenced by the occasional appearance of phrases like  a area  . where answers are free text  rather than multiple choice   the system relies primarily on a simple keyword-oriented approach  described below. there is no parser in the system  in part to minimize processing time  and in part because users often give ungrammatical responses. 
 1  example of teiresias in operation 
       in the interaction shown below  the expert is challenging the investment advisory program with a particular case  observing the program's performance  and then making the necessary correction to the knowledge base. the bug encountered here was created by deleting an existing rule from the knowledge base and removing all references to it. the expert then repairs the bug by tracking down the source of the problem and teaching the system the  new  rule. 
       the deleted rule was chosen to make possible an acquisition example that displays a large number of telreslas's capabilities in a single example. dialogues are thus typically not as long as this 
one. 
       in the trace below  computer output is in mixed upper and lower case 1n this font  user responses follow a double asterisk and are in bold capitals  and commentary appears {inside braces}. the example is also divided into five phases for later reference. 
****************************************** ****** ****** 
investment advisory program 

 {most of the consultation with the performance program has been edited out for brevity. the interaction continues with the program printing out its conclusions.} 
the following investments appear to be the most appropriate at this time: 
varian-corporatlon 
american-telephone-and-telegraph 
 {at this point teiresias steps in  and since the interaction is with an expert  rather than an ordinary user   it requests an evaluation 
of the performance program's results. 
from here on the dialog takes place between teiresias and the expert  with the performance program in the background being manipulated by teiresias.} 

 {the first option allows the expert to use the explanation facilities described in  to track down the problem. in the second  teiresias uses a simple algorithmic search for the error. the third is for human engineering purposes  and allows the expert to sidestep this whole process if desired.} 

knowledge acq  - 1 : 	davis 1 

we'll 	s t a r t with the at&t f i r s t . 
 {heuristics derived from our experience in debugging rule-based systems are built into teiresias. one such heuristic suggests that the best approach is to  1  track down one problem at a time  and  1  start with a result that shouldn't have appeared  if there is one . experience indicates that this class of bug is often a manifestation of a deeper bug causing several problems  so curing it will often solve several problems at once.} 
the f o l l o w i n g rules were used 1n deducing that the investment should be at&t: rule1 
since  1  the area of the investment is not known  
 1j the desired return on the investment 1s greater than 1%  and 
 1  the time scale of the investment 1s long-term  
then at&t 1s a likely  .1  choice for the investment. 
is this rule correct  
    * * y 
should i t s premise have f a i l e d for this case  
++** y 
which clause of the premise should have been false  
++** 1 
¡¡{the expert indicates that this rule should have failed  so the debugging continues by looking further back in the chain. had he indicated that rule1 had been invoked properly  then teiresias would have indicated that the problem was probably a missing rule which tended to rule out at&t.} 
no conclusions were reached concerning investment area should it have been possible to conclude a area  
++** y 
{the error might have been a failure to rule out an investment 
area.} 
which one  
++** high technology 
there were no rules successfully invoked in the attempl to deduce that the area of the investment should be high-technology. 
the f o l l o w i n g   p o t e n t i a l l y applicable  rules were not executed because the starred  **  clause f a i l e d : 
 {at this point teiresias displays rules 1 and 1  omitted here   which would have made the desired conclusion  but were not invoked because one of their premise clauses failed.} 
are a l l 	these rules correct  
++** y 
should any of them have been successfully invoked  
++** n 
 {this would have been the case if one of the premise clauses that failed was false because it was  stepped on  by yet another rule further back in the chain.} 
is there a r u l e missing  
++** y 
ok  then i need a rule that would allow me to deduce that the area of the investment should be high-technology. 
would you like to give me such a rule now  
++** y good... 
 {to review briefly: the expert is tracking down the reason why the system incorrectly concluded that the stock to invest in was at&t. shown below is the sequence of rules involved: 
= rule1 ==  	i 
j-  area 
= = rule1 **  	i 	return 	= = = rule1 = = =   at&t 
time scale 
       at&t appeared because rule1 executed successfully; this occurred in part because investment area was unknown. investment area was unknown because all rules to conclude it  1 and 1  failed. 
       the expert believes all existing rules are correct  so the knowledge base must be missing a rule that will conclude about investment area  in particular  that the area should be high-technology. such a rule will cause area to be known  inhibiting rule 1  fixing at least this first problem. 
       note how sharply focussed the issue has become  for both the expert and teiresias  as a result of the large amount of 
contextual information available. the expert is not being asked to  discuss the stock market ; instead the system can at this point say  i need a rule that would allow me to deduce that the area of the investment should be high-technology   and it must be a rule which is invokable in the current situation. 
       the contextual information is useful for teiresias as well. the information provides a number of expectations about the content of the rule which are used both in understanding what the expert types in  and in checking the new rule to make sure that it does indeed solve the problem at hand. details of this process are explained below. 
the trace continues with the expert typing in the rule.} 
********** 
{phase i i : 	interpreting the rule} 
********** 
the new r u l e w i l l be called rule1 
i f : 1 - the client's income tax bracket is 1. and 1 - the client is following up on market trends carefully and 1 -then : 1 - there is evidence  .1  that the investment area should be high technology and 1 -this may take a few moments... 
{generally on the order of 1 to 1 seconds of cpu time.} 
this 1s my understanding of your rule: 
rule1 
	if 	1  the c l i e n t ' s income-tax bracket is 1%  
1  the market has followed a upward trend recently  
1  the c l i e n t manages his assets carefully 
	then 	there 1s evidence  .1  that the area of the 
investment should be nigh-technology 
 {telresias's initial interpretation is not entirely correct  and the example was chosen in part for this reason . the first line of text and the conclusion have been interpreted correctly  but the second line has been turned into two clauses  numbers 1 and 1  in the system's initial attempt at understanding.  the expert occasionally types what should be two separate clauses as one line of text. the system is capable of handling this  but this same capability at times produces spurious clauses like *1 . 
       this results primarily from the system's simple word-by-word approach to meaning. while the result is in part incorrect  we'll see that the interpretations are both  reasonable  and  consistent  in light of the techniques used.  
********** 
{phase i i i : modifying the interpretation} 
********** 
okay   yes or no  
++** n 
 {the expert indicates there is a problem with the interpretation  and uses telresias's rule editor to specify the changes needed.} 
change premise  
++** y 
what clause should be changed 1n premise  
++** change 1 
suppose  1  were changed to read-
¡¡¡¡¡¡¡¡¡¡1 - the c l i e n t follows the market carefully would that be ok  
++** y 
¡¡{several simple heuristics are invoked to select the next most likely interpretation  based on the english source of this clause and the set of interpretations already rejected. in this case the second choice is correct.} 
then you'll probably want to delete: 
         1  the c l i e n t manages his assets carefully correct  
  + * * y 
¡¡{teiresias enforces certain consistency constraints on its interpretation of the english text. one of these constraints indicates that if the new interpretation of clause #1 is correct  then clause *1 must have arisen spuriously  since  among other things  it requires a different interpretation for the word  carefully**;.} 
anything else  
+   * *   
     1 - the c l i e n t ' s income-tax bracket 1s 1% and 1 - the c l i e n t follows the market carefully 
 and 1 -  deleted  anything else  
+¡ö  ** n 
change action  
++** n 
k n o w l e r u e 	a c q     1 : 	h a v l s 1 this 1s my understanding of your r u l e : 
rule1 
	i f : 	1  the c l i e n t ' s income-tax bracket 1s 1%  and 
1  the c l i e n t follows the market carefully  
then: 	there 1s evidence  .1  that the area of the investment should be high-technology. 
okay   yes or no  
+   * * y 
 {this is the standard test of comprehension: the original english text has been turned into a rule coded in lisp  and is then retranslated back into english for approval. compare the results with the expert's original input. now that the expert is satisfied that the system understands the rule as he entered it  the system checks several things about the rule to see if it. is satisfied.} 
********** {phase iv:  second guessing   
********** 
i hate to c r i t i c i z e   randy  but did you know that most r u l e s about what the area of a investment might be  that mentlon-
the income-tax bracket of the c l i e n t   and how c l o s e l y the c l i e n t follows the market 
also mentlon-
 a  the amount of investment experience of the c l i e n t shall i t r y to w r i t e a clause to account for  a    
+   * * y 
 {the mechanism that makes possible this sort of  second guessing  by the system is explained in detail below. briefly  the system maintains a model of its own knowledge. in checking to see how this new piece of information  fits in  to that model  it discovers that its expectations have been only partially met. it indicates to the expert what expectations were left unfulfilled  and asks if it should attempt to fill in the missing parts.} 
how about-
a  the amount of investment experience of the c l i e n t 
¡¡¡¡¡¡1s moderate ok  
    * * y 
¡¡ the expert agreed to the inclusion of the new clause and teiresias is able to construct a plausible guess by relying on the fact that it must be possible to invoke the new rule in the current situation  in order to fix the known bug . details of this process are explained below.} 
also  most rules about what the area of an investment might be also conclude about-
 aj the desired r i s k c l a s s i f i c a t i o n of the investment shall i t r y to w r i t e a clause to account for  a    
++** n 
 {the system noticed another unfulfilled expectation concerning the action part of the rule  but the expert always has the option of overriding the system's suggestions  and does so.  
********** 
{phase v: final checkout  bookkeeping  rerunning the consultation  
********** 
the r u l e now reads: 
rule1 
	i f : 	1  the income-tax bracket of the client 1s 1%  
1  the c l i e n t follows the market carefully  
1  the amount of 	investment 	experience of the c l i e n t 1s moderate 
then: there is evidence  .1  that the area of the investment should be high-technology. 
please describe b r i e f l y why you added  or changed  t h i s r u l e . type an empty line when done. 
 +**the system failed to realize it could conclude 
    investment area; this allowed rule1 to be invoked 
   * *inappropri atel y 
+ 1 * * 
 {experience suggests that in building any large knowledge base it is very useful to keep fairly detailed records about the source of various contributions. the new rule is tagged with a range of such information.} 
rule1 has now been added to the knowledge base. the consultation w i l l be re-run to check the effectiveness of your new r u l e . get comfortable  since t h i s may take a b i t . 
a l s o   new questions may be asked as a result of t h i s new r u l e . if a question 1s printed  please answer 1t w i t h reference to t h i s current c l i e n t . 
 {the consultation is then rerun  but all the previous answers are saved  so the expert can in most cases just watch it proceed. this has been edited out here for brevity.} 
the f o l l o w i n g investments appear to be the most appropriate at t h i s time: 
var1an-corporation 
data-general 
digital-equipment 
w e l l   	1t appears that things are straightened out. 
 {the new conclusions are the ones the expert indicated earlier as the correct answers. this does not go unnoticed.} 
are a l l 	these values correct now  
*  ** y 
 {as always  however  the expert gets the last word  and teiresias waits for approval before proceeding.} 
good  then the problem's been f i x e d . 
 {three errors have disappeared with the addition of one rule. this is explained schematically below: 

as before  1 and 1 failed  hence the *'s   but now the new rule  
1  has succeeded  supplying a value for investment area. this in turn means that 1 now fails  as hoped. 
       however  rule 1  which requires a value of area  failed last time because the system was unable to deduce one. now that 1 supplies one  1 can fire  and it turns out to yield the missing answers.} 
 1 how it all works 
{1 overview of the main ideas 
       before reviewing the trace in more detail  we describe the ideas which make possible the capabilities displayed. the list below serves primarily to name and briefly sketch each in turn; the details are supplied in reviewing the example. 
i. knowledge acquisition in context 
       performance programs of the sort teiresias helps create will typically find their greatest utility in domains where there are no unifying laws on which to base algorithmic methods. in such domains there is instead a collection of informal knowledge based on accumulated experience. this means an expert specifying a new rule may be codifying a piece of knowledge that has never previously been isolated and expressed as such. since this is difficult  anything which can be done to ease the task will prove very useful. 
       in response  we have emphasized knowledge acquisition in the context of a shortcoming in the knowledge base. to illustrate its utility  consider the difference between asking the expert what should i know about the stock market  and saying to him 
here is an example in which you claim the performance program made a mistake. here is all the knowledge the program used  here are all the facts of the case  and here is how it reached its conclusions. now  what is /f that you know and the system doesn't that allows you to avoid making that same mistake! 
note how much more focussed the second question is  and how much easier it is to answer. 
ii. building expectations 
       the focussing provided by the context is also an important aid to teiresias. in particular  it permits the system to build up a set of expectations concerning the knowledge to be acquired  facilitating knowledge transfer and making possible several useful features illustrated in the trace and described below. 
iii. model-based understanding 
       model-based understanding suggests that some aspects of understanding can be viewed as a process of matching: the entity to be understood is matched against a collection of prototypes  or models  and the most appropriate model selected. this sets the framework in which further interpretation takes place  as that model can then be used as a guide to further processing. 1 
       while this view is not new  teiresias employs a novel application of it  since the system has a model of the knowledge it is likely to be acquiring from the expert. 
iv. giving programs a model of their own knowledge 
knowledge 	a c a . - 1 : pav is 1k        we will see that the combination of teiresias and the performance program amounts to a system which has a picture of its own knowledge. that is  it not only knows something about a particular domain  but in a primitive sense it knows what it knows  and employs that model of its knowledge in several ways. v. learning by experience 
       one of the long-recognized potential weaknesses of any model-based system is dependence on a fixed set of models  since the scope of the program's  understanding  of the world is constrained by the number and type of models it has. as will become clear  the models teiresias employs are not hand-crafted and static  but are instead formed and continually revised as a by-product of its experience in interacting with the expert. 
{1} phase i: tracking down the bug 
       to provide the debugging facility shown  teiresias maintains a detailed record of the actions of the performance program during the consultation  and then interprets this record on the basis of an exhaustive analysis of the performance program's control structure  see  for details . this succeeds because  a  the backward-chaining technique used by the performance program is sufficiently straightforward and intuitive  even to a non-programmer} and  b  the rules are designed to encode knowledge at a reasonably high conceptual level. as a result  even though teiresias is running through an exhaustive case-by-case analysis of the preceding consultation  the expert is given the task of debugging reasoning rather than code. 
       the availability of an algorithmic debugging process is also an important factor in encouraging the expert to be as precise as possible in his responses. note that at each point in tracking down the error the expert must either approve of the rules invoked and conclusions made  or indicate which one was in error and supply the correction. this is extremely useful in domains where knowledge has not yet been formalized  and the traditional reductionist approach of dissecting reasoning down to observational primitives is not yet well established. 
       finally  consider the extensive amount of contextual information that is now available. the expert has been presented with a detailed example of the performance program in action  he has available all of the facts of the case  and has seen how the relevant knowledge has been applied. this makes it much easier for him to specify the particular chunk of knowledge which may be missing. this contextual information will prove wery useful for teiresias as well. it is clear  for instance  what the effect of invocation of the new rule must be  as teiresias indicates  it must be a rule that will  deduce that the area of the investment should be high-technology    and it is also clear what the circumstances of its invocation must be  the rule must be invokable for the case under consideration  or it won't repair the bug . both 
of these will be seen to be quite useful. 
 1  phase lit interpreting the rule 
       as is traditional   understanding  the expert's natural language version of the rule is viewed in terms of converting it to an internal representation  and then retranslating that into english for the expert's approval. in this case the internal representation is the interlisp form of the rule  so the process is also a simple type of code generation. 
{1.1} 	models and model-based understanding 
       as a background for reviewing the interpretation process  we digress for a moment to consider the idea of models and model-based understanding  then explore their application in teiresias. 
       in the most general terms  a model can be seen as a compact  high-level description of structure  organization  or content that may be used both to provide a framework for lower-level processing  and to express expectations about the world. one particularly graphic example of this idea can be found in the work on computer vision by falk  in 1. the task there was the standard one of understanding blocks-world scenes: the goal was to determine the identity  location  and orientation of each block in a scene containing one or more blocks selected from a known set of possibilities. 
¡¡¡¡the key element of his work of interest here is the use of a set of prototypes for the blocks  prototypes that resembled wire frame models. while it oversimplifies slightly  part of the operation of his system can be described in terms of two phases. the system first performed a preliminary pass to detect possible edge points in the scene  and attempted to fit a block model to each collection of edges. the model chosen was then used in the second phase as a ;uide to further processing. if  for instance  the model accounted or all but one of the lines in a region  this suggested that the extra line might be spurious. if the model fit well except for some line missing from the scene  that was a good hint that a line had been overlooked  and indicated as well where to go looking for it. 
while it was not a part of falk's system  we can imagine one 
further refinement in the interpretation process and explain it in these same terms. imagine that the system had available some a 
priori hints about what blocks might be found in the next scene. one way to express those hints would be to bias the matching process. that is  in the attempt to match a model against the data  the system might  depending on the strength of the hint   try the indicated models first  make a greater attempt to effect a match with one of them  or even restrict the set of possibilities to just those contained in the hint. 
       note that in this system   i  the models supply a compact  high-level description of structure  the structure of each block    ii  the description is used to guide lower level processing  processing of the array of digitized intensity values    iii  expectations can be expressed by a biasing or restriction on the set of models used  and  iv   understanding  is viewed in terms of a matching and selection process  matching models against the data and selecting one that fits . 
 1.1 	rule models 
       now recall our original task of interpreting the expert's natural language version of the rule  and view it in the terms described above. as in the vision example  there is a signal to be processed  the text   it is noisy  words can be ambiguous   and there is context available  from the debugging process  that can supply some hints about the likely content of the signal. to complete the analogy  we need a model  one that could  a  capture the structure  organization  or content of the expert's reasoning   b  be used to guide the interpretation process  and  c  be used to 
express expectations about the likely content of the new rule. 
       where might we get such a thing  not surprisingly  there aire regularities in the knowledge base: rules about a single topic tend to have characteristics in common. from these regularities we have constructed rule models. these are abstract descriptions of subsets of rules  built from empiricial generalizations about those rules  and are used to characterize a  typical  member of the subset. 
       rule models are composed of four parts. they contain  first  a list of examples  the subset of rules from which this model was constructed. 
       next  a description characterizes a typical member of the subset. since we are dealing in this case with rules composed of premise-action pairs  the description currently implemented contains individual characterizations of a typical premise and a typical action. then  since the current representation scheme used in those rules is based on associative triples  we have implemented those characterizations by indicating  a  which attributes typically appear in the premise  action  of a rule in this subset  and  b  correlations of attributes appearing in the premise  action . * 
       note that the central idea is the concept of characterising a typical member of the subset. naturally  that characterization would look different for subsets of rules  procedures  theorems  etc. but the main idea of characterization is widely applicable and not restricted to any particular representational formalism. 
       the two other parts of the rule model are pointers to models describing more general and more specific subsets of rules. the set of models is organized into a number of tree structures. at the root of each tree is the model made from all the rules which conclude about  attribute   e.g.  the investment-area model   below this are two models dealing with all affirmative and all negative rules  e.g.  the investment-area-is model   and below this are models dealing with rules which affirm or deny specific values of the attribute. 
rather than being hand-tooled  the models are assembled by 
teiresias on the basis of the current contents of the knowledge base  in what amounts to a very simple  i.e.  statistical  form of concept formation. the combination of teiresias and the performance program thus presents a system which has a model of its own knowledge  one it forms itself. 
       the rule models are the primary example of meta-level knowledge in this paper. this form of knowledge  and its generation by the system itself have several implications illustrated in later sections. 
figure 1 shows a rule model; this is the one used by 
teiresias in the interaction shown earlier.  since not all of the details of implementation are relevant here  this discussion will omit some. see  for a full explanation.  as indicated above  there is a list of the rules from which this model was constructed  descriptions characterizing the premise and the action  and pointers to more specific and more general models. each characterization in the description contains the two kinds of entries noted: one concerning the presence of individual attributes and the other describing correlations. the first item in the premise description  for instance  indicates that  most  rules about what the area of an investment should be mention the attribute rate of return in their premise; when they do mention it they  typically  use the predicate functions same and notsamej and the  strength   or reliability  of 

knowl erf e a c q . - 1 : 	d a v i s 
1 

guessing ability. alternatively  more sophisticated concept formation techniques might be borrowed from existing work. 
there is a potential problem in the way the models are used. 
their effectiveness in both guiding the parsing of the new rule and in  second guessing  its content is dependent on the assumptions that the present knowledge base is both correct  and a good basis for predicting the content of future rules. either of these can at times be false  and the system may then tend to continue stubbornly down the wrong path. 
       in addition  the weakness of the natural language understanding technique presents a substantial barrier to better performance. once again there are several improvements that could be made to the existing approach  see    but more sophisticated techniques should also be considered. 
       there is also the difficult problem of determining the impact of any new or changed rule on the rest of the knowledge base. the difficulty lies in establishing a formal definition of inconsistency for inexact logics  since  except for obvious cases  e.g.  two identical rules with different strengths   it is not clear what constitutes an inconsistency. additional work is needed here. 
{ 1} conclusions 
       the ideas reviewed above each offer some contribution toward achieving the two goals set out at the beginning of this paper: the development of a methodology of knowledge base construction via transfer of expertise  and the creation of an intelligent assistant. 
       knowledge acquisition in the context of a shortcoming in the knowledge base  for instance  has proved to be a useful technique for achieving transfer of expertise  offering advantages to both the expert and teiresias. it offered the expert a framework for the explication of a new chunk of domain knowledge. by providing him with a specific example of the performance program's operation  and forcing him to be specific in his criticism  it encourages the formalization of previously implicit knowledge. it also enabled teiresias to form a number of expectations about the knowledge it was going to acquire  and made possible several checks on the content of that knowledge to insure that it would in fact fix the bug. 
       in addition  because the system has 1 model of its own knowledge  it was able to determine whether a newly added piece 
of knowledge  fit into  its existing knowledge base. 
       a second contribution of the ideas reviewed above lies in their ability to support a number of intelligent actions on the part of the assistant. while those actions have been demonstrated for a single task and system  none of the underlying ideas appears to be limited to this task  or to associative triples or rules as a knowledge representation. 
       the idea of model-based understanding  for instance  found a novel application in the fact that teiresias has a model of both its own knowledge and the information it expects to receive  and uses this to guide acquisition. 
       the idea of biasing the set of models to be considered offered a specific mechanism for the general notion of program-generated expectations  and made possible an assistant whose understanding of the dialog was more effective. 
       teiresias was able to  second guess  the expert with respect to the content of the new knowledge by using its models to see how well the new piece of knowledge *1/y inn to what it already knew. it was the presence of a partial match between the new knowledge and the system's model of its knowledge that prompted it to make a suggestion to the expert. 
       the concept of meta-level knowledge made possible multiple uses of the knowledge in the system: information in the knowledge base was not only used directly  during the consultation   but was also examined and abstracted to form the rule models. 
       teiresias also represents a synthesis of the ideas of model-based understanding and learning by experience. while both of these have been developed independently in previous al research  their combination produced a novel sort of feedback loop  figure 1 . rule acquisition relies on the set of rule models to effect the model-based understanding process. this results in the addition of a new rule to the knowledge base  and this in turn prompts the recomputation of the relevant rule model s . 
       this loop has a number of interesting implications. first  performance on the acquisition of the next rule may be better  because the system's  picture  of its knowledge base has improved - the rule models are now computed from a larger set of instances  and their generalizations are more likely to be valid. 
       second  since the relevant rule models are recomputed each time a change is made to the knowledge base  the picture they supply is kept constantly up to date  and they will at all times be an accurate reflection of the shifting patterns in the knowledge base. 

       finally  and perhaps most interesting  the models are not hand-tooled by the system architect  or specified by the expert. they are instead formed by the system itself  and formed as a result of its experience in acquiring rules from the expert. thus despite its reliance on a set of models as a basis for understanding  tfiresias's abilities are not restricted by the existing set of models. as its store of knowledge grows  old models can become more accurate  new models will be formed  and the system's stock of knowledge about its knowledge will continue to expand. this appears to be a novel capability for a model-based system. 
acknowledgments 
       the work described here was performed as part of a 
       doctoral thesis supervised by bruce buchanan  whose assistance and encouragement were important contributions at every stage. nancy martin  dave barstow  and mike clancy made a number of very helpful comments on earlier drafts of this paper. 
notes 
 acquisition of new conceptual primitives from which rules are built is discussed in   while the design and implementation of an explanation capability is discussed in  and . 
 two experiments of this sort have been performed with the mycin system  and suggest that this sort of  plug compatibility  of knowledge bases is a realistic possibility for a range of tasks.  this description is necessarily abbreviated. see  for a more detailed discussion. 
 both  a  and  b  are constructed via simple statistical thresholding operations. 
 note that these tests require the ability to dissect and partially evaluate the rule. the same function template which is used as a pattern for constructing rules is also used as a guide in this dissection and partial evaluation process. seo  1 for details.  the issue is related to work described in   on closed vs. open sets. 
