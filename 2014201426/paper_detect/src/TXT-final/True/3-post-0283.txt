
this paper reconsiders the most basic scheduling problem  that of minimizing the makespan of a partially ordered set of activities  in the context of incomplete knowledge. after positioning this paper in the scope of temporal networks under uncertainty  we provide a complete solution to the problem of finding floats of activities  and of locating surely critical ones  as they are often isolated. the minimal float problem is np-hard while the maximal float problem is polynomial. new complexity results and efficient algorithms are provided for the interval-valued makespan minimization problem.
1 introduction and motivation
temporal constraint networks  tcn  represent relations between dates of events and also allow to express constraints on the possible durations of activities from intervals of values  dechter et al.  1 . tcn have been extended to take into account uncertainty of durations of some tasks in realistic applications. a distinction is made between so-called contingent constraints  for example  when the duration of a task cannot be known before its execution  and controllable ones  for example a time interval to be chosen between starting times of two tasks . the resulting network  simple temporal network with uncertainty  becomes a decisionmaking problem under uncertainty  and notions of consistency must be refined so as to ensure controllability  that is  ensured consistency despite uncertainty  morris et al.  1; khatib et al.  1 . as far as we know  the tcn community has extensively worked on the controllability of a network  but the question of optimizing the total duration of set of tasks described by a stpu has not been studied. nevertheless  not all solutions to an stpu are equally valuable  and solutions minimizing the makespan are of obvious practical interest.
모this paper provides a full picture of the complexity of the makespan minimization problem under interval-based uncertainty. it is shown that the only np-hard problem is the one of finding the greatest lower bound of the float  which is closely related to asserting the possible criticality of a task. all other problems turn out to be polynomial. the fact that the two problems of asserting if an arc is necessary critical or possibly critical do not have the same complexity is rather unexpected.
1 preliminaries
an activity network is classically defined as a set of activities  or tasks  with given duration times  related to each other by means of precedence constraints. when there are no resource constraints  it can be represented by a directed  connected and acyclic graph. of major concern  is to minimize the ending time of the last task  also called the makespan of the network. for each task  three quantities have practical importance for the management of the activity network: the earliest starting time estij of an activity  i; j  is the date before which the activity cannot be started without violation of a precedence constraint. the latest starting time lstij of an activity  i; j  is the date after which the activity cannot be started without delaying the end of the project. the float fij of an activity  i; j  is the difference between the latest starting time lstij and the earliest starting time estij. an activity is critical if and only if its float is equal to zero.
모now  activity durations  weights of the arcs   i; j  1 a are only known to belong to time intervals dij =  dij ;dij+   dij 1. we define a configuration as a precise instantiation of the duration of each task  i; j  1 a.   denotes a configuration  while dij    denotes the duration of activity  i; j  in configuration  . g i; j  is the subgraph of g composed of nodes succeeding i and preceding j.
모computing earliest starting dates is not a difficult issue. here we solve four problems  stated in  chanas et al.  1 : 1  determining the widest intervals lstkl  bounds  of possible values of the latest starting times lstkl of a given activity  k;l  1 a  i.e. the interval lstkl =  lstkl ;lstkl+  defined by lstkl = minlstkl    and lstkl+ = maxlstkl   ; the problem of computing lstkl  resp. lstkl+  is denoted glblst  resp. lublst ; 1  determining the widest intervals fkl of possible values of floats  total floats  fkl of a given activity  k;l  1 a  i.e. the interval fkl =  fkl ; fkl+  bounded by fkl = min fkl    and fkl+ = max fkl   . the problem of computing fkl  resp. fkl+  is denoted glbf  resp. lubf . in both problems minimization and maximization are taken over all possible configurations. the solutions to problems glblst  lublst  lubf and glbf come down to finding an extreme configuration  dubois et al.  1  where such bounds are attained. as there are 1n extreme configurations  it explains the potentially exponential nature of the problem. glblst  lublst and glbf have recently been solved in  chanas and zielinski  1; zieli뫣 nski  1뫣    and only glbf is nphard. in this paper  we recall the solutions of these three problems  and present the solution to the last one lubf  thus providing a full picture of the makespan minimization problem under incomplete information.
1 evaluating necessary criticality
this section presents a new method which can decide if a given task  k;l  is necessary critical.
모first  under the assumption that the durations of the predecessors of task  k;l  are precisely known  we already know an algorithm that asserts if  k;l  is necessary critical. it constitutes the basis for computing the lub and glb of the latest starting dates in polynomial time in  zielinski  1뫣  . we have extended these results and can provide a general algorithm which asserts if  k;l  is necessary critical in a network g in polynomial time without any consideration of the durations of tasks preceding  k;l .
모suppose that  k;l  is necessary critical in the sub-network g i;n   then we proved that we can fix the duration of tasks preceding node i at their lower bounds  without changing the necessary criticality of  k;l  in g. on the contrary  if  k;l  is not necessary critical in g i;n   then we proved that we can fix the duration of tasks preceding node i at their upper bounds. applying this idea on networks g i;n  for i from k down to 1  for each network  tasks preceding  k;l  have always precise duration in g i;n   and so we can easily assert the necessary criticality in polynomial time. the resulting algorithm requires o mn  steps to assert if  k;l  is necessary critical in g.
1 computing the least upper bound on the floats
to compute the lub of the floats  we are going to increase step by step the duration of  k;l  from dkl =dkl until  k;l  becomes necessary critical with a duration dkl + f . we proved that the value f is the lub of the float of  k;l .
모if we assume that activities preceding  k;l  have precise durations  then fkl+ = lstkl+ estkl+. so at each step of the computation  we can easily compute fi+ representing the float of  k;l  in network g i;n . after initialization of durations in the network by the algorithm which asserts if  k;l  is necessary critical  if  k;l  is not necessary critical  we have to increase the duration of  k;l  by the minimal non-null fi+ for i preceding k  then go back to the test of asserting necessary criticality. when  k;l  becomes necessary critical  we have found fkl+. at each iteration   k;l  becomes necessary critical in at least one new network g i;n   and so the resulting algorithm is polynomial and takes o n1m .
모the following table summarizes the complexity of the different problems of the pert/cpm on intervals:
earliest startingglbpo n+m date  all tasks lubpo n+m latest startingglbpo mn date  one task lubpo mn float  all tasks glbnp-hardo  n+m jpj float  one task lubpo n1m 모in this table we give the complexity of the theoretically best known algorithm which computes the quantity of interest. in particular  the path algorithm  dubois et al.  1  which computes the glb and lub of floats and latest starting dates runs in o  n+m jpj  time   where jpj is the number of path of the graph g. the real complexity thus depends of the topology of the network.
1 conclusion
this paper proposes a complete solution to the criticality analysis of a network of activities when durations of tasks are ill-known. it is shown that moving from precise to imprecise durations radically changes the complexity of the problem  ruining the traditional critical path method. part of the problem  pertaining to the glb of the float  becomes nphard  the other questions remaining polynomial  although not straightforwardly so. these complexity results shed light on reasons why the more familiar stochastic counterparts to this basic scheduling problem are so difficult to handle  part of the difficulty being already present in the interval analysis. the proposed algorithms can be of obvious relevance to practical predictive project scheduling problems where durations of tasks are not known in advance. clearly  due to the basic nature of the addressed problem  several lines of research can be envisaged for future research. for instance one may assume that part of the tasks durations are controllable and additional constraints relating durations and starting or ending times may be available. then one obtains a makespan minimization problem in the more general setting of stpu's.
references
 chanas and zielinski  1뫣   s. chanas and p. zielinski. the뫣 computational complexity of the criticality problems in a network with interval activity times. ejor  1-1  1.
 chanas et al.  1  s. chanas  d. dubois  and p. zielinski.뫣 on the sure criticality of tasks in activity networks with imprecise durations. ieee transactions on systems  man  and cybernetics  1-1  1.
 dechter et al.  1  r. dechter  i. meiri  and j. pearl. temporal constraint networks. ai  1-1  1.
 dubois et al.  1  d. dubois  h. fargier  and j. fortin. computational methods for determining the latest starting times and floats of tasks in interval-valued activity networks. j. of intelligent manufacturing  1. to appear.
 khatib et al.  1  l. khatib  p. morris  r. morris  and f. rossi. temporal constraint reasoning with p