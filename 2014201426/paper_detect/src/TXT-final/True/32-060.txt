 
in the present paper we introduce the notion of variable assignment problem  vap  as an abstract framework for characterizing diagnosis. components of the system to be diagnosed are put in correspondence with variables  behavioral modes of the components are the values of the variables and a diagnosis is a variable assignment which explains the observations of the diagnostic problem  by considering the constraints put by the domain theory. in order to have a concise representation of diagnoses and to reduce the search space  we introduce the notion of scenario for representing a set of diagnoses. the paper discusses the definition of preference criteria for ranking solutions and their use for guiding the heuristic search for diagnoses. experimental data are reported for the evaluation of such a heuristic search on a real-world diagnostic problem  concerning the identification of faults in a space robot arm; in this domain  where a high number of diagnoses may be possible  our approach allows one to get a concise representation of the large number of solutions and to define effective diagnostic strategies able to provide relevant information about fault localization and identification. 
1 	introduction 
in many real-word applications  diagnostic reasoning is often embedded in a larger task which may involve monitoring  gathering of additional information for hypothesis discrimination  reconfiguration  repair  etc... in such a complex situation  the diagnostic component has to summarize the results of the diagnostic reasoning in such a way that the intelligent agent  either human or artificial  who has to use the diagnostic results is able to perform the task. unfortunately  for most artifacts the number of possible diagnoses is quite large. in the modelbased diagnosis community there is long tradition to use some preference criterion for representing the set of possible diagnoses: the notion of minimal diagnosis  reiter  1  has been often used  but its drawbacks are well known when the domain theory includes also models of the faulty behavior. the characterization of diagnoses in terms of partial and kernel diagnosis  de kleer et al.  1  is useful  but it does not guarantee at all that the number of diagnoses is small. 
in model-based diagnosis a number of approaches based on information theory have been proposed for suggesting additional measurements  in order to discriminate between competing diagnostic hypotheses and to reduce the number of diagnoses. however  it is not always possible to get additional measurements and therefore  in such cases  other techniques have to be developed for representing diagnoses in a more compact way. in several domains fault localization is not sufficient for solving the diagnostic task: fault identification is needed because of different repair actions and/or criticality of the fault. in modeling such domains  the behavior of the diagnosed system is represented in term of behavioral modes and the space of possible solutions is usually quite large. the introduction of a preference criterion among diagnoses is not only useful for representing in a compact way the set of solutions  but it should also guide the search process of diagnoses generation  in such a way that preferred diagnoses are generated before non-preferred ones  see  for example   de kleer  1  for a probabilistic approach . this is a very important requirement in complex domains where the computation of diagnoses is time  or space  consuming and therefore the computation is time  or space  bounded. 
　the present paper aims at solving some of the problems mentioned above by introducing a characterization of diagnostic problem solving  in particular abductive diagnosis  as a type of variable assignment problem  vap . in section 1  we introduce the notion of vap as a problem in which some variables have to be assigned  depending on the constraints induced by some other entities  called findings  through a set of rules. several kinds of problem solving tasks can be viewed as specific instances of a vap including planning  diagnosis  classification  learning of operational concepts  etc... in the present paper  we will concentrate on the view of diagnostic problem solving as a vap: in section 1 we discuss some general issues arising on vaps  in particular the compact representation of set of solutions  sect. 1   the 
portinale and torasso 	1 
use of information theoretic criteria for preference among solutions  sect. 1  and the use of heuristic search for solving vaps  sect. 1 . in section 1 we will introduce a real-world diagnostic problem  related to the identification of faults in a space robot arm  mugnuolo et al.  1  and we will show how mapping such a problem to a vap can allows us to define diagnostic strategies able to provide the user with a powerful tool for detecting and identifying faults in such a complex system. 
1 	variable assignment problems 
a variable assignment problem or vap is characterized by a set of variables having a finite set of admissible values  and a set of observable parameters  that we will call findings  that may constraint the variable values through a suitable set of rules representing the domain theory. 
definition 1 a variable assignment problem  vap  is a triple  v  f  dt  where: 
   is a set of variables taking values from a predefined set of mutually exclusive valcalled the domain of 
is a set of findings represented 
as atomic propositions; 
   is a set of rules relating variables and findings and called the domain theory 
in the following  given a variable xi  we will indicate as a particular instance of the variable  i.e. an assignment to from .  . it should be clear that  since values in . are mutually exclusive  
moreover  in the present work we will discuss the case where dt is a horn theory. 
　a diagnostic problem can be characterized in terms of vap as follows: each variable corresponds to a component of the system to be diagnosed  with each value representing a behavioral mode of the component  de kleer and williams  1 ; each finding corresponds to an observation  i.e. to an observable parameter of the system; the theory represents the model of the system  usually a behavioral model relating behavioral modes of components to observable manifestations . in this paper  for the sake of simplicity  we will ignore the influence of input observations in determining the output observations and we will restrict our attention to two-layers diagnostic problems  peng and reggia  1   where faults  and possibly normal behavior  are directly related to observations1. 
l
   the whole framework can be generalized to more complex models with arbitrary long chains of rules between behavioral modes of the components  and input parameters  and observations. in such models  variables not corresponding to components but to internal states  endogenous variables  are present. also these variables have finite domains and the domain theory dt contains rules relating input parameters and components with internal variables as well as rules relating internal variables to findings. input parameters can be viewed as variables whose assignment is already given as an external constraint. 
1 	qualitative reasoning and diagnosis 
　solving a vap means to determine the possible assignments to the variables that  satisfy  the rules concerning the observed findings. this may mean different things: it may be sufficient to require the logical consistency of an assignment with respect to observed findings or it may be the case that a covering of the findings is required. from the diagnosis point of view this corresponds to the classical distinction between consistency-based diagnosis and abductive diagnosis. in the following we will consider the stronger choice of coverability1. 
definition 1 a solution to a vap  v.f.dt  is a vector x =  such that . 
1 solving vaps 
1 basic issues 
given a vap as defined in def. 1  each finding /  constrains the values of a subset of the variables; this means that given fi   the set of possible variable assignments is restricted by the rules in dt related to 
　　example 1. let be a vap defined on two ternary variables having values = 1  =1 1 and with the following theory: 
solving this vap produces the following variable assignments: 

for problem solving efficiency  it may not be reasonable to  expand  all the possible assignments generated by a given finding. by considering one finding at the time  we can notice that each  constraints only  via the disjunction  so a more compact representation for the above variable assignments can be the conjunction of disjunctions 
　in general  we can represent the set of assignments generated by each finding by means of a set of scenarios  each being a particular kind of conjunctive normal form  cnf  formula. 
definition 1 given a vap  f dt   	a 
scenario is a cnf formula of the type 

where each conjunct is a disjunction of  at most   instances of the same variable 
in particular  in the case of diagnosis  if the space of elementary variable assignments is very large  a scenario can represent in a compact way multiple assignments with two potential benefits: 1  easier analysis of diagnoses for a human or artificial agent  since they are factored; moreover  remaining sources of indeterminacy requiring further discrimination are pointed out  for each 
　　1  this choice is justified when the model is reasonably complete  see  console and torasso  1  : as we shall see in section 1  in our case study the behavioral modes as well as their relation to observations are known. 

component within each scenario; 1  reduction in the size of the search space. in fact  each finding imposes a constraint on a subset of the variables  represented as a set of k admissible tuples for such a subset and this may be summarized in at most k scenarios. on the other hand  the adoption of scenarios does not guarantee that search will produce solutions that are elementary assignments  even if they can be easily generated from final scenarios. therefore  a good reason for adopting scenarios is their ability of trading-off search effort with respect to specificity of assignments. in complex domains  the adoption of scenarios may reduce the search space  but it may still be large  as well as the final set of scenarios : the introduction of a measure of preference among scenarios can then help to focus their generation to most preferred ones. 
　example 1. suppose that the vap of example 1 is modified by adding to dt the following rules: 

　we have now five variable assignments solving the problem that may be compacted into two scenarios  one very general  and one very specific i the problem is how to compare them. 
　the mechanism we propose to approach this problem is based on the minimum description length principle  mdl   rissanen  1  adapted to the particular problem we are tackling. next section discusses this topic  while sect. 1 addresses the problem of using such a preference information during search. 
1 	comparing scenarios 
the mdl is a principle of parsimony often used in machine learning or in probabilistic reasoning; the main idea is that hypotheses that may be described more concisely should be preferred over other competing hypotheses. the mdl principle is basically motivated by the fact that  using concepts from information theory  most probable hypotheses have shortest descriptions  see  mitchell  1  for a detailed dis cussion . in particular  given a hypothesis h having probability p h   the optimal encoding for h assigns - bits to the hypothesis description. notice that in our case  the direct encoding of a compound hypothesis represented by a given scenario is not really appropriate; indeed  if a scenario represents the compound hypothesis   the coding length had to be proportional to - which is strictly greater than the coding length of the compound hypothesis given by . in fact  from the information theoretic point of view we want to provide the receiver with the information that there is some indeterminacy in deciding which is the right hypothesis for the variable  so we have to transmit two separate messages: one for describing h1 and another message for describing . 
　to apply a comparing principle based on mdl in our case  we first need to introduce some notational facilities. 
given a vap 	we associate with each variable xi a bitmap of length | such that = 1 if the variable xi  may be assigned the kth value and otherwise. we then define b = to be a bitmap associated with the whole set of variables  . being the concatenation operator. 
　it should be clear that every scenario generated by the findings can be encoded as a bitmap b defined as above. of course  a scenario is inconsistent if there exist a  in b such that  a bitmap b is said to 
be elementary if it represents an elementary variable assignment  i.e. an assignment of exactly one value to each variable   thus if and only if 
every generic bitmap b represents one or more elemen-
tary bitmap  such that being | the  bitwise or  operator. 
in the following  we make the assumption that variables may be assigned independently to each other1. under this assumption  given an elementary bitmap  we define its coding length  or equivalently the coding length of the corresponding variable assignment  as: 

the above definition requires the specification of some probability priors on single variable assignments; in case no specific information is available on such assignments we can assume a uniform prior for each variable. 
given a generic bitmap b and its elementary bitmaps 
  the coding length of b  or equivalently of the corresponding scenario  is then defined as 

　in particular  we will be interested in considering different preference criteria among scenarios represented as bitmaps  defined by considering a suitable transform t b  of the bitmap b and by computing . the 
choice of r and equation 1 allow us to trade-off the likely hood of a given scenario and its specificity/generality with respect to specific requirements concerning the current task and application. in general  the coding length of each elementary scenario weights the probability of the corresponding assignment  while the sum over the elementary assignments of the scenario gives a penalty to less specific and then less informative ones. the r transform allows one to tune the amount of penalty for less informative scenarios  by taking into account the expected use of such scenarios. in particular  for vaps representing diagnostic problems  we identified the following basic transforms: 

　　1  in diagnostic terms this corresponds to the usual assumption of prior independence among faults. 
	portinale and torasso 	1 

 where ' is the empty bitmap if  has all bits set to 1 and ' = . otherwise;  is the bitmap having all zeros  but in the most probable position if is a bitmap 
	having all ones and 	otherwise; 	is the bitmap 
	obtained from 	by resetting to zero all but the most 
probable position. 
   scenarios having smaller coding length are then preferred over those having larger coding length. the choice 
of the proper transform essentially depends on the use of the scenarios representing final solutions. let us consider a diagnostic setting: in some cases  more specific diagnoses may be more conveniently used because they imply less discrimination effort  i.e. less tests   so tl may be the most suitable choice; in some other cases the 
 operator using the diagnostic system may be biased towards preferring some particular assignments contained in a final scenario. for example the operator can ignore components for which no restriction on possible behavioral mode has been provided by the observations analyzed so far. this is the basis of the notion of partial and kernel diagnoses  de kleer et a/.  1 . transform t1 assures that a component for which all behavioral modes are still possible do not contribute to the evaluation of the f function. therefore it guarantees that the equivalent  in our framework  of a kernel diagnosis is preferred to a partial  or total  diagnosis generated by the kernel one. also t1 treats in a different way 
components for which no information is provided  all the behavioral modes are possible : in such a case  t1 weights the component as it would be assigned the most probable  usually the normal  behavioral mode. it guarantees that the equivalent in our framework of a kernel diagnosis has a coding length t not larger of the one of a partial  or total  diagnosis generated by the kernel one. in transform t1 the contribution of each component to the evaluation of t is given by the most probable behavioral mode still admissible: this is equivalent to select the most probable diagnosis among all the elementary diagnoses represented by a final scenario. this preference criterion has usually the effect of preferring the diagnoses with minimum cardinality of faults1. 
　a further advantage of the proposed coding length is that it can be computed without determining all the elementary assignments of a given scenario. given a bitmap b let as before bi be the sub-bitrnaps relative to the single variables xi : let us define a - to be a coefficient associated with bi and representing the number of is in bi. the following property is trivially verified. 

it is worth noting that the evaluation of the t function is not expensive since the number of operations involved in the evaluation is    where n is the number of components  or the number of variables in the vap problem . 
1
　　 this follows from the fact that normal behavioral mode has usually much higher probability than faulty modes. 
1 	qualitative reasoning and diagnosis 
in the next section we will show how the coding length of a scenario can be exploited to guide the search for the 
solutions of a given vap. 
1 	heuristic search 
one obvious way for addressing the problem of solving a vap is to search in the space of all the scenarios gen-
erated by the findings. the assumption we made in this work is that findings are processed in a pipeline fashion 
following a specified order . this assumption is made for two main reasons: first it simplify the 
description of the search strategies without loosing generality  the approach can be generalized if this assumption is relaxed   second in many applications this corresponds to a real constraint on the problem  thus findings are only available in such a way or it is necessary to process them in such a way as in many real-time diagnostic applications . 
　given a scenario s  the current finding to be considered plays the role of a state-space operator in statespace search: it generates all the scenarios constraining the current one with respect to the rules related to the initial state can then be defined as the trivial scenario   corresponding to a bitmap having all bits set to 1. 
　example 1. let us consider a vap slightly more complex that the one of example 1 in section 1: 
variables having values 	and with the following theory: 

　the search process starts from the  trivial  initial scenario  where all the assignments are possible since no finding has been taken into consideration. 
by processing the first finding f  we obtain two suc-

is unconstrained since there is no relation in theory 
dt between x1 and f1. the search process now consider and starting from s   only one scenario accounts for 

consistent with the constraints put on x  in scenario s1. if we process finding by taking into consideration scenario s1  we get just one successor: the scenario itself. it is worth noting that the explanation of in terms of  is inconsistent with the constraints put by scenario s1 on x1. the final step concerns the explanation of ; starting from we got two solutions to vap represented by scenarios where 
starting from s1 we get a single solution represented by the scenario  in conclusion we have 
three different solutions  i.e. scenarios to the vap; together the three scenarios represents 1 different elementary assignments. each scenario men-

tioned before can be represented by the corresponding bitmap; for instance =  1   1   1  since each of the three ternary variables can assume any value; 
	  	  	since there is some constraints 
on variable x i   whereas the solution s1 is represented by the bitmap =  1   1   1  where all the variables have to satisfy some constraints put by and 
　we can notice that  because we process one finding at the time  there is a one-to-one correspondence between a finding and a search graph  level  being the jth finding  be processed at level j  assuming the initial node at 
level 1 . 
　since the coding length function t defined in section 1 allows for a ranking of the solutions  the most natural way of searching through the space of possible scenarios is to define a heuristic search strategy guided by the principle of getting solutions with minimal coding length. in particular  it is possible to devise an adrnissible search strategy based on a best-first search  bfs . we can define as evaluation function for a generated scenario 1  with bitmap b s   at search level j the function 

where  is the minimal coding length bitmap that may be obtained from b s  by processing findings from . this function is easily computed by considering the set of variables influenced by each finding 
fj 
　example 1. consider a problem with 1 binary variables findings processed in the order and r corresponding to tl transform. let the assignments of each variable be equiprobable  but those for x1  where 
　let us assume that the scenario produced after the processing of f  is 
still to be processed and influencing 
only x1 and x1 respectively; the best  minimal coding length  scenario that may be generated from s  at level 1 is then: 

since x1 will not be changed by f1  f1 and x1 will be set to at the best. considering a bitmap of length 1 where the ith pair of bits corresponds to respectively  then b s1  =  1* 1 *1  and =   1 * 1 u 
1   1   
　bfs using h is admissible  since the evaluation function h never over-estimates the actual minimal coding length scenario that may be generated from a given search node. if we force the diagnostic system to find not only the single best solution  but several solutions through backtracking  we are guaranteed that the diagnostic system produces solutions  in terms of scenarios  in order of preference  according to the chosen criterion . since h is optimistic in foreseeing the discrimination power of the findings not yet examined  it is common that the coding length of final scenarios  i.e. the solutions  is larger than the one foreseen by expanding intermediate scenarios by using h. this means that in some cases h is not as informative as we would like and consequently the search space explored by h could be large. in order to check the actual applicability of bfs to realword diagnostic problems  we have performed some tests on a reduced general experimental framework  where general vaps have been randomly generated and solved by bfs. we have then implemented a random vap generator  able to produce test sets of problems by setting the following parameters: the number and the cardinality of the variables  the probability distribution on the variable values  the number and the order of examination of findings  the maximum number of scenarios  maxs  generated by each finding and some random seeds for having different random scenario generations for each finding. using this vap generator we have produced five batches of 1 test problems each  for a total of 1 test problems   characterized by 1 variables having cardinality varying from a minimum of 1 to a maximum of 1 values and with a probability distribution over such values ranging from uniforms to very extreme. each batch was characterized by parameter maxs varying from 1 to 1 and by a fixed number of findings that in the 1 batches  has been varied from 1 to 1. average results for each batch are reported on table 1. for each batch we report: the number of findings  nf   the average expansion factor  ef  representing the percentage of the whole search space  in terms of expanded nodes  that has been visited to find the optimum  the average solution factor  sf  representing the percentage of solutions that bfs has been able to find within a time-out of 1 seconds on cpu time  the percentage of time-outs  to  occurred in the batch and the percentage of cases in the batch for which no solution has been provided within the time- out  ns . the last row reports on the global average. as we can see in more than 1% of the cases bfs is not able to produce a solution within the time-out and in more than 1% of cases it cannot produce ail the solutions. moreover  we also experimented that as the complexity of the problem increases  essentially in terms of nf and maxs   bfs is likely to run out of memory without giving any answer. for these reasons  we consider bfs suitable just for relatively simple domains and we focus our attention on alternative strategies based on greedy search  gs  with backtracking  where the scenario to be expanded is locally chosen among those generated at the 

table 1: average results for bfs. 
	p1rtinale and t1rass1 	1 

previous step. by resorting to gs we have two general alternatives: still using h but in a local way  or directly using the coding length of a scenario as evaluation function. because of the lack of space  we cannot describe in detail the experiments with gs using the random vap generator. however  it is worth noting that the analysis with the vap generator showed more benefits in directly using the coding length t as evaluation function. in the next section  we report on experimental results on the performance of gs on a real-world diagnostic problem. 
1 the spider case study 
in this section we report on a recent work done inside the project sisras  italian acronym for  an intelligent system for supervising autonomous spatial robots''  sponsored by asi  the italian space agency  aimed at demonstrating the feasibility of interactive autonomy for controlling and supervising a complex system in the space. the test-bed of the project is the space robot arm spider  space inspection device for extravehicular repairs  imugnuolo et a/.  1 . spider is a 1 
degrees of freedom  i.e. a 1 joints  space robot arm developed inside the jerico  joint european robot in-orbit calibration and operations  project. in the multi-agent architecture devoted to supervising spider  one diagnostic agent is responsible to identify failures and malfunctions during spider activity  by analyzing symptoms obtained via monitoring of the arm and to provide the human operator with a concise and comprehensible description of the possible faults. 
　we have devised a behavioral model for spider characterized by 1 components with an average number of 1 behavioral modes each  ranging from a minimum of 1 to a maximum of 1  and 1 observable parameters  among which 1 not equipped with a sensor for direct observation  by taking into consideration the fmeca documents developed during the design and test of the spider arm. such documents list all the faults for each component and provides a short characterization of each fault in terms of observables. in this way the model we have developed is complete in terms of faults and is reasonably complete in terms of relations between behavioral modes and observations. since several faults share the same set of symptoms with no possibility of discrimination through monitoring parameters  a very large number of diagnoses may be produced  even when all observable parameters are available and actually observed. we have then approached this problem by considering the diagnostic problem as a vap; this allowed us to take into account all the considerations we made in previous sections and in particular: 
  the processing of observations in the order provided by the monitoring unit; 
  an abductive characterization of the diagnostic pro-cess  because of the possibility of obtaining a  almost  complete model of both the normal and abnormal behavior of the arm; 
1 	qualitative reasoning and diagnosis 

table 1: results for gs in the spider domain. 
  the compact representation of a set of elementary diagnoses through the notion of scenario; 
  the definition of diagnostic strategies viewed as heuristic search in the space of possible scenarios; 
  the definition of preference criteria for diagnoses ob-tained as final scenarios at the end of the process. 
actually the diagnostic system we have developed is more complex than the characterization of diagnosis we have described in previous paragraphs: in particular  the system has to deal with input parameters representing the predicted status of the arm joints  e.g. whether the current command executed by the robot control involves a movement of the joint . as mentioned before  input parameters are dealt with as external constraints on the possible behavioral modes of components; a more detailed description of the modeling issues involved in diagnosing spider  including the exploitation of the dependencies among findings  is reported in  portinale et a/.  1 . 
　as pointed out in section 1  we adopted a gs approach guided by the coding length function defined in section 1  also used to address the problem of preference among diagnoses. we have implemented a simulator on the behavioral model of spider able to generate diagnostic cases by injecting faults in the model. in the present paper we report on some of the experiments performed so far: if particular we considered two test sets of 1 cases each  by injecting one and two faults respectively. each test set has then been tested by running a gs algorithm guided by t under t l   t1 and t1 transform. the average number of observations to be explained in each case was about 1 and a time-out of a 1 minute cpu time has been set. table 1 summarizes the results in terms of number of injected faults  if   average expansion factor  ef   number of times where optimum is the first solution  1   number of times where optimum is in the first 1 solutions  1   average distance of the coding length of first solution with respect to the optimum  do  normalized in  1  with respect to the maximum value  number of time-outs  to . first two lines of table 1 refer to transform t l   next two lines to transform t1  while the last two to transform t1. as we can see  more complex problems  i.e. those involving two faults  are more likely to be timed-out under the time constraint we set up1; however  the performance of 
1  notice that the time-out refers to the algorithm searching 

the algorithm appears to be very good  both in quantitative  e.g. ef  and in qualitative terms   e.g. 1  1 and do . in particular  it is worth noting that very often gs is able to get the optimum as a first solution  or at least in the first 1 ; moreover even when the optimum is not obtained as a first solution  the quality of such a first solution is very high as suggested by reported values on do. this is particularly true for both transform t1 and t1  with t1 being slightly better . the use of a greedy strategy guided by t seems then to be a very effective approach for domains  like spider  where the complexity of the model and the large number of possible solutions have to be properly addressed. 
1 discussion 
in the present paper  we have discussed an approach to diagnosis based on viewing a diagnostic problem as a variable assignment problem  where variables  i.e. system components  are indirectly constrained through other observable entities  i.e. system observations . in particular  we addressed the problem of searching for solutions  i.e. diagnoses  in a large solution space  by proposing heuristic search in the space of scenarios  i.e. cnf formulae representing multiple elementary diagnoses . such a characterization seems to be quite promising in domains where observable parameters do not allow in general a precise discrimination between diagnostic hypotheses  so  we have a large number of competing diagnoses  and it is not possible to get additional measurements. these characteristics are present in the spider domain  but are not exclusive of such a domain: several other real-world applications can have the same problems. experimental results show that even the use of non-admissible search algorithms based on a. greedy strategy can provide interesting results  especially concerning the production of the best scenario with respect to the given preference criterion. 
　characterization of diagnosis as variable assignment has some similarities with work on diagnosis as constraint propagation as discussed in  elfattah and dechter  1 . the main differences concern the fact that we are focusing on abductive diagnosis on causal/behavioral models rather than on consistencybased diagnosis on structural/behavioral models; moreover  modeling the type of diagnostic problems we discussed here with the dual graph technique proposed in  elfattah and dechter  1  is likely to produce complex cycles in the graph  making the problem computationally hard in general. 
　strategies based on heuristic search  in particular bfs  have also been proposed both in logical  consistency-based   de kleer  1  and in probabilistic characterizations  biswas et al  1; peng and r.eggia  1 ; in both cases  even when more sophisticated bayesian methods are applied   search is performed on 
for all the solutions; in the examples we tested the algorithm is always able to find at least one solution within the timeout. 
the space of elementary assignments of behavioral modes to components  potentially producing an explosion of the number of possibilities to be examined; our approach aims at avoiding this by means of scenarios. 
acknowledgments 
the research described in this paper has been funded by asi under grant n. 1. partners in the project are ip-cnr  irst-itc  universities of genova  palermo  parma  roma and torino. we thank gianlucacorrendo for his valuable work in developing the prototype of the diagnostic system. 
