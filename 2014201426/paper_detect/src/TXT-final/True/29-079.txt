 
this paper deals with the intelligent exploration of an unknown environment by autonomous robots. in particular  we present an algorithm and associated analysis for collaborative exploration using two mobile robots. our approach is based on robots with range sensors limited by distance. by appropriate behavioural strategies  we show that odometry  motion  errors that would normally present problems for mapping can be severely reduced. our analysis includes polynomial complexity bounds and a discussion of possible heuristics. 
1 introduction 
the problem of exploring an unknown environment and constructing a map is central to mobile robotics. the ability to build an internal representation of the environment is also critical to most intelligent organisms. existing approaches that have been proposed for this problem range from idealized solutions involving perfect virtual robots to practical solutions of indeterminate complexity with real robots. the range of environment and terrain types that have been considered has been similarly varied. these range from sets of polygons on the plane and abstract 1d shapes used in geometric explorations  up to real world environments  such as office buildings  lunar surfaces  underground mines  and underwater terrains. this work deals with questions of efficiency and feasibility from a theoretical standpoint. we model the world as a collection of closed 1-dimensional curves. for simplicity  we approximate free space as a polygon with holes  and then we extend the work to general shapes. 
　the simplest robot that can perform exploration is one equiped only with a contact sensor and internal odometry sensors. in this case  an environment can be explored  assuming free space is entirely reachable  by having the robot traverse a space filling-curve  covering the whole free space while avoiding obstacles on the way. the obvious disadvantages of this approach are: 
1 	robotics 
  the long path length that must be traversed  of in-finite length for a point robot  of finite length for a robot of finite size or sensing range ; 
  the inaccuracy of the map due to accumulated po-sition errors  dead reckoning error . 
　in the case of an ideal robot with no odometry error and an ideal range scanning sensor  lumelsky  lumelsky et al.  1  was one of the first to develop provably correct exploration strategies  which fully map every object in the environment by circumnavigating it. other techniques  rao  1; oommen et a/.  1   representative of existing approaches  assume a polygonal world  which the robot maps by traversing the visibility graph ensuring every part is visited. other idealized models deal with the world at a purely topological level  deng and mirzaian  1; kuipers and levitt  1 . experimental approaches to environment exploration have also been developed  balch and arkin  1; walker et a/.  1; bulata and m.devy  april 1; 
elfes  1   demonstrating satisfactory performance in limited environments but without a performance guarantee. in contrast to these approaches  we present theoretical results but deal explicitly with the need to compensate both for odometric error and for sensing the accuracy of which deteriorates with increasing distance. we compensate for these problems by using multiple cooperating robots to explore the environment. 
　the organisation of this paper is as follows. in section 1 we present the description of the world and the robot model. in section 1 we analyze the advantages of cooperative robots versus a single one. in section 1 an algorithm for exploring large areas  compared to the sensing range of the two robots  is presented. in section 1  a performance analysis is presented  and in section 1 the triangulation algorithm for exploring small areas is analysed. section 1 has the conclusions and suggests possibilities for future work. 
1 model description and terminology 
a fundamental model for the world is a simple polygon in 1d with holes. a polygon is simple if there is no pair of non-consecutive edges sharing a point  preparata and shamos  1 . the model of the world is essentially a set of simple polygonal obstacles contained within a larger polygbnal boundary. 

figure 1: accurately tracking the position of a moving robot. 
　our model for robots is minimal but easily generalized: robots are points that can move in any direction  and they are equipped with two sensors. the first sensor is an object detector  able to detect any object in the immediate vicinity of the robot. the object detector allows wall following and object avoidance  and  in practice  the detector would be implemented by a sonar ring  an infra-red device  or even a tactile sensor. the range of the object detector is limited. the second sensor is a robot tracker  with the ability to locate another robot when there is a free line of sight between them  and to report accurately the distance to the second robot and its orientation. examples of this type of sensor are a vision system that could locate a pattern on the other robot  dudek et a/.  1   see figure 1  or a laser range finder with a retroreflective target on the other robot. we assume that the range of the robot tracker is much larger than that of the object detector  i.e.  we can see further than we can reach . 

	 a  	 b  
figure 1:  a  trapezoidation of a simple polygon with holes.  b  triangulation of the same polygon. 
　the robots explore the unknown environment by progressively covering free space in the polygonal world. several planar decompositions have been proposed in the computational geometry literature  o'rourke  1; preparata and shamos  1 . although they apply to worlds that are completely known  they can be used as a starting point to develop  on-line  versions that construct the decomposition as part of the exploration process. the advantage offered by this approach is guarantee of full coverage without duplication  and a standard description for use in higher level reasoning. 
　one such systematic method is to cover free space with trapezoids  see figure 1a. 1 an alternative decomposition of a simple polygon is by triangulation. the interior of the polygon is decomposed into triangles without adding vertices by using non-intersecting diagonals  see figure 1b . 1 
1 w h y use multiple robots  aren't single robots trouble enough   
the use of multiple agents provides distinct advantages over single-agent systems in several contexts  this lesson has not been ignored by many insect species . the design of a robust error-free general-purpose range sensor has remained a difficult challenge. in general  high accuracy entails a limited range of operation for most devices. this in turn imposes serious constraints on the classes of mapping algorithm a robot can execute. it is possible in many applications to consider the robot and its sensor range as a point or a small disk that covers the space by moving through it. in that case the overall path necessary to be travelled before the whole map is constructed defines an area-filling curve swept by the robot/sensor system. 
　on the other hand  having one robot of a two-robot team observe and track another cooperating robot is a comparatively simple task  since there is no need to measure reflected energy from unpredictable materials in the environment  as is the case with a range sensor . if we use a pair of robots with the above described tracking sensors  then by moving one of them across the base of a triangle  for example ab  with the other at the opposite corner  for example c   they would map as free the area inside the triangle where the distance of c to ab  by travelling only the distance d =  ab . this can constitute an arbitrarily large improvement over a space-filling sweep algorithm1. 
　another major problem that arises in practice is odometry error. due to imperfections in the construction of a real robot and the properties of the environ-
   *for a simple polygon known a priori there are algorithms that construct the trapezoid decomposition in worst case 1 n log n   time. 
   1  the worst case time complexity of triangulating a known polygon is o n   chazelle  1 . 
   1 in practice  even line of sight tracking is range limited and can be described as a sweep  but in this case the sweeping figure can be extremely large. 
rekleitis  dudek  & milios 

ment  mobile robots cannot avoid building up small errors in their position and orientation estimates when they move. after several steps  the robot's estimate of its position can be very different from the actual position. the traditional self-contained solution for the localisation problem is to correct the robot's position estimate by making reference to external landmarks observed using the robot's sensors. detecting and recognizing landmarks is a difficult task in general  especially when the environment is much larger than the sensing range  and therefore the landmarks are far apart from each other. 
　in our work  two or more robots are used in conjunction to limit the size of odometry errors. this is accomplished by having only one robot move at any time  while the other robot s  observes it. this allows the stationary robot to track the moving one and measure its position with higher accuracy than using simple dead reckoning. later on  the roles are reversed: the robot that had been moving becomes the observer while another robot can move. this approach reduces the odometry error and guarantees better performance than a single robot. 1 for now  full communication is assumed  as the moving robot can obtain its current position from the observer's at any time  dudek et al.  1 . this allows positioning to be accomplished based on the observing robots positions and independent of any environmental characteristics. 
1 exploring a large environment with two robots 
when the size of the free space is much larger than the sensing range of the robots  then the trapezoid decomposition guides the exploration strategy. at any time only one robot moves  and it maps a part of the free space; then the two robots exchange roles; then the other robot moves with another part of the free space being mapped. the exploration algorithm consists of two logical parts: the local exploration  which sweeps a horizontal stripe of free space inside one trapezoid  and the global one  which connects the stripes together and decides which part to explpre next. 
1 local exploration 
when one robot moves in a straight line  then the area mapped has the shape of a triangle as in figure 1. if the only parameter to be optimized was the total path traveled  then each robot would move by a at distance d = r  and then the two robots would exchange roles and the other one would move by a   continuing in this way up until they reach a wall. in terms of path travelled  the algorithm would be optimal because each time 
   the corrections from the stationary robot could be combined with the dead reckoning technique  using kalman filtering to give more accurate estimates. 
1 	robotics 

figure 1: area covered when one robot moves in a straight line. 
they cover the maximum area possible  and no area is covered twice. unfortunately  the exchange of roles has some cost  associated with acceleration/deceleration and location update. therefore  the number of exchanges should be taken into account. we model the cost as a function of the angle  as in figure 1. the simplest way to explore a stripe is by moving the robots into two parallel lines  at a distance appropriate for the number of exchanges that are considered acceptable  the closer they come the smaller the number of exchanges . in this model  each time one robot moves a triangular area is covered. table 1 presents the number of exchanges  the total path travelled  and the number of rotations for the exploration of a rectangular area xy. while that algorithm has good performance  it is not optimal in terms of path length or the number of exchanges. the optimal length path  rekleitis et a/.  1  occurs when the two robots explore the maximum area possible at any time without overlaps. an example of the optimal path can be seen in figure 1  where the area explored each time is forming a diamond shape  table 1 
presents the number of exchanges  the total path travelled  and the number of rotations for the exploration of a rectangle xy  when each robot move covers a diamond shaped area. 
　more precisely  in the example in figure 1  the two robots are  awakened  at time to next to each other. after an initial scan of the environment  the robot r1 moves away from robot r1  which remains stationary until r1 reaches a distance d = r  distance that gives the maximum covered area while accurately locating the position of r1   time t1 . then the robot r1 moves to a new position  time t1   mapping the area t1tx1 as free space. consequently  the robot r1 becomes stationary and the robot r1 maps a new area t1t1  time t1 . then they exchange roles again and continue. when the 
two robots reach the end of the stripe   time tn   they move to the new positions  and explore the next stripe in the opposite direction. it is worth noting the effect of the reflex vertices in the order of exploration. 
1 global exploration 
the order in which the stripes are explored is given by a depth first search algorithm. from the collection of 


figure 1: exploration of a large storage space. 
the stripes we construct the dual graph by matching every explored stripe to a vertex of the graph and every pair of adjacent stripes to an edge connecting the two corresponding vertices. at any point  after visiting a node in the graph  in other words  after exploring the corresponding stripe of free space   there are a maximum of two choices  except for the initial step  for which stripe/node is to be explored next. in general every stripe is connected to one above and one below. if  during the exploration  a robot encounters a reflex vertex  1 then a decision point is introduced and consequently an extra edge is added on that node  see figure 1 . every time a reflex vertex is encountered a decision is made  and one branch of the graph is followed. in our approach a depth first search strategy is used in order to determine which edge of the dual graph the robots are going to follow in the exploration. it is worth noting that  in order to have.optimal results  the deepest branch of the graph should be explored last  but without a-priori knowledge this is impossible to determine in advance. various heuristics could be applied  such as exploring the narrowest or the widest opening first  depending on previous environmental knowledge. regarding the complexity of the dual graph  if the environment has obstacles in it  modeled as holes in the simple polygon   then the graph contains cycles; otherwise it is a tree. 
　the area exploration problem now is equivalent to a graph exploration  and the complexity  in terms of robot edge transitions  is linear in the number of reflex vertices in the environment. 
     1 for a single polygon p a reflex vertices are the concave vertices. for obstacles  inside the polygon  reflex vertices are the convex vertices of the obstacle  see for example figure 
1 . 

figure 1: stripes to graph modeling 
1 	m o r e than two robots 
an immediate extension of the previous algorithm can be obtained by the addition of more robots. when the two robots sweep one stripe of width d then by adding an extra robot  1% increase  we could double the area swept. in the original algorithm  every robot has only one device to track the other robots; in this case a scheduling algorithm should be applied in the order the robots are moving. if we add a second tracking device  one robot could track robots on both sides  allowing a parallel cover of double the area at the same time. 

figure 1: exploration of a stripe with 1 robots. 
in the example in figure 1 we use five robots 
 r1 ... r1  that are positioned in two lines at time to  and we assume that each robot can track only one other robot at a time. first the robots r1 r1 move forward  tracked by r1 and r1 accordingly  mapping the two triangles as free space  then both r1.r1 track r1  which moves forward at the position  marked as time  t1. then it is time for the next column of robots  r1  r1  to advance  one at a time due to the tracking devices   marking more area as free space. the tracking is marked with the dotted lines of sight. the same pattern is followed as the two columns alternatively advance  marking a stripe 
rekleitis  dudek  &' milios 


table 1: analytical complexity of two different path curves. 
of free space much wider than that possible with only two robots. 
　the second part of the algorithm concerning the exploration strategy for the whole space and the order in which the trapezoids should be explored is identical to the previous algorithm where only two robots were used.1 
1 complexity analysis 
the algorithm consists of two states: the local exploration of a stripe  and the global exploration that determines the order in which the adjacent stripes are explored. consequently the complexity of the algorithm reflects these two states. the exploration is performed in stripes that are covered one after the other  forming trapezoids. the trapezoids then are joined together to form the complete map. the total travel of the two robots while they explore new space is the sum of the perimeters of the different stripes. for a single rectangle  analytical results are given in table 1. details of this procedure and associated bounds appear elsewhere  rekleitis et al.  1 . the second quantity is the net travel inside known territory to visit the boundaries of the unmapped territory. this is a function of the number of reflex vertices of the free space polygon  given by a depth first search algorithm . the trapezoid decomposition covers all of the free space with a finite number of stripes  trapezoids . the algorithm methodically explores every one of these stripes  and it never repeats the exploration. therefore  after the two robots explore all the stripes the algorithm is guaranteed to terminate with a complete map. 
1 small environments - triangulation 
this specialized algorithm operates in an environment where the visual sensing range is at least as large as the 
　　1 there is a possible speedup by splitting up the group in order to explore different parts in critical points  but that would in the end spread the robots too thin. 
1 	robotics 
diameter of the polygon. the output of this algorithm is a map of the free space decomposed into triangles. 
　our proposed exploration algorithm starts from an arbitrary position in the environment and proceeds to map it as a set of convex polygon/shapes of free space connected as a graph  in the case of a simple polygon with holes  or as a tree  in the case of a simple polygon. as an initial step  the two robots sense the closest wall proceed to move to it and position themselves in opposite corners. the triangulation algorithm then moves one robot by following the walls  maintaining line of sight contact with the other robot  which remains stationary at a corner of the polygon. again the complexity increases linearly with the number of reflex vertices. every triangle represents a node in the dual graph  and adjacent triangles represent edges among the corresponding nodes. every time the line of sight is broken by a reflex vertex  a decision is made and another edge is added to the graph. the total path traveled again depends on two measures. the exploration cost is equal to the perimeter of the polygon. the cost of traversing some edges of the path twice  is linear with the number of reflex vertices  and the path length is bounded by the maximum distance between any two points in the polygon for every edge traversed twice. 

figure 1: triangulation like exploration of an unknown environment. the general algorithm. 
　an example is presented in figure 1  the two robots start at the two positions marked to  and robot r1 then starts exploring the free space  following the walls of the polygon up until the line of sight is broken by a reflex vertex upon which it switches roles with robot r1. all of the free space is mapped  except for the areas in. which a bifurcation in the sweep was forced due to a reflex vertex. 


figure 1: triangulation-like exploration of an unknown environment. cleaning-up the leftovers. 
figure 1 illustrates the final stage of the algorithm which is used to map the remaining areas. the robots plan their path through the mapped area for the fastest route that will take them to the unmapped areas and then proceed to reach these areas and explore them. 
　in the general case  the two algorithms should be used together: when the robots approach a closed space where they can  see  each other from wall to wall  the triangulation algorithm should be used to map it. when they move into an open area  the trapezoid decomposition algorithm should then be used to sweep the area. 
1 conclusions 
different techniques for mapping the environment have been used since ancient times in egypt and rome. most of them involved collaboration among different observers in order to improve their accuracy. in this paper  a new algorithm for exploring an unknown environment is proposed. our algorithm uses a well-known planar decomposition form in order to systematically explore the free area of of an unknown environment modelled as a simple polygon with holes. the trapezoid decomposition is used for large areas ensuring an exploration strategy that finishes with the total free space mapped as a set of trapezoids. for small areas  a triangulation of the free space is returned. 
　realistic assumptions  such as odometry error  and sensing that deteriorates with distance  are used. both algorithms return a complete map  while a single robot would encounter great difficulties in such a case. the approach acts to minimize the effects of inherent navigation errors  while providing a performance guarantee  unlike heuristic methods . we are currently involved in experimental evaluation of these algorithms. 
