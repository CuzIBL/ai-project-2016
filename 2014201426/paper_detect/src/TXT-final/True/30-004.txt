 
this paper presents new complexity results for propositional closed world reasoning  cwr  from tractable knowledge bases  kbs . both  basic  cwr  generalized cwr  extended generalized cwr  careful cwr and extended cwr  equivalent to circumscription  are considered. the focus is laid on tractable kbs belonging to target classes for exact compilation functions: blake formulas  dnfs  disjunctions of horn formulas  and disjunctions of renamable horn formulas. the complexity of inference is identified for all the forms of cwr listed above. for each of them  new tractable fragments are exhibited. our results suggest knowledge compilation as a valuable approach to deal with the complexity of cwr in some situations. 
1 	introduction 
closed world reasoning  cwr  is a widely used inference technique in artificial intelligence  database theory and logic programming. it relies on the idea that negative information is often not represented in an explicit way; in this situation  every piece of positive information which cannot be deduced from a knowledge base  kb  is assumed false. 
　in order to define cwr in a formal way  an approach consists in characterizing the formulas which must be assumed false in the kb: cwr is then viewed as deduction from the closure of the kb  i.e.  the kb completed with these assumptions. several policies for characterizing such assumptions have been developed so far  giving rise to several forms of cwr. let us mention the  basic  closed world assumption  cwa   reiter  1   the generalized closed world assumption  gcwa   minker  1   the extended generalized closed world assumption  egcwa   yahya and henschen  1   the careful closed world assumption  ccwa   gelfond and przymusinska  1   and the extended closed world assumption  ecwa   gelfond et a/.  1 . the most sophisticated closed world assumption is ecwa; in the propositional case  gelfond  przymusinska and przymusinski 
1 	automated reasoning 
 show it is equivalent to circumscription  as defined in  mccarthy  1 . 
　the complexity of propositional cwr has already been investigated by several researchers. eiter and gottlob  show that cwr is hard in the general case: typically at the second level of the polynomial hierarchy. cadoli and lenzerini  focus on the complexity of cwr from various fragments of propositional logic for which clause deduction is tractable  especially the horn cnf class  the reverse horn cnf class and the 
krom one. for such classes of formulas  the complexity of cwr falls one level down in the polynomial hierarchy. 
　the aim of this paper is to complete the complexity results pointed out in  cadoli and lenzerini  1  by focusing on some other tractable fragments of propositional logic. especially  four classes are considered: 
  the blake class is the set of formulas given in prime implicates normal form  
  the dnf class is the set of formulas given in disjunctive normal form  dnf   
  the horn cover class is the set of disjunctions of horn cnf formulas  
  the renamable horn cover class is the set of disjunctions of renamable horn cnf formulas. 
　as a main contribution  the complexity of clause inference is identified for each form of cwr and each tractable class listed above. several new tractable subcases are exhibited for each form of cwr; some new intractable subcases are presented as well. 
　interestingly  our tractability results for cwr apply to classes of formulas strictly more expressive than some of the most expressive tractable fragments for cwr pointed out up to now. in particular  some of the classes we focus on include classes considered in  cadoli and lenzerini  1  as strict subcases. additionally  the fragments we consider are target classes for exact knowledge compilation functions. thus  every propositional formula can be turned   compiled   into a formula from the blake class  the target class for the compilation function given in  reiter and de kleer  1    the dnf class  the target class for the function given in  schrag  1    the horn cover class and the renamable horn 

cover class  which are specific instances of the class of tractable covers considered in  boufkhad et al  1   . since cwr from such tractable formulas is shown computationally easier than cwr from unconstrained formulas  our study suggests a two step approach to compute cwr: the kb is first compiled off-line  giving rise to a formula from one of the target classes  then queries are addressed on-line w.r.t. the compiled kb. while such a pre-processing is known as not computationally helpful in the general case  our results indicate that it can prove valuable when cwr from the compiled kb can be achieved in polynomial time  as long as the kb does not often change and the size of its compiled form remains  small enough . 
　the rest of this paper is organized as follows. some formal preliminaries are given in section 1. basic definitions and complexity results about cwr are recalled in section 1. section 1 presents the complexity of cwr for each of the fragments we focus on. section 1 concludes the paper. proofs are given in  coste-marquis and marquis  1  available from the authors. 
1 	formal preliminaries 
propps denotes the propositional language built up from a denumerable set ps of symbols and the connectives in the standard way. the size of a formula  from propps  noted  is the number of signs  symbols and connectives  used to write it. every propositional symbol of ps is also called a positive literal and a negated one a negative literal. for every subset v of ps   resp.  is the set of literals  resp. positive literals  negative literals  built up from the propositional symbols of v. var denotes the set of propositional symbols occurring in 
　formulas are interpreted in the classical way. every set of formulas is interpreted conjunctively. a formula is horn cnf  resp. reverse horn cnf  iff it is a cnf formula s.t. every clause in it contains at most one positive  resp. negative  literal. a krom formula is a cnf formula in which every clause contains at most two literals. a renamable horn cnf formula is a cnf formula which can be turned into a horn cnf formula by substituting in a uniform way in  some literals of by their negation. 
　　we assume that the reader is familiar with some basic notions of computational complexity  especially the complexity classes p  np  and conp  and the classes and  of the polynomial hierarchy ph  see  papadimitriou  1  for details . the class  contains the decision problems which can be solved in polynomial time with no more than 1 log n  calls to an oracle for deciding a problem q  x for  free   i.e.  within a constant time    representing the size of the problem instance. let us recall that a decision problem is said at the level of ph iff it belongs to  and is either 
   -hard or -hard. it is strongly believed that ph does not collapse  at any level   i.e.  is a truly infinite hierarchy  for every integer 
1 	closed world reasoning 
all the forms of cwr pointed out so far can be characterized through the notions of closure and free for negation formula. a clause  is then considered as a  non monotonic  consequence of a kb  interpreted under some closed world assumption policy *cwa  where the generic character * can be replaced by g  eg  cc  e or the empty string  iff it is a logical consequence of the closure of  wr.t. the policy. both the ccwa and ecwa policies require var  Σ  to be partitioned into three sets  p  q  and z. p contains the symbols preferred false  z contains the symbols the truth value of which can vary when trying to falsify the symbols from p  and q contains the symbols the truth value of which cannot vary. 
the *cwa-free for negation formulas w.r.t. 
negations of the formulas which are assumed false when they are not deducible from they vary according to the closed world assumption policy under consideration: 
definition 1  *cwa-free for negation formula  
let  and 	be two formulas from propps and let  p q z  be 	partition of var 
  is cwa-free for negation iff  is a positive literal 
	s.t. 	holds. 
  gcwa-free for negation iff is a positive literal and for each positive clause holds   holds. 
   is egcwa-free for negation iff a is a conjunction of positive literals and for each positive clause 
   let us note that every symbol not belonging to var is cwa  gcwa and egcwa-free for negation. as to ccwa and ecwa  every symbol from ps  is assumed to belong to p. 
　in the rest of this paper  the following decision problems are considered: 
definition 1  *cwa clause inference  
let *cwa be any closed world assumption policy among 
     1 the partition of var is not significant for the cw a  gcwa and egcwa policies. 
	coste-marquis and marquis 	1 

 basic cwa  gcw a egcw a ccw a ecw a 
*cwa giauee inference is the following decision 
  input: a formula and a clause frompbopps  a partition and cwa policy 
*cwa. 
  query: does 
　　*cwa literal inference is the restriction of the corresponding *cwa clause inference problem where is restricted to be a literal 
　the complexity of propositional cwr has been investigated by several researchers  especially eiter and gottlob  and cadoli and lenzerini . cwr has been shown hard: all the forms of cwr except basic cwa are at the second level of the polynomial hierarchy. thus  cwr is computationally harder than deduction in the general case  clause deduction is  only  conp-complete   unless ph collapses. 
　in order to circumvent this complexity  several approaches can be considered. one of them is centered around the idea of exact knowledge compilation. knowledge compilation can be viewed as a form of preprocessing  see  cadoli and donini  1  for a survey : the original kb is turned into a compiled one during an off-line compilation phase and this compiled kb is used to answer the queries on-line. assuming that the kb does not often change and that answering queries from the compiled kb is computationally easier than answering them from the original kb  the compilation time can be balanced over a sufficient number of queries. 
　　existing researches about knowledge compilation can be split into two categories. the first category gathers theoretical works about compilability  which indicates whether or not the objective can be expected to be reached in the general case by focusing on the size of the compiled form  see e.g.   cadoli et a/.  1a; liberatore  1  . indeed  if the size of the compiled form is exponentially larger than the size of the original kb  significant computational improvements are hard to be expected. some decision problems are compilable  while others are  probably  not compilable. thus  clause deduction  from a fixed kb  is  probably  not compilable: the existence of an equivalence-preserving compilation function comp s.t. it is guaranteed that for every propositional cnf formula clause deduction from comp Σ  is in p and is polynomial  bounded in  would make ph to collapse at the second level  see  kautz and selman  1: cadoli et a/.  1a  for more details . the second category contains works that are much more oriented towards the design of compilation algorithms  and their empirical evaluations  see e.g.  reiter and de kleer  1; schrag  1; boufkhad et a/.  1; boufkhad  1  . 
　the compilability of cwr has been analyzed in depth in  cadoli et a/.  1; 1b . the results are typically negative. in a nutshell  inference under ecwa from a fixed kb is shown  probably  not compilable. contrastingly  it is shown that cwa clause inference 
automated reasoning 
and ccwa clause inference from horn cnf reverse horn cnf or krom formulas are compilable  the fixed part of the problem is the kb plus the partition in the ccwa case . 
　from the practical side  nerode  ng and subrahmanian  present an algorithm for compiling a kb interpreted under circumscription into the set of its minimal models. the algorithm is based on a mixed integer linear programming. the circumscription policy  i.e.  the partition of the symbols  is fixed. several other approaches show how cwr can be reduced to deduction through the computation of the closure of the kb  or the computation of any equivalent formula   see e.g.  raiman and de kleer  1; castell et al.  1 . all these approaches confirm the 
 probable  non compilability of the most sophisticated forms of cwr in the sense that in the worst .case* the compilation phase outputs a formula that is not polyno mially bounded in the size of the original kb. 
1 	complexity results 
in the following  the complexity of cwr is investigated for some kbs for which clause deduction is tractable  tractable kbs for short : 
definition 1  some tractable classes  let be a formula from propps. 
of terms. 
t  is a horn cover formula iff  is a  finite  disjunction of horn cnf formulas. 
   m a renamable horn cover formula iff  is a  finite  disjunction of renamable horn cnf formulas. 
　blake formulas  blake  1  are cnf formulas given by their prime implicates. clearly enough  they are tractable since for every clause  holds iff there exists  in  s.t.  holds and this test can be easily achieved in time polynomial in  indeed  many algorithms for computing prime implicates have been proposed so far  see  marquis  1  for a survey . 
　dnf formulas are tractable since for every clause 1   holds iff for every term holds and this test can be easily achieved in time polynomial in 
 several algorithms for turning a formula into dnf can be found in the literature  e.g.  schrag  1 . 
　horn  resp. renamable horn  cover formulas are tractable since for every clause  holds iff for every  holds and this test can be easily achieved in time polynomial in  when is a horn cnf formula  dowling and gallier  1   resp. a renamable horn cnf formula  lewis  1  . note that horn cnf formulas and renamable horn cnf formulas can be recognized  and checked for satisfiability  in polynomial time. note also that every 

term is a llcte c  mula and every satisfiable krom formula is a renamable horn cnf formula  and every twta  resp. horn cnf formula  renamable horn cnp formula  is a dnf formula  reap: a horn cover formula  a renamable horn cover formula . hence every dnf formula is a horn cover formula and every horn cover formula is a renamable horn cover formula. algorithms for computing horn cover formulas and renamable horn cover formulas can be found in  boufkhad et al  1; boufkhad  1 . 
the next proposition is the central result of this paper: 
proposition 1  complexity of cwr  
the complexity of *cwa 	clause 	inference and 
*cwa literal inference from a blake formula  a dnf formula  a ham cover formula and a renamable horn cover formula is reported in tables 1 and 1. 
　intuitively  the fact that cwr typically is at the second level of ph can be explained by the presence of two independent sources of complexity. one of them lies in deduction and the other one in model minimization. as proposition 1 illustrates it  focusing on tractable kbs enables ruling out one source of difficulty in the general case  and both sources in some specific cases. 
　this work can be related to several studies in which the complexity of non monotonic inference from tractable fragments of propositional logic is analyzed  for instance  kautz and selman  1; cadoli and lenzerini  1; ben-eliyahu and dechter  1 . cadoli and lenzerini  investigate the complexity of cwr from horn cnf  reverse horn cnf and krom formulas. interestingly  the tractable classes for cwr we consider are strictly more expressive than some of the most expressive tractable classes pointed out up to now. especially  they include some of the tractable classes given in  cadoli and lenzerini  1  as subcases. thus  every krom formula can be turned into its prime implicates normal form in polynomial time  just because a set of binary clauses has a polynomially bounded number of resolvents . additionally  every horn cnf formula belongs to the horn cover class. however  the converse does not hold: the fragments studied here are strictly more expressive that those given in  cadoli and lenzerini  1 . for instance  every monotonic cnf formula  i.e.  a cnf formula in which every symbol occurs only positively or negatively  can be put into prime implicates normal form in polynomial time but is not equivalent to a horn cnf or a krom formula in the general case. 
　another significant difference w.r.t.  cadoli and lenzerini  1  is that our study is directly related to exact knowledge compilation in the sense that the fragments 
　　1  some treatability results reported in the two tables can be generalized to any tractable kb. to be more precise  cwa clause inference and both ccwa clause inference and 
bcwa clause inference under the restriction are in 
p whenever belongs to a class for which clause deduction is tractable. 
of propositional logic we consider are target classes for exact compilation functions. thus  every propositional formula can be turned into a blake formula  a dnf formula  a horn cover formula and a renamable horn cover formula without modifying the set of its models. this contrasts with the fragments considered in  cadoli and ijenzerini  1  since some formulas cannot be represented either as a horn cnf  a reverse horn cnf or a krom formula while preserving logical equivalence. 
　accordingly  the tractability results given in proposition 1 can be exploited to draw some new conclusions about the usefulness of knowledge compilation for cwr. from the theoretical side  the comoilability results for 
cwr given in  cadoli et al.  1  can be completed at the light of our results. indeed  every polynomially solvable problem is compilable  even if its fixed part is empty since the compilation phase can be achieved in polynomial time. more interestingly  from the practical side  the connection with knowledge compilation suggests a two step process for computing cwr: the kb is first made tractable through knowledge compilation  then cwr is achieved from the compiled kb. the first step is performed off-line and done once at all  unless the kb is modified . using such an approach  the closed world assumption policy adopted can vary with the queries that are considered; for instance  the set of symbols to be minimized can change with time  without requiring the kb to be re-compiled each time such a modification occurs. this flexibility is particularly interesting when the kb  representing  hard constraints  is shared by several agents  and different agents may have different preferences  encoded as a cwa policy. each time an agent asks the kb  the corresponding preferences can be taken into account without requiring any re-compilation of the kb. 
　at the light of the complexity results given in proposition 1  our claim is that some approaches to knowledge compilation can prove helpful in practice for some forms of cwr  provided that the compiled kb remains 
u
 small enough . for instance  compiling a kb into a horn cover formula so as to interpret it under egcwa reduces the complexity of inference from complete to p. thus  if the compilation phase does not result in an exponential blow up in the size of the kb  the time needed for inference from the compiled kb can be much lower than the corresponding time from the original kb; subsequently  the compilation time can be balanced. let us stress that our claim concerns some specific cases only  not the general one: since cwr is  probably  not compilable  cadoli et a/.  1; 1b   knowledge compilation cannot be expected as valuable for improving cwr in the general case. nevertheless  it is worth noting that  while compilability results for cwr are mainly negative  they do not prevent from exhibiting some instances for which knowledge compilation proves helpful. accordingly  many experiments with various compilation functions show the practical utility of such an approach for improving clause deduction  see e.g.   schrag  1; boufkhad et ai  1    though the problem is known as 
	coste-marouis and marquis 	1 


table 1: the complexity of cwr from some tractable kbs. 

 probably  not compilable. our results show that  in the many situations in which some compilation techniques are computationally profitable for clause deduction  they can be profitable as well for some forms of cwr  with only a polynomial extra cost. 
1 	conclusion 
in this paper  the complexity of cwr has been investigated for some tractable fragments of propositional logic. several new tractable cases have been identified  and some new intractability results have been provided as well. interestingly  the tractable fragments we have focused on are target classes for some compilation functions; such a connection with exact knowledge compilation can prove valuable from a computational point of view in the situations in which the size of the compiled kb remains  small enough . 
　due to close connections between cwr and abduction and between cwr and some simple forms of default reasoning  complexity results for these additional forms of non monotonic inference from tractable kbs can be derived from the results presented in this paper. this is an issue for further research. 
acknowledgements 
this work has been supported by the ganymede ii project of the  contrat de plan letat/region nord pasde-calais . 
