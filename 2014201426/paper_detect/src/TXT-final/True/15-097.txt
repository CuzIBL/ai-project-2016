 
a general method for the inference of r e cursive functions  programs  from examples of computations is described. it is based on the so called algebraic semantics of recursive program schemes and in this paper mainly applied to the representation and induction of i n f i n i t e concepts 
and recursive action sequences  which are of importance for problem solving and hierarchical planning . a d d i t i o n a l l y   the use of recursive program schemes leads to 
a new p r i n c i p l e of generalization in the sense that families of structures or classes of programs could be treated simultaneously and that already existing solutions of old problems could be transferred to new problems which have to be 
solved. 
1 . introduction 
program synthesis by induction as opposed to program synthesis by deduction from 
input-output specifications becomes a matter of increasing interest in ai and computer science. in this f i e l d much work has dealt with the synthesis of lisp programs from examples of computations / 1 /   / v   / 1 / . 
we are interested on the one hand in the development of a general formalism not depending on a specific programming l a n guage and on the other hand in the induction of certain i n f i n i t e concepts and r e -
cursive action sequences extending in this way our e a r l i e r work on concept learning / 1 /   / 1 / . by i n f i n i t e concepts 
we mean classes of strings and other 
stuctures having some i n t r i n s i c p e r i o d i c i t y  in pattern recognition only feature vectors of fixed dimensionality have been considered so f a r   . our method is based on the so called algebraic semantics and recursive program schemes /1/  / 1 / and it 
is intended to provide a general frame-
work for the abovementioned representation and induction problems* the induction 
p r i n c i p l e we introduce in t h i s paper is a 
more general version of summers' main synthesis theorem / 1 / . our main aim is to 
apply it to the representation and induct i o n of recursive action sequencee from 

1 f. wysotzki 

f. wysotzki 1 

1 f. wysotzki 

f. wysotzki 1 


1 f. wysotzki 
/ 1 / courcelle  b.; nivat  m.  the algebraic semantics of recursive program schemes*  i n : math. found. of comp. science 1  winkowski eds. . lecture notes in comp* sciences vol 1  springer-verlag  new york 1  1. 
/ 1 / jouannaud  j p.  guiho  g.  inference of functions with an i n t e r a c t i v e system*  machine i n t e l l i g e n c e 1  1  1. 
/ 1 / jouannaud  j. p.  kodratoff  y.  characterization of a class of functions synthesized from examples by a summers-like method using the  b.m.w.  matching technique.  in proc. 1  idcai  tokyo 1. 
/ 1 / summers  ph. d.  a methodology for lisp program construction from examp l e s .   1. acm 1  1   1. 
/ 1 / unger  s.; wysotzki  f.  lernfahige klassifizierungssysteme.  akademieverlag  berlin 1. 
/ 1 / wysotzki  f.; kolbe  w.; selbig  j.  concept learning by structured examples - an algebraic approach.  i n : proc. 1. ijcai  vancouver 1. 
