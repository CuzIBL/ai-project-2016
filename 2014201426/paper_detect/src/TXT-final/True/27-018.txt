 
in previous work  bennett 1 dejong and bennetl 
1  we proposed a machine learning approach called permissive planning to extend classical planning into the realm of real world plan execution our prior results have been favorable but empirical  bennetl and dejong 1  here we examine the analytic foundations of our empirical success we advance a formal account of realworld planning adequacy we prove that permissive planning does what it claims to do it probabilistically achieves adequate real-world performance or guarantees that no adequate real-world planning behavior is possible within the flexibility allowed we prove thai the approach scales tractably we prove that restrictions are necessary without them permissive planning is impossible we also show how these restrictions can be quite naturally met through schema based planning and explanation-based learning 
1 introduction 
　real-world execution of classical plans can be problematic small but unavoidable discrepancies between the system s representations and the real world often conspire to cause real world failure we adopt a model of real world planning adequacy next we discuss planner bias an inescapable facet of classical planning we show that through adjustment of planner bias real world adequacy can be achieved the adjustment process called permissive planning is empirically guided thus it is a form of machine learning in permissive planning the planners domain theory and projection capabilities remain unchanged through bias adjustment the real-world manifestation of produced plans are brought into line with projection according to the micro world 
1 planning and real-world adequacy 
　a classical planner can be viewed as accreting constraints until the set of action sequences consistent with the 
constraints are all believed to solve the planning problem we term a classical planner together with its declarative world model  its operator definitions etc   a planning s item a planning domain is a source ot planning problems together with some real world interface we model the planning problems as an unlimited sequence whose elements are randomly generated by the world according to 
this research was sponsored in part by the office of 
naval research under grant n1-1 -1 
some fixed but unknown distribution over a universe of well-formed problems the real-world interface must minimally be able to execute a plan and report whether the goal of the planning problem is satisfied in the resulting 
stale 
　the planning system is applied to domain problems in sequence for each problem the planner expends up to some fixed resources and either offers a solution or choose not to offer a solution  by outputting the special symbol 
　we say a plan isolves  solves according to the system s own internal model of the world  a planning problem if the initial state projected through the plan satisfies the problems goal the plan esolves  solves according to the external world  a planning problem if the real-world state that results when the plan is executed from the problems initial state satisfies the problems goal likewise a planning system isolves  or esolves  a problem il the plan it produces isolves  or esolves  the problem 
definition the adequacy of a planning system p over a universe of problems u randomly sampled according to 

　each contribution is weighted by the probability of encountering the problem according to the distribution adequacy improves if an offered plan actually works in the real world producing a bad plan cannot be better  and may be worse  than producing no plan at all 
1 planner bias space 
　planner bias is the preference  exhibited bv all classical planners  for one solution over others when presented with a problem the planners abilities are in general capable of constructing many quite different solutions for breakfast one might be capable of making pancakes crepes belgian waffles hot oatmeal cold raisin bran sausage and eggs gravy and biscuits eggs benedict etc we call this the competence set of the planner no planner will construct them all planning activity halts when the first solution is found we call this preferred element of the competence set the performance item 
	dejong and bennett 	1 

　we wish to examine the effect of altering the bias of a planner the bias of a planner is just a selection function for any planning problem  the bias selects either an element of the competence set or  the competence set of a problem remains the same if the bias is changed but a different performance item may be selected now consider a 
　space of possible biases the notion though abstract is well formed a bias space is simply a collection of possible selection functions 
　given a bias space and a planning system it is entirely possible  indeed quite likely  that for a given domain some biases will result in a higher adequacy than others by systematically searching the bias space we might hope to achieve acceptable real-world behavior we call such a search permissive planning 
1 ideal permissive planning is impossible 
　in ideal permissive planning the bias space is unrestricted there are no a prion constraints upon the individual biases that make up the space and the bias space may be infinite 
definition ideal permissive planning is a recursive procedure which when given 
a planner a bias space adequacy values a threshold of acceptable adequacy ta between a 
and 
a source of planning problems 
produces a new planner through bias accommodation which has the following properties 
if the space contains no bias of adequacy  the new planner refuses to offer solutions to any further problem 
otherwise the bias with the highest adequacy is adopted 
   the recursiveness of the procedure requires that the algorithm always halt therefore only a finite number of example problems can be examined before either selecting the best bias or guaranteeing that no acceptable bias exists under these conditions the following theorem holds 
theorem 1 ideal permissive planning cannot be realized 
　the proof follows directly from lemma 1 concerning simplified ideal permissive planning a greatly restricted version of the ideal formulation here the bias space contains exactly two biases furthermore ta=1 and after attempting to solve a finite number of world problems the better of the two biases must be selected problems for which the planner offers no solution are counted as failures 
lemma 1 the simplified formulation of ideal permissive planning cannot be realized 
proof under these conditions the biases are independent 
bernoulli random variables we can know their characteristics only by sampling world problems and observing success or failure this is precisely the discrete 
	1 	learning 
ume minimax bandit problem with two bernoulli arms  presman and sonin 1  as the horizon n grows without bound a permissive planning algorithm is any decision procedute which after a finite sampling of the two biases selects once and for all the better of the two this corresponds to a regret function that is asymptotically flat in n an important result from the bandit literature is that the optimal regret function grows at least as  since no regret function can under these conditions be asymptotically flat no algorithm can realize simplified permissive planning qed 
　any ideal permissive planning algorithm is necessarily also an algorithm for simplified ideal permissive planning so theorem 1 holds 
1 restricted permissive planning is tractable 
　this negative result is not the last word on permissive planning we now show that a particularly simple kind of permissive planning  which we call restricted permissive planning is tractable instead of guaranteed optimality we will content ourselves with any bias above the specified threshold we also allow a small non-zero adequacy tolerance parameter e that establishes an indifference region about the chosen adequacy threshold if the adequacy of the best bias in the space falls within  of the threshold we are indifferent to the outcome of permissive planning it may either adopt a bias or decide there is no adequate bias and choose not to solve further problems finally restricted permissive planning need only succeed with a high probability more precisely 
definition restricted permissive planning is a recursive procedure which when given 
a planner a bias space adequacy values a threshold of acceptable adequacy ta between a 
and 
a source of planning problems two parameters ♀ and 1 each between 1 and 1 
produces a new planner through bias accommodation which with probability of at least las the following 
properties 
if the bias space contains any bias of adequacy  some bias with adequacy of at least 
　　ta e will be adopted if the space contains no bias of adequacy  the 
new planner refuses to offer solutions to any further problem 
if the best bias in the space falls within the 
indifference range of then the planner may either adopt a bias of adequacy  or refuse to offer solutions to further problems 
the arrangement is borrowed from the pac literature 
 valiant 1  and earlier employed in  bechhofer 1  from this point in the paper on when we mention adequacy we will understand it to mean . probabilistic attainment of 
an adequacy threshold 

1 	schema-based planners and their bias spaces 
　in a schema  or skeletal  planner planning techniques  are encoded as generalized solution patterns called schemata the system solves problems by retrieving an a general solution and instantiating it to fit the particular problem falling back on a search planner only if no schemata apply a schema can be viewed as a mechanism for supplying a set of constraints which depend in part on the problem s initial slate and goal 
definition a schema sc is a set of constant constraints on action sequences together with a function that maps a planning problem 
into either a set of additional constraints or the special symbol a if fsc yields a constraint set for a problem |csc i u fsc denotes only action sequences that isolve the problem 
　the symbol a is interpreted as indicating that the schema s preconditions are not satisfied by the problem the collection of all the system s schemata is its schema library the bias of a schema-based planner is the particular library u possesses any change to a schema shifts the bias even if the replacement schema is only slightly different from the original we wish to consider biases composed of schemata acquired through ebl over problems sampled from the planners distribution 
　as an aside problems often naturally cluster into problem classes the potential goals and common initial slale leatures for getting to a distant city are significantly different than those involved in washing clothes we will assume lhai problem classes are pre-existing and that it is easy for the planner to tell which class a problem is from this is not to say that it is necessarily easy to know which schemata apply to a problem schema applicability is determined by the satisfiability of each schema s preconditions from a formal point of view all ot our results  hold if we view all problems as coming from a single class but problem class is an important facet of schema planning and we prefer not to ignore it if problem classes are used however we insist that adequacy be judged for each class separately it would be misleading to allow a planner to balance inferior performance on difficult problem classes against infallible performance on easy ones 
1 honest ebl 
when given a problem we will require that the underlying 
ebl system produce at random one of the schemata from the set of possible ebl-acquirable schemata furthermore the generation process must be fair we require that any schema that can in principle be produced will be produced from the problem with no less than some finite minimal probability pmin that is we exclude ebl systems which can hide schemata behind vanishingly small construction probabilities from this it follows that a problem can lead to only a finite number of schemata in fact no more than 1/pmin this is usually the case in ebl applications note there is no upper bound on the number of different schemata that might be constructed from the domains problems and that the bias space may include an infinite number of distinct biases 
　we also insist that a schema s preconditions not be artificially specific the preconditions must accurately portray the capabilities of the schema s body for example a schema sufficient to isolve general grocery shopping problems is not allowed to claim only to isolve problems of acquiring dairy products more formally there cannot exist within the precondition language a more-general goal pattern nor a less constraining initial state requirement that accurately captures the applicability of the schema we will call such a schema honest since it can commit no sin of omission in advertising its applicability we will say an ebl system is honest if u produces only honest schemata 
　our ebl system then is assumed to have the following characteristics we provide it with some resource bound r and allow access to a domains problems when given a problem ebl expends at most r resources to produce a 
　schema this succeeds with some probability call it p 
　with probability i p the ebl system produces a 
　indicating that no schema will be forthcoming when a 
　schema is produced each of the set of acquirable schemdta appears with probability no less than pmm only schemata that honestly characterize their preconditions are produced 
the ebl behavior over a domain can be summarized by  and p note that increasing r serves to increase p 
1 conformable schema application 
　now we turn to the planner in which the ebl system is embedded this is the consumer of the ebl-acquired schemata we will say that a schema based planner is conformable if a schema can be applied to a problem only if the problem s goals require all of the schema's goal pattern to illustrate consider a schema for achieving the conjunctive goal pattern  this schema is sufficient to achieve the simple problem goal on blk l blk1  but such a use would not be conformable since a portion of the schema s goal pattern is not matched by the problem goal it might seem more desirable to apply an overly specific schema than to fail to produce a solution altogether however a schema selection failure conveys important information to the learning component about the abilities of the schema based planner this information is obscured if schemata can be employed in a non-conformable 
 and incidentally often inefficient  manner 
we can now stale the following lemmas 
lemma 1 the probability that a schema which has adequacy esolves a random problem of the 
appropriate problem class is at leasi 
　proof suppose we give the schema k problems of which r are both isolved and esolved p are nor attempted and q are isolved but not esolved by hypothesis the schema meets or exceeds the adequacy threshold ta from 
 1  
	dejong and bennett 	1 

lemma 1 given an honest ebl schema acquisition system l and a conformable schema application planner a it is the case that if a planning problem p can be isolved by a using a schema sc then sc is acquirable by l from p 
　proof sketch we can think about each schema as embodying a planning strategy that can be applied directly without recourse to searching the constraint tree acquiring planning schemata through ebl can be viewed as the process of 1  observing an instance that illustrates an unknown strategy 1  explaining why the instance works 1  abstracting away unneeded and easily redenvable details of the example to yield a general characterization of the illustrated strategy if a planning strategy suffices to solve a problem  men some from-scratch plan can be constructed  by the planner underlying the ebl component  which is an example of the strategy this plan suitably explained can therefore be generalized back into the original strategy of course  alternate from-scratch solutions might lead to other strategies and therefore other schemata but among the schemata acquirable from the planning problem must be the originally postulated schema the only difficulty in transforming this informal argument into a proof is to formally insure a tight fit between the problem and the strategy the problem solution must necessarily illustrate all facets of the strategy this property is enforced by the honesty and conformability requirements 
lemma 1 if a planner contains a schema  sc acquirable through honest ebl which has adequacy ta or higher for a problem class then the probability that ebl will in fact construct sc from an arbitrary problem of the appropriate 
	1 	learning 

　lemma 1 plays an important role in the tractability result informally  it limits how successfully an adequate schema can hide from random probing the higher a schema s adequacy the easier it will be to find this may at first seem surprising but it is in fact quite intuitive a schema of high adequacy must correctly apply to many problems and from lemma 1 each of these problems can give rise to the schema through ebl thus random probing affords more opportunities to learn a highly adequate schema than one 
that is only marginally adequate 
1 single schema planning 
　we now wish to consider a very simple conformable schema-based planner  called a single schema planner it is given problems drawn from just one problem class and it may acquire at most one schema from its bias set by applying honest ebl to problems drawn from the world's distribution 
d e f i n i t i o n single schema permissive planning is restricted permissive planning in which the planner is a single schema planner 
theorem 1 single schema permissive planning is tractable 
　by  tractable we mean that the sample complexity  the number of domain problems consumed by the algorithm  is independent of the cardinality of the  potentially very large  bias space and is polynomial!y bounded in other relevant parameters  from the definition of restricted permissive planning single schema permissive planning must with high probability  hall with a correct answer 

　p r o o f we will show that the following algorithm algorithm halls consuming at most k + m n domain performs single schema permissive planning and that it does 
so tractably as defined above 

　informally  the algorithm attempts to construct and test as many as m schemata m is chosen so that if an adequate schema exists it is unlikely to be missed in all m trials each test employs n sample problems n is chosen so that the measured adequacy is unlikely to differ very much from the schema s true adequacy 
　p r o o f the algorithm alwavs halts recall the requirements the outer while loop is repeated at most k times k is finite the embedded do loop has the finite iteration target n the only conditional flow of control exits the outer loop prematurely thus the algorithms time complexity is o kn  as many as k problems are drawn in the outer loop for as many as m  with  iterations the inner loop is executed n times drawing one problem in each iteration thus the let sc be a hypothesized schema under evaluation as be the computed sample adequacy of sc over n random problems and at be the  unknown  true adequacy of sc over the underlying distribution the underlying distribution of adequacies is a trinomial of finite values so o 1 is also finite chebyshev s inequality applies for any positive a 

　a necessary and sufficient condition for sc to be judged a false positive is that its sample adequacy is measured to be at least the desired adequacy threshold but its true adequacy is less than the threshold by at least e 
		which implifies to 
	dejong and bennett 	1 


	1 	learning 

 recall again that ta is the desired adequacy threshold and that e is e-adequacy parameter a necessary condition for ffn1 failure is that a schema s sample adequacy is measured to be less than the desired adequacy threshold but its true adequacy is at least e greater than the threshold 
 or 	simplifying  
a sufficient condition for avoiding this form of false positive is inequality  1  but this is precisely the false positive error condition there we required a sufficiently large n to bound the error probability of each test by 
here we need to bound the error probability of each test by 
 it we require m to be at least 1  the error probabilities tor both the false positive condition a n d w i l l be bounded as desired m is chosen to be at least 1 
　thus the probability for a false negative and the probability for a false positive are each required to be no greater than so the algorithm produces the correct answer with probability at least 
1 conclusions 
much previous research has applied machine learning techniques to planning usually ml is employed to improve the accuracy of a planners representations  e g  gil 1   this alters the planners projection ability rather than its bias the chunking of control knowledge  e g soar  laird el al 1  and p r o d i g y / e b l  minton 
1   can be viewed as altering planner bias as can some case-based approaches  allen and langley 1 hammond e  al 1  though in these systems there is no formal connection to planner adequacy which is central to permissive planning 
　in addition lo our analytic results we have implemented a real-world single-schema permissive planning system g r a s p e r a robot system that learns lo pick up novel objects its model of world change is simple and imperfect a bias is acquired that prefers to select among other things grasp points nearer the center of mass grasp forces higher than believed necessary and wider than needed gripper openings on approach to the target piece 
　while single schema permissive planning may seem narrow the single schema results are immediately extendible to a schema planner with one schema per problem class with little difficulty the results also extend to a schema planner with any fixed maximum number of schemata for each problem type 
　the permissive planning approach offers to bring plan execution and real-world behavior within the framework of classical planning we show that one natural way to realize permissive planning is with the combination of ebl and a schema planner the tractability proof guarantees that permissive planning scales - that the benefits are not the manifestation of a simple domain 
acknowledgement 
the authors wish to thank lenny pitt for helpful discussions and insights and renee baillargeon for comments on the manuscript 
