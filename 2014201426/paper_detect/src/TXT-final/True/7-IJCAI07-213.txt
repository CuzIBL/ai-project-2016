
organizational models within multi-agent systems literature are of a static nature. depending upon circumstances adaptation of the organizational model can be essential to ensure a continuous successful function of the system. this paper presents an approach based on max flow networks to dynamically adapt organizational models to environmental fluctuation. first  a formal mapping between a well-known organizational modeling framework and max flow networks is presented. having such a mapping maintains the insightful structure of an organizational model whereas specifying efficient adaptation algorithms based on max flow networks can be done as well. thereafter two adaptation mechanisms based on max flow networks are introduced each being appropriate for different environmental characteristics.
1 introduction
with the need for more complex software  arose the need for a higher abstraction level than the concept agent. as a result  organization modeling is becoming a practiced stage within multi-agent system design  see e.g. ciancarini and wooldridge  1  and  boissier et al.  1  . the organizational model poses various constraints on agents populating the organization. frameworks have been introduced for representing such an organizational model e.g. agr  agent/group/role   ferber and gutknecht  1   gaia  zambonelli et al.  1  and moise  hannoun et al.  1 .
¡¡a common problem encountered with the current organizational modeling frameworks is their static nature. the frameworks do not support the organizational model itself to be dynamic in that it changes based on e.g. the environment. especially when a multi-agent system participates in a dynamic and unpredictable environment  an organizational model might become obsolete  making dynamic adaptation of the model essential. imagine a design for a negotiation system on the internet  in which buyer and seller agents are present. the organizational model specifies the number of buyers and seller that should be present  based on a certain expected input for the system. suddenly  an increase in usage requires much more buyer and seller agents. such an event requires adaptation of the current organizational model to the new usage level  otherwise the system would no longer function correctly due to overload.
¡¡the aim of this paper is to introduce a method for capacity management of organizations by dynamically adapting an organizational model based on the environmental fluctuation. for this purpose  the agr framework is adopted. agr has been chosenbecausethe frameworkis closely related to graph representations. furthermore  extensions of the framework with capacities for each of the elements within the organizational model are introduced. the method itself is based on graph theory  and more specifically  on max flow networks. specifying methods for adaptation in max flow networks has the advantage of efficient algorithms being available to perform calculations on the network. the method can be incorporated into an agent maintaining such an organizational model  attributing the agent with the capabilities to properly adapt the organizational model. this paper however only deals with evaluating the effectiveness of the method itself.
¡¡the paper is organized as follows: section 1 introduces max flow networks and the terminology associated with it. thereafter  section 1 discusses the existing modeling framework for organizations and extends it with capacity elements. section 1 presents a mapping between the extended organizational modeling framework and max flow networks. static analysis methods for analyzing the current functioning of the organizational model are presented in section 1 whereas section 1 expresses adaptation rules that can be used when the analysis shows an improper functioning. section 1 presents simulation results of these adaptation mechanisms  and finally  section 1 is a discussion.
1 max flow networks
this section provides a brief introduction to max flow networks within graph theory. max flow theory  see e.g.  ford and fulkerson  1   is a very well known part of graph theory  appreciated because of its practical applicability. a max flow network is defined as follows.
¡¡let g= v e  be a directed graph with a set of nodes v and a set of edges e. within v two special nodes are distinguished  namely the source s ¡Ê v and the sink t ¡Ê v. the source has an indegree of 1 and the sink an outdegree of 1. furthermore  let c: e ¡úr+ be a capacity function for the edges. a network is then defined as n =  v e s t c . now let f: e ¡úr+1 denote the flow value under the following conditions:
f x y  ¡Ü c x y  for all  x y  ¡Ê e fin v  = fout v  for all v ¡Ê v-{s t}
where fin v  and fout v   respectively the inflow and the outflow of a node v  are defined as follows:
 f x v  with  x v  ¡Ê e  f v y  with  v y  ¡Ê e
for the source s and the sink t the following thus holds:
fin s  = fout t  = 1
the flow value throughout the network is now defined as follows:
|f| := fout s  where fout s =fin t 
the max flow is the maximum among all flows  and the max flow problem is to find such a flow. several algorithms have been published which can find such a flow  in 1 ford and fulkerson  ford and fulkerson  1  were the first to publish such an algorithm where finding a minimal cut for the graph was proven to be equal to the max flow. later efficiency improvements have been proposed  see e.g.  edmunds and karp  1 .
¡¡to enable a formal mapping between the organizational modeling framework and max flow network  node capacities should be expressible. specifying capacities for nodes can be incorporated into the classical max flow network as follows: let cnode : v ¡úr+ denote the capacity of such a node. now split up the node v with capacity cnode v  into two nodes: v1 and v1 where nodev1 inherits all incoming nodesof v whereas v1 inherits all outgoing edges. finally  draw an edge  v1 v1  with the following capacity value: c v1 v1  = cnode v 
1 multi-agent organizational framework and extensions
in this section  the agr approach is introduced. agr is used because the representation of the organizational modeling framework is closest to graph theory. as the purpose of this paper is to investigate adaptations in the capacity of an organizational model  agr is extended with elements specifying such capacity.
1 agent/group/role approach
as a basis for representing a multi-agent organization the agr approach introduced by ferber and gutknecht  ferber and gutknecht  1  is used. in the approach  as the name already suggests  three main elements are used:  1  the agent which is only specified as an active communicating entity which plays roles within groups;  1  the group defined as atomic sets of agent behavior  and  1  the role which is an abstract representation of an agent function  service or identification within a group. more formally on an abstracter level  ferber and gutknecht define a group structure as a tuple s=r g l. in the definition  r is a set of role identifiers whereas g is an interaction graph specifying the valid interactions between two roles  later referred to as role links : g:r¡Ár¡úl  where l is the interaction language. the organizational structure is defined as the set of group structures expressing the design of a multi-agent organization scheme.
it is expressed as o=s rep  where s is a set of group structures. rep is a representative graph specifying interactions between role of different groups  later referred to as group links : rep:s¡Ár¡Ás¡Ár  e.g. rep sa  r1  sb  r1  where r1¡Êsa and r1¡Êsb  and sa sb¡Ês. a contraint is that a single agent is playing both role r1 and role r1
1 agent/group/role extensions
in addition to the agr approach  it is assumed that in the specification of roles a certain capacity is present. this capacity places a requirement on what an agent to be allocated to the role within the organization should be able to handle computationally per time unit  universal for the whole organization . this capacity is denoted by rc: r ¡úr+. in addition  a capacity can also be set for role links: cc: r ¡Á r ¡ú r+ and group links: sc: r ¡Á r ¡úr+.
¡¡one crucial aspect is however still missing  namely the interaction with the environment. agr is mainly based on interaction between roles  whereas the emphasis of this paper is to adapt to environmental fluctuations. therefore  it is assumed that the environment causes a certain pressure upon the organization. such pressure is expressed as the amount of processing needed by the organization to deal with the pressure  it can be seen as the demand of the environment upon the system. in the organizational model this is represented by adding an entity called the environment  ein  and having links from the environment to the roles receiving that stress directly:  ein  ri  which has a particular value at a certain time point: ein: r ¡úr+. at different points in time the amount of pressure can differ  requiring different processing capabilities. furthermore  besides receiving pressure from the environment  most roles are assumed to perform actions in the environment  eout  as well  affecting the environment:  ri  eout  which again has a value: eout: r ¡úr+. assumed is that a correctly functioning multi-agent organization affects the environmentto the exact same amount as the environment affects the organization.
1 mapping the organizational framework to max flow networks
a mapping between the extended agr model and the max flow networks as introduced in section 1 is presented. the translation algorithm of the extended agr model to a max flow network can be described as follows:
  for each role ri¡Êo create a node vi
  for each role link g ri  rj  create an edge  vi  vj 
  for each role link with capacity cc ri  rj  set the capacity of the edge  vi  vj  to that value: c vi  vj =cc ri  rj 
  for each group link  ri  rj  where ri¡Êsa  rj¡Êsb and screate an edge  vi  vj 
  for each group link with capacity sc ri  rj  set the capacity of the edge  vi  vj  to that value: c vi  vj =sc ri  rj 
  for each role with capacity rc ri  set the capacity of the node vi to that value: cnode vi =rc ri   reduce the graph to a classical max flow graph using the method presented in section 1
  add a node s to represent the environment ein and add a node t to represent the environment eout
  for each  ein  ri  with capacity ein ri  create an edge  s  vi . set the capacity c s  vi =ein ri 
  for each  ri  ein  with capacity eout ri  create an edge
 vi  t . set the capacity c vi  t =eout ri 

figure 1: example organizational model
figure 1 a  shows an example agr organization. in the figure  the big ovals denote groups  whereas the smaller ovals denote the roles. capacities of roles are depicted as a box with a number specifying the capacity. furthermore  interactions between roles within a group or between a role and the environment are depicted by arrows  including a label specifying the capacity. finally  capacities for interactions between groups are specified by dashed lines  including a capacity number depicted in italics. figure 1 b  shows the accompanying max flow network using the previously presented translation algorithm including the translation of node capacity to a classical max flow network  with a max flow of 1.
1 analyzing an organizational model using the max flow equivalent
now that an equivalentmax flow network can be derived from the extended form of an agr organizational model  this section shows in what way the max flow network can aid in the analysis of the organizational model. such an analysis can be performed in two ways:  1  checking whether the current organizational model can meet the expected environmental conditions  i.e. an analysis beforehand   and  1  checking at runtime whether the organizationalmodel can meet the actual environmental conditions.
1 analysis of the organizational model based on expected values
creating an organizational model is done having certain requirementsin mind. in this paper organizationalrequirements in the form of organizational capacities are considered. requirements on capacities are in the form of pressure from the environment  i.e. the organization should be able to handle x requests of a certain type . for checking whether such a requirement can theoretically be met by a multi-agent organization  the max flow equivalent can be used  enabling the usage of tools and algorithms from graph theory. to this end an organizational model  including capacities for the various organization elements as introduced in the previous section  is translated into a max flow problem. remember the notation for the flow: |f| := fout s  where fout s =fin t . now let the maximum flow be noted as follows:
|f|max n  := fout max s  where fout max s =fin max t 
the requirements posed for the organizational model can be translated into requirements on the flow. requirements regarding the amount of pressure can be translated to a max flow requirement of the form
fout max s ¡Ýr
where r is the requirement. using the max flow problem algorithms from e.g.  ford and fulkerson  1   edmunds and karp  1  it can be determined whether the organization can theoretically fulfill the requirements. note that non-fulfillment of the requirements guarantees that the organization will never be able to meet the requirements when complying to the design specification.
1 analysis of the organizational model based on observed values
besides performing an analysis at design time  an analysis at runtime can also be performed. it can be the case that the environment in which the multi-agent system is participating is highly dynamic and hard to predict  causing an unknown amount of pressure for the organization. therefore  the requirement r posed for the system is dynamic. the requirement can however be observed: observing the amount of pressure received by the multi-agent system. in case this exceeds the maximum flow in the network equivalent  the organizational model is incorrect. note that it is still possible that the multi-agent system is functioning correctly  since the agents allocated to the roles within the organizational model might have a higher capacity than required. the model however should always be updated to make sure that the system continues to function correctly. it could for example be that an agent can handle the pressure for a while  but after a certain duration suffers a burn out. methods for updating such a model are presented in the next section.
1 adaptation of an organizational model using the max flow equivalent
as shown in the previous section  when participating in a highly dynamic environment the organizational model sometimes needs to be changed in order to handle the environmental fluctuations appropriately. this section proposes two methods to perform such a change  each working under specific circumstances. these methods only concern extending the capacity as the aim of this paper is to adapt the organizational model in such a way that the environment can be handled  which does not include decreasing the capacity.
1 adapting the bottlenecks
the first method for improving the network equivalent of the organizational model involves finding the path which requires a minimum additional capacity  and adding capacity to the bottleneck within the path. in other words  pinpointing the bottleneck within the organization and improving it. let p = s  ¡ú ...  ¡ú t denote a path from the source s to the sink t in the network. in the explanation of the method  capacities of edges are assumed to be natural numbers  however this can easily be extended to rational numbers. given that the environment has imposed requirement r  and the parameter ¦Ç which represents the safety margin to be taken:   calculate the current max flow of the network |f|max n 
  if |f|max n     ¦Ç ¡Á r :
1. n=1
1. try finding a path p of the form p = s  ¡ú+1 ... xi  ¡ú1 yi  ¡ú+1 t where n edges { x1 y1  ...  xn yn } do not have sufficient capacity to add a flow of 1 to the path. in case such a path cannot be found: n=n+1
1. set the capacity for all the edges  xi yi  in the set { x1 y1  ...  xn yn } to c xi yi  = c xi yi  + 1
1. if the new max flow |f|max n     ¦Ç ¡Á r  then continue at point 1  else the algorithm ends
the specification of the algorithm draws inspiration from the algorithms proposed for finding the max flow through a network. these algorithms work with finding paths from source to sink that can be increased with a flow of 1. finding a path which can almost be increased and extending the capacity therefore results in an immediate increase in the max flow of the network.
1 adding organizational elements
the capacity required for allocation of an agent to a certain role is of course limited; agents with very high capacities
might be too expensive. therefore  an algorithm for adding roles and the accompanying role and group links to an organization is presented here. the algorithm as presented above is therefore adapted to cope with addition of organizational elements as well. the extension states the following: in case the max flow of the network can no longer be increased as a further increase of the max flow would necessarily require exceeding of the maximum capacity set  i.e. the current capacity c xi yi  exceeds the maximum capacity cmax xi yi  :
1. for each two nodes vi1  vi1 and set of edges of the form
 vx  vi1  where x¡Êv and  vx  vi1 ¡Êe   vi1  vi1   and  vi1  vy  where y¡Êv and  vi1  vy ¡Êe representing a role ri and its role and group links:
if at least one of the elements has reached the maximum capacity: calculate the increase of the max flow in case the nodes and edges were to be doubled
 i.e. nnew=n¡È {vi1  vi1   vx  vi1    vi1  vi1    vi1  vy } : |f|max nnew  - |f|max n 
  if the highest increase exceeds 1  in other words the network can be improved by copying a single role  copy the two nodes and edges having the highest value.
  otherwise  copy the two nodes vi1  vi1 and accompanying edges  vx  vi1  where vx¡Êv and
 vx  vi1 ¡Êe   vi1  vi1   and  vi1  vy  where vy¡Êv and  vi1  vy ¡Êe which maximize the following:
	min	 |{ vx 	vi1 | vx 	vi1 ¡Êe}| 
|{ vi1  vy |v i1  vy ¡Êe}| 
where { vx  vi1 | vx  vi1 ¡Êe} is the set of incoming edges of vi1 and { vi1  vy |v i1  vy ¡Êe} the set of outgoing edges of vi1. in other words  take the node which has a maximal connection with other nodes. thereafter  return to 1.
the intuition behind the algorithm is to find the nodes and edges representing the role of which a copy would improve the max flow most. if no increase is possible  take the nodes and edges representing the role which is most connected within the organization to maximize the chances that an addition of a role after the copy will result in an increase of the max flow.
1 evaluation of the different methods for improving an organizational model
in order to characterize the methods presented in the previous section  this section presents an evaluation method  and compares the results of the different methods using different settings. first  a cost model is presented expressing the cost function used for evaluation. thereafter  the different methods are evaluated based on the cost model and several environmental settings.
1 cost model
each element within the organizational model has a certain cost attached to it. the cost for role and group links is expressed as costlink: r ¡Á r ¡úr+ and defined as follows:
cc x y 
	costlink x y  = e ¦Á	where  x y ¡Ê g¡Èrep 
in other words  cost for links increase exponentially  a commonly used type of cost function   where the parameter ¦Á can be varied. the same holds for the cost of a node costrole: r ¡úr+ which is thus defined as follows:
rc r  where r¡Êr
the factor 1 is arbitrarily set in the cost function because typically interaction capacity costs are lower than agent capacity costs. in order to punish an organizational model not being able to meet the environmental pressure  a penalty is introduced of the form p: n ¡Á r ¡úr+  where r is the environmental requirement. the penalty function is defined as follows:
p n  r  = ¦Â ¡Á  r - |f|max n  
the parameter ¦Â specifies the penalty for each requirement unit not fulfilled. the network n represents the multi-agent organization. finally  the overall cost for the organizational model is defined as follows: costtotal = p n  r  

1 evaluation

figure 1: bottleneck and role addition algorithm performancean implementation in java has been created of the two algorithms for reorganization  and the translation procedure of an organizational model to the accompanying network. in order to evaluate the performance of the two algorithms the example organizational model shown in figure 1 is used. as a benchmark  no adaptation of the organizational model is used. using the implementation  simulation runs are performed with an environmental pressure causing a requirement r based on a normal distribution f x;¦Ì ¦Ò . one step within such a simulation entails:  1  generating the environmental requirement r based on the normal distribution;  1  calculating the current max flow of the network: |f|max n ;  1  calculating the cost costtotal  and  1  updating the network for the next step  using one of the improvement methods. each step is performed 1 times  and each simulation is performed 1 times  generating from a different seed each time. after the steps have been performed  the average of the costtotal per step is calculated. in order to evaluate the different methods  two settings for the cost model have been used: relatively high penalty cost compared to agent/communication cost  e.g. a critical domain such as incident management   and relatively low penalty cost compared to agent/communication cost  a non-critical domain . furthermore  the environment setting ¦Ì is by default set to the initial max flow  in this case 1   whereas the fluctuation ¦Ò has been set to different values: ¦Ò={1 1}.
relatively high penalty cost
the results of an organization in which penalty costs are relatively high compared to labor cost are presented here. this reflects in the cost model in which ¦Á is set to 1  meaning an initial cost of 1 for the whole organization  whereas ¦Â is set to 1  a penalty cost significantly higher than the initial cost of the whole organization.
¡¡first  the bottleneck algorithm is used. figure 1 a  shows the results for different setting given environmental fluctuation ¦Ò and varying ¦Ç value  the algorithm parameter specifying how much to update the capacity . as can be seen  with no environmentalfluctuation  the costs stay stable for the lower ¦Ç values whereas they slightly increase for the higher settings  as the capacities are even increased when the current max flow is identical to the requirement r. for small environmental fluctuation  ¦Ò=1  an ¦Ç value of 1 gives the best results  which is also the case for large environmental fluctuation. in both cases  having a higher ¦Ç value results in the capacity being too high  i.e. costs too high  whereas a lower ¦Ç value increases the amount of penalties.
¡¡figure 1 b  and  c  show the results of the bottleneck algorithm extended with role addition. in figure 1 b  the max
¦Â¦Òno
adaptation
max flow ¦Ìno
adaptation
max
flow
1¦Ìoptimal
bottleneckrole	ad-
dition
max=1role	ad-
dition
max=11111111111111 ¦Ç¡Ü1 1 ¦Ç=¡Ü1 1 ¦Ç=¡Ü1 111 ¦Ç=1 1 ¦Ç=1 1 ¦Ç=1 111 ¦Ç=1 1 ¦Ç=1 1 ¦Ç=1 table 1: average costs of the organizational model resulting from the different algorithms  penalty is set to either 1 or 1
capacity has been set to 1 whereas in figure 1 c  1 is used. in the case of no environmentalfluctuation  figure 1 b  shows a similar shape as the bottleneck algorithm  whereas figure 1 c  shows a large increase above a value of ¦Ç=1. this is the result of roles being copied due to the low setting of the maximum capacity. each role in the network has already reached the maximum capacity  resulting in a need for a copy  which causes a severe overcapacity. in case of little environmental fluctuation  the setting 1 for the maximumcapacity is better since no largeincrease for capacity is required  whereas with high environmental fluctuation 1 is best since larger capacity increases are required.
¡¡finally  the top part of table 1  the rows where ¦Â=1  shows the comparison between the different methods  given optimal parameter settings. as can be seen  no adaptation is always worse comparedto the other algorithms  even when an overcapacityis initially present. furthermore in case of small environmental fluctuation adding capacity to the current roles is best  despite the exponential cost function  whereas for larger fluctuation  adding roles immediately is the best option due to the exponential cost function.
relatively low penalty cost
table 1 also shows the result when the penalty is set to a relatively low value  the rows where ¦Â=1 . still the algorithms are better than no adaptation  however the value for ¦Ç needs to be set to a lower value as having too much capacity is relatively expensive compared to the penalty for not meeting the requirements. therefore  the role addition algorithm with a maximum capacity 1 performs worse than the one with 1.
1 discussion
this paper has presented an approach to adapt an organizational model to fluctuations within the environment. such an approach can be incorporated into an agent responsible for maintaining the organizational model. in a highly dynamic and unpredictable environment  such an adaptation mechanism might be a necessity to guarantee successfulness of a multi-agent system. the approach used in this paper is to translate an organizational model to a max flow network and specify two algorithms for adaptation. specifying analysis constructs and reorganization algorithms for the graph representation has as an advantage that knowledge and algorithms from the well established graph domain can be reused  such as calculation of the max flow  edmunds and karp  1  . the algorithm used for adaptation of bottlenecks is indeed a known algorithm within graph theory for addition of capacity. the addition of organizational elements however requires knowledge about the meaning of the elements within the max flow network  e.g. what the roles are   algorithms from graph theory can therefore not be re-used. the algorithms as proposed in this paper have been evaluated by simulation runs  and were shown to be more effective compared to no adaptation  especially in critical domains in which the penalty function is relatively high. limits of the approach for instance include the case where the environmental pressure is at first above the capacity of the organizational model and thereafter steadily decreases. in such cases the organizational model using the adaptation mechanism will adapt to the initial high pressure  and suffer from an overcapacity at the later time points. the total sum of the penalties received in the beginning by the non-adaptive organizational model might be lower than the total cost of the overcapacity in the adaptive case. very rare outliers with a very high environmental pressure can have the same effect.
¡¡in the field of adaptive agents and multi-agent systems  see e.g.  schaal et al.  1  kudenko et al.  1   learning from the environment is an important topic. adapting organizational models based on the environmental conditions is  as argued before in this paper  one of the necessities for the new organizational paradigm. especially with continuously changing circumstances and agents leaving and arriving a well specified and up-to-date organizational model is required to guarantee proper functioning of the organization.
¡¡when comparing the approach with other organizational modeling approaches in multi-agent systems  those approaches often include much more concepts than capacity of a role. an extension of gaia  zambonelli et al.  1  for example adds the notion of organizational rules. such rules express relationshipsand constraints between roles  protocols  and roles and protocols. these relationships and constraints can be incorporated in the approach presented in this paper as well. when copying a role one can simply copy those relationships involving the role being copied and adapt them to specify the relationships and constraints of the copy of the role. moise  hannoun et al.  1  defines missions for roles  which can include concepts such as goals  plans  actions  and resources. furthermore  authority links between roles can also be specified. again  as already stated for gaia  these concepts can be reused when copying a role. several of these organizational models have been extended with organizational change notions  see for example  hoogendoorn et al.  1 . these extensions are however typically very generic models without going into specific details on how to reorganizethe organization whereas this paper does.
¡¡finally  for future work an interesting continuation would be to look at the performancein other simulation settings  and possibly compare how well different types of organizational structures perform in changing circumstances.
acknowledgements
the author would like to thank catholijn jonker  jan treur  and evert wattel for the fruitful discussions  and the anonymous reviewers for their useful comments.
