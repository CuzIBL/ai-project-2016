 job shop  in which finished goods are made from raw materials. we start with a kernel  a small ps of about 1 productions  which has the basic capabilities to grow by instruction:  1  process a restricted natural language;  1  form productions from its input;  1  impose ps control conventions on them; and  1  perform basic manipulations in its environment  rychener & newell  1 . we take the basic computational and representational adequacy of pss for ai programs as established. 
　　　　this short note presents some immediate difficulties we expect to encounter. these derive from the instructional situation:  1  the instructor can observe the system in the environment and can communicate with it freely  but cannot examine its internal structure directly.     interaction with the system is in an external language  analogous to natural language.  1  the initiative for interaction is mixed.  1  instruction may be on any topic: specific tasks  general properties of tasks  the language of communication  possible errors  how to plan and explore  etc.  1  knowledge and system structure gained through instruction accumulates over the life of the system. 
       our current approach uses m ns-e kls analysis as the basic  philosophy of both problem-solving and instruction. goals are symbol structures in working memory that describe desired states and processing entirely through the means and tests. means are encoded as productions that recognize goals and assert subgoals whose satisfaction will achieve the goals. tests are encoded as productions that recognize the conditions of satisfaction of the goal. the means productions form a means-ends network of goals. instruction consists of elaborating the nodes of this network as required by a 
       task. 
now for the difficulties on the immediate horizon: 
　　　　1. contact: how can initial contact be made with existing knowledge that might be relevant to the task at hand  which is not part of the means-ends network deliberately created by instruction for the task  use of the data acquired through experience is required in any intelligent agent. once detected  much processing can be spent on discovering relevance  but initial contact may be extremely difficult. any general intelligent system will have too much knowledge to consider exhaustively. ps architectures exploit this by storing all knowledge as productions which are evoked only if their conditions  see themselves  in the working memory. but means productions are acquired in specific contexts and their conditions become keyed to specific goals and task features. one approach might be to generate variations of current working memory goals and data until something is evoked. 
　　　　1. incoherency: the ps may be essentially incoherent in describing its situation and difficulties to an external instructor. the means-ends network helps  by providing the same level of explanatory capability as in current expert systems   but is not sufficient. e.g.  describe what went wrong from the debris left in working memory. the ps's diagnostic and explanatory capabilities are expandable by instruction  but it is currently unclear how this will work. 
　　　　1. means-ends analysis efficiency: initial instruction produces a more elaborate network than is necessary. the instructor uses numerous intermediate goals  both to make his instruction sequences easier to generate and to allow complex procedures to be taught at all; miscommunication leads to a patchwork of variant procedures; the ps uses a goal-encumbered monitoring mode of operation inserting supervisory goals and processes; etc. there are three modes of varying efficiencies: a compiled  efficient mode; ordinary instruction mode; and the monitoring mode. our primary concern is transforming from the ordinary form to the compiled form  while maintaining a capability to revert back to the other two in debugging situations. this may not be attainable simply through instruction; architectural modification may be required. 
　　　　1. utilizing distantly related knowledge: knowledge about other tasks is imperfect for a given task; it is also embedded in methods and encoded in representations created for  and local to  the distant task. all these aspects cause difficulty  even if contact is made  per 1 . a clear symptom will be repetitive instruction to cover minor task variations. one approach is to avoid the difficulty by adopting uniform conventions for encoding. we think this won't work. we favor attempting to map methods to methods  and representations to representations   using ideas from merlin  moore & newell  1 . 
support. 	this 	research was supported in part by the 
defense 	advanced 	research 	projects 	agency 	under 
contract no. f1-c-1 and monitored by the air force office of scientific research. 
