cognitive processes and ill-defined problems: 
a case study from design* 
by 
charles m. eastman 
i n s t i t u t e of physical planning 
	carnegie-mellon 	u n i v e r s i t y 

summary 
　　　in this paper the information processing theory of problem solving is extended to include ill-defined problems. a protocol of problem solving in architectural design and its analysis is presented. the significant difference between well- and ill-defined problem solving is shown to be a specification process similar to information retrieval processes now studied in a r t i f i c i a l intelligence. a variety of issues in this retrieval process are examined. the search process involved in the space planning aspect of design is shown to correspond well with existing formulations of search. the interactive effects of retrieval and search processes are examined. 
introduction 
　　　all problems can be said to consist of translating some entity  a   into some other entity  b    which is specified in terms of goals to be achieved  a -  b  . the major efforts of problem solving theory to date deal with problems where a  the i n i t i a l problem state   the 
operators available to alter the problem state  and b  the goals to be achieved  are specified  either explicitly or by some agreed upon formal convention'. thus detailed analyses have been made of how people determine chess moves  how they solve geometry  word algebra  and cryptarithmetic problems  and how they solve logic proofs 1 . while some are less well-specified than others  in chess  the goals for evaluating a specific move are open to individual interpretation   a l l of the tasks thus far analyzed have an operational formulation. such problems are considered to be well-defined. 
　　　this paper describes efforts to extend the information processing model of problem solving to those problems where part of the problem specification is lacking. of interest are those tasks where a formal language for describing the problem space  operators for moving through the problem space  or the precise expression of an acceptable goal state is not given. in such tasks  the problem solver must specify the missing information before search of the problem space is possible. such problems can be called i l l defined. 
　　　an example of ill-defined problems are the space planning tasks found in engineering  architecture  and urban design. space planning can be defined as the selection and arrangement 
* this work was supported by the advanced research projects agency of the o f f i c e of the secretary of defense  f 1-c-1  and is monitored by the air force o f f i c e of s c i e n t i f i c research. 
of elements in a two- or three-dimensional space  subject to a v a r i e t y of c o n s t r a i n t s and/or evaluat i o n f u n c t i o n s . space planning problems lack a 
w e l l - s p e c i f i e d language for t h e i r r e p r e s e n t a t i o n . the generative transformations available to the problem solver for manipulating a design are not known. most such problems also lack a precise formulation of an acceptable goal s t a t e . 
　　　this paper presents a d e t a i l e d analysis of one example of i l l - d e f i n e d problem s o l v i n g . the problem is a space planning task commonly found in a r c h i t e c t u r e   the s e l e c t i o n and arrangement of elements in a room. evidence from t h i s analysis is presented which advances two hypotheses:  1  the major d i s t i n c t i o n between w e l l - and i l l defined problems is the assumed a v a i l a b i l i t y of a s p e c i f i c a t i o n process for d e f i n i n g the problem space and goals of a problem. i l l - d e f i n e d 
　　　problems are s u b j e c t i v e l y s p e c i f i e d ;  1  if the s p e c i f i c a t i o n process is the major d i s t i n c t i o n between w e l l - and i l l - d e f i n e d problems  then a complementary hypothesis would be that the search processes used by humans to solve both types of problems would be s i m i l a r . the motives behind these e f f o r t s include gaining a b e t t e r knowledge of those processes which society has t r a d i t i o n a l l y c a l l e d   c r e a t i v e .   such studies may also provide the foundations of a method for automatically solving i l l - d e f i n e d problems. 
	psychological 	foundations 
　　　the psychological premises of these studies are s i m i l a r to those involved in the work of newell and simon  e. b. hunt  and many others who use information processing concepts to study concept formation and problem s o l v i n g 1 . the best d e s c r i p t i o n s of these premises are found in m i l l e r   galenter and pibram's plans and the structure of behavior or in walter reitman*s cognition and thought1. 
　　　the model proposed is as f o l l o w s . thinking is information processing. the sources of information may be the environment  the physiol o g i c a l state of the i n d i v i d u a l   or his memory. memory is i n t e r p r e t e d as a l l o w i n g independent r e c a l l of past environmental or p h y s i o l o g i c a l states and r e c a l l of past intermediate processing. c o g n i t i o n - - o r t h i n k i n g - i s the r e s u l t a n t of s p e c i f i c i n f o r m a t i o n being brought together in a unique combinatorial sequence. in t h i s l i g h t   a problem s i t u a t i o n is unique because a s p e c i f i c 
　　　response to a set of inputs is not d i r e c t l y a v a i l a b l e . at issue is the s e l e c t i o n of approp r i a t e inputs from memory or from the environment and the search for t h e i r possibly unique combin a t o r i a l sequence. the processing that cognit i o n and problem s o l v i n g involves can be modeled as a series of transformations generating a 

-1-

sequence of information states. the total number of states generated by applying a l l permutations of applicable information to a l l information states defines the total problem space. the means used to sequentially generate information states so that one is created that satisfies the problem goals is called the search strategy. 
　　　information processing  whether it be in man or machine  can only be achieved when the relevant information is in an appropriate processing language. processing languages provide the operators necessary for combining information. well specified processing languages include computer programming languages  algebra  symbolic logic  and other calculi. the processing language used in human cognitive processes has not been identified. human problem solving theory has proceeded on the assumption that the wellspecified processing languages listed above  since they are used by man  are partial subsets of the formal language internally available to him. problem solving tasks have been analyzed in terms of the problem spaces and operations available in these languages. in the past  problem solving analysts have limited themselves to those tasks 
where some well-specified formal representation was available. 
　　　problem solving analysis usually takes the form of studying how a problem solver treats a special task assigned him. generally unreported in the literature  yet a common occurence in most actual experiments is the problem solver's d i f f i c u l t y in understanding the task exactly as it is conceived by the analyst. the problem solver's i n i t i a l assumptions are different and require correction before the experiment can proceed. this problem points out the fact that problem solving analysis involves the comparison of two parallel processes. from the explicit problem statement both problem solver and analyst identify the goals to be achieved and elaborate them as needed. both either assume or select a processing language to work in and within it devise various strategies for exploring the problem space thus created. the analyst can understand the problem solver's processes to the degree that he can find correspondence between the processes he has experienced and thus understands and those of the s. fruitful analysis requires the analyst to ha ve processed significant 
portions of the problem space so as to maximize these correspondences. to further maximize such correspondences  only problems that allow the analyst to make strong assumptions about the goals and problem space used by the problem solver have normally been used. yet the d i f f i c u l t i e s of the 
s in understanding the analyst's conception of the task emphasizes the variability in the processes 
by which tasks can be specified. 
　　　if the assumptions of parallel processes and the search for correspondences is applied to the specification of problem goals and a processing language  this aspect of processing also should be amenable to analysis. it need not be predetermined. 
　　　like most studies of human problem solving  the method used in the studies reported here consisted of giving a subject  s  a complex task 
  
and recording his expressive behavior while solving the problem. detailed records of sketches and verbal behavior were carefully collected. other potentially significant behavior  such as facial expressions and looking at objects as a source of auxiliary input  were also recorded. together  this information made up a protocol from which the internal processing of the s  could be analyzed 1  
the task 
　　a typical small scale space planning problem is shown in figure i. it asks a subject to redesign an existing room so as to make it  more luxurious1 and  spacious  and sets boundaries for the solution in terms of cost.* 
　　this particular task is ill-defined in at least two ways. no existing formal language can 
adequately represent space planning problems. while the informal representation for such problems is orthographic projection  the elements of this language  its syntax  and rules for generation or manipulation are unknown. these aspects of the representation are left to the problem solver to intuitively identify. another ill-defined aspect of space planning problems in 
design is the identification of problem goals. the problem in figure i is typical in that no specific information is provided as to what a satisfactory design should consist of. generally  design tasks have as their explicit goal the specification of some physical entity in a form allowing construction. 	left implicit are many criteria the specification must satisfy. it is assumed that the engineer  architect  or city planner solving the problem is familiar enough with it to know what specific elements are to be included in the design and their function. from his background  he is expected to be able to identify the goals which apply to various selection and arrangement possibilities. 
     many protocols have been collected from this particular task. some were presented in an earlier report1. a new protocol gained from this task is shown on the left side of figure ii  which continues for several pages . the s of the protocol was a twenty-six year old industrial designer  who was attending graduate school. he had two years of professional design experience. approximations of the figures drawn by this s while solving the problem are included in the protocol. it is broken into sections  each of which corresponds to a protocol minute  pm . 
* the particular task presented here  the design of a bathroom  was chosen because of its general familiarity to a wide diversity of people both within and outside of the design professions. its use here was not to gain detailed information concerning the solution to this specific type of problem but to learn more about the method by which a human deals with 
-1-　common yet problems. 
　　　essentially  the s presented here created an alternative design for the bathroom by identifying and satisfying goals from his own experience as to what a good bathroom design should be. privacy  a neatly ordered appearance  adequate circulation and access  short plumbing lines  and low cost were the most evident concerns. 	while generally 	there was more emphasis on identifying design goals early in the protocol and on search for an arrangement at the end  both processes 
were highly intermixed. in a l l   five alternative bathroom designs were created and evaluated. only two were completely developed. figure i i i presents the general sequence of processing described in the protocol. all external processing took place in a plan drawing representation  except for a short sequence which utilized a vertical section. the total processing time was forty-eight minutes. 
task analysis 
　　　ill-defined problems are without a predetermined language or explicit goals. 	the i n i t i a l requirement for analyzing ill-defined problems is identification of these aspects of the problem solver's processes. 	the general identification of goals and processing languages turned out to be straightforward for the example protocol and 
was achieved by scanning it for the following types of information: 
1. all physical elements that were considered or manipulated during problem solving  what we call design units 
 dus  ; 
1. a l l information that was used to test or determine a design arrangement or selection of a du  or any information used to derive such information. 	this information was assumed to identify the problem goals;* 
1. all operations that produced new solution states. a solution state was considered to consist of the current arrangement of dus and current information about the problem. a change in either the arrangment or the information available was considered a new solution state. 
the information that was identified is listed in figures iv and v. these listings give an interpretation  in verbal form  of all information which evidence suggests was processed during the problem solving described in the protocol. much of it was never verbalized  but was only silently applied in some manipulation within the problem. other information was mentioned but its use never verified. this information has not been listed. 
in our terminology  a constraint is a function applied to a solution state and returns a boolean evaluation. an evaluation function is a function whose value continuously varies with its state  a goal is the general name for both evaluation functions and constraints. a consideration is information used to derive a goal. 
　　　corresponding to each section of the protocol and to its right is a detailed description of the processing that transpired  coded in terms of the information listed in figures iv and v. 
　　　our knowledge of design methods allows us to correctly anticipate orthographic drawings as the processing language used in searching for a satisfactory arrangement. this intuitively defined language seemed to be automatically assumed by the s. alternative formal descriptions of the operations  element  and syntax of orthographic projection have been developed and presented elsewhere 1. they w i l l not be elaborated here. the operations and language used in the selection of dus and identification of goals was not orthographic projection  but took quite a different form. 
　　　even though the protocol did not present search and problem specification processes as disjoint processes  the following discussion i n i t i a l l y considers each separately. this approach allows existing knowledge about each of these processes to be brought to bear on the protocol. following individual consideration  their interactive and confounding effects are considered. 
goal and design unit specification 
     given the partial specification of a problem  a problem solver has available at least two means to complete i t . he may:  1  disambiguate the given specification and attempt to identify subtle or implicit information within i t   or  1  reidentify the problem using his own perceptions of the i n i t i a l situation. both approaches are used in design. the f i r s t approach predominated in a previously presented protocol  gained from the same task used here 1 . the s. in the included protocol  in contrast  chose to re-identify the problem. 
　　　in order to understand the processes by which the s specified dus and goals for the problem  an attempt has been made to intuitively reconstruct two portions of his specification process. the sequence in which information is expressed has been identified so as to suggest what kinds of processes may be generating i t . in recording the sequences of processing  simple diagrams are used. they should not be considered l i t e r a l models of the internal data structures being accessed  but may be serve to suggest some properties of those structures. 
-1-　　　in an early part of the protocol  the s is told that the design he is to generate should respond to the needs of children  see pm1 . soon afterwards  he recognizes a need to store bathtowels and children's dirty clothes. he also relates dirty clothes to the location where they are cleaned - the washroom - and wonders about the distance between it and the bathroom. he suggests that temporary storage for dirty clothes might be needed. much later  pm1   this line of thought is picked up again and the recognition made that a clothes hamper would be a positive component of the design. this information is generated when the utilization of storage space is being considered. the sequence of associations made is 	presented in figure via. 
　　　what seems to transpire here is a sequence of thinking ending with the identification of a particular design unit relevant to the problem. 
　　　another example of an association process is seen at the very end of the protocol  pm1 . earlier  the s was told that the window was of the operable variety and that it contained frosted glass. the s in the current sequence is considering the detail design of the storage cabinet located in front of the window. while working on the cabinet  he identifies that it may be d i f f i c u l t to close the drapes in the window. this seems to have been achieved by recognizing the distance between the clear floor area and the window. see figure vib. 
　　　in both these sequences  information from the environment  e.g.  from the experimenter  the original design  or from the problem statement  is related to original information generated by the j . no other source for this new information is possible. in both examples  several pieces of information are generated and related with those that are given before information of specific relevance to the problem is generated. the f i r s t sequence identifies a new du; the second identifies a constraint. the two examples are the longest sequences of related information that produce design information. thus they are the most explicit. sequences of unitary length are common  see pm1  pm1  pm1  pm1 . 
     the processes which produce such information might best be considered and examined for 
potential modelling as information retrieval processes operating on a large base associatively stored memory. the given problem information is the i n i t i a l queries into the system. sometimes a desired access is not i n i t i a l l y made; only further inputs allow isolation of relevant design information. most further inputs are gained from cues identified while processing other parts of the problem. by mixing information retrieval with arrangement processes  new 
access queries can be identified and used to reinformce those made with the originally available information. 	these additional cues seem to allow accesses that no single 	inference making capability could match. 
　　　only a few insights are offered as to the detail structure of this system. 	some evidence suggests that the major elements of the retrieval system are physical elements  e.g.  dus  people -
most generally  nouns . these are the aspects of the information that are expressed most often and which seem to gain elaboration from further processing. the structure between these nodes cannot be identified from the protocol data. most reasonably  they would be verb and prepositional phrases. such a structure is supported by 
recent work reported in the psychological l i t e r a ture. 1 
　　　the dus identified by the 	took one type of organization during one phase of processing  only to take another later on. 	these different definitions were not disjoint  but rather overlapping in a set-theoretic manner. 	for example  during major portions of the protocol the toilet-tub 
was manipulated as a single element. 	later  though  it was treated as two separate elements. at one point the bathtub was further decomposed into its components. 	each element thus had the possibility of being broken into the elements of which it was a set. 	the hierarchical decomposition thus produced is shown in figure v. 
　　　the purpose of composition or decomposition of dus is essentially one of search efficiency. decomposition widens the solution space by a l lowing a greater number of primitive dus to gen-
erate a greater number of design alternatives. this is useful when the current solution space is too restrictive to easily find a solution. alternatively  composition narrows the search space. composition is especially applicable to sets of dus which are relatively non-interactive with others and can be arranged so as to satisfy the interactive goals or constraints within the set  1 the bathtub-watercloset combination in the protocol is an excellent example of the use of composition. an information retrieval system useful for design problem solving would need the capability of composing and decomposing dus. 
　　　the issue possibly raised here and elsewhere as to whether information is stored discretely in the agglomerated concepts used in the given description and protocol analysis is easily resolved. in a l l memories known  a trade-off exists between the alternatives of explicitly storing large 
amounts of data and possessing a process that dynamically generates the information when it is needed. if this trade-off exists in a memory  then the modelling of that memory can reflect this trade-off also. it may be most expedient at 
any level of model building to assume that information is explicitly stored. but a single node in a model at one level of organization may represent a whole pattern of processing at another level. the only requirement that is logically imposed is that information processing  at some point  pass through the state defined as a discrete element in any model. the value of the particular points chosen is determined by the parsimony of the description allowed. 
　　　the implications gained from the analysis of this and other protocols is that human performance in retrieving information from memory for application to ill-defined problems is quite limited. in space planning  a retrieval rate of one piece of applicable information per minute was exceptional. the size of memory required to i n t e l l i gently solve a class of ill-defined problems is only now becoming known. that size seems to be smaller than expected. the eventual development of automated problem solvers may actually benefit from a memory even more limited than the size implied as necessary from human protocols. the 
controlled input of new information could delimit the data base to verified information  eliminating much questionable data. an i n i t i a l exploration of an automated design retrieval system has been made by moran.1 more extensive models of memories capable of the kinds of retrievals required here have been developed by green et al and q u i l l l a n . 1 no model of memory developed thus far can perform  both in speed and diversity  in a manner similar to that described in the 

-1-

protocol. no model has yet been proposed that takes advantage of auxiliary inputs gained from intervening processing. the interaction of search and retrieval processes may offer major benefits to large base associative memories. 
search processes in design 
　　　when faced with the problem of arranging elements in a predefined space according to some partially specified goals  a l l designers thus far tested have used a modus operandi for generating solutions that included as its main activity the sequential selection of both a location and a physical element to be located. if the du could be located in the proposed location and an evaluation of the current total configuration was successful  then a new element was added to the design. if the evaluation failed  the current element or another was manipulated. such operations can be viewed as transformations in a problem state space according to the traditional search paradigm. examples of this sequence are 
evident in figure i i i as sequences of intermixed tests and operations. 
　　　space planning aspects of design' problems seem to f a l l within the transformational paradigm of heuristic search according to the following formulation. a apace planning problem can thus be defined as a 
a space  a set of elements to locate in that space.  some elements may be defined as any member of a 
set.   
a set of constraints delimiting acceptable solutions and possibly evaluation functions to be achieved  

　　　each transformation consists of a triplet consisting of the current design state  an element to be operated upon  and an operator. 	each transformation is made in an environment defined by a l l or a set of the goals to be achieved. thus 	
the problem is to locate the elements within the space in an arrangement that satisfies the constraints and optimizes the evaluation functions. 
　　　obviously needed is a process or method that selects an appropriate operation and an appropriate du on which to operate. highly diverse methods are possible. algorithmic methods include lists or stacks of design units or operators. more complex operations usually include feedback from the current or past states of the problem. processes that include such feedback are called 
heuristics 	1 
　　　the protocol included here  like others analyzed  show few examples where a l l combinatorial possibilities are exhaustively searched. instead  a l l protocols showed reliance on a wide variety of heuristics. by a heuristic is meant a relation between some part of the current problem state and some part of the desirable next state. most models of heuristics have framed them as productions in a markov system.1 the production takes the pattern of 

if the left hand side of the condition is met  then the right hand side is applied to determine or partially determine the next transformation to be made. in the heuristics found in design problems  the left hand side is commonly a single du 
or a constraint  or possibly a doublet made up of both a constraint and a design unit. the right hand side is commonly an operator  a design unit  or both. examples of heuristics used in the accompanying protocol are ci1  which looks for uses of empty space  and c1  which identifies space for locating towel racks. ci1 has as its left hand component a test which checks for the existence of a space bounded on three sides and adjacent to the major space in the room. when a situation exists that meets these conditions  the right hand side of the production searches for any du that may make use of the identified space. the left hand condition for c1 is the existence of a bathtub or sink. the right hand side searches for empty vertical wall space. upon finding i t   a towel rack is located. it may be repeatedly applied. the value of heuristics is that they orient the range of possible future solution states in directions that have been found empirically to be f r u i t f u l . 
     a schematic flow chart of the process outlined in the above formulation and described in the protocol is shown in figure ix. this process 
corresponds closely with other formulations of heuristic search.'1heuristic search is not the only search process used in space planning. occasionally  generate and test and hill-climbing have been observed in protocols. but the main process relied on in the intuitive solving of space planning problems seems to be the one outlined here. great individual variations within this general paradigm exist  in terms of the heuristics used and in the definition of the search space  as specified by the composition and 
decomposition of dus. 
the confounding of specification and search 
     throughout the protocol  search and specification operations were highly intermixed. no clear 
cycling or other separation of activities was identified. the value of such intermixing for retrieval processes has already been proposed. but intermixing is not without its costs. confounding of retrieval processes also result. 
　　　an exceptional example of confounding is shown in pm1. 	at this point in processing the s is at a particular solution state that w i l l be achieved again. 	at this state he asks for information about the minimum distance between a wall and the front of a sink. 	looking in graphic 

-1-

standards  an architectural reference   he finds a wide variety of other information. this information distracts him from his original search and his processing takes off in another direction. much later  pm1   the s has the same solution state represented and asks the same question as he did earlier. this time he gains the information he desires and generates a particular new state. 
　　　in this example  new information destroyed a search sequence originally developed by the s. it was only fortuitous that he was able to pick up the same solution state later. 	it seems that the control system monitoring search and retrieval processes is f a l l i b l e - at least in some problem solvers - and that this intermixing of processes places demands on processing that can lead to errors. 	other examples of confounding have been observed  though they are rare. 	designers seem familiar with such aimless processing  having such names for it as  playing with the problem    daydreaming   etc. 	the implication is that significant overhead costs accrue from effectively mixing search with specification. 
conclusion 
　　　in this study  ill-defined problems such as those found in architectural space planning were shown to be tractable in analysis if they were separated into their information retrieval and search aspects. the task of operationally specifying a problem was proposed as the major distinction between i l l - and well-defined problem solving. some suggestions as to the structure and capabilities of an automated problem specification system have been made. also presented is a formulation of the search aspect of space 
planning problems. it is suggested that the search and specification processes together can completely depict a large number  if not a l l   of those problems now classed as ill-defined. by further delineating the specification and search processes of problem solving  greater intelligence and creativity may be allowed to be built into future computer programs. 
