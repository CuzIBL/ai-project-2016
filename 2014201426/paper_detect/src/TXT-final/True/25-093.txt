 
in this paper we present a terminological language which includes defaults  and a definition of default 
subsumption based on the notion of skeptical inheritance in default reasoning. except for the inclusion of defaults the language is limited when compared to most terminological logics. however defaults are a necessary construct in many applications and we suggest that the language presented here is a useful tradeoff between different types of expressivity we present an algorithm for classifying new concepts into the default hierarchy representing the taxonomy  and in addition an algorithm for what we call default classification  suitable for interactive reasoning about individuals. we describe a diagnosis application which has been implemented using this language and reasoning mechanisms. we present an evaluation of the diagnosis application on the basis of comparison with 1 patient protocols. we conclude that the language presented is in fact adequate for the application presented here and hypothesize that it i.s interesting 
for a significant group of applications. 
1 	introduction 
 taxononiic representations and reasoning have been popular in a.l. for a long time  largely because they provide an efficient way of representing knowledge and organising it for reasoning purposes. the two main kinds of taxononiic reasoning to be found in the literature are classification  e.g.  brachinan ei al.  1   and default inheritance reasoning  e.g.  horty et a/.  1; fahhnan  1  . classification in systems with strict inheritance hierarchies has been used in a number of applications. however the kind of classification systems used here have also been criticised for not having the  necessary expressivity of defaults  doyle and patil  1 . default reasoning on the other hand has been used very little in real applications since the early work with netl  fahlman  1 . 
   recently there has been increased interest in incorporating defaults and principled default reasoning reasoning into classification systems. some problems have been identified  padgham and nebel  1  and some theories for integrating default reasoning in terminological logics1 have been developed  padgham and nebel  1; quantz and royer  1; baader and hollunder  1 . in this work we define a language which is relatively simple compared to most terminologic logics  e.g.  patelschneider et al.  1    but which also contains important constructs not  usually  found in other languages of this type - namely defaults and features with predicate values.  the latter is however not the concern of this paper . in the search for computationally manageable but sufficiently expressive languages to attack real world problems  donini et al.  1  we hypothesize that this sort of language meets the needs of many applications for instance some applications in natural language and certain kinds of medical applications. 
   we have used the language and associated reasoning mechanisms to build an interactive medical diagnosis system in the sub-domain of diseases of the genito-urinary system. although this is a limited domain it is one in which diagnosis is a genuine problem  timpka  1 . the knowledge base is built by taking information directly from medical texts  wor  1; findel et al.  1; braunwald et al.  1  and using our defined language  representing this information as a default inheritance taxonomy. 
　we have evaluated this system by using material from a medical study on diagnosis of patients with genitourinary diseases.1 the evaluation shows our system as behaving comparably to doctors on the available patient 
sample. 
　the following sections describe the language and the associated reasoning mechanisms which have been developed in the context of the diagnosis application. the application is presented briefly and the results of an empirical evaluation are summarised. 
1 	the dtl language 
in designing the language to be used we begin with the default theory of  padgham  1 . this theory relies on 
alternative names are description logics or kl-one like. 

   *this work is supported by funds from the swedish institute for technological development  
1 	knowledge representation 
1
　　 the protocols were collected by dr toomas timpka  and are discussed in  timpka  1 . 
  d t l   
  terminology   
  concept-introduction     concept   
  feature   
  predicate   
  relop   
  set-domain   
  atomic-concept   
  probable   
  restriction   
  default-reachable   ::=: 
::= 
::= 
::= 
::= 
::= 
::= 
::= ::= 
::= ::= 
::= {  terminology   	|   default-reachable  }* 
{  concept-introduction       restriction  }* 
{  atomic-concept   =   concept       atomic-concept       concept  } anything |   atomic-concept   |  and   concept  +  | 
 existall   feature     predicate    |  all   feature     predicate      identifier   
  relop     real   | in   set-domain   
  |   |   = |   = | = 
  string  * 
  probable      identifier    core | default 
 disjoint   atomic-concept     atomic-concept    
 default-reachable   atomic-concept     concept    figure 1: bnf definition of the dtl language the notion that each type is represented by two nodes in an inheritance graph - a default node representing the typical properties of the type  and a core node representing the necessary properties of the type. consequently we introduce the notion of an atomic type being either a core or a default. an important semantic constraint is that the core of a concept is always subsumed by the default of that concept. 
the syntax of d t l follows the style used in  nebel  
1  and is given in figure 1. we note that there are no roles  relational constructs   but that we instead allow features with numerical ranges or sets of strings as values. this is extremely important in the medical domain  e.g. rbc-count  1 . features with numeric values add significant expressivity and are not problematic for the subsumption algorithms. 
   due to space restrictions we do not here define the formal semantics of the language. however  with the exception of the default reachability construct  the language can be defined in the usual set-theoretic way  nebel  1  with the addition of an axiom which states that the extension of the default is always a superset of the extension of the core. the default reachability construct is an outcome of a default reasoning process applied to the terminology. this process is intensionally  rather than extensionally defined. the default-reachability process which we employ is that defined in  padgham  1  as skeptical default inheritance. this process gives for any node  or anded combination of nodes  in the terminology  a set of nodes which are considered to be defaultreachable. this set is essentially those conclusions sanctioned by the skeptical extrusion defined by e.g.  horty et al.  1 .1 
   although the d t l language is richer than typical inheritance network formalisms  it is nevertheless possible to capture it using only a slightly extended network lanuage. we base our network language on that used in adgham  1  which uses core and default nodes  rep resented by a letter with subscripts   d   and  respectively   plus strict positive links  and strict negative links  to this we add the notion of defined nodes  core or default  and property nodes. defined nodes are 
represented by an encircled letter plus subscript and are assumed to be defined by the conjunction of all nodes reachable by a single strict positive link. property nodes are represented by a letter enclosed by a square  and represent an  all...  or an  existall...  clause. this network language can also  usually 1 be mapped into a form using both strict links and default links  written and  -    from a combined core/default node. this alternative form will be used in some examples as it requires fewer nodes and is therefore sometimes simpler to understand. 
1 	reasoning mechanisms 
in order to have a terminological logic system  as opposed to simply a language we must also define the reasoning mechanisms which can operate on this language. classification is the primary reasoning facility offered by t.l. systems  with subsumption being the most significant aspect of classification. we define a default subsumption relation  which together with strict subsumption can be used for classifying new concepts into the hierarchy. we also describe a method suitable for doing some limited reasoning about individuals with respect to this taxonomy. 
1 	subsumption 
at the centre of classification is the notion of subsumption. by testing whether the description to be classified subsumes or is subsumed by certain concepts in the network we establish the set of most specific subsumers and most general subsumees. strict subsumption in our system is defined in an identical way to subsumption in standard terminological languages  e.g.  nebel  1  . subsumption between features is defined in the obvious way  e.g.  blood-count   1  subsumes  blood-count   1  . 
　in addition to strict subsumption which is quite straightforward we also want to define a default subsumption relationship which takes into account the special semantic and structural relationship between the default and the core of a concept. in order to do this we 
1

1
   subtie differences are explained and motivated in  padgham  1 . 
    the only case where the mapping does not work is when we have a relationship originating in a default node. this extra expressivity is not needed in the examples in this paper. 
	padgham and zhang 	1 
rely on the default reachability relationship determined by the default inheritance reasoner. 
　the definition of default subsumption between atomic concepts is as follows: 
definition: for two atomic concepts x y  x defaultsubsumes y iff x is default reachable from y. 

figure 1: illustration of default subsumption. 
　the full process of determining default-subsumption between arbitrary concept definitions is then analogous to that used in standard subsumption algorithms  e.g.  nebel  1    where the concept definition is unfolded and normalised and each part of the concept definition  in our case anded concepts. all clauses  existall clauses and feature definitions  is tested separately the only difference is that  for comparison of atomic concepts default-subsumption rather than strict subsumption is used. 
　the intuition behind default-subsumption is that if the object being classified is fully typical  then all default-subsumption relationships will also be subsumption relationships. jf a strict inheritance hierarchy is coerced so that all the inheritance relations became defaults  default-subsumption on this network should give the same relationships as subsumption did on the original strict network. 
1 	classification 
the role of classification in terminological logic systems is to correctly place new concepts into the taxonomy so that they can be used for reasoning. we describe briefly the classification process used for adding new core and 
default concepts into our system. 
　the basic steps in a standard classification algorithm can be described as follows: x is the concept to be classified. 
1. traverse hierarchy collecting most specific subsumers of x. 
1. traverse hierarchy starting at children of one of the most specific subsumers  collecting most general subsumees of x. 
1. link x as child of most specific subsumers. 
1. link x as parent of most general subsumees. 
1. modify parent and child links in most specific sub-sumers and most general subsumees  if necessary. 
1 	knowledge representation 
　our algorithm is identical to this at a high level. however the definition of which are most specific subsumers  and most general subsumees  differs in our system. just as in standard systems subsumers of x are those concepts which  strictly  subsume x. in a standard system the most specific subsumers of x  are those subsumers which do not subsume some other subsumer of x. in our system the most specific subsumers of a default concept are those which do not default-subsume some other subsumer. for a core concept the most specific subsumers are defined in the standard way. this allows default definitions to rely on default inheritance  while core definitions require guaranteed inheritance of properties. 
　similarly the most general subsumees of a concept are defined to be those which are not default-subsumed by any other subsumee. 
　the rationale for using strict rather than default subsumption to determine which are the most specific subsumers for a core concept is that core concepts contain  by definition  strictly necessary properties. thus the representation should ensure that these properties  or inheritance relationships  cannot be overriden. 
　figure 1 shows an example of classification of a core and a default concept. 1a shows the links which would be inserted if the concept description was introduced as core e   while 1b shows the situation that would arise with the introduction of the same concept description as default f . in both cases the new concept description is  strictly  subsumed by default a  and core b . in the case of introducing a new core concept these links are simply added as there is no strict subsumption relationship between default a  and core b . however when the concept being introduced is a default only the link to default a  is added as core b  default-subsumes default a   and is thus not regarded as one of the most specific subsumers. in the resulting taxonomy e objects will always inherit x from core b  and z from core a   via de-
fault a  and core e   and y from default b  via core e . f objects will by default inherit these same properties  via default f . 
　the modification of parent and child links in most specific subsumers and most general subsumees follows the same principle as described above. 
　we note that if one adds information which in some way changes already defined concepts  then both strictlysubsumed and default-subsumed children can be affected. this is a common problem in terminological systems but is beyond the scope of the current paper. 
1 	reasoning about individuals 
classification is often used not only to classify new concepts but as an important component in the reasoning about individuals. the task here is to establish which classes the individual belongs to. in accordance with the use of defaults we want to establish which classes the individual probably belongs to. we call this default classification. this process actually requires interaction between default reasoning and classification which is nontrivial  see  padgham and nebel  1  . however a simpler approach can be suitable for either interactive applications where wrong assumption of defaults can be 


figure 1: classification of a new concept - core and default 

discovered interactively  as in our diagnosis application  or for applications where the structural nature of con fiicts is simple.1 
   in default classification of individuals we rely more heavily on default subsumption than we do in concept classification. as the hierarchy is traversed we collect all default-subsumers of the individual.  in concept classification we collected only strict subsumers . this ensures that  the reasoning process is pushed further down in the hierarchy  making use of default knowledge. however it incorporates only one level of default assumptions. in order to have full default  classification we would need to continue further from the result of this step  making further default assumptions on the basis of our default classification  followed by further approximate default classification and default reasoning until we reached a  possibly inconsistent  fix-point. conflicts would then need to be resolved. however for the purposes of this paper we limit ourselves to the initial approximation which is computationally and conceptually simpler and is sufficient for the application discussed 
1 	the diagnosis application 
we now describe our diagnosis application and the way in which it used the language and reasoning mechanisms described. many domains represent tlieir knowledge in a hierarchical or semi-hierarchical form e.g. medical textbooks are often organised according to disease hierarchies. if we assume that we have hierarchically organised domain knowledge and that a problem can be described in the language of the knowledge base  then diagnosis can be seen as conceptually quite similar to classification. if the problem description is complete we can find the set of possible diagnoses which are subsumed by the problem  and then take the minimum cover of this set. for example in figure 1 the diagnosis would be  chronic pyelonephritis and acute cystitis .1 the assumption in taking the minimum cover is here that a diagnosis must explain  or cover  all aspects of the disease description. however it should also be a minimal explanation so we do not simply take the entire set of subsumees as a diagnosis. 
　the notion of diagnosis as essentially a classificatory process is intuitively appealing. it appears logical and it uses a taxonomical representation of the domain which we know is a common way for humans to organize knowledge. it also explains one general purpose reasoning strategy  in terms of another simpler such strategy - diagnosis is classification plus minimum cover. 
　however if we now move from the ideal case to a more real-world situation  there are a number of problems with this approach  although the basic model is still promising. the two major difficulties are the following: 
  problem descriptions in the real world are seldom complete. 
  taxonomies in the real world are seldom strict hier-archies. they are thus not a suitable representation for traditional classification approaches. 
　the latter of these two problems we address by using the language and reasoning mechanisms described above. the former problem we address by the notion of an interactive diagnosis system where the system seeks further information in a principled and directed way. we make an approximate and tentative default classification of the problem description and then ask questions to determine the value of features contained in subsumee nodes but  unknown in the problem description. we use techniques from information theory in order to ask first those questions whose answers will best discriminate between possibilities. this latter technique we hypothesize 

1
　　due to space limitations we cannot here go into details about the nature of the structural constraints required. 
1
　　 the disease descriptions used here are incomplete - both to save space and to simplify. 
	padgham and zhang 	1 


figure 1: the diagnosis should he a minimal cover of the problem 

may well simulate the  compiled knowledge'' of experts who  know  which are the most telling questions to ask 
or lab tests to request. a detailed discussion of the mutual information analysis is however beyond the scope of this paper. by rerunning our approximate default classification algorithm following the collection of new information we ensure that initial  possibly  faulty assumptions are modified as the process progresses. 
1 	t h e k n o w l e d g e base 
the knowledge base was built using the dtl language. the knowledge base is thus a default inheritance hierarchy over disease classes of the form used in  padgham  1; padgham  1 . this information was taken directly from the standard medical text  wor  1 . 
   each disease is characterised by a set of properties describing such things as symptoms and results on lab tests. each property was determined to be typical  necessary ox possible.' the properties with which diseases 
were annotated were taken from  braunwald et al.  1; findel et al.  1 . a medical doctor checked the representation and in particular indicated whether properties were typical  necessary or possible. 
   all diseases were entered as primitive concepts  i.e. using the   form for concept introduction . the rationale for this was that the represented information about a disease cannot be expected to fully define that disease. as a result of this the classifier never added new subsumption links - however it did check for consistency and maximize inheritance. 
　　possible properties are not part of the original theory of  padgham  1   or of the language defined in figure 1. however they were found to be necessary for this application and were added to the language simply as an alternative form for the   probable   construct. a discussion of why these were necessary and how they can be integrated with the original theory can be found in  zhang  1 . 
1 	knowledge representation 
1 	t h e diagnostic e n g i n e 
the diagnosis in our system is a non-monotonic interactive process consisting of two main parts. there is first the approximate default classification of the presenting problem and then an analysis regarding which information it is most relevant to request.1 the expectation is that addition of the new information will enable specialisation of the initial classification on the next time through the loop. however it is also possible that the new information will lead to different default subsumption relationships and an orthogonal classification  thus making the process non-monotonic in nature. eventually the classification reaches a single terminal node in the disease hierarchy  or in the case of multiple diseases  a set of terminal nodes  none of which is sufficient in itself  and the diagnosis is complete. 
   in the application one significant change was made to the approximate default classification algorithm as described in section 1. we note that as all of the concepts are declared as primitive  none of them can actually subsume the problem description unless they are explicitly or implicitly declared to do so. however this assumption appears to be inappropriate for the use we are making of classification in this application. we hardly want to require that we can only make diagnoses which we have explicitly stated in the problem description! consequently in our use of approximate default classification we disregard the fact that concepts are declared as primitive  and treat them as defined. 
　once we have established which classes the problem description probably belongs to  we use this information to determine which concepts to consider in seeking further information about the problem. we build what we call a pursuit set of nodes which could reasonably be 
1
　　this analysis also relies on a knowledge base representation which uses defaults  but the details of these steps are beyond the scope of this paper. for full details see  zhang  1  

pursued. we then analyse these taking into account certain heuristics  e.g. that a problem is more likely to be a typical disease manifestation than an atypical one  and develop an ordered list of information to be sought. 
1 	empirical evaluation of system 
one way to evaluate our system is to ascertain how often it obtains the correct diagnosis. however it is not always easy to say what is a correct diagnosis. we therefore compared our system to medical doctors' diagnosis using patient protocols from 1 patients. the patients were seen by a general practitioner at a community health centre and forms were filled in regarding symptoms  signs  lab tests  etc. the gp's diagnosis was also recorded. the 1 patient description protocols  without diagnosis  were then given to each of 1 different specialists who were asked to make a diagnosis on the basis of the recorded patient information. following this the nine doctors discussed each case together and where possible agreed on a diagnosis  referred to as panel diagnosis 'pa' . we then ran these same 1 cases on our system.1 
   there was considerable disagreement between doctors on the diagnosis for a significant number of patients. on only 1 of the 1 patients did all 1 doctors  gp + 1 specialists  agree on the diagnosis. our system also agreed with the doctors for all these patients. 
   there were an additional 1 patients where the specialist group after discussion amongst themselves came to the same diagnosis as the general practitioner. of these 1 patients our system obtained the same diagnosis as the gp and panel for 1 cases. for the various specialists the comparable figure ranged from 1. it is worth noting that on two of the cases where our system failed to obtain the same result as the panel and the gp  none of the specialists obtained this result either. in three of the 1 cases where the system  the gp and the panel were in agreement  the system also suggested an alternative diagnosis suggested by 1 of the specialists. 
   this study seems to indicate that at least for those cases where the medical community itself can agree on a diagnosis  our system performs well. we note that only about half of these cases were so clear that all doctors reached the same initial diagnosis. the remaining half required discussion amongst the panel before agreement was reached. even on such cases our svstem performed well. 
   in order to evaluate the effectiveness of the algorithm we logged the runtime behaviour of the system. the algorithm led to a quick focussing  within 1 loops  on the right direction to pursue in the taxonomy. only in cases where no diagnosis was found did the system wander all over the taxonomy. 
1 	discussion and conclusions 
there are a number of interesting conclusions that can be drawn as a result of the work presented here. most importantly the dtl language appears to be one useful 
1
　　the full results of the evaluation summarised here can he found in  zhang  1 . 
variant of a terminological language with defaults. although traditional expressivity is limited the language includes defaults  which are necessary in a number of applications including the one described here. a default subsumption relation is described which combines principled default reasoning with classification  and it is indicated how this can be used in the t-box 1 component of a terminological reasoner in order to build the default taxonomy. the default subsumption is also used in an interactive algorithm for guiding a-box reasoning. this work can also be regarded as an application which uses default reasoning techniques in a real system. to date there has been a large amount of work on theoretical aspects of default reasoning  but extremely limited implementation or application of theories developed. 
   in addition to indicating that the suggested language is in fact a useful trade-off in different kinds of expressivity  this work suggests that the distinction between primitive and defined concepts   which is well established in terminological logics  is not always appropriate when using the system in an application domain. this could be an interesting aspect for further study. we observed that in this particular application the structure of the knowledge base was such that almost all stated inheritance relationships between concepts were between core concepts  concepts were linked by strict links in a mixed link graph . at the same time most properties were defined for default  rather than core concepts. it should be investigated whether this is a common pattern and if so what ramifications it has for terminological systems. 
　although the approximate default classification algorithm presented here was adequate for this application  it should clearly be developed further to give a more complete algorithm. 
   the results of this work are also interesting from the point of view of diagnostic models or architectures for diagnosis systems. while our approach is in some ways close to abductive diagnosis  e.g.      the hierarchic nature of the knowledge base in our system is an important differentiating factor. the use of an inheritance hierarchy in a diagnosis system is not in itself new  and has been used with notable success in systems such as internist  pople  1 . however the level of detail in our system is much coarser  and therefore much more readily available without large amounts of expert input. internist relies heavily on probabilities for every feature in a disease description in order to drive the diagnostic process  whereas we have a much simpler 1 point scale  necessary  typical  possible . the fact that the diagnostic engine relies heavily on general purpose reasoning mechanisms rather than tailored rules is also significant for generalisability and maintainability. domain specific heuristics can undoubtedly give better performance in many cases  but it is an advantage if these can be added on top of a relatively stable base architecture. the good diagnostic results despite lack of any domain specific heuristics  indicates that the combination of default reasoning and classification gives a powerful general 
　　1 the terms  t-box  and  a-box  refer to the components of a terminological system which reason about the terminology and about individuals respectively. 
	padgham and zhang 	1 

purpose reasoning tool. 
　the model of diagnosis as an interactive process which includes a principled search for information is a more realistic model in many situations than one which assumes complete information regarding the problem description. 
　a terminological logic framework was shown to be appropriate for implementing this medical diagnosis application. however it would not have been possible without the inclusion of defaults in the representational formalism. 
acknowledgements 
we thank the medical doctors dr anders johnsson  
dr martyna nowosielska and dr marek woynarowski for help with the diagnosis application and dr toomas timpka for the patient protocols used in evaluation. the first author has had useful discussions with bernhard nebel on terminological reasoning  including issues surrounding the integration of defaults. 
