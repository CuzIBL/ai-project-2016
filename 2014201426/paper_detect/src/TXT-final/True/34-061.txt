 
         whan a usar intaracts with a natural language system  ha may wall uaa words and expressions which ware not anticipated by tha systea designers. this paper describes a systea which can play tic-tac-toe  and discuss tha game while it is in progress. if the systea encounters new words  
new expressions  or inadvertent ungrammatlcalltles  it attempts to understand what was meant  through contextual inference  and by asking intelligent clarifying questions of the user. the systea than records the meaning of any new words or expressions  thus augmenting its linguistic knowledge in the course of usar interaction. 
1. introduction 
         a number of systems are being developed which communicate with users in a natural language such as english. tha ultimate purpose of such systems is to provide easy computer access to a technically unsophisticated person. when such a parson interacts with a natural language systea  however  he is quite likely to use words and expressions which were not anticipated. to provide truly natural interaction  the system should be able to respond intelligently when this happens. 
         host current systems  such as those of winograd  and woods   are not designed to cope with such  linguistic input uncertainty.  their parsers f a i l completely if an input sentence does not use a specific  built-in syntax and vocabulary. at the other extreme  systems like eliza  and parry  allow tha user to type anything  but make no attempt to fully understand the sentence. the present work explores the middle ground between these extremes: developing a system which has a great deal of knowledge about a particular subject area  and which can use this knowledge to make language interaction a flexible  adaptive  learning medium. 
         in pursuing this goal  the present work is most closely related to work being done in the various speech recognition efforts  1  1  1  1  which are studying how linguistic and semantic constraints can help deal with the acoustic error and uncertainty of speech. the adaptive systea  however. is designed to deal with a much more linguistic type of uncertainty. 
         when people use unfamiliar words or expressions in conversation  we can usually deduce from context what is meant  and if not  we can at least ask intelligent clarifying questions. to allow the machine to do tha same  there must ba a very flexible interaction of syntax and semantics in the parsing/understanding process. there must be a different parser organization  and a more flexible use of linguistic and semantic constraints  than la present in current natural language systems. 
         the adaptive systea is a step towarda thls goal. the current implementation la a prototype  designed to illustrate many of these ideas  and to tie them together in a restricted system that is complete but not too complex. the system's domain of discourse is tic-tac-toe: it plays a game and discusses the game in progress. it has a  currently lialted  set of semantic concepts  and attempts to interpret the user's sentences in terms of these. the set of semantic concepts is fixed. the systea does not attempt to learn new concepts  merely new 
ways of describing concepts that are already 
familiar. 
         when the system encounters a new word or a new phrasing  it uses contextual information to determine tha possible meaning  and to ask clarifying questions which are as intelligent as possible. it then remembers the meaning of the new expression  and w i l l use it itself when it talks. 
1 
 notice that two top squaras contain an x. however  only tha left ona was playad while tha bottom right 
¡¡tharafora tha systaa concluded that tha top laft squara was baing dascrlbad. this  a naw surface frame  as described in taction 1  la added to the sat of surfaca frames which axpraas tha concapt of making a move.  
example illustrates how contextual information can ba usad to ask as intelligent a clarifying question as possible.  
1 


1 comments on currant limitations 

1. overiew 
         fig. 1 shows the various stages that the adaptive systam goes through in understanding a sentenca. in this section  we shall watch while tha systaa procassas tha santanca  how come you placed an x in tha top right square.  

         thara ara a number of limitations to tha adaptivs systaa as it now stands. some of these may ba apparant in tha sample session  but an introduction to tha system is not coaplata without 
discussing them explicitly. 
 1  tha number of concapts available to tha systaa at prasant is vary small. this  in fact. is why tha system's f i r s t guess is usually tha corract one. if tha sentence is at all within tha systaa's comprehension  the options as to its aaaning ara currently quite halted. 
 1  tha range of expressive devices presently recognized is quite lialted as wall. for instance  tha system does not recognize relative clauses  conjunctions  or pronouns  except for i and you . 
 1  the system currently deals only with totally unfamiliar words and expressions in this adaptive fashion. it w i l l not correctly handle familiar 
words which are used in new ways  such as a noun used as a verb  as in  zero the center squara  . 
 1  the system tries to map the meaning of new words and expressions into its specified set of underlying concepts. it then displays its hypotheses to the user  giving him only the option of saying yes or no. the user cannot say  no  not quite  it means ... .  thus concepts like  the 'northeast' square  or  the 'topmost' square  would be confusing and not correctly understood.  
         the present simple systaa has been developed with two goals in mind:  1  to explore the tachniques required to achieve adaptive behavior  and  1  to help formulate the issues which w i l l have to be faced when incorporating these tachnlques into a much broader natural language system. 

 1  local syntactic processing: in this f i r s t stage  the system scans the antlra sentence looking for local constituents. these include  simple  noun phrases  nps  and prepositional phrases  pps     simple* meaning  up to the head noun but not including any modifying clauses or phrases    and verb groups  vgs  consisting of verbs together with any adjoining models  auxllllaries  and adverbs. in this 
instance  the system finds the two nps   you  and  an x   the pp  in the top right squara   and tha vg  placed . 
 1  semantlc clustering: 
at this stage  tha clause-laval procassing starts. 
1 

unlike most systems  this clause-level processing is driven by semantic relationships  rather then by syntactic form. it uses a semantics-first  clustering   with a secondary use of syntax for comments and confirmation. in this example  a l l the local constituents found can be clustered into a description of a single concept: that of maklng a move. section 1 describes the mechanics of this stage in more detail. 
 1  cluster expansion and connection: during this stage  an attempt is made to account for each word in the sentence by expanding the concept clusters  and if there is more than one  by joining them together to form an entire multlclausal sentence. 	in this case  the concept cluster might be expanded in two ways. 
a  one possibility might be that it is a  how  type question  and that  come  is some sort of adverb. however this possibility violates a semantic constraint  since the system is not set up to answer how a move is made; only how to win  how to prevent someone from winning  etc. therefore this possibility is ignored. 
b  the other possibility is that  how come  is a new way of describing some other clause function. 
 1  	contextual inference; clarification; and 
response: 
during this final stage  any contextual information available is brought to bear on areas of uncertainty  any necessary clarifying questions are asked  and the system responds to the sentence. in this example  the only uncertainty is the meaning of  how come . since this is the main clause of the sentence  the possibility of its being an  if  or  after  clause are discarded. the remaining possibilities are  imperative    how    why   and  can . the system does not answer  how  and  can  questions in relation to making moves. similarly   imperative  does not make sense since the action described is a previously made move. therefore the system asks if  how come someone does something  means  why does someone do something . the user answers  yes   so the system stores this new way of asking  why   and proceeds to answer the question. 
	1. 	semantics-first clause-level processing 
         one of the major differences between this approach to parsing and that of a top-down  syntaxdriven system  such as woods* or winograd's  is the order in which syntactic and semantic processing is done at the clause level. 
         in a top-down system  a sentence must exactly match the built-in syntax before semantics can even be called and given the various constituents of a clause. this is clearly undesirable when one is dealing with input uncertainty  since one cannot be sure exactly how the user w i l l phrase his sentence. one would prefer to let semantics operate first on any local consituents present  so that it can make a reasonable guess as to what is being discussed. 
         as semantically-related clusters of local constituents are found  syntax can be consulted and asked to comment on the relative grammatlcallty of the various clusters. if there are two competing semantic interpretations of one part of a sentence  and syntax likes one much better than the other  then the  syntactically pleasing  interpretation can be pursued f i r s t . later  if this does not pan out  the syntactically irregular possibility can be 
looked at as well. in this way  syntax can help guide the system  but is not placed in a totally controlling position. 
         a by-product advantage of this semanticsf i r s t approach is that the system can handle mildly 
ungrammatlcal input without any extra work. in addition  the semantics-first clustering approach lends itself quite naturally to handling sentence fragments. 
         in the remainder of this section  we describe how the adaptive system organizes its linguistic knowledge to implement this semanticsf i r s t approach. as we shall see  there are three components of this knowledge. 
 a  the local recognizers which initially find local constituents. these recognizers are represented in augmented transition network   i i   form  are quite simple  and are not described further in this paper.  b  clause-level knowledge of how actions and clause-functions are described. this knowledge is expressed in a descriptive fashion which makes it easily manlpulable  and easy to add to.  c  clause-level syntactic knowledge which is expressed in a domain-independent form. 
1 knowledge of how actions are described 
         figure 1 illustrates how the system stores i t s knowledge of how actions  or events  are described. this knowledge is stored at two levels: 
the conceptual level  and the surface  or expressive  level. 

         as shown in fig. z  the concept #place represents the act of making a tic-tac-toe move.  a  on the conceptual level  there are three  conceptual slots  indicating the actors which are involved in the action: a player  a mark  and a square. 
 b  on the surface  or expressive  level there is a l i s t of surface frames each indicating one possible 
	way that the concept can be expressed. 	each surface 
frame consists of a verb plus a set of syntactic 
1 

case frames to be filled by the actors.  notice that neither the conceptual slots nor the surface fraaes indicate explicitly the order in 
which the various constituents are to appear in a sentence.  
         when the systea processes a sentence  it f i l l s the conceptual slots with local constituents found in the sentence. 	if it has found a faaillar verb  then it also gets any surface fraae s  associated with that verb. 	at this point it calls syntax  asking for consents. 
         for instance  if the input sentence is *i place an x in the corner   then all the conceptual slots of #place would be filled  and the systea would pass the following string to syntax  agent verb obj pp . as a result  clause-level syntax does not see the actual constituents of the sentence  only the labels specified in the surface case fraae  plus information indicating number  tense  etc. 
         an interesting aspect of this approach is that the clause-level syntax is entirely domainindependent. it knows nothing about tic-tac-toe  or even about the words used to talk about tic-tac-toe. the surface frames allow semantics to talk to syntax purely in terms of syntactic labels. as a result  one could write a single syntactic module  and then insert it unchanged into many domains. 
1.1 using this information 
         in this section  we describe in more detail how this knowledge can be used when processing a sentence. 
 1  if the verb and constituents are faaillar: 
         if there is no uncertainty in a clause  then each constituent can be put into one of the conceptual slots  and any surface frames associated with the verb can be examined. the fraae indicates the case  agent  object  etc.  associated with each constituent when that verb is used. the fraae is used to create a string of case labels that are sent to syntax for comments. 
         for instance  if the sentence is  i place an x in the center square   the string passed to syntax is  agent verb obj pp . syntax replies that the sentence follows normal order. had the string been  verb obj pp   syntax would reply that the subject had been deleted. if the string was  do agent verb obj pp   syntax would reply that subject-verb inversion had taken place. given  agent obj verb pp   syntax would reply that the object was out of position. 
         thus syntax is set up to notice both grammatical and ungraomatical permutations in constituent order  and to comment appropriately. the system must then decide how to interpret these comments. 
         for instance  if syntax replies that the object is out of position in the clause  or that there is incorrect agreement in number between subject and verb  the system may decide that the user has made a minor grammatical error  and allow the sentence to be processed anyway  especially if there is no better interpretation of the sentence. in this way  clause-level syntax plays an assisting role rather than a controlling role in the analysis of a sentence. 
 1  if a constituent is unknown: 
         if an unknown constituent is present  then both the fraae and slot information can be used to halp resolve its meaning. for instance  suppose tha sentence is  i place a cross in the centar square*  and the word  cross* is unfamiliar. 
         here  during tha semantic clustering  tha conceptual slots for a playar and a square can ba f i l l e d by   i   and  in tha cantar squara . but tha slot for a mark is unfilled. in addition  there is the unknown constituent  a cross . 
         a natural hypothesis  therefore  is that tha unknown constituent refers to a type of aark. sinca the verb is familiar  a surface frame is available. next  assuming the unknown constituent is a mark  the string  agent verb obj pp  can be passed to syntax. when syntax approves  this offers additional confirmation that the hypothesis is probably right. 
         subsequent evaluation of this hypothesis lndicatas that the sentance makes sanse only if tha 
mark referred to is an x  so tha system asks if  cross  is a noun meaning  x . 
 1  if the verb is unknown: 
         if an unfamiliar verb is used  then there it no surface frame available to help guide tha analysis. instead  syntax must ba usad in a different mode to propose what the surface frame should be. 
         suppose the sentence is  i plunk an x in tha center square . here  all the constituents can ba clustered into the concept 'place  but-there is an unknown word  and no verb. the logical hypothesis is that the new word is a verb. a special syntactic 
module is therefore passed the following string  np p  verb plunk  np n  pp ln 1 v this module examines the string and produces a new frame: 

         the system can than ask if  to plunk something somewhere  means  to place something somewhere   and upon getting an affirmative reply  can add tha new frame to those associated with tha concept #place. 
         since the system uses the surface frames to generate its own replies  it can now use this new frame itself whan it talks. whan the system wants to generate a clause  it passes a selected frame  the constituents  and a list of syntactic features to a clause generator which outputs the specified form.  thus  clause-level syntax can be used by tha system in three different modes:  1  to comment on the grammatlcality of a string of case markers   1  to construct a new surface frame  and  1  to generate clauses whan the system itself replies.  
1 knowledge of how clause-functions are 
         as illustrated in fig. 1  knowledge of haw clause-function concepts are described is also expressed as two levels. 
         each clause function has a conceptual slot indicating what types of action can be used with that clause type  in this case  tha action #place   and a l i s t of surface frames indicating different ways in which the concept can be expressed. 
         a clause-type frame currently includes any spacial words which introduce tha clause  la.  why  or  how come    together with a list of syntactic properties which should be present in the clausa. 
1 
this l i s t of syntactic properties night include svimv   subject-verb inversion   as in 'why dots someone do something'   or  subject deletion    ing form   and  use of a particular preposition   as in  fron doing something' . 

         these syntactic features  however  need not be inflexible rules. sentence understanding can s t i l l proceed even if the syntactic features found by syntax do not exactly natch those specified by the clause-function frame. thus  an inadvertent ungrammatically can readily be recognized as such  and processing can continue. 
1.1 	using the clause function knowledge 
         in this section we examine how this clause function knowledge can be used. 
 1  	with no uncertainty: 
         if the input sentence is  why did you place an x in the center square   then during the senentlc clustering the string  do agent verb obj pp  is passed to syntax  which replies that subject-verb inversion has taken place. 
         when examining the whole clause  the system sees that it exactly matches one of the surface frames for a #why-type question  since it starts with the word  why  and contains subject-verb 
inversion. 
         suppose  however  the sentence had been  why you place an x in the center square   or  how come did you place an x in the center square . each of these sentences matches a surface frame for a #whytype question  except that in both cases subjectverb inversion is incorrect. in such a case  the system can  if it chooses  decide that the user has 
made a minor error  and allow the sentence to be processed anyway. the locally-driven semanticsf i r s t approach lets this happen in a natural way. 
 1  a new surface frame: 
         another problem arises when a new clause introducer is encountered  as in:  wherefore did you place an x in the center square . here  as described in section 1  the system hypothesizes that this may be a new way of asking a #why-type question. since syntax reports that subject-verb inversion has taken place  the system can therefore create a new surface frame: 
to be added to the frames associated with #why. 
1 comments 
         in summary  the adaptive system stores its linguistic knowledge in a very accessible form. 	it is not embedded in the parsing logic. 	knowledge of 
how actions and clause-functions are described is represented in a descriptive  manlpulable format. syntax is domain independent  and is used only to make comments  with semantics playing the guiding role. this organization allows the parsing/understanding process to proceed in a flexible fashion. 
1. flexible organization of semantic constraints 
         in an adaptive parsing system  semantic constraints must also be in a flexible  manlpulable form so that they can assist in the inference-making process. this contrasts with a non-adaptive system  a system where the syntax and vocabulary is assumed to be fixed . in e non-adaptive system  semantic constraints can often be included in an ad-hoc fashion  without really being explicit about how they interrelate. 
         to illustrate this difference  let us consider the following sentences. 
 1  after you played the top west square could i beat you if i played the bottom right square. 
 1  after you played the top right square could i beat you if i played the bottom west square.  we shall assume that the word  west  is not known to the system.  
         first let us see how a non-adaptive system would handle such sentences  assuming no unknown words.  see fig. 1  

 a  when it encounters the  after  clause  it looks in its l i s t of past moves to see if one matches the description given. if so  the resulting board position is used as context for the rest of the sentence. if not  the system aborts  giving an error message such as  you have referred to a nonexistent past move . 
 b  when processing the  if  clause  the system takes the board position produced by the  after  clause  and sees if the move referred to is legal in that context. if so  it produces a new board position. if not it aborts with an error message such as  you have proposed an illegal move .  c  finally  when processing the main clause  the system takes the board position produced by the  if  clause and examines it to answer the question. 

wherefore action svinv  
m l 

¡¡¡¡¡¡¡¡¡¡thus  the following semantic constraints art programed i n :  a  that the move described in an  after  clause must refer to a previous bove  and  b  the bove described in an   i f   clause wist be legal in i t s board position context. 
¡¡¡¡¡¡¡¡¡¡in an adaptive systea  these constraints can be used in an active fashion to help infer the meaning of new words. for instance  if sentence  1  
is to make sense  then  the top west square  must refer to a square played while the bottom right square was free   i e . was s t i l l a legal aove . thus  as i l l u s t r a t e d in the sample session  if two top squares contain an x  but only one was played before the bottom right square was f i l l e d   then that bust be the square being described. similarly  in 
sentence  1    the bottom west square  bust refer to some square that was free when the top* right square was played. 
¡¡¡¡¡¡¡¡¡¡thus the semantic constraints which are added almost as after-thoughts in a non-adaptive system to handle the unlikely event of a user typing nonsensical input  become a central part of the inferential aechanlsm in an adaptive system  for the 
very reason that they allow the system to discard nonsensical interpretations of the meanings of new words. 
¡¡¡¡¡¡¡¡¡¡these two sentences also i l l u s t r a t e that such constraints can operate globally between widely separated parts of the sentence. furthermore  they can operate equally effectively in two  or more   directions . in other words  certainty in the   i f   clause can help resolve uncertainty in the  after  clause  or alternately  certainty in the  after  clause can help resolve uncertainty in the   i f   clause. 
         notice that there is also a t h i r d  direction  in which these constraints can be used. consider the following sentence. 
 1  when you played in the center square could i beat you if i played the top right square. 
¡¡¡¡¡¡¡¡¡¡if  when  is an unknown word  then the system must t r y to infer what clause-function it might refer to. in so doing  the system checks whether the  when  clause describes a previous move whose subsequent board position allows the aove described by the   i f clause. if so then  when  alght aean  after . if not  then  when  presumably means something else. here we see certainty inside the two clauses helping resolve uncertainty as to the function of one of the clauses. 
         the clear implication of these exaaples is that these semantic constraints bust be incorporated in a much more systematic and flexible fashion than is necessary in a non-adaptive system. 
1 implementing these constraints 
         the adaptive system handles this problem as follows: 
 a  if there is uncertainty in the  arter  clause  then it produces not one  but rather a list of board positions  corresponding to different possible interpretations of what the clause beans . 
associated with each is the uncertain constituent  in this case  the np  the top west square   and the referent of that constituent that corresponds to that board position possibility   i e . the actual square which the np alght be describing . each of these board positions are fed in turn to any   i f   clauses in the sentence. during this proctss  the semantic constraints might invalidate soae of these board positions. this leaves the system with a more selective group of referents that the np bight be describing. in this way  the user can be asked a c l a r i f y i n g question that is as  intelligent  as possible. 
 b  a similar process takes place if the   i f   clause contains uncertainty. a l i s t of possibilities is compiled by the   i f   clause  tested in further   i f * clauses   i f any   and only then is the user asked for c l a r i f i c a t i o n . 
¡¡¡¡¡¡¡¡¡¡this method is one way of allowing such semantic constraints to help the inference process  and thereby let the system ask as intelligent questions as possible. there are a great many 
intra-utterance constraints of this sort  whose nature and implications have never been systematically explored. the development of adaptive parsing techniques w i l l provide motivation to explore these more f u l l y . 
¡¡¡¡¡¡¡¡¡¡this example  in fact  illustrates a such aore general phenomenon. in natural language  there are many levels of syntactic and semantic knowledge which contribute to the understanding of a sentence. these a l l interact  and therefore constrain each other in complex ways. in a f u l l y adaptive system  one must be prepared to help resolve uncertainty on any of these levels by taking advantage of certainty on many other levels. to allow this  one is forced to think out f u l l y and systematically exactly how a l l this knowledge interacts. this could be one of the greatest contributions of studying language froa an adaptive standpoint. 
	1. 	sentence. clarification and evaluation 
¡¡¡¡¡¡¡¡¡¡in this section  we describe how semantic constraints con be used to resolve input uncertainty. after the semantic clusters have been formed  cluster expansion and connection groups these into one or more sentence hypotheses. each sentence hypothesis is a set of clauses which span the entire sentence. the system must then  evaluate  these clauses  ie. determine their meaning . 
¡¡¡¡¡¡¡¡¡¡the clauses are evaluated in the following order. first any  after  clause is evaluated. then any   i f   clauses ore evaluated left to right. finally the main clause is evaluated. thus if the sentence is 
¡¡¡¡¡¡¡¡¡¡    i f a   after b   could c   if d   the clauses would he evaluated in order b  a  d  c. 
¡¡¡¡¡¡¡¡¡¡in the process of this evaluation  any uncertainty present is resolved. the uncertainty might be that a constituent contains an unknown word  or it might be due to the use of a new action or clause-function surface frame. 
	constituent 	uncertainty: 
¡¡¡¡¡¡¡¡¡¡sometimes constituent uncertainty can be resolved from information available in a single clause. sometimes information from several clauses is used. 
¡¡¡¡¡¡¡¡¡¡for example  consider the clause  after i placed a circle in the center square . if the word   c i r c l e   is unknown  then as described in section 1  previous processing indicates that this is an  after  clause doscribing a move  and that  a c i r c l e   probably refers to some mark. to evaluate this clause  the system examines the previous moves and presumably finds that   i   indoed did play in the 
1 

center square and that the mark involved was an  1m. thus the l i k e l y moaning of  circle  is resolved from information available entirely within this clause. 
on the other hand  as described in section 
1  with the clause  after i placed an o in the top west square   if  west  is unknown then several squares may bo being described. section 1 describes how the system allows information from other clauses to constrain the square being described. when as rostricted as possible a l i s t of squares is f i n a l l y determined  it is passed to a routine whose job is to resolve noun phrase uncertainty. in this case  the routine w i l l examine the different adjective-
concepts  such as #ric.ht  #left. #corner. ibottom  etc.  to see which might describe possible squares  and then ask.the user which was meant. 
new surface frame uncertainty: 
¡¡¡¡¡¡¡¡¡¡if a new surface frame is used to express a familiar action  ie. a new verb and/or prepositions 
marking the nps   the different possible meanings are automatically considered when the system attempts to f i l l the conceptual slots of different action concepts. even if only one concept has the appropriate slots  the system asks to be sure. sometimes  however  several actions have the same conceptual slots  such as  i beat you    i t i e you   and  1 lose to you  . in this case  of course  the system must ask which was meant. 
¡¡¡¡¡¡¡¡¡¡if a new surface frame is used to express a familiar clause function  the system currently uses the following simple constraints to delimit i t s possible meaning. each sentence is assumed to have one and only one main clause.  after  clauses must describe a previous move.   i f clauses must describe some possible move  either in the current game context  or in the context of any  after  clause in the sentence .  why  clauses must refer to a previous move.  can  and  mow can  clauses must refer to the action of beating  tieing  losing  preventing  allowing  or forcing. imperative clauses must refer to a possible current move. in our simple domain  these constraints usually delimit the meaning of a new surface clause-function frame to a single possibility. 
¡¡¡¡¡¡¡¡¡¡this section has described how the adaptive system can constrain input uncertainty. clearly  in a more complex domain  one would want to use much more sophisticated constraints. the important point is that the locally-driven  semantics-first design provides a very natural framework for incorporating such constaints. the purpose of the present work is to take a f i r s t step in exploring the design of such a system. 
1. conclusion 
¡¡¡¡¡¡¡¡¡¡language communication is an inherently adaptive medium. one sees this clearly if one takes a problem to a lawyer and spends time trying to assimilate the related  legalese . one also sees it 
in any conversation where a person is trying to convey a complicated idea  expressed in his own mental terms  to someone else. the listener must try to relate the words he hears to his own set of concepts. language has  presumably  evolved to f a c i l i t a t e this sort of interaction. therefore it is reasonable to expect that a good deal of the structure of language is in some sense set up to assist in this adaptive process. by the same token  studying language from an adaptive standpoint should provide a fresh perspective on how the various 
levels of linguistic structure interact. 
