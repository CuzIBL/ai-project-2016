
functional modeling is in use for the interpretation of the results of model based simulation of engineered systems for design analysis  enabling the automatic generation of a textual design analysis report that expresses the results of the simulation in terms of the system's purpose. we present a novel functional description language that increases the expressiveness of this approach  allowing a system function to be decomposed in terms of subsidiary functions as well as required effects  increasing the range both of systems and design analysis tasks for which the approach can be used.
1 introduction
the automation of the design analysis of engineered systems requires both simulation of the behavior of the system and interpretation of the results  to enable the automatic generation of a draft report outlining the results of the design analysis. this report is cast in terms of the system's purpose and as system function can be regarded as relating its behavior to purpose  this interpretation of simulation for automatic report generation is a useful role of functional description. 
　functional modeling has been used for deriving the behavior of a system from knowledge of its structure and component functions  sticklen and chandrasekaran  1   supporting design by functional refinement  iwasaki et al.  1   and interpretation of simulation for automatic report generation  price  1  where system functions are associated with significant behaviors  outputs or goal states . here we present a novel language for the description of system function that increases the expressive power of that approach by allowing partial fulfilment of a system's purpose to be described. novel features of the language also increase both the range of systems that can be described and the range of tasks for which the language is useful.
1 describing and decomposing function
the definition of function that underlies the language presented here might be given informally as  how a device achieves its purpose  or more formally as
function: an object o has a function f if it achieves an intended goal by virtue of some external trigger t resulting in the achievement of an external effect e.
this is distinct from notions of behavior and purpose  which is a problem with some definitions of function used in model based reasoning. it follows that a representation of function has three elements; a description of purpose and the function's trigger and effect. the trigger and effect are boolean expressions and act as the recognizer of achievement of the function. a function can fail in two ways. either the trigger can fail to result in the expected effect or the effect can occur without the trigger  as summarized in table 1. the four
triggereffectfunctionfalsefalseinoperativetruefalsefailedfalsetrueunexpectedtruetrueachievedtable 1: achievement of function using trigger and effect.
states of a function are defined in terms of the truth of the trigger and effect  so if a function is triggered but the effect is not present it is said to be failed  for example. agreement in value between the trigger and effect is consistent with correct behavior of the system. we cannot  however  pair off these cases as the consequences of the two inconsistent behaviors will differ and the resulting report must reflect this.
　the description of purpose is separate from the functional description itself. this is consistent with the idea that function is concerned with how a purpose is fulfilled rather than the purpose itself and also encourages model reuse as similar purposes might be fulfilled by systems with different functional requirements  such as cars' and motorbikes' lighting systems.
　a function might depend on more than one trigger and effect so logical operators can be used to describe the required combinations. alternatively  a function can be composed of subfunctions  each with its own trigger  effect and purpose. this distinction allows cases where the achievement of one subfunction mitigates failure of the top level function  such as where a warning system has visual and audible signals and the presence of either one means at least some warning is given.
decomposition in terms of functions means that the top level function's states must be derived from the four possible states of each of the subfunctions. this is shown in table 1. the
child 1child 1andorxoriiiiiiaiaaifa i fafaiu i uuaaaaiafafa a  u auu a fafafafafa i fau i  a  a uuuu i table 1: states of functions and sub-functions.
rule is that triggering of the top level function is derived from the triggering of the children and achievement of its effect from those of the children. so  for example  in the sixth line of the table  where child 1 is achieved  both trigger and effect are true  and child 1 failed  trigger true but effect false  a top level function that depends on child 1 and child 1 has failed as it is triggered  child 1 trigger and child 1 trigger is true  but the effect is not achieved as child 1 effect and child 1 effect resolves to false. where the state of the function is in brackets  the report will ignore the top level function and include the associated failure of the child function. in addition to the logical operators  a functional description might use the sequential operators described in  bell and snooke  1  to allow systems whose function depends on intermittent or sequential behaviour to be described.
　as there are three elements in a complete functional representation  there are three possible pairs that can be used as incomplete subfunctions to simplify the functional decomposition. as pairing trigger and purpose  with no effect  is unnecessary  this leaves two classes of incomplete function that can usefully be incorporated into the language. these are
purposive incomplete function  pif  maps effect to purpose. this can be used when several subfunctions share a trigger  as in the warning example mentioned above.
operational incomplete function  oif  maps trigger to effect with no distinct purpose. it ensures a trigger is associated with a specific effect where alternative combinations of trigger and effect can achieve some purpose.
these are only used as subsidiary  child  functions.
1 example of functional description
the following is  part of  the functional description of a car's seat belt reminder system that warns the driver if either front seat is occupied with its seat belt unbuckled.
function belt warning
achieves unbuckled warning
by vehicle moving and  driver unbuckled or
 passenger present and passenger unbuckled  
triggers
pif warning lamp and pif chimer
purpose unbuckled warning
description  warn seat belt is unbuckled 
failure consequence  no warning given of dangerous state 
the pifs and their associated purpose descriptions are  like the description of purpose shown  separate entities. the decomposition in this example allows the language to distinguish the case where one of the pifs fails from the more serious case where both fail so no warning is given. in addition to this increased expressiveness the explicit inclusion of the trigger differs from the language in  price  1  and allows unambiguous description of functions that are triggered by the state of some other system function  increasing the range of systems that can be modeled. the trigger and the use of labels for trigger and effect allow a more precise specification of required system behavior than the earlier language used for functional labeling. they also enable the functional description to be built independently of a target system  so the language for can be used for functional refinement of design in addition to interpretation of model based simulation.
1 conclusion
the functional description language introduced here increases both the expressiveness and range of the language used for functional labeling in  price  1 . it shares the advantages of simplicity  reusability and capability claimed for that language and in addition allows the functional model to be constructed independently of the system  so supporting the use of the language in functional refinement of a design as well as for interpretation of simulation.
