 
　　　a knowledge representation system is presented  based on the use of a semantic net on which a higher level structure of frames has been superimposed. the system was designed for use with a 
　　　natural language system for finding the correct senses of ambiguous words in context. an examination of several linguistic examples shows how the representation system facilitates associative searches of context for potentially appropriate senses of ambiguous words  and how the results of such searches can often provide definite referents. the system also embodies novel approaches to the representation of multiple subparts  and of similar  but different  entities. 
	i 	introduction 
　　　recently  there have been several attempts     1       1     and   to make semantic nets more useful as a method of knowledge representation. all these projects have depended on use of framelike structures     1     ; that i s   they introduced a unit of representation that is on a higher level than the nodes and links of more traditional semantic nets     1       1       in that it stands for the information contained in a collection of several nodes and links. 
　　　these frame-like structures allow a notion of relevance or viewpoint to be implemented. in any given use of the semantic net  only some of the frames are deemed active  and the information contained in the others is ignored; in this way  the information apparently contained in the net can be made dependent on the point of view of the process accessing the net. as the several reports mentioned above show  this basic technique can be used very effectively to a number of different purposes  including the representation of quantification  of variable levels of detail  of contradictory hypotheses  and of different aspects of the same object. 
　　　this paper describes the application of the technique to a more specialised problem  that of word-sense disambiguation by association. by an association  i will mean some definite and systematic relation between two concepts; for example  in: 
when fred arrived  his arm was covered in bandages. 
the woman went to the clock  and looked at the face. 
the gambler looked at his hand. 
the appropriate senses of  arm    face   and  hand   respectively have associations with the appropriate senses of  man    clock   and  gambler . 	superimposing a frame-like structure on top of a large semantic net allows the number of search steps involved in finding such associations to be reduced; in addition  defining several different classes of relationships between frames  and making the search sensitive to them  allows the search to be controlled very tightly. 
　　　these associative techniques have been implemented in csaw  a working computer system for choosing the .senses of ambiguous words in context. the associations they provide are used to find the appropriate senses and referents for ambiguous words in examples like those above. of course  association  by i t s e l f   cannot resolve all ambiguous words  and csaw  described in detail in   incorporates a number of other disambiguating techniques. what follows w i l l   however  deal only with association. 
　　　besides allowing associative searches to be tightly controlled  some of the relations between frames in the data base of csaw are interesting from a more general representational point of view. in particular  the subset-superset relation allows significant economies in the representation of similar  but different  objects; while the part-whole relation incorporates some novel ideas on the representation of multiple subparts. these two relationships are of fundamental importance in the knowledge representation system of csaw  providing a basic framework for the data base through the classes of orthogonal hierarchies that they generate. 
	ii 	depictions and binders 
　　　rather than use the word  frame   i have chosen to call the higher level units in my representation depictions. this both avoids t i r i n g an already overworked word s t i l l further  and is more suggestive of the role such entities play. a depiction is a collection of nodes and links  which forms a subnet of a large semantic net. one of the nodes in a depiction is identified as the depictee; depictions describe their depictee in terms of their other nodes  which are known as depicters. 
natural 	language-1 	hayes 1 　　　as an example  consider the very simple physical depiction of a human shown in figure i. the solid node n-human is the depictee  while the hollow nodes are the depicters. the depiction  d-human  consists of all the nodes within the large closed dashed l i n e   plus all the links 
between those nodes  plus both the links leading out of the enclosed area. the two nodes outside the dashed line are not in the depiction  even though they are part of the description of the depictee. 
once  this method of property inheritance allows us to keep track of which instance nodes are related to each other; for instance  if we wished to create instance nodes for bill and bill's arm  we would create a new binder of d-human  and use 

it to link the new instance nodes to their generic nodes; this ensures that bill's arm will be partof bill  but not partof fred. 
figure ii an instantiation of the depiction for a human 
while depictions are generic  they can be instantiated to produce descriptions of particular 
objects. 	depictions are always instantiated as a 
whole by a binder. a binder is a data structure containing  among other things  the name of the depiction it instantiates  and a list of corre-
spondences between generic nodes in that depiction and  instance nodes. instance nodes represent spe-
cific rather than generic objects  and as their name implies  these specific objects are instances of the generic objects with which they are paired by their binder. figure ii shows an instantiation of d-human. the binder  d-humam1  is diagrammed by the square box  and the double-lined arrow from it to d-human shows that it is a binder of d-human. fred  fred's torso  and fred's arm  are all instance nodes which are paired in d-human#1 with the generic nodes in d-human to which they are connected. the line intersecting these connexions in dots and pointing at d-human#1 indicates the presence of these pairings in d-human#1. 
     instance nodes inherit properties from their generic nodes. 	in particular  they inherit the relations of their generic nodes with other nodes. of course  the inherited relations are not with other generic nodes  but are rather with the ap-
propriate instance node. thus in figure i i   fred's arm inherits from d-human the relation not of being partof the generic body  but of being partof fred. if a depiction is instantiated more than      while binders instantiate depictions as a whole  it is not necessary  in any given binder  to provide instance nodes for every depicter; in particular  not all the nodes in d-human are instantiated by d-human#1. if  however  an instan-
tiation of n-head were added to d-humam1  it would represent fred's head  and both fred and fred's torso would inherit relations with it. 
　　at this point  we can examine a first simple example of how depictions can help in finding disambiguating associations. consider: 
 1  fred walked into the room; his arm was covered in bandages. 
 arm  is a word with many senses  but in this example it means a human arm  and furthermore fred's arm. 	in the course of constructing a representation for the first sentence  csaw would produce a binder of d-human to represent fred; 
the correct representation for  his arm  is an 
instance node connected to n-arm by the same binder. csaw selects this instance node by using the fact that a node representing one sense of  arm  is in a depiction that has just been instantiated. a more general rule is: 
 1  a node is associated with a depiction  if the node is in the depiction. natural 	language-1: hayes 
1 

since a context is defined in csaw by a set of bound depictions  and since word-senses are represented by nodes  this rule also defines associations between word-senses and context. rule  1  is only a first attempt at a definition of association  and will be much expanded below. 
     if the association of a node with a depiction is used to disambiguate an ambiguous word  then it is  of course  necessary to instantiate the node in a way that involves the binder which caused the depiction to be in the context. in the case of rule  1   the involvement is straightforward; the node is simply instantiated in the same binder; this clearly provides the correct referent for  his arm  in example  1 . the expansion of rule  1  will also involve an expansion of the corresponding instantiation procedure. 
     as mentioned above  association cannot always provide a unique referent  or even the correct sense; this point is illustrated by: 
when i handed the hammer to the man  the  my  his  head fell off. 
nevertheless  rule  1  and its elaborations  described below  have proved extremely useful when used in combination with csaw's other disambiguating techniques  as described in . 
	i l l 	generalizer structure 
     one of the major advantages of semantic nets as a knowledge representation system is their ability to use hierarchies of isa links to avoid duplication of information. if a particular fact is true of all the subsets of some particular set  then it need not be stored with each subset  but only with the superset. thus figure i i i shows how the fact that horses  birds  humans  and dogs  all have legs can be represented by attaching that piece of information to the node for animal. 

figure i i i 	a primitive property inheritance hierarchy 
     problems arise  however  when the shared information has to be modified in some way. suppose we want to represent how many legs each type of animal has. the obvious answer is to make a new node for the legs of each type of animal. an isa link from each of these new nodes to the original leg node could indicate that they represent legs  but this is not enough; there must also be some way of telling which specialized leg node is associated with each animal subset. the obvious solution is a partof- link between the appropriate nodes  but in doing this we have duplicated precisely 
the piece of information we were trying to abstract. in the simple example given here  not much information is duplicated; in a more realistic 
example  there might be much more. thus  besides a leg being partof an animal  it is also used by the animal for locomotion. it would certainly be undesirable to store all this information as many times as there were subclasses of animal. we need a method of making the specialised leg nodes inherit all the relations postulated of the more general leg nodes. this difficulty is part of what fahlman  has called the symbol-mapping problem. 
       one straightforward approach is to adopt the idea of binders. this requires that information about legs of animals be contained in an animal depiction  d-creature  and that the depictions of the various animal subclasses contain binders of d-creature as shown in figure iv. the notation is essentially the same as before; note that the two binders of d-creature are respectively inside d-human and d-dog. to indicate the different role played by binders of this type  i will call them internal binders. note also that there is no partof relation between n-human and n-human-leg. this relationship and all others between n-creature and n-leg are inherited through precisely the same mechanism as used for instance nodes. 
d-creature 

figure iv 	a property inheritance hierarchy of depictions 
     common information can be shared between the depictions of several different  but similar  objects in a much more efficient way: by using depictions as viewpoints. by making the links apparently attached to a node dependent on which depiction the node is viewed from  it is possible to use the same node to represent several different entities. thus it is possible to use one fixed node to represent a human  a dog  or any other animal  and one other node to represent the leg of a human  or of a dog  or of any other creature. 
natural lan*uape-1: hayes      this multiple use of nodes is implemented in csaw in terms of a generalizer hierarchy of depictions. a generalizer hierarchy is a tree of depictions in which the parent depictions are said to be generalizes of their children. when one depiction is a generalizer of another  the offspring depiction automatically inherits all the links and nodes of the parent depiction. if any links or nodes are inappropriate for the offspring depiction  they can and must be specifically excluded. in addition  the offspring depiction can have extra nodes and links of its own  which are invisible from the parent depiction  even if they are links which involve nodes present in the parent depiction. the mechanism is thus similar to the one popularised by conniver ; the difference lies in its intended purpose: in conniver the trees of data environments were meant to represent alternative interpretations of some situation; in this system  depictions in a generalizer tree describe related but different objects. depictions on the same branch of a tree will generally be more or less specific descriptions of objects that could be the same  animals and dogs : the nearer the root of the tree  the less specific the entity; while depictions on different branches of the tree describe entities which are different  and could not be the same  but are more or less related  humans and dogs . 

figure v 	a generalizer hierarchy of depictions 
     to make this refinement clearer  let us consider how figure iv would be transformed by it into figure v. the crossed lines in figure v indicate that d-creature is a generalizer of d-human and d-dog. note that the partof link in d-creature is not written down again in d-human or d-dog  since it is automatically inherited; this is also the case with n-creature. n-leg is also automatically inherited  but it is written down again in both d-human and d-dog since it is involved in new links in both depictions. note  however  that n-leg in d-human and d-dog is the self-same node as in d-creature; it appears three times in figure v only because of typographical considerations. the one point that figure v fails to indicate is that the number link in d-creature is not present in d-human or d-dog because there is a specific directive to that effect associated with both depictions. 
     in the sense that there is an obvious translation of representations of isa relations between depictions using the single-role node technique as exemplified by figure iv and those using the multi-role node technique as exemplified by figure v  the two approaches are equivalent. what then is the point in introducing the extra complexity of the latter approach  there are three reasons  given below in order of increasing importance. first  less space is used  since the number of nodes needed is considerably reduced  and there is no need to store pairings between nodes as in the single-role approach. secondly  search time is reduced when trying to decide whether two nodes are connected by a given relation in a given depiction. in the former approach  besides looking in the depiction specified  it is necessary to make the enquiry recursively by translating it 
into an enquiry about the depiction which is bound in the lower depiction  changing the nodes enquired about according to the node pairings of the binder. in the latter approach no translation is necessary; it is enough to make the same enquiry in successively senior depictions of the generalizer hierarchy. 
     the third advantage does not concern general efficiency  but instead is specific to natural language applications and  in particular  the representation of word senses. in the multi-role technique  the sense of  leg  as leg of an animal corresponds to exactly one node  whereas in the single-role approach  it corresponds to many nodes: one for each type of animal represented. consider the effect of this on the processing of: 
the dog was lying in the grass; one leg was bent in an odd direction. 
according to rule  1   the way to find possible referents for  one leg  in the second clause is to look in recently instantiated depictions for a generic node which can represent that sense. if we use the single-role approach  we have two options. first  we could store under the dictionary entry for  leg  all the leg nodes in all the depictions of animals  and then  when a referent was sought in this way  compare all these nodes with nodes in recently instantiated frames. this would certainly find the right answer  but the number of comparisons that would have to be made seems absurdly large. alternatively  we could store in the dictionary entry only the node for  leg  that appears in d-creature. the search for potential referents would then require that for each node in each recently instantiated depiction  we run up all the binder chains to see if they ended in the representative leg node. this is probably better  but still requires a lot of work. if  however  the multi-role node approach is used there is virtually no work to do. the appropriate sense of  leg  would be represented by n-leg  and n-leg appears in the depiction of dog  just as it appears in the depiction of every animal with legs. 

natural lanfcuage-1: hayes 1 

　　　one small complication arises because  with the multi-role approach  senses mu st be specified by a depiction as well as a node  the depiction is necessary because without it there would be no way to t e l l which links were attached to the node  and therefore no way to t e l l what the node represented. such a combination of a node and a depiction to view it from is called a vnode  vi ewed node ; the 
vnode of n-creature viewed from d-dog is written $ n-creature d-dog. 
　　　in terms of finding associations  this means that after finding that the node part of a vnode is in the depiction of a context binder  it is necessary to check that that depiction is compatible with the depiction of the vnode. they are compatible if one is a direct or indirect generalizer of the other. consider  for example: 
fred was in the room. his leg was covered in bandages. 
after the processing of the f i r s t sentence  the context will contain a binder of d-human with an instance node for n-creature to represent fred. 
the dictionary entry for the appropriate sense of 
 leg  is $ n-leg d-creature; because n-leg is in 
d-human  and d-creature is a generalizer of 
d-human  there is an association between this vnode and d-human. the instance node which results from using this association is an instantiation of n-leg in the binder of d-human constructed for the f i r s t sentence. the generalizer relationship is the other way round in: 
i called the dog; the poodle refused to come. 
this example seems slightly forced  and  in fact  examples in which the more general depiction comes after the less general one are much more common than vice-versa. 
　　　we can sum up the extension of rule  1  to deal with vnodes as: 
 1  a vnode is associated with a depiction if its node is in the depiction  and its depiction is either a generalizer of or is generalized by the given depiction. in the f i r s t case  the node should be instantiated in the binder of the given depiction. in the second case  the binder should be converted into a binder of the depiction of the vnode  and the node instantiated in the . converted depiction. 
　　　this procedure is significantly less work than the procedure described above for use with the single-role approach  because the check for the node part of the vnode being part of the context description acts as a f i l t e r on which general izer hierarchies need to be searched. in the single-role approach any node in any depiction might potentially be connected to a given node through a chain of internal binders  the only way to find out is to investigate all the nodes connected in this way. in the multi-role approach  only those nodes which are the same as the node of a given vnode need be considered for the sub-
iv
	 	multiple subparts and sqn structure 
　　　next to the subset-superset relations expressed in generalizer structure  part-whole relations are the most important structural component of csaw's data base. as explained below  part-whole relations  both physical and logical  a hand is part of a card game   can generate a new type of relation between depictions  which is independent of and orthogonal to the generalizer relation. it is best to introduce csaw's treatment of part-whole relations independently of generalizer structure  and so for the moment  senses will again correspond to single nodes and nodes will again have single roles. the treatment does  however  require the use of depictions as viewpoints; so that the links attached to a node will s t i l l depend on which depiction it is viewed from. instead of using this trick to let a single node represent several different but related ent i t i e s   it will be used to allow different pieces of information about a single entity to be accessible independently. figure vi shows a depiction d-arm which contains the node n-arm which also appeared in d-human in figure i. in fact  n-armis the depictee of d-arm  whereas it was a depicter in d-human. note that the links: 
 partof n-arm n-human  
　 connected n-arm n-torso  that appeared in figure i are not shown in figure vi since they are not visible when n-arm is viewed from d-arm. however  a number of other links  which are similarly invisible in figure i  are shown in figure v i . the links shown in figure vi are the links present in d-arm. 
figure vi 	an sqn depiction of an arm 
why make d-arm a different depiction from 
d-human  why should all the information about n-arm not be put in d-human  there are two reasons. the f i r s t concerns levels of d e t a i l ; if all the information about n-arm is put into d-human  there seems no reason to stop there; all the i n formation about bodies from eyebrows to toenails would be put in d-human  and in any given context 

sequent generalizer check. 
	natural 	lan ua ke-1: 	hayes 

most of that information would be irrelevant. since it is clear from rule  1  that instantiation of a depiction corresponds to an activation of all the information it contains  an instantiation of d-human  thus enlarged  would merely provide a confusing mass of irrelevant information. if instead such information is distributed over a collection of depictions chosen according to the  natural  division of a body into its various subparts  then only that information about bodies which is strictly relevant to a given context need be activated in that context. 
     the second reason is much more clear-cut  and concerns the representation of multiple parts. a normal body has two arms  but figure i contains only one node  n-arm  to represent them both; this paradox is resolved by allowing n-arm to play a dual role: besides representing a generic arm  it also represents the generic set of all the arms of a body. note that this sort of dual-role is quite different from the multiple roles used in generalizer structure; in the latter  a node represents one of a number of similar  but different  entities  depending on which depiction it is viewed from; in the former  a node represents both a set of similar entities which are all involved in a single depiction  and a typical member of that set. such a node will play one role or the other according to which link it is used in. all the links involving n-arm in figure i use it in its typical member role. d-human should  however  be supplemented by other links involving n-arm in its role as a set  in particular  number n-arm 1 . this link indicates the size of the set represented by n-arm  and thus limits the number of instance nodes which may be paired with n-arm in any given binder. generic nodes without number links may be instantiated only once in a given binder  and the depictee will always be in this category   but those generic nodes with number links may be instantiated as many times in the same binder as their link indicates. 
     this method has several advantages over the alternative of using a separate generic node for each generic occurrence of a multiple subpart. if the latter method is used then: 
a. if there are a large number of such occur-rences there will be much wasteful repetition  legs of a centipede . 
b. since there is no single node which repre-sents the subpart  a natural language dictionary entry for  arm  would have to treat the two generic arm nodes as two different senses of  arm . this problem could  however  be solved by introducing a further generic node representing the set of arms of a body. 
c. the representation of  an arm  would require an arbitrary and unnecessary choice between left arm and right arm. 
d. in the case of subparts which can vary in number  the maximum number would have to be represented. this could lead to the same problem as in a. for potentially large numbers  and even worse problems when there is no upper bound  the legs of a table . 
     since there may be different generic information about them - left and right arms are indeed different - it is sometimes necessary to be able to distinguish between multiple subparts. this is accomplished through the use of distinguishes  a set of labels which span the set of subparts  in the sense that each generic subpart can be uniquely identified by a distinguishes or a collection of distinguishes. in the case of n-arm  there are just two such labels  l-left and l-right  corresponding to left and right. n-arm distinguished by l-left is written $!n-arm l-left . generic information involving only one or a subset of the subparts is handled by allowing links which apply to the node only when it is labelled by one of these distinguishes. an instance node is made specific by attaching the appropriate distinguisher to its pairing with its generic node in the appropriate binder. of course  it is not necessary to distinguish if there is no basis for distinction  see c. above   and thus  an arm  in: 
the man raised an arm. 
could be represented by an undistinguished instantiation of n-arm. 
     while there are compelling advantages to dividing the representation of a complex entity such as a body among several depictions  the fragmentation of such intimately related information results in certain complications. to deal with these complications  the relationships between the several depictions representing a complex entity are made explicit by incorporating them into an sqn structure  for sine qua non structure . the motivating idea is that if the depictee of a depiction is a subpart of  or in some other way implies the existence of  another entity  then that depiction is essentially incomplete. its completion requires the depiction of that other entity in which its own depictee is presumably a depicter. thus d-arm does not make complete sense without d-human; we shall say that d-human is an sqn depiction of d-arm. an sqn structure is a tree of depictions in which the parent depictions are sqn depictions of their children. all the depictions involved in representing a complex entity are typically tied together into an sqn structure. clearly  sqn and generalizer structures are orthogonal in the sense that sqn structure is independent of and complementary to generalizer structure; the two types of structure are  however  similar in that they both create numerous separate trees  each of which groups a number of related depictions together. 
natural lan*ija*e-1: hay s 1u      sqn structure has important implications for depiction instantiation; whenever a depiction is instantiated  there must be a corresponding instantiation of any parent depiction it might have in an sqn hierarchy. furthermore  one or more of the nodes in common between the two depictions can be designated as sqnodes; such nodes are instantiated by the same instance nodes in both binders. thus an instantiation of d-arm requires the instantiation of d-human; furthermore  n-shoulder and n-arm  which are the sqnodes of d-arm  must be paired with the same instance nodes in both binders. obviously  not all depictions have superiors in an sqn hierarchy; in particular  the depictions of stand-alone entities such as bodies do not. such depictions will  in general  be the roots of sqn hierarchies. thus d-human will be the parent of d-arm  d-head  d-leg  etc.  and d-arm will in turn be the parent of d-finger. 
     the existence of sqn structure clearly requires a revision of our association rule  1 . that subparts can be buried several layers deep in an sqn tree suggests the following replacement: 
 1  a node is associated with a given depiction if it is either in the given depiction  or in a depiction which has the given depiction as a direct or indirect ancestor in an sqn hierarchy. 
this rule would provide a disambiguating association for  nails  in: 
fred walked into the room; his nails were cracked and dirty. 
in just the same way as rule  1  provided one for example  1 . it was mentioned above that the binding of a depiction requires the creation of corresponding binders for any parent depictions in an sqn hierarchy; this requirement relieves rule  1  from concern with offspring or sibling depictions in an sqn hierarchy. 
v
 interaction of generalizer and sqn structures 
     a generalizer hierarchy groups together depictions of similar  but different  entities. if such entities are the roots of sqn-hierarchies  their sqn-offspring will be similar  and so can be grouped into generalizer hierarchies of their own  which  approximately  parallel the top-level generalizer hierarchy. figure vii  for instance  shows a small amount of knowledge about a small number of animals. there are two generalizer hierarchies  indicated by the barred lines : one for the top-level entities  the animals themselves  and the other for the limbs of the animals. each animal depiction  except d-quadruped  is the root of an sqn-hierarchy  indicated by the ordinary lines . in most cases  there is just one offspring node in these hierarchies  representing a typical leg of the animal in question. d-quadruped does not have any sqn-offspring  since the description of a typical leg for a legged creature provided by d-leg is quite adequate for the purposes of d-quadruped. d-primate and d-human  on the other hand  each have two sqn-offspring: one describing their forelimbs or arms  and the other describing their rear-limbs or legs. that d-dog only has one sqn-offspring indicates a lack of information in this representation for distinguishing the front and back legs of a dog. these differences in sqnoffspring mean that the limb general izer hierarchy does not exactly parallel the one for animals. 
     before extending the association rule to deal with both sqn and generalizer structure  the concept of a depiction chain must be introduced. 
a depiction chain is a sequence of one or more depictions in which successive depictions are always related in one of a limited number of ways called depiction kin-types. for the moment  there will be just four kin-types  indicating relations between successive depictions in a depiction chain as follows: 
sqn the second depiction is the sqn-parent of the first; 
sqn-1 the first depiction is the sqn-parent of the second; 
gen the second depiction is a direct or indirect generalizer-ancestor of the first; 
gen-1 the first depiction is a direct or indirect generalizer-ancestor of the second. 
for instance  according to figure v i i   d-dog and 
d-leg are connected by the depiction chain  d-dog d-legged-creature d-leg  in which the kintypes are gen and sqn-1. the new association rule is: 
 1  a vnode is associated with a depiction if there is a valid depiction chain between the given depiction and the depiction of the vnode. 

figure vii 	interacting generalizer and sqn hierarchies 
if we assume for the moment that any depiction chain is valid  it is easy to see that the above rule subsumes rule  1  and rule  1   and so will work on the previous examples. the corresponding instantiation rule is: 
 1  given two consecutive depictions in a depiction chain and a binder of the first depiction  the production of an appropriately related binder for the second is accomplished according to kin-type as follows: 
	gen 	the given binder is used; 
gen-1 	the given binder is used after being changed into a binder of the second depiction; 
son a new binder is constructed for the second depiction in which the instance nodes for the sqnodes of the first depiction are the same as those in the given binder; 
son-1 a new binder is constructed for the 

natural 	lan ua *e-1: hayes 

second depiction in which the instance nodes for the sqnodes of the second depiction are the same as those in the given binder. 
successive applications of rule  1  will instantiate any depiction chain whose first member has a binder. the instantiation of an association  as defined by rule  1   between a vnode and a context depiction therefore consists of instantiating the depiction chain  using the binder of the context depiction to get started   and then instantiating the node of the vnode in the final binder produced. to see how this rule works in practice  consider the association between the vnode  $ n-f1t d-leg  for  foot  and the depiction d-dog that would be required for the example: 
i looked at the dog; its foot was swollen. 
according to rule  1  we need to find a depiction chain from d-dog to d-leg  the depiction of $ n-f1t d-leg. one obvious one in figure vii is  d-dog d-dog-leg d-leg  with the kin-types sqn-1 and gen. instantiating this depiction chain according to rule  1  would produce first a binder for d-dog-leg in which the sqnodes of d-dog-leg  say just n-leg  were given the same instance nodes as in the given binder of d-dog. since the second kin-type is gen  the binder of d-dog-leg just constructed would then be used unchanged as the binder for d-leg. finally  n-foot  the node of the vnode  would be instantiated in this same binder to produce figure v i i i   which is just what is required. 
     of course there are other depiction chains from d-dog to d-leg  such as  d-dog d-quadruped d-human d-human-leg d-leg   whose instantiation would produce less desirable results. such chains can be excluded by forbidding depiction chains with both gen and gen-1 kin-types or both sqn and sqn-1 kin-types. a more subtle type of error could be caused by the framechain  d-dog d-legged-creature d-leg . this would result in a diagram just like figure viii except that d-leg would be used instead of the more specific and appropriate d-dog-leg. this can be avoided by insisting that sqn and sqn-1 kin-types precede gen and gen-1 kin-types if possible. trying to find an association between d-quadruped and d-leg shows that this is not always possible  but when it is not possible no error results. 
	vi 	other associations 
     using just generalizer and sqn structure  one could produce a large number of descriptions of various stand-alone entities like animals or clocks or card games  etc.  but one would have no way to relate these descriptions to each other. one way to increase the number of relationships represented is to increase the generality of the roots of the generalizer trees; thus one might incorporate the generalizer hierarchies for ani-
mals  plants  microbes  etc.  into a single general izer hierarchy for living things. however  such amalgamation must have a limit; otherwise  there would be only one generalizer hierarchy with the depiction d-entity at its root  and only one node  n-entity  or perhaps two  n-entity and n-part . clearly  this is taking things too far. 
     assuming that there must be separate generalizer trees for entities which do not display  significant  structural similarities  not all set-inclusion relations can be expressed by general izer structure; the remainder are handled by internal binders as described in section i i i . besides representing set-inclusions for the depictee of a depiction  internal binders can also represent set-inclusions for the depicters and relations between the depicters. figure ix shows internal binders performing all these functions; one internal binder in d-ship indicates that a ship is a vehicle  and  in addition  relates sailors to ships in the same way as drivers are related to vehicles in general; the other binder internal to d-ship indicates that the activity of sailing a ship is a form of disciplined activity involving the sailors. the diagram shows both n-boss and n-minion paired with n-sailor; in fact  n-boss is paired with n-sailor distinguished to indicate officer  and n-minion is paired with n-sailor distinguished to indicate noncommissioned sailor. the binder internal to d-vehicle shows that n-operator:vehicle is a human. 
     such internal binders can provide important associations as can be seen from: 
 1  when i visited the ship  the hands were out on deck. 
natural lan ua e-1: hayes 1 here  hands  is to be interpreted as the deck hands of the ship. if we use $ n-minion d-disciplined-activity to represent the interpretations of  hand  as farm hand  deck hand  factory hand  etc.  then the relation between n-ship and n-complex-activity would provide exactly the right sort of association to make the correct disambiguation. internal binders are  therefore  available as a valid kin-type  bind  for use in the depiction chains of rule  1 . the association above can be expressed by the depiction chain  d-ship d-disciplined-activity  in which the kin-type is bind. the corresponding 
instantiation rule is provided by the following f a i r l y obvious supplement to rule  1 : 
 1  bind 	a new binder is constructed for the second depiction in which the nodes paired by the internal binder have the same instance nodes as the nodes they are paired with in the f i r s t depiction. 

figure ix 	depictions with internal binders 
　　　some restrictions must  however  be placed on the use of the kin-type bind. consider  for instance  the depiction chain  d-ship d-vehicle d-human d-human-arm d-arm  with kin-types bind  bind  sqn-1  gen. this chain provides an association for $ n-hand d-arm with d-ship  which could be expressed as: a hand is part of the one or more human beings who act as drivers for the sort of vehicle known as a ship. this association is too tenuous to be useful for the purposes of disambiguation  and in particular is not useful in example  1 . there is not enough space to discuss this problem f u l l y here  and i will just state the solution i have adopted  see  for a j u s t i fication . if a depiction chain contains a bind kin-type corresponding to an internal binder with only one pairing  the chain is invalid unless the instance node for the nodes in the pairing represents something which has been explicitly mentioned in the text. thus  the depiction chain mentioned above is invalid for example  1   because the bind kin-type between d-vehicle and d-human corresponds to an internal binder with only one pairing  and the nodes  n-operator:vehicle and n-human  in this pairing do not represent anything that appears explicitly in the text. 
	vii 	conclusion 
　　　the system of data representation presented above was specifically designed for a natural language processing system which concentrates on finding the appropriate senses of ambiguous words in context. the associative structure provided by the system greatly facilitates the search for word senses that are associatively related to the preceding and surrounding text. in many cases  it can be used to provide referents for the ambiguous  or unambiguous  words which are found to be associated with the representation of the preceding text. the system is also interesting from a more general representational point of view; in particular  it embodies novel techniques for the representation of multiple subparts  and of objects that are almost  but not quite  the same. 
　　　the representation system has also been used for simple actions and the selectional restrictions they place on their participants. in addition it can help in making disambiguations based on the more specific associations demanded by simple actions and possessives. all this work is described in detail in . 
