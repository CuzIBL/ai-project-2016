
bidding for multi-items in simultaneous auctions raises challenging problems. in multi-auction settings  the determinationof optimal bids by potential buyers requires combinatorial calculations. while an optimal bidding strategy is known when bidding in sequential auctions  only suboptimal strategies are available when bidding for items being sold in simultaneous auctions. we investigate a multidimensional bid improvement scheme  motivated by optimization techniques  to derive optimal bids for item bundles in simultaneous auctions. given a vector of initial bids  the proposed scheme systematically improves bids for each item. such multidimensional improvementsresult in locally optimal bid vectors. globally optimal bid vectors are guaranteed in the limit for infinite restarts. for ease of presentation we use two-item scenarios to explain the working of the algorithm. experimental results show polynomial complexity of variants of this algorithm under different types of bidder valuations for item bundles.
1	introduction
auction theory has received significant attention from agent researchers following the development of electronic auctions on the internet. numerous sites like ebay  ubid offer different types of auctions to facilitate the trading of goods. also sites like emediator implements a large variety of combinatorial auctions and exchanges  sandholm  1 . researchers are interested both in designing auctions with desirable properties  parkes  1; sen et al.  1  and developing automated agents to represent interests of human users  greenwald and stone  1; greenwald and boyan  1; 1; stone et al.  1; stone and greenwald  1 .
¡¡the problem of computing optimal bids is complex when bidding for multiple items. the valuation function of a potential buyer expresses the maximum amount it is willing to pay to acquire each bundle of items. two settings are generally studied: combinatorial auction and multi-auction. a combinatorial auction offers multiple items. bidders can submit the amount they are willing to pay to get bundles. in strategyproof combinatorial auction settings  a rational bidder bids according to its true preferences and the auctioneer incurs the computationalcost of optimal bundle allocation based on bids submitted. the winner determination problem for combinatorial auction is np-hard. this complexity may discourage certain sellers. besides  an individual may not find all desired items in the same combinatorial auction.
¡¡in a multi-auctionsetting  multiple single-item auctions are held concurrently or sequentially. a potential bidder needs to estimate closing prices of such auctions to compute optimal bids. in contrast to combinatorial auctions  in multi-auction settings  a bidder incurs the computational cost of calculating optimal bids given its valuation for items and the expected closing prices. as in a single-auction setting  auctioneer in each of these multiple  independent auctions have a straightforward computational task of selecting a winner from bids submitted to a single auction.
¡¡in multi-auction settings  auctions can be sequential or simultaneous. sequential auctions close at a predetermined known order. a bidder can bid in the auction that will close next and then wait for the outcome before computing its next bid. optimal bidding policies have been developed for sequential auctions  stone et al.  1; greenwald and boyan  1; 1 . simultaneous auctions  however  run concurrently and bidders do not know in advance their precise closing times. bids to be submitted to all auctions have to be computed at the same time. developing efficient optimal policies for simultaneous auctions is an open research problem.
¡¡we propose a novel bidding algorithm for simultaneous auctions motivated by optimization techniques. we sequentially improve components of the current bid vector to maximize the bidder's expected utility given the closing price distributions of the auctions. we reason with continuous closing price distributions which allows us to address a more general setting and enables the application of powerful methods tailored for continuous spaces. our technique can be adapted to find optimal bids given discrete closing price distributions. we graphically illustrate the working of our bid improvement scheme. we then experimentally evaluate variants of our algorithm for different problem sizes and under substitutable  complementary  and unrelated item preferences. our main theoretical result is that our proposed bidding scheme is optimal given infinite number of random restarts. experimental results demonstrate that effective approximations to optimal results can be produced in polynomial time.
1	related work
combinatorial auctions can be designed to provide desirable social outcomes  parkes  1; sandholm  1 . however  it is not feasible to have a combinational auction which offers all items an individual may desire. this may be due to new needs that no seller has foreseen. besides  items which are not directly related are unlikely to be found in the same auction. for example  a car company which wants to design a car with an on-board computer is unlikely to find pieces needed to build the engine in the auction it can find components to build the on-board computer.
¡¡stone  greenwald  and fellow researchers investigated the bundle bidding problem for multi-auctions in the context of the trading agent competition  tac   greenwald and boyan  1; 1; stone et al.  1; stone and greenwald  1 . they assign valuations to individual items that correspond to expected marginal utilities of the items. the marginal utility of an item i is the extra-profit generated by the acquisition of i at zero price  and corresponds to the amount one is willing to pay for an item calculated as the extra benefit of getting it. stone et al. approximated it by price sampling for sequential auctions since the exact calculation is of exponential complexity  stone et al.  1 .
¡¡though stone et al. presented the marginal utility based bidding scheme  mu  in the context of sequential auctions  they used it for simultaneous auctions  stone et al.  1 . greenwald and boyan  greenwald and boyan  1  showed that mu is optimal for sequential auctions but can be suboptimal for simultaneous auctions. greenwald and boyan proposed a variant of mu  expected marginal utility bidding  evmu   for bidding in simultaneous auctions where the bidder first computes an optimal set of items to bid for. it is the bundle with the best profit assuming actual closing prices in future auctions are equal to the expected closing prices. after determining the optimal bundle  the bidder bids expected marginal utility for each item in the bundle. greenwald and boyan proved that this method is optimal when prices are deterministic  greenwald and boyan  1 . this method  however  is still suboptimal in general. a downside of each of these methods is their exponential computational complexity as calculating the marginal utility of one item required the knowledge of the expected profit generated by the acquisition of each possible bundle.
¡¡byde et al.  byde et al.  1  present a heuristic approach to bidding in sequential and simultaneous auctions. their approach does not have any theoretical guarantees of expected utility and cannot be implemented as presented in the paper as necessary heuristics are not included.
1	multi-auction model
we consider multiple sealed-bid auctions offering items from the set i. a valuation function   expresses the bidder's preferences for bundles or subsets of items from the set i  i.e.  the bidder is willing to pay up to   i  for a bundle of items i   i. each item i is available only in the single-item singleunit auction ai. we do not specify the particular auction type but make the exogenous price assumption: the bids of our bidder do not influence the auction closing prices. an auction is modeled by the probability distribution fi of the closing prices of the item being offered in that particular auction. we assume these distributions to be continuous  independent  and known by the bidder  greenwald and boyan  1; 1; stone et al.  1; stone and greenwald  1 . in practice approximate price distributions can be learned from observing electronic markets. when an auction closes  a closing price pi ¡Ê  pi  pi  is drawn from the distribution fi. the bidder gets the item if it has placed a bid bi greater than or equal to the closing price  i.e.  if pi ¡Ü bi  and the winning payment is equal to the closing price pi. all auctions run in parallel and their closing times are not known by the bidder. the bidder place bids represented by b =  b1  ...  bn  ¡Ê b where b is the bid domain for all auctions. replacing a bid is not allowed in this model.
¡¡once all the auctions close  the bidder can compute its utility ¦Á b  p  where p =  p1  ...  pn  represents the closing prices of all auctions. the set of acquired items iac b  p  is calculated as
iac b  p  = {i ¡Ê i s.t. pi ¡Ü bi}
and the corresponding utility received by the bidder is
.
the expected utility is then ¦Á¡¥ b  = ep ¦Á b  p   which can be calculated as specified in proposition 1: proposition 1  expected utility 

where is the pdf of fi. our research objective is to find a bid vector b  which maximizes the expected utility ¦Á¡¥: b  = argmax ¦Á¡¥ b .
                                                       b¡Êb 1 multi-dimensional bid improvement
our proposal uses an optimization technique to find optimal bids for sequential auctions. assume that the bidder has decided by some means to bid the vector b. is it possible to do better than bidding b  i.e.  is there a bid vector
b such that  assuming b is sub-optimal  there is at least one item whose bid can be improved  i.e.  there exist
where	 i =   1	i 1	i+1	n  and	¡Å	 i =
. by repeating this process 
we can realize the best improvement possible for the item i  which is equivalent to maximizing the function ¦Á¡¥ bi ¡Å b i . the following formalizes the idea.
definition 1  optimal bid for item i  ¦Âi b i  is the optimal bid for item i given bids for item  is fixed: ¦Âi b i  = argmax ¦Á¡¥ bi ¡Å b i .

proposition 1  optimal bid for item i 

sketch of proof
space constraints preclude the presentation of the full proof. we note  however  that ¦Âi b i  is such that
. besides  let consider
¦Á¡¥ bi ¡Å b i . we can show that

	where	d¦Á¡¥i	 ¦Á¡¥
consequently  ¦Á¡¥i is increasing when ¦Âi b i    bi. ¦Á¡¥i is decreasing when ¦Âi b i    bi. bi = ¦Âi b i  is the unique local maximum  and thus
the unique global maximum.

1	best bid hyper-surfaces
the equation bi = ¦Â b i  defines a hyper-surface in the ndimension space b1. this hyper-surface divides b into two zones: one zone where  given a point b  bi has to be increased to increase ¦Á¡¥  and the other zone where bi has to be decreased to improve ¦Á¡¥. hence  the ith component of the gradient is always directed to the hyper-surface bi = ¦Â b i  and is equal to zero on the surface. an intersection of the n hyper-surfaces  one for each item  defines a bid vector whose gradient is equal to zero  when this intersection is inside the bid domain . this point  though a potential candidate  is not necessarily a local maximum since a gradient equal to zero does not guarantee the existence of a local optimum. optimal bids can be found at the intersection of the n hyper-surfaces either inside the bid domain or at the boundary of the bid domain. the optimum can then be discovered by sequentially moving from one hyper-surface to another until no further improvements can be made.
¡¡we now outline our bid selection scheme. an initial bid vector b is chosen. then  we repeatedly improve the n components of the bid vector b in any predetermined order. improving the bid for item i involves replacing bi by ¦Âi b i : b ¡û ¦Âi b i  ¡Å b i. we will refer to this improvement as single improvement and the sequence of n improvements  is a curve when n = 1  a surface when n = 1. as n-sequential improvement. in the bid domain b  the single improvement can be regarded as going from b to the hyper-surface bi = ¦Â b i  by moving parallel to the bi-axes. the process is stopped when no further improvement can be made. we refer to this sequential bid-improvement process as a multi-dimensional bid improvement  mdbi  scheme.
¡¡figures 1  1  and 1 providea visual descriptionof the above discussion. each figure represents the bid domain b where n = 1 and hence we draw the two hyper-surfaces. we chose uniform probability distributions to represent the closing price distributions as a result of which the hyper-surfaces are lines. arrows give the direction to follow to improve the expected utility in the zones delimited by the hyper-surfaces. paths leading to local maxima are drawn as dashed lines with arrows representing the direction to follow.
¡¡figures 1  1  and 1 allow us to present some conclusions. for all types of item valuations  it is preferable to bid the individual valuation of an item when bidding only for this item. for substitutable items  ¦Âi is decreasing and the maximum value taken by where vi =   {i}   and the bidder should always bid less than its individual valuation for each item when bidding for a bundle. on the contrary  for complementary items  ¦Âi is increasing and the minimum value taken by   and the bid for an item should always be more than the individual valuation for that item when bidding for an item bundle.
¡¡in the examples presented in these figures  we have unique optima. given the nature of the closing price distributions  however the n hyper-surfacesmay have several intersections resulting in as many local optima. consequently  we can only guarantee reaching a local maxima using the n-sequential mdbi process. this problem can be circumvented by restarting the improvement process  e.g.  by choosing a random bid vector  when no further improvement is possible. assuming an infinite number of restarts  this method will discover the optimal bid vector. as this is not feasible in practice  only a finite number of restarts can be considered.
¡¡we observe that for non-related items  and irrespective of the number of items  there exists a unique optimum. indeed  in that case  ¦Âi bi  = vi. consequently  the n hyper-surfaces are orthogonal  see figure 1  and therefore have a unique intersection b  =  v1  ...  vn  which corresponds to b . starting from any bid vector  we will arrive at this solution using the mdbi scheme. as a result  the mdbi process will output the optimal bid vector irrespective of of initial bids when items are non-related.
1	bidding algorithm
we now describe the steps of our bid improvement algorithm in more detail. an initial bid vector b1 is chosen. let bt be the bid after t iterations. bt+1 is obtained by improving sequentially bids for each of the n items in bt  keeping the bids for other items constant. the process is stopped when ||bt+1   bt||   ¦Å where ¦Å is a user-chosen positive constant and || ¡¤ || is any vectorial norm. to improve a bid  we need to calculate ¦Âi. though the formula presented in proposition 1 requires exponential computation  it is possible to approximate ¦Âi in polynomial time via price sampling. algorithm 1

figure 1: hyper-surfaces when n = 1  closing price distributions are uniform  and items are substitutable.

figure 1: hyper-surfaces when n = 1  closing price distributions are uniform  and items are complementary.

figure 1: hyper-surfaces when n = 1  closing price distributions are uniform  and items are non-related.
presents the pseudo-code to approximate ¦Âi. algorithm 1 presents the pseudo-code for the mdbi algorithm.

algorithm 1 approximation of ¦Âi b i  by price sampling

¦Â ¡û 1
for k = 1..k do

end for ¦Â return 
k


algorithm 1 mdbi

b ¡û initializebids   // improvement loop. repeat

for i = 1..n do
bi ¡û ¦Âapprox i  b i  f     k 
end for
until
return b

¡¡the computational complexity of approximating ¦Âi b i   ¦Âapprox i  b i  f     k   is linear given the numberof samples  k. more precisely  it is equal to ¦È k  additions  ¦È k  valuation calculations and ¦È k  price sample generations. in mdbi  each n-sequential improvement requires n approximations of ¦Âi b i . the number of n-sequential improvement depends on the number of iterations of the improvement loop  c ¦Å  n . we have  c ¦Å  n    n  n-sequential improvement and c ¦Å  n  calculations of norms. generally  vectorial norms can be computed in linear time given the dimension of the space  n in our case . thus  the complexity of mdbi is o k n c ¦Å  n   additions  o k n c ¦Å  n   valuation calculations and o k n c ¦Å  n   price sample generations. the value of c ¦Å  n  is difficult to judge a priori but experimental results presented in the next section show that c ¦Å  n  increases only very gradually with n and thus the computational complexity of mdbi is approximately linear. this  in particular  is a significant improvement over current schemes  greenwald and boyan  1; stone et al.  1  which have exponential complexity.
1	experimental results
we ran experiments with the following objectives: to show that our algorithm performs well when probability distributions are discrete1  both in terms of the quality of the solution provided and the time efficiency1. we compare variants of our algorithms with an exhaustive search or brute force algorithm  bf  that provides optimal results at high search costs. the bf approach consists of calculating the expected profit generated by each possible bid combinations and then bidding the best combination. bf is optimal  but its complexity is exponential. we now present three variants of our mdbi algorithm that we have experimented with:
random start bid improver  rsmdbi : rsmdbi starts with a randomly chosen bid vector and does not use restarts.
random start bid improver with restart  rsmdbiwrn : rsmdbiwrn starts with a randomly chosen bid vector and restarts the hill-climbing process n   1 times and outputs the bid vector with the highest expected utility.
valuation start bid improver  vsmdbi : vsmdbi starts with the bid b 1 =  v1  ...  vn  and does not use restarts.
1	experimental settings
in the first set of experiments  we used the above-mentioned variants of the mdbi algorithm in an environmentcontaining four single-item single-unit auctions and the focus is on evaluating their success in finding optimal solutions  as checked by the bf scheme  under different valuation functions. subsequently we present results with larger number of items where the focus is on studying the time efficiency and scaleup properties of the algorithms. all closing prices are drawn from discrete closing price distributions. a simulation consists of one bidder with the knowledgeof all closing price distributions. this biddercan place one bid in all four auctions at each iteration. at the end of each iteration  the bidder knows which items it won and the payment it has to make for those items. at the end of each simulation  the average profit of the bidder is calculated. a run of our experiment consists of four simulations  one for each of the bidders rsmdbi  rsmdbiwrn with n=1 or 1  vsmdbi  bf. for a run  bidders in each simulation share the same valuation function. we generate four kinds of valuation functions:  a  si  where items are substitutable   b  ci  where items are complementary   c  nri  where items are non-related  and  d  rvi  where valuations for bundles are random. considering three set of items i  j  k such that j ¡È k = i and j ¡É k =  . items are substitutable if   i  ¡Ü   j  +   k  for all such item sets. items are complementary if   i  ¡Ý   j +  k  for all such item sets. items are non-related if   i  =   j  +   k  for all such item sets. if no one of the above conditions are satisfied for all item sets  we consider the items to have random valuation. valuation for single-item bundle is drawn from the range  1  1   i.e.    {i}  ¡Ê  1  1   i ¡Ê i. in each run  the same auctions are repeated in each simulation  i.e.  the same closing price distributions are utilized for each simulation. we have eight predefined probability distributions. four of them produce price ranges from 1 to 1 and four of them from 1 to 1 with discrete values in increments of 1. for each range  one distribution is uniform  up   one outputs the highest prices with higher probability  hp   one outputs the lowest prices with higher probability  lp   and one outputs price in the middle of the range with higher probability  mp .
for each run  distributions for the four auctions are chosen randomly.
1	quality of solutions provided by algorithms
to compare our algorithms  we display the cumulative average profit generated by the bidders using each strategy in table 1. algorithms are orderedby the net utility obtained. horizontal lines in the table groups the algorithms into blocks. performance of algorithms in the same block are statistically indistinguishable according to the wilcoxon test. we highlight the following observations:
1. vsmdbi performs similar to rsmdbi except for rvivaluations where performances are worse.
1. with a small number of random restarts our algorithmalways has performance similar to bf which is asymptotically optimal.
1. rsmdbiwrn with n = 1 has better performances than rsmdbi except for non-related items where performances are equal. as we have observed before  restarts are unnecessary for non-related items.
1. every algorithm is optimal when items are non-related.
remark 1 shows that choosing b 1 as a starting point is a good heuristic for some but not all cases. remark 1 shows that with reasonable number of restarts  1 in our experiments  the optimal bid vector is always found. since rsmdbi is  in general  not optimal  remark 1   we can say that the bid domain has  in general  some local maxima and/or ridges. however  since few restarts permit to find optimal bids  the number of local maxima and ridges is not very high. consequently  rsmdbiwrn with reasonably small values of n can be considered as an approximatelyoptimal method. from remark 1  we find that almost every algorithm is optimal for nri. though this result is not that significant as we know the optimal bid vector in that case  it confirms our previous analysis which claimed that the optimal bids are found by the mdbi algorithm after the first n-sequential improvement irrespective of the initial bid vector.
1	time efficiency and scale up properties
to evaluate the run time of our algorithm for larger problems  we run experiments as described in the last section but by changing the number of items from 1 to 1 to evaluate the values of c ¦Å  n . those experiments were similar to the previous ones except that we output the values of c ¦Å  n  and average them. we highlight the following observations:
1. except for nri  the number of n-sequential improvements  c ¦Å  n   increases very slowly. the largest range is  1  1 .
1. the number of n-sequential improvements is always better for vsmdbi.
1. c ¦Å  n  = 1 for vsmdbi and c ¦Å  n  = 1 for
rsmdbi when items are non-related.
we can conclude that c ¦Å  n  is almost constant. consequently  the computational complexity of our algorithms is almost linear given the number of items and hence has desirable time efficiency and scale up properties. the third remark
strategyscorestrategyscorersmdbiwr1
bf
rsmdbiwr1.1
1
1bf
rsmdbiwr1
rsmdbiwr1.1
1
1vsmdbi
rsmdbi1
1vsmdbi
rsmdbi1
1	 a  si	 b  ci
strategyscorestrategyscorersmdbi
vsmdbi
rsmdbiwr1
rsmdbiwr1 bf1
1
1
1
1rsmdbiwr1
bf
rsmdbiwr1.1
1
1rsmdbi1vsmdbi1	 c  nri	 d  rvi
table 1: profits from mdbi variants with different valuation functions.
can be explained by the fact that vsmdbi will try to improve the initial bid b1 = b 1 and will realize that there is no better bid vector. rsmdbi will improve its initial bid vector and reach the optimal one b  = b 1 in one n-sequential improvements. then  it behaves like vsmdbi.
¡¡in a companion paper  candale and sen  1  we show that mdbi produces equal or better solutions in much less time compared to mu and evmu algorithms for larger number of items than discussed here. we cannot verify the optimality of those results as it was computationally prohibitive to run the bf algorithm for those larger problem sizes. the experimentalresults clearly demonstratethe effectivenessand scalability of the mdbi schemes.
1	conclusions
we presented a new method for bidding in simultaneous auctions which is asymptotically optimal. we used a novel optimization based technique that improves any arbitrary bid vector. while we developed the bidding approach assuming continuous closing price probability distributions  we showed that our technique is applicable when closing prices are discrete. the mdbi algorithm performs optimally with few restarts and also scales up well with the number of items.
¡¡the mdbi algorithm produces optimal bid vectors with infinite random restarts. as this is infeasible in practice  we evaluate variants of the scheme with finite number of restarts and carefully chosen starting bid vectors. a surprising result is that good solutions can be achieved without restarts when items are substitutable  complementary or are non-related. in general  small number of restarts can be used to approximate optimal expected utility in all cases.
¡¡a desirable property of our algorithm  in contrast to existing schemes  is its approximately linear time complexity. experimental results show that the mdbi scheme scales up effectively with larger number of items.
¡¡we plan to study situations where a bidder can bid in both single-item and combinatorial auctions to acquire bundles. we also intend to adapt mdbi for generating bids for multiunit auctions.
¡¡acknowledgment us national science foundation award iis-1 partially supported this work.
