 
　　　a precise definition is given of a class of inferences in predicate logic which it la proposed to identify with the class of  obvious  inferences. a mechanism for implementing  obvious inference  as a rule of inference in proof checking systems is discussed. 
	i. 	introduction 
　　　automatic proofchecking systems should be able to certify the correctness of any inference which users can aee as obviously correct. it should only be necessary for a user to specify the premises and conclusion in calling for such certification. in proofchecklng systems for predicate logic based on 
natural 	deduction  	e.g. 	stanford 	fol     
  1     this f a c i l i t y is ordinarily available only for such special cases as tautological inference. the following example  taken from   p. 1  is instructive: 	deductive 	inferences 	which  	intuitively  	are 
 obvious . we w i l l describe a simple mechanism  based on a nonresolutlon herbrand theorem-proving procedure  by means of which  obvious inference  can be implemented as a rule of inference in natural deduction systems  and we w i l l deacrlbe mi experimental version of this mechanism as an extension of fol. in particular the 1 to 1 steps required in the example cited is reduced to 1 when the new mechanism is available. 
	i i . 	obvious herbrand proofs 
　　　what makes an inference obvious  equivalentlv  what makes an inference complicated  we propose a* an answer to the second question: an inference is complicated when it requires multiple substitutions from the herbrand universe in the same clause. in 
such a case  a human being must exercise considerable ingenuity in order to find exactly the right substitutions from the typically infinite herbrand universe. these considerations suggest the: to 
for 	which 
that an lines. 
in 
definition of a class of 
logic 	we 	propose 	to identify with the classes of 
1
work supported by nsf grant mcs 1. by checking that the resulting l i s t of clauses is truth-functionally unsatlsflabia. indeed: there is only one substitution instance of each clause used  in accord with our thesis. 1 
       
iii. automating 	obvious 	inference 
       how could t h i s treatment of our example be automated  a f i r s t thought might be to use binary r e s o l u t i o n w i t h the r e s t r i c t i o n that no clause may be resolved upon more than once. but it is r e a d i l y seen that an inauspicious order of r e s o l u t i o n s can defeat t h i s method. thus  r e s o l v i n g  1  w i t h  1  would give 
 1  	hey v gy . 
since the clauses   1       1       1       1       1      1  are r e a d i l y seen to be s a t i s f i a b l e   f u r t h e r use of r e s o l u t i o n on these clauses alone cannot lead to a r e f u t a t i o n . of course  a r e s o l u t i o n theorem-prover equipped w i t h s u i t a b l e h e u r i s t i c s could e a s i l y deal w i t h t h i s example. but it is not clear how to design an e f f i c i e n t r e s o l u t i o n theorem-prover which w i l l e f f e c t i v e l y v e r i f y a l l obvious inferences. fortunately the method of linked conjuncts   1      1   which h i s t o r i c a l l y preceded r e s o l u t i o n     can be used q u i t e n i c e l y f o r t h i s purpose. the method is based on the simple remark t h a t a set of clauses which i s minimally t r u t h - f u n c t i o n a l l y u n s a t i s f i a b l e   i n the sense that any proper subset is t r u t h - f u n c t l o n a l l y s a t l s f l a b l e   must be l i n k e d : that i s   the negation o f each l i t e r a l o c c u r r i n g i n one of the clauses must occur in one of the remaining clauses. thus in order to t e s t f o r obvious iferences one only need use the u n i f i c a t i o n algorithm t o search f o r a l l possible matches between l i t e r a l s and t h e i r negations using only a  s i n g l e copy of each clause. 
       our proposal is thus to a d j o i n to n a t u r a l deduction proofcheckers a new r u l e of i n f e r e n c e   obvious. obvious is invoked along w i t h a l i s t of premises and a proposed conclusion.   i n the context of fol  obvious has the same syntax as taut.  invoking obvious c a l l s an a l g o r i t h m c o n s i s t i n g o f : 
        a  a preprocessor which negates the conclusion  skolemlzes and produces a l i s t of 
clauses; 
        b  a procedure which searches the space of possible matches between l i t e r a l s and t h e i r 
negations; 
        c  a s a t i s f i a b i l t y t e s t e r   e . g . one based on the davis-putnam procedure   1     pp. 1 . 
       if   a       b     and  c  lead to success  i . e . to an u n s a t l s f l a b l e linked c o n j u n c t   the system adds the proposed conclusion as a new l i n e in the proof being c o n s t r u c t e d . otherwise  the system returns a message such as not obvious. 
iv. experiments with fol 
	during 	a 	b r i e f 	stay 	at 	the 	stanford 	ai 
laboratory  the obvious r u l e was implemented along the l i n e s discussed. a theorem-proving program based on the linked conjunct method that had been w r i t t e n by d. m c l l r o y and peter hlnman  see   1     in 1 was resurrected and m o d i f i e d . the n o d i f l c a t l o n consisted o f :  1  t r a n s l a t i o n i n t o the l o c a l d i a l e c t of lisp;  1  s e t t i n g to 1 the parameters determining the maximum number of instances of each clause to be permitted;  1  p l a c i n g a skolemlting conjunctive normal form preprocessor at the f r o n t end of the program. 
       various proofs that had previously been checked by fol were redone using the new obvious f a c i l i t y . it was found that the lengths of proofs were shortened by a f a c t o r of approximately 1. opportunities f o r even more dramatic reduction abound in filman's d i s s e r t a t i o n   1     which contains over a thousand l i n e s of fol. 
       a v e r s i o n of obvious f o r general use w i t h fol w i l l have to be modified to accommodate the r i c h fol f a c l l t l e s f o r d e c l a r i n g variables to be of various   s o r t s   . this can e a s i l y be done  e i t h e r by modifying the u n i f i c a t i o n a l g o r i t h m subroutine in obvious to permit only s u b s t i t u t i o n s of the correct s o r t   or by i n t r o d u c i n g i n t o the preprocessor a p r e l i m i n a r y procedure f o r making e x p l i c i t the r e l a t i v i z e d q u a n t i f i e r s which the fol sort mechanism suppresses. 
