 
   we present here a method for providing a mobile robot with learning capabilities. the method is 
based on a model of the environment with several hierarchical levels organized by degree of abstraction. the mathematical structuring tool used is the decomposition of a graph into its k-connected com-
ponents  k=1 and k=1 . this structure allows the robot to improve navigation procedures and to reco-
gnize some concepts  such as a door  a room  or a corridor. 
1- introduction 
   this paper presents two aspects of learning : concept learning and procedure learning by generalization. it deals specifically with navigation and locomotion problems for a mobile robot. actual prac-
tical applications for such a robot are for example: night-watchman  patroling and anomaly detecting 
in a known environment  robot- cleaner  robot-
conveyor  	waiter 
   the experimental support for our system is hilare*  a mobile robot. a navigation procedure based on an initial level of modelling of the universe has been defined by r. chati la / 1 / . our approach uses his work which is summarized in part 1. the initial model is a graph. we shall see the motives  part 1  which have led us to the structuring of this model by a decomposition of the graph into connectivity components  part 1 . the tools  some of them original  come from graph theory. we shall define a new itinerary procedure as being a generali-
zationof the navigation procedure  part 1 . subgraph labelling of the decomposition leads to concept learning  part 1  ; its implications in the improvement of man-robot communication will be dealt with. finally  in part 1  in a more prospective way  we shall tackle the problem of area recognition by subgraph isomorphism. 
1. hilare  universe modelling. navigation 
   as far as learning is concerned  we shall limit our presentation of hilare to decision-making  universe modelling and navigation. 
1. hilare's decision-making consists of : 
- multiple independant modules  vision  locomotion  navigation  object identification .-.  which are used to build a plan  and 
  heuristiques integrees au logiciel et aux automatismes dans un robot evolutif . hilare is also used as an experimental support for the learning of decision rules in plan generation. 
- a coordinator supervising the development and execution of the plan 1 - 1/. 
   as yet  this system is not entirely defined and is a current research topic. it may be progressively enriched by adding new modules. the integration of learning capabilities for each module can thus be 
taken into account. it is the caseforthe itinerary. 
1. universe modelling : hilare moves in a closed space of rooms cluttered with objects a priori considered as obstacles and whose geometrical projection on the locomotion plane is modelled by polygons. this set of polygons  together with the  floor plan  of the rooms leads to a initial geometrical model. 
   the navigation space is then partitionned into convex cells free of obstacles in which any two 
points can be linked by a straight line  fig.1 . 
this leads to a planar graph * representation : nodes correspond to cells and edges to common frontier-segments for adjacent cells  fig.1 . this 
model is topological ; every single face** characterizes an obstacle. notice that the graph representa-
tion is easily extended as new rooms are explored. 
1. the navigation procedure allows the research for a trajectory between two points s1 and s1 to be transformed into a path search in a graph by the following procedure : 
1. find the cells c1 and c1 which contain s1 and s1  1 and 1 in fig.1 . 
1. search a path t between c1 and c1 in the cell graph  1-1-1 in fig.1 . 
1. find the corresponding geometrical path g formed with the middle of the frontier-segment between the cells in t  dotted line in fig.1 . 
1. the trajectory is obtained by smoothing g. 
   the most important part of the procedure  the determination of the trajectory draft  is made in stage 1  by an admissible heuristic search which includes cell metrics. learning improves this search. 
1. motivations 
   if in order to go from a point s1  contained in a cell cd to a point s1  contained in a cell c1  of the navigation space  of the cell graph   the robot must go through a door  cell a   the problem 
of finding a trajectory  path search  may be decomposed into : find a path from s1  cd to the door 
 a  and a path from the door  a  to s1  c1 . in the 
* 	; 
 a planar graph has a representation in the plan such that two edges intersect in a node. **a face is a cycle in which a defined area of the plan contains no nodes. 

1 j.-p. laumond 
graph representation a is an arti culation node 
whose removal will disconnect the graph. hence the graph decomposition into connectivity components will enable us to decompose and simplify the navigation procedure. 
   moreover  when we consider fig.1  in order to go from any point in the room r1 to any point in the room r1  we must go through room r1 ; it would be 
much better to memorize definitively the path within room r1. 
   finally  area concept learning is necessary in order to build a man-robot communication language close to natural language  see /1/ . the graph decomposition can be analysed with a view to this 
aim. 
1. decomposition of the graph 
　by definition  a graph with at least k+1 nodes is k-connected i ff it is s t i l l connected after the withdrawal of k-1 nodes  or equivalently i ff there exist at east k distinct paths between any pair of nodes  . an articulation set is a node set 
whose wi thdrawal leads to an unconnected graph. the decomposition is the search of k-connected subgraphs. we shall deal only with the cases k=1 and k=1. the chosen method is specific to planar graphs. the in-
put data of the algorithm are the faces of the graph ; easily obtained from the geometrical model by following around the sides of obstacles. these data lead to simpler algorithms than the classical ones /1/. decomposition up to the triconnectivity level is based on the characterisation of articula-
tion nodes and pairs  established in /1 - 1/ : 
- a node is an articulation node i ff it appears twice in a face. 
- a node pair is an articulation pair i f f it appears in two faces  or three faces if this pair is an edge . 
　the decomposition algorithm into biconnected components* goes over every face in the graph. when an articulation node appears  it partitions the face. the partition elements are the bases of the biconnected components. in the example of fig.1  the external face gives the partition 1-1  1-1-1-1-1  1  1-1  1  1  and 1-1 with the nodes 1 1 1 as articulation nodes  see /1/ for details . 
　for the decomposition into triconnected components**  we propose in /1/ a quadratic algorithm which finds all articulation pairs. it compares favorably to the linear algorithm developed by hopcroft and tarjan /1/ for planar graphs with up to 1 nodes and 1 edges. 
　the set of articulation nodes  articulation pairs  biconnected and triconnected components can be structured into  a tree /1/. two nodes representing triconnected components are adjacent if they contain the same articulation pair ; two subtrees re-
presenting biconnected components are adjacent if they contain the same articulation node. 
　fig.1 represents the decomposition tree of the graph in fig.1  up to biconnected components . 
1. itinerary procedure 
　this procedure generalizes the navigation procedure ; it decomposes the path search problem into 
* 
the biconnected components are biconnected subgraphs or edges. 
* the tri connected components are tri connected subgraphs or elementary cycles. 
subproblems which are almost all solved by an initial processing. 
1. preprocessing : it memorizes the path between the nodes of separation sets belonging to the same component. these paths are found by the navigation procedure. fig.1 shows an example of a memorized path. 
1. itinerary : the decomposition structure and the prememorization having been defined  the search of a path between two points s1 and s1 by the itinerary procedure is done as follows : i.find the cells c1 and c1 containing s1 and s1. 
1.find the components k1 and k1 of decomposition tree tree containing c1 and c1. 
1. 1-if k1=k1  return the path given by the navigation procedure used only in k1 
1-else 1-find the path between k1 and k1 in the tree  k1-k1-k1 in fig.1  
1. fetch the corresponding prememori zed path p. 
1.find the path p1 between c1 and the first node of p  using the navigation 
procedure in k1  and the path p1 between the last node of p and c1  using the navigation procedure in k1. 
1.return the path p1 u p u p1. 
   the complete set of algorithms mentioned here  navigation  planar graph decomposition  preprocessing  itinerary  have been implemented in apl. 
1. complexity : the use of the navigation procedure in the steps 1 or 1-1 gives its complexity to the itinerary procedure. the step 1-1 is linear. therein lies the originality of the itinerary module : it transforms the path search in a graph into a 
path search in a tree. the preprocessing complexity is also determined by the navigation procedure for the path prememorization. graph decomposition is 
linear. according to our experiments  the cost of 
the preprocessing is paid off by a few robot moves. in a more complex example than the one presented here  1 cells   1 calls to the itinerary procedure were sufficient in the average. 
1. note : as a matter of fact  the prememorization cannot take into account the advent of unexpected 
obstacles during room traversal. this kind of event is specifically processed by the supervising coordinator  cf.′ 1  : it should  in this case  put into action an obstacle avoidance module. 
1. area concept learning 
   here we inderstand  learning  as the recognition of area concepts such as doors  rooms and corridors. this is done by the analysis of the decomposition tree of the graph. we first consider that a room is a biconnected or triconnected component in the decomposition tree  and a door or a corridor is an 
edge linking two components. yet  this approach is limited. in the analysed example  cell 1 cannot be 
viewed as a door as is the case of cell 1 ; both of them are separation nodes  edges in the decomposition tree  ; metrical considerations must be introduced to improve the labelling. examples of 
rules used are : 
- two adjacent biconnected components which are not edges  are labelled as two different rooms if their common separation node is a cell with a small surface. 

- two adjacent biconnected components  one being an edge  are labelled as one room  if their common separation node is a cell with a large surface. 
   fig.1 presents two possible labellings corresponding to whether cell 1 is considered as small or large. in fact  we can improve the labelling by 
other criteria : for example the frequency of cell crossing. all considered  the decomposition tree is a  skeleton  which is used as a basis for area concept learning. the tree is the model of the room connectivity graph. 
1. area recognition 
   this paragraph presents more prospective ideas. the model of the robot increases as it explores the univers. in a rather complex case  the robot may reach a room already known through doors and corridors unknown to i t . i t must recognize this area. 
several means of recognition are possible : 
1. the metrical identification with absolute coordinates. this may be inefficient due to uncertainties in measurement and to robot positioning errors. 
1. the identification of characteristic objects in the room if these exist. 
1. a third possibility is topological recognition. 
   the above structuring of space permits to solve this recognition as a subgraph isomorphism problem. the general problem is np complete  even in the planar graph . we can nevertheless expect a solution through the label ling of the graph  approximate metric  number of obstacles in the rooms  number of doors ...  and through the reduction of the general 
problem to isomorphism of planar graph  for which efficient algorithms  based on the same graph decomposition techniques  are known  /1 - 1/ . 
1. conclusion 
   the learning procedures presented in this paper lead to a significant improvement in the robot navigation system. furthermore  they enable a model  ling of space at a high level of abstraction  and a 
j.-p. laumond 1 
labelling of subspaces close to human concepts of 
area. orders such as :  take corridor c and enter into room r through door d  will refer for the robot to data structures with precise algorithmic meaning. whi le carrying out this research on learning by data structuring  we have developed original and efficient algorithms for planar-graph processing. 
