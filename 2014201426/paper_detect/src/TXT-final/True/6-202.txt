efficient representation of adhoc constraints * 
kenil c.k. cheng and jimmy h.m. lee peter j. stuckey dept of comp. sci. & eng. dept. of comp. sci. & soft. eng. 
the chinese university of hong kong  hong kong university of melbourne  australia 
	{ckcheng jlee} cse.cuhk.edu.hk 	pj s cs.mu.oz.au 
1 introduction 	in an abuse of notation  we define a valuation 	to be an 
	element of a  non-false  domain d  written 	d  if   
constraint programming is a promising technique for solving many difficult combinatorial problems. since real-life con-
we are also interested in the notion of an initial domain  
straints can be difficult to describe in symbolic expressions  denoted by the initial domain gives the initial values 
or provide very weak propagation from their symbolic reprepossible for each variable. 
sentation  they are sometimes represented in the form of the 
	a constraint c over variables 	written as 
sets of solutions or sets of nogoods. this adhoc represenrestricts the values that each variable x - can 
tation provides strong propagation through domain  general-
　　　　　　　　　　　　　　　　　　　　　　　　take simultaneously. an adhoc constraint is ized arc  consistency techniques. however  the adhoc repre- defined extensionally as a set of valuations over the varisentation is expensive in terms of memory and computation  ables we say is a solution of c. for any when the adhoc constraint is large. valuation on variables w i t h w e calla 
	so there is interest in determining less expensive meth-	nogood ofc. 
ods for building propagators for adhoc constraints  friihwirth  	often we define constraints intensionally using some well 
1; apt and monfroy  1; abdennadher and rigotti  understood mathematical syntax. for an intensionally defined 1; bartak  1; dao et al.  1 . 
　in this paper  we propose a new language-independent representation for adhoc constraints  the box constraint collection. the idea is to break up an adhoc constraint into pieces and cover these pieces using box constraints as tiles. this can a constraint satisfaction problem  csp   tsang  1   be done automatically with a greedy algorithm. with the aid consists of a set of constraints over a set of variof constructive disjunction and a suitable choice of constraint ables where each variable xi can only take values templates in the collection  our new representation achieves from its domain a set of integers. solving a csp domain consistency. requires finding a value for each variable from its domain so 
that no constraint is violated  i.e. all constraints are satisfied. 
1 propagation based constraint solving 	a propagator f is a monotonically decreasing function 
from domains to domains. the generalized arc consistent 
in this section we give our terminology for constraint satis-	propagator for a constraint c is defined as  
faction problems  and propagation based constraint solving. where x 
　an integer valuation is a mapping of variables to integer a propagation solver for propavalues  written   we extend the gators f repeatedly applies propagators  to a domain valuation to map expressions and constraints involving the d until no further change in d results. variables in the natural way. we sometimes treat a valuation 
as the constraint  1 box constraint collections 
let vars be the ftmction that returns the set 
of  free  variables appearing in a constraint or valuation. 	adhoc constraints are usually implemented as tabled con-
　a domain d is a complete mapping from a fixed  count- straints by listing all the solutions or nogoods  incurring space able  set of variables  to finite sets of integers. a domain and time overhead. often we represent a constraint in an ad-
d  is stronger than a domain  written  if hoc manner because it is difficult  or unwieldy  to describe  for all variables x. it using a symbolic expression. however  it may be easier to find symbolic expressions if we examine part of the so-
　*we thank the anonymous referees for their constructive com- lution space. therefore  we propose representing an adhoc ments. the work described in this paper was substantially supported constraint cadhoc with a set of simple constraints in dnf. 
by a grant from the research grants council of the hong kong spe- a box is an n-dimensional hyper-cube  cial administrative region  project no.  where is a  closed  interval of integers ai and bi. if 
1 	poster papers 


lemma 1 let 

and suppose each constraint c - is implemented by a generalized arc consistent propagator  then using constructive disjunction on this representation achieves generalized arc consistency for cadhoc. 

figure 1: an adhoc constraint ctri made of two triangles 
example 1 a box constraint collection representation of the constraint ctri shown in figure 1 is 

　due to space limitation  we cannot show how box constraint collections can be compiled into indexicals directly and efficiently. 
1 	experiments 
we compare the propagation efficiency among box  indexical bccs for boxes only   tri - box  indexical bccs for triangles and boxes  and rel  the built-in r e l a t i o n / 1 for binary adhoc constraints  on randomly generated cubic inequalities 

domly chosen between  -1..1 . the domain size is 1. for each variable x and y  we repeat m times picking a subset dinit x  where = w  and adding the constraints for each these constraint additions are then re-
moved and the next set s picked. we do our implementation with sicstus prolog 1.1 on a sun blade 1 workstation. 
　table 1 summarizes some results. n is the number of solutions. b and t are the number of boxes and triangles. tri-box generates no boxes  b = 1  in all 1 instances  gen is the generation time  rel and prop  for box and tri-box  are the time they spend on the propagation test m = 1 and w - 1. tri-box is the fastest because it compactly represents the non-linear constraints with 1 or 1 triangles  box  although is faster than re/  it takes a long time to generate because every box covers only a few solutions  and many boxes are needed. 
n rel box tri-box b 	gen 	prop t gen 	prop 1 
1 
1 1 
1 
1 1.1.1 
1 	1 	1 
1 	1 	1 1 
1 
1 1 	1 
1 1 
1 1 table 1: performance comparisons on non-linear constraints 
1 	conclusion 
we have proposed a new language-independent representation  box constraint collection  for adhoc constraints. with constructive disjunction  our new representation achieves generalized arc consistency  if all constraints inside the collection do. 
　future work includes improving the current greedy bcc generation algorithm  and optimizing the indexicals of a box constraint collection. 
