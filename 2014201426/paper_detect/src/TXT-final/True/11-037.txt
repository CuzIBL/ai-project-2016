 
       the use of two arms simplifies manipulatory tasks such as assembly of an object from large parts which cannot be handled by one arm. this paper describes the control method for coordination of two arms. as fundamental tasks  the parallel transfer task and the rotational transfer task are considered. more complex tasks are accomplished by using these two modes simultaneously. the control of motor torque of each joint is adopted instead of joint position control. the wrist force sensor is used in order to measure the interactive force between two arms. 
introduction 
       research with computer controlled manipulators is becoming increasingly popular. manipulation has remained an important area for studying the means by which intelligent systems control their world. most of the problems of control in the real world must be feced in manipulatioa current systems make possible high-level tasks such as putting a peg into a hole  assembly of a bearing complex and turning a crank by the use of force feedback. however  most work in the past has concerned the position control of single manipulators. when we take a look at the actual human behavior of handling  we use two hands efficiently and skillfully  and are producing not only the simple quantative effect that the use of two hands does twice of the work by one hand  but also the qualitative effect that it makes possible tasks which are impossible to execute with one hand. systems with one hand cennot carry out assemblies consisting of large parts which cennot be handled by one arm in order to make possible more general assembly  two arms or more are necessary. 
       this paper describes the analysis of cooperative motion of two manipulators  using two stanford arms which are available at the stanford artificial intelligence laboratory. external forces and the interactive force between two arms can be obtained by the use of the wrist force sensor which was recently installed. 
       some new representation issues arise. while the bulk of earlier work was based on position representation  cooperation of two manipulators requires interaction which is expressed in a force representation. the servo requires force servo instead of position servo. many manipulators have a hardware servo system which constitutes the position conrol system  but in the case of the stanford arm a software servo system is adopted. therefore it is possible to program the manner in which feedback is to be used to modify the servo. the output command to eech joint from the computer is the motor torque of each joint  so it is possible to control the torque of each joint. in the case that arms are influenced by the external forces such as in the coordination of two arms  the torque control system which can control the necessary torque of each joint is more effective than the position control system which outputs each joint angle positioa 
       in this paper  as fundamental tasks  a method of evaluating the necessary torques to perform the parallel transfer and the rotational transfer of an object is presented. the analysis follows the classic decomposition of e general rigid body motion into a rotation and translation. separate analyses are carried out for each. rotations and translations provide simple and adequete models for motions. more complex transfer motion is possible by the use of these two modes simultaneously. for high performance  predictive control models become necessary  rather than simple feedback control. a next step  not considered in this work  is the modeling of the dynamics of the external world. 

robot f r s - 1 : 	i s h i d a 1 

basic tasks by two arms 
parallel transfer 
       whan we consider cooperative tasks using two arms  such as the handling of a large box or a long bar  basic tasks can be separated into two tasks which are parallel transfer tasks and rotational tasks. in this section parallel transfer is considered parallel transfer means that the object is transferred maintaining the orientation of the two arms. 
	before 	considering 	parallel 	transfer 	tasks  	the 
interaction of two arms should be considered. there are two conditions on the relation of two arms. in the first  one of these two arms is supposed to work as a master arm and the other as a slave arm. the slave arm must be moved in cooperation with the master arm. in the second  these two arms work in the same status. 
these two cases are described in the following. 
parallel transfer: case 1 
       in this case  we define two arms as a master arm and a slave arm. the master arm is controlled by the ordinary position feedback control with pid  proportional plus integral plus derivative  control and a feedforward term for the master arm  the motor torque applied to each joint is 

       when we can assume that two hands grasp the object firmly and that two hands and the object ere supposed to be one body  the position of a point on the object is determined by 1 degrees of freedom of the master arm  therefore the slave arm has to move completely following the motion of the object moved by the master arm  and cannot have degrees of freedom to the object. so the slave arm necessitates the good performance that it has gravity loading balance at arbitrary points and can be moved by the external force very lightly. for the slave arm  the motor torque applied to the upper 1 joints which decide the hand position is 
t k =j k ¦Ác k +g k -ff+l k +ti k  
where ¦Ác k = 
tkw-command joint acceleration  which is calculated by supposing that the trajectory of the slave arm is parallel to the planned trajectory of the master arm. joint loading  caused by the force applied to the object  if the force to the object is necessary. 
joint loading  caused by the interactive force applied to the hand of the slave arm by the master arm. 	j k ¦Ác k  is a feedforward term. 	there is no 
c 
position  integral or velocity feedback. the slave arm is entirely force servoed and is free to move where necessary to follow the master arm. it applies forces to the object  if necessary. it exerts torques to cancel the interactive force from the other arm. if the slave arm were only following forces resulting from motion of the other arm  there would be a lag in acceleration. performance would be poor for large accelerations. for high performance  a feedforward term is included. in essence  slave arm knows what the mater arm is doing. g k  is calculated from the gravity loading of the arm itself plus the half weight of the object. l k  is added only when the object is transferred holding by two hands from both sides. ti k  is the transformed torque data from the data 
obtained by the force sensor to each joint torque. it 
reduces the influence of the external force generating the same amount of force by itself. the motion of the slave arm is mainly caused by this ti k . 
       during the transfer of a large box  for instance  in order to keep the box direction  the hand has to maintain the orientation. therefore  for the lower 1 joints  the motor torque is calculated in the usual way so as to maintain the orientation. ¦Ècm and wc k  are calculated by using the upper 1 joint actual positions. 
       the sign of f is known from the direction of the force applled to the hand at the starting point. while 

r o b o t i c s - l : 	i s h i d a 
1 

moving  it is known from the sign of w k . 
     when the grasp is rigid and the two hands and the object are supposed to be one body  this method is considerably effective. but the grasp is not rigid and there are some degrees of freedom between hands and the object  it is very difficult for the slave arm to follow the motion of the master arm. in this case it is necessary to use other information such as the position data of the master arm. 
¡¡¡¡¡¡joint loadings ti k  and l k  for each joint are obtained by next equations. these are for stanford arm's joints 1  1 and 1. 
joint loading: ti k  
ti k 1=z xxfi+m  
ti k 1=a1z.  x-xs xfi+m  
ti k 1=a1z.fi 
	ti kn  : 	joint loading at the nth joint 
	x: 	hand position vector 
	xs; 	shoulder position vector 
	fi: 	force vector applied to the hand 
	m: 	moment vector applied to the hand 
l k ; joint loading at the nth joint fa: force vector needed to hold the object. 
robotics-1: ishida 1 

parallel transfer; case 1 
       in this case  two arms are not distinguished as the master arm and the slave arm. they work in the same status  in this method it is necessary to compute the positions of both hands and computation of each joint torque while the arms are in motion  so it takes more to execute compared with case 1  but it is significant because it can be used with rotational transfer described in the next section. the method of case 1 does not seem to be useble with the rotational transfer simultaneously. 
       for both arms  in addition to gravity loading g k  and friction f  torque control is applied to generate the following force ft at each hand 
ft = fc + fi 
where fc is the force required to 
fc = ka d1/dt1 c  + kc   c~ xl+xr /1   + kd d/dt   c- xi+xr /1   
fc: fixing force vector to some point c : some point position vector ka kc.kd: constant coefficients 
f i - f s 
	fi: 	interactive force vector 
fs: 	the external force applied to the hand measured by the force sensor 
       the force fc is calculated such that the midpoint between the two hands follow the point c. the force fi cancels the interactive force expected in the motion. this torque control is applied to the upper 1 joints. for the lower 1 joints  position control is used in order to maintain the hand orientation. if c is moved in some direction  parallel transfer can be accomplished. 
       the trajectory of c should be planned. for straight line motion  one way of planning the trajectory of c is to interpolate between endpoints with a sinusoidal function of time  as follows. 
c = c1 +  t- l/1¦Ð sin 1¦Ðt   cg-c1  
co : initial position c : final position t: normalized time 
r o h o t i c s - 1 : 
1 
       the merit of this trajectory is the smooth acceleration and deceleration since the acceleration curve is sinusoidal. 
rotational transfer 
       rotational transfer means that two hands rotate the object around an arbitrary axis. one example of this task is the rotation of a large box or a long bar. if position control is applied to execute this task  the motion becomes awkward. but by using torque control for each joint to generete a force verier to the direction of the rotation in both hands  the motion becomes very smooth. in this case the distinction of the master arm and the slave arm is unreasonable  so the control of both arms in the same status is more natural. 
       for each arm  in addition to gravity loading g k  and friction f  the total force ft is calculated from the following forces  fr the force to generate the rotation of the object around an axis  fc  the force to fix the center of the object to the rotational center point  and fi  the force to reduce the interactive force between two hands while in motion. this torque control is used for the upper 1 joints which decide the hand position. for the lower 1 joints  orientation control is applied according to the rotatioa 
ft = fr + fc + fi 
where 
fr = f  ucx xi-xr  /|ucx xi-xr | 
fr. rotational force vector f: amplitude of the force uc: unit rotational vector xi: left hand position vector xr: right hand position vector fc - kc   c- xi+xr /1   + kd d/dt  c- xi+xr /1   
fc: force vector required to fix to the center of the rotation 
kc kd: const ant coefficients 
	c : 	rotational center position vector   = 
 xl1 +xr1 /1  
xlo xro; initial hand position 
f i - f s 
	fi: 	interactive force vector 
	fs: 	the external force applied to the 
hand  measured by the force sensor 
i s h i n a 

f should be varied in order to transfer the object 
smoothly and stop at the desired angle position. one way of evaluating f is as follows. 
where 
¦Èc = ¦Èf t- l/1r sin 1rt   
d : actual rotation angle 
cos¦Èg =  xlo-xro .  xlxr  /|xi1-xr1||xi-xr| 
initial hand position actual hand position final rotation angle 
¡¡¡¡¡¡the input data necessary to the rotational transfer are the rotational center position c  the unit rotation vecter uc which has the direction of the rotation  and the desired rotational angle ¦Èf around the vecter uc. c is assumed to be at the midpoint between the two hands here  but an arbitrary point may be used. 
the hand orientation 
¡¡¡¡¡¡while rotating the object  the hand orientation has to be changed relative to the object. the hand orientation rotates around the unit rotation vector uc. the hand orientation is represented by orthogonal unit vesters l  m and n. after the rotation of 1 these vecters become li  ml end nl. 
the angle  between uc and l does not change while in motion. therefore 
	uc   l = uc   li 	 1  
the rotational angle of l around uc is ¦Èg' |l|-|l1|  end 
|uc|-l. therefore 
	  ucxl     ucxll   - | l || li 	|cos¦Èa 	 1  
  ucxl  x  ucxll   - | ucxl |1sin¦È uc  1  
roboilcs-1: tshida 
1 

where 

from the above equations  we have 
  1  
therefore 
li =  dl/d  d1/d  d1/d  

       dn is the matrix for which the nth column of d is replaced by the terms on the right hand side in  1 . we can obtain ml and nl by the same way for m = 
 mx my mz  and n =  nx ny nz . 
by using the above equation  we calculate the hand orientation r 1   relating to the object rotational angle. 
conclusions 
       the execution of the coordination of two arms requires computations to be executed in runtime such as the exchange of the information between both arms and the computation of interactive force. these are unnecessary in the control of one arm. nevertheless  it makes possible performing new classes of manipulation tasks. 
       the system is effective and reasonable  since it controls the force directly instead of controlling the position which is the indirect variable in the case of controlling forces. 
       as the fundamental motions of the coordination of two arms  parallel transfer and rotational transfer of en object are considered. by varying the rotational center position c and the rotational vector uc  more general rotational transfer can be performed. when parallel transfer is added to this general rotational transfer  most motions by two arms seem to be described. 
       in actual assembly tasks  additional forces from the outside might be applied to the object handled by the arms. since arms must continue the assembly task considering these forces  more sophisticated force control would be necessary and sometimes even the partial use of position control and visual feedback could be effective. 
bibliography 
 rpinkel  r. taylor  rbolles  rpaul  j.feldman   al  a programming system for automation    stanford a.i.project  memo no.1  nov. 1. 
 r.c.bolles  rpaul   the use of sensory feedback in a programmable assembly system    stanford a.iproject  memo no.1  oct.1. 
 rppaul   modelling  trajectory calculation and 
	servoing 	of 	a 	computer 	controlled 	arm  	  
stanford a.iproject  memo no. 1  mar. 1. 
 t.o.binford  d.d.grossman  et al   exploratory study of computer integrated assembly systems    progress report 1  stanford a.i.project  memo no.1  aug. 1. 
 m.d.roderick   discrete control of a robot arm   stanford a.iproject  memo no.1  aug.1. 
 h.lnoue   force feedback in precise assembly tasks   massachusetts institute of technology a.lmemo no.1  aug. 1. 
 j.lnevins  d.e.whitney  s.n.simunovic   system architecture for assembly machines    the 
	charles 	stark 	draper 	lab.  	memo 	no.r-1  
nov. 1. 
 c.a.rosen  et al   exploratory research in advanced automation   stanford research institute report  jan. 1. 
 a.k.bejczy   robot arm dynamics and control   california institute of technology  jp.lmemo tm1  feb. 1. 
 e.nakano  t.ishida  et al   cooperational control of a pair of anthromorphous manipulators  melarm     proc.1th lntern.symp.lndustrial robots  nov.1. 

r o b o t i c s - 1 : 	ishida 
1 
