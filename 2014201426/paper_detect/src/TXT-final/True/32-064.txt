 
this paper presents a geometric based approach for multiple mobile robot motion coordination. all the robot paths being computed independently  we address the problem of coordinating the motion of the robots along their own path in such a way they do not collide each other. the proposed algorithm is based on a bounding box representation of the obstacles in the so-called coordination diagram. the algorithm is resolution-complete. its efficiency is illustrated by examples involving more than 1 robots. 
1 	introduction: path coordination 
this paper addresses the following problem: consider n mobile robots sharing the same workspace and planning their paths independently; n such paths being given we want to devise an algorithm deciding whether coordinated motions exist for the mobile robots along their own paths  so that each robot can reach its own goal without colliding the other ones. the problem is known as the multiple robot path coordination problem  latombe  1b . 
path coordination versus path planning multiple robot path coordination and path planning are two related issues in robot motion planning. in multiple robot path planning the robot paths are not a priori computed. a solution to the multiple robot path planning problem is a collision-free path in the cartesian product of the configuration spaces of all the robots. a solution to the problem exists iff the start and goal configurations belong to a same connected component of the global collision-free configuration space. searching such a space is a highly combinatorial problem  hopcroft et a/.  1 . 
　to face this complexity several authors have investigated decoupled schemes1. the decoupled approach has 
1
    other schemes for multiple robot path planning have been proposed. for instance some centralized approaches aim at facing the problem complexity with probabilistic al-
1 	robotics and perception 
been introduced in  kant and zucker  1 : the method first plans the paths of the robots independently and then computes the velocity profiles so that the robots do not collide. the approach has been further revisited in  erdmann and lozano-perez  1; buckley  1; warren  1; alami et a/.  1 . 
　the path coordination problem as such has been addressed in  o'donnell and lozano-perez  1  where the notion of coordination diagram has been first introduced. it dealt with two robots  a case which has been also addressed in  bien and lee  1; chang et a/.  1 . a strategy based on dynamic programming was proposed more recently in  la valle and hutchinson  1  to address problems involving more than two robots. 
objective  approach and contribution we want to solve problems involving more than 1 robots in realistic situations. the algorithm consists in searching a n-dimensional coordination diagram. the main contribution is to propose a bounding box representation of the diagram obstacles. with respect to the previous works above we do not use any regular grid representation. the algorithm is resolution complete and it is complete for a large class of inputs. its efficiency inherits from the efficiency of simple geometric operations giving rise to a collision-checker dedicated to mobile robot coordination and summarized in section 1. after having introduced a cell decomposition of the coordination diagram for the case of two robots  section 1   we extend the algorithm to the general case  section 1 . 
1 	paths sa and geometric tools 
paths sa the geometric tools we use are based on the following assumption: the robot paths are sequences of straight line segments  s  and arcs of a circle  a . such sequences are denoted by 1 . this assumption is supported by both theoretical and practical considerations. 
gorithms  see  svestka and overmars  1  and references therein . prom another point of view  cooperation-oriented approaches are based on local informations  potential methods : see for instance  reif and wang  1  and  cao et ai  1  for a recent overview. techniques for path coordination are out of the scope of all these methods. 

first of all  it has been proved that a collision-free admissible path exists iff there exists a collision-free admissible path of type sa  laumond  1 . moreover  most of the existing complete motion planners for mobile robots provide solution paths of the type sa  e.g.   laumond et a/.  1; latombe  1a; svestka and overmars  1; mirtich and canny  1  . finally geometric algorithms like boolean operations or swept volume computations are simple and computationally efficient when dealing with arcs of circle and straight line segments. 

	 a  	 b  
figure 1: two intersecting robot traces 
traces a mobile robot path being given  a trace is the volume swept by the robot when moving along the path. assuming that the robot is a polygon  the trace of a path of type sa is a generalized polygon whose boundary is a sequence of straight line segments and arcs of a circle.  simeon et a/.  1  have shown how to compute such traces efficiently  figure 1 a  . 
coordination configurations to coordinate the motions of two robots along their own path  it is necessary to compute the intersection of their trace. figure 1 shows two traces. the bold sub-path  a1i   resp.  a1 b1   gathers the configurations at which the first 
 resp. second  robot intersects the trace of the second  resp. first  one. the endpoints of such sub-paths are called coordination configurations.  simeon et a/.  1  have proposed a geometric algorithm to compute them when the robots are convex polygons and move along sa paths. in this paper we keep the same assumptions. 
1 	coordination for two robots 
coordination diagram coordinating the motion of two robots along two given paths is a classical problem. its solution consists in exploring the so-called coordination diagram  o'donnell and lozano-perez  1 . 
let us consider the two paths 	m fig-
ure 1 a . both coordinates 	and 	are assumed to 

	 c  	 d  
figure 1: two sa paths  a   the coordination diagram 
 b   the partition of the diagram induced by the path decomposition  c   the bounding box representation of the obstacles and a solution path  d . 
vary from 1 to 1. figure 1 b  shows the corresponding coordination diagram : the black domains represent the set of configuration pairs  such that 
the robots collide when they are respectively at configurations 	a n d . black domains are obsta-
cles to avoid. a coordinated motion exists iff there is a collision-free path in the diagram linking the point  1   the robots are both at the beginning of their own path  to the point  1   the robots are both at the end of their path . 
a bounding box representation our contribution is to propose an algorithm to explore the diagram without computing the exact shape of the obstacles1. we use a bounding box representation based on the following property: the  minimal  box bounding an obstacle in a coordination diagram is a rectangle whose endpoint coordinates are the coordination configurations 1. let 
us consider the case in figure 1. the coordinates of four points defining the rectangle in the coordination diagram are respectively  and 
   1 the obstacles in figure 1 b  have been computed with a brute force discretization approach used only for display purpose. 1  in our context the coordinate of a configuration on a path  is its curvilinear abscissa s on 
	leroy  laumond  and simeon 	1 

 the computation of the boxes is then done by computing the coordination configurations  see above . 
path decomposition let us now consider two 
sa paths  and . instead of applying the bounding box representation directly in the coordination diagram of and  we first apply a path decomposition. each path is decomposed into its elementary pieces consisting of either straight line segments  or arcs of a circle. let  and  the pieces sequences of and respectively. the coordination diagram for and then appear as the union of the coordination diagrams of the various pairs . for instance  the two paths in figure 1 a  both consist of 1 arcs of a circle. therefore the coordination diagram appears as the union of 1 elementary coordination diagrams  figure 1 c  . then  for each elementary coordination diagram  we compute a bounding box representation of the obstacles. figure 1 d  shows the bounding box representation of the diagram in figure 1 b . 
search such a representation induces a cell decomposition of the coordination diagram into rectangles. any classical search algorithm may be used to compute a collision-free path from the origin  1  to the goal  1 . figure 1 d  shows a solution path. for this example  note that the widthest robot r1  corresponding to the vertical coordinate in the diagram  should necessarily move forward  backward and then forward along the first two pieces of its path. 

figure 1: this case cannot appear when at least one robot moves along a straight line segment. 
completeness the algorithm is complete iffit is complete when applied to the elementary diagrams corresponding respectively to three cases: s||s  s||a  a||a. 
　for the first two cases the algorithm is complete. the only way for the bounding box approach to loose a solution is that there exist two vertical and horizontal lines intersecting two obstacles  figure 1 . this is however not possible since at least one robot moves along a straight line segment: indeed  the robot moving along the straight line cannot intersect twice the other  convex  
1 	robotics and perception 
robot remaining at a fixed position. then the bounding box approximation does not affect the completeness of the algorithm for these first two cases. 

figure 1:  special case: bounding boxes would fill the space. 
　completeness is not necessarily guaranteed in the third case : we may find counterexamples where the bounding box approximation of the obstacles may split the free space into two connected components. figure 1 shows an example where the bounding box transforms the full space into an obstacle. however such cases can be solved by the following resolution complete procedure: both arcs of a circle are recursively split into smaller arcs and each pair of the new elementary pieces is processed with the bounding box approach. moreover such cases are easily identified in the path decomposition step above. this means that  according to the inputs  the algorithm may or not activate the recursive subdivision. the activation condition is a function dedicated to the case  and checking the existence of a collision-free vertical or horizontal line in the diagram. the activation cases are seldom seen. for instance they do not appear in the examples displayed in figures 1  1 and 1. 
1 	coordination for n robots 
generalized coordination diagram let us now consider n robot paths the cartesian product of all the  elementarycoordination diagrams is a n-dimensional cube called generalized coordination diagram. a point in the n-cube belongs to an obstacle iff at least two robots collide. therefore  the obstacles in the generalized coordination diagram have a cylindrical shape1. as a consequence the topology of the generalized coordination diagram is fully characterized by the topology of the elementary 1-dimensional diagrams. figure 1 b  shows the 1 elementary diagrams for the path coordination problem of figure 1 a . 
　a solution to the coordination problem is a collisionfree path between  1 ... 1  to  1 ... 1 . 
　　1 this property has been already noticed in  la valle and hutchinson  1  


figure 1: the 1 elementary diagrams  b  of the generalized coordination diagram of 1 paths  a . 

figure 1: the cell decomposition of a diagram refines the cell decomposition of other diagrams. 
generalized coordination diagram modeling and searching we have seen that the bounding box representation of the coordination diagram for two robots induces a decomposition of the diagram into rectangles. 
let us consider three paths   the cell decomposition of coordination diagram induces a partition of the axis . then the cell decomposition of the diagram is refined according to this partition. more generally  the cell decomposition of a   diagram induces a refinement of the cell decompositions of the 1 n -1  diagrams  and  see figure 1 . we denote by  i  j -cell a cell of the diagram after refinement. the 1-dimensional -cells of all the  diagrams induce a cell decomposition of the n-
cube. the cells of then-cube are denoted by n-cells. the main advantage of the following search is that it does not require an explicit representation of the n-cube. 
　let us consider a  collision-free  n-cell reached at a current step of the search. the strategy consists in moving only one robot at once at each step. to do that the algorithm generates the 1n cells adjacent to the ncell through a  n - l -dimensional hyper-plane. let us consider a n-cell cell  adjacent to the current collisionfree n-cell and corresponding to an elementary motion of robot i. due to the cylindrical shape of the obstacles  testing if cell is collision-free is easily performed: each of the  n-1  projections of cell onto the elementary diagrams should be a collision-free  i  . -cell. 
　the search is performed by an a* algorithm whose heuristic function is the shortest euclidean path to the goal point  1 ... 1  of the n-cube. our algorithm computes coordination paths which are manhattan paths: only one robot moves at once. if needed  we may overcome this fact by  smoothing  the computed path with the help of optimization techniques as in  svestka and overmars  1 . 

 a  

figure 1: a case with 1 robots: the robots traces  a  and the 1 elementary diagrams. the partition into the 1 robot subgroups is illustrated by the 1 bold triangles. 
completeness due to the cylindrical shape of the obstacles in the generalized coordination diagram  the algorithm above inherits from the completeness property of the coordination procedure for two robots presented in section 1. 
interaction graph the final extension we propose is supported by a practical assumption. when a high num-
	leroy  laumond  and simeon 	1 

ber of robots plan their paths independently the path coordination problems are in general localized in different domains of the environment and only concern robot subsets. to reduce the combinatorial complexity of the global problem in practice we first identify which robot traces intersect another trace. we then build an internetion graph whose nodes are the robots; two robot-nodes are adjacent iff both corresponding traces intersect. a simple decomposition of the graph into connected components identifies automatically the various subgroups of robots requiring motion coordination. then the algorithm above is applied to each subgroup. 
results figure 1 a  shows an example of 1 mobile robots paths  including the traces . the 1 connected components of the interaction graph have been computed automatically. the global coordination diagram appears in figure 1 b  showing clearly the structure induced by the 1 connected components. a detailed view of the coordination diagram involving a subgroup of 1 robots appears; it includes a display of the computed solution path for this group. 
　all the steps of the algorithm have been implemented in c++ and run on sparc ultra-1. the following table presents the computation times of each step of the algorithm for the examples in the figure 1 and the figure 1 that involves 1 robots1. a more complete analysis appears in  leroy  1 . 

1 conclusion 
the proposed approach permits to solve problems for more than 1 robots in a reasonable time. the key points of the method are the efficiency of computation of the coordination configurations and the bounding box representation of the obstacles in the elementary coordination diagrams. 
　nevertheless we should notice that the performance depends on the decomposition of the interaction graph into connected components. the worst case appears when the interaction graph has only one component  e.g.  when the trace of some robot intersects all the other traces . in fact  the complexity of the approach is dominated by the highest dimension of the considered ncubes. in practice the algorithm may explore efficiently n-cubes of dimension up to ten  i.e.  involving 1 robots . 
　　1 the motion planner computing an admissible collisionfree path for each robot is based on the algorithm presented in  laumond et a/.  1 . it is not possible to display the  effective  motions on pictures; animations related to this work may be seen at 
1 	robotics and perception 
we just argue that this limitation is not critical in practice. moreover we do not know any alternative approach allowing to solve the case of figure 1. 
