
it is well-known that the size of the model is a bottleneck when using model-based approaches to diagnose complex systems. to answer this problem  decentralised/distributed approaches have been proposed. another problem  which is far less considered  is the size of the diagnosis itself. however  it can be huge enough  especially in the case of on-line monitoring and when dealing with uncertain observations. we define two independence properties  state and transition-independence  and show their relevance to get a tractable representation of diagnosis in the context of both decentralised and incremental approaches. to illustrate the impact of these properties on the diagnosis size  experimental results on a toy example are given.
1 introduction
we are concerned with the diagnosis of discrete-event systems  cassandras and lafortune  1  where the system behaviour is modeled by automata. this domain is very active since the seminal work by  sampath et al.  1 . its aim is to find what happened to the system from existing observations. a classical formal way of representing the diagnosis problem is to express it as the synchronised product of the system model automaton and an observation automaton. this formal definition hides the real problem which is to ensure an efficient computation of the diagnosis when both the system is complex and the observations possibly uncertain.
모it is now well-known that the size of the system model is a bottleneck when using model-based approaches to diagnose complex systems. to answer this problem  decentralised/distributed approaches have been proposed  pencole뫣 and cordier  1; lamperti and zanella  1; benveniste et al.  1; jiroveanu and boe몮l  1 . instead of being explicitly given  the system model is described through its component models in a decentralised way. the global diagnosis is computed by merging local diagnoses in order to take into account the synchronisation events which express the dependency relation which may exist between the components.
모a problem  which is far less considered  is the size of the diagnosis itself. however  it can also be a problem  especially when dealing with a long-lasting flow of uncertain observations as remarked in  lamperti and zanella  1 . we define in this paper two independence properties  stateindependence and transition-independence  and show that they make it possible to get a decentralised representation of the diagnosis without any loss of information. when the diagnosis is performed on a long-lasting temporal window  the transition independence property  which expresses the concurrence between subsystems  has little chance of being satisfied. the idea then is to slice the diagnosis period into smaller periods and to compute the diagnosis in an incremental way. the problem which appears is that the slicing generally removes the state-independence property. the solution we finally propose is to enrich the representation with an abstract description of the diagnosis trajectories and show that it allows us to keep the benefits of the transition-independence based decentralised representation.
모after preliminaries in section 1  two independence properties  state and transition-independence  on automata are defined in section 1. in section 1  the decentralised approach is proposed and the decisive role played by the stateindependence property in the diagnosis computation is highlighted. then it is shown how to take advantage of the transition-independence propertyto get an efficient representation of the diagnoses. the incremental computation and the use of an abstract representation is considered in section 1. to illustrate the impact of our proposal on the diagnosis size  experimental results on a toy example are given in section 1.
1 preliminaries
we suppose in this paper that the behavioural models are described by automata. we thus begin by giving some definitions concerning automata  see  cassandras and lafortune  1  . then  we recall the diagnosis definitions and state some hypotheses.
1 automata  synchronisation and restriction
an automaton is a tuple  q e t i f  where q is the set of states  e the set of events 
with l   e  and i and f the sets of initial and final states. for each state q 뫍 q   q   q  뫍 t.
모a trajectory is a path in the automaton joining an initial state to a final state. the set of trajectories of an automaton a is denoted traj a . in the following  we consider trim automata. the trim operation transforms an automaton by removing the states that do not belong to any trajectory.
example: let us consider the first trim automaton in figure 1. the initial states are represented by an arrow with no origin state  and the final states by a double circle. then 
 is a trajectory.
1
figure 1: two automata and their synchronisation
모the synchronisation operation on two automata a1 and a1 builds the trim automaton where all the trajectories of both automata which cannot be synchronised according to the synchronisation events  i.e e1 뫌 e1  are removed. formally  given two automata a1 =  q1 e1 t1 i1 f1  and a1 =  q1 e1 t1 i1 f1   the synchronisation of a1 and a1  denoted a1   a1  is the trim automaton a = trim with such that:

l = l1 뫋 l1}. when e1 뫌 e1 =    no synchronising events   the synchronisation results in the concurrent behavior of a1 and a1  often called the shuffle of a1 and a1. the number of states of the shuffle is the product of the number of states of a1 and a1 and no trajectory is removed. example: figure 1 gives an example of synchronisation. the synchronising events are the ci events.
모the restriction operation of an automaton removes from i all the initial states which are not in the specified set of states. due to the trim operation  all the states and transitions which are no longeraccessible are removedfrom q. formally  given an automatona =  q e t i f   the restriction of a by the
  is the automaton trim with
	=  	 .
1 diagnosis
let us recall now the definitions used in the domain of discrete-event systems diagnosis where the model of the system is represented by an automaton. t1 corresponds to the starting time and tn to the ending time of diagnosis. more details can be found for instance in  pencole뫣 and cordier  1 .
definition 1  model .
the model of the system  denoted mod  is an automaton.
모the model of the system describes its behaviour and the trajectories of mod represent the evolutions of the system. the set of initial states imod is the set of possible states at t1. we suppose as usual that fmod = qmod  all the states of the system may be final . the set of observable events is denoted.
모let us turn to observations which can be uncertain and are represented by an automaton  where the transition labels are observable events of.
definition 1  observation automaton . the observation automaton  denoted obs  is an automaton describing the observations possibly emitted by the system during the period  t1 tn .
모the diagnosis of a discrete-event system can be seen as the computation of all the trajectories of the model that are consistent with the observations sent by the system during the period  t1 tn . the automaton defined as the synchronisation of the model and the observations represents all these trajectories.
definition 1  diagnosis .
the diagnosis  denoted 붟  is a trim automaton such that
붟 = mod   obs.
1 independence properties
in this section  we present two independence properties that enable a decentralised  compact yet sufficient  representation of the diagnosis presented in the next section.
모let us first define the state-independence property which concerns the decomposition of an automaton a into two automata a1 and a1.
definition 1  decomposition of a .
two automata a1 and a1 are said to be a decomposition of an automaton a iff a =  a1   a1  i  where i are the initial states of a.
let. note that we do not require that a =
a  but that a is a super-automaton  i.e an automaton that contains all the trajectories of a and possibly more . the reason is that  when decomposinga into a1 and a1  the links existing between the initial states of a1 and a1 can be lost.
we thus have q	q	  andwhere 
.
모the state-independence property is a property of a decomposition a1 and a1 which ensures that.
definition 1  state-independence decomposition wrt a . two automata a1 and a1 are said to be a state-independent decomposition wrt a iff a = a1   a1.
property 1: if a1 and a1 have both a unique initial state  and if they are a decomposition of a  then a1 and a1 are a state-independent decomposition wrt a.
모let us turn now to the transition-independence property which states that two  or more  automata do not have any transition labeled with common synchronisation events.
definition 1  transition-independence .
a1 =  q1 e1 t1 i1 f1  and a1 =  q1 e1 t1 i1 f1  are transition-independent ti  iff every label l on a transition of t1 or t1 is such that l 뫌  e1 뫌 e1  =  .
모two transition-independent automata are concurrent automata and their synchronisation is equivalent to a shuffle operation  see section 1 . moreover  we have : property 1: let a1 and a1 be two transition-independent automata and state-independent automata wrt a. the states  resp. initial states  final states  of a correspond exactly to the cartesian product of the states  resp. initial states  final states  of a1 and a1.
1 improving diagnosis representation in a decentralised approach
in this section  we first highlight the role of stateindependence property when computing diagnoses in a decentralised way. we propose then an efficient diagnosis representation based on transition-independence property.
1 the decentralised approach and the role of state-independence
the global model of a real-world system is too large to be explicitly built. to answer this problem  decentralised / distributed approaches have been proposed  lamperti and zanella  1; pencole뫣 and cordier  1; benveniste et al.  1; jiroveanu and boe몮l  1 . in this article  we consider the decentralised approach of  pencole뫣 and cordier  1 .
모the idea  see figure 1  is to describe the system behaviour in a decomposed way by the set of its subsystems models. the so-called decentralised model is thus dmod = {mod1 ... modn} where modi is the behavioural model of the subsystem  possibly a component  si. the decentralised model is designed as a decomposition of the global model mod. it is generally assumed that the global model has a uniqueinitial state and that the subsystems models also have a unique initial state. they are thus a state-independent decomposition wrt mod and the global model can thus be retrieved  if needed  by mod = mod1   ...   modn.
모the observations obs can be decentralised as follows: dobs = {obs1 ... obsn} such that obsi contains the observations from the subsystem si and such that: obs = obs1   ...   obsn.
모given the local subsystem model modi and the local subsystem observations obsi  it is possible to compute the local diagnosis 붟si = modi   obsi. these diagnoses represent the local subsystem behaviours that are consistent with the local observations. it was shown in  pencole뫣 and cordier  1  that the set of local diagnoses is a decomposition of 붟. as they all have a unique initial state  it is also a state-independent decomposition of 붟. it is then possible to directly compute the global diagnosis of the system by synchronizing the subsystem diagnoses as follows: 붟 = 붟s1   ...   붟sn. this synchronisation operation of subsystem diagnoses is often also called a merging operation. local diagnosis
mod
figure 1: principle of the decentralised diagnosis approach
모it is clear that  rather than directly merging all the subsystems diagnoses together  it is possible to compute the global diagnosis by successive synchronisation operations. let s1 and s1 be two disjoint subsystems  possibly being components  and let be the subsystem that contains exactly s1 and s1. the subsystem diagnosis 붟s1 can be computed as 붟s1 = 붟s1   붟s1. the diagnosis of the system is equivalently obtained by replacing 붟s1   붟s1 by 붟s1. we have 붟 = 붟s1   붟s1   ...   붟sn.
모algorithm 1 computes the system diagnosis by starting from the component local diagnoses and merging them until exitloopcondition is satisfied. in this case  exitloopcondition checks that all pairs of diagnoses have been merged.

algorithm 1 computing diagnoses in a decentralised way
	1	n
while   exitloopcondition do choose 붟s1 붟s1 뫍 d붟

end while return: d붟

1 an efficient diagnosis representation based on transition-independence
the diagnosis 붟 built with a decentralised approach is equal to the synchronisation mod   obs. it can be expected obs sufficiently contraints the behaviours of the system to significantly reduce the size of the 붟 compared to mod. however 붟 can still be large  especially because merging concurrent diagnoses corresponds to computing the shuffle of these diagnoses. it is why we propose to avoid these expensive shuffles by representing the system diagnosis as a set of transitionindependent subsystem diagnoses.
definition 1  decentralised diagnosis .
a decentralised diagnosis d붟 is a set of subsystem diagnoses
{붟s1 ... 붟sk} such that 붟si is the diagnosis of the subsystem si  {s1 ... sk} is a partition of the system 붞  and
 and 붟sj are transition-
independent.
as	seen	before 	a	decentralised	diagnosis	d붟	=
{붟s1 ... 붟sk} is a state-independent decomposition of the global diagnosis. we get an economical representation of the global diagnosis which can be computed  if needed  by synchronising all the subsystem diagnoses  by 붟 = 붟s1  ... 붟sk  which  due to property 1  corresponds to a shuffle operation. its final states can be obtained by a simple cartesian product on the final states of all 붟si  see property 1 .
모algorithm 1 can be used to compute the decentralised diagnosis from the local  component  diagnoses by changing exitloopcondition into  붟s1 붟s1 뫍 d붟  붟s1 and 붟s1 are transition-independent. until all pairs of diagnoses are transition-independent  the algorithm chooses two transitiondependent diagnoses and merges them.
모an important point to remark is the decisive role of the state-independence property of the decomposition which  combined to the transition-independence property  allows us to get an efficient representation of the system diagnosis. the state-independence property comes directly from the unique initial state property of the system and subsystems models.
1 improving diagnosis representation in a decentralised and incremental approach
in this section  we propose to build the diagnosis on successive temporal windows  to benefit from the short duration independences. we then show that the state-independence is generally no longer satisfied  and present in the last part the abstraction operation that enables us to deal with statedependent subsystems.
1 incremental diagnosis
in the previous section  we assumed that the diagnosis was computed on a unique period. this means that the observation automaton represents the observations emitted during  t1 tn . the problem of this approach is that long periods transition-independent behaviours are infrequent  because each component eventually interacts with most of its neighbours. thus  all the local diagnoses will eventually be merged in a huge global diagnosis. for this reason  it can be interesting to divide the diagnosis period into temporal windows as presented in  pencole뫣 and cordier  1   to benefit from short duration independent behaviours.
모let us consider that the diagnosis 붟i 1 of  t1 ti 1  was built and that the set of final states of this diagnosis is
. given the observations obsi of the temporal window  ti 1 ti   it is possible to compute the diagnosis of this temporal window by: 붟i =  mod    obs where mod  is the system model mod where all the states are considered as initial states. the trajectories consistent with the observations for the period  t1 ti   i.e the trajectories of 붟i if this automaton were built  can be retrieved by the concatenation of the trajectories from 붟i 1 and the trajectories of 붟i. it can also be proved that the final states of 붟i are the final states of 붟i. it is thus possible to incrementally add the observations of  ti ti+1  and compute the diagnosis.
1 loss of the state-independence property
our goal is to use a decentralised computation based on a decentralised model and to representthe diagnosis of the temporal window wi =  ti 1 ti  by a set of transition-independent subsystem diagnoses similar to section 1. however  contrary to section 1  the unique initial state hypothesis can no longer be made and thus the state-independence decomposition property can no longer be considered as satisfied.
모let ii be the set of initial states on the system for the temporal window wi. given ii  the set of initial states of a subsystem s is called the projection of ii on s and denotedii 뫻 s.
let us remark that . algorithm 1 can be modified as presented in algorithm 1 to compute a set d붟i of transition-independent subsystems diagnoses.

algorithm 1 computing transition-independent diagnoses in case of non state-independence

input: local diagnoses {붟s1 ... 붟sn} + the set of initial
states ii
d붟 = {붟s1 ... 붟sn} while  s1 s1 : 붟s1 and 붟s1 are not transitionindependent. do

end while return: d붟

모let us now consider the transition-independent diagnoses of d붟i and more precisely their final states . the problem is that  due to the loss of the state-independenceproperty  fi is only a subset of. let us illustrate the problem on an example  figure 1 .

figure 1: example of loss of information in a naive decentralised representation of the incremental diagnosis
example figure 1 deals with the diagnosis of two components which can be either in a ok state or a faulty state. the figure presents a two-windows diagnosis  each in a box. during the first window  figure 1  left   one of the two components failed but it is not possible to determine which component did. the initial states of each component at the beginning of the second window are obtained by projecting the final states of the first window and they are o and f for one component and o and f for the other one. nothing happened during the second window. since the local diagnoses are transition-independent the algorithm proposes the two local diagnoses  top and bottom in figure 1  right  but it can be seen that the links between the initial states were lost during the projection. the decomposition of the global diagnosis is not state-independent. we have.
to get the exact final states f1  one solution would be to synchronise the local diagnoses in conjunction with the restriction operation on the set of final states of the first window as argument  which we want to avoid.
1 ti + abstract representation
to obtain the final states fi we propose  instead of merging the state-dependent diagnoses of d붟i  to merge their abstract representations  which is much more efficient. we thus propose to enrich the set of transition-independent diagnoses with the abstract representation of the state- and transitionindependent diagnoses.
the information required relies on the initial and final states only. thus  we define an abstraction that keeps only the information that there exists a trajectory between an initial state and a final state.
definition 1  abstraction .
let a =  q e t i f  be a trim automaton. the abstraction of a  denoted abst a   is the  trim  automaton
 where traj = q1  l뫸1 ...  l뫸n qn 뫍 traj.
the following two properties can be easily proved. property 1: let a1 and a1 be two transition-independent automata. then  abst a1    abst a1  = abst a1   a1 . property 1: let a1 and a1 be two transition-independent automata and let i be a set of states. then   abst a1    abst a1   i  = abst  a1   a1  i  .
모it is now possible to merge the abstract representations of the state-dependent  transition-independent diagnoses as presented in algorithm 1 until getting a set of state- and transition independent diagnoses. this result is called the abstract decentralised diagnosis  and denoted ad붟i. given the properties 1 and 1  we have the following result:
proposition 1.
the set of final states fi is the set of final states of ad붟i 
i.e 붫붟뫍ad붟if붟.
let us define an extended decentralised diagnosis as follows :
definition 1  extended decentralised diagnosis .
an extended decentralised diagnosis on wi is a pair  d붟i ad붟i  such that
  d붟i is the decentralised diagnosis of the system on wi 
  ad붟i is the abstract decentralised diagnosis on wi.
모the transition-independent diagnoses d붟i provide the set of trajectories during the temporal window wi and the abstract representation of state- and transition-independent diagnoses ad붟i provides the set of final states of the temporal window wi. it is thus a safe representation of the diagnosis on wi. it can be used as shown in 1 to compute the diagnosis on the whole period in an incremental way.
1 experiments
we present the experimental results on a simplified case inspired by a real application on telecommunication networks.

algorithm 1 computation of the abstract decentralised diagnosis ad붟i

input: local transition-independent diagnoses d붟i = {붟is1 ... 붟isk} + the set ii of initial states ad붟i = {a붟isj |  붟isj 뫍 d붟i : a붟isj = abst 붟sij } while  a붟is1 a붟is1 뫍 ad붟i such that a붟is1 and are not state-independent wrt  do

end while return: ad붟

1 system
the system to diagnose is a network of 1 interconnected components as presented in figure 1.

figure 1: topology of the network
모each component has the same behaviour: when a fault occurs  it reboots  sends a irebooti observation and forces its neighbours to reboot by sending them a reboot! message. a component can also be asked to reboot by one of its neighbours. in this case  it enters into a waiting state w before rebooting and sends the irebooti observation. in this state  it can be asked to reboot by another component  and sends then the irebooti observation . when the reboot is finished  the component sends the observation iambacki and reenters the state o.
모the model is presented in figure 1. the reboot! message indicates that reboot is sent to all the neighbours  and the reboot  message indicates that a neighbour has sent the reboot message to the component. so  for example  on component1  there are three transitions fromstate o to state w corresponding to a reboot  message received respectively from one of its three neighbours 1  1 and 1. they are respectively labeled by {reboot1뫸1  ireboot1}  {reboot1뫸1  ireboot1} and {reboot1뫸1 ireboot1}.

	reboot   ireboot	reboot 
figure 1: model of a component
let us remark that the decentralised modeling contains exactly 1 뫄 1 states  while the global model would contain nearly  states.
1 results
the algorithms were programmedin java  and run on a linux machine with a 1 ghz intel processor. we deal with 1 observations. the experiments results are given table 1.
모the first experimentwas made with a unique temporalwindow as presented in section 1. the computation was more than 1 mn and produced 1 automata  one of which contains 1 states and 1 transitions. it can be noted that taking into account the transition-independence property of diagnoses in the decentralised representation is interesting as four independent subsystems are identified. it saves us from computing the shuffle for these subsystem diagnoses  which is certainly very beneficial. however  due to the length of the window  one of the automata is still very large. using the method described in section 1  the observations are now sliced into 1 temporal windows. the diagnosis was computed in less that 1 second  producing1 small automata. the number of states  1  is 1% of the number of states used in the previous automaton  and the number of transitions  1  is less than 1% of the transitions of the previous automaton. it confirms that slicing observations is beneficial in that it increases the number of independent subsystems  and thus diagnoses.
no slicing1st slicing1nd s.1rd s.nb states111nb trans1111nb auto11time1mn 1s  1s1 s1mn 1stable 1: results of the experimentations
모let us stress now the importance of the slicing on the good results of the method. in a third experiment  the first temporal window of the previous experiment was sliced into two. the number of states of the diagnosis increased by about 1% and the number of transitions by 1%. moreover  the computation time increased to 1 seconds. the reason is that you sometimes need to have enough observations on a subsystem to conclude that this subsystem did not communicate with another subsystem. in a fourth experiment  two temporal windows of the first slicing are merged into a unique window. the corresponding computation time is then about 1 minutes and the number of states and transitions exploded. it confirms that the slicing operation is a critical operation and that deciding what is the best slicing is an interesting area for further works.
1 conclusion
in this paper  we consider the diagnosis of discrete-event systems modeled by automata. to avoid the state-explosion problem that appears when dealing with large systems  we use a decentralised computation of the diagnosis. we show that the global diagnosis can be safely and economically represented by the set of diagnoses of its transition-independent subsystems. an important point is that this decentralised representation relies on the state-independency property.
모when the period of observation is important  independent subsystems occur infrequently  since each component eventually interacts with most of its neighbours. a solution is to slice the diagnosis period into temporal windows  in order to get  on these windows  transition-independent subsystems. the problem is that the state-independency property does not hold anymore. it is then impossible to get the exact final states  at least in an economical way. on the one hand  such a set of diagnoses for transition- but not stateindependent subsystems gives us only a superset of the global diagnosis  which is not satisfying. on the other hand  computing the set of transition-independentand state-independent subsystem diagnoses would be too expensive.
모we propose in this paper to keep the decentralised diagnosis representation  a set of transition-independent subsystem diagnoses   and to add an abstract representation of both state- and transition-independent diagnoses  which produces the final states in an economic and efficient way. we show that we get a safe and efficient representation of the global diagnosis.
모this work opens at least two interesting prospects. as can be seen in algorithm 1  it is necessary to have an efficient way to check whether two abstract diagnoses are or are not state-independent and we are currently working on this point. another concern is about the slicing. as shown in section 1  a bad slicing can lead to a very little benefit. an interesting prospect would be to automatically find the best slicing to obtain a diagnosis represented as efficiently as possible.
acknowledgements
a. grastien is currently supported by national ict australia  nicta  in the framework of the supercom project. nicta is funded through the australian government's backing australia's ability initiative  in part through the australian national research council.
