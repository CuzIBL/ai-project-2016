
many reasoning task and combinatorial problems exhibit symmetries. exploiting such symmetries has been proved to be very important in reducing search efforts. breaking symmetries using additional constraints is currently one of the most used approaches. extending such symmetry breaking techniques to quantified boolean formulae  qbf  is a very challenging task. in this paper  an approach to break symmetries in quantified boolean formulae is proposed. it makes an original use of universally quantified auxiliary variables to generate new symmetry breaking predicates and a new ordering of the qbf prefix is then computed leading to a new equivalent qbf formula with respect to validity. experimental evaluation of the state-of-the-art qbf solver semprop shows significant improvements  up to several orders of magnitude  on many qbfs instances.
1	introduction
solving quantified boolean formulae  qbf  has become an attractive and important research area over the last years. such increasing interest might be related to different factors  including the fact that many important artificial intelligence  ai  problems  planning  non monotonic reasoning  formal verification  etc.  can be reduced to qbf which is considered as the canonical problem of the pspace complexity class. another important reason comes from the recent impressive progress achieved in the practical resolution of the satisfiability problem. many solvers for qbfs have been proposed recently  e.g.  giunchiglia et al.  1b; zhang and malik  1; letz  1; benedetti  1    most of them are obtained by extending satisfiability results. this is not surprising  since qbfs is a natural extension of the satisfiability problem  deciding whether a boolean formula in conjunctive normal form is satisfiable or not   where the variables are universally or existentially quantified.
﹛some classes of qbfs encoding real-world application and/or ai problems contain many symmetries. exploiting such structures might lead to dramatically reducing the search space. symmetries are widely investigated and considered as an important task to deal with the intractability of many combinatorial problems such as constraint satisfaction problems  csp  and satisfiability of boolean formula  sat .
﹛a previouswork on symmetry breakingpredicates for qbf was proposed by  audemard et al.  1 . the authors use an hybrid qbf-sat approach where the set of generated breaking predicates is separated from the qbf formula. consequently  this approach is solver dependent. indeed  to solve the hybrid qbf-sat formula  dpll-based qbf solvers need to be adapted  whereas  other kind of solvers  e.g. skizzo  can not be used in this context.
﹛in this paper  we propose a preprocessing approach which is solver independent. taking as input a qbf with symmetries  we generate a new qbf formula without symmetries equivalent to the original one wrt. validity. to break such symmetries we extend the sat approach proposed by crawford  crawford  1; aloul et al.  1 .
﹛the paper is organized as follows. after some preliminary definitions on quantified boolean formulae  symmetry framework in qbfs is presented. then a symmetry breaking approach for qbf is described. an experimental validation of our approach is given  showing significant improvements over a wide range of qbf instances. finally  promising paths for future research are discussed in the conclusion.
1	technical background
1	quantified boolean formulae
let p be a finite set of propositional variables. then  lp is the language of quantified boolean formulae built over p using ordinary boolean formulae  including propositional constants  plus the additional quantification    and    over propositional variables.
in this paper  we consider quantified boolean formula 朴 in the prenex clausal form 朴 = qkxk ...  q1朵  in short qx朵  qx is called a prefix and 朵 a matrix  where qi ﹋ {   }  xk ... x1 are disjoint sets of variables and 朵 a boolean formula in conjunctive normal form. consecutive variables with the same quantifier are grouped. we define 1 ... k	and
v aru 朴  = {x|x ﹋ v ar 朴   x is universal}. a literal is the occurrence of propositional variable in either positive  l  or negative form   the set of complete literals of 朴  where lit xi  = {xi  xi|xi ﹋ xi}. the set of literals are encoded using integer numbers i.e. the positive  resp. negative  literal l  resp.  l  is associated to a positive number 汐  resp.  汐 . then  we define |l| as the absolute value of l.
﹛for a given variable x ﹋ v ar 朴  st. x ﹋ xk  we define rank x  = k. variables appearing in the same quantifier group are equally ranked.
1	symmetries in quantified boolean formulae
let 朴 = q1 ... qmxm朵 be a qbf and 考 a permutation over the literals of 朴 i.e. .
the permutation 考 on 朴 is then defined as follows: 考 朴  = q1考 x1  ... qm考 xm 考 朵 . for example  if 朵 is in clausal form then 考 朵  = {考 c |c ﹋ 朵} and 考 c  =
{考 l |l ﹋ c}.
definition 1 let 朴 = q1 ... qmxm朵 be a quantified boolean formula and 考 a permutation over the literals of 朴. 考 is a symmetry of 朴 iff
1.  x ﹋ lit 朴  考  x  =  考 x 
1.  and  i ﹋ {1 ... m} 考 xi  =
﹛let us note that each symmetry 考 of a qbf 朴 is also a symmetry of the boolean formula 朵. the converse is not true. so the set of symmetries of 朴 is a subset of the set of symmetries of 朵.
﹛a symmetry 考 can be seen as a list of cycles  c1 ...cn  where each cycle ci is a list of literals  li1 ...lini  st.  1 ≒ k   ni 考i lik  = lik+1 and 考i lini  = li1. we define |考| = where |ci| is the number of literals in ci.
﹛it is well known that breaking all symmetries might lead in the general case to an exponential number of clauses  crawford et al.  1 . in this paper  for efficiency and clarity reasons  we only consider symmetries with binary cycles. our approach can be extended to symmetries with cycles of arbitrary size.
﹛detecting symmetries of a boolean formula is equivalent to the graph isomorphism problem  crawford  1; crawford et al.  1   i.e. problem of finding a one to one mapping between two graphs g and h . this problem is not yet proved to be np-complete  and no polynomial algorithm is known. in our context  we deal with graph automorphism problem  i.e. finding a one to one mapping between g and g  which is a particular case of graph isomorphism. many programs have been proposed to compute graph automorphism. let us mention nauty  mckay  1   one of the most efficient in practice.
﹛recently  aloul et al.  aloul et al.  1  proposed an interesting technique that transforms cnf formula 朵 into a graph g朵 where vertices are labeled with colors. such colored vertices are considered when searching for automorphism on the graph  i.e. vertices with different colors can not be mapped with each others .
﹛in  audemard et al.  1   a simple extension to qbfs formulae is given. such extension is simply obtained by introducing a different color for each set of vertices whose literals belong to the same quantifier group. in this way  literals from different quantifier groups can not be mapped with each others  see the second condition of the definition 1 . then  to detect such symmetries  nauty is applied on the graph representation of the qbf.
1	breaking symmetries in qbfs
symmetry breaking has been extensively investigated in the context of constraint satisfaction and satisfiability problems. the different approaches proposed to break symmetries can be conveniently classified as dynamic and static schemes. dynamic breaking generally search and break symmetries using breaking predicates or not  benhamou and sais  1; gent and smith  1 . static breakingschemes refer to techniques that detect and break symmetries in a preprocessing step. for sat  symmetries are generally broken by generating additional constraints  called symmetry breaking predicates  sbp   crawford  1; aloul et al.  1 . such sbp eliminates all models from each equivalence class of symmetric models  except one. however  in the general case  the set of symmetry predicates might be of exponential size. in  aloul et al.  1   aloul et al extend the approach of crawford  crawford  1  by using group theory and the concept of non-redundantgenerators  leading to a considerable reduction in the sbp size.
﹛we briefly recall the symmetry breaking technique introduced by crawford in  crawford et al.  1 . let 朵 be a cnf formula and 考 = { x1 y1 ... xn yn } a symmetry of 朵. the sbp associated to 考 is defined as follows: x1 ≒ y1  x1 = y1  ↙ x1 ≒ y1
...
 x1 = y1  ...  xn 1 = yn 1  ↙ xn ≒ yn
﹛the sbp defined above expresses that  when for all i ﹋ {1...k   1} xi and yi are equivalent  get the same truth value  and xk is true  then yk must be assigned to true. this reasoning can be extended to qbf provided that the symmetry follows the prefix ordering.
1	motivation
in the following example  we show the main difficulty behind the extension of sat symmetry breaking predicates  sbp  to qbfs.
example 1 let 朴 =  x1 x1 朵1 be a qbf where 朵 =  x1 ˍ x1 ＿ y1 ˍ y1 ＿  x1 ˍ y1 ˍx1 ˍy1 . the permutation 考1 = { x1 y1  x1 y1 } is a symmetry of 朴. breaking the symmetry 考1 using the traditional approach  induces the following sbp :   x1 ˍ y1  ＿   x1 ˍ  x1 ˍ y1  ＿  y1 ˍ
 x1 ˍy1 . as the clause   x1 ˍy1  is universally quantified  the new obtained qbf by adding the sbp to the original qbf leads to an invalid qbf formula.
to overcome this main drawback  in addition to the classical sbp  new breaking predicates  called qsbp  are generated for symmetries containing at least one universal cycle  see definition 1 . in such a case  some variables become existentially quantified. these variables will be associated to new additional universally quantified variables. there relationships are expressed in the generated qsbp. to safely add such qsbp to the original qbf formula  a new prefix ordering is computed.
﹛after a formal presentation of our approach for a single symmetry  a generalization to arbitrary set of symmetries is then described.
1	breaking a single symmetry
now  we formally introduce our approach for breaking symmetries in qbf.
definition 1 let 朴 = q1 ...qixi ...qmxm 朵 be a qbf and 考 a symmetry of 朴. we define 考 ∥ xi as the subsequence of the symmetry 考 restricted to the cycles involving variables from xi. then  the symmetry 考 can be rewriten following the prefix ordering as {考1 ...考i ...考m} such that 考i = 考 ∥ xi. when 考 respect the prefix ordering  it is called p-ordered.
in the sequel  symmetries are considered to be p-ordered.
example 1 let 朴 =  x1 x1 x1   x1 ˍ y1 ˍ x1  ＿  x ˍ x ˍy   x ˍx ˍx  ＿  x ˍ y  ＿ x ˍx   x ˍ y1  ＿   x1 ˍ  y1 ˍ  x1 ˍ  y1  朴
{ x1 y1  x1 y1  x1 y1 }. reordering 考 with respect to the prefix leads to 考 = {考1 考1 考1} st. 考1 = 考 ∥ x1 =  x1 y1   考1 = 考 ∥ x1 =  x1 y1   考1 = 考 ∥ x1 =  x1 y1 .
definition 1 let 朴 be a qbf  考 a symmetry of 朴 and c =  x y  is a cycle of 考. we define x  resp. y  as an in-literal  resp. out-literal . a cycle c is called universal if x and y are universally quantified. a symmetry 考 is called universal if it contains at least one universal cycle  otherwise it is called existential.
for existential symmetries of a qbf  classical sbp  crawford et al.  1  can be translated linearly to a cnf formula thanks to new additional variables. the obtained set of clauses can be added to the qbf matrix while preserving its validity. the main problem arises when breaking universal symmetries  see example 1 . indeed  to safely break universal symmetries while keeping the classical sbp  we first reorder the symmetry variables belonging to the same universal quantifier group. this new ordering allows us to determine literals to be likely implied from the sbp. secondly  as implied universal literals lead to the invalidity of the qbf  an original approach is then proposed to deal with such literals. in the following  the problem behind universal implied literals is illustrated and our approach is then motivated. let 考 = { x1 y1  ...  xk yk  ...} be a universal symmetry of a given qbf 朴 where  xk yk  is a universal cycle. as mentioned above  考 is ordered according to the prefix of 朴. suppose xi and yi for 1 ≒ i ≒ k   1 are assigned the same truth value  if xk is assigned to true then the universal literal yk is implied from the sbp. to avoid such a case  the universal quantifier of yk is substituted with an existential quantifier. however  when xi and yi are assigned to different truth values or xk is assigned to false  yk must remain universally quantified. to manage these two cases  a new universal variable is then introduced. this variable plays the same role as yk in the second case whereas in the first case it becomes useless. the relation between the two variables is expressed using new predicates  called qsbp 考 yk   .
definition 1 let 考 = {c1 ...ck ...cn} st. ck =  xk yk   1 ≒ k ≒ n be a universal symmetry. we define qsbp 考  =
﹍{qsbp 考 yk   1 ≒ k ≒ n st. yk is universal} as the qsbp associated to 考. qsbp 考  is built using the two following steps:
1. adding auxiliary variables : for each universal cycleck =  xk yk  ﹋ 考  we associate a new universal variable to the out-literal yk and the universal quantifier of yk is substituted with an existential quantifier.
1. generating new predicates :
  if  x1 y1 	then
	    1   =	1 ↙   1   1 
   k   1  if  xk yk  is a universal cycle then qsbp 考 yk   is made of the following constraints
-  when
- 
example 1 let us consider the qbf 朴 given in example 1. the symmetry 考 of 朴 contains one universal cycle  x1 y1 . using definition 1  a new variable is associated to the variable y1 which becomes existentially quantified. then qsbp 考 = qsbp 
﹛as described above  to generate the qsbp new variables are introduced. in the sequel  we describe how such variables are integrated in the qbf prefix.
definition 1 let 朴 = q1 ...qmxm 朵 be a qbf  and 考 = {考1 ...考j ...考m} be a universal symmetry. let j st. qj =   and 考j = 考 ∥ xj = { x1 y1 ... xn yn }  the set of new variables associated
 to {y1 ...yn} respectively. we define the new ordering of  as follows : 
rank yk  st. 1 ≒ k ≒ n.
﹛we define g考j v a  as the precedence graph associated to  and a =
.
   to rewrite the quantifier group qjxj of the qbf formula  see definition 1   a new ordering is derived by applying topological sort algorithm on the precedence graph. let us note that such a graph is acyclic. in figure 1  the graph representation of 考j = 考 ∥ xj is illustrated. the ordering x1 ...xn is then considered.

	 y1 y1	...	yn yn
			
	x1	x1	xn
figure 1: graph representation of 考j
definition 1 let 朴 = q1 ...qmxm 朵 be a qbf  考 = {考1 ...考m} a universal symmetry and for j ﹋ {1...m} 考j = 考 ∥ xj = { x1 y1  ... xn yn }. every quantifier group qjxj of 朴 is rewritten :

 see figure 1  st.is a new variable.
  otherwise qpjxjp = qjxj
朴 is then rewritten as
朴s = qp1p ...qpi xip ...qpmxmp 朵 ＿ sbp ＿ qsbp
remark 1 in definition 1  a new variable 汐 is introduced to constrain the set of variables {x1 ...xn} to be assigned before.
property 1 let 朴 be a qbf and 考 a symmetry of 朴  then 朴 is valid iff 朴s is valid.
to sketch the proof of property 1  we consider the qbf given in the example 1. applying our approach on 朴  we obtain the qbf :
1
when x1 is assigned to the value true  from the clause   x1 ˍ y1  we deduce that y1 is true. if x1 is assigned the value false  the original universal variable y1 is deduced by substitution   and y1 are equivalent  thanks to the added constraint. as  we only need to substitute all occurrences of.
1	breaking all symmetries
generating qsbp
when considering several symmetries  we can not eliminate them independently by processing each single symmetry using the single symmetry breaking approach described in section 1. one needs to consider the interactions between the different symmetries. indeed  considering an universal outliteral yk and its associated new variable express the conditions under which such literals are equivalent. as only one variable  is introduced for each universal out-literal yk  when yk appears in several symmetries  the different conditions leading to such equivalence need to be combined.
definition 1 let	朴	be	a	qbf 	and	考	= two
symmetries of 朴 with y an universal out-literal. the qsbp's associated to y with respect to 考 and 考 can be written in the following form  see definition 1  :

we define a binary correlation operator 灰 between 考 and 考 as follows :

definition 1 let s = {考1 ...考n} be a set of symmetries of a given qbf and y is universal literal. we define 
.
definition 1 let s = {考1 ...考n} be the set of symmetries of a given qbf 朴 = qx 朵. the new qbf matrix 朵s is defined as follows:

prefix ordering
let us now show how a new qbf prefix is built when considering a set of symmetries  for a single symmetry see definition 1 . for a set of symmetries {考1 ... 考n}  we consider for each universal quantifier group qkxk  all the projections 考i ∥ xk for each symmetry 考i. the new quantifier group qpkxkp is obtained from the precedence graph representation of all these projections. let us recall that each symmetry 考i is considered p-ordered. additionally  to avoid cycles from the graph representation of {考i ∥ xk|1 ≒ i ≒ n}  each projection 考i ∥ xk is considered lexicographically ordered.
definition 1 let 考 = { x1 y1  ...  xn yn } be a set of cycles. 考 is called lexicographically ordered  lex-ordered in short   iff xi   1  xi ≒ |yi| 1 ≒ i ≒ n and xi   xi+1 ≒ i   n
example 1 let	朴	=	q1 ...qmxm 朵	be	a
		two	symmetries	of 朴 st.	考
1	=	 x1 x1   x1  x1  x1 x1   	考	1	=
 { x1 x1  x1  x1 } and q1 =  . with respect to lexicographical order  考 ∥ x1 = { x1 x1  x1 x1  x1 x1 } and  figure 1 shows the precedence graph representation of both 考 ∥ x1 and . applying topological sort algorithm  the quantifier qpxp is then rewritten as

x1
		 	
	 x x	x1 x
	x1 	
		
figure 1: precedence graph of 考 ∥ x1 and
dealing with universal cycles of the form  y x  and
 z  x 
to preserve the equivalence  wrt. validity  between the original qbf and the new generated one  let us now address the last problem arising from the interactions between the different symmetries. as illustrated in the following example  the problem arises for symmetries where a universally quantified out-literal x appears both positively  x  and negatively   x .
example 1 let 朴 = q1 ...qixi ...qmxm朵 be a qbf 
朴 st. 考 ∥ xi = { x  y  } and
	1 	1
﹛using our approach the quantifier group qixi is rewritten as. the generated sbp for 考 contains the clause c =   x1 ˍ x1 . for 考 its corresponding sbp contains the clause . as the universal variable x1 is substituted with an existential one  applying the q-resolution rule  kleine-bu“ning et al.   leads to a universally quantified resolvent r =   x1 ˍ  x1 . consequently  the new obtained qbf is invalid. finding a new ordering which avoid this problem is a very challenging task. in example 1  such a problem can be avoided by considering the new ordering x1   y1   x1 instead of the used lex-ordering. another possible solution  actually under investigation is to apply composition between symmetries. more precisely  if we consider
. if in addition to 考
and  then the previous resolvent generated using q-resolution is now not universally quantified. indeed  as x1 is an out-literal  its universal quantifier is substituted with an existential one. then the resolvent r contains a literal  x1 whose associated variable is existentially quantified. finally  the quantifier group qixi can be rewritten as
.
﹛the above discussion gives us an idea on how to solve in the general case  the problem arising from symmetries with universal cycles of the form  y x  and  z  x . in this paper  such a problem is simply avoided using the following restriction :
definition 1 let 朴 = q1 ...qmxm朵 be a qbf  y ﹋ v aru 朴  and s the set of symmetries of 朴. we define s y  ∣ y = {考 ∣ y|考 ﹋ s y }. for 考 = { x1 y1  ...  xk yk ...  xn yn }  we define 考∣ yk = { x1 y1  ...  xk 1 yk 1 }. the restriction of s wrt. y is defined as rt s y  = {考|考 ﹋ s 考 y  =   考  y  =  } ﹍ s y  ﹍ s  y ∣{ y}. for the set of variables v aru 朴  = {v1 ... v|v aru 朴 |}  we define rt s v aru 朴   = rt ...rt s v1  v1 ...v|v aru 朴 | ... 
note that if s y  =   or s  y  =    then rt s y  = s. naturally  for a given set of symmetries s  the new qbf formula is generated using rt s v aru 朴  . in this way the obtained formula is equivalent wrt. validity to the original one.
complexity
let 考 be a symmetry of a qbf and cnf qsbp 考   the cnf representation of qsbp 考 . the worst case spacial complexity of cnf qsbp 考   is in o |考|1 . considering 考 = {考1 ... 考n} with 考i =  xi yi   1 ≒ i ≒ n  the worst case is reached when all cycles of 考 are universal. in this
≒ ≒
考	考	is equal to 1 i   1  +
1 = 1i  see definition 1 . then  which is equal to n n + 1 . more interestingly  using the same new variables introduced for cnf sbp   the size of qsbp 考  becomes linear. unfortunately  because of the correlations between different symmetries  the qsbp associated to a set of symmetries is exponential in the worst case. in practice  on all the considered qbf instances  the number of applied correlations  definition 1  does not exceed 1. consequently  the qsbp is most often of reasonable size.
1	experiments
the experimental results reported in this section are obtained on a xeon 1 ghz  1 gb ram  and performed on a large panel of symmetric instances  1  available from  giunchiglia et al.  1a . this set of qbf instances contains different families like toilet  k*  fpga  qshifter. as a comparison  we run the state-of-the-art dpll-like solver semprop  letz  1  on qbf instances with and without breaking symmetries. the time limit is fixed to 1 seconds. results are reported in seconds. the symmetry computation time  including detection and qsbp generation  is not reported  less than one second in most cases .

figure 1: semprop comparison
﹛the scatter plot  in log scale  given in figure 1 illustrate the comprative results of semprop  letz  1  on each qbf instance 朴 and 朴s respectively. the x-axis  resp. y-axis  corresponds to the cpu time tx  resp. ty  obtained by semprop on 朴  resp. 朴s . each dot with  tx ty  coordinates  corresponds to a qbf instance. dots above  resp. below  the diagonal indicate instances where the original formula 朴 is solved faster i.e. tx   ty  resp. slower i.e. tx   ty  than the qbf formula 朴s.
﹛figure 1 clearly shows the computational gain obtained using symmetry breaking predicates  about 1 instances are solved more efficiently . in some cases the gain is up to 1 orders of magnitude. of course  there exists some instances where breaking symmetries decreases the performances of semprop about 1 instances . on the remaining instances  the performance of the solver remains the same with or without breaking symmetries.
﹛table 1 provides more detailed results on the different qbf families. the second column  nb  represents the number of instances in each family. the third column  u  indicates if the instances contain universal symmetries  y   or not  n . for each family  s and tt represents the total number of solved instances and the total run-time needed for solving all the instances  1 seconds are added for each unsolved one  respectively.
﹛as we can see  table 1 gives us more comprehensive results with respect to each family. first  breaking symmetries significantly improves semprop performanceson many qbf families leading to more solved instances  1 instances . secondly  the existence of universal symmetries seems to be an important factor for reducing the search time. not surprisingly  we have also noticed that symmetries between literals occurring in the innermost quantifier group are useless. indeed  such symmetries does not lead to a great reduction in
朴朴sfamilynbusttsttfpga1y11blackbox1y11scholl1y11toiletc1y11kpath1y11qshifter1y11tipdiam1y11asp1y11toilet1y11term1y11strategic1n11kbranch1n11klin1n11kgrz1n11kpoly1n11toilet a1n11	total	1	1	1
table 1: results on different qbf families
the search tree  since their corresponding variables are assigned last i.e. the formula is considerably reduced by the previous assignments. finally  for qbf families containing only existential symmetries  breaking them do not improves the search time. on kbranch  k lin  toilet a families containing only existential symmetries  no improvement is observed. most of these instances correspond to the dots near the diagonal  see figure 1 .
1	conclusion
in this paper  a new approach to break symmetries in qbf formulae is proposed. using universally quantified auxiliary variables  new symmetry breaking predicates are generated and safely added to the qbf formula. experimental results show that breaking symmetries leads to significant improvements of the state-of-the-art qbf solver semprop on many classes of qbf instances. these experimental results suggest that for qbf instances containing universal symmetries  significant improvementsare obtained. as future works  we plan to investigate the problem arising from the presence of both positive and negative out-literal in the set of symmetries.
