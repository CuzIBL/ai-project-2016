
although many papers about belief update have been written  its precise scope still remains unclear. in this paper we aim at identifying this scope  and we show that belief update is a specific case of feedback-free action progression. this strong connection with the field of reasoning about action leads us to reconsider belief update and investigate new issues  especially reverse update  which is to regression what update is to progression.
1 introduction
in papers about belief change  one often reads sentences such as  belief revision consists in incorporating some new information about a static world  while belief update consists in incorporating into a belief base about an old state of the world a notification of some change in the world . however  the distinction is not so simple. to assess the scope of belief change operators  we need to be able to talk about the properties of the system  the world and the available actions  and the properties of the agent's state of knowledge  as in the taxonomy for reasoning about action and change from  sandewall  1 . however  unlike reasoning about action  belief change processes have never  as far as we know  been analyzed from the point of view of such a taxonomy. a first step is taken towards this direction  for belief revision only  in  friedman and halpern  1 .
¡¡elaborating a full taxonomy for belief change and assessing the scope of each approach is an ambitious project that definitely needs more than one short article. here we focus on a specific class of belief change operators  namely belief update. this paper aims at identifying its precise scope  i.e. the conditions  expressed by properties of the world and of the agent's beliefs  under which update is a suitable process for belief change. the main claim of the paper  discussed in section 1  is that updating a knowledge base by ¦Á corresponds to progressing it by a specific  purely physical   feedbackfree action  make ¦Á true  whose precise meaning depends on the chosen update operator. this in turn raises the following question  addressed in section 1: if update is progression  are there belief change operators corresponding to regression  section 1 briefly considers the question of whether updates can be compiled into propositional action theories. related issues are discussed in section 1.
1 background on belief update
let lv be the propositional language generated from a finite set of propositional variables v   the usual connectives and the boolean constants is the set of states  i.e.  propositional interpretations . for any   ¡Ê lv   mod    is the set of states satisfying  . for any x   s  for x  is the formula of lv  unique up to logical equivalence  such that mod for x   = x. if x = {s}  we write for s  instead of for {s} . we use   ¨’ ¦× as a shorthand for      ¦×.
¡¡a belief update operator  is a mapping from lv ¡Á lv to lv   i.e.  it maps two propositional formulas    the initial belief state  and ¦Á  the  input   to a propositional formula
 the resulting belief state . we recall here the katsunomendelzon  km for short  postulates for belief update  katsuno and mendelzon  1 .
u1 .
u1 if.
u1 if   and ¦Á are both satisfiable thenis satisfiable.
u1 if.
u1 .
u1 if.
u1 if   is complete then .
u1 .
¡¡although we have recalled all postulates for the sake of completeness  we should not accept them unconditionally. they have been discussed in several papers  including  herzig and rifi  1  in which it was argued that not all these postulates should be required  and that the  uncontroversial  ones  those deeply entrenched in the very notion of update and satisfied by most operators studied in the literature  are  u1    u1    u1   and  u1  to a lesser extent. we therefore call a basic update operator any operator  from lv ¡Álv to lv satisfying at least  u1    u1    u1  and  u1 . in addition   is said to be inertial if it also satisfies  u1   and  is a km update operator if it satisfies  u1 - u1. in the paper we refer to some specific update operators such as the pma  winslett  1  that we have no space to recall  see for instance  herzig and rifi  1  .
1 belief update as action progression
the difference between the scope of revision and that of update is often expressed as a static vs. dynamic opposition. however  nothing in the agm theory of belief revision implies that we should restrict its application to static worlds. as remarked in  friedman and halpern  1   what is essential in belief revision is not that the world is static  but that the language used to describe the world is static. thus  if an evolving world is represented using time-stamped propositional variables of the form vt  v true at time t   we can perfectly revise a belief set by some new information about the past or the present  and infer some new beliefs about the past  the present  or even the future.
example 1 on monday  alice is the head of the computer science lab while bob is the head of the math lab. on tuesday i learned that one of them resigned  but i don't know which one . on wednesday i learn that charles is now the head of the math lab  which implies that bob isn't.  it is implicit that heads of labs tend to keep their position for quite a long time.  what do i believe now 
¡¡example 1 contains a sequence of two  changes . both are detected by observations  and the whole example can be expressed as a revision process  with time-stamped variables . let us identify monday  tuesday and wednesday by the time stamps 1  1 and 1. on monday i believe a1 b1  as well as the persistency laws a1   a1 a1   a1 b1   b1 etc.  therefore i also believe a1 b1 etc.: i expect that alice and bob will remain the heads of their respective labs on tuesday and wednesday. the revision by  a1 ¡Å  b1  provided that the revision operator minimizes change  leads me to believe a1 b1 a1 ¨’ b1 a1 ¨’ b1 etc.: on tuesday  i still believe that alice and bob were heads of their labs on monday  and that now exactly one of them is. then the revision by  b1
 at time 1  makes me believe a1 b1  a1  b1  a1  b1: on
wednesday  i understand that bob was the one to resign on tuesday  and therefore that alice was still head of the cs lab on tuesday  and is still now1.
¡¡now  the fact that belief revision can deal with  some  evolving worlds suggests that claiming that belief update is the right belief change operation for dealing with evolving worlds is unsufficient and ambiguous. the literature on belief update abounds in ambiguous explanations such as  update consists in bringing the knowledge base up to date when the world is described by its changes 1. there is a first ambiguity in the expressions  describing the world by its changes 

ones  see  herzig and rifi  1  ; they characterize the specific class of updates based on a similarity-based minimization process  which is known to lead to several counterintuitive results . 1
¡¡¡¡note that this scenario is also a case for belief extrapolation  dupin de saint-cyr and lang  1   which is a particular form of time-stamped revision.
¡¡¡¡¡¡1this formulation appears in  katsuno and mendelzon  1   which may be one of the explanations for such a long-lasting ambiguity.
or  notification of a change   as  change  actually has to be understood as  possibility of change   we'll come back to this point . but the main problem is the status of the input formula ¦Á. to make things clear  here is an example.
example 1 my initial belief is that either alice or bob is in the office  but not both . both tend to stay in the office when they are in. now i see bob going out of the office. what do i believe now 
¡¡trying to use belief update to model this example is hopeless. for all common update operators seen in the literature  updating a¨’b by  b leads to  b  and not to  a¡Ä b. indeed  because of  u1   we have 
.
the only way to have  a¡Ä b as the result would be to have
a ¡Ä  b b a ¡Ä  b  which can hold only if there is a causal relationship between a and b  such as b becoming false entails a becoming false - which is not the case here.
¡¡example 1 definitely deals with an evolving world and contains a  notification of change   and still it cannot be formulated as a belief update process. on the other hand  like example 1  it can be perfectly expressed as is a time-stamped belief revision process1.
¡¡the key point is  u1  which  by requiring that all models of the initial belief set be updated separately  forbids us from inferring new beliefs about the past from later observations: indeed  in example 1  belief update provides no way of eliminating the world  a  b  from the set of previously possible worlds  which in turn  does not allow for eliminating  a  b  from the list of possible worlds after the update: if  a  b  is a possible world at time t  then its update by  b must be in the set of possible worlds at time t+1. in other terms  update fails to infer that alice wasn't in the office and still isn't.
¡¡belief update fails as well on example 1: updating a ¡Ä b ¡Ä  c by  a ¡Å  b gives the intended result  but only by chance  because the agent's initial belief state is complete . the second step fails: with most common update operators  updating  a ¨’ b  ¡Ä  c by  b ¡Ä c leads to  b ¡Ä c  while we'd expect to believe a as well.
¡¡the diagnosis should now be clear: the input formula ¦Á is not a mere observation. an observation made at time t + 1 leads to filter out some possible states at time t + 1  which in turn leads to filter out some possible states at time t  because the state of the world at time t and the state of the world at time t + 1 are correlated  by persistence rules or other dynamic rules1.  and finally  the successor worlds  at time t+1  of these worlds at time t that update failed to eliminate can not be eliminated either. such a backward-forward reasoning needs a proper generalization of update  and of revision   unsurprisingly called generalized update  boutilier  1 .
¡¡now  ¦Á has to be understood as an action effect  and update is a particular form of action progression for feedback-free actions. action progression  as considered in the literature of reasoning about action and logic-based planning  consists in determining the belief state obtained from an initial belief state after a given action is performed.
¡¡this connection between belief update and action progression was first mentioned in  del val and shoham  1   who argue that updating an initial belief state   by a formula ¦Á corresponds to one particular action; they formalize such actions in a formal theory of actions based on circumscription  and their framework for reasoning action is then used to derive a semantics for belief update. the relationship between update and action progression appears  more or less explicitly  in several other papers  including  liberatore  1b   who expresses several belief update operators in a specific action language. still  the relationship between update and action progression still needs to be investigated in more detail.
¡¡we first need to give some background on reasoning about action. generally speaking  an action a has two types of effects: an ontic  or physical  effect and an epistemic effect. for instance  if the action consists in tossing a coin  its ontic effect is that the next value of the fluent heads may change  whereas its epistemic effect is that the new value of the fluent is observed  this distinction between ontic and epistemic effects is classical in most settings . complex actions  with both kinds of effects  can be decomposed into two actions  one being ontic and feedback-free  the other one being a purely epistemic  sensing  action.
¡¡the simplest model for a purely ontic  i.e.  feedbackfree  action a consists of a transition graph ra on s.1 means that s is accessible from s after a. ra s  = is the set of states that can obtain after performing a in s. if ra s  is a singleton for all s then a is deterministic. if ra s  =   then a is inexecutable in s. a is fully executable iff for every s.
¡¡let a be a purely ontic action modelled by a transition graph ra on s. for any formula   ¡Ê lv   the progression of   by a is the propositional formula  unique up to logical equivalence  whose models are the states that can obtain after performing a in a state of is defined by
¡¡lastly  for any action a  inv a  is the set of invariant states for a  i.e. the set of all states s such that ra s  = {s}.
¡¡clearly enough   1  is identical to  u1 . therefore  for any update operator  and more generally any operator satisfying  u1   and any input formula ¦Á  updating by ¦Á is an action progression operator. this raises several questions:  a  which action is this exactly   b  what is the class of actions that correspond to updates   c  if update is progression  are there belief change operators corresponding to regression 
¡¡question  a  first. as argued above   u1  and  1  mean that the action is feedback-free. this comes down to saying that belief update assumes unobservability: the set of possible states after a is performed is totally determined by the set of possible states before it is performed and the transition system corresponding to a. in other words  what you foresee is what you get: once we have decided to perform a  waiting until it has actually been performed will not bring us any new information. note that using update in example 1 would correspond to performing an action whose effect is to make bob go out of his office  when he is initially not in the office  this action has no effect . likewise  in example 1  updating a¨’b¡Ä c by  b¡Äc corresponds to performing the action  demote bob from his position and appoint charles instead . therefore  updating by ¦Á is a purely ontic  feedback-free  action. can we now describe this action in more detail   u1  means that the action of updating by ¦Á has to be understood as  make ¦Á true . more precisely  due to the absence of feedback reflected by  u1   updating   by ¦Á could be understood as a dialogue between an agent and a robot:  all i know about the state of the world is that is satisfies  . please  go to the real world  see its real state  and whatever this state  act so as to change it into a world satisfying ¦Á  following some rules   given that the robot does not communicate with the agent once it is the real world.  the rules to be followed by the robot are dictated by the choice of the update operator . if  satisfies  u1   then the rules state that if the ¦Á is already true then the robot must leave the world as it is. if  is the pma  winslett  1   then the rules are  make ¦Á true  without changing more variables than necessary . more generally  when  is a katsuno-mendelzon operator  associated with a collection of similarity preorders  one for each world   the robot should make ¦Á true by changing s into one of the states that are most similar to it1. when  is wss  winslett  1; herzig  1  or the mpma  doherty et al.  1   then the rules are  make ¦Á true  without changing the truth values of a given set of variables  those that do not appear in ¦Á  or those that play no role in ¦Á .  and so on.
¡¡writing things more formally: given an update operator  and a formula be the ontic action whose
transition graph is defined by: for all
¡¡the following characterizations are straightforward  but worth mentioning  and they will be useful later .
proposition 1 let  satisfy  u1 .
1. ;
1.  satisfies  u1  if and only if for any formula ¦Á ¡Ê lv and any;
1.  satisfies  u1  if and only if for any formula ¦Á ¡Ê lv  
;
1.  satisfies  u1  if and only if for any satisfiable formula  is fully executable.
	note that  u1  and  u1  imply that for all s	¡Ê	s 
. the other postulates
do not have any direct effect on the properties of
considered as an isolated action  but they relate different actions of the form . noticeably  requiring
 u1  corresponds to the equality between and  when ¦Á and ¦Â are logically equivalent. the characterizations of  u1    u1  and  u1  in terms of reasoning about action do not present any particular interest.
¡¡let us now consider question  b . obviously  given a fixed update operator  satisfying  u1    u1    u1  and  u1   some fully executable actions are not of the form 
 this is obvious because there are 1n actions of the form
n
 fully executable actions  where
n = |v |.  now  what happens if we allow  to vary  the question now is  what are the actions that can be expressed as   for some update operator  and some ¦Á 
proposition 1 let a be a fully executable ontic action such that ra s    inv a  for all s ¡Ê s. then there exists a km-update operator  and a formula ¦Á  such that a =
.
¡¡the proof is constructive: ¦Á is taken such that mod ¦Á  = inv a   and the collection of faithful orderings in the sense of  katsuno and mendelzon  1  is defined by s1  s s1 if and only if 
 iff not  s1  s s1 . from propositions 1 and 1 we get
corollary 1 let a be an ontic action.	there exists a
km-update operator   and a formula ¦Á such that a =
  if and only if a is fully executable and ra s    inv a  for all s ¡Ê s.
¡¡a variant of proposition 1  and corollary 1  can be obtained by not requiring ra s    inv a : in that case there exists an update operator  satisfying all the km postulates
except  u1   and a formula ¦Á such that can be taken as and .
1 reverse update
now  question  c . is there a natural notion which is to action regression what update is to progression  the point is that we do not have one  but two notions of action regression. the weak progression regression  or weak preimage  of ¦× by a is the formula whose models are the states from which the execution of a possibly leads to a model of ¦×  while the strong regression regression  or strong preimage  of ¦× by a is the formula whose models are the states from which the execu¦×: reg	a s ¡É
reg ¦× a  = form {s ra s    mod ¦× } 
¡¡see for instance  lang et al.  1  for the interpretation of these two notions of regression in reasoning about action.
this naturally leads to two notions of reverse update.
definition 1 let  be an update operator.
  the weak reverse update  associated with  is defined by: for all	s ¡Ê s
|
  the strong reverse update   associated with  is defined by: for all ¦× ¦Á ¡Ê lv   for all s ¡Ê s 
	s |= ¦×   ¦Á	for s 	¦Á = ¦×
¡¡intuitively  weak reverse update corresponds to  deductive  postdiction: given that the action  make ¦Á true  has been performed and that we now know that ¦× holds  what we can say about the state of the world before the update was performed is that it satisfied. as to strong reverse update  it is an abductive form of postdiction  better interpreted as goal regression: given that a rational agent has a goal ¦×  the states of the world in which performing the action  make ¦Á true  is guaranteed to lead to a goal states are those satisfying ¦×  ¦Á. the following result shows thatcan be characterized in terms of :
proposition 1
1. ; 1. ;
¡¡as a consequence of proposition 1 is the weakest formula   such thatis the strongest formula   such that.
example 1 let winslett  1 . let b and m stand for  the book is on the floor  and  the magazine is on the floor . the action can be described in linguistic terms by  make sure that the book or the magazine is on the floor . then which can be interpreted as follows: if we know that the book is on the floor after has been performed  then what we can say about the previous state of the world is that either the book was already on the floor  in which case nothing changed  or that neither the book nor the magazine was on the floor  and then the update has resulted in the book being on the floor . on the other hand  b    b ¡Å m  ¡Ô b: if our goal is to have the book on the floor  the necessary and sufficient condition for the action to be guaranteed to succeed is that the book is already on the floor  if neither of them is  the update might well leave the book where it is and move the magazine onto the floor .
¡¡an interesting question is whether weak and strong reverse update can be characterized by some properties  which then would play the role that the basic postulates play for  forward  update . here is the answer  recall that a basic update operator satisfies u1  u1  u1 and u1 .
proposition 1  is the weak reverse update associated with a basic update operator  if and only if  satisfies the following properties:
w1 ;
w1 if ¦Á is satisfiable then;
w1 if;
w1 .
in addition to this   satisfies  u1  if and only if  satisfies w1 .
¡¡note that  w1  and  w1  are exactly the same properties as  u1  and  u1   replacing. properties  u1    u1  and  u1  do not seem seem to have meaningful counterparts for   and anyway  as already argued  these three postulates are too controversial .
we have a similar result for strong reverse update:
proposition 1   is the strong reverse update associated with a basic update operator  if and only if   satisfies the following properties:
s1 ;
s1 if ¦Á is satisfiable then ¡Í   ¦Á ¡Ô ¡Í;
s1 if;
s1 .
in addition to this   satisfies  u1  if and only if   satisfies
s1 if ¦× |= ¦Á then ¦× |= ¦×   ¦Á.
¡¡note that  unlike weak reverse update  strong reverse update does generally not satisfy modelwise decomposability  u1/w1   but a symmetric  conjunctive decomposability property  s1 .
moreover  if  is a basic update operator then
siw if ¦Á is satisfiable then
note that  siw  fails without  u1 . example 1 shows that the converse implication of  siw  does not hold in general.
finally  coincide if and only if is deterministic.
¡¡one may wonder whether reverse update has something to do with erasure  katsuno and mendelzon  1 . an erasure operator  is defined from an update operator  by
. erasing by ¦Á intuitively consists in
making the world evolve  following some rules  such that after this evolution  the agent no longer believes ¦Á. a quick look suffices to understand that erasure has nothing to do with weak and strong reverse update. erasure corresponds to action progression for an action erase ¦Á  whose effect is be epistemically negative  make ¦Á disbelieved . this implies in particular that cannot be made disbelieved  whereas    ¡Ô     ¡Ô .
¡¡pursuing the investigation on reverse update does not only have a theoretical interest: weak  deductive  reverse update allows for postdiction  and strong  abuctive  reverse update allows for goal regression  when the actions performed are updates  and is therefore crucial if we want to use an updatebased formalism for planning  see  herzig et al.  1  .
1 update and propositional action theories
now that we know that is an action progression operator  can it be described by a propositional action theory such as those described in  giunchiglia et al.  1   recall that a propositional action theory ¦²a for action a is a propositional formula ¦²a built on the language generated by the time-stamped propositional variables vt ¡Èvt+1  where vt = {vt|v ¡Ê v } and vt+1 = {vt+1|v ¡Ê v }  such that  for each holds if and only if.
¡¡if we don't care about the size of the action theory  the answer is obviously positive: just take
¡¡¡¡. then for all  we have st ¡È st+1 |= ¦²¦Á if and only if  and  equivalently if and only if	+1.
¡¡the question is now whether  can be described by a succinct action theories. the answer depends on the update operator. existing complexity results on belief update enable us to give a quick negative answer for many update operators. note first that prog   ¦Á  |= ¦× if and only if  t ¡Ä ¦²¦Á |= ¦×t+1; therefore  given a propositional action theory ¦²a and two formulas    ¦×  deciding whether prog   ¦Á  |= ¦× is in conp  actually conp-complete . now  for many update operators  including the pma  deciding whether-complete  eiter and gottlob  1;
liberatore  1a . let  be one of these update operators.
if there were a way of expressing  for all ¦Á  by a polynomially large action theory  then we would have ¦°p1 = conp  and the polynomial hierarchy would collapse at the first level  which is very unlikely.
¡¡on the other hand  a positive answer is obtained for the following update operators  for which deciding whether prog   ¦Á  |= ¦× is only conp-complete: the mpma  doherty et al.  1   wss  winslett  1   wss¡ý and wss¡ýdep  herzig and rifi  1 . all those update operators consists first in forgetting a set of variables  for instance  those that appear in the input formula ¦Á  or those in which ¦Á depends etc.   and then expanding the result by ¦Á. for instance  for
.
1 summary and conclusion
let us try to summarize what we have said so far. both revision and update deal with dynamic worlds  but they strongly differ in the nature of the information they process. belief revision  together with the introduction of time stamps in the propositional language  aims at correcting some initial beliefs about the past  the present  and even the future state of the world by some newly observed information about the past or the present state of the world. belief update is suitable only for  some specific  action progression without feedback: updating   by ¦Á corresponds to progressing  or projecting forward    by the action  to be interpreted as make ¦Á true. the  input formula  ¦Á is the effect of the action
  and definitely not an observation. expressed in the terminology of  sandewall  1   the range of applicability of update is the class kp-ia: correct knowledge1  no observations after the initial time point  inertia if  u1  is assumed  and alternative results of actions.
¡¡assessing the scope of belief update is all the more important as several variations on belief update have recently appeared in the literature.  liu et al.  1  lift belief update to description logics.  eiter et al.  1  gives a framework for changing action descriptions  which is actually closer to a revision process than to update; however  updating an action by changing physically its transition graph would be meaningful as well  and deserves further study.
¡¡in complex environments  especially planning under incomplete knowledge  actions are complex and have both ontic and epistemic effects; the belief change process then is very much like the feedback loop in partially observable planning and control theory: perform an action  project its effects on the current belief state  then get the feedback  and revise the projected belief state by the feedback. clearly  update allows for projection only. or  equivalently  if one chooses to separate the ontic and the epistemic effects of actions  by having two disjoint sets of actions  ontic and epistemic   then ontic actions lead to projection only  while epistemic actions lead to revision only. therefore  if one wants to extend belief update so as to handle feedback  there is no choice but integrating some kind of revision process  as in several recent works  boutilier  1; shapiro and pagnucco  1; jin and thielscher  1; hunter and delgrande  1 . another possibility is to generalize update so that it works in a language that distinguishes facts and knowledge  such as epistemic logic s1: this knowledge update process is investigated in  baral and zhang  1 . here  effects of sensing actions are handled by updating  and not revising  formulas describing the agent's knowledge. such a framework takes the point of view of a modelling agent o who reasons an the state of knowledge of another agent ag. thus  for instance  updating a s1 model by kag  means that the o updates her beliefs about ag's knowledge; considering ag's mental state as part of the outside world for agent o  this suits our view of update as a feedback-free action for o  updating by kag  corresponds as  make kag  true   which can for instance be implemented by telling ag that   is true .
acknowledgements
thanks to andreas herzig for years of discussions about the very meaning of belief update  without which i would never have thought of writing this paper . thanks as well to meghyn bienvenu  florence dupin de saint-cyr  sebastien¡ä konieczny  fangzhen lin  and pierre marquis.
