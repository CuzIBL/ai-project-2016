 
device representation and reasoning with affective relations occupies a middle ground between classical model-based diagnosis and heuristic expert systems. a device is modeled by specifying a set of diagnostically motivated affective relations among its components. reasoning is then performed by a set of inference rules that reason with the model to propagate symptoms through the components. representation and reasoning with affective relations extends several benefits of classical model-based diagnosis-the model as a unifying framework for knowledge  methodical coverage of the domain  and diagnostic reasoning based on equipment design and causality-to a class of problems where classical model-based diagnosis cannot be applied because the required models cannot be reasonably obtained or represented. our work evolved from our redesign of a heuristic expert system for monitoring long-distance telephone switching systems  and is applicable to highly complex self-checking systems. 
1 	introduction 
following their advent in the 1's  expert systems were successfully applied in a number of commercially important areas. however  as these systems grew in size and complexity  it became clear that they had important limitations. for example  large collections of interacting rules turn out to be difficult to understand or modify. these limitations can be traced to a set of now wellknown problems with  surface  or  first-generation  expert systems  hart  1; david et a/.  1   for example  unintended rule interactions  conflicting rules  and knowledge implicit in the rules. 
　to address these problems  a wide variety of  secondgeneration  expert systems have been proposed in the literature  encompassing both  deep  approaches  e.g.  
'currently supported by the air force office of scientific 
research under grant number 1 and by arpa/rome 
labs under grant numbers f1-c-1 and f1c-1. much of this work was done while at at&t bell laboratories. 
1 	qualitative reasoning and diagnosis 
at&t bell laboratories 1 mountain avenue 
murray hill  nj 	1 u.s.a. 
knowledge level analyses  clancey  1   deep compiled knowledge  chandrasekaran and mittal  1   modelbased reasoning  davis and hamscher  1   functional reasoning  sticklen and bond  1    as well as hybrid approaches that integrate multiple representation and reasoning techniques. for example  in the domain of device diagnosis  model-based approaches generally represent the structure and behavior of the device declaratively and then reason about the device from first principles  rather than via a collection of ad-hoc heuristics . 
　generally speaking  the commercial impact of secondgeneration expert systems has not matched the impact of their simpler first-generation counterparts. a major factor in this relative lack of commercial impact of second-
generation approaches  especially the more sophisticated approaches based on model-based reasoning  is the high up-front cost of developing a model of complex real-world devices. to take an extreme but very real example  consider the problem of developing a model of a modern telephone switching system  or some other equally complex device such as a nuclear power plant or large chemical refinery . a telephone switch can easily have thousands of circuit packs  each of which is of the complexity of a personal computer. clearly any behavioral or functional model of such a device will have to be at quite a high level  unfortunately  there do not seem to be any good high level languages for even giving a behavioral or functional description of these complex devices. one might expect to be able to use some mathematical model  queuing theory for example  but we are not aware of any evidence that such an approach would be useful. it is clear that such an approach would be almost completely disjoint from the approaches that domain experts take to monitoring and diagnosing these types of devices. 
　to understand the approach that domain experts take  it is essential to understand that modern complex devices are largely self-checking.1 that is  they generally monitor their own operation and produce alarms that indicate the nature of most failures. this type of selfchecking is  of course  essential precisely because humans cannot keep an adequate model of such complex devices 
   'we use the term  self-checking  to refer to built-in capabilities ranging from verification tests that signal when a device is malfunctioning to limited diagnosis that identifies suspects from evidence localized in time and space. 

in their head. to produce commercially important monitoring and diagnostic systems in these domains it suffices to automate the largely mechanical process that domain experts use to understand the alarms produced by these complex self-checking devices. 
　unfortunately most existing work on first- and secondgeneration expert systems provides relatively little help in this endeavor. first-generation approaches tend to break down due to their well-understood limitations. second-generation model-based approaches are not directly applicable because of the lack any real model of these complex devices. 
   this paper presents an approach based on affective relations. affective relations define a highly abstract non-behavioral representation for modeling devices. an affective relation is so named because one component affects another in some diagnostically important way. the affective relation model is not used to simulate device behavior  in fact it is much too weak for that . instead the model is a way to organize knowledge about the domain in a coherent way; ad-hoc heuristics are replaced by a small set of general principles for monitoring and diagnosis from affective relation models. unlike traditional device models  affective relations are easy to acquire from front-line experts such as operators and maintenance technicians because they represent precisely the kind of knowledge that is needed to diagnose routine problems  particularly in complex self-checking devices. 
　we illustrate our approach by presenting a rational reconstruction of an existing rule-based monitoring and diagnosis system for the 1ess r telephone switching system  the 1ess handles most a t & t domestic long-distance calls . by comparing the older rule-based design with the design based on affective relations  we demonstrate how the use of affective relations  like traditional modelbased approaches  provides generality  clarity and conciseness that allows for increased inferential power and reduced maintenance costs. 
　the larger import of our work is the identification of a middle ground between surface approaches and traditional model-based approaches. our experience shows that a model of the affective relations between the components of a device is a particularly useful level of representation because it brings many of the benefits of model-based reasoning to domains where full device models cannot be built. 
1 	affective relations 
affective relations models are applicable to domains satisfying two basic criterion: 
1. devices can be naturally broken down into component devices such that the components generally interact via known pathways. 
1. these pathways can be characterized by a small set of affective relationships between components. 
abstractly  reasoning with affective relations proceeds by examining the output of the device to determine the state of key components  and then propagating this information through the affective relations to deduce the state of other components. actions are then performed based on the nature of the alarm messages from the device and the states of the components. to make this more concrete the rest of this section presents an example of an affective relation model. 
1 	device representation 
the key elements of our device model are 1  a set of basic classes  e.g.  device   1  a set of diagnostically motivated affective relations relating device components  1  a set of relations relating other classes in the model  and 1  a set of properties and general relationships specifying the semantics of the relations  i.e.  the knowledge that is implicit in any explicitly specified knowledge. see figure 1 for a knowledge level  newell  1  description of a portion of the device model1.  see  att  1  for a symbol level description of a much larger portion of the device model.  
　affective relations link components to other components in diagnostically useful ways. for example  iramediate-part-oi means that a direct subcomponent/component relationship exists between two devices. part-of reflects direct as well as transitively closed subcomponent/component relations  while its inverse subpart reflects direct and transitive component/subcomponent relations. depends-on means that the correct functioning of a device depends on the correct functioning of another device; dependent represents the inverse relation between the two devices. standby means that if one device fails  its standby partner will take over automatically; it also means that reliable operation is jeopardized if one device fails. 
　other relations link devices to other classes in the model. self-alarm means that a device is signaling an alarm. however  a problem with one device may not necessarily cause that device to itself signal an alarm; instead  the problem may affect a second device  causing it to signal an alarm. part-alarm and dependent-alarm link devices to alarms signaled by other devices. part-alarm relates a device to an alarm on another device when the alarming device is a subpart of the device; dependent-alarm relates devices to alarms based on depends-on. devices are either f u n c t i o n a l or not. if a device depends on another device that is not functional  the dependent device is also not functional. if a device is in simplex mode  it means that none of the device's standbys are functional. 
　to illustrate the use of these relations  we examine in some detail a digital toll switching system known as a 1ess switch. a portion of the basic class hierarchy is shown in figure 1 the class device is broken down into a series of 1ess-specific subclasses. each major type of component of the 1ess  down to the level of field-replaceable units  adds a class to the general device ontology shown in figure 1. 
　figure 1 shows how some of the key portions of the model of the 1ess switch are instantiated using the general and domain-specific portions of the ontology shown 
1
　　we use typewriter font for relations and sans serif for classes  and their members . 
1
　　to eliminate jargon  hardware component names have been replaced with abc  etc. 
	crawford  etal 	1 


in figures 1 and 1  respectively. the actual 1ess switch and its components are each defined as members of one of the device classes  e.g.  device 1ess  defines the switch 1ess to be an instance of type device. note that the model is isomorphic to the device: for each type of component in the device there is a class in the model and for each component in the device there is one instance in the model. affective relations are asserted between device instantiations  e.g.  immediate-part-of  clock 1  1ess . recall that the properties of and the general relationships between the affective relations  figure 1  specify the knowledge that is implicit in an explicitly defined model such as figure 1. thus  because of the first general relationship in figure 1  immediate-part-ox  clock 1  1ess  entails part-of  clock 1  1ess   which in turn entails the inverse relation subpart  1ess  clock 1 . similar inferences can be drawn from the other immediatepart-of assertions. then  transitivity entails further subpart and part-of relations. the depends-on assertions entail a set of inverse dependant relations. because standby is defined to be symmetric  standby  a-cntl 1  a-cntl1  entails standby  a-cntl 1  a-cntl1   and similarly for the other standby assertions. 
　figure 1 pictorially represents the model. each box represents a device. the immediate nesting of boxes depict immediate-part-oi relations. the labeled arrows depict some of the other explicit  e.g.  standby  a-cntl 
qualitative reasoning and diagnosis 
1  a-cntl1   and implicit  e.g.  standby  a-cntl 1  acntl1   affective relations linking devices. 
　note that affective relations among components are not traditional relations of structure or behavior or 
function except in some very abstract sense. unlike typical behavioral models  the relations do not define or constrain the input/output behavior of components. rather  affective relations express aspects of the design at a level of abstraction that expert human troubleshooters use to link symptoms to suspects. this will be illustrated below. furthermore  the use of the model for diagnostic reasoning not only motivates but also limits what must be explicitly represented in the model. we do not need to represent every type of component or every relationship between components  but only those which participate in an expert's causal analysis of alarms. 
1 	diagnostic reasoning f r o m the m o d e l 
our use of an explicit model of the components of a monitored device and affective relations between components brings many of the benefits of traditional model-based reasoning to domains  such as 1ess alarm monitoring  where conventional models are too costly to acquire. for example  one benefit is that the approach allows us to replace heuristic rules of first-generation expert systems with diagnostic rules that reason from the device model using general principles expressed in terms of the affective relations. in this section we informally contrast our approach to diagnostic reasoning in the 1ess domain with a previously developed heuristic approach. 
　in our domain  diagnostic reasoning involves real-time monitoring of alarms and other informational messages from the 1ess switches  e.g.  to correlate alarm messages coming from the various components  ignore transient alarms  recognize chronic problems  run diagnostics  and signal problems requiring human attention. the monitoring system takes input in the form of alarm messages 

and produces output in the form of warning and action messages to field technicians. an expert system was originally developed for monitoring of the 1ess switches in 1. the system was designed as a conventional rulebased system using an ops1-compatible language. it contained several hundred heuristics gleaned from many interviews with domain experts. three example heuristics are shown below. 
1. if f-level alarms are occurring concurrently for more than one component in a peripheral device  add the number of alarms together and threshold on the sum. 
1. if a type-abc component is in normal mode  perform thresholding of alarms  but if it is in simplex mode  ignore thresholding and alert on any f-level alarms. 
1. if f-level alarms are occurring on different typeabc and qrs components  but all alarms are on the same controller number  then suspect the clock. 
　device representation and reasoning with affective relations allows us to replace such heuristics with diagnostic rules that reason from our device model using first principles. for example  one such general principle is: 
  concurrent alarms on multiple components of a larger device indicate a problem at the device level. we capture this principle by using part-alarm to link alarms on components to any larger devices the components are part of. we then threshold on the number of such links  looking for a device linked to a large number of alarms on different subparts . this subsumes the first heuristic rule above and is clearly both simpler and more general. for example  the new rule covers all types of alarms and all levels of nesting in the p a r t - o f hierarchy. of course this reformulation is only possible because of the explicit representation of the immediate-part-of  p a r t - o f   and subpart relations between components.1 
　we can also take advantage of the explicit encoding of standby. in the normal situation where a component is active and its standby is ready  alarms undergo thresholding before an alert is issued. however  if the standby is out of service then any alarm should generate an immediate alert. by making standby explicit in our model  and defining simplex in terms of this affective relation  the second heuristic rule above can be replaced with the following more general principle: 
  if a device's standby is not functional  then alert on any alarm. 
again  note that the new rule covers all devices that have a standby  not just abcs  and similarly covers all types of alarms. 
1
　　thresholds go up as one travels up the part-oi hierarchy  e.g.  many alarms on many components are necessary before concluding that there is a problem with the 1ess. 
	crawford  et al 	1 

　finally  a dependency-based rule of monitoring allows us to recognize the failure of a device from alarms on the device's dependents. for example  if clock 1 in figure 1 is failing  this may be indicated by alarms on the dependent components cntl 1 in abc 1 and cntl 1 in qrs 1. by making depends-on explicit in our model  the third heuristic rule above  whose rationale for implicating the clock is particularly obscure  can be replaced with the following more general principle: 
  concurrent alarms on multiple dependents of a device indicate a problem with that device. 
this rule clarifies that diagnostic reasoning traces up a dependency chain to identify a common point of failure. depends-on can also be exploited to propagate state information  as was shown in the fourth general relationship of figure 1. 
1 	a d e t a i l e d e x a m p l e 
the basic activity in the 1ess expert system is the analysis of alarms. alarm messages from the switch  in con-
junction with the semantics of the model  trigger the dynamic creation of the relevant portions of the device model. from this model general purpose diagnostic rules determine the root cause of the alarm. 
   at startup  the model of the 1ess only contains a small set of core device types  associated instantiations  and immediate-part-of relations between the instantiations. this is because in a complex device such as the 1ess  we have found it to be prohibitively difficult to build up a complete device configuration in advance. in general  device types as well as the number and arrangement of actual components vary among switching installations. most devices and affective relations are thus dynamically created  in response to both the computation of the entailments of the model  as well as to the rulebased processing of the alarms. for example  returning to the model of figures 1 and 1  only 1ess  clock 1  clock 1  and the two immediate-part-of relations relating the 1ess and the clocks are initially asserted in the model. 
   an example of an alarm message from the switch is shown in the top portion of figure 1 the message assigns a unique identifier to the alarm  specifies the alarm type  and states that the alarm is occurring on the specified subunit of the specified unit of the 1ess. that is  units link devices to the 1ess as a component  while subunits link devices to units. 
   processing of the alarm causes the device model to be updated as shown in the middle of figure 1. intuitively  a representation of the alarm is created and added to the model  the devices mentioned in the message are either found in the model or created and added to the model  and the alarm just created is related to the lowest level device mentioned in the alarm. in particular  the first assertion in the figure creates an instantiation alarml and declares it to be a member of the class alarm.  alarms also have an internal structure which is not shown  e.g.  alarml has a slot  id  filled by  1   etc.  the unit 
1
　　we have simplified the alarm  to enhance the clarity of this section. 
qualitative reasoning and diagnosis 

and subunit devices referred to in the alarm message will also be added to the model  along with the corresponding configurational relations between the 1ess and the unit  and between the unit and the subunit. thus  device abc 1 is instantiated  declared to be a member of the class abc  and linked to the device 1ess  already instantiated at startup  via immediate-part-of. similar processing occurs for a-cntl 1. finally  a sell-alarm assertion is added which relates a-cntl 1  the device component that actually signaled the alarm  to alarml. 
　as at startup  the semantics of the model in conjunction with the immediate-part-of assertions will cause implicit part-of and subpart relations to be explicitly added to the model  as shown in the bottom of figure 1. these assertions  in conjunction with the second general relationship in figure 1  will in turn cause the assertions part-alarm  abc 1  alarml  and part-alarm  1ess  alarml  to be added to the model. thus  the alarm is propagated to other devices to which it is relevant  by adding a part-alarm relation from any devices the alarming device is a component of  and the alarm. in this case it adds this relation between the two components which have a-cntl 1 as a subpart  1ess and abc 1   and a-cntl 1's alarm  alarml . this captures the fact that a failure in 1ess or in abc 1 could have caused the alarm. at this point the computation of the implicit portions of the model is complete; initial processing of the alarm has resulted in dynamic construction of a portion of the model shown in figures 1 and 1  and incorporation of the alarm into the model.1 
　　although not illustrated here  other relations in the model  e.g.  depends-on  standby  can also be dynamically created. this is done by supplementing the general relationships shown in figure 1 with domain specific relationships  e.g.  for all devices of type controller  the device depends-

　once our model is created  diagnostic rules of inference determine the root cause of the alarms by reasoning from the model. in particular  creation of the relations s e l l - a l a r m   part-alarm  and dependent-alarm between devices and alarms trigger the diagnostic rules. for example  the following rule formalizes the first example from section 1: 

the rule is an example of a thresholding rule that determines when a non-alarming component is not functional  based on thresholding of the part-alarm relations in which it is involved. the domain specific relation p a r t - t h r e s h o l d holds if there are a sufficient number of alarming devices that are components of the device x. when a threshold is met and a device asserted to be non-functional  a warning message can be sent to a technician. 
　assume p a r t - t h r e s h o l d is defined to be true when a device has at least two alarming components. the rule would thus not be satisfied for any device after the first alarm. if the switch then generated an alarm on another component of abc 1  say s e l f - a l a r m  spc 1  alarm1   part-alarm  abc 1  alarm1  would be among the newly entailed relations  and p a r t - t h r e s h o l d  abc 1  true  would now be satisfied. this would entail f u n c t i o n a l  abc 1  false   and an operator could be sent a warning message. again  this example illustrates how our approach supports reasoning from the device model using general principles involving affective relations. 
1 	s t a t u s a n d i m p l e m e n t a t i o n 
our implemented reconstruction of the original heuristic 1ess alarm monitor includes a fairly simple ontology such as that shown in this paper  along with a small number of diagnostic rules about the 1ess switch. this has already allowed us to achieve approximately 1% of the functionality of the original expert system. furthermore  our implementation uses a much more principled and organized knowledge base with fewer rules. we are currently extending the functionality of our prototype  and it appears that our methodology will extend to the entire 1ess monitoring problem. 
　the device model as well as the diagnostic rules of inference are implemented using r++  crawford et ai  1; att  1   an extension to c++ that supports forward chaining directly on c++ objects. the explicit encoding of the 1ess device model is represented in a declarative  object-oriented manner using c++ objects corresponding to the physical devices and to the other basic classes in the ontology  and inter-object pointers corresponding to the affective and other relations between the classes. the entailments of the model  as well as the diagnostic rules of inference  are both represented using the rule construct of r++. r++ rules are 
on the clock device having the same number. thus  when an alarm causes a controller to be created  the appropriate depends-on assertion from the controller to a clock is entailed. 
　　in reality  a warning is sent and further evidence obtained before inferring non-functional. 
if-then rules that are associated with c++ classes and that are inherited according to the c++ class hierarchy. because the r++ rules are tightly integrated with the c++ object-oriented class mechanisms - which are used to define the explicit portion of the device model - it is natural to write rules that operate on the model. furthermore  because the condition of an r++ rule must traverse inter-object pointers  rules in fact must be written using relations  such as affective relations  that are explicitly defined between classes. finally  the association of rules with classes allows subclasses to inherit rules as well as attributes from superclasses. this allows us to write rules for one type of device and have them inherit to all instances of that type. 
1 	related work 
work by abu-hanna et al.  abu-hanna et al.  1  argues that functional models are generally easier to obtain than behavioral models; furthermore  by representing design intent  functional models help identify relevant suspected causes of a symptom and are thus attractive for the suspect generation task. the need to represent diagnostically useful models at a level that is easy to obtain is also a conclusion drawn in our work. however  our affective relations do not encode purpose or intent  except perhaps at a very high level   and are thus at even a more abstract level of representation than the functional models of abu-hanna et al. abbott's work on operative diagnosis  abbott  1  is also similar to ours in that her model includes a directed graph of  paths of propagation  to relate symptoms to suspects. abbott's paths indicate only that one component may af-
fect another  so they are the most abstract kind of affective relation. our 1ess switch monitoring example uses more detailed relations because they were readily available from 1ess technicians  enabling more focused diagnosis. work from the uncertain reasoning community on bayesian networks  heckerman and wellman  1  annotated directed graphs that encode probabilistic relationships - can also be viewed as a modeling language for representing a kind of affective relation  often viewed as cause/effect . because our work inputs information about a device  organizes and processes this information under an existing taxonomy of knowledge about related devices  and uses an existing taxonomy of knowledge to control the generation of a diagnosis  our work also fits within clancey's general framework of heuristic classification  clancey  1 . 
　although it has not been the focus of this paper  our work also seeks to bring some of the benefits of object-oriented modeling to bear on the task of building expert systems. the object-oriented basis of r++ has proven critical to our success in implementing our approach as it provides for both a taxonomy of classes to directly represent abstractions in the domain and a tight integration of rules with these abstractions  thus allowing us to write rules to do diagnosis within the model. there are several other attempts to integrate object-oriented and rule-based reasoning  albert  1; hal  1; miranker et al  1  that could be used to provide some of the same benefits as r++ does. 
	crawford  etal. 	1 
1 	conclusions 
device representation and reasoning with affective relations provides a middle ground between model-based reasoning and heuristic expert systems  for monitoring and diagnosing complex devices that are largely selfchecking. while model-based diagnosis would seem to be well suited for such tasks  in practice the models of traditional approaches axe often too difficult to obtain  e.g.  due to system complexity  inadequate documentation  lack of an appropriate representation language . this has often led developers to rely on heuristic expert systems  which themselves have many well-known limitations. by providing an abstract level of device modeling based on a set of diagnostic ally motivated and easy to acquire affective relations  our work brings the advances of model-based reasoning to domains in which the development of traditional models is difficult. these advances include:  1  a unifying framework for knowledge and diagnosis based on general principles   1  a useful tool for focusing knowledge capture  our models seem to correspond well with an expert's knowledge and can be visually displayed  as in figure 1    and  1  a more methodical coverage of the domain. our work at the symbol level also brings to expert systems the benefits of relatively recent advances in object-oriented knowledgerepresentation - principally the use of objects to organize knowledge  and a tight integration of objects within the rule-based paradigm. 
   for the longer term  a further objective of our work is the development of a shared ontology similar to that of figure 1  but which can be used to monitor and diagnose many different kinds of devices. a key question is the extent to which general principles of causality and diagnosis apply across different kinds of devices  e.g.  how far should symptoms be propagated up the p a r t - o f hierarchy  we would also like to model systems that are not necessarily self-checking  as the basic point of our approach should still apply  i.e.  when designing a representation  don't reason at a finer level than required . 
　a driving force behind our work has been to develop a pragmatic solution  one that balances the fact that developers of commercial systems have only limited resources to invest  but that they also have a desire to obtain the benefits found in  ideal  approaches. in the end the essential contribution of device representation and reasoning with affective relations is the identification of a particularly useful level of abstraction for modeling complex devices - represent the affective relationships between components that are used by experts when reasoning about the device. this level of abstraction is high enough that large and complex devices can be represented but still detailed enough to allow effective monitoring. the use of such models brings the advantages of model-based reasoning to domains previously handled only with heuristic methods. 
acknowledgments 
we would like to thank our management  especially r. 
brachman  r. dube  p. warty  and m. wish  for their support of this project. we would also like to thank s. 
qualitative reasoning and diagnosis 
correl for the implementation of many of these ideas using r++  d. etherington for comments on an earlier draft of this paper  and b. kuipers for helpful discussions. 
