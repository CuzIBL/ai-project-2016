 
　　building an expert system usually comprises an entangled mixture of knowledge acquisition and implementation efforts. an emerging methodology based on cognitive psychology end software development guides and supports knowledge acquisition while implementation is deferred. this allows for e more deliberate choice of architecture this paper presents e case stud/ to test the methodology. 
i introduction 
　　a major problem 1n the construction of expert systems is the method for knowledge acquisition. this may be one of the reasons that despite a widespread need there is little afrance in building intelligent consultants for statistical problems. there ere two distinct methods. the first one is the methodology of repid prototyping in which knowledge acquisition end implementation ere mixed. the knowledge engineer uses interview data from human experts end immediately starts building a prototype in en implementation formalism. how to moke decisions regarding implementation and architecture remains unclear  cf. hayes-roth et.al 1 . the second methodology  which we cell structured knowledge acquisition  is outlined by wiellngo & breuker  1 . this case study is meant as e test of this kads methodology 
 knowledge acquisition documentation end structuring . the methodology is implemented in e knowledge acquisition support system  kads  written in prolog  using e prolog klone implementation as a structuring device. 
　　a major characteristic of the methodology is e separation between knowledge acquisition and implementation. the task for the knowledge engineer is to bridge the gap between the verbal date from experts end the actual implementation of a system. the methodology provides e theoretically founded step in between. it guides the knowledge engineer in the mapping of verbal data onto an intermediate level provided by en interpretation modal  which is an implementation independent description of the domain knowledge on en aptatamotagicai level  brachman 1  clancey 1 . it consists of e typology of basic elements end structuring relationships for a certain claas of problem solving teaks. 
　　the basic elements ore objects  knowledge sources  models end strategies. on the implementation level  knowledge sources can be algorithms or sets of production rules. on the eplstemologtcel level e knowledge source is e piece of knowledge that derives new information from existing data it is equivalent to an elementary 
subtaek  which cannot be decomposed further. a knowledge source that occurs in almoet any problem solving taek is for instence the classification of objects into categories. knowledge acquisition consists of repeated cycles of elidtetion end analysis of verbel data aimed at refining  end if necessary rejecting  en interpretation model. 
　　crucial to the methodology is the use of thinking aloud data. they provide the most informative window to expertise in action. 
however  in knowledge engineering  these data ere hardly ever used. 
they ore assumed to be difficult to interpret  webank  1  end their use is only recommended es e check on the adequacy of e prototype. however  es psychology of problem solving shows  the analysis of thinking aloud data is feasible when en initial model of the task is used es en interpretative framework  ericsson & simon  1 . in kads  a classification of such models is available. the knowledge engineer selects one or more interpretation models  describing the expert tasks at a global level. there ere interpretation models for specification  diagnosis  planning  design  etc. the edventege of interpretation models is that the knowledge engineer is equiped with e tool that is much closer to the verbel data than an implementation formalism. there ere more practical adventages: repair and refinement of the model does not require throwing away some prototype gone stuck into e meddle of ed hoc solutions in an inappropriate formalism. 
	ii 	knowlfldgbacqulalllfld 
　　the kads methodology prescribes e series of knowledge engineering tasks which can be classified into three types: 
　　1. an analysis of the functions  the environment end the users of the expertise to arrive at a definition of the operational charecteristics of the prospective system. the functional analysis defines the modality of the expertise. a knowledge based system contains two types of tasks: problem-solving tasks representing the expertise end communication tasks. these communication tasks are by no meens trivial; they form the interface between the operational environment end the expertise. modality may involve negotiating  exploration  coaching  documentation  etc. 
　　1. an analysis of the static domain knowledge  starting with the collection of e lexicon  ending with concepts structured  n  klone  concept hierarchies. 
　　1. analysis of expertise in action  i.e. the way problems ere solved this starts with a taak-eneh/sls: selection of one or more interpretation models that eppeer to represent the structure of the problem solving process. by  notching the verbal data from interviews and in particular thinking aloud protocols  this initial modal gets refined end modified into a detailed structure of knowledge objects  knowledge sources and strategies; much in the same way as banners  1  conceptual structures. the final conooptuol structure of expert reaaonlng represents the basic erchltecture of the proepactlve system. in the conceptual structure 

the static knowledge end the actions performed on them become integrated 
　　in this section we discuss these knowledge engineering tasks within the domain of statistical analysis of experiments. from know on  task  means task for e statistical consultant. the data used in this case stud/ consisted of textbooks on statistics and twelve thinking aloud protocols  obtained from four experts working in the social science department at our university. one of us is an intermediate expert himself. 
　　the functional analysis aims at identification of the objects  agents and functions involved in the expert task. an informal description of the functional analysis is the following: a statistics expert is consulted by e reseercher who has the intention to investigate empirical reletions among veriables. the specification of these intentions is called a conceptual model. it contains conceptual variables end research questions about conceptual reletions emong them. this conceptual model is trensformed into e research plan for the collection of empirical data. this plan contelnins steps like sampling  measurement  etc. the transformation is usually done by the researcher  but this may lead to bugs in the reseerch plan. abstrect properties of the research plan -the underlying design- determine which reseerch questions can be investigated and by which analysis model the data should be analyzed. a bug is a property of the reseerch plan that prohibits a clear end correct answer to e specific reseerch question. the expert produces en advice which consists of an analysis method and identified bugs in the research plan. 
　　the domain lexicon is collected from verbal data and textbooks. it provides e vocabulary to communicate with experts  end to identify the domain specific concepts. these concepts need to be structured in hierarchies. one approach is to use experts or textbooks to identify the generel concepts at the top. however  such en approach is naive  because these structures rather reflect the support knowledge that is used for e theoretical justification of statistical designs than the we/ the expert uses concepts while performing his task. initial structuring is provided by the knowledge objects specified by the functional analysis and knowledge objects which ore the interfaces between knowledge sources in the conceptual structure of the reasoning. during the analysis many new concepts were added  because statistics textbooks lack concepts relevant to application. 
     in the task analysis en initial template interpretation model was selected  derived from e problem solving system in the domain of thermodynamics  jansweijer et. el  1 . these domains hove in common that an informal problem is trensformed into e formal structure to which formel principles can be applied. the template model describes a first stage orientation in which the process sketch obtains an overview of the informal problem situation which is transformed by schematize into e formal problem statement. the second stage solves the problem and is followed by en evaluation stage. 
　　the thinking aloud protocols were especially useful for identification and refinement of the knowledge sources in the 
successive interpretation models. 
ill conceptual structure of tasks and system design 
　　an overview of the interpretation model for the orientation stage 1s presented in fig. 1  more details can be found in the 
	p. de greet and j. breuker 	1 
knowledge acquisition document  degreef  1  . 
fig. 1: tasks in the orientation stage.  ovals represent types of knowledge sources  rectangles represent types of knowledge objects.  

     the control of the problem solving process is guided by a plan that cen be expressed es e tree. a generel plen for execution of these tasks is shown in table 1. 
table 1: tasks in the orientation stage of statistical consultation. 
orientation 
sketch 
specify conceptual model 
specify operational definitions 
update research plan 
schematise 
classify operational variables 
abstract the design-structure 
     a knowledge source may modify the plan. for instance  specify operational definition may run into trouble  because the client cannot answer e question or because the currant information leeves en embigulty about the research plan. then  before finishing end returning control  it may create e new subplan  specify research plan. such change of strategy was frequently observed with human experts. another instance: classify operational variables may conclude that specific properties of certain operational variables prohibit the investigation of a specific relation in the conceptual model. then a knowledge source of the desiqn-bug type 1s inserted as a new subplan. design-bug will communicate the conclusion to the user and change or augment the conceptual model. here humen experts often try to improve the research plan. since this is plan is usually executed end done  this is of little practical value and need not be included in the system. the final product of the orientation stage is a formal problem statement. the next stage selects e model that defines which relations can be investigated and which statistical models should be used. there exist algorithms to do the actual assembly of statistical analysis models  provided that certain assumptions about the dependent variables can be made. if not so  a decision tree 1s 1 	p. de greet and j. breuker 
sufficient to find on assumption free analysis technique  if there exists an applicable one. 
　　a most critical task for a consultation system is obtaining the correct problem statement from the client many misinterpretations may occur  as is shown in e number of protocols. a misinterpretation is usuely discovered by the client after hearing a solution from the expert this causes a very complex process of debugging the problem statement  conceptual model and/or research plan  and adaptation of the solution  the advice . the system con be made less complex if it lets the user evaluate the correctness of the problem statement before attempting to solve the problem. for evaluation by the user and subsequent refinement and debugging of the problem statement we propose the system displays graphical structures which can be edited by the user. for the conceptual model  e labeled graph can be used. for the research plan it cen use f ow diagrams as proposed by 1  keefe  1 . 
　　the system design discussed so far  is suitable for users with little but sufficient experience in statistics. a user with insufficient knowledge will not be able to answer all questions. more sophisticated users may be bored or irritated  not being able to use any shortcuts. although a system like this will be useful as a front end to a set of statistical software packages  there is still something to be desired: adaptation to users with different levels of statistical knowledge  exploration of bugs in the research plan  use of the system es a helper in selecting a design and making a research plan  insteadof being only e critic   etc these properties have nothing 
to do with the statistical prontom-solver but with the mnrtriityof consultancy it is desirable that a consultant has qualities of an intelligent tutoring system and is also a capable research designer and planner. 
iv implementation 
　　we have implemented e small prototype. it can solve correlational and experimental problems following the plan outlined in table 1 end two other plans. the concepts ere pert of a klone structured inheritance network  brachman 1   implemented in prolog. the interpreter language which can be translated to prolog is borrowed from the pdp problem solver  jensweijer el el 1 . after six men months of knowledge acquisition  it took four weeks each for two computer science students to implement e shell for the prototype using the pdp tools and the knowledge acquisition document in de oreef  1 . the prototype does not yet contain user editable graphical displays. 
v conclusions 
　　the case study shows that the methodology is viable and that e separation between analysis and implementation is possible. the result of analysis is a knowledge acquisition document which provides a sufficient basis to enable two students unfamiliar with the statistical domain to implement e prototype in short time. 
　　the methodology is en alternative to the method of rapid prototyping  in which a knowledge engineer very quickly mokes architectural decisions and builds e prototype. the prototype is shown to the expert who is expected to provide useful criticism. then the prototype is changed or a new system is built this case study used e methodology in which major commitments to architecture end implementation efforts ore postponed until it is cleer what has to be implemented. 
　　a conceptual structure of o task can be evaluated by an expert in much the seme way as a prototype. the difference is that the evaluation is focussed on the the problem solving process; not on the performance of a system. moreover  changing a conceptual structure takes for less effort  then debugging e prototype system. we hove experienced that this method of obtaining feed back on the interpretation of expertise in action 1s less time consuming and probably as effective es evaluating a prototype  whose inner workings may appear rather obscure to the expert. 
acknowledgments 
　　we went to thank the domain experts for shoring experience and thougts  kees buisman and dick v.d. viugt for their work on the 
prototype  end robert de hoog end bob wielinga for valuable edvice. 
