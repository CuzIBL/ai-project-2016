 
     it has been known since 1 that for a formula to be a single axiom for the equivalential calculus its length must be at least 1  and that single axioms of this length exist. also  a single axiom of length 1 must have the two-property. there are 1 formulas with the two-property and of length 1. with computer assistance  the authors 
have shown that 1 of these 1 formulas are not single axioms. the main object of this paper is to outline the methods used to obtain these results. this paper logically precedes a recent paper of l. wos which announces computer-assisted proofs that a further 1 of the 1 formulas are not single axioms  and should serve as an introduction to the method of schemata mentioned in that paper. 
1. the equivalential calculus  condensed detachment  and the two-property 
     we consider formulas built up from variables p  q  r  ... and a single binary connective e  and written in polish notation. the  length  of such a formula is the number of occurrences in it of e's and variables. such a formula is called an  equiva-
lential tautology  if it holds in the logical 
matrix 

i.e. if this matrix satisfies it. for example  epp and eepqeqp are equivalential tautologies  but epq and eepqepp are not. the matrix  1  is essentially the truth table for material equivalence 
 p- -q & q- -p  	 in polish notation: kcpqcqp  . 
     a set s of equivalential tautologies is called a  deductive axiomatization  of the equivalential calculus ec if every equivalential tautology is derivable by the rules of substitution and modus ponens from the formulas in s; if s has just one element x then x is called a  single axiom  for ec. it is known  kalman  1  theorem 1  that a formula is derivable from formulas s by substitution and modus ponens if and only if it is a substitution instance of a formula derivable from the formulas s by condensed detachment. here condensed detachment is the rule which  when applied to two formulas x=euv and y having no variables in common  produces the formula w if u and y are unifiable and w=o v  for some most general unifier o of u and y; w is then unique to within variance  i.e. a formula w' may be produced by applying condensed detachment to x and y if and only if w' is a variant of w   and it is customary to write w dxy ; if x and y have variables in common  and y' is a variant of y having no variables in common with x  then dxy is defined if and only if dxy' is defined  and if dxy' is defined we set dxy dxy' . thus  if s is a deductive axiomatization of ec  and t is a set of equivalential tautologies such that every formula in s is a substitution instance of a formula derivable by condensed detachment from the formulas in t  then t will be a deductive axiomatization of ec; in particular  if x is a 
     single axiom for ec  and x is derivable by condensed detachment from the equivalential tautology y  then y will be a single axiom for ec. it is known  cf.  lukasiewicz  1  ¡ì1   that a shortest single axiom x for ec has length 1  and has the  two-property   belnap  1  that every variable which occurs in x occurs exactly twice in x; also  eepqeerqepr is known to be a shortest single axiom for ec  lukasiewicz  1 . it is easily seen that there are 1 formulas of length 1 with the twoproperty. however not all of these 1 formulas are single axioms for ec; for instance  the formula eepqeeqrepr is not a single axiom for ec. the 
main object of this paper is to discuss how computers may be used to help show that formulas such as eepqeeqrepr are not single axioms for ec. 
1. theorem-generating program tg 
     we illustrate in ¡ì¡ì1 and 1 how a theoremgenerating program tg  which was originally developed as a tool for showing that particular formulas are derivable from others by condensed detachment  was used to show syntactically that particular formulas are not so derivable. 
     given a finite set s of formulas  the program tg generates the set th s  of all formulas which may be derived by condensed detachment from the formulas in s. in general  th s  is infinite; if th s  is finite  then s is not a deductive axiomatization of ec. we illustrate in ¡ì1 how this may 
be exploited to show syntactically that 1 of the 1 formulas are not single axioms for ec. in these 1 cases  using minimal instead of arbitrary substitutions enables us to reduce an infinite set of derivable formulas to a finite set. 

1 j. kalman and j. peterson 
     although tg is not an interactive program  the user can specify changes  to take place during a run  in certain parameters which control the length of retained formulas and how formulas are selected to be used in subsequent condensed detachments. during each run  statistics of how many condensed detachments have failed and how many have produced formulas which were too long to retain are regularly produced. at the end of each run  a list of all the derived formulas  sorted by length and lexicographically for formulas of the same length  is 
printed out. with these aids  the user can sometimes discover syntactic properties possessed by each of the formulas in a particular set th s . we illustrate in ¡ì1 how this can be exploited to show 
syntactically that 1 of the 1 formulas are not single axioms for ec. 
1. first syntactic method: finiteness 
     consider for example the question whether the formula x = eeepqerpeqr is a single axiom for ec. 
when the formula x is given as input to the program tg  the formulas dxx=y=eeepqpq and dyx=z=epp are generated; the program also determines that dxz=z  dzx=x  dzy=y  and dzz=z  and that all other combinations dst with s  t e {x y z} are undefined. 
since in particular the known single axiom eepqeerqepr for ec is not a substitution instance of any of x  y  or z  it follows that x cannot be a single axiom for ec. 
     in general we may say that a formula x is  of finite type fn  if  to within variance  the set th {x}  of formulas generated by x is a finite set with n elements; thus eeepqerpeqr is of finite type f1. using tg  we easily find that 1 of the 1 formulas are of finite type fn for some n = 1  1  1  1  1  1  1; since a very large number of unifications is involved  computer assistance is invaluable here. it is possible that more than 1 of the 1 formulas are of finite type. 
1. matrix-testing program mt 
     in showing that particular formulas are not single axioms for ec  it is useful to have available a program mt which  given a logical matrix such as  1  and a particular formula such as eepqeqp  determines whether or not the matrix satisfies the formula. more generally  given a partially completed matrix m and a finite set s of formulas  mt can search for all ways  if any  of completing m so that it satisfies all the formulas in s; in particular  if m is the void matrix of a 
     given size  mt will search for all matrices of that size which satisfy all the formulas in s. 
     the purpose of the program mt is similar to that of the interactive program tester written by nuel d. belnap  jr. at the university of pittsburgh and now in use by logicians at a number of universities in the united states  britain and australia. 
1. semantic method: logical matrices 
     a logical matrix m is said to be  normal  if it has the property that whenever a  b e m are such that a and eab are designated  it follows that b is designated. for example  

is a normal logical matrix;  1  is essentially the truth table for material implication. the matrix  1  is also normal. it is known that a formula x is not a single axiom for ec if and only if there exists a normal logical matrix m  possibly of infinite size  such that x holds in m but some equivalential tautology  e.g. some single axiom for ec  does not hold in m. for example  easy calculations show that the formula eepqeeqrepr holds in the matrix  1   but the formula eepqeerqepr does not; it follows that eepqeeqrepr is not a single axiom for ec. 
     with the help of a collection of 1 logical matrices  the authors have shown that  of the 1 - 1 = 1 formulas remaining for consideration after eliminating 1 formulas of finite type  1 are not single axioms for ec. of the 1 matrices  one  the matrix  1   is of size 1  1 are of size 1  1 are of size 1  1 are of size 1  and one is of size 1. 
     the program mt is very useful for checking these results  but has not been of great use in finding the matrices: the 1 matrices of sizes 1  1  and 1 were in fact all found by hand. there are 1 matrices of size 1  and a straightforward search to find which of these satisfy a given for-
mula of length 1 with the two-property would be far beyond the capacity of mt running on existing computers. 
1. second syntactic method: form of generated formulas 
     of the 1 - 1 = 1 formulas now remaining for consideration  peterson showed how 1 could be rejected as single axioms for ec by syntactic argu-
ments based on the form of the formulas generated when these formulas are given as input to the program tg. 
     consider for example the question whether the formula x=epeeepqeqrr is a single axiom for ec. examination of the output when x is given as input to the program tg reveals that  apart from the original formula x  all the formulas generated are of the form 
 1  	eeeysestt  
where y is x or a formula of the form  1  in which the variables s and t do not occur. in fact  it is easily seen that dxx-eeexsestt  and that if z is a formula of the form  1  in which the variables so 

and to do not occur then  i  dxz=eeezsoesototo  
 ii  dzx is undefined  since eeysest and x are not unifiable   and  iii  if z1-eeey1esititi then 
dzzi is undefined  since eeysest and z  are not unifiable . since the known single axiom eepqeerqepr is not a substitution instance of x or of any of the formulas  1   it follows that x is not a single axiom for ec. 
     peterson observed that similar arguments also apply to a further 1 of the 1 formulas not rejected by the methods of ¡ì¡ì1 and 1. the method of schemata used by the argonne automated reasoning group in studying ec  cf.  wos  1  p.1   also involves studying the possible forms of generated formulas  but in situations more complex than that illustrated above. 
1. the remaining 1 formulas 
     there are proofs in the literature  lukasiewicz  1; peterson  1; kalman  1  that 1 of the remaining 1 formulas are single axioms for ec  but after allowing for these there s t i l l remain 1 formulas whose status the present authors were unable to settle. recently  the automated reasoning group at the argonne national laboratory has announced that 1 of these 1 formulas are single axioms for ec and the remaining 1 are not  cf.  wos  1  p.1  . proofs that 1 of these formulas are not single axioms for ec are given in  wos  winker  veroff  smith and henschen  1 . 
1. conclusion 
     with the help of the relatively straightforward programs tg and mt  we succeeded in 
classifying almost 1% of the 1 formulas with respect to the status of being a single axiom for ec  i.e. in isolating about 1% of these formulas whose status seems the most difficult to determine. moreover  it appears likely that the methods of finiteness  ¡ì1  and matrix-testing  ¡ì1  described in this paper  or essentially equivalent methods  would be employed in any study of all the possible shortest single axioms for ec  and the method of examining the form of generated formulas  ¡ì1  is closely related to the method of schemata employed by the argonne automated reasoning group in completing the classification of the 1 for-
mulas. our programs probably did not have the capacity to carry the task of classifying these formulas to final completion  cf.  wos  1  p.1  . 
     we believe that mechanical theorem-proving using unification-based inference rules such as condensed detachment and resolution  and the study of hilbert-type sentential calculi like the equivalential calculus  are two subjects which have much to offer each other. the theorem-provers can be genuinely useful tools in studying the calculi  and the calculi provide a promising field of application for the theorem-provers  cf.  kalman  1  ¡ì1  . in such mechanical studies of other calculi  the methods illustrated in this paper should find further applications. 
j. kalman and j. peterson 1 
