 representation of the manipulator and task internal to the computer; 1  he can request the execution of certain moves-simple ones like move manipulator angle a plus-two degrees  or complex ones like search region r for part p and assemble it with 1; 1  he can rerruest that certain transformations available within the computer svstem be applied to data and that the 

-1-

results then be displayed to him. 
       the block labelled  task model  is itself worthy of far more discussion than can be qiven it in the present paper emphasizing the nature of the human operator's supervisory control  and i t s i n ternal organization is discussed much more fully in a separate paper by whitney submitted for this conference.1 in summary  however  one can say that if the positions in six-dearees-of-freedom of a l l rigid elements of both manipulator and environment are represented by a sinqle vector  then any interactive movements of the manipulator with the environment can be represented by a series of vectors or by a trajectory in vector space. in theory  then  optimal control strategies are those for finding minimal cost trajectories from i n i t i a l state to goal state in the state space.1 
       while a finely reticulated state space for a system having many motor states  many sensor states  and many environment  manipulated object  states is clearly far too large to be useful for overall control  the state space model provides a formal norm or baseline to which other techniques can be compared. state space models of a tractable size can be used to perform simple manipulations  or to perform parts of more complex ones. in anv case an important practical problem concerns the definition of what are rigid elements  what are costs  and what discrete resolution is appropriate to represent the real world in the state snace 
mode1. 
       a simple example of interaction of the human operator with the task model is described in a subsequent section of the paper. 
       it is important to note that the executive controller oversees manv  automatic  feedback loops and interactions which are not under direct control by the human supervisor. as indicated by dotted lines and letters in fig. 1  the executive controller mediates direct or straight throuqh remiests for  a  sensory analysis of the environment or for  b  task model experiments. imperative move commands automatically call for  in sequence   c  search and identification of objects in the environment   d  task model experiments  and finallv  e  manipulator movements. 
       the executive controller mediates  f  the feedback from the exteroceotor actuators  actually the interoceptors of the exteroceptor subsystem  analogous to the position sensors of the muscles of the eyel  and the  g  signals from the task model to control where to look next. 	similarly  h  the feedback control of the experiments of the task 
model or internal representation of the manipulator as well as  i  the feedback control of the actual manipulator are handled by the executive controller. 
       the task model is updated by  j  the sensed state of the environment and  k  the sensed state of the manipulator. knowledge of  1  the sensed state of the environment and  m  the results of the task model experiments are automaticallv used in optimal or sub-optimal control of the manipulator. a significant part of this latter function is the decision as to what individual angular changes of actuator movements within the manipulator w i l l achieve ths f i n a l desired position. the reverse transformation from component angles to gross configuration is easy trigonometry but the required transformation from j o i r t or hand position to component angles can reauire complicated matrix inversions  or approximation methods  or worse yet  in the case of redundant degree-of-freedom manipulators    be undefined. this specific problem has been the subject of several previous papers. 1 '  1 
       finallv the operator can ask for a varietv of information  n  to be displayed to him. the orqanization of this aspect of the system is probablv very important but  since as yet no experiments have been done emphasizing i t   it is l e f t indeterminate. 
       note that the executive controller  the task model  the command console interpreter and also the display boxes must a l l be implemented larcely by digital logic. which computer functions belonq to the  local  computer and which belong to the  re-
mote  computer are unsolved engineering problems and w i l l surely depend upon  among other thinqs  the specific task context  the amount of telemetry processinq reouired for signals of the necessarv precision and the l i k e . 
human intervention in computer control procedures 
       because of the economic limits on multi-dimensional state space or other formal models of whole manipulation tasks referred to above  a primary goal of our research is identification of the ways human operators and computers can interact in planninq and executing manipulation tasks. this w i l l be presented bv example. 
       fig. 1 represents a manipulation task in a reticulated 1 by 1 unit space. the manipulator jaws j and j1 and the blocks a and b are each one 
unit on a side and a l l moves of blocks and jaws must be an integer number of units in extent. 	the qoal is to move the jaws so as to get block a to square a1. 	neither blocks nor jaws can occupy a crosshatched square  wall . 	the jaws move horizontallv as one  and vertically j* moves relative to j over four spaces from closed to wide open  they are i l l u s trated one space open   	the jaws can grasp a block or push i t ; in order to grasp a block the jaws must f i r s t straddle it with one unit space on each side. 
       table 1 qives an arbitrarv set of primitive functions and tests which can be concatenated in various ways to perform tasks such as the one in our example. the functions and tests are organized into three subroutines grasp  move and push. within each subroutine a series of tests is madei for a yes answer the arrow to the right calls for an action and a return to the previous test or a jump to a d i f ferent subroutine; for a no  answer the downward arrow calls for the next indicated test or action. in moving a block from one position to another a qeneral rule is f i r s t to try to move bv grasping the block  and if there is no room for that to trv to move by pushing the block. 
       the task of getting a to a  is s t i l l too d i f f i c u l t for the subroutines of table 1 to handle  and 
reauires the human operator to intervene at least often enough to break the task into three elemental 
move b to b*  return jaws to l e f t side of w a l l   move a to a ' ; by intervening a b i t more often a considerable saving can be made in use of subroutines  
a completely different procedure is for the 

-1-

human operator to provide the defining information for a state space  as referred to earlier in this paper and as described formally in a companion paper submitted for this conference by whitney .1 given three objects  two blocks and a set of jaws  which can move to any position on a 1 x 1 g r i d   a vector space of size 1.io1.io1 is required. since j' can assume one of four states relative to j we need a total space of 1 states. we assume that an i n i t i a l and terminal state  that i s   i n i t i a l and terminal nositions of jaws and blocks in the 1 x 1 grid  having been specified  an algorithm exists for getting from one to the other in optimal or at least satisfactory fashion  details of which are given by whitney. 
       if the operator intervened and called for a 
       series of three i n i t i a l to terminal state trajectories  b to b   return jaws to l e f t   a to a 1    then the state space required for each subtask 
would be considerably smaller than that required for the whole task. for this example b to b' would reouire at most consideration of a l l jaw states and a l l b states but no a states  thereby reducing the state space a factor of 1 . return of the jaws would require no a or b states  netting a reduction by 1. a to a' would net a reduction by 1. clearly  the sum of these state spaces  even if a l l of the 1 x 1 physical grid is allowed for each task element  is much smaller  1   1 + 1. 1 ¡ö 1  than the 1 state space rerruired for the whole task. i f   in addition to judgino that certain objects can be eliminated from certain subtasks the human operator also judges that certain regions of the 1 x 1 grid can be eliminated from consideration  for instance in returning jaws from the b' neighborhood to the l e f t side of the 
wall  then further reduction can certainlv be made. to make our point about the computational saving which accompanies intelligent intervention by the human operator permit us to digress from our example of fig. 1. suppose  fig. 1  that for a 1 x 1 grid two objects x and y must interact. at the outset suppose we  the human operator  know that a and b must interact in a oeneral wav within the bounded area 1  then must pass together from area one to area two while located within the 1 overlap area  interact within area 1  similarlv pass to 1  interact in 1  pass to 1 and interact in 1. it would not be necessary to consider a state plane of size  1  for object a combined with  1  possibilities for b  or 1. this is because a and b are never simultaneouslv in d i f f e r ent zones except when together in the overlap areas. thus a state space of  1     1  accomodating a l l a-b combinations in zone 1 overlapping a state space  1     1  in zone 1 similarly overlapping a  1     1  zone 1 state space which in turn overlaps a  1     1  zone 1 state space provides for an optimal trajectory to be selected from among a l l possibilities. the total state snace is 1  less than 1% of the 1 state space. in general  a task involving n objects  each of which can assume any one of s states  requires a state space of s n . breaking the task down into m subtasks in the i t h of which only ri of the objects can move and each is limited to o i states renuires a state space ofs 
this w i l l   except in unusual circumstances  represent a savinqs in both computational time and storage  since ri=n and 1 i = s   
       it is our purpose here to compare the savinqs in calculation and storaqe; i . e .   the reduction in the total number of states  resulting from specification and delimitation of either heuristic procedures or formal state spaces. we presume that a human operator is the one who intervenes  sets appropriate qoals and calls appropriate heuristic routines  or that he bounds the state space-at least we do not understand how a hiqher level com-
puter proqram can do i t . 
       returning to our f i r s t example  table 1 shows various elements of the task of fig. 1. task elements 1 through 1 are possible parts of the whole task  move a to a1  and are not mutually exclusive. task element 1  move b to b'  incomorates the rule  try movinq by graspinq before trying pushing.  this procedure would automatically call subroutines in the order 1 1 and u t i l i z e 1 moves. for comparison  if the operator saw that pushing should be tried f i r s t   only heuristic 1 would be used and remiire 1 moves. the same objects are reauired for the state space procedure in either case and we allow  conservatively  a 1 1 . 1 space. in either case the state space procedure can be expected to calculate that a 1 move nush is the best. 
       task elements 1 and 1 are simpler elements  so simple that a human operator miqht be expected to call for the actual point to point move path  desiqnated m  instead of calling a subroutine. with either of these the grid space required could be qreatlv restricted. 
       task element 1 could be included as part of 1  1 or 1 thouqh here it is given separately. element 1 actually illustrates a cascade of four subtasks  move a to a1  then to a1  then to a1  then to a '   . the subgoals are achieved at the slash marks in the subroutine sequence. this series of heuristics would result if a human operator i n i t i a l l y thought a shortest path was a to a1  then to a1  then directly to a*. but after gettina to  or committing the program to  a1 he would realize  or have to have pointed out to him  that with a at a1 he has not l e f t room for regrasping a and w i l l have to set a new subgoal a1 to which a can be pushed and then grasped or pushed to a*. if the human operator had thought ahead he would have set a1 and a1 as subgoals  and as indicated a shorter string or heuristics would be necessary. again  by state space procedure  the same  but a verv larae  state space would qet from a to a' automatically. 
       as a further example of how the operator can delimit the state space  suppose for task element 1 he recognized that from a1 or a1 to a1 or a1 the jaws would have to be closed. 	then the state space for this portion of the task need consider only 
block a over a 1 grid and the jaws j over a 1 q r i d . let the jaws and a operate open or closedjawed over the grid b wide and ten high at the l e f t for the a to a1 or a1 subtask and a over a grid five wide and ten high at right for the last part. 
this then renuires a state space  1*1-1  +  1.1  +  1.1.1  - 1 in size. this 

-1-

compares with the 1 state space otherwise needed. the situation is similar to that of fig. 1. 
       the task elements 1  1  1 and 1 provide a finer breakdown of the a to a' subtask. 
       below the double line in table 1 are shown several ways of accomplishing the whole task; in each case are shown the total strinq or heuristic subroutines and implied moves using that procedure; the total state space is also indicated with the implied moves for that method. 
       indices of efficiency for heuristic or state space techniques such as these can be formed by making a ratio of the number of moves  number of routines called  or size of state space for a qiven procedure  to the corresponding number for a normative heuristic or brute force procedures such as the f i r s t whole task procedure given. note that the last and most efficient procedure reauires the human operator to observe that block b may be pushed out of the way by block a without need to modify the a to a' procedure. much more dramatic efficiencies can be demonstrated for human intervention in the state space techniques when the nhvsical space is more finely reticulated due to the 

rule stated above. heuristic techniques are by nature context dependent and not much generalization can be made. 
conclusion 
       a laboratory simulation and some empirical evidence have been described which demonstrate the advantages of havinq human operators operate as supervisory controllers of remote computer-manipulators  where the man sets subqoals and sets procedural constraints and the machine does the rest automatically. many practical advantages of such man-machine interactive systems are foreseen to speed ud remote or monotonous tasks  avoid the costs and risks of supporting man in hazardous environments  and provide a true f l e x i b i l i t v of exploration and manipulation not near to achievement by completely autonomous machines. 
