 
a method to control the application of equality derivation rules in an automatic theorem proving system is presented. when handling equality in the search for a proof of a theorem two main problems 
arise: 
1  to obtain a control mechanism for the search and application of useful equality derivation steps in order to support global strategies which plan and control the whole proof  thus conducing to an efficient and complete proof procedure. 
1  to find proper equations rendering two terms unifiable. 
these problems are solved by combining the clause graph method and the mparamodulation-if-needed  idea by introducing morris' e-resolution into the clause graph proof procedure. the necessary equations to form possible e-resolvents are searched for in the initial graph and are inherited after-
wards. the search space for possible e-resolutions will be reduced by exploiting constraints using the 
information in the clause graph. 
1. introduction 
the use of equality axioms in a theorem prover based on the resolution principle has turned out to be very inefficient because too many additional resolution operations involving the equality axioms are possible. this problem is well recognized in the field  see  rw1    si1    mo1    br1    sh1    hr1l  di1  . 
a way out is the direct incorporation of equality into the proof procedure. one of the various methods proposed with this aim in mind is paramodulation  rw1 : with one additional rule of inference  the paramodulation rule  the equality axioms become superfluous except for the reflexivity axion-. but paramodulation  i.e. the replacement of terms by equal terms  can be applied almost everywhere in a clause set and therefore paramodulation alone s t i l l does not solve the problem of  how to handle equality in an automatic theorem proving system   atp . 
strategies or methods are required to control the enormous amount of potential steps and to make sensible use of the paramodulation rule. 
a promising control mechanism may result from the  paramodulation if needed  idea  which states that the paramodulation rule should only be used to reduce differences between potentially complementary unifiable literals  such that an inference step by resolution becomes possible. two literals  in diffein clause graphs 
blasius 
university of karlsruhe 
rent clauses  are called potentially complementary unifiable  if they have the same predicate symbol and opposite sign. 
there are several methods known to realize the  if needed  idea  e.g.  sh1    hr1    di1   the most explicit realization of which is morris' e-resolution  mo1 . an e-resolution step can be regarded as a sequence of paramodulation steps such that two potentially complementary unifiable literals become unifiable  followed by the appropriate resolution step. this could be an optimal realization of the  if needed  idea and potentially one of the bestways of handling equality in an atp because equations are only used when needed  i.e. to remove the differences between terms which prevent a desired resolution step. furthermore the equations are only used if it is possible to remove such differences completely. 
an implementation of a proof procedure based on e-resolution however is unfeasable without additional search and control mechanisms because two main problems remain: 
1  equality of two terms with respect to the given set of equations is in general undecidable and therefore it is generally impossible to continue searching for equations until the potentially complementary unifiable literals under consideration are unifiable  or definitely not unifiable . hence the first problem is to organize the search for equations and the application of e-resolution in such a way that the proof procedure is effi-
cient and complete. the proof procedure based on e-resolution presented by morris  mo1  is designed to ensure completeness  an1o  rather than efficiency. 
1  before an e-resolution step can be executed the necessary equations have to be found and an unsophisticated and exhaustive search for such equations is prohibitively expensive because of the enormous search space. 
in this paper we are mainly interested in the problems of an efficient search by using ideas from the 
paradigm of the connection graph proof procedure  ko1 . 
the connection graph procedure introduced by kowalski in 1  ko1  represents all possible resolution steps by links  connections  between the complementary unifiable literals. initially  all possible links are created to build the initial 

graph  but afterwards the new links are inherited during the search for a proof. hence there is no additional search for the potential application of the resolution rule since all the necessary information is present in the graph structure  i.e. in the links. the executed operations are remembered by deleting the corresponding link and powerful deletion rules are known to reduce the clause graph. in  sw1  the ideas of the connection graph proof procedure are extended to handle paramodulation ac well: in the paramodulated clause graph procedure 
 pcg-procedure   p-links  paramodulation links  are defined to represent possible steps by paramodulation and r-links  resolution-links  represent possible steps by resolution. 
in this paper the ideas of the  paramodulation-ifneeded  paradigm and the ideas of the pcg-procedure are combined essentially by incorporating e-resolution into the pcg-procedure. this combination provides an efficient search procedure for possible e-resolutions and a control mechanism to direct the search for e-resolutions thus solving the two problems 1  and 1  mentioned above. 
paramodulation and resolution concern  at most  two clauses  whereas e-resolution is a generalization of resolution concerning many clauses  therefore new structures  called paths  will be used to represent such macro-operations. a path represents a sequence of p-links and contains the necessary information to perform the respective macro-operation. during the search for a proof it is possible to select links as well as paths for the derivation of new clauses. in  b1  er-paths  e-¡êesolutionpaths  representing possible e-resolution steps are defined. an er-path connects two potentially complementary unifiable literals and the equations which make both literals unifiable. 
the above stated problems of e-resolution may then be rephrased as: 
1  the integration of er-paths into the proof procedure 
1  the problem of searching for er-paths. 
all notions used but not defined in this paper are consistent with  ko1    lo1    sw1   e.g. clause  resolution  connection graph proof procedure  link . 
1. integration of paths into the proof procedure 
just like r-links and p-links paths should also be searched for and created at the beginning  when the initial graph is formed  this information should then be inherited during the subsequent search for a proof. 
but because of the undecidability of equality of two terms not all the necessary er-paths can be found in the initial graph. for that reason a new link type  per-link  potential e -resolution link  connecting potentially complementary unifiable literals is introduced into the graph. these perlinks provide the top-level information for the proof procedure to search for the corresponding 
k.-h. blasius 1 
er-paths  and during this search three cases can occur: 
a  all possible er-paths corresponding to a per-link are found. 
b  it is detected that no er-path for a given per-link exists. 
c  the search for er-paths is stopped because of space or time limitation. 
for each of these cases different operations are performed: 
a  if all er-paths are found  then the per-link is replaced by the er-paths. all possible ways to remove the differences between the literals of the per-link are known and given by the er-paths. if an er-path is selected in the proof  then the e-resolution corresponding to the er-path is executed. 
b  there exists no er-path between the literals of 
the per-link  i.e. the differences of the respective terms cannot be removed completely and therefore the per-link is deleted. 
c  if the search is stopped and no  or not all  er-paths are found  then the per-link remains in the graph. if a per-link is selected  then an operation to reduce the differences between the literals of the per-link is executed using the information obtained from the incomplete search. 
per-links are treated as a special case and are only used in global strategies as auxiliary links which control the search for paths and enable sensible operations to reduce differences of potentially complementary unifiable literals as compensation for the lacking er-paths  case c above . 
during the search for a proof er-paths as well as 
per-links are inherited and used to compute new er-paths and new per-links. hence each er-path used in the proof was already present in the initial graph or has been inherited from an initial er-path. 
this method of using er-paths has three main advantages: 
 i  er-paths and per-links contain important information for global strategies which plan and control the whole search for a proof  see  besshw1    ss1    oh1  . this information is particularly useful because it is already available at the beginning of the proof. 
 ii  an efficient handling of equality is possible  because the search is done in the small initial graph only. furthermore only a few paths have to be searched for; most paths are found by inheritance. 
 iii  strong additional deletion rules are available which greatly reduce the potential number of paths as well as the size of the graph. for example in case b  above the deletion of a per-link may lead to a pure clause just as for the usual clause graph proof procedure  

1 k.-h. blasius 
thus causing the well-known snowball effect of deletions to start. 
1. the search for paths using constraints 
an unsophisticated and exhaustive search for er-paths is prohibitively expensive because of the very large search space. the size of this essentially depends 
on the number of equations  ne  in the clause set  on the average number of subterms  ns  in a literal  and on the ratio  r  of positive to total unification tests for possible equality replacements. finally it also depends on the search depth  sd . 
a breadth first search procedure  like that of morris  mo1  must execute   1 * ne * ns * r  *l/r  calls of the unification algorithm. also it has to sd carry out  1 * ne * ns * r  equality replacements in order to get all possible e-resolvents for one per-link. for example  if a clause set has ten equations  an average of five subterms per literal and a unification success rate of 1%  then a search depth of ten steps requires 1 calls of the 
to this end several conditions can be stated which are necessary but not sufficient for the compatibility of an en. such constraints are checked step by step thereby drastically reducing the search space. 
two examples will show possible reasons for the incompatibility of equality-nets. 

in example 1 the combination of the p-links 1 and 1 is impossible because their unifiers  x  - a  and 
 x  - b  are incompatible. in example 1 the p-links 
1 and 1 are incompatible  because after paramodula-

unification algorithm and 1 replacement operations. to make the situation worse morris  mo1  observed that in usual clause sets for most per-links there does not exist an e-resolvent  but since the search must be done completely most of the effort is spent in vain. 
in order to obtain a practicable search procedure the enormous search space has to be reduced. in the following we propose a reduction of the search space 
by exploiting constraints. the constraints use the information contained in the p-links. 
for a clause graph  s  and a per-link there are usually many p-links connecting the effective equations and the two literals. if these p-links are visualized graphically  certain structures emerge  
e.g. an equality-chain in the simple example 1. but in most cases the structure is a more complex equality-net as example 1 demonstrates: 

an equality-net  en  and the compatibility of an equality-net are defined in  b1  as a special graph structure of p-links. each compatible equalitynet builds an er-path and represents a possible e-resolution step. conversely there exists for each possible e-resolution a compatible en in the graph which builds the appropriate er-path. these conditions are ensured because the pcg-procedure is complete  sw1 . in order to find the er-paths the compatible equality-nets must now be searched for. tion on link 1  link 1 cannot be inherited to the paramodulant   pb   since the access depth does not coincide. 
some of the constraints to be used are: 
1  in a compatible en all unifiers of the p-links concerned must merge to one mgu  i.e. the unifiers must be compatible  provided a proper variable renaming has been carried out . 
1  in a compatible en: for each maximal equalitychain in the en the sum of all access depths must be equal to zero and each partial sum must be less than or equal to zero. 
1  in a compatible en  no chain of two links in the en is incompatible  i.e. if an equality-chain of length 1 is incompatible  then each en which contains this equality-chain is also incompatib -
le.  note: incompatible is defined in  b1  and is different from not compatible.  
the search procedure can be improved by introducing additional constraints. 
although such constraints are powerful it is not expensive to test them  for example only some integers must be added to detect the incompatibility of an en caused by condition 1. 
after reduction of the search space the most promising ens are selected for a full compatibility test and the surviving candidates are used to build the er-paths. 
the method outlined here of handling equality is described in  b1  where the formal notions are developed and additional results are presented. this method is presently being implemented and evaluated as part of the markgraf karl refutation procedure  besshw1    oh1 . 

literatur 
 an1o  	r. anderson: 
completeness results for e-resolution. 
 b1  k.h. blasius: 
equality-reasoning in clause graphs. 
universitat karlsruhe  interner 
bericht  to appear   br1  d. brand: 
proving theorems with the modification method. 
siam journal of comp.  vol 1  no. 1  
1  di1  v.j. digricoli: 
resolution by unification and equality. proc. 1th workshop on automated 
deduction  1  texas  hr1  m.c. harrison  n. rubin: 
another generalization of resolution. jacm  vol 1  no. 1  july 1  ko1  r. kowalski: 
a proof procedure using connection graphs. 
jacm 1  1  1  lo1  d. 	loveland: 
automated theorem proving: a logical basis. 
north holland  1  mo1  j.b. morris: 
e-resolution: an extension of resolution to include the equality relation. 
proc. ijcai  1  1  1  h.j. ohlbach: 
the markgraf karl refutation procedure  the logic engine. 
universitat karlsruhe  interner bericht  
1  rw1  g. robinson  l. wos: 
paramodulation and tp in first order theories with equality. 
machine intelligence 1  1  sh1  r.e. shostak: 
an algorithm for reasoning about equality. 
cacm  july 1  vol 1  no. 1  s1  e.e. sibert: 
a machine-oriented logic incorporating the equality axiom. 
machine intelligence  vol 1  1  
1  ss1l  j. siekmann  g. smolka: 
selection heuristics  deletion strategies and n-level terminator configurations for the connection graph proof procedure. 
universitat karlsruhe  research report  
1  sw1  j. siekmann  g. wrightson: 
paramodulated connectiongraphs. acta informatica  1 proc. spring joint conf.  1  1 
 besshw1  k.h. blasius  n. eisinger  j. siekmann  g. smolka  a. herold  c. walther: 
the markgraf karl refutation procedure. proc. ijcai  1  1 

k.-h. blasius 1 
