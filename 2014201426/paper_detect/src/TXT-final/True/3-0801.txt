
we investigate a formalism for reasoning with multiple local ontologies  connected by directional semantic mappings. we propose:  1  a relatively small change of semantics which localizes inconsistency  thereby making unnecessary global satisfiability checks   and preserves directionality of  knowledgeimport ;  1 a characterizationof inferences using a fixed-point operator  which can form the basis of a cache-based implementation for local reasoners;  1  a truly distributed tableaux algorithm for cases when the local reasoners use subsets of shiq. throughout  we indicate the applicability of the results to several recent proposals for knowledge representation and reasoning that support modularity  scalability and distributed reasoning.
1 introduction
in applications ranging from information and service integration to the semantic web  it is expected that ontologies will be fragmented and distributed  rather than monolithic. moreover  there are well-known advantages to breaking up a large ontology into modules  e.g.  see  . recently  there have been a number of proposals for systems supporting modularized ontologies  where one can have a localized view either by  importing  specific information  1; 1  or by distributing reasoning  1; 1; 1 .
모distributed description logics  ddls   are a particular formalization of the notion of distributed ontology and reasoning  which starts from local t-boxes  and expresses semantic connections between them as  bridge rules  between pairs of connects. this paper contributes to the study of ddls  with the hope of shedding light both on the semantic and the implementation aspects of all similar mechanisms.
모in particular  the claimed contributions of the paper are three-fold. first  on the semantic front  we propose a new semantics for ddls  which better captures the properties of localized inconsistency and directionality. according to the directionality property  semantic mappings have a direction from a source ontology to a target ontology  and support knowledge propagation only in such a direction. according to localized inconsistency  the inconsistency in one component t-box  or in some subgroup of connected components  should not automatically render the entire system inconsistent. these properties are desirable for all multi-module ontologies  and we discuss how our results apply to other proposals  such as  1; 1; 1 .
모second  we examine an approach which views the bridge rules connecting two local ontologies as describing an operator that propagates knowledge in the form of dl subsumption axioms. this is used as the basis of a characterization of distributed dl reasoning using a fixed point operator  which does forward-propagationof axioms. in addition to its intrinsic interest  as part of a syntactic characterization of the ddl consequence relation  this result can be used to extend the caching technique described in  to a sound and complete one.
모the third contribution is a sound and complete distributed tableaux algorithm that determines the satisfiability of a shiq concept in the context of the local axioms of an ontology and the extra knowledge imparted by the bridge rules. this algorithm is the basis of a peer-to-peer implementation of a proof mechanism for checking concept subsumption in a distributed manner.
모the rest of the paper is organized as follows. in section 1 we review the formal framework of ddls. in section 1 we introduce the notion of inconsistent local interpretation that allows us to model partially inconsistent distributed ontologies  and show exactly how the new and old entailments are related. the new semantics is also used in section 1
모to characterize the knowledge flow induced by bridge rules  and in section 1 to present a sound and complete distributed tableaux algorithm that computes satisfiability/subsumption.
1 distributed description logics
we briefly recall the definition of ddl as given by borgida and serafini .
syntax given a non-empty set i of indexes  used to enumerate local ontologies  let {dli}i뫍i be a collection of description logics.1 for each i 뫍 i  let us denote a t-box of dli as

figure 1: extracts of the class hierarchies
ti.1 to make every description d distinct  we will prefix it with the index of ontology it belongs to  as in i : c. we use to say thatis being considered in the i-th ontology.
모semantic mappings between different ontologies are expressed via bridge rules. a bridge rule from i to j is an expression  which in this paper is restricted to being one of the following two forms:
- an into-bridge rule
모- an onto-bridge rule where x and y are concepts. the derived bridge rule i : x  뫖뫸 j : y can be defined as the conjunction the corresponding into and onto bridge rule.
모bridge rules from i to j express relations between i and j viewed from the subjective point of view of the j-th ontology.
for example  the into-bridge ruleintuitively
says that  from the j-th point of view  the individuals in concept c in i correspond  via an approximation introduced by an implicit semantic domain relation  to a subset of the individuals in its local concept d. therefore  bridge rules from i to j provide the possibility of translating into j's ontology some of the concepts of a foreign ontology i.
모a distributed t-box  dtbox  t therefore consists of a collection of t-boxes {ti}i뫍i  and a collection of bridge rules bbetween them.
example 1 figure 1 shows fragments of class hierarchies from two ontologies  swrc1 and shoe1  available from the daml on-line library. these can be viewed as local t-boxes. for the sake of demonstrating the value of mappings  we considered oversimplified shoe ontology without imports. the followingare examplesof bridgerules from swrc to shoe:
swrc : publication  뫖뫸 shoe : publication	 1 
swrc : inproceedings shoe : conferencepaper  workshoppaper  1 
swrc : inbook shoe : bookarticle	 1 
semantics ddl semantics is a customization of the local models semantics for multi context systems  1; 1 . each ontology ti is locally interpreted by a standard dl interpretation. since local domains may be heterogeneous  e.g.  time may be represented by rationals and integers in two ontologies   we need relations that model semantic correspondences between heterogeneous domains. a domainrelation rij from 붟ii to 붟ij is a subset of 붟ii뫄붟ij. for example  if 붟i1 and 붟i1 are the rationals and the naturals  then r1 could be the round-off function. we use rij d 
  we use ij	for	d뫍d ij	.	iof
모a distributed interpretation a dtbox t therefore combines the above two notions and is said to satisfy  written id  the elements of t if
1. for all
1.
1.
1.	 	and id bij
finally  t  read as  t d-entails   if for every i  id t implies i. we say t is satisfiable if there exists a i such that id t. concept i : c
is satisfiable with respect to t if there is a i such that id t and.
on injective domain correspondences a key novelty of the semantic mappings in ddl is support for multiple levels of granularity and perspective: allowing individuals to be related using arbitrary binary relations rather than just bijection. for example  while it is traditional to state correspondences such as  wife in ontology 1 corresponds to moglie in ontology 1   ddls support domain correspondences that are general binary relations  so that one can say that  husband and wife in ontology 1 correspond to couple in ontology 1   which can be formalized by using onto-bridge rules
{1 : wife  couple 1 : husband  couple}.
in   ddls are faulted because the collection of bridge rules
{1 : bird  penguin   penguin} do not render penguin unsatifiable even if bird is subsumed by fly in ontology 1. as the example involving couple shows  the general formal pattern is correct in some cases  so this is actually a problem of incomplete modeling.
in the case of penguins  the extra information is that the
domain relation is one-to-one. in such cases  one should also have added bridge rules stating that non-birds and flying objects are non-penguins: {1 :  bird penguin 1 :
fly penguin}. this would indeed lead to the conclusion t |=d 1 : penguin  뫐.
모since the property that the domain relation is one-one over some concept b arises quite frequently  we might consider adding a new kind of bridge rule to express it  writing something like  뫞뫸1 penguin. interestingly it can be proventhat in the context of ddls  such rules can be eliminated by syntactically manipulating the dtbox  so that whenever  뫞뫸1 g and  are present  a new bridge rule
is added. the tableaux technique in section 1 could however use such rules more efficiently without the encoding.
properties and desiderata for ddl we first give some basic ways in which subsumption and a combination of onto- and into-bridge rules allows to propagate subsumptions across ontologies.
lemma 1 if bij contains j : h  then t
thus 	in	example	1 	the	subsumption shoe	:
bookarticle  publication can be inferred in ddl through bridge rules  1  and  1   and the subsumption inbook 
publication contained in tswrc.
모if the local languages support disjunction as a concept constructor then a more general form of propagation can occur:
lemma 1 if bij contains
모additional properties would be desirable for ddl entailment. in particular  since the intended meaning is that bridge rules bij constitute a semantic channel which allows ontology j to access and import knowledge from ontology i  we want information flow to be  directional  in some sense. to express this  we first introduce the notion of bridge graph.
definition 1 the bridge graph gt of a dtbox t is a directed graph with an arc from i to j exactly when the set of bridge rules bij is non-empty.
we can then state the main property we are looking for as:
directionality desideratum if in gt there is no path from i to j  then t if and only if t :
  where t	is obtained by removing ti  bki  and bik from t.
모this says that knowledgeis propagatedonly throughbridge rules  so that if there are no bridge rules that go fromi towards j  then j is not affected by i. the following two isolation properties are special cases of this:
isolation 1 a t-box without incoming bridge rules is not affected by other t-boxes.  formally  if bki =   for all
  then t 
isolation 1 a t-box without outgoing bridge rules does not affect the other t-boxes.
모unfortunately  property isolation 1 does not always hold  because of onto-rules. indeed  in the presence of onto-rule
1 :from t-box t1 to t1  if t1 entails  then 1 : a cannot be empty according to ddl semantics  and so  for example  an inconsistency would be generated if t1 entails. this is despite the fact that the bridge rules are toward t1.
모property isolation 1 may also not hold. indeed  if t1 is unsatisfiable  then for every x y   even if there are no bridge rules connecting t1 with t1  because there are no satisfying distributed interpretations at all. note that in a ddl  inconsistency may arise in a connected group of tboxes even if each t-box is locally consistent; e.g.  consider
the case in the hypothesis of lemma 1  when and.
모this is a significant problem  because a localized inconsistency spreads and contaminates reasoning in all other local ontologies  even in the absence of connections to them  because there will be no satisfying distributed interpretation  and hence every statement about them is true  as usual in logic. this problem plagues all modular and distributed representation systems.
모in the following section we propose an extension of the initial semantics in order to fix this problem.
1 inconsistency in ddl
there are a number of possible approaches to handle the problem of inconsistency propagation.
모 1  define d-entailment in a 1-step manner  first eliminating local t-boxes that are inconsistent  and then using the standard definition. the problem with this approach is that it is non-monotonic and it does not deal with cases where the inconsistency arises due to several connected local sources.
모 1  use some variant of a multi-modal epistemic semantics  which allows for models of even inconsistent knowledge in the case when the set of accessible worlds is empty. such an approach was used in  for distributed first order logics  but its computational complexity/decidability aspects are quite worrisome  and the precise impact of such non-standard semantics on logical consequences is hard to explain in an intuitive manner to users.
모 1  introducesome special interpretation  called a  hole  in   whose role is to interpret even inconsistent local t-boxes. we pursue this latter option.
definition 1 a hole for a t-box t is an interpretation   where the domain is empty.
of course  the important property of holes is that
y for every x and y   since both sides are interpreted as the empty set.1 we will however continue to refer to t-boxes as  inconsistent/unsatisfiable  in case there are no interpretations other than i which satisfy all the axioms in it.
모let us extend the notion of d-entailment |=d  obtaining the relation  by also allowing holes as interpretations for local t-boxes. note that now even if some local t-box ti is inconsistent  we still have an interpretation for the whole dtbox: one that uses i to satisfy ti.
properties of the semantics with holes first  the new semantics does the intended job:
theorem 1 the earlier-stated  directionality desideratum  holds for.
non-standard semantics  such as multivalued logics  can however distort the meaning of the original semantics in unpredictable ways. the following results should be reassuring in this respect.
모for any t and any i 뫍 i  let t  the distributed t-box with the i-th local t-box viewed as inconsistent  be obtained by removing ti  bij and bji form t  and by extending each
tj with the set of axioms.
for any finite set j = {i1 ... in}  such that
be t is empty .  the following then precisely characterizes the relationship of:
proposition 1 tif and only if for every subset j   i not containing.
moreover  in acyclic cases the relationship is even clearer:
proposition 1 let t be a dtbox. then
 i  if t1 is consistent  then for : if and only if t |=d j : .
 ii  if t1 is inconsistent  then tif and only if
application to other frameworks as noted earlier  the problem of local inconsistency polluting the inferences of all the modules in a modular representation is quite general. we examine how the approach presented here can be applied to two previously proposed schemes.
모 proposes an elegant notion of modular ontology which starts from the semantic framework of ddls  but restricts bridge rules to  identities  defining new local names j : n using concepts i : c from t-box i  modulo a semantic domain correspondence exactly like rij for ddls.1 this can be modeled by replacing every definition i : c 뫖 j : n by the composed bridge rule i : c  뫖뫸 j : n  therefore the semantics involving holes introduced in the previous section can be applied to this approach  in order to localize inconsistencies in modules.
모the somewhere peer data management system  consists of a collection of peers which maintain local ontologies  including repositories of  extensional data . peers are acquainted with neighbors  whose concepts they can use  and query processing involves intensional distributed reasoning for query rewriting. since this reasoning is  semantically  based on a single global interpretation  it is subject to the above mentioned difficulties due to inconsistency. in fact  for completeness  a global consistency check  involving even unconnected peers  would be required. we would suggest adopting a distributed semantics with holes  such as that of ddl. in particular  current peer links in somewhere can be reduced to subsumption expressions like 1 :
e. a ddl can be constructed from this by replacing occurrences of i : c in peer j by new  local symbol ci  and adding bridge rules i : c  뫖뫸 j : ci and i :  c  뫖뫸 j :  ci.
our semantics then provides for directionality and locality  and the next section provides a distributed satisfiability testing algorithm for the semantics with holes.
   finally  the c-owl  proposal for contextualizedontologies  uses a similar model theory as ddl. the only difference concerns the definition of hole  which  in c-owl was defined on a non empty set. those notion of hole supports directionality in all the cases except the case of presence of  rule  which allows to propagate back inconsistency. the particular version of  holes  given in this paper gives to c-owl the directionality property  in addition to the localized inconsistency it already had.
1 fixed-point semantics of bridge rules
as we saw earlier  combinations of bridge rules allow the propagationof subsumptionsacross t-boxes. to better understand how this propagation happens  we will associate with a set bij of bridge rules an operator of the same name  which extends the j-th t-box with a set of subsumption axioms that are the transformation via bridge rules of subsumptions in the i-th t-box.
모before proceeding further  we need to introduce the concept of disjoint union for interpretations. to begin with  we define as usual the disjoint union of two  possibly overlapping sets  where
the values are distinguished by tupling with two discriminant symbols - # and    in this case. this is generalized to the disjoint union of a collection of sets {si}i뫍k indexed with  possibly infinite  k  by using the indeces i as the discriminants.
definition 1 given two interpretationsand
of the same language l  the disjoint union of i and j   denoted by    where:
1. 
1. for concept
1. for role
 
disjoint union for interpretations  can similarly be generalized to the case of a sets. intuitively the interpretation i j is interpretation that is composed of two unrelated subparts one is isomorphic to i and the other to j .
definition 1 a description logic family has the disjoint union satisfiability property if  holds for all concepts and roles e over dl  and for all interpretations
.
lemma 1 shiq  and its sub-languages  have the distributed union satisfiability property.
on the other hand  languages that support nominals  such as owl   or a-boxes do not have this property.
the bridge operator the bridge operator essentially applies generalized subsumption propagation lemma 1  to find new subsumptions:
definition 1 given a set of bridge rules b1 from dl1 to dl1  the bridge operator b1 몫   taking as input a t-box in dl1 and producing a t-box in dl1  is defined as follows:
b
 notationally  denotes
it is remarkable that these are essentially all the inferences that one can get  if we use the semantics with holes:
theorem 1  be a distributed tbox. if dl1 and dl1 have the distributed union satisfiability property then:
t
모for any family b = {bij}i j뫍i of bridge rules  we can combine these into a new operator b on a family of t-boxes as follows:
b
if i is finite and each bij is finite  then there is a positive integer b such that for every family of t-boxes t  bb t  = bb+1 t . let us then define b  t  as bb t   where b is the first positive integer such that bb t  = bb+1 t . furthermore let bb+1 t i  be the i-th t-box in bb+1 t .
theorem 1 for every tif and only if the j-th t-box of b  t  entails.
applications to caching a number of researchers have considered the idea of caching locally the necessary information from the imported ontology tother  since this is assumed to be both more efficient  there is no need to interrupt local reasoning  while waiting for answers from the other ontology   and more prespicuous from the point of view of the local user: in order to understand an imported concept f  it is not necessary to understand all of tother  only the locally cached part  which is presumed to be much smaller.  this idea is also known as  subsetting   and there is considerable research on this topic in the ontology community . 
모theorem 1 above indicates that it is possible to finitely pre-compile in a sound and complete manner the subsumption information imported into a local ontology tj by the bridge rules in a dtbox t: compute and store it.
모in a similar vein   takes the set of imported concept definitions {nk 뫖 other : dk | k = 1 ... n}  and then computes and caches the subsumption hierarchy of the {nk}. since we have explained in section 1 that the module mechanism in  can be represented as a ddl  lemma 1 indicates that if the language contains at least alc  and if if it is possible to ask subsumption queries about complex concepts composed using the imported definitions  then it is not sufficient to cache only subsumptions of the form
  since there may be additional subsumptions entailed  involving disjunctions. on the other hand  by theorem 1 it is sufficient to cache all subsumptions of the form   whose definitions satisfy the condition.
1 a distributed tableaux algorithm for ddl
in this section we describe a tableaux-based decision procedure for t  for dtboxes whose bridge graph
gt is acyclic. the cyclic case is left for future work  pending the identification of a loop blocking strategy that preserves the independence of the local proofs.
모to simplify the description  we suppose that local ontologies are expressed in  a subset of  the shiq language - one of the most widely known dls. also  we will assume that the consequences of bridge rules are atomic names.  this condition can easily be achieved by introducing  through definitions  names for the consequent concepts. . we need the usual notion of axiom internalization  as in : given a t-box
ti  the concept cti is defined as cti = ; also  the role hierarchy rti contains the role axioms of ti  plus additional axioms  for each role p of ti  with u some fresh role.
모the algorithm for testing j-satisfiability of a concept expression x  i.e.  checking  builds  as
usual  a finite representation of a distributed interpretation i  by running local autonomous shiq tableaux procedures to find each local interpretation ii of i.
definition 1 for each j 뫍 i  the function dtabj takes as input a concept x and tries to build a representation of ij with   called a completion tree   for the concept   using the
shiq expansion rules  w.r.t. the role hierarchy rtj  plus the following additional  bridge  expansion rules
unsat-bij-rule

new-bij-rule
the idea  inspired by bridge operator bij 몫   is that whenever dtabj encounters a node x that contains a label g which is a consequence of an onto-bridge rule  then ifh is entailed by the bridge rules  the label h  is added to x. to determine ifh is entailed by bridge rules bij  dtabj invokes dtabi on the satisfiability of the concept. dtabi will build  independently from dtabj  an interpretation ii  as illustrated in figure 1. to avoid redundant calls  dtabj caches the calls to dtabi in a data structure issati 
	dtab	dtab.j x 
expansion rules
.
figure 1: subsumption propagation forced by bridge rules  and
which caches the subsumption propagations that have been computed so far. specifically  for every c  issati c  will be set to true/false whenever tis determined.
theorem 1  termination  for any acyclic dtbox t and for any shiq concept x  dtabj x  terminates.
theorem 1  soundness and completeness  j :x is satisfiable in t if and only if dtabj x  can generate a complete and clash-free completion tree.
모note that the construction of the distributed interpretation can be parallelized  as each local tableau procedure can run independently from the others  without checking for blocking conditions with nodes generated by the other local tableaux. the distributed tableaux proposed above has been implemented in a peer-to-peer setting  and is available for download. some preliminary experiments have been done to see how distributed algorithm performs w.r.t. a global tableaux algorithm based on the encoding described in .
example 1 to clarify how dtabj works  table 1 reports the trace of dtabshoe invokation for satisfiability test of shoe : bookarticle  publication from example 1. notice that at step  1  dtabshoe applies the new-bij-rule and invokes dtabswrc  using the bridge rules  1  and  1 .
dtabshoe bookarticle   publication 
step	tree	labeling and issat	rule 1  1 	xx	issatll  xx  =  == {}{{bookarticlebookarticle    publicationpublication}}	initial node-rule
issat 
issat
 1  	x	l x  == {{inbookbookarticlebookarticlepublication  publication   publication publication= false}  }	new-bij-rule
	issatissat == {inbookinbookclash}  publicationpublication == falsefalse}	unsat-clash-rulebij-rule
 1 	x	l x  = {	{	  	}
dtabswrc inbook   publication 
step	tree	labeling and issat	rule 1 	x	issatl x  == {}{inbook   publication}	initial node
 n 	x	 x  = clash	shiqclash-rule-rulesl {	}
table 1: trace of dtabshoe invokation
1 conclusions
this paper has focused on the properties of a kr&r formalism that supports multiple  local knowledge bases connected by semantic mappings. it has proposed a minor modification to the semantics of ddl  which has the salutary effect of localizing inconsistency to the connected component of a distributed reasoner in which it occurs  and of making  knowledge import  be directional. this resolves a problem left open in . not only is the new semantics easy to explain  but so are its effect on the inferences that continue to be valid. we believe that these features are desirable for all distributed and modular kr&r formalisms  and we provide several such applications  1; 1; 1 . we note here that although the e-connections formalism  and its perspectival restriction   can simulate ddls  their fundamental goal is to obtain hybrid logics  and in such situations there is no motivation for localizing inconsistency.
모the same semantics forms the foundation of a fixed-point characterization of the formulas entailed by ddl  which can be used as the basis of a sound and complete cache-based solution to the problem of distributed reasoning. it is also the standard with respect to which one can prove the completeness  as well as  of course  soundness  of a distributed tableaux reasoner which we have implemented in a peer-topeer setting.
