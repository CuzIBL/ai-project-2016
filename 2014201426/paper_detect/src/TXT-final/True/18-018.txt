 
　　the paper claims that the right attachment rules for phrases originally suggested by frazier and fodor are wrong  and that none of the subsequent patchings of the rules by syntactic methods have improved the situation. for each rule there are perfectly straightforward and indefinitely large classes of simple counterexamples. we then examine suggestions by ford et a!.  schubert and hirst which are quasi-semantic in nature and which we consider ingenious but unsatisfactory. we offer a straightforward solution within the framework of preference semantics  and argue that the principal issue is not the type and nature of information required to get appropriate phrase attachments  but the issue of where to store the information and with what processes to apply it. we present a prolog implementation of a best first algorithm covering the data and contrast it with closely related ones  all of which are based on the preferences of nouns and prepositions  as well as verbs. 
1. syntactic approaches 
　　recent discussion of the issue of how and where to attach right-hand phrases  and more generally  clauses  in sentence analysis was started by the claims of frazier and fodor  1 . they offered two rules : 
 i  right association 
which is that phrases on the right should be attached as low as 
possible on a syntax tree  thus 
john bought the book that i had been trying to obtain  for susan  
which attaches to obtain not to bought. 
but this rule fails for 
　　john bought the book  for susan  which requires attachment to bought not book. a second principle was then added : 
 ii  minimal attachment 
which is that a phrase must be attached higher in a tree if doing that minimizes the number of nodes in the tree  and this rule is to 
take precedence over  i  . so  in : 

as part of 
john carried the groceries  for mary  
attaching for mary to the top of the tree  rather than to the np  will create a tree with one less node. shiebcr  1  has an alternative analysis of this phenomenon  based on a clear parsing model  which produces the same effect as rule  ii  by preferring longer reductions in the parsing table; i.e.  in the present case  preferring vp  - v np pp to np  -- np pp. 
　　but there are still problems with  i  and  ii  taken together  as is seen in : 
　　she wanted the dress  on that rack  rather than attaching  on that rack  to wanted  as  ii  would cause. 
1. semantic approaches 
 i  lexical preference 
　　at this point ford et al.  1  suggested the use of lexical preference  which is conventional case information associated with individual verbs  so as to select for attachment pps which match that case information. this is semantic information in the broad sense in which that term has traditionally been used in al. lexical preference allows rules  i  and  ii  above to be overridden if a verb's coding expresses a strong preference for a certain structure. the effect of that rule differs from system to system: within shiebcr's parsing model  1  that rule means in effect that a 
　　verb like want will prefer to have only a single np to its right. the parser then performs the longest reduction it can with the strongest leftmost stack element. so  if position  say  prefers two entities to its right  shieber will obtain : 
the woman wanted the dress  on the rack  
and 
the woman positioned the dress  on the 
rack . 
　　but this iterative patching with more rules does not work  because to every example  under every rule  i  ii and lexical preference   there are clear and simple counter-examples. thus  there is : 
　　joe took the book that i bought  for susan  which comes under  i  and there is 
joe brought the book that i loved  for susan  
which shieber's parser must get wrong and not in a way that  ii  could rescue. under  ii  itself  there is 
joe lost the ticket  to paris  

1 y. wilks etal. 
which shieber's conflict reduction rule must get wrong. for shieber's version of lexical preference there will be problems with : 
the woman wanted the dress  for her 
daughter  
which the rules he gives for want must get wrong. 
 ii  schubert 
　　schubert  1  presents some of the above counter-examples in an attack on syntactically based methods. he proposes a syntactico-semantic network system of what he calls preference trade-offs. he is driven to this  he says  because he rejects any system based wholly on lexically-based semantic preferences  which is part of what we here will call preference semantics  see below  and which would subsume the simpler versions of lexical preference . he does this on the grounds that there are clear cases where  syntactic preferences prevail over much more coherent alternatives   schubert  1  p.1   where by  coherent  he means interpretations imposed by semantics/pragmatics. his examples are : 
mary saw the man who had lived with her while on maternity leave  
 where full lines show the  natural  pragmatic interpretations  and dotted ones the interpretations that schubert says are imposed willy- nilly by the syntax . our informants disagree with schubert : they attach as the syntax suggests to live  but still insist that the leave is mary's  i.e. so interpreting the last clause that it contains an elided  while  she was  on.... . if that is so the example does not split off semantics from syntax in the way schubert wants  because the issue is who is on leave and not when something was done. in such circumstances the example presents no special problems. 
john met a tall slim auburn haired girl 
from montreal that he married  at a dance  
here our informants attach the phrase resolutely to met as commonsense dictates  i.e. they ignore or are able to discount the built-in distance effect of the very long np . a more difficult and interesting case arises if the last phrase is  at a wedding   since the example then seems to fall withing the exclusion of an  attachment unless it yields zero information  rule deployed within preference semantics  wilks  1   which is probably  in its turn  a close relative of grice's  1  maxim concerned with information quantity. in the  at a wedding  case  informants continue to attach to met  seemingly discounting both the syntactic indication and the information vacuity of married at a wedding. 
john was named  after his twin sister  
　　here our informants saw genuine ambiguity and did not seem to mind much whether attachment or lexicalization of named after was preferred. again  information vacuity tells against the syntactic attachment  the example is on the model of : 
he was named after his father 
　　wilks 1  which was used to make a closely related point   but normal gendering of names tells against the lexitalization of the verb to name+ after. 
　　our conclusion from schubert's examples is the reverse of his own : these are not simple examples but very complex ones  involving distance and  in two cases  information quantity phenomena. in none of the cases do they support the straightforward primacy of syntax that his case against a generalized  lexical preference hypothesis   i.e. one without rules  i  and  ii  as default cases  as in ford et al.'s lexical preference  would require. we shall therefore consider that hypothesis  under the name preference semantics  to be still under consideration. 
 iii  hirst 
　　hirst  1  aims to produce a conflation of the approaches of ford et al.  described above  and a principle of crain and steedman  1  called the principle of parsimony  which is to make an attachment that corresponds to leaving the minimum number of presuppositions unsatisfied. the example usually given is that of a  garden path  sentence like : 
the horse raced past the barn fell 
where the natural  initial  preference for the garden path interpretation is to be explained by the fact that  on that interpretation  only the existence of an entity corresponding to the horse is to be presupposed  and that means less presuppositions to which nothing is the memory structure corresponds than is needed to opt for the existence of some the horse raced past the 
barn. one difficulty here is what it is for something to exist in memory: crain and steedman themselves note that readers do not garden path with sentences like : 
cars raced at monte carlo fetch high 
prices as collector's items 
but that is not because readers know of any particular cars raced at monte carlo. hirst accepts from  winograd 1  a general principle of referential success  i.e. to actual existent entities   but the general unsatisfactoriness of restricting a system to actual entities has long been known  for so much of our discourse is about possible and virtual ontologies  for a full discussion of this aspect of winograd  see ritchie 1 . 
　　the strength of hirst's approach is his attempt to reduce the presuppositional metric of cram and steedman to criteria manipulable by basic semantic/lexical codings  and particularly the contrast of definite and indefinite articles. but the general determination of categories like definite and indefinite is so shaky  and only indirectly related to  the  and  a  in english   and cannot possibly bear the weight that he puts on it as the solid basis of a theory of phrase attachment. 
　　so  hirst invites counter-examples to his principle of referential success  1  p.1  adapted from winograd;  a nongeneric np presupposes that the thing it describes exists an indefinite np presupposes only the plausibility of what it describes.  but this is just not so in either case : 
the perpetual motion machine is the bane of life in a patent office 
　　a man i just met lent me five pounds the machine is perfectly definite but the perpetual motion machine does not exist and is not presupposed by the speaker. we conclude that these notions are not yet in a state to be the basis of a theory of pp attachment. moreover  even though beliefs about the world must play a role in attachment in certain cases  there is  as yet  no reason to believe that beliefs and presuppositions can provide the material for a basic attachment mechanism. 
 iv  preference semantics 
　　preference semantics has claimed that appropriate structurings can be obtained using essentially semantic information  given also a rule of preferring the most densely connected representations that can be constructed from such semantic information  wilks 1  fass & wilks 1 . 
　　let us consider such a position initially expressed as semantic dictionary information attaching to the verb; this is essentially the position of the systems discussed above  as well as of case grammar and the semantics- based parsing systems  e.g. riesbeck 1  that have been based on it. when discussing implementation in the last section we shall argue  as in wilks 1  that semantic material that is to be the base of a parsing process cannot be thought of as simply attaching to a verb  rather than to nouns and all other word senses  
　　in what follows we shall assume case predicates in the dictionary entries of verbs  nouns etc. that express part of the meaning of the concept and determine its semantic relations. we shall write as  obtain  the abbreviation of the semantic dictionary entry for obtain  and assume that the following concepts contain at least the case entries shown  as case predicates and the types of argument fillers  : 
 obtain   recipient hum  recipient case  human.  buy   recipient hum  recipient case  human.  position   location *pla  	location case  place.  bring   recipient human recipient case  human.  ticket   direction *pla  direction case  place.  want   object *physob  object case  physical object.  recipient hum  recipient case  human. 
the issue here is whether these are plausible preferential meaning constituents: e.g. that to obtain something is to obtain it for a recipient; 
 to position something is to do it in association with a place; a 
 ticket  in this sense i.e.  billet  rather than  ticket  in french  is a ticket to somewhere  and so on. they do not entail restrictions  but only preferences. hence   john brought his dog a bone  in no way violates the coding  bring . we shall refer to these case constituents within semantic representations as semantic preferences of the corresponding head concept. 
1. a first trial attachment rule 
　　the examples discussed are correctly attached by the following rule : 
rule a : moving leftwards from the right hand end of a sentence  assign the attachment of an entity x  word or phrase  to the first entity to the left of x that has a preference that x satisfies; this entails that any entity x can only satisfy the preference of one entity. assume also a push down stack for inserting such entities as x into until they satisfy some preference. assume also some distance limit  to be empirically determined  and a default rule such that  if any x satisfies no preferences  it is attached locally  i.e. immediately to its left. 
　　rule a gets right all the classes of examples discussed  with one exception  see below : eg 
john brought the book that i loved  for mary  
john took the book that i bought  for mary  
john wanted the dress  on the rack   for mary  
where the last requires use of the push-down stack. the phenomenon treated here is assumed to be much more general than just phrases  as in: 
pate de canard truffe 
 i.e. a truffled pate of duck  not a pate of truffled ducks!  where we envisage a preference  poss stuff  ---i.e. prefers to be predicated of substances -- as part of  truffe . french gender is of no use here  since all the concepts are masculine. 
   this rule would of course have to be modified for many special factors  e.g. pronouns  because of : 
y. wilks etal. 1 
	 the dri css  	  
	she wanted 	it 	   on the shelf  
　　a more substantial drawback to this substitution of a single semantics- based rule for all the earlier syntactic complexity is that placing the preferences essentially in the verbs  as did the systems discussed earlier that used lexical preference  and having little more than semantic type information on nouns  except in cases like  ticket  that also prefers associated cases  but  most importantly  having no semantic preferences associated with prepositions that introduce phrases  we shall only succeed with rule a by means of a semantic subterfuge for a large and simple class of cases  namely: 
john loved her  for her beauty  
john shot the girl  in the park  
　　given the  low default  component of rule a  these can only be correctly attached if there is a very general case component in the verbs  e.g. some statement of location in all  active types  of verbs  to be described by the primitive type heads in their codings  like shoot i.e.  location *pla   which expresses the fact that acts of this type are necessarily located   location *pla  is then the preference that  in the park  satisfies  thus preventing a low default. 
　　again  verbs like love would need a  reason any  component in their coding  expressing the notion that such states  as opposed to actions  both defined in terms of the main semantic primitives of verbs  are dependent on some reason  which could be anything. 
　　but the clearest defect of rule a  and  by implication  of all the verb- centered approaches discussed earlier in the paper  is that verbs in fact confront not cases  but pps fronted by ambiguous prepositions  and it is only by taking account of their preferences that a general solution can be found. 
1. preposition semantics: preplates 
　　in fact rule a was intentionally naive: it was designed to demonstrate  as against shubert's claims in particular  the wide coverage of the data of a single semantics-based rule  even if that required additional  hard to motivate  semantic information to be given for action and states. it was stated in a verb-based lexical preference mode simply to achieve contrast with the other systems discussed. 
　　for some years  it has been a principle of preference semantics  e.g. wilks 1  1  that attachment relations of phrases  clauses etc. are to be determined by comparing the preferences emanating from all the entities involved in an attachment: they are all  as it were  to be considered as objects seeking other preferred classes of neighbors  and the best fit  within and between each order of structures built up  is to be found by comparing the preferences and finding a best mutual fit. this point was made in  wilks 1g  by contrasting preference semantics with the simple verb-based requests of riesbeck's  1  margie parser. it was argued there that account had to be taken of both the preferences of verbs  and nouns   and of the preferences cued from the prepositions themselves. 
　　those preferences were variously called paraplates  wilks 1   preplates  boguraev 1  and they were  for each preposition sense  an ordered set of predication preferences restricted by action or noun type.  wilks 1  contains examples of ordered paraplate stacks and their functioning  but in what follows we shall stick to the preplate notation of  huang 1b . 
1 y. wilksetal. 
　　we have implemented in cassex  see below  a range of alternatives to rule a : controlling both for  low  and  high  default; for examination of verb preferences first  or more generally those of any entity which is a candidate for the root of the attachment  as opposed to what is attached  and of what-is-attached first  i.e. prepositional phrases . we can also control for the application of a more redundant form of rule where we attach preferably on the conjunction of satisfactions of the preferences of the root and the attached  e.g. for such a rule  satisfaction would require both that the verb preferred a prepositional phrase of such a class  and that the prepositional phrase preferred a verb of such a class . 
　　in the next section we describe the algorithm that best fits the data and alternates between the use of semantic information attached to verbs and nouns  i.e. the roots for attachments as in rule a  and that of prepositions; it does this by seeking the best mutual fit between them  and without any fall back to default syntactic rules like  i  and  ii . 
1. the cassex strategy 
　　this strategy  implemented within huang's  1a  1b  cassex program  correctly parses all of the example sentences in this paper. gassex  which is written in prolog on the essex gec-1  uses a definite clause grammar  dcg  to recognize syntactic constituents and preference semantics to provide their 
semantic interpretation. 
　　for pp attachment cassex uses the case preferences of verbs  nouns and prepositions. the case information for verbs and nouns is encoded into their semantic formulas. the formula for one sense of the verb position contains a location case : 
sem position 1  ... preps  prep at on in by   prep-obj *pla 1 case loe-static    . 
the formula for one sense of the noun ticket has a direction case  as in  ticket to paris  : 
sem ticketl  ...   preps  prep to   prep-obj *pla   case direction    . 
the case information for prepositions is encoded into lists of preplates  stored under the names of individual prepositions. each preplate is comprised of four elements. below is the list of preplates for on : 
preplates on   |move  instrument  thing  on l   
be  loc-static  *pla  on1   
strik  loc-dynamic  *physob  on1   
*do-dynamic  loc-static  point  on1   
*ent  location  *physob  on1   *do-dynamic  time  event  on1   . 
　　the first element represents the preferred semantic class of the head noun or verb preceding the prepositional phrase to be attached; the second element is the case of the preposition; the third is the preferred semantic class of the head noun of the prepositional phrase. 
　　in cassex  the strategy  rule b  is contained within the prolog goal pp  attachment which is called by the grammar after the subject  verb and object of a sentential clause has been recognized. pp attachment consists of seven clauses  see below  which are tried sequentially until one succeeds. there are three stages or phases to the strategy. the first stage  clauses 1  1 and 1  attempts pp attachment using verb and noun case preferences  starting with the element immediately to the left of the pp and working leftwards. the second phase  clauses 1 and 1  attempts pp attachment using the case preferences of the preposition  starting with the main sentence verb and working rightwards. the third stage  clauses 1 and 1  is a default : preferences of the preposition for some classes of action primitives are relaxed and the pp is attached to the main sentence verb. 
pp  attachment verb sense  object  obj head noun  rebuilt  
object  verb modificr  --  
 % clause 1 prepositional phrase prep  preplates  noun phrase  head  
noun   
 % find pp. get the preplates listed for the preposition; % identify the head noun of the pp. check noun cases objeet  preplates  noun phrase  head noun  rebuilt object . 
% check the noun phrase immediately preceding the pp for 
% any case preferences. if its preferences are satisfied then % attach the pp to the  object  np  producing rebuilt  % object. 
pp  attachment verb sense  object obj head noun  rebuilt  
object  vcrb modifier  --  
 % clause 1 prepositional phrase prep  preplates  noun phrase  head  
noun   
check verb cases verb sense  preplates  head noun  verb modifer . 
% check the sense of the verb preceding the pp to see for 
% any case preferences. if its preferences are satisfied then % attach the pp to the verb as a verb modiher. 
pp attachment verb sense  object  obj head noun  object     
--  ii. 
% clause 1. no pp attachment is made. the verb-sense and 
% the object of the sentential clause is returned unaltered 
% cassex will then try to attach the pp at the next sent% ence level up  starting with the rightmost constituent  by 
% calling pp  attachment again. if no attachment is possible 
% at that level  cassex tries attachment at the next level 
% up. if no attachment is made then cassex remains at 
% that level and tries clauses 1 of pp at tachment  one of % which must succeed. 
pp attachment verb sense  object  obj head  noun  rebuilt  object  verb modifier  -   
% clause 1 
prepositional phrase prep  preplates  noun  phrase  head  noun   
verb  pp match preplates  noun phrase  head noun  verb  sense  verbjviodifier . 
% try to attach the pp to the verb. 
pp attachment verb sense  object  obj head noun  rebuilt.. 
object  verb modifier  -   
 % clause 1 prepositional phrase prep  preplates  noun phrase  head  noun   
noun pp match   pre plates  noun  phrase  head noun  object  rebuilt object . 
% try to attach the pp to the  object  noun phrase. 

pp attaehment verb sense  object obj head noun  rebuilt  
object  verb modifier  -＊   
 % clause 1 prepositionai phrase prep  preplates  noun phrase  iiead  
noun   
{relax preplates preplates  preplateso }  
% relax certain restrictions in the preplates 
verb pp  mateh preplateso  noun phrase  head noun  verb. sense  verb modifier . 
% try to attach the pp to the verb. 
pp attachment verb sense  objec:t obj head noun  rebuilt  object  verb modifier  
 % clause 1 prepositional phrase prep  preplates  noun phra.se  head  
noun   
{relax prep lates  preplates  preplates  }  noun pp mateh pn-platrs    noun phra.se  1 lead noun  object  rebuilt object . 
% try to attach the pp to the noun phrase. 
　　below  by way of illustration  we show how our strategy correctly attaches pps in four of the example sentences in this paper : 
 r  
 l  john loved the girl  in the park  
 1  john stabbed the girl   in the park  
 1  joe bought the book that 1 had been trying to obtain  for susan  
 1  joe bought the book that i loved  for susan . 
　　whenever pp-attachment is called  its first three arguments are always instantiated. in  i   for example  verb sense is instantiated to love; object to the girl  and obj head .noun to 
girl. the first clause of pp attachment calls check noun cases  i.e. the noun is checked first  to see if girl has any case preferences. girl has none so check noun cases fails  failing clause 1. the second clause of pp attachment is called winch calls check verb cases to see if love has any case preferences. love  has none so check verb cases fails  causing the second clause of pp.attachment to fail. the third clause of pp atta.chment returns the v and np with the pp not attached to either. cassex tries to attach the pp at the next level up  but the sentence has no higherlevel so clause 1 of pp attachment eventually fails. the fourth clause of pp attachment calls verb pp match  during this  the second stage of the strategy  the verb is matched first . verb  pp match matches love against the preplates for in but does not find a match so verb pp match fails and so does clause 1. clause 1 calls noun pp inatch which matches girl against the preplates for in. the preplate  *physob  location  *pla  in1  matches so noun pp match succeeds  clause 1 succeeds  and the pp is attached to the np the girl 
　　for  1   the strategy's first stage  clauses 1  1 and 1  fails again  failing to find a match for either girl or stab. in the second stage  verb pp rnatch  clause 1  finds a preplate  |*do dynamic  loc static  *pla  in1   that matches stab  which belong to the *do dynamic verb group  to in the park  so the pp is attached to the v stab. 
y. wilksetal. 1 
　　for  1   pp attachment is called while cassex is parsing the sentence's relative clause so it tries to attach the pp to that clause. the second clause of pp attachment looks to see if obtain has any case preferences. its formula includes a recipient case  jprep for   prep-obj *hum   case  recipient    so the pp is successfully attached to obtain. 
　　for  1   pp-attachment is also called while oassex is parsing the sentence's relative clause. clause 1 of pp attachment fails because love does not have suitable case preferences. clause 1 causes returns the pp unattached  along with the sentence object the book that i loved. processing continues one level up  at sentence level  and pp attachment is called again. the second clause of pp attachrnent looks to see if buy has any case preferences. like obtain  the semantic formula for buy includes a recipient case  so the pp is attached to buy. 
　　apart from rules a and b  we tried three other pp attachment rules - c  d and e -- and implemented them in cassex. the rules varied in their use of case information for pp attachment. rule a uses only verb and noun-based case information  as does rule c. rules d and e use only preposition-based information  we also varied the order of application of information and the nature of the default  trying both  high  and  low.  the five strategies are summarized below. 


1 y. wilks etal. and 
the woman wanted the dress  for her daughter  
because rule d defaults low  correct attachment relies on the verb 
preferences of position and want . rule e gets wrong sen-
tences like 
john lost the ticket  to paris  
only rule b correctly attaches all the sentences. 
1. conclusions 
　　we suggest that correct pp attachment is possible with only semantic information  ignoring  for the purposes of this paper  situations of pragmatic override and exceptional uses of world knowledge  of the oram and steedman type  and without syntactic rules  provided the system of preferences allows the interaction of not only verb-based but also noun and preposition-based preference. cassex has explored a number of alternative arrangements of default and order  and we have presented a best-fit algorithm for the data  without needing syntactic rules or complex syntactico-semantic weighting. 
1. references 
boguraev  b.k.  1   automatic resolution of linguistic ambiguities.  technical report no. ii  university of cambridge computer laboratory  cambridge. 
crain  s. & steedman  m.  1   on not being led up the garden path : the use of context by the psychological parser.  in dr. dowty  l.j. karttunen & a.m. zwicky  eds   syntactic theory and how people parse sentences   jambridge university press. 
pass  d.c. &. wilks  y.a.  1   preference semantics  1-
formedness and metaphor   american journal of computational linguistics  1  pp. 1 
ford  m.  dresnan  j. &. kaplan  r.  1   a competence-based theory of syntactic closure.  in .!. bresnan  ed.   the 
mental representation of grammatical relations  cambridge  ma : mit press. 
frazicr  l. & fodor  .1.  1   the sausage machine: a new two-stage parsing model.  cognition  1  pp.1-1. 
grice  h. p.  1   logic & conversation.  in p. cole & .1. morgan  eds   syntax and semantics 1 : speech acts  academic press  pp. 1. 
hirst  g.  1   semantic interpretation against ambiguity.  
technical report cs-1  dept. of computer science  brown university. 
hirst  g.  1   a semantic process for syntactic disambiguation.  proc. of aaai-1  austin  texas  pp. 1. 
huang  x-m.  1a   the generation of chinese sentences from the semantic representations of english sentences.  proc. of international conference on machine translation  cranlield  england. 
huang  x-m.  1b   a computational treatment of gapping  
right node raising & reduced conjunction.  proc. of coling-1  stanford  ca.  pp. 1. 
riesbeck  c.  1   conceptual analysis.  in r. c. schank  ed   
	conceptual information processing  	amsterdam 
north holland. 
ritchie  g.  1  computational grammar. hassocks : harvester. 
shieber  s.m.  1   sentence disambiguation by a shift-reduced parsing technique.  proc. of ijcai-1  kahlsruhe  w. germany  pp. 1. 
shubert  l.k.  1   on parsing p