 
       this paper explores some t h e o r e t i c a l issues of robot system planning from the perspective of p r o p o s i t i o n a l dynamic l o g i c . a generalized n o t i o n of   p r o g r e s s i o n   and   r e g r e s s i o n   of conditions through actions is developed. this leads to a b i d i r e c t i o n a l s i n g l e - l e v e l planning algorithm that is e a s i l y extended to h i e r a r c h i c a l p l a n n i n g . 
m u l t i p l e 	p r e - / p o s t c o n d i t i o n 	p a i r s   	complex 	  e . g .   c o n j u n c t i v e   	d i s j u n c t i v e   	goals  	goals 	of maintenance 	and 	prevention  	and 	plans 	w i t h 	t e s t s are 	a l l 	handled 	in 	a 	n a t u r a l 	way. 	the 	l o g i c a l framwork 	is 	used 	to 	c l a r i f y 	gaps 	in 	e x i s t i n g 
  n o n l i n e a r   and   h i e r a c h i c a l   planning s t r a t e g i e s . 
i introduction 
       although the connection between the a r t i f i c i a l - i n t e l l i g e n c e  ai  p l a n n i n - o b l e m and 
automated program synthesis is widely 	edged  
r e l a t i v e l y 	l i t t l e 	planning 	researc 	made 
e x p l i c i t 	use 	of 	concepts 	from 	t  	c 	of 
programs. 	such l o g i c   	however  	o f f e r s 	. e t l c a l 
i n s i g h t i n t o various issues in ai plann 	iuch as 
compound 	goals 	and 	levels 	of 	r a c t l o n 
	  1   	1  	1  1   . 	many 	of 	these 	issue 	.rise 	in 
t h e i r 	purest 	form 	in 	domains 	descrlba 	e 	in 	the 
p r o p o s i t i o n a l calculus 	  e . g . 	simple blocks w o r l d s     as 	evidenced 	by 	the 	l i t e r a t u r e 	on 	the 	subject  1  	1  	1 . thus  f o r c l a r i t y and c o n t i n u i t y   we choose 	the 	p r o p o s i t i o n a l 	s e t t i n g 	to 	develop 	a u n i f i e d   	abstract 	treatment 	of 	these 	issues 	using p r o p o s i t i o n a l 	dynamic 	logic 	 pdl  	as 	our 	primary l o g i c a l t o o l 	 1  1  1  1  1j. 
       pdl is a decldable modal p r o p o s i t i o n a l l o g i c f o r reasoning about binary state r e l a t i o n s induced by programs. in theory  the existence of such a l o g i c provides an immediate   s o l u t i o n   to the p r o p o s i t i o n a l planning problem: one could s y s t e m a t i c a l l y s u b s t i t u t e a l l possible plans i n t o a schema  the s p e c i f i c a t i o n   that asserts the desired property of the p l a n . the r e s u l t i n g expressions could be tested f o r v a l i d i t y to f i l t e r out n o n - s o l u t i o n s . u n f o r t u n a t e l y   t h i s f a c t i s o f 
       l i t t l e p r a c t i c a l consequence  as such a procedure is c e r t a i n to be grossly i n e f f i c i e n t . the approach developed here imposes a d d i t i o n a l s t r u c t u r e by  1  c o n s i d e r i n g a class of problems t h a t r e q u i r e   in e f f e c t   only nonmodal reasoning  and by  1  using 
the research described in t h i s paper was supported by the o f f i c e of naval research under contract number n1-c-1. 
s u i t a b l e   p r o g r e s s i o n   and   r e g r e s s i o n   operators to s t r u c t u r e the search f o r a s o l u t i o n and a l l o w e a r l y pruning of hopeless paths. 
       s u r p r i s i n g l y   even our r e s t r i c t e d f o r m u l a t i o n covers a more general class of problems than are handled by most comparable ai planning methods. for instance  we allow goals to be a r b i t r a r y w f f s   so that d i s j u n c t i v e goals   c i t e d as an unsolved problem by sacerdoti   1     r e q u i r e no s p e c i a l treatment at a l l . the approach provides a t h e o r e t i c a l basis f o r h i e r a r c h i c a l plan generation that t i e s in d i r e c t l y w i t h current ideas on h i e r a r c h i c a l program development  see section i i i c.  in a d d i t i o n   the use of program l o g i c c o n s t i t u t e s a formal basis f o r s p e c i f y i n g and v e r i f y i n g the plan-generating system i t s e l f . 
       although our work can be generalized along s e v e r a l dimensions   p r o p o s i t i o n a l axiom schemata  plans w i t h loops  q u a n t i f i e d p r e - / p o 1 t c o n d l t l o n s   e t c .     these are beyond the scope of the c u r r e n t paper  which focuses instead on the e s s e n t i a l s t r u c t u r e of the approach. at the same t i m e   it should be noted that the use of axiom schemata seems to be a minimal requirement f o r p r a c t i c a l a p p l i c a t i o n . this paper should be regarded as a foundational study aimed at deepening our understanding of planning; a separate paper w i l l discuss problems of implementation   1   . 
ii preliminaries 
       this section contains a b r i e f p r e s e n t a t i o n of the basic concepts of a l o o p - f r e e fragment of p r o p o s i t i o n a l dynamic l o g i c  pdl . the i n t e r e s t e d 
       reader is referred to   1   1  1  f o r a more comprehensive treatment of dynamic l o g i c . although dynamic l o g i c is o r d i n a r i l y used to reason about programs  i t i s equally appropriate f o r reasoning about plans   i n the ai sense ; t h u s   in t h i s paper the terms program and plan are used i nte rchangeably. 
	a. 	syntax 
¡¡¡¡¡¡let    and q. denote two symbol sets: atomic propositions and atomic actions  respectively. define wffs pf * and programs a   simultaneously  deleting subscripts for convenience : 
1.   sp 1. a * a 
1. if p q€ p  then 	-*p  p v q € p 
1. if pfc p and 	*¡ê a  then  * p¡ê p 
       
1 

1 
       

       

1 
       
l e f t - h a n d side  f a e  the second d i s j u n c t . these two cases exhaust the p o s s i b i l i t i e s f o r g e t t i n g   c v d   . 
       the reason the formulas p/a and a q defined in t h i s way are not exactly equivalent to the strongest postcondition and the weakest p r e c o n d i t i o n l i e s in the nature of our atomic a c t i o n s . b r i e f l y s t a t e d   in the context of programming languages one t y p i c a l l y begins w i t h p r i m i t i v e s whose semantics are f u l l y characterized and focuses on c h a r a c t e r i z i n g the derived operations  sequencing  e t c .     1   . for example  the weakest p r e c o n d i t i o n f o r the assignment p r i m i t i v e is given by the e q u a t i o n : wp  x:= e   p   x     - p e   which asserts that the weakest p r e c o n d i t i o n f o r c o n d i t i o n p and a c t i o n  x gets e  is p r e c i s e l y p w i t h e s u b s t i t u t e d f o r x. 
       in our case  however  the p r i m i t i v e actions are s p e c i f i e d only by axioms s t a t i n g one-way i m p l i c a t i o n s . thus  unless we make assumptions of a  non-monotonlc  nature  we would g e n e r a l l y be able to c o n s i s t e n t l y add axioms that  weaken1* the p r e c o n d i t i o n or   s t r e n g t h e n   the p o s t c o n d i t i o n of an a c t i o n . since  provably weakest  is u n a t t a i n a b l e   we make do w i t h  weakest p r o v a b l e .   this does not a f f e c t the completeness of the search a l g o r i t h m   since we are looking only f o r programs t h a t provably s a t i s f y the s p e c i f i c a t i o n s . 
c. h i e r a r c h i c a l planning 
       the key observation to be made in extending the s i n g l e - l e v e l algorithm t o m u l t i l e v e l   h i e r a r c h i c a l planning is that an atomic a c t i o n at l e v e l k is a plan to be solved f o r at l e v e l k + 1 . this point of view is possible because of the way the planning problem was f o r m a l i z e d . s p e c i f i c a l l y   an atomic a c t i o n is described by a set of dynamic axioms in q. likewise  the desired program is described by a set of dynamic axioms in r. since the same formal objects-namely  sets of dynamic axioms-are involved in both cases  it is n a t u r a l to assume as p r i m i t i v e some a c t i o n w i t h given p r o p e r t i e s at l e v e l k and then to solve f o r a program having those p r o p e r t i e s at l e v e l k + 1 . 
s o l u t i o n f o r each of these nodes guarantees t h a t we have an o v e r a l l s o l u t i o n . 
       as w i t h other h i e r a r c h i c planners  the main b e n e f i t of l e v e l s in our approach is h e u r i s t i c : the s e l e c t i o n of intermediate vocabularies and domain axioms c o n s t i t u t e s a choice of  planning i s l a n d s .   any algorithm that t r i e s to solve a problem by s o l v i n g the nodes in the hierarchy i s   in essence  searching f o r a plan constrained to go through the states defined by the domain c o n s t r a i n t s of the intermediate a c t i o n s . the main b e n e f i t of l o g i c here is to d e f i n e a reasonable r e l a t i o n between the l e v e l s   namely the r e l a t i o n :   c o r r e c t l y implements '* 
       for a f i x e d determination of l e v e l s and a small number of actions it would be possible to precompute s o l u t i o n s to the subproblems  in which case  a f t e r s o l v i n g the problem at the top l e v e l   the system would act more l i k e a compiler than a 
       problem s o l v e r . in dynamic s i t u a t i o n s in which the l o w e r - l e v e l a c t i o n s   i n e f f e c t   the   t o o l s   f o r s o l v i n g the problem  are changing or when few a c t i o n s are ever a c t u a l l y used  it seems more n a t u r a l to solve subproblems as they a r i s e . 
	iv 	discussion 
a#
 modeling a c t i o n s : the legacy of strips 
¡¡¡¡much of the research i n t o the c o n t r o l of planning has been c a r r i e d out in the strips paradigm  1  1 j . in t h i s approach  actions are regarded not as mappings from states to s t a t e s   but r a t h e r as s y n t a c t i c transformations of s t a t e d e s c r i p t i o n s to other s t a t e d e s c r i p t i o n s   where s t a t e d e s c r i p t i o n s are l o g i c a l formulas. one consequence is the o f t - c i t e d advantage of not having to mention the various  frame c o n d i t i o n s     i . e .   the properties t h a t are i n v a r i a n t under an a c t i o n . u n f o r t u n a t e l y   the need f o r operators to be s e n s i t i v e to the syntax of s t a t e d e s c r i p t i o n s led researchers to consider only very simple s t a t e d e s c r i p t i o n s   e . g . sets of atomic p r o p o s i t i o n s   and very simple transformations   e . g .   a d d l i s t s and d e l e t e l i s t s   . 
       
       obviously  f o r any node k  only the successor nodes corresponding to actions a c t u a l l y used in k's s o l u t i o n need be solved. furthermore  f i n d i n g a however  these i n v a r i a n t s need not be as l a r g e an obstacle to p r a c t i c a l implementation as is commonly supposed  see   1     . 
       
1 
       
planning systems do make the assumption that the truth of a given atomic proposition in the state resulting from applying a sequence of operators is a determinate  calculable thing. techniques that rely c r i t i c a l l y on these assumptions are sometimes d i f f i c u l t to adapt to less constraining assumptions. we offer two illustrations from noah 
. 
¡¡¡¡¡¡b. nonlinear planning: problems with partial orders and shuffles 
¡¡¡¡¡¡the basic idea behind nonlinear planning is the following. to solve a conjunctive goal gl & g1  find a sequence si = a;b;...;c that achieves gl and another sequence s1   d ; e ; . . . ; f that achieves g1. represent the overall plan as a network of partially ordered actions with si and s1 as parallel branches* now use the  resolve-conflicts c r i t i c   to detect interference between the plans and impose additional ordering constraints upon the actions to eliminate the interference. the network encodes the subset of the possible shuffles of s1 with s1 that are believed to achieve the overall goal gl & g1. 
¡¡¡¡¡¡for the resolve conflicts c r i t i c to f i l t e r interference correctly  it must know what is true at each node of the network. unfortunately  for nodes that occur after joins  what is true depends c r i t i c a l l y on the ultimate linearization of the parallel branches. in the general case  the best that can be done is to represent the disjunction of the strongest oostconditions of the alternative linearizations. this requires considering the alternatives  of which there are   jj1 * where m and n represent the lengths of the action sequences in the two parallel branches. since it is easy to imagine cases in which resolve-conflicts criticism 
would be an expensive operation  the belief that using a nonlinear strategy is computationally efficient seems to be grounded in the empirical hypothesis that operators encountered in practice w i l l permit easy detection of conflicts. 
¡¡¡¡¡¡c. hierarchical planning: problems with heuristic decompositions 
	the 	justification 	for 	partial 	orderings 	in 
noah is linked with a desire not to commit the system prematurely to a particular linear order of actions which  though seemingly correct at one level  may expand into incorrect plans at lower levels. this possibility can arise  of course  only if the relation between levels   plan a achieves the same effect as action a   is not exact. however  such inexactness undermines the original rationale for hierarchical planning- namely  reducing complexity by means of factorization-since it destroys composltlonallty and requires that we check complex lower-level plans for  unexpected  global interactions. here too  an empirical hypothesis is presumably invoked  namely  that by some suitable metric the plan comes  close  to implementing the abstract action.   i t is not immediately obvious  though  what metric could be meaningful for the space in question.  
¡¡¡¡¡¡d. some benefits of bigresslon 
¡¡¡¡¡¡some of the benefits of regression were f i r s t discussed by waldinger  and appreciated by warren . these benefits accrue dually by 
including progression  which completes the logical symmetry and allows bidirectional search. as we have described them  the progression and regression operations handle arbitrary boolean formulas  thus solving conjunctive and disjunctive goals as particular applications of a more general strategy. goals of maintenance and prevention can be incorporated into the algorithm as well by expressing as  nonmodal  wffs the condition to be maintained  m  and the condition to be prevented  v . since the planning algorithm actually develops a descriptive wff  d  for each state reachable during plan execution  it is straightforward to add a check to the procedures liveforward  livebackward  and nontrlv eliminating paths through states where q t   d :   - i m v v   this simple approach w i l l work in situations in which no dynamic replanning is anticipated; goals of maintenance and prevention involving execution monitoring  feedback  and replanning require more complex strategies. further research should be directed at these problems as well as at efficiency issues  especially clarification of the role of heuristics and the compilation of deductive processes. 
acknowedcements 
¡¡¡¡¡¡i have profited considerably from discussions with richard waldinger  vaughan pratt  kurt konollge  dave wilklns  jerry hobbs  and bob moore. 
       
   actually  noah does not represent disjunctive postconditions-which may explain why disjunctive goals are considered problematical. 
¡¡¡¡for a more thoroughgoing treatment of reasoning about processes with intermediate states  see . 
1 
       
