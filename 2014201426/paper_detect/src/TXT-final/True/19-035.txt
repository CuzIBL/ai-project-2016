 
　this paper describes the current state of implementation of a cognitive computer model of human plausible reasoning  based on the theory of plausible reasoning described by collins and michalski.our goal is to use the simulation as a means of testing and refining the theory. this requires developing appropriate memory organization and search techniques to support of this style of inference  finding ways to estimate similarity in specific contexts and investigating ways of combining the sometimes contradictory conclusions reached when inferences of different types are used to answer questions. 
1. introduction 
over the last 1 years  collins and his colleagues  carbonell and 
collins  1  collins et al.  1  collins  1a  collins  1b have collected and categohzed a wide variety of human plausible inferences made from incomplete and inconsistent information. this work led to the development of a partial theory of plausible inference  collins and michalski  in press  for situations where the most appropriate or specific information was not available. this paper describes some current work in progress  the development of a computer simulation of a portion of that theory. our goal is to use the simulation as a means of testing and refining the theory. 
　the popularity of expert systems has generated great interest in developing techniques to reason with uncertain information. to date  research on reasoning under uncertainty has emphasized the role of statistical theory.  pearl  1  duda et al.  1 . unfortunately  in most real-world problems neither the data nor the inference rules themselves are known to apply with precise certainties. methods of combining uncertain evidence from multiple sources are also often required. with the exception of cohen  cohen  1   it has usually been assumed that the appropriate certainty parameters and the methods of combination were independent of the type of inference performed. furthermore  these techniques usually require some form of closed world assumption for correct interpretation. unfortunately  in most real-world situations  the available information is incomplete as well as uncertain. people deal with this problem continually  and quite effectively  using techniques for reasoning by similarity  reasoning from negative information  and reasoning from their own lack of knowledge about particulars  e.g.   i would know it if ronald reagan was 1 feet tall.   it is these kinds of inferences that we seek to model. 
　collins' theory of plausible reasoning is based on a corpus of people's answers to everyday questions  collins  1b . in general. he found that these answers had the following characteristics: 
1. there are usually several different inference types used to answer any question. 
1. the same inference types recur in many different answers. 
　1 this work was done at bbn laboratories  and sponsored by ari under contract number mda1s-c-1. 
1. people weigh different evidence  and different kinds of evidence  they find that bears on a question. 
1. people are more or less certain depending on the certainty of their information  the certainty of the inferences used  and on whether different inferences lead to the same or opposite conclusions. 
　also apparent from the protocols is that subjects faced with answering a question for which they have no specific knowledge launch a search for relevant information that they do have. as relevant pieces of information are found  or are found to be missing   they trigger particular types of inferences. the type of inference applied is determined by the relation between the information found and the question asked. for example  when a tutor was asked whether they grow coffee in the llanos region of colombia  he responded: 
 i don't think that the savanna is used for growing coffee. the trouble is the savanna has a rainy season and you can't count on rain in general. but i don't know  this area around sao paulo  in brazil  is coffee region  and it is sort of getting into the savanna region there. 
　initially  the tutor said no because he knew that coffee growing depends on factors like rainfall  temperature  soil  etc. and the savannas do not have the correct value on the rainfall factor.  this is called a derivation from mutual implication in the theory.  secondly  he did not know specifically that the llanos was used for coffee growing  and believed that he would know if it was  lack of knowledge . later  he backed off when he found positive evidence; i.e.  that the region in brazil was near an area where coffee was grown  a similarity transform . his final answer weighed all of these pieces of evidence together  albeit inexactly. 
　in the remainder of this paper  we will describe an initial implementation of one part of collins' theory of plausible reasoning  based on examples like this one. initially  we have concentrated on modeling the class of functional inferences  where the inference is based on a functional dependence such as that coffee growing depends on climate and vegetation. 
　the primary purpose of the system is to act as a testbed for the theory. as such  it is not designed to produce one  right  answer  but a number of plausible positive and negative inferences each of which may be a weak  or not so weak  reason for believing that the question asked could be answered in a particular way. our goals are to demonstrate that the theory produces only plausible answers  to develop ways of searching memory for the kinds of relevant information that are needed in order to apply each inference type  and to investigate methods for combining the various kinds of evidence that are produced. 
　the plausible reasoning simulation system  prss  we have developed is thus quite different from other systems that have been developed to reason with incomplete and/or uncertain information. since it is intended to simulate human reasoning  it generates multiple proofs of both the truth and the falsity of a given proposition. the types of inferences made depend on the particular information found in memory  and the nature of their relevance to the question asked. finally  the certainty of the overall conclusions 
	baker  burstein  and collins 	1 

reached depends on both the certainty of the evidence and the types of inferences used. 
1. an example 
　to give a sense of the behavior of the simulation system  consider how it behaves when asked a question like  does coffee grow in llanos  . 
 .  crop :of llanos := coffee  
ho direct evidence found. 
trying negative implication from: 
crop - coitee ===  rainfall - high 
 certainty .1  
since high is not a known value for rainfall llanos   and set of values for rainfall llanos  is closed. 
conclude that coffee is not a value for crop llanos  with medium certainty. 
trying argument based dependency transforms. . . . . 
llanos and sao-paulo match on climate. 
 aim -1  
llanos and sao-paulo match on vegetation. 
 aim -1  
using a sim transform: since climate and vegetation  ===  crop and sao-paulo is similar to llanos with respect 
to climate and vegetation.  aim -1  
and crop sao-paulo  - coffee 
conclude that crop  llanos  - coffee is true with medium certainty. 
evidence is evenly mixed. i cannot make a judgement. 
　for this example  prss finds two kinds of evidence. first  it reasons from the implication that coffee growing requires heavy rainfall  and from the fact that it does not believe the llanos to have heavy rainfall  that the llanos is not a coffee growing region. this conclusion is given medium certainty primarily because of the certainty of the implication. secondly  it finds that the sao-paulo region does have coffee as a crop and matches llanos on climate and vegetation  two variables involved in a mutual dependency with crop. since the evidence is evenly divided  no final conclusion is reached. 
1. system overview 
　unlike an expert system  which must generate a solution  prss tries both to verify and disconfirm each proposition that it is given as an input question. some examples of the kinds of queries the system may receive as input are: 
   climate :of england :- temperate     flower-type :of holland :- rose     mater-requirement :of rose :- high . 
　the system responds to each query with a determination of whether the statement is true or false along with an estimate of the certainty of its answer and an explanation of its reasoning. when presented with a query the system first checks whether it has the answer stored directly. if so  the answer is returned along with the certainty that was recorded at the same time the fact was recorded. if it does not have the fact stored it attempts to use every plausible inference for which it has adequate information and explains what it is doing as it performs each inference. the evidence from each plausible inference is then weighed together to generate a final guess of true or false along with the estimated certainty of that guess. 
　in general  people use many different  possibly independent  arguments to convince themselves of the truth or falsity of a 
1 	cognitive modeling 
proposition. it is a bit like using a theorem prover that returns every possible proof. unlike bayesian inference networks  pearl  1   which can be viewed as combining probabilistic evidence from multiple proofs to verify the truth of a proposition  our system tries to prove both the truth and  separately  the falsity of a proposition in as many ways as are possible given the information available. 
　each inference made by prss is like a proof in that it may require backchaining to generate information necessary for the top level inference. each top level inference  i.e. proof based on uncertain information  becomes a separate bit of evidence. proofs that the query proposition are true are gathered together as evidence for the proposition and proofs of falsity are pooled as evidence against the proposition. each bit of evidence has a certainty parameter that has been derived by combining the certainty parameters of the stored propositions used and parameters that measure the goodness of matches required in the applications of inference rules. the final judgment and the system's certainty of that judgment depend on the certainties of the evidence and on how contradictory the evidence was. 
1. the knowledge base 
　we have tried to model the system on the behavior of people when generating functional inferences. this has required a highly redundant  crossreferenced memory organization. the knowledge representation system we developed for this purpose provides mechanisms for automatic crossreference of every input proposition  allowing for redundancies in set/subset relations  and multiple indexing of declarative inference rules. collins and michalski's theory assumes that inferences are made when relevant information is found by a parallel search for information associated with the argument and the referent of the query. while our current simulation does not do this directly  we have implemented a set of specialized search routines that collect all information potentially useful for  possibly several of  the inference types so far implemented. 
　prss has a database consisting of prepositional knowledge and functional relations  implications and mutual dependencies   organized in a multiply-indexed semantic network. in the existing implementation each proposition is a binary relation. we are currently working on extending the representation to include structured objects and n-ary relations. 
　collins and michalski  in press  identified four different certainty parameters associated with the propositions or declarative knowledge in this network. two parameters  certainty and frequency are associated with each proposition in the knowledge 
base. for example  we might have 
climate africa -temperate  freq=1  cert-.1 
climate africa -tropical  freq=.1  cert=high 
　following the notation of collins and michalski  in press   we call the predicate a descriptor  which  together with its argument  here  africa  forms a term. the predicate climate is the descriptor  mapping its argument  a place  to various referents  values for climates . the certainty parameter is a measure of degree of certainty that a statement is believed to be true. the frequency 
1
parameter measures the estimated proportion of the referent out of all possible referents for that descriptor and argument. the example above represents the belief that 1% of africa is temperate and 1% is tropical.1 
　in addition to certainty  a likelihood parameter is attached to each implication and dependency. for example we might have the dependency  
 1 corresponding to the all some distinction in logic. 
 1 at present we assume that potential ambiguities associated with the meaning of the frequency parameter   e.g. does it refer to space or time - are accounted for by consistent interpretation by the user. 

for all places p  
             temperature p   ===  lattitude p  certainty - .1 .likelihood - high. where the likelihood is intended to be a measure of the conditional probability of the right-hand side given the left hand side. for an implication like the one below  it is a measure of the likelihood that the right hand side of the implication is in the given range when the left hand side is in its specified range. for all places p  
grain p  - rice ===  rainfall p  - heavy certainty - .1  likelihood - high. 
　the fourth type of certainty parameter stored with the declarative knowledge of the system is dominance a dominance parameter is associated with every set/subset link in the system. it measures the proportion of elements in the subset out of all elements in the set. for example  part-of england  - surrey would have low dominance  since surrey is a small part of england. 
1. multiple types of inference 
　the current version of prss implements three basic types of functional inferences on statements retreived from its memory  depending on the kind of dependency found and the resulting kind of contextually-based similarity match required. the three types are functional analogies  which are based on mutual dependencies between descriptors  implication inferences  and set/subset inferences. 
　in the example below  we show how the system is able to construct three separate  proofs  that the climate of england is temperate. given the data in memory provided for this example  the system is unable to construct a single proof that the climate of england is not temperate. 
   climate :of england := temperate  
using an inheritance transform: 
since england = part-of europe   dom = low  
and europe has climate = temperate  cert = high  
conclude that climate england  = temperate is true with med certainty. 
using an implication transform: 
since latitude = second-quad or third quad 
　　===  climate = temperate and latitude england  = third-quad 
conclude that climate england  = temperate is true with medium certainty. 
trying argument based dependency transforms.... using a sim transform i reason: 
since latitude  ===  climate and holland is similar to england with respect to latitude.  sim = 1  
and climate holland  = temperate. 
conclude that climate england  - temperate is true with medium certainty. 
trying referent based dependency transforms insufficient information available. 
i conclude climate england  = temperate   cert = high . 
　one general class of functional inference is called statement transforms  collins and michalski  in press . this type of inference requires a declarative rule called a dependency. in the example above  an analogy is made between england and holland. the system is aware of a general relationship that the climate of a place is dependent upon the latitude of a place. in order to determine whether a specific relation exists between a latitude in the thirdquad  1.1 deg.  and a temperate climate the system must find an instance analogous to england which is known to have a temperate climate. holland is such an instance. since holland and england have the same latitude the system can conclude that england can have a temperate climate as well. 
　　　　argument-based transforms gen: 	flower-type europe ={daffodils  roses...} 
spec: flower-type surrey ={daffodils  roses...} 
sim: 	flower-type holland ={daffodils  roses...} dis: 	flower-type brazil   {daffodils  roses...} 
reference-based transforms 
	gen: 	flower-type england =temperate flowers...} 
spec: flower-type england ={yellow-roses...} 
	sim: 	flower-type england ={peonies...} 
dis: flower-type england = {bougainvillea...} 
figure 1: eight transforms on  flowertype england =daffodils  roses...} 
 within the class of statement transforms  collins and michalski  in press  describe eight different kinds of transforms  four argument-based transforms  and four reference-based transforms. the eight inference transforms were derived by considering concepts related to the ones mentioned in the question asked  where the relationship could be any of generalization  specialization  
similarity  and dissimilarity. each of these operators could be applied to either the argument or the referent in the question statement  giving the total of eight specific transforms. figure 1 gives an example of each of the eight transforms for the statement flower-type england ={darfodils  roses...}. the overall certainty of an inference based on one of these transforms depends on the degree of similarity or typicality of the concepts related  as compared along the dimensions specified in the dependency used  and the degree of certainty of the dependency itself. the dependency used in the example above can be paraphrased  if two places match on latitude then they will match on climate.  
　the simplest type of functional inference is based on a type of declarative inference rule called an implication. implication inferences can be used to infer values for properties on the basis of other properties of the same concept. since the precise relation is completely specified in an implication  an analogous instance is not required for its application. the implication used in the example above can be paraphrased as  if the latitude of a place is third-quad then the climate of that place is temperate.  
　in the next example  the system first generates an argumentbased statement transform using a dependency whose consequent is the queried descriptor  flower-type. it finds a place where tulips are grown  holland  and compares that place to venezuela on the antecedent descriptor of the dependency  climate. since they do not match  it concludes that tulips don't grow in venezuela. the second inference is a reference-based transform. here  a dependency is required whose consequent is the inverse of the query descriptor flower-type  i.e grows-in   since one needs to find a flower that grows in venezuela and which is similar to tulips with respect to the factors that affect flower growth in a place.1 
1 the system uses a knowledge representation in which the descriptor definitions may specify an inverse the descriptor flower-type has been defined as having a domain that must be a place  a range that must be a flower  and an inverse named. grows-in. thus while flower-type maps from places into the flowers that grow there  grows-in maps flowers into the places where they grow. 
1 ln the future  we plan to extend the matcher to compare multiple features with 
multiple values. 
	baker  bursteln  and collins 	1 

   flower-type :of venezuela :s tulip  
trying argument based dependency transforms. . . . using a di1 transform i reason: since climate  --  flower-type 
and holland it dissimilar to venezuela with respect to 
	climate. 	 sim = -1  
and flomer-type holland  - tulip. 
conclude that flower-type  venezuela  - tulip is false with low certainty. 
trying referent based dependency transforms using a dis transform i reason: since climate-of  ===  grows-in and bougainvillea is dissimilar to tulip with respect to climate-of.  sim - -1  
and grows-in  bougainvillea    venezuela. 
conclude that grows-in tulip  - venezuela is false with low oartainty. 
i concluda tulip is not flower-type of venezuela.  cart - med . 
1. computing the certainty of an inference 
　each of the examples shown so far involves several types of inference  and the certainty of each inference is based on a combination of several certainty parameters and a similarity or typicality measure. 
　the two similarity parameters computed by the matcher are similarity and typicality. at present  these two parameters measure the quality of a match and are computed in exactly the same way. the difference between them is that typicality applies when a property  properties  of a set is being matched with those of a subset and similarity is computed as the quality of a match between two subsets. in the theory  similarity  or typicality  measures the quality of the match either of a single feature or of a 
　bundle of features. 
　in the current implementation we compute the similarity  or typicality  of a single feature with multiple known values by an urn model type algorithm.1 the similarity parameter is currently computed as the probability that two values for a given feature  chosen at random within their frequency distributions  match or mismatch. 
　the certainty of each individual inference is currently computed as the minimum of all the certainty parameters and match certainties used. this includes the certainties associated with every proposition used  the certainty and the likelihood of the inference rule and similarity measure returned by the matcher. 
　once the system has constructed every possible proof for a given proposition it must determine whether the proposition is true or false and estimate the certainty of its guess. currently this is done by weighing the evidence for the proposition with the evidence against that proposition. the certainties of all of the positive conclusions are combined  and all of the negative conclusions are combined. multiple lines of evidence in a given direction increases the certainty of the conclusion for that direction. the final judgment is the direction with the greater certainty  and the certainty of that judgement is downweighted by the certainty of the conclusion in the opposite direction. 
1. conclusion 
　this work is still in its early stages  and yet already we see a number of interesting issues that will require further study. to date  we have not run the simulation with large numbers of facts in memory  and we forsee that this will cause the number of inferences 
the system makes to grow exponentially. clearly  techniques will be needed to control this growth  such as the filtering of weak and redundant inferences  the use of prototypes when many similar 
1 	cognitive modeling 
examples exist  and more sophistocated representations for complex dependencies and implications. we also need to develop better and more efficient techniques for similarity matching  if we are to do matches on many contextual features at once. as the model continues to develop  we will also begin a new round of protocol experiments  in order to test our model  and answer some of the questions discovered by computer modeling. 
