 
constraint relaxation is a frequently used technique for managing over-determined constraint satisfaction problems. a problem in constraint relaxation is the selection of the appropriate constraints. we show that methods developed in model-based diagnosis solve this problem. the resulting method  doc  an abbreviation for diagnosis of over-determined constraint satisfaction problems  identifies the set of least important constraints that should be relaxed to solve the remaining constraint satisfaction problem. if the solution is not acceptable for a user  doc selects next-best sets of least-important constraints until an acceptable solution has been generated. 
the power of doc is illustrated by a case study of scheduling the dutch major league soccer competition. the current schedule is made using human insight and operations research methods. using doc  the 1 schedule has been improved by reducing the number and importance of the violated constraints by 1%. 
the case study revealed that efficiency improvement is a major issue in order to apply this method to large-scale over-determined scheduling and constraint satisfaction problems. 
1 	introduction 
making a schedule for the dutch major league soccer competition is problematic due to a small number  1 in the 1 season  of partially contradictory constraints. the constraints origin from hooligan problems which started in the 1s and became gradually more annoying. currently  police  city mayors  and the railways  forced to transport supporters  impose the major number of constraints on the schedule. the league  k.nvb  and the teams themselves impose additional constraints. in spite of the small number of constraints  no schedule exists that satisfies all constraints. the 1 schedule violates 1 important and 1 less important constraints. the soccer scheduling problem is an instance of an over-
determined constrained satisfaction problem  ocsp . especially in cases where an easy solution does not exist  e.g. withdrawal of a single constraint   it might be very difficult to identify the constraints that should be relaxed. 
1 	constraint satisfaction problems 
   a strategy to solve this problem is to transform the constraint satisfaction problem into an optimization problem by splitting the problem into a set of constraints that should always be satisfied and a set of constraints that might be relaxed. for this latter set  the cost of violating each constraint have to be specified. the optimization problem then consists of finding the cheapest solution. in some cases  like linear 
 in equalities and unsplit domains of variables . operation research methods can be applied to find such a solution. the main problem in this approach is to find a solution in case or methods cannot be applied. an example is the soccer scheduling problem. 
   in this paper  we investigate the possibilities of a systematic approach to solve over-determined constraint satisfaction problems. to this end  we interpret an ocsp as a diagnostic problem that can be solved using methods developed in model-based diagnosis. similar to the previously described approach  we assume that the costs of violating the constraints are known  if this is not the case  we assume that the unknown costs are equal . we show that model-based reasoning generates solutions to an over-determined constraint satisfaction problem in order of increasing cost. as a result  the optimal solution will be generated first. 
overview of this paper in section 1  we discuss some traditional approaches to the problem. as no approach turned out to be useful for solving the case study of the soccer schedule  a more fundamental approach is required. before we describe our approach  called doc  in section 1  the relation between model-based diagnosis and over-determined constrained satisfaction problems is explored in section 1. in section 1  we will discuss several extensions of the resulting method that are intended to cope with user wishes like cost modification and addition or removal of constraints. the application of doc to the soccer schedule case is described in section 1. 
1 	related work 
most existing solution methods for constraint satisfaction 
 meseguer   halt when no solution can be found. we know of two approaches that deal with over-determinacy in csps. 
   borning et al.  present a strategy to deal with overdeterminacy by dividing all constraints in classes forming a constraint hierarchy. each constraint in a certain class is considered to be more important than constraints in a lower class. the csp can first be solved at the highest level in the hierarchy. the solutions found are further refined at the lower level until no solutions can be found anymore. the solutions found at the last solvable level in the hierarchy are the best that can be achieved. this approach can be refined by assigning weights to the constraints in the hierarchy. the sum of the weights of all remaining solutions can be compared to find the optimal one. 
   the method  however  suffers from serious drawbacks  just as similar approaches developed in the field of or  ravindran  phillips & solberg  . the problem of over-determinacy can still exist at the top level in the hierarchy. in addition  the number of remaining solutions can be very large and computationally too complex to be explored completely. there is a need for a systematic approach to find the cheapest set of relaxable constraints. 
   freuder has developed a method which approaches our goal  freuder  . he has introduced a partial csp in which sophisticated possibilities for relaxing constraints in an overdetermined csp can be handled. based on relaxation criteria an acceptable solution can be formulated and searched for. 
   the problem of finding the cheapest set of constraints to be relaxed has not been solved in the literature. in this paper an approach is presented that provides a simple relaxation criterion  consisting of removing constraints  and a simple classification mechanism based on weighting constraints. in this way  the optimal solution can be found. 
1 	ocsps and model-based diagnosis 
in this section we will discuss the similarity between the problem of identifying faulty components in model-based diagnosis  mbd  and finding a minimal set of constraints to be relaxed in an over-determined csp. 
1 	over-determined csp 
over-determined csps  ocsp  are problems for which no solution exists without the relaxation of one or more constraints. in this paper a ocsp is defined as: 

   the weight of a set constraints { c 1 . . .  ck} is defined as a cost function over the individual weights cost w 1  .. .  w k  . 
   over-determinacy means that no assignments for the variables within the domains can be found satisfying all constraints. for each assignment we call the set of violated constraints the set of overruled constraints. an optimal solution is found when the costs of relaxation arc minimal over all possible assignments. 
¡¡the choice of the weights for constraints and the cost function is not arbitrary. basic notions of preference between constraints and sets of constraints in an application domain should correspond to the representation chosen. in the example in section 1 integers between 1 and 1 have been chosen as weights for the constraints. a higher number indicates a higher importance. the weights in the case study on the soccer scheduling problem vary between 1 and 1 for minor constraints and are 1 for major constraints. the latter value reflects that violating a major constraint is considered to be worse than violating all minor constraints together. the cost function in this paper simply adds the individual weights. 
1 	model-based diagnosis 
in model-based diagnosis  a model of a technical system is used that describes the correctly operating system. the model consists of components and connections between the components. for each component  the relation between its inputs and outputs is specified. observations of the actual behavior of the system are used together with the system model to identify possible causes of deviating behavior of the system. components may have weights which reflect their prior failure rate. connections transfer signals between components. observations consist of values of input/output signals of a system. 
   diagnostic reasoning consists of constraint propagation  discovering conflicts1  and generating diagnostic hypotheses. a diagnosis consists of a set of components that might be faulty. usually  many diagnostic hypotheses exist; additional information is then required to identify the actual defective components. several diagnostic methods are directed at generating the most-likely diagnoses; diagnoses with a high probability compared to the other ones. 
¡¡an introduction to model-based diagnosis is given by davis & hamscher . the most frequently cited articles in model-based diagnosis in the context of this paper are collected by hamscher  console & de kleer . the  for this paper  most relevant diagnostic technique is related to focused sherlock  de kleer    a method that efficiently generates the most likely diagnostic hypotheses. 
1 	analogy between ocsps and m b d 
the basic concepts in model-based diagnosis and overdetermined constraint satisfaction problems are summarized in table 1. components and constraints are quite similar  as is the notion of connections  weights  and likely diagnoses and low weighted overruled constraints. an observation in modelbased diagnosis is similar to a partial variable assignment in constraint satisfaction problems. 
   as the concepts in both domains are quite similar  our initial idea was to transform an over-determined constraint satisfaction problem into a model-based diagnostic problem. then  we could use model-based diagnosis to generate a set of least important constraints that should be relaxed. 
   unfortunately  this mapping is impossible due to the problematic correspondence between observations and variable domains. instead of investigating the consequences of a partial variable assignment  the observations  as is the case in model-based diagnosis  variable assignments in a constraint satisfaction problem are tested until either one satisfies all constraints or no such assignment exists. this difference prohibits a direct mapping. 
   abstracting from the context of diagnosing technical systems  model-based diagnosis is a systematic method to identify the most-likely explanation  called diagnosis  for a set of observations. in the search for this diagnosis  conflicts will be found which in turn arc used to guide the search process 
1 a conflict is a set of components that cannot all operate correctly. 
	bakker et al. 	1 

model-based diagnosis 
component 	lo-relation 
weight 	failure rate 
connection 	common signal 
observation 	signal value 
diagnosis set of components that might cause the problems over-determined constraint satisfaction problems 
constraint 	relation 
weight 	importance 
connection 	common variable 
domain 	allowed variable values 
over-ruled 	set of constraints constraints 	that 	can be relaxed to solve the problem table i: basic concepts in model-based diagnosis and over-determined constraint satisfaction problems. except for observations and domain of variables the concepts in model-based diagnosis and over-determined constraint satisfaction problems are quite 

similar. 
 see section 1 . this guided search process does depend on conflict detection. in model-based diagnosis conflicts can be detected by constraint propagation using the model and the observations. in the context of over-determined constraint satisfaction problems the conflicts will have to be detected in a different way. 
   conflict generation in the context of ocsp can be realized by using a slightly modifieated version of forward checking. forward checking is an efficient method for solving constraint satisfaction problems  see haralick & elliot . the modification consists of keeping track of the constraints used in the propagations. although we have used forward checking in our experiments  it is not required. any method that keeps track of the constraints that have been used is fine. in the case study of the dutch soccer competition  we have experimented with different methods for solving constraint satisfaction problems. the choice only influences the computational efficiency of doc. 
in the next section  we describe the resulting method  called 
doc  diagnosis of over-determined constraint satisfaction problems . 
1 the doc method 
we first introduce some basic concepts. in the context of an over-determined constraint satisfaction problem  a conflict is a set of constraints that cannot be satisfied simultaneously. a diagnosis d is a set of constraints such that the remaining set of constraints c is satisfiable  with c' = c - d  where c is the original set of constraints. a minimal conflict  diagnosis  is a conflict  diagnosis  such that none of its proper subsets is a conflict  diagnosis . a diagnosis covers all conflicts  i.e.  the diagnosis contains at least one constraint of each conflict. a 
sub-diagnosis is a set of constraints that covers the conflicts detected so far. 
   the diagnostic reasoning method we will use is a variant of focused sherlock  de kleer  . this search method interleaves the generation of conflicts and sub-diagnoses. in a model-based diagnosis context  interleaving is required for efficiency reasons  an inefficient alternative is to generate all conflicts first . by interleaving  the most likely diagnosis is detected first and only a subset of all conflicts is generated. in the context of over-determined constraint satisfaction problem  interleaving is even more required because generating 
all conflicts will be only be possible in toy problems. 
¡¡the architecture of doc is described in figure 1. the method boils down to  a  identifying the most likely sub-
1 	constraint satisfaction problems 

diagnosis d  u b given the conflicts detected so far  and  b  checking the consistency of this sub-diagnosis  i.e.  checking whether the remaining constraint satisfaction problem c' - c - d  u b   with c is the original set of constraints  is solvable. stage  b  may or may not result in consistency. in case the sub-diagnosis is not consistent  one or more conflicts are detected. we then have to make an additional iteration over stages  a  and  b . in case consistency is confirmed  we have a solution to our problem that can be presented to a user. this solution consists of the set of overruled constraints with least total cost  and  in case the solvability of csps is investigated by a constructive method  a solution to the remaining constraint satisfaction problem. in the rest of this section  we will elaborate on both stages. 
1 	most likely sub-diagnosis 
in stage  a  the most likely sub-diagnosis has to be identified given the conflicts discovered so far. this can be achieved by a best-first construction of a hitting-set tree of the conflicts. generating a hitting-set tree of a set of conflicts is a method to identify all sub-diagnoses. reiter  describes a method to generate the hitting-set tree breadth-first. given that the weight of sub-diagnosis  c i l  . . .cik   is cost w i 1  ...  w i k    modifying breadth-first into minimal-weight first generation is a trivial modification of that algorithm. instead of generating all sub-diagnoses  we stop when a least-weight sub-diagnosis is found. the partially generated hitting-set tree is stored for 

later use. 
   in section 1 we describe the hitting-set tree for a small example. in case no conflicts have been discovered yet  the most likely sub-diagnosis is   denoting that the original constraint satisfaction problem should be investigated on solvability first. 
1 	conflict detection 
the following algorithm can be used to check the consistency of a sub-diagnosis. let csp denote the constraint satisfaction problem that remains after removing the constraints of the sub-diagnosis. the algorithm either returns a subset of csp that is not satisfiable  or it detects that csp is solvable. 
conflict detection algorithm 
input: set of constraints  csp ; output: a subset of constraints csp' c csp in case csp is not satisfiable or it detects that csp can be solved. 
1. try to solve csp using any method for solving constraint satisfaction problems and store the constraints that are used in the 
set uc. 
1. in case the csp is solved  no conflict is identified. 
1. in case the csp is unsolvable  a conflict is the set uc of used constraints. our method does not require that conflicts are minimal. for efficiency reasons  however  minimality may be desirable. a minimal conflict is constructed in the following way: repeat 
 a  select a not previously chosen constraint c of uc. 
 b  try to solve the csp uc -{c}. 
     in case this csp is unsolvable  c is removed from uc. until all constraints in uc have been investigated 
1 efficiency considerations 
doc guarantees the identification of the set of least important constraints to be be removed. however  the order in which the constraints are processed influence the efficiency of the approach. in the example of the scheduling problem of the dutch major league soccer competition  a large gain in efficiency was obtained by controlling the csp-method such that constraints were processed in decreasing order of importance. in that way  withdrawals of important constraints were identified early on. 
   if the problem initially represents a strictly hierarchical ordering of constraints  it may be efficient to use this ordering. in this case  doc can be used as a supplement to borning's method  borning et al. 1  . doc can then be used to find the solution on the hierarchical level where no solutions can be found. 
¡¡the worst-case computational complexity of doc is exponential in the number of variables and the number of constraints. it depends on the computational complexity of the selected method for solving constraint satisfaction problems  all of which have an exponential worst-case computational complexity in the number of variables  and the computational complexity of the construction of the hitting-set tree. the worst-case computational complexity of the latter problem is in 1   1 n     where n is the total number of constraints.  a worstcase situation is that a single constraint causes all inconsistencies and this constraint is considered to be more important than the combined weight of all other constraints . although the worst-case computational complexity of doc is very high  it is not clear whether this causes practical problems. 
1 a simple example 
we will illustrate doc by a simple example. consider the constraint satisfaction problem specified in table 1. the weight are integers between 1 and 1 in which 1 is regarded as most important. the cost function for the combination of weights consists of simply adding individual weights. 

tabic 1: specification of a simple constraint satisfaction problem. the weights indicate that constraint c1 is most important and constraint c1 is least important. 
¡¡this csp is not solvable. doc identifies the set of constraints to be relaxed in the following way. at the start  the most likely sub-diagnosis contains no constraints indicating that the full csp should be investigated. the constraints are processed in order of their importance  leading to the conflict   c1  c1 c1   which appears to be a minimal conflict. the sub-diagnosis  c1  is best to explore  hence  the csp' containing c1  c1  and c1 is checked for solvability. the conflict   c1  c1  c1   is discovered; minimization results in the conflict   c1  c1  . sub-diagnosis  c1 c1  is best to investigate. the resulting csp  can be solved  so the best solution to this over-determined constraint satisfaction problem is to remove both c1 and c1. 

figure 1: the partial hitting-set/sub-diagnosis tree generated to identify the best solution to the problem described in table 1. 
	bakker et al. 	1 

1 extensions to doc 	round 

an advantage of the method presented above is the ability to derive alternative solutions from the constructed hitting-set tree  without having to start all over again. this may become handy in case the next-best solution has to be found or in case modifications have to be made to the csp. 
   if a user cannot accept the solution presented  the next best alternative can easily be found by just checking the next-best sub-diagnosis in the hitting-set tree and continue doc. in this case  stage  a  from section 1 has to be changed to: identifying the next-best likely sub-diagnosis throughout the use of doc  because the most likely sub-diagnosis will remain the one belonging to the solution already found. 
   in case of modification of the csp  three types of possible adjustments to the csp can be distinguished: changing the weight of a constraint  adding a constraint and removing a constraint. the effects will be described below. 
   if the violation of a certain constraint in an optimal solution is not acceptable to a user  the weights of constraints need to be changed. in case the weight of one or more constraints is changed  the only thing we have to do is to recalculate the  combined  weights of the sub-diagnoses at the leaves of the hitting set tree. after doing so  the doc-method can be continued with the withdrawal of the sub-diagnosis that now has become the most likely one. 
   when a constraint has to be added  it has to be added to the set of constraints in the csp  and the doc-method has to be continued with the withdrawal of the most likely subdiagnosis. this is of course the same set of constraints that was violated in the previous optimal solution. 
   if a constraint is removed  remove all conflicts containing that constraint from the set of conflicts. this is necessary because if minimization of conflicts is applied  the found conflicts that contain the now removed constraint will no longer represent conflicts. if no minimization is used we might ultimately remove still valid conflicts from the hitting-set tree that have to be re-detected. doc can now be continued with the withdrawal of the now most likely sub-diagnosis from the pruned hitting-set tree. 
¡¡obviously  in all of these cases the initially constructed hitting-set tree can still be used  thus saving effort. 
1 application of doc 
1 	dutch major soccer-league 
we have applied the doc method to a scheduling problem that can be classified as middle-sized: the construction of the 1 time table for the dutch major league soccer competition: the 'ptt-tclecompetitie'  tempelman  . in this problem  1 playing schemes  so called 'home-away patterns' or haps  have to be assigned to the 1 league clubs. additional constraints have to be considered. 
   a typical example of a set of home-away patterns for a hctious competition half with 1 participating clubs is shown in table 1. assigning the patterns to the clubs results in a playing scheme in which the club that has pattern 1 assigned to it  has to play a home match in round one  hence the +  against the club that has been assigned pattern 1  and so on. 
¡¡the constraints  a total number of 1 in the 1 season  are brought forward by municipalities  police  railways  the international football federation  fifa   the clubs and 
1 	constraint satisfaction problems 
	hap 1 	1 	1 	1 
1 +1 	-1 	+1 	-1 	+1 
1-1 	-1 	-1 	+ 1 	-1 
1 -1 + 1 -1 -1 +1 +1 -1 +1 +1 -1 -1 +1 -1 +1 -1 
	1 	j  -1 +1 	+1 	-1 	+1 
table 1: example of a scheme with home-away patterns. 
television. they include demands of a security nature  e.g.  a certain club cannot play a home match in a certain round because the amount of police force available is inadequate. they also include demands of a commercial nature  e.g.  two clubs located in the same area do not want each other's home matches to be played in the same rounds. in the method currently used to solve this problem  schreuder    the constraints are divided into requirements and wishes for computational reasons. the wishes are given weights between 1 and 1 by a committee in which municipalities  police and railways are represented. requirements obtain a weight of 1 which is higher than the sum of weights of all wishes. due to the large number of constraints in relation to the number of variables  clubs   the problem is over-determined. 
   an acceptable time table has been obtained for some years using techniques from operations research  schreuder   1   and human insight to identify requirements that should be relaxed. all schemes fulfilling the remaining requirements are evaluated regarding the total weight of fulfilled wishes. this way  a strict hierarchy is created  in which one requirement is more important than all wishes together: not always an ideal situation. 
   the main problem is that the number of requirements  in combination with their tightness  is too big to fulfill them all. the foregoing leads to a time table for the 1 season in which 1 requirements and 1 wishes are violated. given the encoding of the weights  the total score of the solution is 1. 
1 	results with doc 
in order to apply our method to the problem  first the scheduling problem has to be formulated as a csp  which is straightforward: the notion of variables in a csp can be mapped onto the clubs in the competition problem  and the domains of the variables consist of all possible home-away patterns. constraints reduce the possible  combinations of  assignments of haps to clubs. in the example of table 1  applying a constraint like 'club a can not play a home match in round 1' has to result in a reduced solution space in which the possible haps for club a are: 1  1 and 1  because in these patterns the 1rd round denotes an away match. 
   as in the or approach to the same problem  weights are combined by adding individual weights. the weights of the wishes are copied from the initial problem  while the weights of requirements are  as above  set at 1  thus being higher than the weights of all wishes combined. 
¡¡as described above  the doc-method requires a cspmethod to detect conflicts. any method that registrates the 

used constraints will do  but for efficiency reasons it is preferable that conflicts are found early  and that conflicts are small. we have tried a modified version of forward checking  haralick & elliot  . this method has the advantage that conflicts are found early on. we have combined the method with a so-called clustering algorithm  schreuder   in which conflicts are small because partial solutions  only pertaining to some variables and constraints  are constructed initially. 
¡¡the results of doc show that doc's systematic analysis leads to a far better schedule. in doc's solution  only 1 re-
quirements and 1 wishes are violated. the total score is 1: an improvement of 1%. an implementation in quintus prolog1  solved the problem in about 1 hours with minimization of conflicts  and in roughly twice as much time without minimization. in both cases forward checking was used. using the clustering algorithm  the time used was about half as much  but the required computer memory was often insufficient  due to the amount of partial results. also  the order of the constraints appeared to influence efficiency. 
¡¡the computational problems  in time as well as in available memory  are not yet properly addressed. to solve larger problems  like school scheduling problems   efficiency improvements of doc might be necessary. a preliminary analysis indicates that the size of the conflicts is the main cause of computational problems. 
1 	conclusions 
in this paper a method called doc has been described that solves over-determined constraint satisfaction problems by generating sets of constraints that should be relaxed in order of increasing costs. the application of doc in a case study on scheduling the dutch major league soccer competition resulted in a schedule that improves the 1 schedule by at least 1%. the dutch major league soccer competition can be classified as a mid-sized problem. the case study indicated that doc's computational efficiency should be improved to apply doc to large-scale over-determined constraint satisfaction problems. 
acknowledgements 
we would like to thank dick van soest  who provided helpful comments on an earlier version of this paper. 
