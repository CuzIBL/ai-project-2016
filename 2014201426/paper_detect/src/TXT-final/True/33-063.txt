 
　　we are interested in developing programs that reason about digital electronic circuits  in order to design  redesign  and debug them the first step toward developing such programs is to determine a useful way of representing the design and operation of circuits a useful representation must make apparent the roles of various circuit components in implementing the overall circuit function  and must allow a program to reason about the operation of the circuit at various levels of abstraction this paper summarizes our efforts to develop such a representation this work is closely related to other al work on representing plans and on representing and reasoning about complex physical processes*** 
i introduction 
　　a variety of issues central to al arise in considering the problem of reasoning about digital electronic circuits the practical significance of this problem is becoming increasingly clear as circuits of greater and greater complexity are mass produced at. low cost this paper considers the problem of representing the design and operation of digital circuits in a way that is useful for reasoning about their operation  design revision  debugging  testing  and maintenance 
	we 	report 	here 	on 	the 	elements 	of 	such 	a 
representation that is being developed as part of our longer term research toward automating the functional redesign of digital electronic circuits by functional redesign we mean the task of altering the design of an existing  well understood circuit  in order to meet a desired change to its functional specifications for example  consider the problem of redesigning a computer terminal in order to alter the number of characters displayed per line from 1 to 1. to alter the encoding of input characters from ascii to ebcdic  or to make the character font programmable rather than fixed 
　　in order to reason about redesigning an existing circuit one must understand the basic operation of the circuit  as well as the relationship between the original design 
　*with defence research establishment atlantic  box 1  dartmouth  ns  canada  b1y 1. 
   **with bell telephone laboratories  hp 1c-1  holmdel. nj  1. 
   ***this research is supported by the defense advanced research projects agency under research contract 
n1-k-1 
specifications and the existing circuit thus  there are two major classes of representation problems in describing the design and operation of digital circuits: 
　　representing the basic operation of the circuit representing the operation of a circuit over time requires describing the timing and synchronization of data-flow  as well as the function and interconnections of components. circuit simulators  such as those typically reported in the 
design automation literature   represent circuit operation m a way that supports one kind of reasoning about circuit behavior; i.e.  answering the question  what is the output of the circuit for a given input '. we intend our representation of circuit operation to be useful for answering additional  questions such as 'will two given signals always be high at the same time '  or  whet change to the input of a given component will cause a desired change to its output  . we have developed a declarative representation for the behavior of signals over time and the synchronization of events  along with a representation of functions of circuit modules  that is more suited to answering such questions. previous work in al on representing and reasoning about complex processes includes  for example   1  1  1  
　　representing the design plan in addition to representing the basic operation of a circuit we must also represent the relationship between the design specification and the implemented circuit in a way that allows answering questions such as  what is the role of a given circuit component in implementing the overall design specifications '  end  how is a desired function decomposed into subfunctions  and implemented by a variety of circuit modules   we represent the relationship between the design specifications and the implemented circuit in terms of a hierarchical plan for the design of the circuit this plan consists of several representations of portions of the circuit at different levels of abstraction  along with various kinds of links between the levels. relevant work on representing hierarchical plans in domains other than electronics includes  1  1  1 . 
ii overview of the representation 
　　our circuit representation involves describing a given pircuit at several levels of abstraction  ranging from a very high level functional descriptions down to its realization in ttl level components ie.g flip flops  logic gates  etc. . a uniform representation scheme is used for any such level of description the relationship between different levels of description is characterized in terms of general rules of circuit design the following sections highlight the major 
notions underlying our representation 

1 

a. representing the structure and operation of 
the circuit 
　　tha circuit is described in terms of four entities  1  circuit modules.  1  their associated functions   1  datapaths between modules  eg  wires or busses   and  1  datastreams  the sequence of voltages or higher level data flowing on a particular data-path  each abstraction of the circuit corresponds to a collection of these four entities a number of modules can be grouped together and viewed as a single module similarly  a number of data-paths can be grouped together and viewed as a single data-path an abstraction of a function corresponds to a partial definition of that function data-streams of one type  eg  a stream of bits  can be viewed as representing data-streams of another type  e.g.. a stream of characters  
　　our representation of the flow of data within the circuit is based on a declarative characterization of the sequence of data on a given data-path for instance  we can explicitly represent the statement that  on some data path d  a new ascii character appears every 1 milliseconds  synchronized with clock c this allows answering such questions as   why is latch l1 clocked by clock c   or   what is the minimum setup time rom r1 will ever have to handle   
　　since module functions relate input data-streams to output data-streams  their representation is closely tied to the data representation in particular  function descriptions specify the times at which elements in the output datastream begin  along with their data value and their time duration. these are given as a function of the value  start time  and duration of elements in the input data-streams function descriptions can often be simplified greatly once the structure of input data-streams is known  eg once it is known that a particular input is a periodic sequence of characters  a module is actually described by two functions  one which describes the modules actual behavior and one which describes what the module must do for the circuit to work. usually  the former will be a more detailed version of the latter. 
b. representing the design plan 
　　the designed circuit is represented in terms of a hierarchical plan for implementing the design specifications we do not require that this design plan reflect the process by which the design was actually created  only that the plan explain the design as it exists the topmost level of the hierarchy corresponds to a high level specification for the design; the bottom most level corresponds to the implemented circuit. each intermediate node in the hierarchy corresponds to an abstraction of some portion of the circuit structure and function that represents some set of commitments about the circuit implementation each such abstraction is consistent with the desired functional specifications of its ancestor  and may itself contain abstract circuit modules whose implementation is not yet specified 
　　successive abstractions in the hierarchy are tied together by rules that characterize circuit-independent knowledge about implementing modules and about encoding data for example  one such rule states that in order to convert a pacaltel bit-string into a aerial bit-string  one can use a shift register in a specified configuration. each rule application represents some commitment regarding the circuit implementation  and leads to a leas abstract circuit description for any component  it should be possible to trace back through the rules that lead to it  in order to characterize 	that 	components role 	in implementing the specifications 
iii current status 
　　we are currently debugging our representation by using it to describe portions of the video display controller for a computer terminal our representation system is embedded within units  1. a general-purpose frame-based representation system a detailed description of our representation and its use to describe a specific circuit is available in  we also suggest there how this representation could be used in support of a system for automated functional redesign 
iv acknowledgments 
other members of the digital design project include 
saul amarel. giles lafue. saul levy. jeff shulman. and tim 
weinrich john grason and larry o'neill have provided valuable suggestions and criticisms 
