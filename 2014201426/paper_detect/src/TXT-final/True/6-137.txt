 
this paper introduces the concept of resource 
temporal network  rtn   a constraint network that subsumes both classical attributes used in a.i. planning and capacity resources traditionally handled in scheduling. after giving a formal definition of rtns  we analyze their expressive power and study complexities of several fragments of the rtn framework. we show that solving an rtn is in general np-complete - which is not surprising given the expressivity of the framework - whereas computing a necessary truth criterion is polynomial. this last result opens the door for promising algorithms to solve rtns. 
1 introduction 
historically  artificial intelligence planning focuses on absolute changes  for instance change of the truth value of a predicate   conditions on the state of the world and symbolical precedences between operations whereas scheduling focuses on relative changes of the world  resource consumption or production  and numerical time. recent advances in both fields have enlarged their relative ambition: time and resources are increasingly being studied by the ai planning community whereas conditions and absolute changes are necessary to express complex scheduling problems involving for example alternative recipes or complex conditions and effects on the level of resources. this paper introduces and analyzes the computational complexity of a formalism that mixes on the same fluent the ingredients of al planning  absolute changes  conditions  and the ones of scheduling  relative changes  numerical time . there has been some recent work on the decidability of planning with numerical state variables  helmert  1  but to the best of our knowledge  no computational complexity study has been published that analyzes a complex but realistic and useful fragment of the overall framework of planning with time and numerical state variables. this paper is a step in this direction. 
1 resource temporal networks 
1 definition 
definition 1  resource  a resource is a numerical fluent whose value can vary over time. the value of this fluent at date t is called the resource level at date t and is denoted 

　in this paper  we focus on time and resource levels belonging to a dense set  rational numbers :  although the framework can be extended to handle continuous changes  we only consider discrete changes. 
definition 1  resource statements  we define the following statements on a resource where t  and denote variable time-points and q some constant in 
  an absolute change is a statement denoted a q  t  stat-ing that because of this change at date t  the level of the resource changes from a current level i to q. 
  a relative change is a statement denoted r  stating that because of this change at date t  the level of the resource changes from current level i to i this corresponds to a production of units if or consumption of units if 
  a lower-than condition is statement denoted l stating that the level of the resource 
must remain lower than or equal to q over time interval 

  a greater-than condition is  statement denoted g q t1 te  stating that the level of the resource must remain greater than or equal to q over time interval 
respectively denote the sets of absolute  rela-
tive changes  lower-than and greater-than conditions. if is a resource change  we denote the time-point of 
and q x  the resource quantity involved in 	if 
is a condition  we denote the start time-point of its end time-point and the resource quantity involved in 
 note that the above resource statements also allow for expressing equal conditions of the form e  stating that the level of the resource remains equal to q over the time interval as the conjunction of a lower-than condition l and a greater-than condition g . the set of equal conditions is denoted ♀. resource statements are 

1 	planning 

the basic ingredients for defining resource temporal networks  rtns . informally  an rtn represents a set of possible evolutions of a given numerical variable  the level of the resource  over time. 
definition 1  resource temporal network  a temporal network  r tn  
is set of time-point variables  and respectively 
denote set of absolute  relative changes  lower-than and greater-than conditions referring to time-points in is a temporal network using the formalism defined in  gerevini and cristani  1 on the time-points of 
　in this paper  for simplicity reasons  we focus on decision problems and reasoning involving a unique resource. our framework can naturally be extended toward  1  parametrized resources of the form res where is a variable parameter describing which resource a given resource statement applies and  1  handling variable quantities q in resource statements. those extensions are out of the scope of the paper. 
definition 1  instantiation of an rtn  an instantiation of an rtn is function a : 
　it is to be noted that in this paper  we assume that all the resource statements are known and the only decision variables of an rtn are the time-points in we do not handle  at this point  the complete al planning problem of generating an rtn given a partial rtn and a set of operators described as rtns. 
definition 1  time-consistent instantiation  an instantiation a is said to be time-consistent iff is consistent with the stn 
　computing a time-consistent instantiation of an rtn can be done in  gerevini and cristani  1 . we now define the notion of resource-consistent instantiation. in the definition below  conditions  and  ensure that in a resourceconsistent instantiation  two absolute changes assigning different levels cannot be simultaneous and an absolute change cannot be simultaneous with a relative change. the rationale for this semantics is that  as in  fox and long  1   we allow simultaneity only for pair of changes that are commutative  that is such that applying just after leads to the same level as applying just after . given a date point figure 1: solution of an rtn 

definition 1  solution of a rtn  a solution to an rtn is an instantiation that is both time- and resource-consistent. 

 defines the last date beforeat which an absolute change occurred and the resource level assigned by such an absolute change. note that can be defined without ambiguity because two absolute changes assigning different levels cannot be simultaneous. equation  defines the profile of the resource level over time. conditions  and  state that this profile must satisfy the lower-than and greaterthan conditions. 
definition 1  resource-consistent instantiation  an instantiation a is said to be resource-consistent iff the following scheduling can be represented in the rtn framework. 
conditions are satisfied: 
	1 	planning attributes 
strips operators 
let p be a strips predicate. it can be represented by a 
　'this formalism allows for both the representation of metric con- resource for which level 1 means that p is false and level 1 
   straints and unequations means that p is true. let be an operator at time-point /. if p 
planning 	1 

is in the precondition of operator o  this can be captured by a greater-than condition with the constraint 
it  is in the precondition of operator o  this can be captured by a lower-than condition if p is in the delete list of operator o  this can be captured by an absolute change  stating that after will be false. is in the add list of operator o  this can be captured by an absolute change  stating that after t  p will be true. 
ixtet attributes 
let att be an ixtnt attribute  ghallab and laruelle  1 . 
we can build a mapping p att that maps the possible values 
of attribute att to q. then  a hold predicate 
can be modeled by an equal condition e uau an event event by the conjunction of an equal condition an absolute c h a n g e a n d 
a temporal constraint t' 
pddl 1 
let's consider a durative action of pddl 1  fox and long  
1 . this action can be represented by two time points ts  start  and  end  in our formalism. a condition at start on a non-numerical proposition can be captured by a greaterthan condition with the p r e c e d e n c e a n ef-
fect at start by an absolute change a l  ta   similar modeling for conditions and effects at end  and an invariant condition by a greater-than condition conditions and invariants of the form and = on numeric variables can be captured by rtn conditions l  g and e. numeric effects assign correspond to absolute changes  whereas increase and decrease correspond to relative changes. 
1 	scheduling resources 
discrete resources 
a discrete resource of maximal capacity q  laborie  1  can be captured by an rtn with a greater-than condition a lower-than condition 
and an initial production an activity requiring units of resource over the time interval is represented by a pair of relative changes if the 
discrete resource is given a varying maximal capacity profile  this can be modeled as a set of lower-than conditions 

reservoir 
a reservoir of maximal capacity and initial level l  laborie  1  can be captured by an rtn with a greaterthan condition a lower-than condition and an absolute change  a 
production activity corresponds to a relative change r q  t  where whereas a consumption activity corresponds to a relative change r q  t  where 
state resources 
in ilog scheduler  ilog  1   state resources are defined as objects that at each timepoint can take only one possible 
denotes the constraint 
　1 we assume that denotes a time-point before any other timepoint and denotes a time-point after any other time-point. 
state among a known set of possible states activities requiring different states of the state resource cannot overlap. we can build a mapping  that maps the possible states of the state resource to q. then  the requirement of a given state s of a state resource by an activity executing on the time interval can be modeled as an absolute change and an equal condition 
additional expressivity 
the rtn framework allows for modeling complex resources and activities in scheduling. in manufacturing for instance  maintenance activities need to be executed as soon as the level of some numerical variable  measuring the  need for maintenance   has reached a certain level. the level of this variable is increased  relative change  by production activities and is reset to 1  absolute change  by maintenance activities. another example is scheduling while ensuring some condition on a numerical variable during the execution of an activity  e.g. maintaining the temperature of a furnace within a suitable interval . such kind of conditions are very important in process industry and chemistry. the conjunction of absolute changes  relative changes and conditions holding over variable time intervals offers a powerful formalism for representing complex scheduling problems. additional features such as dependence between variable resource quantities and time-points t that do not directly fit into the rtn model can be handled by additional constraints in a constraint propagation framework. 
1 complexity 
in this section  we analyze the algorithmic complexity of solving and providing necessary truth criteria for general rtns and particular fragments of the rtn formalism. by np-complete we mean np-complete in the strong sense. 
1 notations 
let us consider the following notations about temporal constraints: pa denotes the point algebra of  vilain and kautz  1  which is a restriction of that only consists of 
the set of qualitative relations between timepoints. denotes a general . we write to express the fact that the corre-
sponding relation is subsumed by the temporal network. we use the following notations about resource statements: denote any set of relative changes x such that 1 
 producers . denote any set of pairs of resource statements where denotes the lower-than condition denotes any set of pairs where and 
with a fragment of the complete rtn framework is denoted  x|y  where x is the set of changes and conditions allowed in this fragment and y the type of temporal constraints  denotes the number of resource statements in the rtn  the number of temporal constraints between time-points and maxflow  the complexity of computing a maximum flow on a graph with n nodes and arcs1. 
     1state-of-the-art maximum flow algorithms do it in o in worst case  hochbaum  1 . 

1 	planning 


planning 	1 



problem uy can be transformed into one of the corresponding lemma and thus  its time complexity is polynomial. 

1 conclusion and future work 
in this paper  we introduce the notion of rtn to express a large panel of possible evolutions of a given numerical state variable over time. rtns allow modeling on the same fluent features of classical al planning  absolute changes  conditions  and scheduling  relative changes . we show that computing a solution to an rtn is in general np-complete whereas determining whether all time-consistent instantiations of an rtn are solutions is polynomial. this last result indicates that efficient solving methods based on such polynomial necessary truth criteria can be developed. indeed  when an rtn does not satisfy the ntc  all the algorithms we mention can exhibit a subset of changes sufficient to explain why some time-consistent instantiations are not a solution. just like in classical planning or scheduling  these potential conflicts can be used to branch in a search tree until the ntc is true and to perform constraint propagation. 
　a direction for future work will consist in studying the complexity of the only problem whose complexity is still open: ntc for   based on the fairly optimistic results described in this paper  we also plan to work on the development of practical and efficient algorithms for solving ntc and for finding solutions  branching schemes  heuristics  computation of resource envelopes  constraint propagation . we think that the numerous and wellstudied combinatorial problems we found tightly related with rtns  one-machine scheduling problems  subset sum  bin packing  sequencing to minimize maximum cumulative costs  maximum weight closure  maximum weight independent set  maximum weight convex set  can also help to solve rtns. for instance  state-of-the-art bin packing algorithms could be a source of inspiration for extension 
of the framework to integrate and mix continuous relative changes  see continuous reservoirs  1log  1   and absolute changes  see  pcnberthy and weld  1; trinquart and ghallab  1   is also clearly of interest. 
1 acknowledgements 
i am very grateful to andre kezdy for pointing me to some relevant articles about the maximum weight convex set problem as well as to many other graph theorists who got interested in this problem. special thanks to emmanuel guere and pascal massimino for enlightening discussions on the rtn semantics and complexity issues and to francis sourd for carefully proofreading the paper. 
