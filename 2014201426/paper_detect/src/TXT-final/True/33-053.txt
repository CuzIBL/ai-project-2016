knowledge representation of design in many-sorted logic 
zsuzsanna markusz 
computer and automation i n s t i t u t e 
hungarian academy of sciences 

1 

i l l modelling of constructional designing tasks 
　　　let us consider a technical designing task whose aim is to create a complex construction using basic units  according to a given set of rules: e.g. to compose many-storied houses of apartments or machines of spare parts. the basic units are represented by constants  while the partial constructions 
and the final construction by compound expressions. thus we can regulate the hierarchy that w i l l constitute the final construction by defining the typefunction t of the t-type model. 
　　　we can attach conditions to every step of making the construction  i.e. the compound expression representing i t . the co ection between the parts of the construction is represented by relations. if in every stage of the designing process a l l require-
ments of the construction are given by the corresponding relations  then  in fact  the necessary  knowledge  is given  i.e.  the world of the design  is defined. the choice of these relations is but the definition of the type function t . as a result  

c i f i c form which can be used by an automatic mechanism. since this specific form is nothing else than formulas of logic  the mechanism mentioned should be a certain kind of calculus. prolog is a computer system based on first-order logic where the running of a program is controlled by a complete calculus present in the interpreter. 
     a prolog interpreter accepts horn-clauses  i.e. implications whose conditions are connected by the logical connective  and   and have only one conclu-
sion. in this paper we do not wish to give a detailed description of prolog. see  l1  1 . 
　　　note that prolog is based on a one-sorted language. however  it does not make any difference  because the pattern matching mechanism built in the deduction system of prolog automatically f u l f i l s the requirements that only the terms of the corresponding sorts should be substituted for each other. 

iv.1. the task 
　　　the task is to work out a model of the designing process of many-storied apartment houses in prolog 	which w i l l result in a ready-to-run cad system. our purpose is to design one or more houses  so the different customer can choose from different ground-plans  and at the same time these buildings 
w i l l meet certain technical and functional requirements. 
　　　one program w i l l provide a set of different ground-plans for every customer who can set a priori t y order excluding the less good ones. another program w i l l design the whole building  placing the apartments beside and above one another. we can get several variants of buildings by changing the input data of the building given by the architect and/or by reordering or extending the computerized representation of the apartment variants stored in a disc f i l e . the detailed description of the program system can be found in  
　　the programs are run on an ibm 1 computer of the hungarian academy of sciences; the prolog system was installed by 	peter kdves. the results of our prolog program was graphically represented on a gd1 graphic display  by iaszl1 andor and on a calcomp plotter by judit takacs. 
     a three-storied apartment house designed by the program is shown in figs. 1 and 1. 
     in order to be able to present the logical modelling of the task  we have to get acquainted 
with the determining our model. 
　　the basic elements of an apartment are the cells with different sizes and functions. according to their size the cells can be classified into two groups: narrow and wide cells. the middle of the apartment is constructed by joining three wide cells  whereas the perimeter is made up by 1 narrow cells. an apartment consists of the middle and the outside parts together  fig. 1 . 
     a narrow or a wide cell is defined by i t s function and i t s variation number. the function of a cell can be the following: living room  bedroom  kitchen  dining-room  entrance  water-block  bathroom + t o i l e t   . the variation numbers of the narrow and wide cells define the number and locations of the doors in the cells. 
     the basic units of a building are the apartments. two apartments and a staircase make one section. the horizontal linking of one or two sections make one level. the vertical linking of 1 levels makes one unit. any number of units linked horizont a l l y make up one building. 


1 


1 


1 


1 

+existstair *f1  
-member   * f 1   *cod! *v  
-constant  *cod  -equal *cod!*v  l ! l   . 
       the r e l a t i o n vertical is needed in the select i o n of every apartment above the ground f l o o r . it has two arguments  
       1. the lower apartment 	 *m1;*f1  	and 
       1. the upper apartment  *m1;*f1   and i t i s t r u e i f the f o l l o w i n g four conditions are f u l f i l l e d : 
-centretype *m1 *m1 *x  
it checks whether the middle wide c e l l s of the two apartments are the same; if they are  it gives t h e i r value to the v a r i a b l e *x. 
-waterblock *x *fl *f1  
the v a r i a n t *x already contains the value  with or without bathroom  of the middle c e l l . depending on t h i s v a l u e   the r e l a t i o n checks whether the k i t c h ens or the kitchens plus bathrooms are on top of one another in the two apartments. 
-entering *fl *f1  
if there is an entrance in each apartment  it checks whether they are on top of one another.  the h a l l of the middle c e l l can also be the entrance; in t h i s case there is no entrance in the narrow segments.  
-verstair *fl *f1  
if a s t a i r c a s e belongs to each apartment  it checks whether they are on top of one another. 
　　　note t h a t the d e f i n i t i o n of the a u x i l i a r y r e l a t i o n s tresame  member  entrance  under is withheld here but they are of course defined in the readyt o - r u n program. 
vi conclusion 
　　　a new technique f o r the s o l u t i o n of cad problems is presented and i l l u s t r a t e d on an a r c h i t e c t u r a l example. the designing knowledge is represented in the form of axioms described in the l a n -
guage of mathematical l o g i c . the c a l c u l i of l o g i c which manipulate these axioms can be used to model designing processes. 
