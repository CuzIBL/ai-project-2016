
1 

significance of tipping  it had just been a  scriptal action  for her. 
1. mopa 
in boris  an in-depth understander of narrativea 
    scripts have been augmented by a claas of knowledge structures called mops  memory organization packets   . 
　　like scripts  mops encode expectations  but unlike scripts  mops are not isolated chunks of knowledge. instead  each mop in boris has strands which indicate how the mop has been constructed from other knowledge sources. each strand connects an event in one mop to some event in another mop. in this wsy  mops are overlaid with each other. consider diagram-1: 

　　events in m-restaurant ire overlaid with their corresponding events in m-keal and m-service. in this way  h-restaurant can be viewed from different perspectives* from the perspective of m-keal  a restaurant is simply a setting in which people have meals. prom the perspective of m-service  the diner in m-restaurant is engaged in a aervice contract with the restaurant owner. the restaurant nuat serve food to the diner and  in return  the diner ia expected to pay for thia aervice. 
   as atated earlier  script-based systems represent scriptal deviation in terms of alternate 
'paths'. thus  the restaurant acript contains a burnt-food -  leave-without-paying path. but this approach cauaea a proliferation of paths  for two reasons: f i r s t   every poasible deviation haa to be anticipated and 'canned' into the acript; otherwise the script would not be able to handle the deviation. second  each service-related script ends up copying the same path. for example  in 
$auto-repair there has to be a bad-repair   leave-without-paying path. by overlaying these scripts with m-service  a single deviation path: poor-service   refuse-to-pay in m-service can represent deviation knowledge at a more general level. likewise  'payment for service' occurs in many situations  not just in $restaurant. therefore  tipping should be understood at a morr general level than $restaurant. 
1. handling deviations 
   when stereotypic situations are f i r s t encountered  people let their scriptal knowledge handle the situation until a violation occurs. at this point they become aware of other perspectives associated with the script  each potentially useful in understanding the violation. 
　　for instance  we rarely think about the contractual aspects of restaurants when eating in one. restaurants are usually  taken for granted  as a place where one can have a meal and socialize. only when something goes wrong do we think of the contract we're implicitly engaged i n . if the service is bad  then we reconsider the amount of the t i p and what i t ' s for. 
　　more importantly  a deviation which has never before been encountered may be handled  as long as some etrsnd exists from the script to a knowledge structure with information about this type of deviation. for inatance  if $movie has strands to m-service then the very f i r s t time the movie projector breaks we can uae our deviation path in m-service to demand a refund  even if the projector breaking is a novel experience. 
　　consider how boris processes the following fragment of divorce-1  a complicated narrative  concerning marital i n f i d e l i t y : 
george was having lunch . . . when the waitress accidentally knocked a glass of coke on him. george was very annoyed and left refuaing to pay the check... 
briefly  an analyais of  having lunch  activates 
m-meal. when  waitress  occurs  the mops aaaociated with thia role are examined. if a mop being examined has a strand to an active mop  then it is also activated. since there are strands from m-restaurant to m-meal  and since m-meal is already active  m-restaurant ia activated also. 
   an interpretation of  accidentally  indicates that a violation may follow. this heuristic is based upon the assumption that unintended actions usually violate scriptal expectations. 
　　 knocked a glass of coke on him  is analysed in terms of the conceptual dependency  primitive propel  object - liquid . given this event  boris tries to match it against the events expected in m-restaurant. this match would normally f a i l   since m-restaurant does not expect waitresses to propel food-stuffs. however   accidentally  has warned boris of a possible violation  so a violation match ia attempted and succeeds. at this point doris realisea that the propel event is a violation of the event bring-food in m-restaurant  

1 

rather 	than 	some 	event 	totally 	unrelated 	to m-restauraht. 
　　nov what it boris to dot in previous systems  there would be a path in the script for such a 
　　deviation* hovever  tbia is not the case here. when boris encounters a deviation  it searches the strands connected to the event where the deviation occurred. this leads to do-service in m-service  see diagram-1 . 
   associated with m-service is general knowledge about how things may  go wrong  for each event in m-service. there ere several events  such as: 
arrange-service  do-service  inform-bill  make-payment  etc. for example  the sentence: 
       the wsitress overcharged george. constitutes a violation of inform-bill. 
　　in addition  there is knowledge about how violations may be related to each other. this knowledge is represented by rules  such as: 
if server has done service badly  or not at a l l     then server should either not bill contractor or bill for amount   norm. 
if server has done service badly or bills contractor for amount   norm  then contractor may refuse payment. 
boris uses this knowledge to recognise the connection between the waitress propel liquid and george's refusal to pay a check. 
　　left to consider is how boris realises that the violation of bring-food actually constitutes poor-service. this is accomplished by tracking the goals of the characters. the propel liquid on george is understood to cause a preserve-comfort goal for george. this goal is examined by m-seevice  which applies the following heuristic: 
if server causes s preservation goal for contractor while performing service  
then it is probably poor-service. 
　　thus  boris uses several sources of knowledge to understand what has happened. m-restaurant supplies expectations for what the waitress should have done. knowledge about propel and liquids supplies goal information  while m-service  between waitress and diner  provides very general knowledge about how contractors w i l l respond to poor service. 
1. coneinsions 
　　early script-based systems operated within restricted knowledge source domains. for instance  although frump had many available scripts to choose from  once a single script had been selected  the rest of the story was processed within the context of that script alone. as s result  many problems involving scriptal interactions never arose. 
　　in this paper i have discussed various problems with scripts  and auggeated memory 'overlays' as an i n i t i a l solution. this overlay scheme has several advantages: 
　　each knowledge atructure need know only what is directly relevant to i t . for example  what a waitress does in captured in m-restaurant  while her reasons for doing her job are represented at the n-service level which w i l l handle any type of service. m-service need not be repeated for janitors  salesgirls  etc. this supports economy of storage  but more importantly  it means that any augmentation of the knowledge in m-service w i l l automatically improve the processing a b i l i t y of any mop with strands to i t . 
　　related knowledge eources need not be activated unless something goes wrong during processing. for instance  people do not normally think of the contract between themselves snd the restaurant manager unless they are having trouble with the service. 
   finally  a given event can be understood from several perspectives. for example  a  business lunch  involves m-meal  m-service  m-restaurant  
snd h-business-deal simultaneously. 
acknowledgements 
	specisl 	thanks go to tom wolf  	pete johnson  
mark burstein and marty korsin for their conceptual and practical contributions to the boris project. 
