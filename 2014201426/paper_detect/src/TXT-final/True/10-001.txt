 
this paper describes ms. malaprop  a program  currently being designed  which will answer questions about simple stories dealing with painting  where stories  questions and answers will be expressed in semantic representation rather than english in 
order to allow concentration on the inferential problems involved in language comprehension. the common sense knowledge needed to accomplish the task is provided by the frame representation of  mundane  painting found in charniak  1b . the present paper  after reviewing this representation  goes on to describe how it is used by ms. malaprop. some specific questions of matching  correcting false conclusions  and search  will be discussed. 
descriptive terms 
computer comprehension of language  representation of knowledge  semantic representation  read time inferencing  frame representation  question answering  common sense knowledge. 
	i. 	introduction 
for the purpose of this paper  i take language comprehension to be the process of fitting what one is told into the framework established by what one 
already knows. so  to take a simple example  
 1  jack was going to paint a chair. he started to clean it. 
our understanding of the second line of  1  is conditioned by two facts: the first is the story specific information provided by the first line  i.e.  that jack has the intention of painting the chair  while the second comes from our general fund of common sense knowledge and states that it is a good idea if the thing to be painted is clean before one starts. by tying the second line to such information a person  or computer  would  know  such related facts as why the action was performed  what 
might have happened if it hadn't been  and how far along jack is in the process of painting the chair. 
ms. malaprop is a computer program  currently being designed  which will answer questions about examples such as  1 . indeed  1  is a typical example in many respects. for one thing it stays quite close to our knowledge of everyday events. as such the story specific information serves only to tell the program which parts of its real world knowledge are relevant to the story situation; the story does not build up a complex setting of its own. hence when ms. malaprop fits new story information into what she knows it is always by relating it to her store of common sense knowledge  and never by 
seeing how it relates to some complex plot supplied in the story. this is obviously unrealistic as far as stories go  but it is all too realistic given current understanding of language comprehension. 
this example is also typical insofar as once we have seen the second line as an instance of a certain portion of the painting process  the typical questions one might ask to demonstrate understanding  such as  why  or  what would have happened if he hadn't   should not be too difficult to answer. hence i shall ignore the problem of how questions actually get answered in order to concentrate on the problems of the initial integration which i will assume occurs at  read time  rather than  question time .  for discussion of this assumption  see charniak  1a .  
no example is completely typical however and one thing  1  does not indicate is that ms. malaprop  at least in her early versions  will not understand english  but rather will be given stories and questions already in semantic representation. this representation has been almost entirely designed  see charniak  1b   but  except in those places where it is the topic of discussion  it will be replaced by english phrases throughout. 
also  while many of the examples which are being used to define ms. malaprop's capabilities are like  1  in that they call for the program to tell 
you what in some sense it already knows  other examples are considerably more complex. for example :  after jack finished he did not wash the paint brush. he was going to throw it away. question : why didn't jack wash the brush    
i should note that the foreseen first version of the program will handle all of the painting examples herein  given the caveat  repeated here for the last time  that ms. malaprop cannot handle 
actual english. 
i i . the framed painting 
evidently  a program which answers such questions will have to have at its disposal quite a bit of information about painting and its neighbouring 
concepts. this knowledge base is completely designed and is described in detail in charniak  1b . we can only give a brief overview here  but it should be stressed that this representation is a  completely formalized  b  fairly complete  
and c  fairly deep. by this last comment i mean that i have striven to hook up the representation of painting knowledge to more basic knowledge whenever possible. so  the representation  knows  

natural language-1: charniak 
1 

why one should wash a paint brush after use because it knows about what happens when paint dries on something. but this latter is based on its knowledge of the evaporation of liquids containing residues  which in turn is based on its knowledge of evaporation in general. almost nothing of these properties can be presented here  and the interested reader is encouraged to consult the aforementioned article. 
let us start by considering a yery simplified version of the painting  frame   term due to minsky  1    expressed mostly in informal english  but with some formalism thrown in. 
painting  complex event  vars: 
 agent must be animate  
 object must be a solid  
 paint must be a liquid  usually is paint  
 instrument must be a solid  usually is either a roller or a paint brush  and should be absorbant  
goal: 
painting-goal  object has a coat of paint on it  comes-from: 
        painting1 via rules which say that paint on instrument will stick to object  partially f u l f i l l i n g the goal  event: 
fpaintingl  object not dirty  
comes-from:  wash-goal  
leads-to:  not dirty-1bject1  
1painting1  nearby things covered with newspaper  
 painting1 
 loop rpainting1  get paint on instrument  comes-from: 
 rules which explain how immersing instrument in paint will give the 
i 	desired result   painting1  greater drip-threshold than the amount of paint on instrument  comes-from: 
 rules showing how the regulation of pressure regulates the amount of paint  
1painting1  instrument is in contact with object  
m ainting1  greater amount of paint on 
instrument than the 
streak-threshold  
  
paainting1  paint removed from instrument  leads-to: 
 rules expressing how if it were not removed instrument would stiffen  
approaching this in steps  we f i r s t note that it is divided into three sections. the f i r s t   labeled vars  is simply a l i s t of variables along with some specification of what sorts of things may be bound to these variables. then comes the goal  which expresses the goal of the activity. finally we have event which is a description of what sorts of things have to be done in order to accomplish the goal. the arrows are to indicate rough time ordering. 
going down one level of detail we notice that the event is made up of a series of  frame statements   each of which has a name  painting1  etc.  which is followed by an expression in parentheses. here these are informal english like statements  but in the complete version they are simply predicate plus argument structures. some of these have extra information following them  labeled comes-from and leads-to  but let us ignore these for the time being. if we just look at the frame statements in event we see that they give an outline of how to paint. one portion of this outline is a loop  painting1  which tells us to get paint on the instrument  painting1   bring the instrument in 
contact with the object  painting1   while at the same time keeping the volume of paint above the streak-threshold  painting1   and below the dripthreshold  painting1 . shifting our attention to the goal  we see that it too is a frame statement  named painting-goal   and had we specified the variable restrictions in vars more f u l l y   we would have seen them to be frame statements also. 
if we look now at a single frame statement  say painting1  we see that it has various  tags . one of these expresses how the state described by the frame statement normally is achieved  or equivalently how it  comes about   or where it comesfrom  while the other gives the reason for doing this portion of the frame  or the results of the frame statement  or what it leads-to . so painting1 is brought about by the wash frame   l e f t to the reader's imagination . this is expressed by saying that painting1 matches  in the normal pattern matching sense  the goal statement of the wash frame  namely wash-goal. in much the same way there is a comes-from pointer from painting-goal to painting1 which states how it is that the goal is brought about by painting1. note that in this 
case painting-goal does not match painting1  so in a complete version there would be  intermediaries  or rules which  from a syntactic point of view explain how the two statements can be made to match  
while from a semantic point of view they explain how it is that bringing the instrument in contact 
with the object can ultimately lead to the goal being achieved. for example  these rules would tell us that if there were no paint on the instrument the desired result would not be achieved. 
in much the same way  painting1  object not dirty  leads-to the prevention of flaking and cracking  which is expressed by a separate frame  dirtyobject  given below. 
dirty-object  simple-event  vars: ... 

natural 	l a n r u a r e - l : 	charnl k 
1 

	event: 	r and dirty-1bject1  object is dirty  
dirty-1bject1  paint is put over the dirt    
causes  after a year  plus or minus a 
　　　　　　　　　　　　factor of four  u 1r dirty-1bject1  paint flakes  
dirty-1bject1  paint cracks    
in effect  then  we are told that painting1 will match the negation of dirty-1bject1  and hence prevent the causal relation described in dirtyobject. 
note that the event in dirty-object is of a d i f f e rent form than that of painting  as the former expresses a simple cause and effect relation  while the latter gives a complex series of  commands  without any cause and effect relations. in fact  they are two different kinds of frames  as is indicated by the type marks appearing by their names  simple-event and complex-event. these are two of five types of frames allowed by the system. 
returning to our painting frame we can now see how story statements like those of  1  can be integrated into ms. malaprop's knowledge of the world. the f i r s t line of  1   jack was going to paint a chair  will set up an instance of the painting frame with the agent and object variables bound 
appropriately. then the second line comes in  jack started to clean the chair . if we assume that the input representation of this corresponds to  jack started an activity which would cause the chair not to be dirty  we can see that part of this will match painting!  a fact which will be recorded by a leads-to pointer.  remember  leadsto pointers indicate reasons for doing things.  then  if ms. malaprop is asked  why  she will simply follow the pointer from the story statement back to painting1  and reply  in effect   one should not paint a dirty object . if asked  why  again  the program would follow the leads-to pointer from painting! to dirty-object!  and reply  otherwise the paint might flake . 
	i i i . 	search and language comprehension 
the notion of search has seldom played an important role in common sense inference work. recently  however  the problem of search  and its brother  problem solving  has come up  at least implicitly  in work designed to show how a comprehension pro-
gram might infer a person's motives from his actions or vice versa  schank and abel son 1  rieger 1 . i have not considered this problem with respect to ms. malaprop  but the program does have search problems  if at a somewhat more modest level of complexity. the problems stem from the fact that ms. malaprop must find  and hence search for  frame statements which match incoming story statements. 
in most of the cases we have considered so far  ms. malaprop's search is a  /ery simple sort. at any given time there is a l i s t of  context frames  which are simply those complex event frames which have been mentioned in the story. given a story statement  a l i s t of frame statements with the same predicate is retrieved from each context fra-
me  and matches are attempted against all of them.  matches may be more or less good  which will be discussed in the next section.  while i am sympathetic to the view that even this amount of search will prove unacceptable in a system which is to deal with the complexities of real stories  
a more pressing problem is that even this flagrant use of search proves not to be sufficient. but to see t h i s   let us f i r s t consider another example where normal search is sufficient. 
 1  jack was painting the wall. at one point he had too much paint on the brush. q : what happened   a : possibly the paint dripped. 
in this example  ms. malaprop interprets  too much  as saying that some threshold has been exceeded and this leads to an undesirable effect. that is to say  ms. malaprop starts out by looking for a command in an active frame which matches  1 . 
 1   greater threshold paint-volume  
she will find painting1. once found  ms. malaprop simply states that this command was not  obeyed . any deleterious results from this will then be specified by the leads-to pointer from the command. 
but now consider the following example : 
 1  jack was painting a wall. at one point he pressed the brush too hard against the wall. question : what happened   
this i s   in fact  very similar to  1  only instead of saying there was too much paint on the brush  we are told that he pressed too hard. the result  of course  is the same  the problem  of course  is to figure this out. 
working in a parallel fashion to the  too much paint  example  ms. malaprop will attempt to find in one of the context frames a command matching 
 1   greater threshold pressure!  
were she able to find a match for  1  she would then proceed to say that the command was disobeyed  but given the search mechanism just explained she will not  in fact  find the match. the reasons are not precisely obvious but a l i t t l e explanation should make them clear. 
as was assumed in the original  too much paint  example  the actual command painting1 is to regulate the amount of paint - not the amount of pressure. painting1 does state however that one way this is done is by regulating the pressure  but this does not allow us to make the match needed for  1 . to see why  let us take a closer look at the relevant command. 

natural 	lanp;uaee-l: 	r h a r n i a k 
1 

 1  painting1  greater drip-threshold the amount of paint on the instrument  
c1mes-fr1m:  1a   a rule which states that surface volume varies directly with pressure  
 1b   apply pressure to instrument    
the comes-from here states that one applies pressure on the instrument  1b  and then by changing that pressure the volume will go up or down accordingly  1a . but to use this information to match 
 1  we must apply yet another rule  which states : 
 1  if x varies  in directly with y  then x greater or less than a threshold  vice versa if indirectly  can be caused by y being greater or less than a second threshold. 
in terms of our example this means that the program must f i r s t look into the simple event frame which expresses rule  1a  to note that the volume varies directly with the pressure  and then apply rule  1  to infer that we must keep the pressure lower than some threshold. this last statement is the command which will match  1 . 
given our previous search mechanism none of this would have taken place. for one thing the crucial information is not found in painting  but in the frame for rule  1a   and secondly  we need to apply yet a second rule  namely  1  before this information yields a match. we could  of course  simply loosen our restrictions on search so that a  story statements will not only be matched against the context frames  but any frames which are pointed to by the context frames  and b  extra rules may be used in matching. however  if we were somewhat worried about the effects of the previous search technique in terms of search time  this new  restriction   or rather the lack of restrictions  on search  will be problematic to say the least. 
the way in which ms. malaprop will actually handle this problem is quite different. it depends on the fact that in example  1  we not only know that there is  too much  of something  which is the portion of the input we have been emphasizing  but we also know that jack is pressing the paint brush against the wall. this latter statement w i l l   in fact  match  1b . once this happens  ms. malaprop will then go into a different search mode  called the  restricted search  mode. in effect she assumes that any embellishments of the matched story statement should be matched against the same portion of the frame. hence  in the attempt to match  1   she will concentrate all of her  energy  in the area of painting1  and by so concentrating will allow herself to go considerably deeper into subframes than she would normally. i have yet to work out the exact restrictions which will apply here  but for our purposes it is sufficient to note that in the normal circumstance   i . e . when we do not have any previous match within the sentence to tell the program which part of which frame is being discussed   only the  normal   relatively superficial  frame search will be allowed. 
let us consider a second example  differing in detail  but with the same over-all problem. 
 1  jack was going to paint his chair green. he got some blue and yellow paint. question : why   
the effect of the f i r s t line of  1  will be to set up an instance of the painting frame and note that the paint in question  although not yet mentioned in the story  will be green. because people get things in order to use them  the second line of  1  will try to bind the blue and yellow paint to variables in a previously established frame. however  in the case of  paint  this will be narrowed down considerably  because one of the facts 
which we will know about paint is that its typical role in l i f e is as the value of the variable paint in the painting frame. of course  in  1  this simple match will f a i l   for the colors are wrong  but note that we are again in a restricted search situation. that i s   we know already which portion of painting should match the second line of  1   so ms. malaprop will expend more effort in making the match. in particular  what should then occur is that the information about stuffcolor  as opposed to simply color which is  surface color   will be brought into play  and the search will be led to the frame for color mixing. once there it is all downhill. 
	iv. 	the problem of matching 
we have been talking about how ms. malaprop integrates a story statement by matching it against some frame statement. the last section was concerned with how potential matching frame statements are located  in this we will consider how the program decides that there is indeed a match. 
one factor is time. for example  given sufficient disparities in time  some context complex event frames will not even be considered  simply because the events they describe were over so long before the new event that there cannot be any relation. in other cases the time disparity is not so great and time will only serve to eliminate certain poss i b i l i t i e s within a particular frame. for example: 
 1  jack was going to paint the chair. he got some newspaper. question : why   answer : presumably to put under the chair. 
within painting there are two uses of newspaper : 
once at the beginning to put around the object to be painted  and then again near the end for wiping the brush  not shown in the version of painting given earlier . in  1   the fact that jack has just started painting suggests that the earlier use is more reasonable. hence we must s t i l l examine this context frame  but many of the later statements can be disregarded on the basis of time 

natural 	language-l: 	charniak considerations. 	example : 

but the major influence on matching is the binding of variables. this being a quite complex problem  let us start with the most simple situations and work our way up. 
 1  jack was going to paint the chair with a paint brush and some green paint. he dipped the paint brush in the paint. 
the f i r s t line of this example tells the program to set up an instance of painting  and further to make the following bindings : 
 1  agent = jack! object = chair! paint = green-paint1 
instrument - paint-brush1 
now  when we see the second line we will be trying to match : 
 1   liquid-in instrument paint  from the painting frame 
 1   liquid-in paint-brush1 green-paint  from the story 
here liquid-in is a predicate which expresses the fact that an object is submerged in a liquid. given that both instrument and paint are already bound to the objects they are supposed to match there is no d i f f i c u l t y and the match will be made. 
but we will not always have situations where all of the variables are bound in advance. for example : 
 1  jack was painting a chair. he dipped a brush into the paint. 
in trying to integrate the second line of  1  we have exactly the same situation as in matching  1  with  1   only this time neither of the relevant variables are bound. in such cases the bindings must be the result of the match. to see how this occurs  let us concentrate on instrument. 
once ms. malaprop notes that instrument is unbound she will examine the variable entry for the variable in painting  and will find  roughly speaking  the following : 
 1   instrument  1a   solid instrument  normal 
 1b   paint-brush instrument   1c   roller instrument  
 1d   absorbant instrument    
the statement before the normal states that the instrument must be a solid. those after give various statements which are normally true of the variable. in the case of jack's paint brush  it will certainly satisfy  1b  and if it is a typical brush will satisfy  1d  as well. in fact  simply satisfying  1b  would have been sufficient to ensure a match between instrument and paintbrush1. 
but now let us consider a s t i l l more d i f f i c u l t 
 1  jack was going to paint the chair. he dipped a sponge into the paint. 
we have here an anomalous situation  and if asked ms. malaprop would be quite right to say that she did not know what jack was doing. but suppose we add : 
 1  then he wiped the sponge across a leg of the chair. question : why   answer : i guess he is painting the chair with his sponge. 
the point of this example is that when f i r s t confronted with  1  the program tries to match  1  against : 
 1   liquid-in sp1nge1 paint!  
in the attempt to match sp1nge1 to instrument it will not only match the s t r i c t requirements  but will also match one of the normal conditions  that of absorbancy. however  this is not sufficient for ms. malaprop to make a match because a distinction is made between  normal object conditions   which state what sort of object the thing is  which are sufficient to match the variable  
and  normal property conditions   like  this thing is normally absorbant   which are not. however  ms. malaprop will remember in the case of  1  that there was at least some positive evidence for the match  and when  1  comes in and the same variable match is tried again  this will be deemed sufficient and the match will be made. 
this is somewhat complex  but it is not complex enough. in fact  the problem of matching as developed here is simply a special case of the recognition or diagnosis problem  and as such  given the notorious d i f f i c u l t i e s of these issues  is sure to remain beyond our grasp for quite some time. 
v. guessing  and guessing wrong 
i stated at the outset that i would not try to justify here the decision to have ms. malaprop  integrate  new information at read time rather than waiting for user questions. nevertheless  there are certain problems entailed by such a decision  and some discussion of these would be appropriate. 
to say that ms. malaprop  integrates  incoming story statements at read time is simply another way to say that she makes inferences at read time. so  in matching statements like  jack got some newspaper  against our frames we are assuming  that i s   inferring that the newspaper will 
be used in the course of painting. we then confront two problems. first  since in theory the number of such inferences is i n f i n i t e   which ones should the program make. secondly  such inferences  while quite reasonable  may upon occasion be wrong - jack may have fetched the paper because he was going to pack some glasses in a box 

natural 	lanruaro-1 : 	c h a r n a k 
1 

immediately after he finished painting. so if we 
are to make such inferences we must be able to unmake them as well. but how   
about the f i r s t of these i shall have nothing to say here. indeed  about the second of these i have l i t t l e to say - except for one point. if one hopes to correct mistaken beliefs  one should have some record of how this belief came about and what  if any  influence it has had on future computation. it is this question i wish to address  although we will approach it from a somewhat oblique angle. 
consider the following example : 
 1  jack was painting a chair. he dipped a brush into the paint. then he drew the brush across the chair. question : could this step be l e f t out   answer : no. question : why not   answer : because it is this step which gets the paint on the chair  and that's what painting is about. 
the interesting point about this second question is that it is a yery different sort of  why  question than the others we have considered. formerly we have been asking   what were the person's goals when he did this activity . this time the request is rather  how did you infer that this step could not be l e f t out . so derivational information is not only needed to correct mistaken inferences  but to answer questions as well. 
if we go back and look at how the program actually did infer that the step could not be l e f t out  we see that it used a rule  which in simplified form looks like : 
 1   and obligatory!  leads-to x g  
	1bligat1ry1  goal g a  	  
iff 
1bligat1ry1  obligatory x a  
this states that if action x leads to the goal of an action a  then x is obligatory with respect to a. the user of this rule in the present case will produce : 
 1   obligatory painting1 painting  c1mes-fr1m:  1bligat1ry1  
 actually  the relevant derivation would relate the story statement instantiating painting1 with that instantiating painting  but as usual  this introduces complications i would rather avoid.  in  1  c1mes-fr1m has been extended from its normal role of indicating how a state of affairs came about  and rather indicates how this particular fact was inferred.  the next example however will serve to indicate how close these two notions are within the system.  so  to answer the second question of  1  we simply follow the c1mes-fr1m pointer back to  1  and give the conditions which were used to make the inference as our answer. we will extend leads-to in the analogous fashion. 
now let us turn to a case of mistaken assumption. 
 1  jack finished painting. he did not clean the brush. he l e f t the brush in the paint. question : will the paint dry on the brush   
after the second line ms. malaprop will infer the bad results from the failure to wash the brush.  i think i can j u s t i f y this action  but not in the available space.  the problem with this inference in the case of  1  is that the last line tells us 
we jumped to a false conclusion. 
the crucial knowledge here concerns evaporation  and in a simplified form would look like : 
 1   and evap1  liquid on some surface  evap1  liquid exposed to air    
causes 
evap1  liquid dries  
using this fact  by the time we reach line three of  1  we will have : 
 1   paint is sticking to the brush  c1mes-fr1m:  the story i t s e l f   
leads-to:  evap1  
 1   paint exposed to air  
c1mes-fr1m:  air exposure rule  see below  
leads-to:  evap1  
 1   paint will dry  
c1mes-fr1m:  evap1  
in  1  the  air exposure rule  is a rule which states that  if there is no reason to believe the contrary  everything is assumed to be exposed to air. this rule  of course  is f a l l i b l e   and will be marked as such. 
given such a structure  we can see  in principle  the program's reaction to the last line of  1 . concluding that the paint on the brush will not be exposed to a i r   it follows the results of this assumption to the rule of evaporation  and negates i t   hence negating the fact that the paint brush will be unabsorbant the next time jack wishes to use it  a fact not included in  1 - 1   but which would be in a complete version . 
	vi. 	conclusi on 
aside from the frames themselves  almost none of the program described here has been implemented. there does exist a  frame checker  which checks the frames for correct syntax and translates them into the internal structure used by ms. malaprop. that is a l l . i would estimate that the version which will handle all of the examples herein is six months off  but previous experience tells me that such estimates are likely to be too ambitious by factors of two or three. 
i have no illusions that when completed ms. malaprop will handle these examples  correctly . 

natural 	laneuap:e-l: 	charniak 
1 

ms. malaprop can only be an approximation to  the truth  because she will have embedded in her approximate  or rather t r i v i a l i z e d   solutions to the many standard ai problems which have come up in the course of this paper : search  matching  diagnosis  visual recognition  problem solving  etc. 
ai workers have always believed in the essential unity of cognitive processes. at one time this was expressed in the belief that some simple idea  like heuristic search  underlay all of our mental a b i l i t i e s . ms. malaprop on the other reflects what i take to be the now emerging view - what we once took to be peculiar complexities of particular ai domains occur in the rest of ai as well. it is here that the unity lies. 
ac knowledgements 
this research was supported by the dalle molle 
foundation and the department of computer science  university of geneva. many of the ideas presented here were  batted around  in the institute's 
thursday afternoon seminars  and may properly  belong  to other people. but i doubt that any of us could remember. i would like to thank all the members of the seminar  and in particular walter bischof who displayed exemplary courage while being shot at. 
ire fj rences 
charniak  e. inference and knowledge  part i. in e. charniak and y. wilks  eds.   computational semantics  amsterdam  north-holland  1a  pp. 1. 
charniak  e. a framed painting : the representation of a common sense knowledge fragment. working paper 1  institute for semantic and cognitive studies  1b. 
minsky  m. a framework for representing knowledge. in p.h. winston  ed.   the psychology of computer v i sjon  new york  mc'graw-hi 1   1  pp.  1 f-1. 
rieger  c. an organization of knowledge for problem solving and language comprehension. in : a r t i f i c i a l intelligence  1  1  pp. 1~-1~. ~ 
schank  r. and abelson  r. scripts  plans and knowledge. in : advance papers of the fourth international conference on a r t i f i c i a l i n t e i ligence  tbil isi  1  pp. 1. 
appendix 
to give the reader some idea of the actual representation  i have included here two examples of frames as they are handed to ms. malaprop. before actually being used however they are converted to a somewhat more convenient property l i s t format  and some redundant pointers are added. 
 absorbed-by  state  
; this describes the state which typically ; results from the process of absorption. 
	vars:  flu 	 phys-ob flu  
; note that a f l u i d   such as paint  could ; be absorbed  only to dry and become a ; solid. this is why flu is not required ; to be a liquid. 
 normal:  liquid flu  	   sol 	 solid sol  	  
 sur-flu  part-of sur-flu flu   
　　　　 sur 	 surface sur sol   relations: 
 absorbedl  absorbed-by flu sol  implies 
	abs1rbed1  support sol flu  	  
; this states that a solid which has ab; sorbed a fluid supports i t . 
 abs1rbed1  absorbed-by flu sol  implies 
abs1rbed1  sticky-on sur-flu sur    ; some of the absorbed fluid will be on ; the surface. 
comes-from:  abs1rpti1  
	leads-to: 	 and  press1   v1l-inc1   	  
 absorption  simple-event  
; this frame describes how having a liquid ; adhere to the surface of an absorbant solid ; will cause absorption. 
vars:  liq abs1rpti1  liquid liq   ; absorption  as opposed to absorbed-by  ; requires a 1iquid. 
	 sol 	abs1rpti1  absorbant sol   
event: abs1rpti1  sticky-on liq  obj sol   causes 
	abs1rpti1  absorbed-by liq sol  	  

natural 	lanftuano-1: 	pharniak 
1 
