 	1 	presentation 

as natural language is highly ambiguous even in restricted domains  interactive disambiguation is seen as a necessity for achieving more robust and user-friendly interactive systems  face-to-face translation systems and dialogue-based machine translation systems. we have proposed a methodology which distinguishes between two parts in a disambiguation module: an engine  language- and application-independent  and a lingware  language- and application-dependent . the engine is  thus  to be reused in the design of any disambiguation module. this paper presents the current state of our work  that is: an engine that has been used to design two interactive disambiguation modules  for french  and english. 
1 	introduction 
1 	situation 
spoken  written or multimodal natural language is going to be used more and more as the interaction modality between human users and interactive software. natural language processing techniques do not  and will not  allow a really robust  fault-tolerant and user-friendly utilization of these modalities. 
1 	interest 
for the use of natural language to be more robust  faulttolerant  and user-friendly  we propose to integrate a disambiguation module as a component of every relevant piece of interactive software. the role of such a module is to help the recognizer  for speech  and the analyzer  for text  to produce an unambiguous representation of the user's input corresponding to his intention. 
we propose an interactive disambiguation methodology which is based on a clear distinction between two components: a language-independent one  the engine   and a language- and application-dependent one  the lingware . as the language independent part  the engine should be used in every designed disambiguation module. for each specific application  a specifically designed lingware should be produced as automatically as possible. 
we will first introduce our basic ideas and proposals. in the second part we will present the current content of the lingware and then the existing implemented engine. the fourth part is dedicated to a brief presentation of our first experiments with the lingware. a first disambiguation module has been designed and implemented  for french input  within a first mockup in the framework of the lidia project of dialogue-based machine translation  boitet and blanchon  1 . a second one has been designed and implemented  for english input  in the framework of speechto-speech translation. 
1 	basic ideas & proposals 
1 	software architecture 
in the architecture we propose  an interactive disambiguation module is made of two components. 
- an engine  which is the core of the module and is language-independent. it will be used in all the disambiguation modules to be developed. 
- a lingware  which is language-dependent. it constitutes input data for the engine so as to instantiate a particular disambiguation module. 
we are thus aiming for application independence  with the restriction that the linguistic structures produced by the application can be handled in the proposed framework. 
1 	lingware 
ideally  we would like to provide the designer of a disambiguation module with a set of tools allowing him/her  at least  to describe1: 
- the ambiguities to be solved  even though most of then should be discovered automatically  
- the labeling of the questions to be asked to solve these ambiguities  
- the order in which the ambiguities should be solved  if several are present  
* the modalities to be used to solve each ambiguity  
1 	natural-language processing and graphical presentation the items introduced by  -  have already been investigated  the items introduced by  *  have not been investigated yet. * the modalities to be used to answer the questions about each ambiguity  
* the way questions should be prepared and displayed. 
1 	engine 
the engine is then designed to use the lingware to instantiate an interactive disambiguation process. it should provide1: 
	- 	an ambiguity description language  
* an augmentation tool to increase automatically or semi-automatically the number of recognized and solved ambiguities  
- an ambiguity recognition mechanism to be used to recognize the ambiguities  
- a set of operators to be used to describe the construction of the labeling of the dialogues  
- a mechanism to realize the ordering of the ambiguity recognition process  
- predefined dialogue classes corresponding to the possible modalities  
- a question presentation mechanism  
* 	a set of question preparation  display and answering strategies. 
1 	the lingware 
the structure manipulated in our context is a tree structure called an  mmc structure.  this stands for  multisolution  multilevel and concrete.  the ambiguities are thus described in terms of tree structures. 
1 	ambiguity description 
a type of ambiguity is described as a set of patterns  a beam  
 fig. 1 . a pattern describes a tree structure  with variable parts  forests   with constraints on its geometry and labeling. 

figure 1. patterns for a prepositional attachment ambiguity 
the previous figure  fig. 1  shows the graphic description of a beam made of two patterns. in those patterns  the nodes arc x  y  and z; the forest variables are pi  p1  and p1. this graphical representation makes explicit the geometrical constraints. 
figure 1 shows the internal representation of the left hand side pattern shown in the previous figure. 
it is shown that a pattern has a name  a value  its description   and a method. 
the node variables are  x   y   z; they are constrained on the value of one of their fields. in the first pattern  fig. 1 : 
- the value of the field cs of the node  x must be phvb  
- the value of the field fs of the node  y must be obj  etc. 
the forest variables are  p1   pl   p1. they are constrained on their length by the symbol  + stipulating them not to be empty. 
the item-production-method is described in ¡ì 1. a class  or family  of ambiguity is described as a set of beams called a stack. for example  the ambiguities of coordination can be described as a class of ambiguity  and of course  there are several types of ambiguity of coordination. 
1 	ambiguity resolution 
a dialogue item production method is associated with each pattern to describe a rephrasing of the part of the sentence recognized by the pattern. this rephrasing is produced using the forest variables instantiated during a successful match. the variables are manipulated with a set of operators. 
the following figures  fig. 1  show the dialogue item production methods associated with the pattern *phvbprepatttl-l* fig.1 . 
 defmethod item-production-method 
  pattern-name  eq1 '*phvbprepatt-tl-l*   binding  
 format n i l  ~a  ~a -a .  
 text  cdr  assoc   p1 binding     text  cdr  assoc ' pl binding    
 text  cdr  assoc ' p1 binding      
figure 1. item-production-method   pattern-name  eql 
' phvbprepatt-tl-1*   binding  
this method  fig. 1  will produce a string made of the text of po  the text of p1 and the text of p1 with the texts of p1 and p1 bracketed together. 
1 	ambiguity recognition state 
the order in which the different ambiguity classes are to be solved has to be defined. an automaton is used to implement this order. in this automaton  there is one state per ambiguity class defined. the states are organized so as to uphold this order. 
the skeleton of those states is the same: 
	- 	if one ambiguity of the class of ambiguity to be 

 defvar *phvbprepatt-tl-1* 
 make-instance 	'pattern 
:pattern-name '*phvbprepatt-t1l* 
:pattern-value 
'   is  x node-prop-equal-p 'cs 'phvb  
  +  p1  
   is  y node-prop-equal-p 'fs 'obj  
  +  pl  
   is  z node-prop-equal-p 'fs 'atg    +  p1     
:pattern-method #'item-production-method   
figure 1. the pattern *1phvbadvatt-t1* 
recognized is actually recognized; then a question has to be prepared and other ambiguities have to be found in the concerned sentence  
- if no ambiguity of the class of ambiguity to be recognized is recognized; then there is transition to the following state in the automaton. 
1 	localized dialogue boxes 
in the current implementation the questions to be asked to the user are displayed as dialogue boxes on the screen. these 

dialogue boxes contain the ambiguous phrase and a set of rephrasing items from which the user will choose the intended one. 
the language used to present the question to the user is the language to be disambiguated. thus there is a need to specify some generic classes that are provided. 
for example figure 1 shows a specification of the generictextual-clarif-dialog-class textual dialogue box class for english. the invitation-string  the prompt-string  and the window-title are labeled in english. if the question were to be asked in french  the generic-textual-clarif-dialog-class would have to be specified for that. 

figure 1. some dialogue boxes' slots 
1 the e n g i n e 
1 a m b i g u i t y r e c o g n i t i o n & q u e s t i o n c o n s t r u c t i o n 
pattern & beam matching 
pattern matching 
the patterns are described with a language derived from the one proposed in  norvig  1 . pattern matching also inspired by the proposals in  norvig  1  has been implemented. 
the result of the pattern matching mechanism is a binding list containing the value  if any  of each variable in the pattern. 
beam matching 
a sentence s  with s solutions soli  contains the ambiguity described by the beam b made of b patterns pj if and only if: 
- the number of solutions  s  is strictly greater than the number of patterns  b   
- for each solution soli there is an unique pattern pj that matches that solution  
- each pattern pj matches at least one solution soli  
- the distance fd between the bindings of the forest variables is null. 
operators 
operators are used to describe the dialogue items' construction. they are used by the prepare-question-tree module  cf. fig. 1  and allowed to perform several operations on the binding of the variables. three families of operators are defined to perform: selective projection  access to the lexical database  and formatting operations. for a decribed description of the operators refer to  blanchon  1   
disambiguation question class 
the disambiguation process produces a question-tree made of disambiguation questions. those questions are to be asked to the user according to the modalities to be used. in the current implementation  the questions are displayed as dialogue boxes on the screen. each disambiguation question is an instance of the predefined class c l a r i f i c a t i o n question-class. 
1 disambiguation automaton 
each state of the automaton is defined as a clos method. there are basically three kinds of states: 
- an entry point  that is  the first state of the automaton. it is called automaton-scheduler and provided by the engine  
- meta-ambiguity recognition states provided by the engine  and  
- ambiguity class recognition states provided by the lingware. 
a u t o m a t o n e n t r y 	p o i n t 
the method automaton-scheduler is the entry point of the disambiguation automaton. if there is no ambiguity to be solved  this state is also the exit point of the automaton. when there are no more questions to be prepared  an empty question is produced which is a leaf of the question tree . 
meta-ambiguity recognition states 
a meta-ambiguity recognition state is a predicative state used as a branching state in the automaton. so far we have proposed three ambiguity meta-classes. these classes are called: lexical-ambiguity  geometrical-ambiguity and labeling-ambiguity. they are refined by the designer of the lingware into several designer-defined classes of ambiguity. 
scheduling 
thus  a disambiguation automaton should be shaped as shown in figure 1. 
the lexical ambiguities are to be solved first  then the geometrical ones  and finally the labeling ones. this strategy is guided by the following principles: 
1 first  find the right simple phrases  i.e. solve the lexical ambiguities   
1 second  find the construction of the verbs  i.e. solve the labeling and some of the geometry ambiguities   
1 third  find the structure of the dependents of the verbs  i.e. solve the geometry ambiguities which did not fall in the previous case   
1 last  find the word senses. 
those criteria seem reasonable and natural. moreover  the order of the kinds of questions will not be changed to improve the usability of the system. 

1 	natural-language processing and graphical presentation 


figure 1. general organization of a disambiguation automaton 
1 question construction & presentation 
question construction 
once an ambiguity has been recognized  a question is produced. the dialogue item construction method associated with the recognized patterns are applied using the value of each of the variables used to describe them. 
question tree construction 
the construction of the question tree is a loop in a disambiguation automaton organized by the prepare-questiontree method  fig. 1 . 

           figure 1. the question-tree construction when a question tree has been built  it is presented to the user by the question-tree-presentation method. 
question tree presentation 
for a given ambiguous utterance  the disambiguation automaton produces a question tree. the question tree is covered by the question-tree-prcsentation function until no more questions arc to be asked. the method ask-question proposes the question to the user. 
1 	implementation 
so far we have developed two disambiguation modules; one for french and one for english. they are briefly described here. 
1 	a french input disambiguation module 
context 
the module for french has been developed at the geta laboratory in the framework of the lidia project of dialogue-based machine translation  boitet and blanchon  1 . it is currently made of 1 beams. 
corpus 
for the lidia-1 mockup we constructed a corpus of ambiguous sentences. those sentences were chosen from the literature about ambiguity in french  fuchs  1  vauquois and nedobejkine  1 . the sentences were selected according to their underlying linguistic structure. the wording was not considered. 
classification & example 
we have defined the following ambiguities described by means of beams. 
* lexical ambiguity verbal coordination 
- ii atteint la grange et la ferme1. 
* 	geometrical ambiguity argument structure of the verb 
- ii parle depuis l'ecole de cuisine1. 
- le capitaine a rapporte un vase de chine1. 
noun coordination 
- on etudie l'ecolution de la structure de la bourse et des investissements1. 
adjective coordination 
- ii prends des cahiers et des classeurs noirs1. subordination 
- elle epouse un professeur de droit anglais1. 
dialogues 
here is a set of examples of the produced dialogues. 
1  he reaches the barn and the farm or  he reaches the barn and closes it. * 1 he speaks from the school  about cooking or. he speaks from the cooking school. 
1  the captain brought a vase from china or  the captain brought a chinese vase. 
1  we are studying the evolution of the structure of the investments or  we are studying the investments. 
1  black files or  black files and black notebooks. 
1  an english professor or  a professor of english law. 

figure 1. dialogue for a verbal coordination ambiguity1 

figure 1. dialogue for an ambiguity of argument structure of the verb  type 1 

figure 1. dialogue for a noun coordination type 1 ambiguity1 
1 a n e n g l i s h i n p u t d i s a m b i g u a t i o n m o d u l e 
context 
the module for english has been developed in the framework of speech translation  blanchon  1 . it is currently made of 1 beams. 
corpora 
the ambiguities which make up the first corpus upon which the clarification mechanism was based were taken from a data base of spontaneous speech. the conversations  between native speakers of american english  were recorded during an experiment conducted in the environment for multimodal interaction  emmi   loken-kim  et al.  1   and took 
1  	he reaches the farm  he closes the barn. 
1
 he speaks from the school about cooking  he speaks from  the cooking school . 
1  the proposed interpretations are: we study the investments  we study the evolution of the investments. 
place via both telephone and multimedia communication contexts  fais and loken-kim  1 . 
a description of the ambiguities to be solved is given in 
 fais and blanchon  1  
classification & examples 
so far we have defined the following ambiguities described by means of beams  
	* 	lexical ambiguity 
- this is an english speaking agent. 
	* 	geometrical ambiguity 
- let me pull out my maps to help you. 
- where can i catch a taxi from kyoto station. 
- you are going to the international conference center. 
- i will show you where you are located right now. 
- you can pay for it right on the bus 
- you can tell him that you are going to the international conference center and it should be a twenty minute ride. 
dialogues 
here is a set of examples of the produced dialogues. 

figure 1. dialogue for  let me pull up my maps to help you.' 

figure 1 . dialogue for  you are going to the international conference center.  

figure 1. dialogue for  you can tell him that...  

1 	natural-language processing and graphical presentation 

1 	conclusion & perspective 	