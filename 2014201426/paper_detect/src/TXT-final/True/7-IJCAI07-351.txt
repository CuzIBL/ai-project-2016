
in recent years  probabilistic approaches have found many successful applications to mobile robot localization  and to object state estimation for manipulation. in this paper  we propose a unified approach to these two problems that dynamically models the objects to be manipulated and localizes the robot at the same time. our approach applies in the common setting where only a lowresolution  1cm  grid-map of a building is available  but we also have a high-resolution  1cm  model of the object to be manipulated. our method is based on defining a unifying probabilistic model over these two representations. the resulting algorithm works in real-time  and estimates the position of objects with sufficient precisionfor manipulation tasks. we apply our approach to the task of navigating from one office to another  including manipulating doors . our approach  successfully tested on multiple doors  allows the robot to navigate through a hallway to an office door  grasp and turn the door handle  and continuously manipulate the door as it moves into the office.
1 introduction
many believe that general-purpose robots will soon inhabit home/office environments and carry out a large variety of tasks  for example fetching items  delivering messages  or cleaning up a room. at a bare minimum  such robots must navigate in these environments as well as interact with them. in this paper  we present a unified probabilistic approach to state estimation for simultaneous manipulation  of objects in the environment  as well as global navigation. using this approach  we successfully enable a mobile manipulation platform to navigate from far away up to a door  manipulate the door handle so as to open the door  and enter an office while simultaneously continuing to manipulate the door. this work was done as part of the stair  stanford artificial intelligence robot  project  which has the long-term goal of building a useful robotic assistant that can carry out home/office tasks such as those described above.
¡¡over the last decade  probabilistic techniques have found great success in mobile robot navigation  e.g.   fox et al. 

figure 1: stair robot platform manipulating a door during one of our experiments.
1a  . in much of this literature  the environment is modeled as static  unchanging   and there is no interaction between the robot and the environment. more recently  a number of authors have developed models for non-static environments. for example   biswas et al.  1; anguelov et al.  1; 1; ha¡§hnel et al.  1  use an off-line em algorithm to differentiate between static and non-static parts of an environment. a few algorithmsalso performon-linemapping while taking into account non-static information.  wolf and sukhatme  1  use separate occupancy grids for dynamic obstacles  e.g.  moving people  and static obstacles;  stachniss and burgard  1  maintain clusters of local grid maps corresponding to different observed configurations of the environment; and  biber and duckett  1  model temporal changes of local maps.
¡¡robots typically interact with the environment using manipulators. most work on manipulation focuses on properties of specific objects to be manipulated  rather than on moving in or understanding the global environment  e.g.  shekhar  1; moll and erdmann  1  . with a few exceptions  e.g.   petrovskaya et al.  1; slaets et al.  1    most of this literature also does not have probabilistic basis  and thus at first blush it appears difficult to derive a single unifying model that seamlessly integrates navigation and manipulation.
¡¡the task of mobile manipulation combines both navigation and manipulation. most current work in mobile manipulation treats these as two tasks to be solved separately: first  mobile robotics techniques are used to navigate to a specific point; then  a separate set of techniques is used to localize objects to be manipulated. for example  in the context of door opening  navigation and manipulation of the door handle were considered in  rhee et al.  1  and  petersson et al.  1 . in both approaches  navigation to the door was performed as a separate task. the door handle is then localized only after the robot is already in front of the door  and a combination of visual servoing and tactile feedback is then used to grasp the door handle  and finally the door is opened by having the robotfollow  with some compliance a pre-scriptedset of motions. localization during door opening or while entering the doorway was not considered.
¡¡in this paper  we present a unified  real-time  algorithm that simultaneously models the position of the robotwithin the environment  as well as the objects to be manipulated. it allows us to consider manipulation of large objects  such as doors  filing cabinets and chairs. when the state of these objects changes  it significantly impacts navigation tasks. thus our goal is to simultaneously model a dynamic environment as well as localize ourselves within it. because this objective is reminiscent to that of simultaneous localization and mapping  slam   we will find that we can borrow many ideas from slam   thrun et al.  1  . however  our objective is also different in two significant ways: first  the environment changes very significantly as we interact with  manipulate  it  and second  the precision required  1mm  for manipulation is 1 orders of magnitude higher than is typical for most slam applications.
¡¡tested successfully on multiple doors  our approach enables our robot to navigate towards  manipulate  and move through a door.  figure 1.  in contrast to prior art on door opening  we are able to estimate parameters with high precision even during motion of the robot. thus no additional delay is required to locate the door handle once the robot reaches the door. further  using the same  seamlessly integrated probabilistic model  the robot is able to precisely estimate the position of the door even while the robot and/or door are in motion  so that the robot can continuously manipulate the door even while it is passing through it.
1 representation
1 probabilistic model and notation
one of our tasks is to determine the robot's position and orientation within an environment. we denote the robot's pose by x =  x y ¦È . in this paper we will restrict our attention to manipulating a single dynamic object placed in the environment. concretely  consider an example where the position of the object is known  a reasonable assumption for doors  filing cabinets  elevators  etc.   but whose shape is governed by an object state parameter ¦Á. for example ¦Á could be the angle at which a door is open  or the extent to which a drawer is pulled out of a filing cabinet.1

figure 1: dynamic bayesian network model of the robot pose xt  object state ¦Át  measurements zt  and controls ut.
¡¡at each time step t  we give the robot a new motion command  ut  and obtain a new measurement zt from its sensors. the robot pose and the object state evolve over time  and at time t are denoted by xt and ¦Át respectively. we model xt  ¦Át  zt  and ut jointly using the dynamic bayesian network shown in figure 1. in detail  given the robot pose and a new control  the pose evolves according to a probabilistic motion model derived from robot kinematics:
p xt|xt 1 ut .
the object state evolves according to:
p ¦Át|¦Át 1 .
similarly  sensor measurements are governed by a measurement model  discussed in section 1 in more detail :
p zt|¦Át xt .
we define the robot trajectory to be a vector of all robot poses up to the current time step  written xt =  x1 x1 ... xt . similarly  we write zt and ut to denote all measurements and controls up to time t.
1 representation of environment
following standard practice in mobile robot navigation  we represent the environment using an occupancy grid map  figure 1a  of the form typically constructed by mobile robots using slam. these coarse maps typically use grid cells that are 1cm x 1cm  and are thus well suited to navigation where 1cm resolution is acceptable. however  manipulation tasks require 1mm precision  and constructing a 1mm grid map of an entire building is clearly impractical-both from a memory storage point of view  and because these maps are typically built using noisy sensors. consequently  we choose to use a combination of high and low resolution maps. we use a high resolution map only for the parts of environment  i.e.  the objects  we are interested in manipulating. in the present paper  we use models comprising polygonal objects   polygon models   to represent these objects at high-resolution;

n  including settings where ¦Á also captures the position/orientation of the object being manipulated  offers no special difficulties.


	 a 	 b 	 c 
figure 1:  a  occupancy grid map.  b  actual environment.  c  our representation: polygon model is  pasted  onto a grid map. the green box shows the bounding box of the polygon model; and the black lines show the polygon model.  best viewed in color. 	 a 	 b 
figure 1: example of laser ray traveling through grid cells.
this representation is well-suited to modeling doors  filing cabinets  straight walls  etc. figure 1c shows an example polygon model of a door together with the surrounding grid map. our polygon models also allow us to model the changes in the shape of articulated objects  e.g.  opening doors or filing cabinets  in a very natural and efficient manner  simply by letting the position or orientation of some of the polygons be parameters.
¡¡thus  a complete representation of the environment consists of a combination of an occupancy grid map and a polygon model. further  the polygon model's shape is governed by object's state parameter ¦Á.
¡¡our choice of this combination of models is motivated by our goal of having the robot be able to open any door  and enter any office  in our office building. since all offices in our building are built on a common theme  all doors are essentially identical  and thus it suffices to build only a single polygon model of a door  via careful measurement . wherever a door is present in the building  this same polygon model can then be rapidly  pasted  onto a 1cm-resolutiongrid map that has been built via standard slam techniques. this allows us to very rapidly acquire a map of the entire building  including 1cm-resolution models of all the doors in it.
1 measurement model
this section describes the measurement model p zt|xt ¦Át  used in our approach. for this work  we focused on using a single sensor: a sick laser scanner. because our map comprises both low-resolution  1cm-grid cells  and
high-resolution  1-mm  polygon model  components  we desire a measurement model that has a consistent interpretation regardless of the resolution at which the map is represented. specifically  we know that the 1cm grid cells are inaccurate-the building walls  chairs  etc.  are unlikely to be aligned with the global 1cm grid-and thus we wish to model the 1cm grid map as probabilistically impeding the laser ray in a way that is noisier than the more precise polygon model.
¡¡in detail  the 1cm grids are usually only partially occupied  and thus there is a chance of the laser passing through it entirely. thus  rather than simply modeling each grid cell as occupied or unoccupied  we will instead associate with each grid cell a probability that a laser ray terminates within that grid cell. because our map has multiple resolutions  it is insufficient to associate with each grid cell  depending on the type of material  say  a probability of that grid cell impeding the laser. to understand this  consider the toy map shown in figure 1  which we can choose to represent via either a lowresolution  1cm x 1cm  grid  or a higher-resolution  1cm x 1cm  grid. if we model a grid-cell as having a probability p of impeding a laser  then the chance of the laser being impeded by the 1cm x 1cm region in figure 1a is p  whereas the chance for the map on the right is p1  since it passes through three grid-cells . clearly  it is undesirable that the measurement model change just because we chose to represent an object at a different resolution.
¡¡there are a variety of solutions to this  but we consider the most natural one to be the probabilistic interpretation of occupancy grid maps proposed by  eliazar and parr  1 . their interpretation was motivated by the observation that the more naive model  using a fixed probability p for each grid cell  shows anomalous effects depending on the angle at which a laser travels relative to the grid lines  even if all the grid cells are the same resolution. however  the same interpretation turns out to also elegantly address our problem of using multi-resolution maps.
¡¡in this model  each cell of a grid map is associated with an opacity ¦Ñ.1 the probability of a laser ray being interrupted by this cell depends both on the opacity and on the distance the ray travels within the cell. in detail  the probability of a ray terminating  i.e.  being interrupted  while traveling from point r1 to point r1 in a medium of opacity ¦Ñ is defined as:

immediately  we see that the probabilities of the ray terminating under the maps in figure 1a or 1b are the same  since the total distance is the same in either case  assuming that all the grid-cells have the same opacity ¦Ñ . thus  this model allows us to give a consistent probabilistic interpretation to multi-resolution maps.
¡¡more generally  suppose a laser travels in a direction that  if it were unimpeded  would take it through n different regions in the map. here  a  region  can be a grid cell  from the low-resolutionmap  or a polygonalregion  from the polygon map   such as a polygon that represents the shape of a door  or one that represents part of the door-frame. we let r1 r1 ... rn denote the points at which the laser ray would transition from one region to another  if it were to pass through all regions unimpeded   with r1 denoting the origin of the laser ray. we also let ¦Ñ1 ... ¦Ñn denote the opacities of these regions. the probability of the ray terminating within the i-th region is then:
.
this allows us to define the probability that the laser terminates at any specific range r. finally  if the laser terminates at a certain range r  we model the actual observed laser measurement z to be the range corrupted by gaussian noise:
	z = r + n 1 ¦Òrng1	 	 1 
1 inference
1 rao-blackwellization
we now describe an inference algorithm that reasons about the robot trajectory and the object state based on a set of measurements and controls. specifically  we compute the following belief:
belt = p ¦Át xt|zt ut .
note that the belief includes the entire robot trajectory up to time t  but only the latest object state. this choice turns out to be important for deriving an efficient rao-blackwellized filter.  this is a consequence of the fact that the current belief about the state of the door depends on the entire past trajectory-which  e.g.  indicates which of the past sensor measurements were directed at the door. a similar derivation is also used in  montemerlo  1; murphy and russell  1 . 
¡¡in detail  we apply a rao-blackwellized particle filter  rbpf   where in each particle we encode the entire robot trajectory and a posterior distribution of the object state. thus  we split up the belief into two conditional factors:
belt = p xt|zt ut p ¦Át|xt zt ut .
the first factor encodes the robot trajectory posterior:
rt = p xt|zt ut .
the second factor encodes object state posterior  conditioned on the robot trajectory:
st = p ¦Át|xt zt ut .
the factor rt will be approximated using a set of particles; the factor st  which estimates the angle of the door  will be approximated using a gaussian distribution  one gaussian per particle .
1 robot trajectory estimation
within each particle we record a guess of the robot trajectory xt  and a gaussian approximation st to the object state.
we will denote a particle by qmt =  xt  m  st m   and a collection of particles at time t . we compute
qt recursively from qt 1. suppose that at time step t  particles in qt 1 are distributed according to rt 1. we compute an intermediate set of particles q¡¥t by sampling a guess of robot pose at time t from the motion model. thus  particles in q¡¥t are distributed according to the robot trajectory prediction distribution:
r¡¥t = p xt|zt 1 ut .
to ensure that particles in qt are distributed according to rt  asymptotically   we generate qt by sampling from q¡¥t with replacement in proportion to importance weights given by wt = rt/r¡¥t. section 1 explains how these weights are computed. for now  we note that since only the latest robot pose is used in the update equations  we do not need to actually store entiretrajectories in each particle. thus the memory storage requirements per particle do not grow with t.
1 object state estimation
we use a gaussian/extended kalman filter  ekf  approximation to estimate the object state posterior  st. thus we keep track of the mean ¦Ìt and variance ¦Òt of the approximating
gaussian in each particle:.
¡¡since st involves only the latest object state ¦Át  and not the entire object state history ¦Át   storage and computation requirements here also do not grow with t. we have:
st=p ¦Át|xt zt ut ¡Øp zt|¦Át xt zt 1 ut  p ¦Át|xt zt 1 ut =p zt|¦Át xt  p ¦Át|xt zt 1 ut . 1 the first step above follows from bayes' rule; the second step follows from the conditional independence assumptions of our model  figure 1 . the expression  1  is a product of a measurement likelihood term and an object state  dynamical model  prediction term  which is defined  similarly to r¡¥t  as:

because p ¦Át 1|xt 1 zt 1 ut  is already approximated as a gaussian  represented by a rao-blackwellized particle from the previous timestep  and we use a linear-gaussian model for p ¦Át|¦Át 1   we can easily compute the mean and

 a 

 b 

 c 
figure 1: robot localization with estimation of door state. the robot is denoted via the small rectangle; the rays emanating from the robot show the laser range scans; and the estimated door angle is also shown in the figures. the sequence of three images show the robot approaching  opening  and having passed through the door.
variance of s¡¥t above in closed form. similarly  by using a laplace approximation to obtain a gaussian approximation to the measurement model p zt|¦Át xt   using equation  1  we can also compute the mean and variance of st in closed form.
1 computing importance weights
briefly  following the derivation in  montemerlo  1   it is straightforward to show that the importance weights wt should be:

in words  the importance weights are the expected value  over the object state prediction distribution  of the measurement likelihood. since the two terms p zt|¦Át xt  and s¡¥t are already approximated as gaussians  as described in section 1   this expectation can be expressed as an integral over a product of two gaussians  and can thus be carried out in closed form.
1 using scaling series to increase precision
for mobile robot navigation  1cm precision is usually acceptable and gives reasonable performance. thus in deployed implementations it is fairly common practice to assume a large laser noise variance and use only a few laser rays per measurement update  which results in an approximation to the next-state rt that has fairly large variance. however  to perform manipulation tasks we require sub-centimeter precision in localization. achieving this requires that we use most of the laser measurements in every update  and assume a realistic  small  variance in the laser readings. this results in a very peaked measurement model  in which most of the probability mass of our robot's position estimate is supported by a very small region  of perhaps 1mm diameter . a consequence of this is that it becomes difficult during the usual importance sampling step to draw a sufficient number of particles from this region to represent it well.
¡¡in  petrovskaya et al.  1   a tactile localization application was considered that also had the similar problem of a very sharply peaked measurement model. they proposed a  scaling series algorithm  to efficiently produce a much more informed proposal distribution  one that is concentrated around the areas of high probability mass. we refer the reader to  petrovskaya et al.  1  for details on the scaling series  but briefly  the algorithm works by performinga series of successive refinements  generating an increasingly informative proposaldistribution at each step of the series. the successive refinements are performed by gradually annealing the noise variance parameter within the measurement model from an artificially high value down to a realistic variance setting.
¡¡in our setting  we applied the scaling series algorithm to choose the proposal distribution on each step of importance sampling in our particle filter. to do this  we annealed the measurement noise variance parameter ¦Òrng in equation 1 and performed a series of successive refinements. this resulted in a much more informed proposal distribution  which allowed us to perform localization using only about 1 particles per step.
1 experimental results
we apply our algorithm to the task of manipulating door handles and doors. the stair  stanford artificial intelligence robot  project is an ambitious  long-term  1 year  project that seeks to build a useful home/office robotic assistant. thus the ability to use doors and enter offices and conference rooms is of great practical importance to the robot.
¡¡we obtained 1cm resolution occupancy grid map by using standard slam algorithms with a mobile robot equipped with a laser.  see figure 1a.  further  as discussed in section 1  because all doors in our building are essentially identical  it is possible to build a single precise polygon model of a door  and then rapidly  paste  the same model into the grid map at all places where a door exists. our polygon model includes the door itself  the door frame  and a small surrounding region  and also encodes the position of the door hinge.
algorithmsdatasetsamclrbpfrbpf-ss1.1cm1cm1cm1.1cm1cm1cm1.1cm1cm1cm1.1cm1cm1cm1.1cm1cm1cm1.1cm1cm1cm1.1cm1cm1cm1.1cm1cm1cm1.1cm1cm1cm1.1cm1cm1cm1.1cm1cm1cm1.1cm1cm1cmoverall rms1cm1cm1cmtable 1: positioning rms error comparison of three localization algorithms: adaptive mcl  amcl   raoblackwellized particle filter  rbpf   and full proposed algorithm  rbpf-ss . each of the 1 experiments shown was an average over 1 runs of each algorithm; final row shows the overall rms error.
 figures 1b and 1c show a door and its polygon model representation.  although not part of the polygon model  we note that the door handle is also at a fixed  known position relative to the surface of the door  and can thus be straightforwardly computed if the position of the door  including the opening angle ¦Á of the door  is known.
¡¡the stair mobile manipulation platform comprises a segway mobile platform  a harmonic arm manipulator  and a sick laser. the arm has a fairly limited operational range  workspace   and has barely enough power to turn the door handles-it is able to do so only from certain configurations  where the load is spread more evenly among its motors-and thus there is only a very small 1cm x 1cm region from where the robot is physically capable of opening the door. even within this region  localization accuracy of about 1mm is necessary to correctly grasp  turn  and manipulate the handle.
¡¡several videos showing results of the robot opening a door are available at the website http://cs.stanford.edu/¡«anya/stair/
the robot navigates to the door  turns the handle and opens the door slightly; then as it is moving through the door  the arm continues to manipulate the door by continuously pushing it open in front of the robot. our state estimation algorithm is used in real-time to continuously estimate the position of the robot and the opening angle of the door  and thereby control the arm to continuously push the middle of the door. even though the map changes drastically each time the robot opens the door and moves through it  see figure 1   in our experiments the proposed approach invariably gives precise state estimates and results in successfully manipulating and navigating through the door. tested 1 times  1 times on each of 1 doors   the algorithm succeeded each time in giving sufficiently accurate state estimates to open  continuously manipulating  and move through the door.
although our algorithm allowed us to solve the practical problem of going through doors in our building  we now also present a more formal evaluation of its performance.
¡¡for the experiments presented below  we collected several minutes of laser and odometry data of the robot's approach towards a door in twelve distinct test situations. we considered 1 different doors  in different parts of the building ; we considered each door in 1 different positions  closed  open  half-open . the purpose of this set of experiments was to test our approach against others in identical conditions. to ensure fairness of comparison  the same real-time computation requirements were imposed on all three algorithms. since the algorithms considered are non-deterministic  we ran each algorithm 1 times for each dataset. to give a quantitative evaluation we computed  for each algorithm  the root-meansquare  rms  error with respect to ground truth among 1 runs for each test situation  and then averaged over all twelve test situations  summarized in table 1 . for the ground truth  we used the maximum a posteriori estimate of the door and robot position using a fine  1mm  grid within a 1cm area around the robot's final position in each test case.
¡¡to provide a baseline comparison  we used the adaptive mcl localization algorithm implemented in player  see  gerkey et al.  1  . this implements the kld mcl method proposed in  fox  1   and uses a 1cm occupancy grid map. in agreement with results reported by  stachniss and burgard  1   we noticed that if the actual door state does not correspond to the mapped door state  the robot gets  lost   which manifests itself as increased positioning error. if the door state does correspond to the map  the robot is able to localize with a rms error of 1cm.
¡¡we also tested an  intermediate  algorithm that uses the polygon map and grid map combination  also using a raoblackwellized particle filter  but without the scaling series algorithm to choose its proposal distributions. empirically  this algorithm is able to localize and estimate the door state fairly accurately. the rms error of robot pose in this scenario was 1cm  which is insufficient accuracy for manipulating the door handle.
¡¡our full algorithm  using the scaling series proposal distributions  and the same update rate as the intermediate algorithm  is able to estimate robot pose with an rms error of about 1mm. using this algorithm  we were able to reliably open multiple doors.
1 discussion and conclusions
one frequently discussed difficultly of rao-blackwellized algorithms  specifically of fastslam  is that of extinction of particles. in fastslam  if a robot does not visit part of a map for a long time  then because the map is static  through the normal death of particles there will be very little diversity in its posterior representation of that part of the map. less formally  the algorithm becomes overly confident in its estimate of the map  which makes it difficult for the robot to accurately estimate that part of the map if it later returns to it.  see discussion in  montemerlo  1 .  in contrast  because we are estimating a dynamic parameter-namely the opening angle of the door  which is modeled as a dynamic  changing  variable-this is not a problem for our algorithm. specifically  if the robot wanders away from the door for a long time  then its posterior estimate of the door's distribution will converge to its stationary  uncertain  distribution  and thus the particle filter will correctly capture the fact that we should be very uncertain about the state of a door that we have not seen for some time.
¡¡one possible direction for future work is consideration of highly crowded environments. while we did have occasional passersby during our experiments  and our algorithm was resilient to these effects   overall the amount of unmodeled effects was low and the map provided a good representation of the environment. unmodeled effects can be considerably more frequent in highly crowded or cluttered environments  e.g. high traffic public areas such as a museum or cinema theater. these environments have been considered  from a mobile robot localization perspective  by  fox et al.  1b   who proposed a range data filtering technique to improve robustness of localization. similar techniques can be added to our algorithm to increase robustness for mobile manipulation in these environments.
¡¡while designing the algorithm  we also had in mind the applications of manipulating  opening/closing  a filing cabinet sliding drawer  and moving a piece of furniture  e.g.  a chair . either of these fit into our framework very naturally  ¦Á = drawer position; or ¦Á = chair position   and we believe our approach will extend straightforwardly to such applications as well.
¡¡in summary  we have presented a single  unified  probabilistic model for simultaneously localizing a mobile manipulator robot and estimating the state of an object being manipulated. our algorithm uses a combination of a high- and a low-resolution map  and was successfully applied to door manipulation  a task which requires very precise state estimation.
acknowledgments
we give warm thanks to morgan quigley  jamie schulte  jimmy zhang  david lee and francois conti for their help with the stair robot  and to pieter abbeel  sebastian thrun  mike montemerlo  and the anonymous reviewers for their insightful comments and suggestions. this work was supported by darpa under contract number fa1-1. support from the honda research institute is also gratefully acknowledged.
