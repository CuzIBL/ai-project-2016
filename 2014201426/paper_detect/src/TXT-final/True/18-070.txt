 
     globally coherent behavior is the holy grail of distributed problem solving network research. obtaining coherent network activity without sacrificing node autonomy and network flexibility places severe demands on the local control component of each node. we introduce new mechanisms that allow a node to compute an abstracted  high-level description of its local state which it then uses to formulate multi-step plans. not only do these mechanisms significantly improve local problem solving performance  but they also enable nodes to make dynamic refinements to their long-term network organisation knowledge. the coordination decisions made by nodes are thus increasingly responsive to changes in network activity as problem solving progresses. we provide experimental results indicating that these new mechanisms improve the internal control decisions of a node  reduce the communication requirements of the network  and improve network coherence. we believe that these mechanisms would also be useful for control in centralised multi-level blackboard-based problem solving systems. 
	i. 	introduction 
　　achieving global coherence in cooperative distributed problem solving networks  dpsns  is a major problem  1 . in a dpsn  each node is an intelligent semiautonomous problem solving agent that determines its own behavior based on its perception of network activities. global coherence means that the activities of the nodes should appear to make sense given overall network goals. nodes should avoid unnecessarily duplicating the work of others  sitting idle while others are swamped with work  or transmitting information that will not improve overall network performance. because network coordination must be decentralised to improve reliability and responsiveness  the amount of global coherence in the network is dependent on the degree to which each node makes coherent decisions based on its local view of network problem solving activities. 
this research was sponsored  in part  by the national science 
foundation under grant mcs-s1 and by the defense 
advanced research projects agency  dod   monitored by the office of naval research under contract nr1. 
   at any given time  a node will rank its pending tasks based on how it believes each will improve network problem solving. a decision by the node to execute the top ranked task is therefore more or less coherent depending on how highly ranked the task would have been if the node had a completely global view of network problem solving. full global coherence requires that each node have a complete and accurate view of the past  present  and intended future activities of all other nodes. if this is done by globally predefining a coordinated multi-agent plan at network creation  the network will be inflexible to changing problem solving situations and network characteristics. alternatively  having nodes broadcast all state changes and future intentions is infeasible due to bandwidth limitations and channel delays. therefore  we have no practical means to insure full global coherence. the functionally accurate  cooperative approach to distributed problem solving develops a framework in which network goals can be achieved with only partial global coherence . however  since partial coherence wastes resources and degrades performance  we have been developing mechanisms which increase coherence without significant additional communication costs. 
   our previous work toward this end developed a decentralised approach to network coordination in which each node is guided by a high-level strategic plan for cooperation among the nodes in the network . this strategic plan  represented as a network organisational structure  specifies in a general way the communication and control relationships among the nodes. the organisational structure increases the likelihood that nodes will be coherent in their behavior by predefining a limited range of options available to a node. network flexibility is maintained by not limiting these options too tightly. sophisticated local control plays a key part in this approach because decisions about which of these options to pursue must be based on short-term information about the current situation. 
　in this paper  we describe new mechanisms that allow a node to refine its perception of the role it currently plays in the organization. this refined view is achieved by providing each node with the ability to reason about its current state of problem solving and to make predictions about its future actions. to accomplish this  these new 1 e durfee et al 
mechanisms allow a node to compute an abstracted  highlevel description of its local state. the node uses this description to formulate high-level goals and to generate plans to achieve them. since each plan incorporates a sequence of actions  the pursuit of a specific plan allows the node to make reliable predictions about its actions in the near future. these predictions enable the node to make medium-term  dynamic refinements to how it views its role in the network organization  and it may modify its local processing accordingly. furthermore  if nodes occasionally exchange meta-level information about these refined views of the organizational roles they will be playing in the near future  each node will have a more global view of the network problem solving activity  and global coherence will increase. 
   we have implemented and empirically evaluated our ideas using the distributed vehicle monitoring test bed. the next section outlines the relevant aspects of the test bed  describes how our mechanisms were incorporated  and discusses experimental results indicating improvement in local problem solving ability. we then study how these mechanisms can be used to improve network coherence  and present results indicating their utility. finally  we relate our work to other research in distributed problem solving and discuss the implications of the preliminary research we have outlined  along with the directions we will be pursuing in the future. 
n. 	increasing the sophistication of a problem solving node 
　　the distributed vehicle monitoring test bed  dvmt  is a flexible and fully-instrumented research tool for the evaluation of distributed network designs and coordination policies . the dvmt simulates a network of problem solving nodes attempting to identify  locate and track patterns of vehicles moving through a two-
dimensional space using signals detected by acoustic sensors. 
each problem solving node is an architecturally-complete 
hearsay-n system with knowledge sources and levels of abstraction appropriate for this task. the basic hearsay-ii architecture has been extended to include more sophisticated local control   knowledge sources  kss  for communicating hypotheses and goals among nodes  and data structures called interest areas that specify the organisational role of a node . these interest area specifications are used by the local node control in deciding what problem-solving and communication knowledge sources should be instantiated and how these knowledge source instantiations  ksis  should be rated for possible execution. 
   in this section  we introduce further modifications to this architecture by providing a node with the capability to generate and reason with a more complete view of its past  present  and future activities. although nodes generally tend to methodically perform sequences of related actions  they are unable to represent and reason about such sequences. for example  given a highly rated hypothesis  a node typically executes a sequence of ksis that drive up low level data to extend the hypothesis. however  the entire sequence of ksis is never on the queue at once. we have therefore developed a structure  called a plan  to explicitly represent a ksi sequence. 
a. blackboards  plans  and node activities 
   each plan represents a desire to achieve a high-level goal by performing a sequence of activities. to identify plans  the node needs to recognize these high-level goals. inferring high-level goals based on pending ksis is an inappropriate strategy; it is like attempting to guess a chess opponents strategy after seeing a single move. furthermore  the hypothesis and goal blackboards provide information at too detailed a level to infer these high-level goals. what is required is a structure similar to the blackboards that groups related hypotheses and goals into a single structure. we have developed a preliminary version of this structure which we call the abstracted blackboard  a multilevel structure reminiscent of the focus-of-control database first used in the hearsay-ii speech understanding system . our implementation of the abstracted blackboard is incomplete because it does not adequately incorporate the information from the goal blackboard. however  for the type of processing done in the dvmt  hypothesis abstraction is usually effective. 
   hypotheses with similar level  time  and region characteristics are grouped together on the abstracted blackboard. this grouping acts as a smoothing operator  obscuring details about individual hypothesis interactions so that broader  long-term interactions between areas of the solution space can be discerned. by transforming the data blackboard into the abstracted blackboard  we explicitly generate a state representation that is uniquely appropriate for planning at a higher level of abstraction. we believe that the significant success of our modified architecture can largely be attributed to having such a representation  and expect that the control components in other multi-level blackboard-based problem solving systems might similarly find such representations useful  1j. 
   in our preliminary implementation  the abstracted blackboard takes the form of a two-dimensional array  with level and time indices. each hypothesis has associated with it a sequence of time-locations which indicates where the hypothesized vehicle was at various times. when a hypothesis is created  it is incorporated into the abstracted blackboard by stepping through this sequence of timelocations and modifying the appropriate level-time entries in the abstracted blackboard. each level-time entry contains some number of regions  and if the location associated with the specific time can be included in one of these regions  perhaps by enlarging the region within certain bounds   the hypothesis is associated with that region. otherwise  a new region is formed for the hypothesis. 
   each level-time-region of the abstracted blackboard is summarized into a set of values that are derived from the associated hypotheses. these values include the maximum belief of the hypotheses in the level-time-region  

e. durfee et al. 1 
the number of highly believed hypotheses  the number 

of ksis stimulated by these hypotheses that have yet to be invoked  the total number of hypotheses in the leveltime-region and how many uninvoked ksis are associated with them  and an indication as to the other level-timeregions that share at least one of the hypotheses. this information allows the situation recognizer to develop a higher level view of the problem solving. for example  low maximum belief indicates the problem solving approach in that area should be re-evaluated  a large number of equally rated hypotheses could imply that there is uncertainty that should be resolved  and a large number of pending ksis indicates the need for making an informed and judicious choice as to which action to take next. based on this higherlevel view  we can begin to form higher level goals. a goal might be to merge hypotheses in adjacent time-regions  to improve the belief of an established hypothesis  or to extend a highly believed hypothesis into a new region. 
　the detection of these goals  and the subsequent generation and ranking of their respective plans  is in itself a complex problem solving task. our current implementation is a first step toward this end  in which we only consider very simple but important plans. given the abstracted blackboard  our planner scans down it  looking for regions of high belief. having found such a stimulus region  the planner determines whether there is any indication that the data in this region can be improved  this is done by determining whether any corresponding lower level regions have higher belief than the upper level regions   and if so indicated  a plan is formed to achieve this improvement. otherwise  a plan is generated to extend this highly rated region  either by merging a hypothesis in this region with a hypothesis in an adjacent region on the same level  if any   or by driving lower level data in an adjacent area up to a 
　level at which it can be incorporated. if none of these plans can be formed  then a plan to synthesize the hypotheses in this highly rated region up to a higher level of abstraction may be formed. 
   plans in our current implementation are not yet fully developed  because a plan should not only involve the specification of an eventual goal  but also of a sequence of actions needed to achieve this goal. only the next potential step s  for achieving the plan are currently represented as a priority rated queue of ksis. in turn  the node maintains a queue of plans  ordered based on their respective ratings. a plan rating is based on a number of factors  including the belief of its stimulus region  the level of its stimulus region  the interest in that region  specified by the interest areas   the ratings of its ksis  and whether the stimulus region represents hypotheses generated locally or it represents received hypotheses  to reason more fully about potentially distracting information received from outside . therefore  in choosing its next activity  a node will invoke the highest rated ksi in the highest rated plan. 
   we have therefore made important modifications to the control structure of a node  figure 1 . as the figure indicates  the creation and ranking of plans requires the planner to integrate the influences of the long-term strategy of the organizational structure  the interest areas   the medium-term higher-level view of the current situation  the abstracted blackboard   and the short-term ksi input indicating actions that can be achieved immediately  the ksi queue . hence  decisions in a plan-based node are more informed than those in a ksi-based node  a node without plans . moreover  a plan-based node is no less opportunistic  because plans  unlike ksis  are interruptable. if an area outside the current plan looks more promising  a plan to work there may temporarily supplant the current plan at the top of the queue. in addition  when plans are introduced  one can begin reasoning about the time invested in a particular area  and whether it is really in the node's best interests to leave this area for another. 
b. experiments with plan-based nodes 
　　we now briefly illustrate how problem solving is improved in a plan-based node  we shall consider multinode networks in the next section . consider the sensor configuration and input data shown in figure 1. the vehicle track has two strongly sensed areas divided by a weakly sensed area  while the ghost track is moderately sensed throughout. in the centralised case  a single node receives data from all four sensors. if the node makes only correct decisions  it can generate the solution in 1 time units. however  the presence of moderate ghost data serves to distract the node. this distraction is severe if the node is ksi-based-the solution is found in 1 time units. 

1 e. durfee et al. 

although a plan-based node is also distracted  its highlevel view helps it quickly recognize that the distracting data will not satisfy the high-level goal which drives the plan. for example  the high-level goal may be to create a hypothesis which extends a hypothesis with three timelocations to four time-locations. distracting data which initially looks like it might satisfy this goal is developed until the planner  using the high-level view  recognises that the high-level goal will not be achieved. at this point  a plan to develop other data which could satisfy the high-level goal becomes the highest rated plan. due to the high-level view and the sophistication of the planner  the time spent deviating from the correct solution path is reduced  and the plan-based node can generate the solution in 1 time units. 
   plan-based nodes have been used in a number of other environments with similar results. in both the centralised case and the multi-node case where nodes do not exchange met a-level information  see next section   the increased selfawareness afforded by the new mechanisms significantly improves problem solving performance. the experiments thus serve to emphasise the importance of sophisticated local control which recognises and reacts appropriately to various problem solving situations. we anticipate expanding the repetoire of situations which can be dealt with so that plans can be developed in more complex environments. 
iii. increasing the coherence of the problem solving network 
　　we have seen how the performance of a centralized node can be improved by allowing it to reason more fully as to the appropriate activities to perform. we now examine the multi-node case  where each node has a limited local view of network problem solving. in the previous section  we established that the problem solving behavior of a planbased node is more effective than that of a ksi-based node. therefore  we can expect that a network of such nodes might have improved performance  not because they display better  teamwork*  their global knowledge does not increase   but rather because each is a better  player . 
   these expectations were empirically verified on a number of environments. environment el uses the configuration of figure 1  but assigns a separate node to each sensor  each node being allowed to communicate with its neighbors. a second environment  e1  is a four-node environment identical to el except that the positions of the vehicle and ghost tracks are reversed. note that  in this case  the weakly sensed vehicle data is received by all four nodes  and is the only data received by one of them. a larger sensor and data configuration consisting of ten sensors and eighteen sensed times was developed  patterned after the four sensor configuration . a third environment  e1  consisting of ten nodes was built upon this configuration. 
   the experimental results are given in table 1. note that  in all cases  the multi-node network composed of plan-based nodes is significantly better. environment e1 approaches optimal results because one node receives only the weakly sensed vehicle data  and so  will drive this data up earlier. in the other environments  however  work on this weakly sensed data is not as timely because the nodes prefer to work redundantly on the more highly sensed vehicle and ghost data in their overlapping sensed areas. this redundancy wastes computation time that could be used to develop the weak vehicle data instead-the network is not behaving coherently. 
   by transmitting the abstracted blackboards  or portions thereof   nodes can reason about the past activities of their neighbors. furthermore  if a node knows the current plan of its neighbor  it can reason about the present actions of its neighbor. reasoning about the future actions of a node  however  is a complex problem. this reasoning involves considering not only the current plans in the node's queue and making estimations about their durations and effects  but also what further information the node may receive  from another node or from its sensor  that could affect its activities. a plan may have associated with it some estimations as to duration and probability of completion  or even more specific information about how its execution could be affected by received information. 
   our current implementation assumes that a node can make completely accurate short-term predictions about future activity based solely on the plan queue. we simulate this best-case scenario by allowing a node access 


comparison of performance in multi-node environments. planbased nodes work consistently better than ksi-based nodes  resulting in improved performance. meta-level communication can further improve performance by increasing coherence. 
table 1: performance of multi-node networks. 
to the abstracted blackboard and plan queue of another node. discussion of more realistic scenarios where nodes must transmit this meta-level information as they transmit hypotheses  and must therefore reason about relevance  timeliness  and completeness  can be found elsewhere . 
   a node may use meta-level information to avoid redundancy. in developing a plan  a node can determine if the plan represents a redundant derivation of information that another node has either generated  present in the abstracted blackboard  or is in the process of generating  the top plan . by avoiding redundant activity  significant improvements in solution generation rate can result because less highly rated but potentially useful activities will be invoked earlier  rather than redundant invocation of highly rated activities . hence  the experimental results in table 1 indicate that network performance can be further improved by the exchange of meta-level information which allows individual nodes to make more coherent local decisions. 
a. coherent communication 
　　an important aspect of coherent network activity is that limited communication resources should be used intelligently to improve the global state of network problem solving. flooding the bandwidth with partial results can cause both undesirable delays to important messages and unreasonable amounts of local processing as nodes incorporate the received information. on the other hand  if a node withholds certain partial results  network performance can degrade. it is therefore important that a node have a satisfactory view of both local and network problem solving in order to make coherent communication decisions. 
e. durfee etal. 1 
   we have developed a number of communication strategies that use the high-level view of node and network activity to guide a node in making these decisions . these strategies extend the ideas first developed by lesser and erman . when deciding about sending a partial result  the node might consider whether it will be improving upon that result in the future  and if so  whether by waiting and sending only the better version  conserving bandwidth  it can still fulfill its obligation to provide partial results in a timely manner. furthermore  the exchange of meta-level information can allow a node to make inferences about how a particular transmission might affect network problem solving  and to decide when to repeat a message if the effects are not seen. in experimental studies  we have found that simple communication strategies that flood the bandwidth can significantly slow down the network  and that these problems become much more pronounced as we experiment with larger networks. for example  in the ten-node environment above  e1   a simple communication strategy results in 1 hypothesis transmissions between nodes. a more intelligent strategy reduces this number to 1 without adversely affecting the solution time. therefore  indications are that coherence in communication decisions is an important area of study  and will become increasingly so as our environments continue to increase in size. 
iv. summary and implications for dpsn research 
　　we have discussed our experiences in increasing the coherent behavior of the distributed vehicle monitoring test bed. we modified the blackboard problem solving architecture of the individual nodes to enhance their ability to make predictions about their future activities. network coherence is increased by allowing a node to refine its organizational role based on these predictions. exchanging the predictions permits a node to refine its view of the organisational roles of the other nodes. 
   coherence is an integral part of distributed problem solving research. in contrast with others   we assume that we have only a limited number of highly sophisticated problem solving agents  and so  should coordinate them to make the most effective team possible. because we assume that communication between agents is potentially slow and unreliable  we regard coordination that requires mutual agreement on contracts before action  1  to be insufficiently responsive to changing problem circumstances 
 indeed  mutual agreement might not even be possible  . to insure reliability  we cannot accept centralised coordination . the unpredictable nature of the problem solving environment makes simple game theoretic models of agents unrealizable   while more complete models of agent beliefs  might require nodes to essentially duplicate each others reasoning. 

1 e. durfee et al. 
   our view of distributed problem solving therefore stresses the importance of sophisticated local control which integrates object-level knowledge about the problem domain with meta-level knowledge about network coordination. such control allows nodes to make rapid  intelligent local decisions based on changing problem characteristics without the overhead of conferring with each other. coordination decisions are based on a high-level organizational view of individual node activity  so nodes need not have detailed models of the object-level problem solving activity of their compatriots. dynamic improvements to this organisational view may be achieved with the exchange of meta-level messages which briefly convey high-level coordination information. in short  the nodes initiate their own activities and will take advantage of any local and network knowledge available to form the best  team  possible within the constraints of their environment. 
   we believe that implementation and experimentation are essential for learning about and understanding distributed problem solving. our future plans include improving the representation of the state of a node  enhancing the mechanisms to recognise problem solving situations  and extending the plan structures to incorporate more information. our preliminary experiments indicate that these developments should significantly improve the performance of distributed problem solving networks  and may also be useful in blackboard-based problem solving systems in general. 
