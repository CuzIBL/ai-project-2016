 
   though evaluation functions have been used in many game-playing and problem-solving programs the aim has generally been to construct suitable functions for particular situations. a formal framework is outlined in which general properties of evaluation functions can be studied. an application of these concepts is 
made to the study of when decision rules  as exhibited 
by a players actual play  can be represented by evaluation functions 
1. introduction. 
   when computers have been used to play games such as chess  checkers etc.  explicit use of evaluation functions  most frequently linear in form  has usually 
been made. they have also featured in the solution of non-game problems1. in other cases a decision rule for playing games  and solving problems  has been used  but it is shown in 1 how decision rules are in many cases  
equivalent to the use of suitable ef's  from now on the abbreviation ef w i l l be used for evaluation function . ef s have been used in many circumstances and in varying ways and lie at the heart of programming machines to play games and solve problems  and their importance 
was stressed as early as 1 by shannon1. however  on the whole they have been introduced for specific applications and their meaning and properties neglected other than that a position or state with a higher value 
is likely to be a better one. 
¡¡¡¡it is the purpose of this paper to introduce a formal framework in which a general study of ef's can be made. the f u l l length version of this paper shows how this framework can be used when studying existing techniques and how it is potentially useful for intro-
ducing new techniques. in this paper the basic concepts of ef's are presented and then a single application is choben for further consideration  namely the study of when a players actual play can be represented by an ef. the main results are given in theorems 1.1  1.1 and 1.1. 
1. basic properties of evaluation functions. 
   a game usually consists of a set of definite states together with transitions between them. consequently it is natural to represent a game by means of a directed 
grapht1  x  p  whose vertices correspond to the states or position! and whose arcs correspond to the possible transitions or moves. however  it may be of importance to consider the development of a game  or the nature of the solution path in problem-solving  in which case the more usual formulation in terms of a  rooted  tree  v  t  is likely to be advantageous.  v  t  can be obtained from  x p  by starting at the root  the start position  and 'growing' the tree according to the successor mapping except that a vertex is never identified with a previously considered one.  x  p  
w i l l be used when the discussion concerns graphs  and 
for graph-theoretic concepts see berge1. 





distributions 
¡¡for game graphs  x    which are not trees the situation is much more complex. it is not even clear as to what constitutes a sufficient condition for the existence of a pef which w i l l reproduce a preference pair though it seem that it is heavily dependent on the geometry of the graph. 
1. summary. 
   evaluation functions and the more general probabi l i s t i c evaluation functions were introduced in $ 1. a single anpiication of these concepts  to the representation of decision rules  was then considered 
in detail. it was found that  to a large extent  the use of an ef or pef is equivalent to the use of a 
decision rule. 
itefarenoes. 
 1  sandewall  k. j.  1  a planning problem solver based on lookahead in stochastic game trees  j. acm 1  1-k1. 
 1  shannon  c.  1o  prograraming a computer for playing chess  ph1. hag. 1-th ser. 1  1. 
 1  boffey  t. b. evaluation functions - to be submitted shortly. 
 1  berge  c.  1  the theory of graphs  methuen. 
 1  von neunann  j. 1 morgans tern  1.  1  theory of games and economic behaviour  princeton univ. press. 
 1  boffey  t. b.  1  applying the minimax rule over 
graphs which are not trees -unpublished. 
 1  good  i. j.  1  a five-year plan for automatic chess  machine intelligence 1  edinburgh university press. 
1 
1 

1 

1 













