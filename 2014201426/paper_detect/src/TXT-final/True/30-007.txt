 
we introduce a framework for finding preference information to derive desired conclusions in nonmonotonic reasoning. a new abductive framework called preference abduction enables us to infer an appropriate set of priorities to explain the given observation skeptically  thereby resolving the multiple extension problem in the answer set semantics for extended logic programs. preference abduction is also combined with a usual form of abduction in abductive logic programming  and has applications such as specification of rule preference in legal reasoning and preference view update. the issue of learning abducibles and priorities is also discussed  in which abduction to a particular cause is equivalent to abduction to preference. 
1 	introduction 
in commonsense reasoning  it is important to represent and reason about preference in order to reduce nondeterminism due to incomplete knowledge. to represent such knowledge about preference  it is required that priorities among commonsense knowledge are to be found out. for example  to get the desired result of the yale shooting problem {hanks and mcdermott  1   an adequate priority should be expressed according to our commonsense. the essence of this problem can be represented by the following extended logic program  p  where abl and ab1 are abnormality predicates  loadedi and alivej denote that the gun is loaded at the time  and the turkey is alive at the time   respectively. we also assume that some unknown action wait is done at and that the shoot action  which causes the turkey dead whenever the gun is loaded  is done at 
 1  
 1  
1 	automated reasoning 
here  not denotes negation as failure  and  1  and  1  represent the inertia of actions. without any priority information  we do not know which default of  1  or  1  should take precedence. then  to the contrary of our intention that -alive1 should be inferred  neither alive1 nor -alive1 is decided from the above program. in fact  there are two answer sets of p  one including loadedx ab1  -alive1  intended   and the other containing alive1  -iloadedi  abl. 
　historically  the yale shooting problem revealed the so called multiple extension problem. in this case  we should decide which abl or ab1 must have a higher priority for minimization. using prioritized circumscription  lifschitz  1   for example  the criterion can be manually given for the yale shooting problem that abl should be minimized with a higher priority than ab1 in order to derive -alive1- other than circumscription  recent development in the field of logic programming and nonmonotonic reasoning has provided a number of mechanisms for freely specifying preference on multiple extensions in default reasoning. such prioritized reasoning systems include prioritized default logics and prioritized logic programs  brewka  1; baader and hollunder  1; dimopoulos and kakas  1; sakama and inoue  1; brewka and eiter  1 . for the yale shooting problem  we would like to prefer the default  1  to  1   and then a higher priority is given to  1  in these frameworks. 
　although the yale shooting problem is so simple that we can find the proper priority manually  it becomes more complicated and difficult to find priorities among many complex default knowledge in the real world's commonsense reasoning. hence  a framework and a method for automatic finding of such priority information are highly required. 
　in this paper  we provide a framework for finding priorities as a part of a prioritized logic program  sakama and inoue  1  in order to derive an intended conclusion as a theorem of the logic program. to this end  we introduce the notion of preference abduction  which infers a sufficient priority relation to make the intended conclusion hold. this inference is in fact a form of abduction  

i.e.  abduction of meta-knowledge which is preference in this case. we further provide an integrated framework of abduction  in which both literals and priorities can be abduced. using such an abductive framework  we can infer skeptical explanations of an observation even when only credulous explanations are obtained due to non-determinism of a given abductive program. 
　there are many applications of nonmonotonic reasoning that require to find out priorities among conflicting rules. for example  in the legal domain  priorities among the conflicting laws are often required for disputants to derive their desired conclusion  which give them the advantage in the argumentation of a court. the proposal in this paper enables us to derive a desired conclusion by abducing appropriate priorities in such cases. an interesting application is preference view  which transfers a given priority relation among observations into a priority relation among base abducible literals. 
　this paper is organized as follows. section 1 introduces the theoretical background in this paper. section 1 provides the framework for preference abduction. section 1 goes on elaborating on preference abduction. section 1 discusses related work  and section 1 is the conclusion. due to the lack of space  we will omit proofs of propositions and theorems in this paper. 
1 background 
1 	extended logic programs 
an extended logic program  elp   gelfond and lifschitz  1  is a set of rules of the form 
 1  
where left-hand side lq is called the head of the rule  1   and the right-hand side is called the body of the rule. the head is possibly empty. a rule with an empty body is called a fact  and each fact  is identified with the literal l. two kinds of negation appear in a program: not is the negation as failure  naf  operator  and - i s classical negation. intuitively  the rule  1  can be read as: if  are believed a n d a r e not believed then lq is believed. 
　　the semantics of an elp p is given by the answer set semantics  gelfond and lifschitz  1   which is defined by the following two steps. let  be the set of all ground literals in the language of p  and let first  let p be a not-free elp  i.e.  for each rule 
then  1 is an answer set of p if s is a minimal set satisfying the conditions: 
	1.for each ground 	rm p   
s implies 
1. if 1 contains a pair of complementary literals l and then 1 = 
second  let p be any elp and 1  then  define a not-free elp ps as follows: a rule 

is in ps iff there is a ground rule of the form  1  from p such that  for ps  its answer sets have already been defined. then  s is an answer set of p if s is an answer set of ps. 
the class of elps is a subset of reiter's default logic 
 gelfond and lifschitz  1 . an answer set of an elp p is consistent if it is not  p is consistent if it has a consistent answer set. an elp p  skeptically  entails a literal l  written as p  x  if l is included in every answer set of p. on the other hand  p credulously infers l if l is included in an answer set of p. 
1 	abductive logic programs 
an abductive  extended  logic program  alp  is a pair  where p is an elp and is a set of literals from the language of p. the set t is identified with the set of ground instances from t  and each literal in v is called an abducible. the model-theoretic semantics for alps is given in  inoue and sakama  1 . a set 1  is called a belief set of if 1 is a consistent answer set of p a for some a . note that belief sets reduce to consistent answer sets when 
　let o be a ground literal called an observation. is an skeptical explanation of o and p u a is consistent. on the other hand  is a credulous explanation of o  wrt  p  t   if there is a belief set s of  such that o s and s is a consistent answer set of p u a. a skeptical/credulous explanation a of o is minimal if no a! a is a skeptical/credulous explanation of o. 
in an alp  each abducible in is a literal. 
often however  we would like to introduce rules of the form  1  with 1 in t. such a rule  called an ab-
ducible rule  intuitively means that if the rule is abduced 
then it is used for inference together with background knowledge p. this extended abductive framework is introduced in  inoue  1  as a knowledge system. any knowledge system  where both p and are elps  can be translated into an alp  where is a set 
of literals  inoue  1 : for each abducible rule r in a new naming atom 1r is associated with r  and let 

1 	prioritized logic programs 
a reflexive and transitive relation is defined on each e1 e1 is called a priority  and we say e1 has priority over e1. we write e1 e1 if e  e1 and e1 e1 when x and y are tuples of variables  e1 x  e1 y  stands for any priority e1 s  ea t  for any instances s of x and t of y. 
a prioritized  extended  logic program  plp  by 
 sakama and inoue  1  is given as a pair where 
p is an elp and  is a set of priorities on 	the 
   1in  sakama and inoue  1   a plp  p  is defined with a general extended disjunctive program p  which allows naf and disjunctions in heads of rules  and  may contain naf formulas. here  we consider a subset of their plps. 
	inoue and sakama 	1 

declarative semantics of plp is defined using the answer sets  given a plp  p   suppose that  and s1 are two distinct answer sets of p. then  s1 is preferable p s1  written as if for some element 
 i  there is an element 	 s1 	such that e1 
 ii - there is no element s1 s1   s1 such that 
here  the relation on answer sets is also defined as reflexive and transitive. note that the condition  it -is automatically satisfied if there is no priority chained on more than two different elements e1 implies either an answer set s of p is called a preferred answer set  or p-answer set  for short  of p s for any answer set 
s'of p. 
　　by definition   has a p-answer set if p has a finite number of answer sets. in particular  the p-answer sets of coincide with the answer sets of p when 
               it is also clear that if a program p has the unique answer set  it also becomes the unique p-answer set of for any we s a y e n t a i l s a literal l  written as p l  if l is included in every preferred answer set of p. 
　using plps  we can represent preference knowledge naturally  and it is helpful to reduce non-determinism in logic programming. moreover  various forms of commonsense reasoning such as  prioritized  minimal abduction   prioritized  default reasoning  and prioritized circumscription can be realized in terms of plp. in particular  the mapping from prioritized circumscription of any clause set to a plp is given in  sakama and inoue  1   which much extends the previous translation into a stratified logic program by gelfond and lifschitz . 
1 	preference abduction 
in this section  we introduce preference abduction  which is the process of abducing priorities to explain given observations. 
1 	basic framework 
given an elp p and a literal o  we first consider the case that o is credulously inferred by p but is not skeptically entailed by p. in this case  there exists a multiple extension problem  that is  both answer sets containing o and answer sets not containing o coexist. let as+ be the set of answer sets containing o  and as- the set of answer sets not containing o. a direct way to prefer answer sets containing o is to construct priorities between answer sets in as+ and as+  so that some subset of as+ are made the set of preferred answer sets of p. however  there are many ways to associate priorities between as+ and as . hence  we assume the existence of some set ψ of pre-specified candidate hypotheses for priorities in the following abductive framework. 
definition 1 let p be a consistent elp  and o a literal. suppose that ψ is a set of candidate priorities on 
♀p. a set ψ of priorities is a  skeptical  explanation of 
1 wrt {p ψ  if 
1. ψ c ψ  and 
1 	automated reasoning 
is ψ minimal explanation of o if no is an 
explanation of 1. 
　　given a pair for preference abduction  let s1 and s1 be two distinct answer sets of p. then  in order to find priorities from such that s1 s1 holds  one should select a literal e1 and another literal e1  si such that and  ii  for any literal e1 s1   s1  e1 e1  i.e.  e1 implies s1 example 1 suppose that the elp p is given as 
and there are two answer sets of p: 1 = and 1 = suppose we want to 
find an explanation of o. abducing the priority we get the relation s1  hence 
example 1  yale shooting  consider the elp p introduced in section 1. the candidate hypotheses for this problem can be supplied as 
then   is the explanation of -alive1. this abduced priority corresponds to our commonsense that the abnormality wrt the shoot action should be stronger than that wrt the wait.action. 
1 	combining with credulous abduction 
when an observation o cannot be credulously inferred by p  the basic framework in section 1 cannot give a sufficient explanation of o. in such a case  we can combine preference abduction with ordinary abduction in section 1 so that o gets a skeptical explanation. an extended abductive framework is given as follows. 
definition 1 a preference abduction framework is a triple  where p is an elp   is a set of 
abducibles  and ψ is a set of candidate priorities on is a  skeptical  explanation of a literal o 
imply 
　note that the basic framework of preference abduction in section 1 is a special case of definition 1  where 
 moreover  the traditional alp framework in section 1 is also a special case  where 	we can also consider an abductive 	framework 	in which is a set of abducible rules and 	includes priorities on such abducible rules. in that case  a naming technique similar to the one in section 1 can be applied to abducible rules  and then priorities among rules lure translated into priorities among rule names  thereby reducing such an abductive framework to that in definition 1. 

example 1 let us consider the abductive framework  where 

　note in the above example that explanations are obtained either from credulous explanations with abduced priorities or from skeptical explanations wrt the given elp. hence  a naive procedure to compute preference abduction is as follows. 
procedure 1 
input: a preference abduction framework a literal o  observation . 
output: a skeptical explanation e of o wrt 
1. compute a credulous explanation a of o wrt 
1. if a is a skeptical explanation of o wrt  then return e = 
1. otherwise  compute the answer sets of p a; 
as+ := the set of answer sets containing 1; 
as- := the set of answer sets not containing o; 
1.find p r i o r i t i e s a n d 
1 for any as and any 
	then  	is an explanation of o wrt 
return e = 
　　in procedure 1  computing credulous explanations of o at step 1 can be realized by existing abductive procedures such as  kakas and mancarella  1; inoue and sakama  1 . at step 1  each credulous explanation a is checked to see whether it is skeptical or not. this test can easily be realized by checking the consistency of p  at step 1  the answer sets of p  a or belief sets of  p  t  can be computed by some bottom-up procedures  e.g.   inoue and sakama  1 . at step 1  it can be shown that: if is an explanation of o wrt {p    then is an explanation of o wrt . hence  the next theorem holds. 
theorem 1 	procedure prefabd 
is sound. that is  if it terminates  its output e is ~ skeptical explanation of o wrt 
the completeness of procedure 1 holds for a ground 
elp p and finite and if we assume  i  the existence of an abductive procedure that is complete for computing credulous explanations at step 1  and  ii  the exhaustive search for finding at step 1. however  since many existing abductive procedures are designed to compute credulous explanations  it is more difficult to compute skeptic explanations directly. in fact  the skeptical explanation  in example 1 cannot be obtained by top-down abductive procedures in general. in this sense  to compute skeptical explanations of an observation  it is easier to compute credulous explanar tions first  then priorities are added to make explanations skeptical as in procedure 1. 
1 	finding further preference 
in section 1  we considered an abductive framework  in which and  are pre-specified. however  such candidate hypotheses are often insufficiently given so that we cannot explain an observation skeptically. 
example 1  legal reasoning  kowalski and toni  1   suppose that the elp p is given as: 

rule  1  indicates that a person inherits an estate if he/she is the beneficiary of a valid will and it cannot be shown that the person does not inherit it. rule  1  says that a person usually does not inherit an estate if he/she murders the owner of the estate. the program p has two answer sets  one containing inherits j  h  and the other -inherits  j h . given the observation -iinherits j h   we cannot get any explanation wrt 
　in this section  we consider a method to generate new abducibles for obtaining further preference. 
1 	generating new abducibles 
a method to discover new abducibles is considered in  inoue and haneda  1   where abducibles are newly invented in learning alps. here  we modify their method by associating priorities with new abducibles. 
　firstly  notice that rules  1  and  1  in example 1 are the source of non-determinism in the program. then  these non-deterministic rules are converted into abducible rules. without loss of generality  we assume that such rules in an elp p are of the form:1 
 1  
where a and 	are literals and both b  and b1 are con-
junctions of literals and naf formulas. here  we assume that neither a nor  appears in the head or the body of any rule other than  1  in p. now  let n1 be a pair of rules of the form  1   and p1 = p n1. also  let e  be the set of ground instances of α and  that are entailed by p. then  is obtained by converting n1 into abducible rules: 
 1  

next  using the translation in section 1  each abducible rule j  of the form  1  ifc can be named with a new and put 
and 	= 	then  compute the set e1 of instances of new abducibles in 	such that p1 e1 	e for every e 	. this identification of e1 from e1 is easy  and it is used to assure that the literals in e1 can also be entailed by the new program. we now obtain the alp 
proposition 1 let p be an elp  and 	the 
alp constructed as above. then  for every consistent answer set s of p  there is α belief set s' of such that 
example 1  cont. from example 1  let n1 be the last two rules  1  in 
and- -inherits c d }. then  nondeterministic rules n1 are converted into abducible rules: 
and 
1 	from abducibles to priorities 
so far  we have not yet introduced new priorities into the process of finding new abducibles. that is  appropriate literals are just abduced to explain the observation. such a right selection of hypotheses in abduction can be considered as our preference of some particular causes over others. with this regard  we can acquire new preference 
information from abductive programs as follows. 
　　suppose that  and  are the naming atoms for a pair of abducible rules of the form  1 . then  the alp  in section 1 can be further translated into the semantically equivalent elp p* by replacing each pair of abducibles   and with the pair of rules: 
 1  
this time  we have the following relationship between the answer sets of the original elp p and those of p'. 
proposition 1 let p be a consistent elp  and p  the elp constructed as above. then  for every answer 
　　　1the converse of proposition 1 does not hold. in example 1  the alp  p'  t   has a belief set containing neither 
which is not an answer set 
of f. 
1 automated 	reasoning 
set s ef p  there is an answer set s* of p* such that where  is the same as in proposition 1. conversely  for every answer set s* of p*  there is an answer set s of p such that. 
　using the above new p*  it is easy to associate priorities on the newly introduced abducibles. once the alp  is constructed  we can just consider the abductive framework  where  is the candi-
date priorities on f'. in this way  abduction to particular causes and preference abduction are made transferable into each other. 
theorem 1 let  be the same as in the above discussion  and o be an observation. then  there is a skeptical explanation of o wrt iff there is a skeptical explanation of o wrt 
example 1  cont. from example 1  
the alp  constructed in example 1 can be now translated into the elp  is given as: 

then  	p* has two answer sets  	one containing and inherits j h   and the other containing and 	-iinherits j h . 
now  let us consider the preference abduction where 	contains the candidate priorities: 
given the observation -iinherits j h   we have the explanation 
1 	preference view updates 
the advantage of the above translation into preference abduction is that priorities do not have to be given on the target observations but are given on the source hypotheses. in this sense  we call such inference to preference preference view updates  which are analogous to the notion of view updates in deductive databases. in preference view updates  the priority request on given observations o1 is translated into priorities on their causes a typical application of this kind is abduction to rule preference in the legal domain. 
example 1  cont. from example 1  
suppose that one rather prefers the conclusion inherits j h  to the opposite -iinherits j h . this pref-
erence view: 

can be translated into the priority between the hypotheses: 

this last relation indicates that she/he should prefer the rule  1  to the other rule  1  in her/his argument. 
　it should be noted that  as view updates in databases can be characterized through abduction  kakas and mancarella  1   our formulation of preference view updates are also based on preference abduction. 

1 	related work 
as far as the authors know  there aure very few work on abducing priorities to derive desired conclusion. zhang and foo  associate priorities to resolve conflicts between rules in updating elps. their framework can be regarded as a kind of preference abduction to be applied to theory updates. in general  preference information is helpful to resolve contradiction in a program. priorities on defaults specify the guideline that some defaults are to be kept but some are discarded in restoring the consistency. wakaki et al.  present a method of finding priorities as a part of the circumscription policy to be used in prioritized circumscription. in their method  priorities are selected from the set of all possible orderings on minimized predicates. on the other hand  our method can discover new priorities on literals for plps as shown in section 1. 
　there are a lot of recent work on introducing priorities into abductive and nonmonotonic reasoning. eiter and gottlob  discuss the computational complexity of a form of prioritized abduction  whose prioritization is similar to that of prioritized circumscription. sakama and inoue  propose a different kind of prioritied abduction in the context plps  in which priorities are used to select desired abducibles from multiple explanations. priorities have also been used to represent preference between conflicting default rules in plps and prioritied default logics  brewka  1; baader and hollunder  1; dimopoulos and kakas  1; sakama and inoue  1; 
brewka and eiter  1 . none of these work  however  discusses how to find an appropriate set of priorities to derive desired conclusions. 
　brewka  argues the importance of the ability of using defaults that reason about preference between other defaults. our preference abduction would also be extended by introducing such dynamic preference into not only deduction but abduction on plps  but the issue is not addressed in this paper. 
1 	conclusion 
this paper introduced a novel framework for finding preference to derive intended conclusions in nonmonotonic reasoning. preference abduction is not only an extension of traditional alps  but much extends the reasoning ability of plps. applications of preference abduction include the resolution of the multiple extension problem  skeptical abduction  preference view updates  and abduction to rule preference in legal reasoning. 
　in this paper  we also presented an interesting fact that abduction to a particular cause and abduction to preference are sometimes transferable to each other. this line of research would extend the applicability of existing frameworks for alps as computational tools for prioritied default reasoning. the design of a more sophisticated algorithm to compute preference abduction also remains to be explored. 
