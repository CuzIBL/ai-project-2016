 
in this paper  we introduce a domain modeling tool that supports users in the incremental and modular development of verified models of planning domains. it relies on a logic-based concept for systematic domain model construction that provides well-defined  safe operations for the union  extension  and refinement of already existing models. the system is equiped with a deductive component. it automatically performs the proofs necessary to guarantee both the consistency of single models and the safety of operations on models. by means of detailed examples  it is shown how the system has been used for the structured development of a model for a complex  safety-critical planning domain. 
1 	introduction 
as soon as we aim at using planning systems in the context of realistic applications  the task of generating the underlying domain model becomes increasingly crucial. it is not only difficult to overlook the great amount of object types  relations  and actions involved when specifying such a model. it is also difficult to keep consistency in mind  which is of particular importance if the application domain is a safety-critical one. consequently  system assistance in constructing safe models of complex planning domains would be of real help. our work is motivated by the experiment of using a deductive planning system in the simulation of a safetycritical application  namely a chemical warehouse. this planning domain is quite complex and it has turned out that the construction of a clearly structured  adequate  and consistent model would have been almost infeasible if done without any system support. the reason is 
    this work has partly been supported by the federal ministry of education  science  research  and technology under grants itw 1 and itw 1. 
1 	planning and scheduling 
that specifying a complex planning domain is an iterative process which includes frequent modifications of already specified parts and attempts to extend parts and finally put them together. 
¡¡in this paper  we introduce a domain modeling tool  dmt  that supports users in the incremental and modular development of safe  i.e. provably consistent  models of planning domains. it relies on the concept of systematic domain model construction proposed by  biundo and stephan  1 . this approach-based on a modal temporal logic-considers domain models as formal structures. domain models consist of signatures  action definitions  and domain constraints. the welldefined operations of union  extension  and refinement allow for building complex domain models out of already existing simpler ones. we have improved this domain modeling concept in order to make it really useful for practical applications. we have introduced the notion of static constraints  in addition to domain constraints and have extended the operations on models. these improvements grew out of a large case study  which - in a somewhat simplified version- is used as the example domain throughout this paper. based on the modified concept  we have implemented the dmt system that supports the process of domain modeling. it does syntactic analyses of domain specifications given by a user and has a deductive component which automatically performs the proofs necessary to guarantee both the consistency of single models and the safety of the union  extension and refinement operations. finally  we have used the system for modeling a complex  safety-critical planning domain. 
¡¡the paper is organized as follows. in section 1 we give a short introduction into the basic temporal logic formalism on which the domain modeling process relies. our formal concept of domain model development and the domain modeling tool that implements this concept are presented in section 1. we give an overview of the chemical warehouse planning domain chew in section 1 and demonstrate the structured development of a chew domain model by means of examples in section 1. 


biundo & stephan 

1 	planning and scheduling 


biundo & stephan 


1 	planning and scheduling 
of which is really useful. in this case an analysis of the failed invariance proof has helped us modifying the extension accordingly unless we ended up with a correctly refined domain model. 
	1 	related work and conclusion 
the question of knowledge acquisition and knowledge base maintenance for planning has hardly been addressed in the literature. recently   chien  1  has introduced an approach to the analysis of planning knowledge bases. this mechanism detects goals that are notachievable by actions and supports the user in detecting modeling errors by allowing the generation of automatically completed plans. in the work of  cesta and oddi  1   a formal domain description language has been proposed  which is especially well suited for the description of physical planning domains. this approach also considers domain model construction based on a formal semantics. 
¡¡in this paper  we have introduced the domain modeling tool dmt that assists users in the modular and structured development of verified domain models. it provides well-defined operations for the extension  refinement  and combination of existing models and automatically performs the proofs that are necessary to guarantee the safety of these operations. 
although our system uses the tpl planning logic  
dmt can easily be adapted-by restricting the logical language-to construct safe domain models for operatorbased planning systems that rely on different formalisms; examples being systems using strips-like operator descriptions or systems based on adl  like ucpop  penberthy and weld  1 . 
