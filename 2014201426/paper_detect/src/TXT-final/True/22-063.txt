 
the foundations of a class of logic programming systems with the expressive power of full first-order logic and a non-monotonic component is addressed. the underlying refutation method is an extended version of weak model elimination. the first question addressed is how to compute answers with weak model elimination when queries and programs are sets of arbitrary clauses  which is completely settled by a soundness and completeness result. the question of computing only definite answers is also settled. then  the problem of computing answers is rediscussed when the logic programs also include a finite set of defaults. 
1. introduction 
this paper addresses the foundations of a class of logic programming systems with the expressive power of full first-order logic and a non-monotonic component. systems in this class provide a direct generalization of pure prolog and they can be implemented using the same technology as prolog processors. the discussion centers on the underlying refutation method  which is an extended version of weak model elimination  ioveland   enhanced with defaults  reiter 
 . 
the first contribution of this paper consists in defining an adaptation of weak model elimination  wme  that is sound and complete with respect to computing answers when the logic programs and queries are expressed by sets of generic clauses. the proofs of these two results are far more complex than the corresponding results for sld-resolution  see lloyd    the basis of prolog systems. the question of computing just definite answers is also settled  using a new result about refutations in wme. 
negation within the scope of wme has the classical meaning. the second contribution of this paper then refers to extending wme with defaults to capture non-monotonic reasoning. within this broader scope  the notion of an answer to a query posed to a logic program raises interesting questions that are briefly discussed. defaults provide a much more flexible mechanism than negation by finite failure  clark    the treatment of negation commonly adopted to extend the expressive power of logic programs and queries in prolog. 
a detailed account of the results reported here can be found in casanova et alii  and guerreiro et alii . a logic programming systems based on model elimination is also described in silva et alii . 
the organization of this paper is as follows. section 1 introduces the notions of program  query and answer. section 1 reviews the weak model elimination method and extends it to compute answers  describing a variation for definite answers. section 1 introduces an adaptation of the method that deals with a special class of defaults. finally  section 1 contains the conclusions. 
1. programs  queries and answers 
a program p is a finite set of clauses and a query q is a disjunction of conjunctions of literals  that is  a quantifier-free formula in disjunctive normal form. a query is definite iff it is a single conjunction of literals  otherwise it is indefinite. 
an answer a to a query q over a program p is either 
false or a dissjunction of instances of conjunctions in 
q over the alphabet of p and q  that is  a disjunction of conjunctions obtained from those in q by substituting variables by terms of the alphabet used to write p and q. an answer is definite iff it consists of a 
single conjunction  otherwise it is indefinite  reiter  . 
an answer a to q over p is correct iff p logically implies va  the universal closure of a. finally  an 
	casanova  guerreiro and silva 	1 

answer a to q over p is more general than an answer 
b to q over p iff a logically implies b. we let false be an answer simply because it will be the most general answer to any query over an inconsistent program. 
for example  the following set of clauses is a program  that we call dic: 
1. program a fortran  
1. program b pascal  
1. program c fortran  program c pascal  
1. calls a b  
1. calls b c  
1.  calls  xy  depends x y  
1.  calls xz  	 depends zjj  	depends x y  
 thus  clause  1  indicates that c is an ordinary' program written in fort ran or pascal and clauses  1  and  1  indicate that x depends on y if x calls y direct or transitively. the formula below is a query  that we call dep a : 
 depends a x  a program x pascal   v 
 depends a x  a program x fortran   
it asks for a program written in fort ran or pascal that the program a depends on. an answer a to dep a  over dic would be: depends a.b  a program b pascal  
indeed  the conjunction in a is an instance of the first conjunction in dep a . it is in fact a correct answer since dic logically implies va. a second correct answer to dep a  over dic would be: 
 depends a c  a program cfortran   v 
 depends a c  a program c pascal   
1. computing answers with wme 
1 weak model elimination 
to achieve completeness  the inference rules of w m e sometimes maintain the resolved literals within the derived clauses and keep the literals  resolved or not  ordered within a clause. to distinguish these extended clauses from the ordinary clauses  they will be called chains. moreover  resolved literals in a chain will be enclosed within brackets. 
more precisely  a resolved literal  or a r-literal  is an expression of the form  l   where l is a literal. an element is a literal or a r-literal. an elementary chain is any sequence of literals and a chain is any sequence of elements. the symbol ¡õ will denote the empty 
1 	automated deduction 


	casanova  guerreiro and silva 	1 

1 	automated deduction 

	casanova  guerreiro and silva 	1 


to solve the above dilemma  we propose to always base the consistency test on a class of substitutions that change each variable by a new constant not in the original language  whose semantics would be  the typical individual such that ... . in the current example  we introduce the new constant p1  understood as  the typical bird . consider again the wme-refutation with defaults r  except that the substitution of the consistency test is now  by definition  1 = { x / p 1 } . since  for this choice of 1  the set  bird z    flyfpenguin    flyfostrich   yellow canary } u {fly x 1}  is consistent  we have that fly po  is the new computed answer by the wme-refutation r. intuitively  this answer indicates 
1 	automated deduction 
that  the typical bird  flies. note that the introduction of p1 is similar to the skolemization of the formula 
1x fly x    except for the intuitive interpretation of the skolem constant introduced. 
using the idea of  typical individuals  we can extend our concepts to consider answers that  in addition to indicating the appropriate substitutions as before  possibly including  typical individuals   point out some  atypical individuals  or even all  atypical individuals . 
1. conclusions 
weak model elimination offers an interesting alternative for the development of logic programming systems since it works with classes of programs and queries which are more general than those commonly considered. section 1 established soundness and completeness results for computing answers. section 1 extended these results to a special class of defaults. in this case  the notion of answer must be appropriately revised to include the concept of  typical individual  thus avoiding arbitrary components. 
