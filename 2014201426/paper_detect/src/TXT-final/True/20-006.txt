: 
　a question answering system that provides access to a large amount of data will be most useful if it can tailor its answer to each user. in particular  a user's level of knowledge about the domain of discourse is an important factor in this tailoring. in previous work we determined that a user's level of domain knowledge affects the kind of information provided in an answer to a user's question as opposed to just the amount of information  as was previously proposed. we also explained how two distinct discourse strategies could be used to generate texts aimed at naive and expert users. users are not necessarily truly expert or fully naive however  but can be anywhere along a knowledge spectrum whose extremes are naive and expert in this work  we show how our generation system  tailor  can use information about a user's level of expertise to combine several discourse strategies in a single text  choosing the most appropriate at each point in the generation process  in order to generate texts for users anywhere along the knowledge spectrum. tailor's ability to combine discourse strategies based on a user model allows for the generation of a wider variety of texts and the most appropriate one for the user. 
i introduction 
　a question answering system that provides access to a large amount of data will be most useful if it can tailor its answer to each user. in particular  a user's level of knowledge about the domain of discourse is an important factor in this tailoring. the answer should not provide information that is obvious to the user. however  if the answer assumes knowledge that the user docs not have  it may be very hard for the user to understand the answer. in previous work  paris 1   we determined that a user's level of domain knowledge affects the kind of information provided in an answer* to a user's question as opposed to just the amount of information  as was previously proposed  wallis and shortliffe 1 . we also explained how two distinct discourse strategies could be used to generate texts aimed at naive and expert users  paris 1; paris 1 . users are not necessarily truly expert or fully naive however  but can fall anywhere along a knowledge spectrum whose extremes are naive and expert in this work  we show how a generation system can use the information contained in a user model to combine several discourse strategies in a single text  choosing the most appropriate at each point in the generation process  in order to generate texts for users anywhere along this knowledge spectrum 
*we have done our analysis with respect to requests for descriptions. 
1 	natural language 
　in past work on text generation  discourse strategies have been used to guide a generation system in deciding what to say  weiner 1; mann 1; mckeown 1; kulrich 1; mccoy 1 . if a generation system had a choice of several strategies for composing a text  it would choose one based on the uestion type and use that strategy to generate the entire text 
  ur system's ability to combine discourse strategies based on a user model allows for the generation of a wider variety of texts and the most appropriate one for the user. 
ii the problem: describing complex physical objects 
　in our work  we are mainly concerned with describing complex physical objects. our choice of domain has been motivated by researcher  a program being developed at columbia university that reads  remembers and generalizes from patent abstracts written in english  lebowitz 1; lebowitz 1 . the abstracts describe complex physical objects in terms of spatial and functional information. being able to provide descriptions of the physical objects it has learned about is an important component of researcher. we assume that a good description is one that provides meaningful information about an object and that allows the user to build a mental functional model of the object 
　we have built a program called tailor to implement and test our discourse strategies. tailor generates descriptions tailored to the user's level of expertise  using the two distinct strategies we found in naturally occurring texts. the discourse strategies guide tailor to choose the appropriate information from the knowledge base  and the user model dictates which strategy to use at each point in the generation process. tailor  which can be thought of as the generation component of researcher  uses the knowledge base built by researcher  as depicted in figure 1. 
　in the domain of complex physical objects  the amount of information contained in the knowledge base is very large and the information can be very detailed. the knowledge base contains several different kinds of information: spatial  functional and attributive  properties attached to objects . tailor must choose among facts representing different kinds of information about an object and facts at different levels of detail in the knowledge base  making the decision process a complicated one. tailor cannot simply state all the facts contained in the knowledge base about a particular object rather  it should pick facts that are appropriate and construct a coherent text from these facts  mckeown 1; mckeown 1 . a user model representing what the user presumably knows about the domain can help guide the 

system in choosing facts that the user understands and does not already know  and cannot easily infer   thereby improving the resulting answer. 

figure 1: researcher and the tailor system 
strategy is most appropriate when a user is an expert in the domain of the knowledge base  since s/he will be able to infer how the parts of an object work together in order to perform the object function. it is then not necessary to include the process information associated with the object 
  the process trace  which follows the links between events in the underlying knowledge base in order to trace through the process information that explains the function of the object. a precise formulation of this strategy has been developed in  paris and mckeown 1 . it is summarized in figure 1. the process trace strategy is most appropriate when the user is a novice with respect to the domain of the 

examples of descriptions generated with the two strategies given the corresponding user models are shown in figures 1 and 1. in both figures  the description given is that of a 
microphone. in figure 1  after identifying the microphone as a member of a superordinate class  its parts and their properties are given. in figure 1  the text follows the causal links associated in the knowledge base in order to explain how the microphone works. 
description of the microphone 
user model: expert 
based on the user model  the system decides on the process strategy. 
the microphone changes soundwaves into current a person speaking into the microphone causes the soundwaves to hit the diaphragm of the microphone. the diaphragm is aluminium  and disc-shaped. the soundwaves hitting the diaphragm causes the diaphragm to vibrate. the soundwave intensity increasing causes the diaphragm to spring forward. the diaphragm springing forward causes the granules to compress. the granules compressing causes the resistance of the granules to reduce. the resistance reducing causes the current to increase. the soundwave intensity reducing causes the diaphragm to spring backward. the diaphragm springing backward causes the granules to decompress. the granules decompressing causes the resistance to increase. the resistance increasing causes the current to reduce. the diaphragm vibrating causes the current to vary. the current varies like the intensity varies. 
figure 1: example of a description 
　since the knowledge base contains many different objects  most users will be neither fully naive nor truly expert with respect to the knowledge base.  naive  and  expert  are the extremes of a knowledge spectrum  and most users will be at intermediate points in the spectrum. such users may have local expertise about some objects in the knowledge base and not others. hence it is not sufficient for the user model to indicate whether a user is naive or expert the user model must distinguish more precisely the user's level of domain knowledge about separate sub-areas of the knowledge base and individual objects. finally  the user model must also contain information about whether the user is knowledgeable about the basic concepts that may be involved in a process description. for example  in our domain  such concepts include electricity and magnetism. 
　if a user has local expertise about some parts of an object and not others  a complete process trace  including a process trace for every part  is unnecessary. on the other hand  providing a description based only on the constituency schema may not be totally understandable. for such users  we use both strategies to produce a description  using the constituency schema for the known parts and the process trace for the new ones. 
　as an example  suppose we are providing a description of an elevator to a user who knows how a motor functions  but not how an elevator works. in describing the elevator to this user it is necessary to first describe how the parts of the elevator are related  using the process trace strategy. if a long description is desired  the individual parts must be described in turn. it should not be necessary to fully explain what the motor does  as the user already knows about it the constituency schema strategy can thus be used to describe the motor. for the other parts  however  the process strategy is 
1 	natural language 
still appropriate in order to explain their mechanism. 
　our analysis of naturally occurring texts confirmed that several strategies can be used to generate a text. we found example of texts that combine the constituency schema and the process trace to generate descriptions aimed at users with intermediate levels of domain knowledge. consider the text shown in figure 1  taken from  chemical 1 . the description starts with the constituency schema strategy but ends with a process trace: the  ir  infra red  spectrometer  is first described in terms of its parts; each part is then described in turn  depth-attributive ; finally  the authors revert to a process trace to describe the  thermocouple detector   assuming it is unknown to the reader. to fully understand this text  the reader must already know  or be able to infer information  about the ir spectrometer's purpose  the  ir radiation   the  monochromator  and the purpose of a spectrometer. 
　 1  the ir spectrometer consists of three essential features: a source of ir radiation  a monochromator and a detector.  1  the primary sources or ir radiation are the globar and nernst glower. 
 1  the globar is a silicon carbide rod heated to 1 degrees c.  1  the nernst glower is a rod containing a mixture of yttrium  zirconium  and erbium oxides that is heated electrically to 1 degrees c.  1  earlier ir spectrometers contained prism monochromators but today gratings are used almost exclusively.  1  most detectors in modern spectrometers operate on the thermocouple principle.  1  two dissimilar metal wires are connected to form a junction.  1  incident radiation causes a temperature rise at the junction and the difference in the temperature between head and tail causes a flow of current in the wires which is proportional to the intensity of the radiation. 
1. constituency  parts  
1. depth attributive for the ir radiation  properties  
1. depth attributive for the monochromators 
1. depth attributive for the thermocouple spectrometer 
1. process trace for the thermocouple principle. 
figure 1: 	text from the encyclopedia of chemical technology 
　we can now present the decision algorithm employed by tailor to decide which strategy must be used to begin generating a description. if the user is not an expert but has local expertise about the object to be described  the constituency schema can be used initially. if the user knows about nearly all of the functional parts of the objects  the constituency schema can still be used  provided that the process trace is used when details about the unknown parts need to be given. the decision algorithm is described in figure 1. 
　to be able to combine the two strategies to generate a description  we must specify the points at which it is possible to switch strategy. any time an object is introduced and needs to be described  the system can provide either structural information  using the constituency schema  or functional information  using the process trace . this gives the following decision points in the strategies: 
is the user an expert user  yes : use constituency schema no : is the user a naive user  
yes: use process trace 
no: is the object in the user model  i.e.  does the user have local expertise about this object   
yes: use constituency schema 
no: look at all the functional parts of the objects. if the user has local expertise about all but one of these pans  
use the constituency schema; else use process trace. 
figure 1: the decision algorithm 
same as the one used to choose the initial strategy. 
　figure 1 shows an example of a text generated by tailor by combining the two strategies. based on the user model that indicates local expertise about loudspeaker  tailor chooses the constituency schema. it first identifies the telephone by providing its purpose and then introduces its parts. structural information is then provided about each of the parts  except for the transmitter  because the transmitter plays an important role in the function of a telephone and the user model shows no local expertise about it. thus tailor chooses to provide process information for the transmitter  switching momentarily to the process trace strategy. 

- within the constituency schema: 
  after identifying an object as a member of some generic class  we can provide a process trace for the prototypical object of this class. 
  after mentioning the parts of an object  the constituency schema dictates to provide structural information for each subpart. instead  we could provide a functional description of one or more of the parts. this has been done in the encyclopedia of chemical technology text  for example. 
- within the process trace: 
  when a part is introduced while traversing the causal links  the process strategy dictates to include attributes of this part  to describe it . here  we could choose to describe the part more fully using the constituency schema instead. 
  when the subparts have to be described  the constituency schema can be used to provide structural information about them instead of including functional information. 
figure 1 summarizes the two strategies in their simplest form; the decision points are denoted by  switch.  description of the telephone 
user model: local expertise: loudspeaker 
   the telephone has two main functional part: the transmitter  an instance of a microphone  and the receiver  an instance of the loudspeaker . because the user knows one of the two parts of the telephone  the system decides on the constituency schema strategy at first. however  before providing structural information about each subparts  the system consults the user model and decides to switch strategy to describe the transmitter since the user has no local expertise about it. 
the telephone changes soundwaves into soundwaves. the telephone has a various-shaped housing  a transmitter that changes soundwaves into current  a curly-shaped cord  a line  a receiver to change current into soundwaves  and a dialing jnechanism. the transmitter is a microphone. a person speaking into the microphone causes the soundwaves to hit the diaphragm of the microphone. the soundwaves hitting the diaphragm causes the diaphragm to vibrate. the diaphragm vibrating causes the current to vary. the current varies like the intensity varies. the receiver is a loudspeaker with a small aluminium diaphragm. the housing contains the transmitter. the housing contains the. receiver. the housing is connected to the dialing jnechanism by the cord. the line connects the dialing mechanism to the wall. 
figure 1: a description generated by mixing the two strategies 

constituency schema 
- give the superordinate switch  
- list the parts switch  
- or information about the parts 
- properties process trace 
- next causal link 
- attributes of a part switch  
- substeps 
- back to next causal link figure 1: the two strategies and their decision points 
　while we could generate all the possible combinations allowed by the decision points  some combinations are better than others. we have accounted for these preferences using heuristics that decide when to mix the strategies. these heuristics limit the texts we can produce by eliminating some combinations that produce inappropriate texts given the users' knowledge about the domain. the heuristics examine the user model to see what items are known to the user  or what items have a superordinate known to the user   and decide whether it is appropriate to continue with the same strategy or to switch. the decision test is essentially the iv tailor system and the implementation 
of the strategies 
a top-level diagram of tailor is shown in figure 1. 
input to tailor includes:  1  a request for the description of an object  and  1  the level of expertise of the user  which is either naive/expert for users at the ends of the knowledge spectrum  or  for users with intermediate levels of expertise  a set of parameters that describe the user's level of knowledge about the domain  including: 
  whether the user knows  or does not know  the basic underlying concepts that are important in the domain of the knowledge base. 
  the specific objects the user knows in the domain. 
　the textual component of the system decides what to include in the description. it examines the knowledge base and chooses appropriate facts  guided by the user model and the discourse strategies. the output of the textual component 
	paris 	1 

english sentences. the surface generator is based on the generator used by  mckeown 1  in the text system. this generator unifies the input with a functional grammar  kay 1  to produce english sentences. we have extended and improved the performance of this program  and augmented the functional grammar it uses  paris and kwee 1; mckeown and paris 1 . strategy implementation 
the constituency schema and the process trace strategies are implemented using an augmented transition network  atn   woods 1 . the arcs joining the various nodes in the network dictate what information is to be retrieved from the knowledge base  under what conditions  the arcs contain a test   and which node to go next. 
　in the constituency schema  shown in figure 1  the arcs correspond to the predicates of the schema.  see  paris 1; paris and mckeown 1  for details about traversing the 
atn  and  mckeown 1  for details of a similar system.  these predicates  which are enumerated below  define the type of information to be retrieved from the database. 
  the identification predicate represents the more general concept of which the present object is an instance. 
  the constituency predicate gives the components of an entity  if there are any. 
  the attributive predicate provides different attributes of a part  such as its shape or material . 
  the cause-effect predicate that provides some causal relations between entities or relations. 
  side-link : a side-link is a link that is not part of the main path  but comes off an event on the main path. this arc tests to see whether there is a side link caused by an event at this point. the decision to mention the side link is based on the importance of that link.*** 
  attributive: this arc is similar to the attributive predicate in the constituency schema. if information about a part just introduced is available in the knowledge base  this arc will be taken. 
  substeps : if an event consists of several substeps  the substeps are traced first.**** to traverse the substeps  the subroutine substep  shown in figure 1  is called for each substep. this subroutine is very similar to the main graph  but does not allow for a further decomposition of events. 
　by representing the two strategies in the same format  we immediately obtain the control structures necessary to switch strategies  since it is possible to jump from a node in one part of the network to a node in a different part. the decision points are marked as special tests  switch   on the arcs 
joining nodes  as shown in figures 1 and 1. 
　 *in a complex knowledge base  there can be different kinds of links between processes  including causal links  temporal links or analogical links. some links are more important to mention than others. since only the most important links are mentioned  links have to be given importance weights.  see  paris and mckeown 1  for details.  
  note that we can also choose to not follow the substeps in order to 

1 	natural language 

generate a shorter description. this factor is incorporated into the test of the arc. 


　tailor uses the decision process described earlier to decide on which strategy to employ. this test is invoked before beginning generation and at any point in the schema when it is possible to switch strategies. the process of stepping through the atn and switching strategy is shown in figure 1.  the corresponding generated text was shown in figure 1.  note that to avoid generating very long texts  substeps are omitted when the process trace is chosen to describe a subpart 
　for each object of the knowledge base  tailor can currently generate descriptions aimed at expert and naive users  and texts that combine the two strategies for users who are along the knowledge spectrum and only know a few objects. 
v further work 
　we are investigating extensions of the tests used in the decision process. such extensions might include checking on the length of the discourse and the number of parts to avoid generating overwhelmingly long texts  or taking the generalization hierarchy into consideration. furthermore  we are extending our work to examine the recursive use of both strategies. currently  tailor does not call the constituency schema recursively more than once  i.e.  the constituency schema can be called recursively for each subpart of the top level object being described  but not for the components of these subparts . similarly  the process is traced only one level down  that is only the top-level relations are broken into substeps. this kind of recursion however could occur as deeply as the knowledge base allows for. we think that such a level of detail is appropriate only if the user asks for a longer description. we are planning on implementing a mechanism that would allow the users to request such a description. the problem of depth on the process trace also needs to be studied further. we expect the user's domain knowledge  in particular knowledge about basic concepts  to play a role in determining the depth needed: at some point  one cannot subdivide the processes any further if the user does not know basic underlying concepts as the process explanation will cease to be understandable. for example  
user modal: local expertise: loudspeaker 
stepping through the constituency schema to describe a telephone. switching to the prooess traoe to desoribe the transmitter. 
applying the predicates to telephone: 
identification predicate: 
device used-for: change soundwaves into soundwaves 
constituency predicate: 
dialing mechani1m 
transmitter used-for: change soundwaves into current 
line 
cord 
receiver used-for: change current into soundwaves housing properties: oolor: various  shape: various 
need to switch to process traoe for the transmitter introduction: 
identification predicate: microphone 
causal l i n k 	 1  	: 
	 m-causes  	r e l a t e s t h e two r e l a t i o n s : 
	 one  	p-1peaks-int1 	 transmitter  
	 soundwaves  	p-hit1 	 diaphragm  
causal l i n k  1  	: 
 m-causes  relates the two relations: 
 soundwaves  p-hit1  diaphragm  
 diaphragm  p-vibrate1 
 1ubsteps omitted  
causal l i n k  1  	: 
 m-causes  relates the two relations:  diaphragm  p-vibrates 
 current  p-varies 
side link  1  : 
 m-equivalent-to  relates the two relations:  current  p-varies 
 soundwave-intensity  p-varies 
returning to the constituency schema: 
applying the predicates to receiver: 
identification: receiver is a loudspeaker difference: small aluminium diaphragm 
applying the predicates to housing: 
a t t r i b u t i v e : 	housing r-oontains transmitter 
housing r-oontains receiver 
housing r-oonnected-to dialinc mechani1m by cord 
applying the predicates to line: 
a t t r i b u t i v e : 	dialing meghanism r-oonnected-to wall 
by line 
figure 1: switching strategy 
explaining how a disc drive works in terms of current and magnetism will not be informative if the user does not understand these terms. the process explanation  in such a case  should be kept at a higher level. the depth of the knowledge base itself may also affect the depth of the description  as parts or processes may be considered too minor to be mentioned beyond a certain threshold. 
	paris 	1 

vi conclusions 
　in this paper we have shown how a user model can determine which of several discourse strategies to use in generating a description of physical objects. we have also shown how to mix several strategies to generate a single text  using information about a user s local expertise about the domain of discourse to decide when to switch strategy. finally we presented tailor  a program that generates descriptions tailored to users along the knowledge spectrum going from naive to expert. tailor uses two distinct discourse strategies  and  based on the user's level of expertise  decides which one to use and when to switch strategy during the generation process. 
acknowledgments 
many thanks go to kathy mckeown and michael 
lebowiu for helping in both the research and the writing of this paper  and to kwee tjocliong for his initial work on the functional grammar. 
this research was supported in part by the defense 
advanced 	research 	projects 	agency 	under 	contract 
n1-c-1  and the national science foundation grant isi-1. 
