dart: an expert system for computer fault diagnosis 
james s. bennett 
heuristic programming project  computer science department stanford university  stanford  ca 1 
clifford r. hollander 
ibm scientific center  1 page mill road 
palo alto. ca 1 

a. introduction 
　　　we describe an application of artificial intelligence techniques to computer system fault diagnosis  in particular  we have implemented an automated consultant that advises ibm field service personnel on the diagnosis of faults occurring in computer installations. the consultant identifies specific system components  both hardware and software  likely to be responsible for an observed fault and offers a brief explanation of the major factors and evidence supporting these indictments. the consultant  called dart  was constructed using hmycin   and is part of a larger research effort investigating automated diagnosis of machine faults  1 .* 
b. project motivation and scope of effort 
　　　a typical  large-scale computer installation is composed of numerous subsystems including cpus  primary and secondary storage  peripherals  and supervisory software. each of these subsystems  in turn  consists of a richly connected set of both hardware and software components such as disk drives  controllers  cpus  memory modules  and access methods. generally  each individual component has an associated set of diagnostic aids designed to test its own specific integrity. however  very few maintenance tools and established diagnostic strategics arc aimed at identifying faults on the system or subsystem level. as a result  identification of single or multiple faults from systemic manifestations remains a difficult task. the non-specialist field service engineer is trained to use the existing component-specific tools and  as a result  is often unable to attack the the failure at the systemic level. expert assistance is then required  increasing both the time and cost required to determine and repair the fault. the design of dart reflects the expert's ability to take a systemic viewpoint on problems and to use that viewpoint to indict a specific components  thus making more effective use of the existing maintenance capabilities. 
　　　for our initial design  we chose to concentrate on problems occurring within the teleprocessing  tp  subsystems for the ibm 1-class computers. this subsystem includes various network controllers  terminals  remote-job entry facilities  modems  and several software access methods. in addition to these well-defined components there are numerous available test points the program can use during diagnosis. we have focussed our effort on handling two of the most frequent tp problems   1  when a user is unable to log on to the system from a remote terminal  and  1  when the system operator is unable to initialize the tp network itself. in a new system configuration  these two problems constitute a significant percentage of service calls received. 
　　　interviews with field-service experts made it apparent that much of their problem-solving expertise is derived from their knowledge of several well-defined communications protocols. often composed of simple request-acknowledge sequences  these protocols represent the transactions between components that are required to perform various tp tasks. although based on information found in reference manuals it is significant that these protocols are not explicitly detailed anywhere in the standard maintenance documentation. knowledge of the basic contents of these protocols and their common sequence forms the basis of a diagnostic strategy: use the available tracing facilities to capture the actual communications occurring in the network  and analyze this data to determine which link in the protocol chain has broken. this procedure is sufficient to identify specific faulty components in the network. 
c. the dart consultation 
　　　during a dart consultation session  the field engineer focusses on a particular computer system that is experiencing a problem. many installations arc composed of numerous cpus that partially share peripherals  thus  the term  system  is taken to mean a single cpucomplex and its attached peripherals. within each such system  the user describes one or more problems by indicating a failure symptom  currently using a list of keywords. using this description  the consultant makes an initial guess about which of the major subsystems might be involved in the fault. the user is then given the opportunity to select which of these implicated subsystems are to be pursued and in which order. 
　　　each subsystem serves as a focal point for tests and findings associated with that segment of the diagnostic activity. these subsystems currently correspond to various input/output facilities  e.g.. disk. tape. tp  or the cpu-complex itself  l o r each selected subsystem  the user is asked to identify one or more logical pathways which might be involved in the situation. kach of these logical pathways correspond to a line of communication between a peripheral and an application program. on the basis of this information and details of the basic composition of the network  the appropriate communications protocol can be selected. the user is also asked to indicate which diagnostic tools  e.g.  traces  dumps  logic probes  arc available for examining each logical pathway. 
　　　once the logical pathway and protocol have been determined  descriptions arc gathered of the often multiple physical pathways that actually implement the logical pathway  it is on this level that diagnostic test results arc presented and actual component indictments occur. for dart to be useful at this level  the field engineer must be familiar with the diagnostic equipment and software testing and tracing facilities which can be requested  and  of course  must also have access to information about the specific system hardware and softwate configuration of the installation. finally  at the end of the consultation session  dart summarizes its findings and recommends additional tests and procedures 

   this research was conducted under a joint study agreement between the international business machines corporation and stanford 
university. 

to follow. figure 1 below depicts the major steps of the diagnostic process outlined above. 

1 

report findings and recommendations for the session 
t 
determine protocol violations and 
make specific component indictments for each physical pathway 
t 
select appropriate protocol and 
available diagnostic tools for each logical pathway 
t 
identify logical pathways for each subsystem 
t 
infer suspected cpu-i/o subsystems for each problem 
t 
gather initial symptom and 
configuration information for each system 
figure 1. the dart diagnostic inference process 
     the following transcript illustrates dari's interactions with an engineer and dart's conclusions about possible faulty components. the engineers responses arc emboldened; annotations appear in italics. 
session-1  what 	is your user-number  
   1 
1  are you f a m i l i a r with the use of this tool  
    yes 
1  b r i e f l y describe the reason for this session:    having difficulty activating tp network 
the f i r s t system for session-1 w i l l be called: --system-1--- 
1  is system-1 a loosely coupled multi-processor  
   no 
the f i r s t problem with system 1 w i l l be called: 
problem-1 
please enter the following information. cpu 	scp 
machine scp running type name under vm  
scp is the operating system type; 
vm is an ibm-supplied virtual machine operating system 
1     1 	mvs/sp 	no 1  what symptom is exhibited by problem-1  
       
expected responses are: unable.to.logon  unable.to.activate.tp.neiwork. missing.data  hang. loop  etc. 
	   	unable.to.activate.tp.network 
the user employed km yc/n's automatic completion feature 
1  is the network.activation problem occurring in a sna network   yes no  
	    yes 	sna is a particular network discipline 
1  is the terminal s  involved in problem-1 locally  channel  attached  remotely attached or both   local remote both  
   remote 
at this point the tp subsystem becomes the focus of the diagnostic activity 
the tp subsystem for problem-1 w i l l be called: 
	--tp.subsystem-1 	-
complete one line for each remote terminal. applic. 	communic. terminal 	cluster 	program 	c o n t r o l l e r 
	lu-name 	pu-name 	lu-name 	address 
hi- logical unit  pu-physical unit 
1     term1 	clus1 	ims 	1 
1     done 
the path to terminal term1 w i l l be called: 
sna.path-1 
1  what is the name of the line connecting clus1 to 1   i t s tp controller   
	   	line1 
1  please enter the name of the access method used by ims to communicate with term1.  acf/vtam vtam acf/tcam tcam  
   acf/vtam 
1  what type of tp c o n t r o l l e r is used for this terminal   1  
   1g 
1  what control program is running in this tp controller   ncp pep  
    ncp 
1  please indicate all of the nodes which are able to achieve and maintain  throughout the activation process  an active status. 
*   i ms there is a console command a vailable which can be used to interrogate node status. 
to most e f f e c t i v e l y identify the cause of this problem w i l l require a trace showing the activation of the line  the 1 and ncp. 
1  which vtam trace types arc available to aid in pursuing this problem  
   vtam.1 
1  does your vtam 1  rnio  trace show that an actlink  activate l i n k   command was sent to line line1  
    yes 
1  what does your vtam 1  rnio  trace indicate was the response to the 
actlink   positive negative none  
   negative 
the most l i k e l y source s  of the f a i l u r e discussed in problem-1 i s : 
	line-line1 	  1  
the vtam i 1  rnio  trace indicates that an actlink was sent to ncp for line1 and that a negative response was received  the actlink should have caused ncp to issue an enable to the line a nd t h i s   in t u r n   should have cause d the modem to respond with data set ready  dsr . you might want to check the modem interface  if the dsr is active then i t is 1 ike ly that the line is not the source of the f a i l u r e . a line  or pt1  t race could be used to further in vestigate the problem. 

	1 	 .1  	 see evidence for line1 . 
	ncp 	 .1  	 see 	evidence for line-itnffm 
1 

     after dart has indicated the components most likely to be at fault  the responsibility for performing a detailed determination and repair of the actual component failures  i.e.. microcode bugs  integrated circuit failure  etc.  would then shift to the appropriate maintenance groups for those components. d. concluding remarks 
　　　the current dart knowledge base consists of 1 emycin parameters and 1 production rules and was constructed over a period of 1 months. during this period 1 specialists were interviewed about different aspects of the diagnostic process and the knowledge base reflects their composite expertise. 
     as might be expected  much of the requested diagnostic data is already in a machine-readable form on the subject computer system. however  as the transcript shows  this information must currently be entered by the user. this interaction forms a substantial fraction of me users input. indeed  wc estimate 1 to 1 percent of the current interaction between program and user will be eliminated when this online data is exploited. 
     it is clear that the communications protocols form the crux of the expertise  both for the human specialist and for dart. although our experts were able to easily articulate these protocols  their translation into the production rule formalism was tedious. a protocol represents an expected sequence of transactions between components. however  in order to indentify specific faulty components  the production rules capture only the possible deviaiions from this expected sequence. thus each protocol yields a substantial number of rules which only indirectly reflect the original sequence and tend to produce rather opaque explanations of the diagnostic reasoning. furthermore  for any lengthy protocol  ensuring the completeness of the resulting ruleset becomes a significant problem. in a collateral effort  wc are investigating the use of explicit representations of these protocols with general diagnostic rules which will hypothesize deviations directly from the protocols. 
acknowledgements 
     we wish to acknowledge steve snyder for contributing substantially to the organization and implementation of the knowledge base  and to thank warren rogers  dave van wingen. and norm forup for contributing their often colorful expertise. 
