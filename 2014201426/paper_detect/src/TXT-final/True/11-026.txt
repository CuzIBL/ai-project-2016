 
a model-based computer v i s i o n system has been developed which can determine the p o s i t i o n and o r i e n t a t i o n of several p a r t s in the same scene. the parts can be of the same type or of d i f f e r e n t t y p e s . furthermore  the system can work w i t h v i s u a l l y noisy scenes and some o c c l u s i o n . abstract two-dimensional models are formed by having the system view the p a r t s under favorable c o n d i t i o n s . parts are found by matching the abstract models to the scene d a t a   a f t e r it has been h i g h l y organized. 
	i. 	introduction 
the present work extends an e a r l i e r system  which found s i n g l e p a r t s  perkins  1     i n t o a system 
which can recognize and determine the p o s i t i o n and o r i e n t a t i o n of several p a r t s in the same scene. the geometric c o n f i g u r a t i o n of these p a r t s must a l l o w only a l i m i t e d number of s t a b l e p o s i t i o n s because the program uses two-dimensional models. the program works w i t h g r a y - l e v e l p i c t u r e data and i s not s e n s i t i v e t o v i s u a l n o i s e . i t can f i n d objects which are p a r t i a l l y out of the f i e l d of view or occluded by other o b j e c t s . 
although some block - w o r l d programs  grape  1; g r i f f i t h   1  could handle scenes c o n t a i n i n g several blocks and o c c l u s i o n   the present system can handle a much greater v a r i e t y of objects w i t h 
more complex shapes. however  since the t h r e e dimensional problem is more d i f f i c u l t f o r these objects than f o r polyhedra  the present program requires t h a t the p a r t s have only a few s t a b l e p o s i t i o n s and be at a known distance from the camera. 
several other systems have been developed f o r l o c a t i n g i n d u s t r i a l p a r t s i n s i m i l a r environments 
  t s u j i and nakamura  1; yachida and t s u j i   1; b a i r d   1  . each system has i t s strong p o i n t s or advantages: the system of t s u j i and nakamura can f i n d objects from o b l i q u e views i f a n e l l i p s e o r trapezoid is present in the surface being viewed; the system of yachida and t s u j i forms models by viewing the objects w i t h an operator i n t e r a c t i v e l y p o i n t i n g out f e a t u r e s ; the system of baird has s i m p l i c i t y   is r e l a t i v e l y f a s t   but does not use any s p e c i f i c models. 
the present system d i f f e r s from the others mostly in that it performs more d e t a i l e d image a n a l y s i s  which is s i m i l a r to s h i r a i ' s system   s h i r a i   1   before matching w i t h models. i t s strong p o i n t s are that it can handle p a r t i a l views and o c c l u s i o n ; and i t s models are formed by viewing the o b j e c t s . 
m u l t i p l e objects in the f i e l d of view are l o c a t e d as f o l l o w s : the program is shown o b j e c t s i n d i v i d u a l l y   and it forms a model of each. then a scene  composed of an unknown number of o b j e c t s   is shown to the program; it is asked to f i n d one or a l l of the objects in the scene.  the program is not expected to f i n d objects which it has not p r e v i o u s l y seen.  
the program puts the model and image data in a h i g h l y organized form  perkins  1  which is e s s e n t i a l f o r any reasonable e f f i c i e n c y in matching several models to a complex scene. the basic data s t r u c t u r e is a set of connected curves 
  s t r a i g h t l i n e s and c i r c u l a r arcs  c a l l e d  concurves    p e r k i n s   1   . these concurves u s u a l l y form the p h y s i c a l boundaries of the o b j e c t . only a few concurves are needed to describe a model. 
to f i n d an o b j e c t   the program must match model concurves to image concurves. for f i v e objects there may be 1 possible combinations of model and image concurves  and only 1 c o r r e c t ones. since only a few of the combinations need to be t e s t e d i n d e t a i l   i t i s important that the program order the search process. the program orders the combinations from most l i k e l y to l e a s t l i k e l y by comparing general p r o p e r t i e s of the concurves. this ordered l i s t o f combinations i s used f o r d e c i d i n g both the order in which models w i l l be matched and the order in which concurves f o r a p a r t i c u l a r model w i l l be matched. 
for a p a r t i c u l a r model the program proceeds down the l i s t of combinations using one or two combinations at a time to determine a t e n t a t i v e t r a n s f o r m a t i o n from model to image c o o r d i n a t e s . a f t e r the program has determined a p o s s i b l e l o c a t i o n f o r a model  it can v e r i f y or r e j e c t t h i s choice by comparing a r e p r e s e n t a t i o n of the model w i t h the image d a t a . 
v i s i o n - 1 : 	p e r k i n s if a p a r t is found  the program stores i n f o r m a t i o n about it  such as i t s l o c a t i o n   and marks any image concurves which were used up in 
fig. 1. high contrast scene with two connecting rods and a universal yoke   a  digitized picture   b  edge points   c  concurves. 
 d  models 	superimposed 	on 	gray-level picture. 
used to describe particular instances of an object in an image  anderson and bower  1 . tokens have a l l the general properties of the model with some specific properties that depend upon the image data such as: location  x y ¦È   scale factor  and a pointer to a particular set of multisectors. 

v i s i o n - 1 : 	perkins 

each of these multlsectors has a number indicating whether it found a match with the image data and  if so  which image concurve it matched. 
the concurves themselves have a set of properties which are used in comparing model and image: 
1  simple description  circle  arc  complex curve ... ; 
1  total length or radius of arcs; 
1  magnitude of total angular change; 
1  number of straight lines; 
1  number of arcs; 
1  bending energy  curvature function 
 chang  1  . 
and if both concurves are closed  the system uses in addition: 
1  intensity direction   i f given for model ; 
1  area inside outer border; 
1  area of internal holes; 
1  compactness  area / perimeter* ; and 
1  ratio of minimum to maximum moment of i n e r t i a . 
properties such as these can be used for classification  duda  1 . the program calculates a likelihood for each combination of one model concurve and one image concurve from a comparison of the above properties. table i shows the seven combinations for the universal yoke model and the image concurves of fig. lc and the 1 combinations for the connecting rod model and the image concurves of fig. l c . 
from an average of the highest likelihood for a l l concurves of each model  the program can obtain a likelihood for each model being present in the scene. this is used to set the order in which models are matched against the image data. this ordering can save considerable time  especially if the program has several models and is asked to recognize which object is in the scene 
 classification . 
the likelihood for a universal yoke being in the scene is taken to be the highest likelihood for i t s one concurve being in the scene  namely 1  see table i   . the likelihood for a connecting rod being in the scene is taken to be the average of the highest likelihoods for a l l i t s concurves ¡ö  1 + 1 + 1   / 1 - 1. 
if we compare a l l five models with the analyzed image data of fig. 1  we obtain the ordered l i s t of likelihoods shown in table i i . if the program 
were asked to find a l l objects. it would start with the most l i k e l y model and proceed down the l i s t  see table i i   . then for each model it would proceed down l i s t s such as those of table i. after the program finds an object in the scene 
 which involves matching one or two combinations of model and image concurves to determine the transformation from model to image coordinates and a verification process  perkins  1    the program marks image concurves that are used up. this reduces the choices for the next search process and keeps the program from wasting time with consumed image data. 
identical objects cause some new problems. suppose we are trying to find a l l connecting rods in fig. 1. if no precautions were taken  the 
table i. 

likelihood of different combinations 
combinations 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 1 1 1 
1 
1 likelihood 
1 
1 
-1 
-1 
-1 
-1 
1 
1 1 
1 
1 
1 1 
1 
1 
-1 -1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
rable i i . model no. 
 yoke  
 yoke  
 yoke  
 yoke   yoke  
 yoke  
 yoke  
 rod  
 rod   rod   rod  
 rod   rod   rod  
 rod  
 rod  
 rod  
 rod   rod  
 rod  
 rod  
 rod  
 rod   rod   rod  
 rod  
 rod  
 rod  image no. 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 
1 likelihood of different models likelihood 
1 
1 
1 1 model name 
universal yoke 
connecting rod 
bracket 
gear blank compressor body 
v t s i o n - 1 : 	perkins 

program would keep finding the same connecting rod over and over again. to avoid this undesirable occurrence  the program utilizes two changes that it makes after it finds a connecting rod: 1  the information that it stores about this token  and 1  the information concerning concurves that have been used up. in determining tentative transformations on subsequent searches for connecting rods  the program works only with image concurves that have not been consumed. after the program has determined a tentative location for an object in the scene  this location is compared with that of previously found tokens. if a l l of the coordinates  x y 1  of this new location are within certain limits of the coordinates of any token  the tentative model transformation is 

rejected. 
for the scene of fig. 1 and the five models of fig. 1  the program f i r s t looked for and found a universal yoke. after storing the token information and marking the consumed image concurve  the program tried to find another universal yoke and failed. next it found the two connecting rods. at this point a l l the image concurves were used up so it was unnecessary for it to try matching any more of the combinations. thus the program worked with only 1 of the 1 possible combinations  one to find the universal yoke  six to find that a second yoke was not present  one to find each of the two connecting rods . this is an ideal case  but the same kind 


fig. 1. six 	parts 	on 	a conveyor belt  	 a  digitized picture. 	 b  edge 
points. 	 c  concurves. 	 d  models 	superimposed 	on 	gray-level picture. 
	v i s i o n - 1 : 	perkins 

of economy occurs in visually noisy scenes. the cpu time for finding the three parts in fig. 1 was 1 seconds  image analysis  1 sec; matching  
1 sec . 
view with several different parts and an unknown number of each  1  objects which are p a r t i a l l y out of the f i e l d of view  and 1  several occluded parts in the same scene. 

i i i . results 
the results for visually noisy conditions are presented in this section. in these scenes the dark gray parts were placed on a dark conveyor belt typical of those used in industrial environments. the lighting consisted of room lights only  fluorescent bulbs in the c e i l i n g   . the scenes chosen i l l u s t r a t e the capabilities of the system to find: 1  a l l parts in the f i e l d of 
a. finding several parts in the field of view 
the program was asked to find a l l the parts in fig. 1a using i t s five models shown in fig. 1. 

	fig. 1. partial 	view 	of 	five 	parts 	on 	conveyor 	b e l t . 	 a  digitized 
picture   b  edge points   c  concurves.  d  models superimposed on gray-level picture   e  display of models. 
	v i o o n - 1 : 	p e r k i n s 
1 since there is an unknown number of each particular type of part  the program must do a reasonable search for one more of each type than exist in the scene.  this means eleven searches in the case of fig. 1.  we have also made the problem a l i t t l e more d i f f i c u l t by using two connecting rods that d i f f e r from the one used in forming the model. one has a square-shaped 

 sprue  projection while the other is s l i g h t l y different in shape and does not have the large hole punched out. 
figure 	1a 	shows 	the 	digitized 	picture 	while 
fig. 1b shows 	the 	edge points obtained using the 
hueckel operator  hueckel  1  and fig. 1c shows the analyzed image data  1 concurves . the results of matching the five models to the analyzed image data are shown in fig. 1d. the cpu time for finding the six parts was 1 seconds  image analysis  1 sec; matching  1 sec . 
b. finding objects from partial views 
the program is again asked to find a l l the parts  but the parts in fig. 1a are only p a r t i a l l y inside the f i e l d of view. the edge points and the analyzed image data are shown in figs. 1b and 1c respectively with the results of matching shown in figs. 1d and 1e. this figure clearly illustrates that the matching techniques employed by the program  perkins  1  work well even with p a r t i a l image data. during the verification process the program takes account of the fact that an object 


	 a  	 b  

	 c  	 d  
fig. 1. six 	parts 	on 	conveyor 	belt 	with 	considerable 	occlusion   a  digitized 	picture. 	 b  edge 	points. 	 c  concurves.  d  models superimposed on gray-level picture. 
	v i s i o n - 1 : 	perktns 
1 

is p a r t l y o u t s i d e the f i e l d of view  some of the transformed m u l t i s e c t o r s l i e o u t s i d e the v i e w i n g 
window  in a c c e p t i n g a match. the cpu time f o r f i n d i n g the f i v e p a r t s was 1 seconds  image a n a l y s i s   1 sec; matching  1 s e c   . 
c. 	f i n d i n g occluded parts 
figure 1 shows an image w i t h considerable o c c l u s i o n . the d i g i t i z e d p i c t u r e of f i g . 1a is transformed to edge p o i n t s   f i g . 1b  and then to concurves   f i g . 1 c   . note t h a t some of the connected curves are boundaries of s e v e r a l d i f f e r e n t p a r t s . the r e s u l t s of the matching process are shown in f i g . 1 d . this f i g u r e i l l u s t r a t e s t h a t the matching techniques work in the presence of serious background i n t e r f e r e n c e . the cpu time f o r f i n d i n g the s i x p a r t s was 1 seconds  image a n a l y s i s   1 sec; m a t c h i n g   
1 . 1   . 
	i v . 	conclusions 
we have demonstrated a v i s i o n system which can f i n d the p o s i t i o n and o r i e n t a t i o n o f a l l p a r t s i n a scene  even if they are p a r t l y o u t s i d e the f i e l d of view or p a r t i a l l y occluded. this system was created by adding some h i g h - l e v e l o r g a n i z a t i o n to a system which found s i n g l e p a r t s   p e r k i n s   1   . 
an attempt was made to develop an e f f i c i e n t system by having the matching occur at a h i g h l e v e l and by using an i n t e l l i g e n t c o n t r o l s t r u c t u r e to order the search process. this method tends to make the image-analysis time longer and the matching time s h o r t e r   r e s u l t i n g in s h o r t e r t o t a l times f o r complex scenes. 
for most of these scenes there could have been a f u r t h e r r e d u c t i o n i n matching times i f groups o f concurves had been recognized as separate o b j e c t s   b a i r d   1   . however  i f the p a r t s are c l o s e l y packed o r there i s o c c l u s i o n  see f i g . 1     i t i s not p o s s i b l e t o separate the d i f f e r e n t p a r t s u n t i l they have been r e c o g n i z e d . 
the method of having a f i n i t e number of models and matching them to the image data u n t i l they have a l l f a i l e d or the image data is used up is s a t i s f a c t o r y f o r most a p p l i c a t i o n s . however  i f the number of models is l a r g e   the method could be extended by u s i n g a c o n t e x t - d i r e c t e d s e a r c h   such as in group technology   o p i t z   1     w i t h the image data being converted to a number t h a t p o i n t s to models which have s i m i l a r p r o p e r t i e s . 
acknowledgements 
i wish to thank l. rossol and g. g. dodd f o r t h e i r encouragement and support d u r i n g the development o f t h i s system. 
v i s i o n - 1 : 
1 
