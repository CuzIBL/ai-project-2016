
the aim of this paper is to propose a new resolution framework for the sat and max-sat problems which introduces a third truth value undefined in order to improve the resolution efficiency. using this framework  we have adapted the classic algorithms tabu search and walksat. promising results are obtained and show the interest of our approach.
1 introduction
the satisfiability problem  sat   garey and johnson  1  consists in finding a truth assignment that satisfies a wellformed boolean expression. an instance of the sat problem is then defined by a set of boolean variables  also called
atoms 	and a boolean formula
　. as usual  the formula is supposed to be in conjunctive normal form  cnf   i.e.  it is a conjunction of clauses where a clause is a disjunction of literals1 . the formula is said to be satisfiable if there exists an assignment  i.e.  a function   satisfying and unsatisfiable otherwise. the search space corresponds to the set of all possible assignments. is obviously satisfied if all of its clauses are satisfied. in this context  the maximum satisfiability problem  max-sat  corresponds to the minimization of the number of false clauses.
　two classes of methods are used to solve sat and maxsat problems  namely exact and approximate methods.
　exact methods are able to find all the solutions of an instance or  if there is no solution  to prove its unsatisfiability. these methods are generally based on the davis-putnamlogemann-lovelandprocedure davis et al.  1 which explores a binary search tree  building incrementally truth assignments. they provide very good results but are not suitable for the max-sat problem. other exact methods  generally based on branch and bound  b&b  algorithms  borchers and furman  1  have been designed to handle max-sat  but their performances are often limited for large instances.
　approximate methods are mainly based on local search and evolutionary algorithms. we focus here on local search algorithms which have been widely studied in the sat community  selman et al.  1; 1; spears  1; mazure et al.  1; hirsch and kojevnikov  1 . as usual  these algorithms rely on the fundamental characteristics of local search: the exploration of the search space is achieved by moving from an element to one of its neighbors  these moves being performed according to specific heuristics. therefore  they expect to minimize  on the assignments space  a function corresponding to the number of false clauses. they are thus naturally designed for the max-sat problem and allow one to handle large instances.
　the efficiencyof such algorithmsis stronglyrelatedto their capacities to finely exploit specific areas of the search space when needed  i.e.  intensify the search  and to widely explore the space by moving to different promising areas  i.e.  diversify the search . these aspects are controlled through parameters to ensure a good tradeoff between diversification and intensification. but  actually these two notions are not really well defined and therefore  parameters tuning remains a key point when using such algorithms.
　we should remark that exact and approximate methods do not use the same representations for their search space. their hybridizations  mazure et al.  1; prestwich  1; habet et al.  1; prestwich  1  are not trivial since exact methods work on partial assignments incrementally completed by the resolution process while approximate algorithms explore the set of all possible complete assignments. a partial assignment is an assignment where some variables are not yet valued and can be thus considered as the representation of a set of complete assignments. from a local search point of view  the use of such partial assignments could lead to new diversification and intensification processes. indeed  the diversification of the search could be achieved by moving over large sets of complete assignments induced by given partial assignments  while the valuation of some variables of such partial assignments could be considered as a way to focus on a more restricted part of the search space.
　the purpose of this paper is to define a uniform model for these two types of assignments in order to precisely define and study the fundamental mechanisms of local search for sat and max-sat resolutions. this frameworkallows us to propose a new local search scheme which provides a uniform control of the search and which can be introduced in well known local search procedures: tabu search and walksat.
1 a 1-valued framework
we propose a new resolution framework for the sat and the max-sat problems which introduces a third truth value undefined in order to improve the resolution efficiency. within this framework  local search methods will be extended in order to take into account partial assignments and  therefore  several notions and logical rules have to be redefined.
1 standard local searches
in the classic sat and max-sat context  the search space is the set of all possible complete truth assignments. the objective function to maximize corresponds to the number of satisfied clauses given by the  function:

where means that the clause is satisfied by the assignment and is the cardinality of the set .
　the moves are clearly possible flips of the values of a given assignment. the flip of a variable in an assignment is the swap of its truthvalue  t  true  to f  false  or f to t . the best flip is selected thanks to a  function which returns the variable whose flip provides the best improvement  i.e.  maximizes the number of false clauses which become true after the flip minus the number of satisfied clauses which become false .
　a naive local search algorithm for sat and max-sat consists in selecting the best move at each step  using
　　　　  . it stops either when a solution is found or when a maximum number of steps has been reached. then  it returns the best assignment found  w.r.t.   .
specific control heuristics can be added to improve the efficiency of the search  such as random walks and other noise strategies  selman et al.  1 .
1 introducing an undefined value
our purpose is to provide a uniform framework to represent complete and partial assignments. concerning complete assignments  with classical and values  the logical interpretation rules are well-known but  with partial assignments  non valued variables appear and we decide to introduce a third truth value to represent them.
　we add a truth value u undefined  and consider the set of truth values in our 1-valued framework. this new value induces some changes in the standard logical interpretation rules. two approaches can be used to define these rules: an optimistic approach and a pessimistic approach.
the optimistic approach is the most commonly used. indeed  all the exact methods exploring a search tree are based on this approach. a clause is considered undefined if none of its literals is true and at least one of its literals is undefined. this approach corresponds to the following simplification rules:
we propose here an alternative pessimistic approach which relies on the fact that as soon as a clause has a false literal and no true literal  it is considered as false. an undefined clause must have all its literals set to undefined. this approach corresponds to the following rules:
　our search structure is now defined and we may study the precise behavior of local search algorithms on this structure with three truth values.
1 local search transitions
we define a partial order on the set such as and . in this context  given a sat problem with
variables  our search space will be the set . the ordering relation can be naturally extended to : if and only if and .
we consider the partial ordering with the greatest element . this structure will now be used to precisely describe the behavior of local search algorithms. we consider a basic local search move1 as a transition where . since we only consider here a classical neighborhood we require that transitions	satisfy and
             . this neighborhood corresponds to a hamming distance equal to 1 between two neighbors  which is related to the function.
　on the one hand  we first consider the assignment landscape point of view. the 1-valued framework allows us to handle both partial and complete assignments and  as mentioned above  a partial assignments is seen as a representation of a set of smaller assignments  w.r.t.  . therefore  diversification consists in considering larger sets of elements of the search space while intensification focus on fewer elements. the transition corresponds to a layer exploration when the number of undefined variables remains the same.
- diversification:	with
- intensification:	with
- layer exploration:	with	and
　on the other hand  we have to take into account the evaluation of the assignments. the introduction of the third truth value requires us to redefine the  function and the  function of section 1  since the number of undefined clauses must be taken into account. the new evaluation function returns the number of true clauses as well as the number of undefined clauses. in this context  an assignment is better than another if it satisfies more clauses. if the number of true clauses is equal for two assignments  the one generating the greatest number of undefined clauses will be considered as the best assignment.
where means that the clause is undefined by the assignment .
　using this function  we may define   the set of all the solutions for a formula : with	.
we define the order as the lexicographic extension of the order on the pair constructed by the
function. we may now consider the transitions from this evaluation point of view.
- improve:	with
- deteriorate:	with
- preserve:	with
　using these concepts  a move is now characterized from each point of view: for instance  a given move may correspond to a diversification and improve transition.
　these notions are illustrated in example 1. indeed  in our 1-valued framework  both exact and approximate methods can be modeled. the search trees used by davis-putnamlogemann-loveland like procedures are sets of intensification and diversification transitions whereas classic local search algorithms perform sets of improving  deteriorating and preserving transitions at the lowest layer  with no undefined value .
example 1:

figure 1: the 1-valued framework. all the elements of are represented w.r.t. the ordering relation . a diversification transition increases the number of undefined variables whereas an intensification transition decreases this number.
in this scheme  complete assignments are at the bottom and is on top. when the number of undefined variables remains stable  the elements are sorted by the order
     . the valuations of the function are given as a couple   ;   where  resp.   corresponds to the evaluation of the current assignment under the optimistic  resp. pessimistic  approach. this couple is reduced to a single evaluation if . the best element is on the right side and the worst on the left side. therefore  in this figure  best solutions are on rightmost bottom positions.
　at this stage  one has to consider possible combinations of these transitions  issued from these two points of view  to build a general local search process.
　the purpose of the search process is to increase the number of true clauses. when this is not possible  it is then preferable to increase the number of undefined clauses and thus to reduce the number of false clauses. we propose a new function which selects a variable and a change of its value which maximizes the number of true clauses and minimizes the number of false clauses  increasing the number of undefined clauses if necessary .
　at this step  the main components of a local search algorithm have been described. we will now study their behaviour and combination.
1 evaluation of the logical rules
we want to measure the effect of the logical interpretation rules  presented in section 1  on the search process. as described before  a 1-valued local search  1ls  algorithm may return now partial assignments which represent indeed sets of assignments. to evaluate the quality of these partial assignments  it is necessary to explore exhaustively the corresponding subset in order to find the best complete assignment that it contains. this can be achieved thanks to a branch and bound procedure  b&b  which performs an exhaustive search by exploring a restricted search tree whose root is the partial assignment provided by the 1ls algorithm.
　table 1 compares the effects of the different logical rules. tests are realized on standard random 1-sat instances with 1  1 and 1 variables  f1.cnf  f1.cnf and f1.cnf . the 1ls algorithm used for these tests is a 1valued tabu search  1ts-bb  see next section . the algorithm runs until 1 iterations are performed. the number of undefined variables      the number of clauses with one  two and three undefined variables     and the quality   -   are memorized for the last partial assignment found. to estimate the potential quality of the partial assignment found by 1ts-bb  a b&b algorithm is executed and provides the best complete assignment     by assigning the undefined variables.
inst.observationsoptimisticpessimistic t u f  after 1ts-bb 1 1  1 1 nb. var. u1 u uu uuu  1 1  1 1  t f  after b&b 1  1  t u f  after 1ts-bb 1 1  1 1 nb. var. u1 u uu uuu  1 1  1 1  t f  after b&b 1  1  t u f  after 1ts-bb 1 1  1 1 nb. var. u1 u uu uuu  1 1  1 1  t f  after b&b 1  1 table 1: comparisons between the two approaches.
　table 1 shows a clear dominance of the pessimistic interpretation. the quality of the partial assignment found during the 1ts-bb is better since the number of true clauses found after b&b is greater than the corresponding number obtained with the optimistic interpretation.
1 impact of transitions in the search process
the optimistic and the pessimistic interpretations do not involve the same behaviour w.r.t. the different combinations of transitions characterizing a move  as described in section 1. table 1 presents the evolution of the number of true  undefined and false clauses  t u f  for the optimistic  opt.  and the pessimistic  pes.  approaches and all the combinations of transitions excepted for the  preserve  transition since no change is performed in this case.
diversificationintensificationlayer explorationtuftuftufimp.  opt.   pes. det.  opt.   pes. table 1: possible evolutions of the number of true  undefined and false clauses  t u f  due to the different combinations of transitions.   : increase  : increase or remain stable  :
remain stable  : decrease or remain stable  : decrease and : increase  decrease or remain stable 
　we may assess common properties for the optimistic and pessimistic approaches. when applying an intensification transition  it is neither possible to create undefined clauses nor to delete true clauses. concerning the diversification transition  true clauses cannot be created and undefined clauses cannot be deleted. specific properties related to the optimistic and pessimistic interpretations can also be depicted: using the optimistic approach  false clauses cannot be generated during a diversificationtransition while in the pessimistic case  undefined clauses cannot be created nor deleted during the  layer exploration .
1-valued framework used in well-known algorithms
tabu search  ts   glover and laguna  1; mazure et al.  1  and walksat  selman et al.  1  are two well-known local search algorithms for sat and max-sat. to show the interest of the 1-valued framework  we have adapted these two algorithms in order to obtain 1ts-bb and 1walksat-bb. the and the functions  1  were used to transform the two algorithms in their 1-valued versions.
1 1ts-bb
the 1-valued tabu search  1ts-bb  is a local search metaheuristics based on standard tabu search. its aim is to maximize the number of true clauses and minimize the number of false clauses. the exploration of the search space is achieved by moving from an assignment to an other selected by the function. these moves are guided by the function which evaluates their benefit. in order to avoid problems induced by local optima  1ts-bb uses a tabu list containing informations on previously visited configurations to forbid some possible loops in the search process. the length of the tabu list is set to 1% of the number of variables  empirical result inspired by  mazure et al.  1  . one expects 1tsbb to return a complete assignment to answer to the maxsat problem. then  we decide to regularly complete the partial assignments with a b&b procedure in order to generate a complete assignment. this completion is realized every moves  empirically fixed to 1 . to reduce the execution time  b&b must not be used when there are too many undefined variables in the partial assignments. we impose that the maximum number of unassigned variables should not to be greater than a bound  empirically fixed to 1 . the search stops when a solution is found or when moves are executed.
1 1walksat-bb
the general process of the 1-valued walksat  1walksat-bb  uses similar principles. like the standard walksat  1walksatbb is a randomized local search algorithm  which tries to determine the best move by randomly choosing an unsatisfied clause and selecting one of its variable thanks to the function. we use as basis the version v1 of walksat. the search is composed of tries. each try starts with a random assignment and after moves  the best assignment found is completed with a classic b&b  if it is not a complete assignment. when a solution is found  the search stops. like walksat  1walksat-bb uses the  novelty  heuristic  selman et al.  1  with a noise set to 1  its default value .
remark: it is important to note that  contrary to the standard local search algorithms  the 1-valued algorithms may start their searches with the assignment . the influence of the initial assignment in the results is then avoided.
1 experimental results
due to the approximate and non-deterministic nature of ts  1ts-bb  walksat and 1walksat-bb  each algorithm runs 1 times on each benchmark. tests are realized on a cluster with linux and alinka  1 nodes each of them with 1 cpu pentium iv 1 ghz and 1 gb of ram  used sequentially. the maximum number of allowed local search steps is . for our algorithms  we consider that a backtrack performed during the b&b procedure has the same cost than a local search step.
　all studied instances  table 1  have been used for sat competition 1  simon et al.  1  and contain satisfiable and unsatisfiable instances. they come from different families of instances.
　to study the four algorithms we present two tables  tables 1 and 1 : the first one is a comparison between ts and 1tsbb and the second one between walksat and 1walksat-bb. two criterions are used: the number of false clauses  fc.  and the number of steps  including local search moves and b&b backtracks  to obtain the best result  steps . for these two criterions we present the average  avg.  and its standard deviation  s.d. . another interesting value is proposed in the last column: the percentage of improvement of the 1-version v.s the standard version  w.r.t. the average number of false clauses.

combcomb1 comb1
1
1
1des-encryptioncnf-r1-b1-k1-comp cnf-r1-b1-k1-comp1
1
1
1ezfact-1ezfact1 ezfact1 ezfact1
1
1
1
1
1
1ezfact111kukulaam 1 am 11
1
1
1markstrommm-1-1-s.1 mm-1-1-s.1
1 1
1okgenokgen-c1-v1-s1 okgen-c1-v1-s1
1
1
1parity-1par1-c par11
1
1
1purdom1fw
1nc1
1
1
11nw11pyhala-braunpyhala-braun-unsat-1-1 pyhala-braun-unsat-1-1 pyhala-braun-unsat-1-1
1
1
1
1
1
1pyhala-braun-unsat-1-11qwhqwh.1 qwh.11
1
1
1unifunif-r1-v1-c1-s1 unif-r1-v1-c1-s1
1
1
1table 1: instances selected from the sat1 competition.  sat1 sat1 instance number  var. variables  cl. clauses 
　tables 1 and 1 show that the 1-valued framework permits to boost classic local search methods like ts and walksat. indeed  1ts-bb provides an improvement which can be sometimes weak and exceptionally negative   for ezfact1  but often really more significant for most of the instances   for par1  and all the families. for walksat  the improvement is less important with the 1-valued framework. however  1walksat-bb provides interesting results because 1 families are improved  1 more than 1%  and only 1 families are deteriorated  never more than -1% .
　it is interesting to remark that the 1ts-bb and 1walksatbb results are better while the search power represented by the number of steps is in the same order of magnitude. execution time is not mentionedin the tables but remains approximatively the same with and without the 1-valued framework.
1 discussion and conclusion
our 1-valued framework allows us to handle partial assignments and  thanks to these partial assignments  some characteristics of the formula  like the backbone  dubois and dequen  1   can be easily defined. the backbone of a satisfiable formula is the set of entailed literals. a literal is entailed by if and only if is unsatisfiable. in the
1-valued framework  the backbone is the element such that	.
　in this paper  we have proposed a new resolution framework for sat and max-sat problems which includes a third truth value in order to handle both partial and complete assignments. we have precisely studied the extension and behavior of local search algorithms using this third truth value. two possible logical interpretations have been considered and it appears that the pessimistic approach provides better results than the optimistic approach.
　we have then introduced this 1-valued framework inside tabu search and walksat algorithms and the results are very promising. our future works will consist in developing new specific heuristics using this 1-valued framework and in extending other well known algorithms in a 1-valued version. this framework could also serve as basis for full hybridizations of complete and incomplete resolution techniques.
acknowledgments
the work presented in this paper is partially supported by the cper com program. we would like to thank the anonymous referees for their useful comments.
