 
　　　computer vision systems based on general purpose computers often need efficient texture description algorithms. one common method is to calculate two-dimensional discrete fourier transforms over windowed regions of the light intensity mat r i x . although these methods described in the literature are based on the fast fourier transform algorithm  the computation time is s t i l l too high to permit the description of texture for as many windows as are needed for good segmentation. when a set of transforms over a window at every position of the matrix is needed  an efficient method can be used. it saves information computed for previous windows and uses it to reduce the effort expended on the current window. for a window n x n and an image matrix m x m  the time complexity is reduced 
from 1 n1logn  to 1 n1 . 	this complexity cannot be beaten by any nonparallel algorithm. i. 	introduction 
　　　one of the more elusive problems in machine vision is the characterization of visual texture and the use of texture as a perceptual cue  bajcsy 1a . texture has alternatively been defined in terms of impressionistic qualities  surface microstructure  and s t a t i s t i c a l properties of surface functions. a class of methods for mea-
suring texture uses the two-dimensional fourier transform computed over local windows of a d i g i t a l picture  bajcsy 1b  followed by some other processing. although some of these methods have been shown reasonable and useful for segmentation into regions according to texture  the large amount of computation involved in transforming the windows has inhibited these methods' use. here it is shown how the effort required to transform a l l the local windows of a picture can be reduced by a significant factor. by taking advantage of this technique one can afford to compute a texture descriptor for each pixel rather than only each block of a p a r t i t i o n ; thus one can achieve finejyresolved segmentations on the basis of texture 
 for a related study see pavlidis 1 tanimoto 1 . 
i i . 	updating a discrete fourier transform 
　　　halberstein  1  showed how one could perform a useful updating process on a discrete fourier transform in linear time  instead of n log 
n time to recompute from scratch . 	the problem is stated as follows. 	let 	f1  	f1.  	.  fi.  . . . be an 

a symmetrically similar equation can be used to i n crement p instead of q. it should be noted that the summation in the above expression is a discrete fourier transform of the difference vectorbetween the  incoming  and  outgoing  columns and need only be computed once for the entire window's update. the cost of that n log n operation is small in comparison with the n1 multiplications needed to  shift the basis vectors . thus 1 n1  operations are required to update the transform of a window moved one row or column. 
　　　　an algorithm for computing the two-dimensional dft on a l l nxn windows of an mxm picture has been devised using the technique described here 
 tanimoto 1 . assuming n is much smaller than m  the algorithm requires 1 k1  complex multiplications  saving a factor of log  n. 
acknowledgement 
　　　　the support of t. pavlidis and nsf grants eng1-a1 and eng1 is gratefully appreciated. 
