
the paper presents the theoretical foundations and an algorithm to reduce the efforts of testing physical systems. a test is formally described as a set of stimuli  inputs to the system  to shift the system into a particular situation or state  and a set of varia-bles whose observation or measurement refutes hypotheses about the behavior mode the system is operating in. tests  either generated automatically or by humans  may contain redundancy in the sense that some of its stimuli and/or observables maybe irrelevant for achieving the result of the test. identifying and dropping them contributes to redu-cing the cost of set-up actions and measurements. we define different kinds of irrelevant stimuli  discuss their practical importance  and present criteria and algorithms for computing reduced tests.
1	introduction
testing of physical systems is a frequent task in industry: during or after manufacturing of a product it has to be checked whether the process worked properly and the product behaves as designed. under operation  wearing und breaking of parts may lead to system failures  and it has to be investigated whether and where a fault occurred and of what kind it is. even though some testing  particularly in manufacturing  is performed automatically and requires no or limited human intervention  saving time and efforts spent on testing is an economical requirement. this becomes more important with the amount of necessary human actions  such as disassembly of parts of a vehicle in a workshop  and the cost of downtime of large equipment.
¡¡designing effective test sets or sequences is a demanding and time consuming task  particularly when the systems to be tested come in many variants such as cars and their subsystems. in  struss 1   we presented the theoretical foundations and implemented algorithms to generate tests for a device based on behavior models of its components.
¡¡designing efficient tests is a challenge for the reasons stated above. our solution presented in  struss 1  addressed this in one way: it searches for tests that could serve several purposes at once  i.e ruling out more than one hypothesis. this increases efficiency of testing by reducing the number of tests. however  it was ignorant of another source of efficiency: the reduction of the efforts spent on an individual test. more precisely: so far  the question answered was  given a set of possible stimuli to a system and a set of observables  how can we stimulate the system such that the observables reveal information about the actual behavior mode of the system   now  we address the problem of determining minimal sets of stimuli. when combined with an estimation of costs of the respective actions  the solution will contribute to cost-optimal testing. however  this paper is neither addressing costs nor the task of organizing the tests in a sequence or tree  which are different issues.
¡¡in the following section  we will introduce a formal definition and representation of tests based on a relational representation of the behavior model of a system or  more generally  the hypotheses to be tested. the basis for this is the manipulation of finite relations as they are given by quali-tative behavior models.
¡¡section 1 provides the formal foundations for test reduction by defining and characterizing redundancy in tests in terms of variables that are irrelevant for a particular test. the algorithms are presented in section 1. finally  we discuss the practical impact of the solution and the open problems.
1	the background:
model-based test generation
in the most general way  testing aims at finding out which hypothesis out of a set h is correct  if any  by stimulating a system such that the available observations of the system responses to the stimuli refute all but one hypotheses  or even all of them .
this is captured by the following definition.
definition  discriminating test input 
let
ti = {ti} be the set of possible test inputs  stimuli   obs = {obs} the set of possible observations  system
responses   and
h = {hi} a set of hypotheses.
ti ¡Ê ti is called a definitely discriminating test input for
h if
 i    hi ¡Ê h   obs ¡Ê obs	ti ¡Ä hi ¡Ä obs	 ¡Í
and
 ii    hi ¡Ê h   obs ¡Ê obs if	ti ¡Ä hi ¡Ä obs  ¡Í then   hj ¡Ù hi ti ¡Ä hj ¡Ä obs  ¡Í.
ti is a possibly discriminating test input if
 ii¡ä    hi ¡Ê h   obs ¡Ê obs such that ti ¡Ä hi ¡Ä obs  ¡Í and   hj ¡Ù hi ti ¡Ä hj ¡Ä obs  ¡Í.
¡¡in this definition  condition  i  expresses that there exists an observable system response for each hypothesis under the test input. it also implies that test inputs are consistent with all hypotheses. i.e. we are able to apply the stimulus  because it is causally independent of the hypotheses. condition  ii  formulates the requirement that the resulting observation guarantees that at most one hypothesis will not be refuted  while  ii'  states that each hypothesis may generate an observation that refutes all others.
¡¡usually  one stimulus is not enough to perform the discrimination task which motivates the following definition.
definition  discriminating test input set 
{tik} = ti¡ä   ti is called a discriminating test input set for h = {hi} if
  hi  hj with hi ¡Ù hj   tik ¡Ê ti¡ä such that
tik is a  definitely or possibly  discriminating test input for {hi  hj}.
it is called definitely discriminating if all tik have this property  and possibly discriminating otherwise. it is called minimal if it has no proper subset ti¡ä¡ä  ti¡ä which is discriminating.
¡¡such logical characterizations  see also  mcilraith-reiter 1   are too general to serve as a basis for the development of an appropriate representation and algorithms for test generation. here  the hypotheses correspond to assumptions about the correct or possible faulty behavior of the system to be tested. they are usually given by equations and implemented by constraints  and test inputs and observations can be described as value assignments to system variables.
¡¡the system behavior is assumed to be characterized by a vector
vs =  v1  v1  v1  ...   vn 
of system variables with domains
dom vs  =
dom v1  ¡Á dom v1  ¡Á dom v1  ¡Á ... ¡Á dom vn .
then a hypothesis hi ¡Ê h is given as a relation ri   dom vs .
¡¡observations are value assignments to a subvector of the variables  vobs  and also the stimuli are described by assigning values to a vector vcause of susceptible   causal  or input  variables. we make the reasonable assumption that we always know the applied stimulus which means the causal variables are a subvector of the observable ones:
vcause   vobs   {vi}
¡¡since the focus of this paper is not on test generation and our solution to test reduction is independent of the way the tests were produced  we only briefly summarize the foundation for automated model-based test generation and refer to for  struss 1  details. the basic idea is to construct test inputs by computing them from the observable differences of the relations that represent the various hypotheses. figure 1 illustrates this. firstly  for testing  only the observables matter. accordingly  figure 1 presents only the projections  pobs ri   pobs rj   of two relations  r1 and r1   possibly defined over a large set of variables  to the observable variables. the vertical axis represents the causal variables  whereas the horizontal axis shows the other observable variables  which represent the observable response of the system .

figure 1 determining the inputs that do not  possibly  definitely discriminate between r1 and r1
¡¡to construct a  definitely  discriminating test input  we have to avoid stimuli that can lead to the same observable system response for both relations  i.e. stimuli that may lead to an observation in the intersection
pobs ri   pobs rj 
shaded in figure 1. these test inputs we find by projecting the intersection to the causal variables:
pcause pobs ri   pobs rj   .
   the complement of this is the complete set of all test inputs that are guaranteed to produce different system responses under the two hypotheses:
dtiij = dom vcause    pcause pobs ri   pobs rj   .
lemma 1
if hi=ri  hj=rj  ti=dom vcause   and obs=dom vobs   then dtiij is the set of all definitely discriminating test inputs for {hi  hj}.
¡¡please  note that we assume that the projections of ri and rj cover the entire domain of the causal variables which corresponds to condition  i  in the definition of the test input.
¡¡we only mention the fact  that  when applying tests in practice  one may have to avoid certain stimuli because they carry the risk of damaging or destroying the system or to create catastrophic effects as long as certain faults have not been ruled out. in this case  the admissible test inputs are given by some set radm   dom vcause   and we obtain
dtiadm  ij = radm   pcause pobs ri   pobs rj   .
¡¡in a similar way as dtiij  we can compute the set of test inputs that are guaranteed to create indistinguishable observable responses under both hypotheses  i.e. they cannot produce observations in the difference of the relations:
 pobs ri    pobs rj   ¡È  pobs rj    pobs ri  .
then the non-discriminating test inputs are
ntiij =
¡¡dom vcause   pcause  pobs rj   pobs ri   ¡È  pobs ri   pobs rj    all other test inputs may or may not lead to discrimination.
lemma 1
the set of all possibly discriminating test inputs for a pair of hypotheses {hi  hj} is given by
ptiij = dom vcause    ntiij ¡È dtiij   .
the sets dtiij for all pairs {hi  hj} provide the space for constructing  minimal  discriminating test input sets.
lemma 1
the  minimal  hitting sets of the set {dtiij} are the  minimal  definitely discriminating test input sets.
¡¡a hitting set of a set of sets {ai} is defined by having a non-empty intersection with each ai.  please  note that lemma 1 has only the purpose to characterize all discriminating test input sets. since we need only one test input to perform the test  we are not bothered by the
complexity of computing all hitting sets. 
¡¡this way  the number of tests constructed can be less than the number of necessary pairwise discrimination between n hypotheses  n1 - n. if the tests have a fixed cost associated  then the cheapest test set can be found among the minimal sets. however  it is worth noting that the test input sets are the minimal ones that guarantee the discrimination among the hypotheses in h. in practice  only a subset of the tests may have to be executed  because some of them refute more hypotheses than guaranteed  because they are a possibly discriminating test for some other pair of hypotheses  and render other tests unnecessary.
¡¡the computation is based on operations on relations  such as intersection and projection  and will usually practically work only on finite relations. qualitative abstraction can generate such representations for continuous models and  hence  enable a broad applicability of the algorithm. the many existing test generation algorithms for digital circuits are specializations of it  provided they are sound and complete . of course  they can exploit the special boolean domain and  hence  may be more efficient than our general algorithm.
¡¡the algorithm has been implemented based on commercial software components of occ'm's raz'r   occ'm 1   which provide a representation and operations of relations as ordered multiple decision diagrams  omdd . the input is given by constraint models of correct and faulty behavior of components taken from a library which are aggregated according to a structural description. these models are the same ones that can and have been used for model-based diagnosis and detectability and discriminability analysis.
¡¡it is important to note that the required operations on the relations are applied to the observable variables only  including the causal variables . the projection of the entire relation ri to this space can be understood as producing a black box model that directly relates the stimuli and the observable response. in many relevant applications  this space will be predefined and small. for instance  when testing of car subsystems exploits the on-board actuators and sensors only  this may involve some 1 - 1 variables or so. the entire workshop diagnosis task has more potential probing points  but still involves only a small subset of the variables in the entire behavior relation ri.
¡¡finally  we mention that probabilities  of hypotheses and observations  can be used to optimize test sets   struss 1a    vatcheva-de jong-mars 1  .
1 different kinds of irrelevant causal variables
in the tests characterized by lemma 1  test inputs are tuples of values for all available causal variables  and the guarantee for discrimination is related to all specified observables. however  it may be the case  that a generated test is redundant in the sense that already of subset of inputs and/or observations would provide the same information for discrimination. this is important  because costs are often related to the number of stimuli and observation actions. if we can reduce individual tests to the necessary stimuli and/or observations only  this will contribute to reducing costs for testing.
¡¡in the following  we will provide the foundations for reducing the set of input variables. more details can be found in  strobel 1 .
¡¡let dtiij   dom vcause  be the set of definitely discriminating test inputs. the question is whether there is a subvector v'cause   vcause that can be ignored in some way without losing discrimination information provided by the test. rather than computing the set of test inputs for various subsets of the causal variables to answer this question  we will identify irrelevant causal variables by analyzing dtiij.
¡¡a closer look reveals that a causal variable can be irrelevant in different ways that have a different impact on the generation and application of tests. let us first illustrate these cases by simple examples and then define them formally.
¡¡suppose you want to test whether the light bulb l in the tiny circuit of figure 1 works or is defect  open . the possible stimuli are opening and closing of switches s1 and s1  and l can be observed. if we assume that resistor r is not too small  all one has to do is close s1 and observe whether or not l is lit  assuming there is a voltage supply . for this test  the position of s1 is totally irrelevant: whatever its state may be  it does not influence the actions we have to perform.

figure 1  the position of s1 is totally irrelevant for testing l 
¡¡regarding the circuit in figure 1  we can observe the following: the position of switch s1 is irrelevant in the sense that we can test lamp l regardless of whether it is up or down. however  it is not totally irrelevant: in contrast to the  first case  the appropriate test inputs depend on the position. for s1 up  s1 must be closed; otherwise  s1 has to be closed. this means  the position of s1 has to be known in order to perform a test  but it does not have to be influenced which allows for omission of an action. we call such a variable weakly irrelevant  in the lack of a better term . 
 
¡¡the same circuit can be used to illustrate a third kind of irrelevance of a causal variable: the position of s1 is irrelevant if s1 is in down position. hence  it is not totally irrelevant  but only under certain conditions. this is still 

figure 1 the position of s1 is weakly irrelevant; positions of s1 and s1 are conditionally 
practically important  because once the condition is satisfied  we can save by avoiding actions related to s1's position. this variable is conditionally irrelevant  and so is s1's position  of course.  
¡¡to generalize the intuition gained from the examples and to formalize them: for some subvector  v'cause   vcause we distinguish the following cases  for which  figure 1 shows abstract examples : for all value assignments from dom v'cause   dtiij can contain  
i. the same set of stimuli for the remaining causal variables  total irrelevance  
ii. some set of stimuli for the remaining causal variables  weak irrelevance  
iii. the same set of stimuli for the remaining causal variables under some restriction of the values of the remaining causal variables  conditional irrelevance .  
¡¡figure 1 displays the sets dti in the plain of causal variables  not the plain of all observables as figure 1   where the vertical axis corresponds to the irrelevant variable  or subvector of variables  v'cause  while the horizontal axis represents the remaining ones. in case  i   dti is the cross product of the entire domain of v'cause and a certain value assignment to the remaining variables. case  ii  can be characterized by the fact that the projection of dti to v'cause 

figure 1 abstract examples of total irrelevance  i   weak irrelevance  ii   and conditional irrelevance  iii  
covers the entire domain. and case  iii  implies that dti has a subset that is obtained as the cross product dom  v'cause  and a set of tuples of the remaining variables  indicated by dotted lines in figure 1 .  this motivates the following definitions: 
definition  irrelevance of causal variables   
let dti   dom vcause  be the complete set of definitely discriminating test inputs for two hypotheses. a subset of causal variables v'cause   vcause is called:  i  totally irrelevant if  
	 	 	dti = pvcause v'cause  dti  x dom v'cause  
 ii  weakly irrelevant if    pv'cause  dti  = dom v'cause   
 iii  conditionally irrelevant if there is a non-empty subset dti'  dti such that 
dti' = pvcause v'cause  dti'  x dom v'cause  
¡¡as suggested by figure 1  there are implication relations among the three types of irrelevance  which can be easily proved based on the above definition. 
lemma 1  
if v'cause is totally irrelevant   v'cause is also conditionally irrelevant. 
if v' is conditionally irrelevant   v'cause is also weakly irrelevant. 
¡¡the goal of identifying sets of irrelevant causal variables seems to imply that one has to consider the power set of the causal variables. however  this is not the case due to the following lemma. 
lemma 1  
 v1  and  v1  are both totally irrelevant      v'cause =  v1  v1  is totally irrelevant. 
 v1  and  v1  are both weakly irrelevant      v'cause =  v1  v1  is weakly irrelevant. 
¡¡this allows us to investigate this kind of irrelevance independently for each variable and then comprise them in one set  which makes the check linear in the number of causal variables. however  a similar lemma does not apply to conditionally irrelevant variables. 
remark 
if  v1  and  v1  are both conditionally irrelevant  then v'cause =  v1  v1  is not necessarily conditionally irrelevant.    
¡¡obviously  to establish conditional irrelevance of the pair of variables  the conditions for the irrelevance of the two variables would have to have a non-empty intersection. but figure 1 provides an example in which they are even exclusive: the position of s1 is irrelevant under conditions that require a particular state of s1 and vice versa.  
1 	test reduction 
based on the definitions and lemmata in the previous section  we developed algorithms for the automated reduction of tests. whether they have been generated by an algorithm like the one sketched in section 1 or by human experts is irrelevant  as long as they can be represented in the relational style. 
¡¡firstly  we exploit lemma 1: we start with the test input set for a maximal set of causal variables and then analyze irrelevance of each single causal variable. 
¡¡secondly  we check for weak irrelevance first  because lemma 1 allows ruling out also the other kinds of irrelevance in the negative case. this check can be based directly on the definition of weak irrelevance and is formally described as follows. 
lemma 1  
let vk be a causal variable  pk the projection to this variable  and dti a set of definitely discriminating test inputs. if  pk  dti   = dom  vk       then vk is weakly irrelevant to dti. if  pk  dti   ¡Ù dom  vk  then vk is not weakly  conditionally  or totally irrelevant to dti. 
¡¡in case of a weakly irrelevant variable we can check for conditional and total irrelevance. to get the idea underlying this test  a glance at the abstract example of figure 1 may be helpful. we have to check whether there exists a non-empty dti¡ä   dti  such that  p-k  dti¡ä   ¡Á dom vk    dti¡ä  where p-k is the projection to the causal variables except vk: 
vcause  {vk}. 
we do so by computing the projection of the maximal dti¡ä  	dti¡ä-k := p-k  dti¡ä  
and checking whether it is empty  and we compute it by computing its complement.  
¡¡dti¡ä-k comprises all value assignments to vcause {vk} that when combined with arbitrary values of vk always yield a test input of dti. hence  its complement contains all value assignments that can be combined with at least one value of vk to yield a test input that does not lie in dti  but in its complement:  
 	dom vcause {vk}   dti¡ä-k =    	 
 	 	{v-k 1 ¡Êdom vcause {vk}      vk 1 ¡Êdom vk  ¡Ä  	 	 	 	 	 	 	 	 	 	v-k 1 ¡ã vk 1 ¡Ê dom vcause   dti}. 
but this is the projection of the complement of dti:   p-k  dom vcause   dti . 
this yields the following lemma which underlies the second check. 
lemma 1 
 let vk be a causal variable  p-k the projection to the other causal variables  and dti a non-empty set of definitely discriminating test inputs. furthermore  let  
	  	dti¡ä-k := 
¡¡¡¡ dom vcause  {vk}   p-k   dom vcause   dti  .  if  dti¡ä-k =      	then vk  is not conditionally or totally irrelevant to dti.  if dti¡ä-k ¡Ù    
¡¡  	then vk is conditionally irrelevant to dti   if dti¡ä-k = p-k  dti   	 	the vk is totally irrelevant to dti. 
¡¡please note that dti¡ä-k represents the condition under which vk is irrelevant. this can be used for investigating the relationship of these conditions for different causal variables. the third implication of the lemma simply reflects the fact that total irrelevance is obtained if the condition comprises all value assignments to the other causal variables that occur in dti. 
 this establishes an algorithm for determining whether a causal variable is irrelevant and if so  of what type: 
if pk  dti  = dom vk  
 	then 
 	 	if dti¡ä-k =      
then  weakly irrelevant  
else if dti¡ä-k = p-k  dti  
then  totally irrelevant  
else  irrelevant under dti¡ä-k  
 	else  not irrelevant  
¡¡based on the results of this algorithm  the irrelevant variables can be removed from dti by projection yielding a simplified and cheaper test input set.  
¡¡what we have presented for the case of definitely discriminating test input sets can obviously be applied in the same way to possibly discriminating test inputs. 
1 discussion and future challenges 
the generation of a set of test input sets  with or without the reduction described here  provides the starting point for different further processing and use of this information. one can select one test input from each set and generate a fixed sequence or decision tree of tests to be applied. the information could also be used in a dynamic way by making the choice of the next test dependent on the current situation. a characterization of the situation can involve two aspects: firstly  the hypotheses actually refuted so far. we emphasize again  that this is not completely fixed by the tests executed so far  because some of them may have refuted all hypotheses that they can discriminate  and also they may have refuted more hypotheses than were guaranteed to be refuted. secondly  one can choose the next test based on the current state of the system in order to minimize the number of stimuli that have to be changed. 
    the different types of irrelevance have a different impact on these strategies. obviously  totally irrelevant variables can be eliminated from the respective test inputs  i.e. they do not have to be considered for the respective test actions. however  unless they are irrelevant to all test input sets in the set  they have to be observed during the testing  because they may be weakly irrelevant to some other test input sets and  hence  their value has to be known in order to determine the appropriate values for the other causal variables.
¡¡weakly irrelevant variables do not have to be influenced either in the respective test  but the appropriate values for the other variables have to be determined by restricting dti for the next step to the current values of the weakly irrelevant variables.
¡¡for conditionally irrelevant variables  it has to be checked whether the irrelevance condition dti¡ä-k is satisfied in the current situation  and if so  they do not have to be touched  and an arbitrary assignment of values out of dti¡ä-k can be chosen for the relevant variables.
¡¡in this paper  we focused on the reduction of the number and costs of stimuli actions. this is justified because their costs are often higher than those of observing the system response. reducing also the cost associated with observations is nevertheless a task that needs to be addressed. however  the solution for the causal variables does not simply carry over  and the tasks are not independent: in principle  a reduction of the set of observables may require the presence of certain stimuli and vice versa.
¡¡another challenge is to investigate how serious a fundamental limitation of our approach is  and to overcome it if necessary and possible : the behavior representation in terms of relations and  hence  a rather static view on the system to be tested. if dynamic features are relevant  they can be accommodated by including derivatives in the set of model variables. another solution is to base the behavior representation on transitions. since they can be represented again by relations  linking the states  before  and  after   the described representations and algorithms remain applicable.
¡¡we have explored the latter solution by transforming models given as finite state machines into such a representation with the goal of extending the solution to testing of software  esser-struss 1 . this provides a challenge in itself  mainly because of the difficulty in establishing appropriate fault hypotheses: while for many physical devices  such hypotheses are determined by the ways the components wear and fail  the ways in which software can fail spans an infinite space and may include structural faults. an extension of the test generation and reduction methods to include software would be highly attractive because it would allow testing embedded software and its physical context in an integrated way.
acknowledgements
¡¡thanks to torsten strobel who implemented the algorithm  oskar dressler for discussions and support of this work  and the model-based systems and qualitative modeling group at the technical university of munich. this work was supported in part by audi ag  ingolstadt.
