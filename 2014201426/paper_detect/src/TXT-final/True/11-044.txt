autonomous guidance and control of a roving robot* 
j. a. m i l l e r 
guidance and control section 
	jet 	p r o p u l s i o n laboratory 
	pasadena  	c a l i f o r n i a 1 
i n t r o d u c t i o n 
nasa has embarked upon a robotics research p r o j e c t at the jet p r o p u l s i o n l a b o r a t o r y   the purpose of which is to e s t a b l i s h a technology base in r o b o t i c s and semi-autonomous c o n t r o l of unmanned machines or v e h i c l e s to support lunar and p l a n e t a r y e x p l o r a t i o n . the long term o b j e c t i v e of the r o b o t i c s work at jpl is to provide an i n t e g r a t e d hardware/software system 
which is capable of n e a r l y autonomous performance. the present design philosophy seeks to l i m i t the need f o r human i n t e r a c t i o n to s e l e c t i o n of goals and s i m i l a r higher l e v e l f u n c t i o n s . the rover must then analyze the scene f o r t r a v e r s a b i l i t y   generate a planned path to the g o a l   and f o l l o w t h a t p a t h   a v o i d i n g any obstacles along the r o u t e . we have achieved the c a p a b i l i t y of performing the scenario j u s t described in a s i m p l i f i e d environment; a l a b o r a t o r y w i t h a f l a t s u r f a c e   a l i m i t e d number of obstacles and constant i l l u m i n a t i o n . this paper focuses upon the autonomous guidance and c o n t r o l f u n c t i o n s of the rover which executes the planned t r a j e c t o r y in an incompletely d e f i n e d environment. 
the robot hardware c o n s i s t s of a f l a t b e d four wheeled r o v i n g v e h i c l e upon which is mounted a manip u l a t o r   a scan p l a t f o r m w i t h stereo tv cameras and a l a s e r r a n g e f i n d e r   and associated e l e c t r o n i c s . the v e h i c l e is steered by an ackerman type double s t e e r i n g system w i t h p o s i t i o n servo l o o p s . the four wheels are d r i v e n independently by dc torque motors. the present n a v i g a t i o n hardware c o n s i s t s of a conventional gyrocompass and d i g i t a l o p t i c a l encoder odometers combined to form a dead-reckoni n g n a v i g a t i o n system. the robot is c o n t r o l l e d by a r e a l - t i m e l o c a l minicomputer  general automation spc-1  which is l i n k e d to a large remote t i m e shared computer  decsystem 1 . 
the rover software system c o n s i s t s of an i n t e g r a t e d set of subsystems which i n c l u d e the prototype ground system  pgs   the rover executive  rex  and 
v i s i o n   m a n i p u l a t i o n and locomotion subsystems. the guidance system c o n s i s t s of those elements of the locomotion subsystem software whose primary purpose is to plan and c o n t r o l a c t i v a t i o n of s t e e r i n g and d r i v e motors such as to cause the rover to f o l l o w a planned p'ath w i t h i n a predefined e r r o r t o l e r a n c e in an e f f i c i e n t manner. the planned path is p r o v i ded to the guidance system in r e a l - t i m e by the path planning module  another element of the locomotion 
subsystem software. for f u r t h e r d i s c u s s i o n of the rover software system in general and the path p l a n n i n g module in p a r t i c u l a r see thompson  1 . 
*this paper presents the r e s u l t s of one phase of research c a r r i e d out at the jet p r o p u l s i o n labora t o r y   c a l i f o r n i a i n s t i t u t e o f technology  under contract no. nas 1  sponsored by the n a t i o n a l aeronautics and space a d m i n i s t r a t i o n . 
　　　　　　　　　　　　design goals the primary design goals of the guidance system were v e h i c l e s a f e t y   subsystem autonomy and operat i o n a l e f f i c i e n c y . 	these goals are t y p i c a l of 
mission r e l a t e d p r i o r i t i e s . accuracy o f p e r f o r mance is not l i s t e d as a separate design goal since i t i s i m p l i e d b y both the need f o r v e h i c l e s a f e t y and subsystem autonomy. subsystem autonomy r e f e r s to the guidance system's a b i l i t y to detect and c o r r e c t e r r o r s in i t s own performance and detect and avoid any obstacles which might be encountered w i t h o u t r e q u i r i n g assistance from other rover p r o cesses   i . e . w i t h o u t r e q u e s t i n g a new plan from the path planning module . the need f o r operat i o n a l e f f i c i e n c y r e f e r s t o the d e s i r e t o minimize the r e q u i r e d time to complete a t r a v e r s e  maximize v e h i c l e average t r a v e r s e speed . increased speed and autonomy combine to s i g n i f i c a n t l y reduce mission c o s t s . r e l i a b i l i t y is also an important goal i m p l i e d by the needs f o r s a f e t y and autonomy. m i n i mizing v e h i c l e a c c e l e r a t i o n increases hardware r e l i a b i l i t y but c o n f l i c t s w i t h the d e s i r e t o maximize average speed. 
in order to a t t a i n these g o a l s   r e a l - t i m e maneuver p l a n n i n g   performance m o n i t o r i n g and e r r o r c o r r e c t i o n are r e q u i r e d . maneuver planning must be done i n r e a l - t i m e t o i n t e g r a t e t u r n i n g   e r r o r c o r r e c t i o n and obstacle avoidance maneuvers such t h a t a f a v o r able balance of speed  a c c e l e r a t i o n and d e v i a t i o n from the planned path is achieved. the f o l l o w i n g paragraphs describe important aspects of maneuver planning i n g r e a t e r d e t a i l . 
	maneuver 	planning 
path l i n k s provided by the path planning module  thompson  1  are defined by a constant minimum r a d i u s t u r n f o l l o w e d by a s t r a i g h t segment. to f o l l o w such a path w i t h minimum d e v i a t i o n would r e q u i r e s t o p p i n g the rover d u r i n g s t e e r i n g   since s t e e r i n g r e q u i r e s appreciable time and the t u r n radius v a r i e s d u r i n g s t e e r i n g . such a method of o p e r a t i o n i s r e j e c t e d   since i t reduces the average speed  and places greater s t r e s s upon the s t e e r i n g system w i t h a r e s u l t a n t decrease in r e l i a b i l i t y and l i f e t i m e of the s t e e r i n g d r i v e hardware. s t e e r i n g w h i l e moving  however  r e s u l t s in a v a r i a b l e r a d i u s t u r n   f o r c i n g the rover to deviate from the p r e s c r i b e d p a t h . the magnitude of the d e v i a t i o n and i t s d i s t r i b u t i o n along the planned path depends upon the v e h i c l e speed d u r i n g s t e e r i n g   the magnitude of the d e s i r e d heading change and the p o i n t s of i n i t i a t i o n and conclusion of s t e e r i n g . the d e v i a t i o n may be minimized f o r a given s t e e r i n g speed by designing the maneuvers such that the v e h i c l e begins s t e e r i n g p r i o r t o the prescribed t u r n i n g p o i n t and concludes s t e e r i n g an equal d i s tance beyond the p r e s c r i b e d p o i n t of c o m p l e t i o n . this not o n l y minimizes the d e v i a t i o n d u r i n g the t u r n but also t h e o r e t i c a l l y e l i m i n a t e s any t r a n s verse e r r o r at completion of the t u r n i n g maneuvers. 
robotics-1: millire 1 s e l e c t i o n of a speed w h i l e s t e e r i n g becomes a c r i t i c a l parameter in maneuver design since t h i s d e t e r mines the t h e o r e t i c a l magnitude of the d e v i a t i o n as w e l l as the d i s t a n c e r e q u i r e d before and a f t e r the planned t u r n . 	the speed w h i l e s t e e r i n g is thus constrained by the maximum transverse d e v i a t i o n 
allowed and the lengths of the straight segments between turns. 	the distance required prior to the turn consumes a portion of the straight segment of the previous link. 	similarly  some portion of the straight segment of the present link must be reserved for the turn of the subsequent link  undefined at this point . 	additional portions must be reserved for transverse error corrections and obstacle avoidance maneuvers  should these be necessary. real-time updates to vehicle performance and hazard expectancy models are needed to allow for such contingencies. 
                   guidance software the structure of the controlling software evolved as a result of timing  core usage and cpu availa b i l i t y constraints. other robot processes require memory and cpu time to operate in pseudo-parallel to the guidance software  forcing the l a t t e r to operate discontinuously even while the vehicle is moving. to meet these constraints  the main guidance module was designed around a one-second cycle time  with a half second delay. the one second cycle was chosen to provide a fast response capab i l i t y to incoming commands  a safety feature  and satisfies the need to perform position updates at least once per second. to reduce core requirements  maneuver monitoring and controlling was compressed into two general purpose sections  one for controlling a l l turning maneuvers  and another for monitoring movement along straight segments. the cyclical structure of the program and the general purpose design of the turn/straight path monitors requires that a complete task-relative rover state be dynamically defined so that at any point of any cycle the program  knows  what the rover is doing  what has already been done  what must be done in this cycle  and what it must prepare to do in subsequent cycles  a l l with a minimum  recognition e f f o r t   . appropriate setting and testing of task/ rover state variables is crucial to guidance system performance. 
delays in maneuver execution due to the cyclical inactivity of the guidance software could cause significant deviations from the designed maneuvers. there also exists a hardware constraint that vehicle drive motors be pulsed frequently to maintain motion  another safety feature . provision of separate high p r i o r i t y move and steer programs activated on a clocked interrupt basis by the real time operating system  rtos  resolves these problems by permitting precise timing of hardware control signals even while the main guidance routine is inactive. the main guidance routine controls these l a t t e r processes by scheduling their activity through the rtos and passing arguments through common. this structure enables the guidance software to meet the e f f i ciency  responsivity and f l e x i b i l i t y requirements. 
conclusions 
the system described here has been implemented in software and in hardware. a detailed evaluation of system performance has not been conducted since implementation of transverse error correction capab i l i t i e s is incomplete as of this writing. the path following capability has been successfully demonstrated on numerous occasions  however. longitudinal errors of 1% and  as yet  uncorrected transverse errors of less than 1% of the turn arc length have been achieved  with f i n a l orientation errors of about 1 degree. the somewhat large transverse error is attributed to the steering hardware. completion of the transverse error correction capab i l i t y should reduce the transverse errors by a 
factor of 1 or greater. 
