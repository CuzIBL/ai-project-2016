
in this paper we present an improved version of the probabilistic ant based clustering algorithm for distributed databases  pace . the most important feature of this algorithm is the formation of numerous zones in different sites based on corresponding user queries to the distributed database. keywords  extracted out of the queries  are used to assign a range of values according to their corresponding probability of occurrence or hit ratio at each site. we propose the introduction of weights for individual or groups of data items in each zone according to their relevance to the queries along with the concept of familial pheromone trails as part of an ant odor identification model to bias the movements of different types of ants towards the members of their own family. its performance is compared against pace and other known clustering algorithms for different evaluation measures and an improvement is shown in terms of convergence speed and quality of solution obtained.
1	introduction
swarm systems have recently become a source of inspiration for the design of various clustering algorithms in  lumer and faieta  1; handl et al.  1a; handl et al.  1b; handl et al.  1 . ant based clustering and sorting was first introduced by  bonabeau et al  1  to explain different types of naturally occurring emergent phenomena. it is an instance of the broad category of ant algorithms  dorigo et al  1; dorigo et al.  1 ; that is  algorithms that model 'some behavior' observed in real ants. in the case of ant-based clustering and sorting  two related types of natural ant behavior are modeled. while the traditional ant based algorithms have described clustering data in a single site  we focus on the clustering mechanisms for data in distributed sites  johnson and kargupta  1 . for example  we may have a number of banks belonging to a multinational banking chain  and each bank maintains a database describing its members. then we may cluster the databases to learn new high-level concepts that characterize groups of banks. rather than restricting learning to specific databases  with increasingly more databases becoming available on the internet  we can globalize knowledge discovery and learn general patterns by this approach  forman and zhang 
1 .
모the use of ant based clustering for distributed databases was explored in  chandrasekar et al  1 . an algorithm called probabilistic ant based clustering for distributed databases  pace  was proposed based on user-interaction or queries from the distributed database. the main advantage is that highly probable or most likely keywords from the query can be further analyzed instead of concentrating on the entire set of data available. it utilizes a commonly heard concept of hit ratio  which it calculates for the user query. depending on this  a number of zones are formed throughout the database with priorities assigned to them. the sizes of these zones and their logical placement in the database are discussed in that paper. a colony building algorithm of ants is utilized for formation of the clusters with an extensive odor analysis model which determines the number and type of agents or ants surrounding a data item. the results obtained from pace showed highly efficient retrieval from the final clusters formed. in spite of this there are many shortcomings with pace. the convergence time for the algorithm is not shown to be quick. this is necessary because with increasing sizes of the database  though not shown  the entire process may take a correspondingly large time. many parameters were not functions of the sizes of the data set to improve the convergence time. also no further information could be gathered from the final solution obtained other than which points lay in what clusters according to the user queries. rest of the paper is organized as follows; section 1 describes the main motivations for our work  section 1 gives an overview of pace  section 1 gives the proposed improvements  section 1 some experimental results while section 1 concludes our work.
1	main motivations for our work
our work has been inspired by the rules specified in  johnson and kargupta  1 . the time duration of the algorithm should be less than or equal to that of clustering from a single site considering all the data to be present in a single site . to wait for each and every zone to complete its intra-zone clustering and then to perform inter-zone clustering would entail a substantial increase in time. to reduce this considerably  we propose the parallelization of the clustering algorithm so that inter-zone clustering can take place as and when zones become free after intra-zone clustering. there should also be a metric of dissimilarity between points and clusters obtained in the final solution. by the introduction of weights in our algorithm  the final heaps formed by the ants could be in a weighted order. a reasonably informative metric of dissimilarity could be a range of weights wmin and wmax between any two points which is more suitable for clusters formed depending on the user queries to the distributed database rather than calculating the minimum and maximum possible distances between any two points in the final tree. data gathered from different sites should also not be transmitted to a single site for processing. to circumvent this  building of a global model from a number of local models was suggested in  johnson and kargupta  1 . instead of this  the presence of well-defined zones and with parallelization of clustering reduces the transmission costs involved rather than transmitting data to a single site.
모for our proposed improvements to pace  data items in a zone-even after inter-zone clustering has taken place-are marked in a scale either individually or as a group with a weight  in aco terms-a distinct odor  to denote their relevance to the user queries to the distributed database. if the odor associated with that group is strong then their associated weights are also correspondingly large and hence it makes sense to perform clustering in that region of data items first. this partially satisfies the criterion of a fast convergence time and this along with the idea the notion of parallelization of clustering between the zones provides a better performance than pace as we show in our results. another important improvement is the introduction of familial pheromone trails. a family of ants follows its own distinctive trails unless in some species  for example  a trait of trying to impersonate other species exists. this holds true even for a distinctive odor possessed by each and every species  bonabeau et al  1  which formed the basis of identifying the number and type of agents surrounding a data item in pace. we utilize this concept to enable the formation of clear and defined clusters by allowing each family or species of ants to follow their own familial trails. as we show later  this proves to be effective for different densities of data items. for the re-ordering and agglomeration each time after intra-zone and inter-zone clustering has been performed  it makes sense to re-order them based on those weights so that the quantities wmin and wmax can be calculated easily for effective representation to the user.
1	overview of pace algorithm
모from chandrasekar  it can be seen that the query from the user is disintegrated into atomic keywords each of which can be identified uniquely from the databases at various sites. the number of occurrences of each keyword in the sites is computed using a hit ratio.
dm=m i=n 1
	h  r   = 뫉뫉		 1 
m dm=1 i=1 ki
 the variable k represents the key words and the limit of the summation is 'n' which is equal to the number of keywords. using this hit ratio each of the distributed sites is assigned a probability value 
	p dm   =1  h  rm  	 1 
 the data sites are then ordered in descending order of their probabilities. each data site is then divided into numerous bounded regions called zones. the agents  ants  are distributed across various zones. clustering at each stage is achieved by agglomeration and sorting  which is performed in an iterative manner.
모an ant in real situation identifies other group of ants of their same colony using a distinctive odor possessed by them that is unique to each colony  bonabeau et al  1; dorigo et al  1; dorigo et al.  1 .this behavior of ants is exploited in pace to identify and form a group of ants that carry related data. again the ants in a real situation move freely in search of food sources. whenever they find a food source  they cluster around it from chandrasekar . similar behavior is incorporated in pace. since the ants are free to move within their zones  they tend to move in search of data objects  food . in doing so  ants tend to cluster around various data objects. the cluster of ants around groups of data objects hence forms a family of agents  foa . in this way group of ants clustering around various data objects within different parts of a zone form numerous foa. thus the ants within a foa begin to build their colony using the data that they have collected. this is called as an ant odor identification model  aoim  which is extended in our work.
모once the foa is formed  the ants begin to carry data items specific to their family  colony  according to the picking  pp  and dropping  pd  probabilities  lumer and faieta  1; handl et al.  1b  which depend on the environment surrounding the ants. in pace  heaps formed are sorted so that the data items closer to the keywords in terms of relevance are placed so that they can be easily retrieved. every foa within the zones form their own colony and repeat the procedure. this is called as an ant colony building algorithm  acb . the colonies that are built form the primary clusters. the final step would be to perform agglomeration. pace uses complete-link type of agglomeration. this method assumes that all data items in the cluster are very similar to each other. this is possible because of the sequence of execution from intra-zone to inter-zone agglomeration.
   these clusters are agglomerated through three different stages before the final cluster is formed. first is the intrazone agglomeration  where the primary clusters within the zone are agglomerated and then reordered by sorting. at the end of this stage a single cluster is obtained. next is the inter-zone agglomeration. in this stage the clusters from each zone are agglomerated to form a single cluster for the entire data site. in this way many clusters are obtained each data site. again sorting of the cluster is performed to retain the data items with maximum relevance to the keywords in a way which can be easily retrieved. the final stage involves agglomerating the clusters from the distributed data sites to form a single final cluster. this cluster again is sorted and contains the best results corresponding to the user query.
1	proposed improvements

figure 1: architecture of the improved probabilistic ant based clustering for distributed databases
1	introduction of weights
depending on the hit ratio  individual or groups of data items are marked on a scale denoting their relevance to the query  called as dw or weights. dw denotes the odor associated with an item or a group of items surrounding it. if the odor is strong  then the associated weights are strong and hence it makes sense to perform clustering there first. there is an inherent relationship between the hit ratio and dw denoted by the following equation which holds true for both individual or groups of data items 
m
	dwi = h rm 뫉rj	 1 
j=1
모where r is the radius of a zone and h rm  is the hit ratio for the overall database. we further analyze the memory costs of allocating weights for individual or groups of data items. for individual data items  the memory costs may grow linearly with corresponding increase in data items. as an alternative  groups of data items which either partially or completely satisfies the queries can be marked with an odorin this case a collective weight or a collective odor-to eliminate the need for maintaining separate weights for the data items. this could be the case when the density of data items in a region on the toroidal grid is not too high. traditionally ant based clustering algorithms have employed some kind of a 'look-ahead' memory  handl et al.  1b; handl et al.  1a  which is used to bias the search of the ants towards recently visited regions with a strong neighborhood function. from pace  the neighborhood functions lumer and faieta  1  can be obtained as:
case 1:
1 붟붸 i  j    where 붸  =붸1  1  h rm   1
case 1:
1 붟 i  j    where 붸' =붸1  1  h rm    1
붸'
case1:
1 붟 i  j    1  h  r     1 붸	m
case 1:
1  otherwise
모the power of  is derived experimentally. we modify the neighborhood function of pace and other ant based clustering algorithms as 
	f 	 1 
모we include dw in the neighborhood function as a measure of the weight associated with a particular region. this can be modified to include dw for either individual or groups of data-items depending on the density of the region as 
모모= max 1  1 n 붟 i  j    1  f  i 
i=1
모whenever n is the number of data items. by doing either or all of the above  the requirements of fast convergence are satisfied as the clusters are formed in the decreasing order of the regions with weights. this being so because ants get attracted to a stronger odor more easily than a weak one. so clusters tend to be formed first in those regions with a strong odor and then the remaining thus forming heaps which are more relevant to the user queries; the latter themselves being a standard set of queries. for inter-zone clustering  an average weight is associated with the clusters and the same procedure is repeated as above.
1	familial pheromone trails
a family of ants which follows their own pheromone trails form clearly defined clusters. instead of modifying the ppick and pdrop functions  data items picked according to dw are dropped around regions satisfying both foa and dw in some measure. we build upon the concepts of pace and in addition to defining a foa as a family which is formed around groups of items  we define each foa as to having its unique pheromone trails. as we shall show later  the effect of this is control over the definitions of-or demarcations between-the clusters formed. if more priority is given to dw then ants may pick up and drop items near highly odoriferous regions leading to overlapping or fused clusters. alternatively if more priority is given to an ant's foa then data items may be grouped together which are totally unrelated to each other in certain cases or to the user queries in general. the relationship between foa and dw is as follows 
aoimi
	foa =   	   dw	 1 
  aoimj  
모the main advantage of choosing a proper balance between foa and dw is for choosing clearly defined and compact clusters. by allowing for different groups of ants each part of their own foa  considerable spreading of data in the grid takes place. each group of ants lies separately in the grid without any overlapping of groups. to dampen the effects of outliers  which are points of non-agglomerative behavior  we follow a two- stage strategy.
   in the first stage  during the ant colony building algorithm  ants tend to cluster around their own familiessurrounding groups of data items-hence isolated data items are those not having a strong odor and tend to appear at the bottom of the heaps formed by the ants. by this  an iterative agglomeration and re-ordering renders these data items in a way that they do not appear earlier to the users than more relevant data items. this re-ordering takes place more frequently after a number of clusters which have been merged together reduces the clusters to below a certain threshold  typically 1 of the original number. in the second stage during the final clustering steps when the granularity  jain and dubes  1;jain et al  1  is very high  again the reordering is performed so that the irrelevant data items and their clusters  generally very small  are below the other clusters.
1 relationship of radius of perception with zone radius and dw
the radius of perception is given by  -1 /1  lumer and faieta  1  for the general neighborhood function. for our algorithm it depends on the zone radius and dw as follows 
r
	rp = r 뫉dwm	 1 
m=1
모where rp is the radius of perception and r the zone radius of that zone where the agent is currently placed. increasing the radius of perception provides a better range for the agents to choose from but increases costs. to prevent this  we propose to initially allocate the radius of perception depending on the zone radius  increase it 'locally' for each ant depending on its environment and the values of dw. thus it is kept as a parameter of the dataset as required by  johnson and kargupta  1 . there is no real need to modify the neighborhood and threshold functions  ppick and pdrop . instead of the former  spatial separation between the clusters is maintained throughout by the introduction of weights and the familial pheromone trails. instead of the latter  done to speed up the clustering process  biasing the movements of ants towards their own families and according to the distribution of weights provides a faster convergence time  see section 1 .
1	weighted agglomeration and parallel clustering
as mentioned earlier  the final heaps formed are arranged in a weighted order. for deriving information other than which points lie in what clusters  we use two values wmin and wmax as measures of dissimilarity between any two points in the heap. they are as follows 
w min = min w1 w1  1 w max = max w1 w1  1    wmin is a measure of the minimum difference in weights between any two points. since the values are absolute and defined for every leaf node of the final heap  there is no need of explicitly calculating it every time like in  johnson and kargupta  1  where the minimum and maximum distances between any two points in a dendogram were calculated frequently from the final solution. similarly wmax is a measure of the maximum difference in weights between any points and the same principles as wmin apply to it also. to save on processing time and to speed up the clustering  we have proposed the parallelization of the agglomeration process. intra-zone agglomeration takes place simultaneously in the various sites starting from zones of higher priority as in pace. inter-zone agglomeration takes place as and when any zone finishes its own intra-zone process. thus zones in these sites need not wait until all other zones in the distributed database have finished-thus speeding up the agglomeration process.
1	experimental results
in this section comparative results of the performance of our improved pace algorithm  denoted as i-pace  are reported against established clustering algorithms like the kmeans algorithm  the hierarchical agglomerative algorithm and pace.
1 experimental setup
the evaluation methodology given here was inspired by  handl et al.  1a; handl et al.  1b .the first algorithm we compare against is the well-known k-means algorithm. random initialization is used is used in our experiments  and the best result out of a few runs is selected. if empty clusters arise during the clustering process using the k-means algorithm  bishop  1   these are reinitialized using a randomly selected data item. as a second method  an agglomerative hierarchical clustering algorithm  day and edelsbrunner  1  based on the linkage metric average link  jain et al  1  is used. the data items are distributed in a number of toroidal grids with the assumption that the ants are able to move from one grid to another and that the edges are spherical to enable movements from all sides.
synthetic data
the square1 dataset is the most popularly used type of data set used for evaluation purposes in ant based clustering. it is two-dimensional and consists of four clusters arranged as a square. to conform to distributed datasets  the square1 dataset is spread uniformly among the various sites. they are generated by the normal distributions with corresponding points as  n -1  n -1    n 1  n 1     n 1  n 1   and  n 1  n -1   and are each of size 1.
real data
the real data collections used were the iris data  the wine recognition data and the yeast data with the description of each collection in  blake and merz  1 . each dataset is permuted and randomly distributed in the sites. different evaluation functions proposed in  handl et al.  1a  are adapted for comparing the clustering results obtained from applying the three clustering algorithms on the test sets. the f-measure  rijsbergen  1   dunn index  halkidi et al.  1  and rand index  rijsbergen  1  are the three measures and their respective definitions also mentioned in  handl et al.  1b  and each should be maximized.
1	experimental results
the results of the evaluation functions on both synthetic as well as the real data are shown in table 1. it shows the mean and standard deviation  obtained over 1 runs  for each of the three measures. the above results demonstrate that in spite of clear cluster structures not being present in certain data  i-pace is quite easily able to identify the correct number of clusters. with certain exceptions i-pace performs well for all the three evaluation functions. though k-means shows better performance for the synthetic data  it is clearly outmatched with respect to the real data by ipace. errors in each case for the i-pace algorithm are also considerably smaller than the remaining three as shown here in tables 1  1 and 1 averaged over 1 runs.
table i
results of evaluation functions on k-means 
hierarchical agglomerative average link
clustering  pace and i-pace.the table shows mean and
standard deviations  in brackets  for 1 runs

table ii
parameters and test results showing the clustering
quality with respect to errors on the iris data

table iii
parameters and test results showing the clustering
quality with respect to errors on the wine
recognition data

table iv
parameters and test results showing the clustering quality with respect to errors on the yeast data

1	conclusion
in this paper we have proposed an improved version of the pace algorithm for ant-based clustering in distributed databases. the main features of this algorithm are the introduction of weights and familial pheromone trails as part of an ant odor identification model. the aims are manifold-to reduce the convergence time and thereby improve the runtime of the solution  to improve the quality of clustering by forming compact and clearly defined clusters  to separate out outliers from the final solution  to provide a metric which easily determines the dissimilarity between any two points in the final cluster  to parallelize the algorithm for again reducing the processing time. these aims are reasonably achieved by our algorithm as ably proven by our experimental results. further investigation could be carried out with a large number of data-sets as an extended version of our algorithm.
