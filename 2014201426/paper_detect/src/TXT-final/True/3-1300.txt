 amazons is a perfect information board game with simple rules and large branching factors. two players alternately move chess queen-like pieces and block squares on a 1¡Á1 playing field. the player who makes the last move wins. amazons endgames usually decompose into independent subgames. therefore  the game is a natural testbed for combinatorial game theory. it was known that determining the winner of simple generalized amazons endgames is np-equivalent. this paper presents two proofs for the pspacecompleteness of the generalized version of the full game.
1 introduction
amazons is a two-personperfect informationboard gamethat combines elements of chess and go. both players start with four pieces called amazons which are symmetrically positioned at the edges of an otherwise empty 1 ¡Á 1 square board. moves consist of picking an amazon of the player's colour  moving it like a chess queen  and then shooting an arrow straight in one of eight directions from the amazon's destination square to an empty square. this square becomes blocked for the remainder of the game and no amazon or arrow can pass it. arrows are not allowed to pass amazons either and amazons cannot be captured. blocking squares is mandatory. the game proceeds in turns and the first player without any legal move loses. fig. 1 shows two typical amazons positions.
¡¡the game of amazons is interesting for ai research for at least the following reasons:
  compared with other popular games its rule set is simple - and yet  it leads to interesting strategic concepts which need to be addressed when designing evaluation functions  lieberum  1 .
  the number of legal moves in amazons positions on the standard board is often in the hundreds or even thousands. this puts pressure on sound backward pruning search techniques such as the alpha-beta algorithm  because the number of positions to be searched even at small depths is astronomical. amazons can therefore serve as a testbed for research on selective search and adversarial planning.
  like hex  go-moku  tic-tac-toe  and othello  amazons has the property of being monotonically increasing  each move blocks one square   so the underlying structure of the game is a directed acyclic graph  rather than a general graph. this eliminates some potentially complicating variables for scientific research. also like hex  amazons cannot end in a draw.
  endgames regularly decompose into independent subgames  fig 1 . at this stage  combinatorial game theory can be appliedto vastly reduce the search space  and thus speed up good move selection compared with full-board analyses. hence  amazons is a suitable test-domain for new ideas in this area. see for instance  berlekamp  1; mu¡§ller and tegos  1; snatzke  1 .
establishing the computational complexity of various problems associated with generalized games is also interesting. for example  provingnp- or pspace-hardness is convincing evidence that a problem does not possess a simple solution in general  although effective methods may exist for specific instances .
generalizing the standard amazons game is straight-

figure 1: typical amazons positions. on the left  the black amazon at c1 is about to move to b1 and block e1 to prevent the white amazon at g1 from entering the sw corner area. on the right  black can make 1 unopposed moves  whereas white can make only 1  so black can win regardless of who is to move.
forward: we allow arbitrary square-shaped boards  n ¡Á n  with at least one and up to n1 amazons. it is known that solving generalized amazons puzzles  i.e. determining whether in a single-player amazons game the player can make at least k consecutive moves  is np-complete and determining the winner of simple generalized amazons endgames - in which players do not interact anymore - is np-equivalent  buro  1 . in what follows  we present two proofs for the pspace-hardness of deciding the winner of generalized1amazons positions. while the first proof is more intuitive  the second one leads to a stronger results  namely that the problem remains pspace-complete even if each player has only one amazon.
1 hex reduction
in this section we show that determining the winner in hex positions  which is known to be pspace-complete  can be reduced to the related amazons problem. we begin with the definition of the sets we like to relate to each other:
definition 1:
  amazons is a set of succinct encodings of all generalized amazons positions with a winning strategy for black  to move .
  hex is a set of succinct encodings of all hex positions with a winning strategy for black  to move .
theorem 1: hex ¡Üp amazons.
corollary 1: amazons is pspace-complete.
proof:  reisch  1  shows that hex is pspace-complete by reducing qbf to hex. moreover  amazons¡Ê
pspace  which is obvious by the existence of a depth-first minimax search algorithm that decides the winner of a given amazons position in space polynomial in the length of its encoding. note  that the number of moves in an amazons game played on an n ¡Á n board is at most n1. 1
proof of theorem 1: we describe a function f that maps arbitrary code words w into the encodingof an associated amazons position with the following properties:
1. if w encodes a hex position  then the first player  black  in decode w  has a hex winning strategy if and only if the first player in decode f w    black  has an amazons winning strategy.
1. otherwise  f w  encodes a fixed amazons position with a second player  white  winning strategy. 1. there exists a turing machine f and a polynomial p such that for all w  f started on input w computes f w  in at most p |w|  steps.
it follows that w ¡Ê hex   f w  ¡Ê amazons and hex ¡Üp amazons. we now describe the transformation f. from a given n ¡Á n hex position  each of the n1 hex tiles are represented by a rectangular room containing one black

figure 1: the arrangement of rooms relative to each other and the connecting corridors. there is slack space for arrows in each corridor and at the top and bottom of each room sufficient to allow a large number of amazons to pass through.
and one white amazon  fig. 1 . these amazons are placed across from each other so that each is able to contain the other in one move  and so gain control of the room. occupied tiles on the hex board are represented by removing the opposing piece. in this way the first stage of the transformed game is effectively a game of hex where players alternately select rooms  blocking the opponent's amazons. indeed  if any player does not take control of a room when such a move is available then the opposing player may take a room  for free   which in hex  and similarly here  can only help.
¡¡the rooms are connected by corridors which require a certain minimum number of steps to traverse. this traversal time for each corridor is chosen such that no adjacent rooms may affect either player from securing a room. each of the n1 rooms may be sealed off from enemy rooms by blocking off the appropriate corridors. as there are at most 1 entrances to each room and each can be blocked in one move  minimum corridor traversal times of 1 are sufficient.
¡¡to force the outcome of the amazons game to be equivalent to that of the initial hex game  white must win if and only if he can form a connecting path from top to bottom. this is accomplished by placing an army of n1 + 1 white amazons at the bottom of the board with a path to all of the bottom rooms  fig. 1 . as with adjacent rooms  these amazons are also sufficiently far away that they cannot influence the initial choosing of rooms.
¡¡at the top of the board are 1 + 1 strips of open space. the size of these strips is chosen large enough so that each is larger than the rest of the board when ignoring the other strips. this ensures that the outcome of the game is entirely determinedby which player is able to controla majorityof the strips. strips are positioned such that once a white amazon has captured one  it is unable to capture any others. at the top of each strip is a long path connecting to a single black amazon  fig. 1 . the path is made long enough so that while the amazon may eventually reach the strip  the number of moves required to do so is greater than that needed by white to cap-

figure 1: sample transformation of a 1 ¡Á 1 hex board.

figure 1: white's army at the bottom of the board. the first amazon can block off paths to enemy rooms.

figure 1: 1+1 large strips of space at the top of the board. white has a gatekeeper to prevent enemy rooms from reaching them. black has an amazon at the top of each strip that will eventually be able to take control of it if white cannot.
ture as many strips as he can. this is the time needed to decide the control of each room  secure those rooms  and to move the army from the bottom of the board to each of the strips. a very loose upper bound for this distance is the number of free squares in the lower section of the board  everything beneath the strips. in this manner black is eventually able to take control of any strips that white cannot.
¡¡if the first player  white  has a winning strategy in the initial hex position that player may capture a set of rooms such that a path exists from the bottom of the playfield to the top. by blocking all corridors to hostile rooms he may isolate this path from enemy influence. since there are no draws in hex  a winning strategy for the second player is equivalent to preventing white from forming such a sequence of rooms.
¡¡if white can form a connecting path then the one white amazon at the top and the army  of size n1  at the bottom may be moved one at a time to take control of n1 +1 strips  a majority allowing white to win the game.
¡¡if white cannot form a connecting path then the number of strips he may capture is at most n1: the number of white amazons on the board not counting the army. black will then eventually be able to take control of the remaining strips with the amazon at the top of each. this gives black a majority of free space allowing him to win. the winner of this game is therefore the same as for the original hex position.
¡¡the connecting corridors must allow for the entire army to pass through them. the given structure requires long slack tunnels so that arrows may be fired while moving. these tunnels must be at least as long as the size of the army  n1 +1. not counting the boundary walls  the height of the horizontal corridors then is 1 n1 + 1  + 1  and the diagonal corridors one less. ensuring that the corridors are long enough to prevent room interference is a simple matter of adding additional bends in the path  with each bend increasing the travel time by 1. since each corridor only needs to be 1 moves long constructing this new board is clearly polynomial.
¡¡each room is a rectangle with slack tunnels running through the middle. this tunnel is easily sufficient with almost twice the space of those in the diagonal corridors. moving an amazon througha room is straightforward: move to the center column when entering  then move to the exit row  and finally into the next corridor. to enter and exit on the same row simply move straight across. the initial amazon in the room may be considered as part of the army or moved out of the way to the side.
¡¡rooms and corridors may clearly be arranged without conflict  fig. 1 . the entire transformationtakes polynomialtime in the size of the original hex board. the strategy to move the army to the top of the board when a connecting series of rooms exists is then trivial. it is also clearly impossible to do this when a connecting series of rooms does not exist. 1
1 geography reduction
here we show a stronger result  namely that even if the number of amazons is bounded by a constant  the problem remains pspace-complete. we again start with definitions of the sets we consider:
definition 1:
  amazons-1 is a set of succinct encodings of all n ¡Á n amazons positions with exactly one black and one white amazon and a winning strategy for black  to move .
  geography-bp1 is a set of succinct encodings of geography positions - consisting of a directed bipartite planar graph  whose node types are shown in fig. 1 1  and a distinguished start node  fig. 1  with two leaving edges - for which the first player has a winning strategy.
¡¡¡¡¡¡¡¡¡¡¡¡figure 1: path vertex. figure 1: start vertex.
	figure 1: branch vertex.	figure 1: join vertex.
theorem 1: geography-bp1 ¡Üp amazons-1.
corollary 1:	amazons-1 and amazons are pspacecomplete.
proof:	analog to proof of corollary 1.	note that
amazons-1 ¡Üp amazons.	1
proof of theorem 1: geography is a game played by two players on a given directed graph with a marked start node. the players alternately put a marker on any unmarked node from which there exists an edge from the node marked last. the first player who cannot move loses. note that in case of geography-bp1  the graph is bipartite and planar with node types that are shown above. the game always ends in a vertex with two entering edges and one leaving edge at the second visit of that vertex.  lichtenstein and sisper  1  show that geography-bp1 is pspace-complete.
¡¡we present a polynomial-timetransformationthat maps input words - which are now encodings of planar bipartite graphs with a start marker - into encodings of amazons positions with two amazons  such that the first player wins the geographygame if and only if the first player wins the associated amazons game. we emulate the geography game with two amazons - one for each player - and with blocks that fill the board with the necessary structure. the structure has two separate paths for each edge of the given graph. one path  fig. 1  is for player one and the other path is for player two. the two amazons simultaneously proceed along the paths as quickly as possible  otherwise one player locks up the other player. we construct the structure such that player one winning in generalized geography is equivalent to the amazon of player one being able to trap the amazon of player two. we embed the given directed graph in the board using a pair of paths to represent an edge. to embed the vertices we use two gadgets that force the players to proceed along the paths in pairs and in the same direction as the original directed edges. putting a marker on a vertex in geography-bp1 corresponds to the two amazons going from a vertex gadget to another vertex gadget. since each vertex gadget can be used

figure 1: path example.
only once  vertices cannot be marked twice. we force the two amazons to go along the same paths. if one amazon advances toward a path different from the path chosen by the acting player  the player placing the marker  then the amazon will be locked out by the acting player at some gadget.
¡¡we implement a path  which has a one-square width  as blank squares with surrounding blocked squares  as shown in fig. 1. we assume an amazon is currently at the left entrance a and proceeds to the right exit a. at each player's respective turn  the amazon is moved forward and blocks a square behind it. if the player blocks a square in front of him the amazon becomes trapped. the amazons need to travel at maximum speed  otherwise they will be locked out by the opponent's amazon at some point. in fig. 1  the amazon needs at least 1 moves to travel from the entrance to the exit. the amazon can also get there in 1 moves. we use gadgets that force the amazons to travel in the minimal numbers of moves  in this case 1 . thus  amazons have to traverse any straight line section of a path in one move. if we want to force an amazon to take several moves  we bend the path an appropriate number of times as shown in fig. 1. moreover  it is obvious that we can change the direction a path aims as we like. we now discuss the sub-gadgets shown in fig. 1 to 1.
¡¡type 1 top speed gadget  fig. 1 . assume the amazon for player x  denoted x  comes to the bottom left entrance  a  and the amazon for player y  y   comes to the bottom right entrance  b. this gadget forces y to come to the entrance as quickly as possible. that is  if y comes to the entrance just after x comes to the entrance  we say that they arrive at the entrances at the same time in this situation   then x cannot trap y and x should exit this gadget at a  and y should exit at b. if y comes to this gadget late then x can lock y out in 1 moves by moving to e  c  then d and blocking f. thus y should come to the entrance as quickly as possible. if y comes to entrance b at the same time x enters  y can move to f and block d. thus  y cannot be trapped. in this case both x and y can exit this gadget in five moves; x's exit is a  y 's exit is b. note that if we use two paths to connect this gadget to a symmetrical one  we can force both x and y to move at top speed along those paths.
¡¡type 1 top speed gadget  fig. 1 . if x enters this gadget from a and y enters from b  resp. d and c   the gadget forces x to proceed to exit a and y to proceed to exit b  resp. d and c . otherwise the player being late will be trapped by the other player. this gadget is somewhat complex  so first we will simply refer to its functionality. assume amazon x comes to the entrance a and amazon y comes to the entrance b  resp. d and c . this gadgetforces y to come to the entrance

figure 1: top speed gadget  type 1 .
as quickly as possible. if y 's entrance is b  this is the same as type 1 top speed gadget  and y should come to b at the same time that x enters. if y 's entrance is d  this gadget forces y to come to d at least before x reaches g  or otherwise y will be locked out by x. if y 's entrance is c  then even if y comes to c at the same time that x enters  x can trap y . in addition  if x enters from b  resp. c  and y enters from c  resp. b   y should come to c at the same time that x enters. otherwise
x can lock y out. if x's entrance is a and y 's entrance is b  x is forced to exit at a and y is forced to exit at b. amazons can use the gadget twice  once to enter at a and b and once to enter at d and c. at the first use of the gadget they cannot put blocks to obstruct the next use of the gadget.
¡¡now we detail the amazons'sequence of moves in this gadget. first we will describe the moves when x's entrance is a and y 's entrance is b and they come to the entrance at the same time. x moves to n  y moves to q; x then moves to g and blocks i  y moves to o and blocks h. then they proceed to their respective exits at top speed. if x blocks a position other than i  y can then proceed to other exits. this increases the number of moves available to y   so x should not play this way if he wants to win. thus we can assume that x blocks i. if y blocks a position other than h  x can trap y . thus y should block h to prevent being locked out. if x's entrance is a and y 's entrance is c and they arrive at the entrance at the same time  x moves to n and y moves to r. x then moves to g and blocks l  y moves to p and either blocks f  option 1  or blocks any other position  option 1 . in the case of  1   x moves to k and blocks m. in the case of  1   x moves to j and blocks e. in both cases  y is locked

out by x. we can check the other properties analogously.
¡¡type 1 top speed gadget  fig. 1 . this gadget is almost identical to the previous gadget. the only difference is the direction of the right hand side paths which have been mirrored.
cross gadget  fig. 1 . we can cross a path of player x
and a path of player y with this gadget. assume the entrance for x is a  and the entrance for y is b. if x and y come to the gadget at the same time  x is forced to exit the gadget at a and y is forced to exit this gadget at b. both x and y take five moves in that case. if x comes later  then x will be locked out. if y comes two moves later than x  then y will be trapped. similarly  if a player goes to another exit  or tries to obstruct the opponent player  the opponent player can lock the amazon out. in addition  if x comes to the gadget and y never comes  then if x exits at b  x takes two more moves than if x exits at a. if y comes to the gadget and x never comes  then if y exits at a  y takes two more moves than if y exit at b. we can easily check these properties.
¡¡we now explain the main vertex gadgets corresponding to the four types of vertices in fig. 1  fig. 1  fig. 1 and fig. 1. it is easy to emulate a vertex in fig. 1. we do this with two paths  one for each player  on which player one needs one more move to travel from entrance to exit than player two does  effectively reversing which player is next to act. we illustrate gadgets for branching vertices  fig. 1  and joining vertices  fig. 1  in fig. 1 and 1  respectively. we can use the gadget in fig. 1 for the start vertex  fig. 1   too. we draw paths for amazon x  who is expected to enter this gadget first  as solid lines and paths for amazon y as dotted lines. two amazons always come to the paired entrances at the same time  otherwise an amazon being late will be locked out by the opponent's amazon at the top speed gadget just after the entrance.
¡¡branch gadget  fig. 1 . this gadget corresponds to a vertex with an entering edge and two leaving edges  fig. 1   from which a player selects one of the leaving edges to follow.since we can adjust the number of moves amazons require along paths by bending these paths arbitrarily  we set those from x's entrances to x's exits and those from y 's entrances to y 's exits to be the same length. because of the cross gadget  x requires two more moves if x wants to take y 's exit  therefore doing so will result in x being trapped by y in the type 1 top speed gadget. thus player x cannot select y 's path. y must select the exit in the same direction that x did  otherwise y is locked out at the type 1 top speed gadget. note that if x slows down inside the gadget y can lock x

figure 1: branch gadget.

figure 1: join gadget.
out in the cross gadget or any of the top speed gadgets. in addition  we can use this gadget for the start vertex  fig. 1 . we place black and white amazons at the entrance so that the black amazon would enter the gadget first. the size of this gadget is clearly independent of the input size. join gadget  fig. 1 . this gadget corresponds to a vertex with two entering edges and a leaving edge  fig. 1 . amazons come to this gadget at the left or right entrance. if it is the amazons' first visit to this gadget  the gadget forces the amazons to exit at the top center. if one player changes his way and advances to the entrance not used  the opponent's amazon can trap him in a type 1 top speed gadget in front of the entrance. at the second visit  the amazons cannot exit the gadget  because they can use the left exit of the last top speed gadget only once. thus  after they pass the first top speed gadget  they have to play amazons only in the gadget. in this case  y will win by entering the region denoted by the gray ball  which has larger space than that of the rest of this gadget  and closing the entrance to the ball. y only has to wait till x fills up the rest of the gadgetand becomes locked out by himself. this situation corresponds to that in geographybp1 where it is player x's turn and the adjacent vertices are already marked. the size of this gadget is also independent of the input size.
¡¡using the gadgets described above we can transform any bipartite planar graph - as described in the definition of geography-bp1 - into an amazons position such that the player to move wins the geography game if and only if the first player wins the amazons game. first we embed the given graph into a grid  taking space polynomially bounded by the input graph's size using a linear time orthogonal graph drawing algorithm  e.g.  kant  1  . then we replace each grid point which corresponds to a vertex or an edge with a vertex gadget or a path gadget respectively. each vertex is incident to leaving edges and entering edges at some directions: north  south  west  and east. we can set the entrances and exits of the vertex gadgets equal to the directions of these edges by surrounding them with path gadgets. further  we sometimes have to use the cross gadget to connect exits to the right entrances in the next gadget. vertex gadgets and the path gadgets surrounding them are drawn in a board of constant size. an edge corresponding to a grid point can be also drawn in a constant size  even if it includes a cross gadget. thus  each grid point is drawn in a board of a constant size  and the size of the amazons game board is bounded by a polynomial in the size of the input planar graph. to complete the transformation function definition with respect to the three properties stated in the previous proof  input words that do not encode valid graphs are mapped into a fixed amazons position with two opposing amazons  black to move and white to win. from the above explanations  it is clear that the run-time of the entire transformation is polynomial in the input length.	1
1 conclusion
we have presented two reductionswhich imply that determining the winner of generalized amazons positions is pspacecomplete. the hex reduction is appealing because it directly relates two board game complexities. the geography reduction  however  leads to a stronger result  because the transformation only generates amazons positions with two opposing amazons  whereas in the hex reduction  the number of generated amazons cannot be bounded above by a constant.
¡¡as this paper was being finished we discovered that robert hearn had simultaneously derived similar results  hearn  1 . his reduction shows that generalized amazons with an unbounded number of amazons is pspace-complete.
acknowledgments
we thank darse billings and robert hearn for their valuable feedback on a draft paper. financial support was provided by the natural sciences and engineering research council of canada  nserc .
