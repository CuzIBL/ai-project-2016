 
multi-agent systems result from interactions between individual agents. through these interactions different kinds of relationships are formed  which can impact substantially on the overall system performance. however  the behaviour of agents cannot always be anticipated  especially when dealing with open and complex systems. open agent systems must incorporate relationship management mechanisms to constrain agent actions and allow only desirable interactions. in consequence  in this paper we tackle two important issues. firstly  in addressing management  we identify the range of different control mechanisms that are required and when they should be applied. secondly  in addressing relationships  we present a model for identifying and characterising relationships in a manner that is application-neutral and amenable to automation. 
1 introduction 
agent-based computing is often presented as a viable paradigm for tackling problems where the main challenge is the need to enable dynamic interactions between heterogeneous components  in which each component may have its own thread of control  jennings  1 . agents are understood as independent entities  capable of individual action and working towards their design goals and  as such  represent a 
natural  intuitive approach to these problems. furthermore  agents are also social entities that interact by performing actions that affect their environment and other agents in the environment. such actions can enable coordination  in which agents arrange their individual activities in a coherent manner   collaboration  in which agents work together to achieve a common objective  or competition  in which agents contend for access to common resources   and so on. through these interactions  different kinds of relationships are formed between agents  and they can impact substantially on the overall system functioning. 
　the challenge for the system designer is to ensure that only the right kinds of relationships develop so that the overall system functions within acceptable parameters. it is not enough for a designer to assume that the only interactions 
multiagent systems 
between agents that will take place are those explicitly specified at design-time  especially when dealing with autonomous entities operating in open environments where agents may join or leave the system at any time and no assumptions are made about agent behaviour. as a result  open agent systems must incorporate mechanisms  beyond the design of individual agents  to constrain agent actions and allow only desirable interactions. we refer to these as relationship management mechanisms. 
　to address the problem of relationship management  we must be aware of the different types of management that may be required in a multi-agent system and also be able to identify and characterise relationships in order to understand what type of management is best suited for the situation at hand. it is exactly these concerns that we attempt to tackle in this paper. this paper advances the current understanding of how to deal with the issue of relationship management in two important ways. firstly  in addressing management  we identify the range of different control mechanisms that are required and when they should be applied. secondly  in addressing relationships  we present a model for identifying and characterising relationships in a manner that is application-neutral and amenable to automation. 
　we begin by presenting a motivating scenario that outlines some realistic situations that require relationship management mechanisms. subsequently  we identify situations in which mechanisms for managing relationships can be applied and we define a space of possible management mechanisms types. we then focus on the issue of relationship identification through an analysis of individual agent actions and perceptions. finally  we conclude with a brief look at related work and outline the way in which the contributions of this paper add to such work. 
1 motivating scenario 
let us consider a typical computer science research lab  where communication and cooperation between researchers is facilitated by an application developed as a multi-agent system. each researcher is represented by an agent that makes public to the lab's network  through the researcher's personal computer  their personal profile  interests  publications  availability  as well as research material  downloaded papers  presentations  software  links to online material  that they have stored locally. the application also supports researchers 
1 
　
while working away from their desks through wireless connections on laptops or more limited personal digital assistants. finally  visitors to the lab are provided with similar functionality  through mobile devices  so that they can more easily locate people within the lab. 
　for such an application to be successful we must  at the very least  ensure that agents make available the right kinds of information about the researcher they represent  so as to add to the overall system functioning  and that agents do not abuse the system  causing degradation of the abilities of others  e.g. by making too many queries and using up bandwidth. such overarching system goals can be achieved by the appropriate management of relationships between agents. below we present some situations that call for relationship management. 
1. when retrieving files from a researcher's local hard disk limits on how much can be retrieved  and how many agents can simultaneously retrieve at any given moment should be set. this would ensure that no single machine suffers from too much demand. 
1. a researcher may want to tailor access to locally stored research material based on who is accessing it. for example  those working on common projects might access work in progress  while phd students might not have access to all material of their supervisor. 
1. each agent should follow certain conventions. a researcher should not restrict access to their own material while expecting to have full access to others. 
1. groups of researchers in the lab could benefit from closer relationships due to a common interest in a specific subject or project. this tighter relationship could be reflected by the creation of special interest groups where the sharing of materials between them takes place at a more frequent rate and without explicit requests to receive them. 
1. different devices offer different capabilities. a document may not be retrieved by a a visitor's pda if it is not capable of displaying it  but the pda may request a commitment to send the document to the visitor via e-mail. 
　the examples illustrate the different types of problems and the different needs relating to the management of relationships between agents. even though some may seem to be amenable to traditional file management techniques  e.g. the first two  the range of situations described is more complex and the envisaged application of regulation is more dynamic and fine-grained  and is handled by the agent system and not a human administrator. 
　the examples can be roughly divided into those that may demand the establishment of compulsory  rigid control of relationships and those where control could be more flexible or even optional. the first two examples could fall in the former category and the last three in the latter. furthermore  some define the need for control based on the current situation  example 1   while others view it based on who is interacting with whom  example 1  or past history of interactions  examples 1 and 1 . agents can benefit from the establishment 

figure 1: space of management types 
of long term commitments between a group of agents  such as forming interest groups  example 1  or short term commitments for the fulfilment of a specific goal  such as dealing with access through limited capability devices  example 1 . finally  the needs of the application may call for agents to adopt a specific stance due to their individual characteristics  such as in example 1 and example 1 where we have supervisors and supervisees  and local and visiting researchers respectively. 
1 relationship management types 
these different cases provide a guide for a more comprehensive categorisation of situations that may activate the need for management and the kind of management that can be applied. 
　we identify three different criteria that may activate the need for management. management of relationships can be required when a specific event occurs  e.g. an agent accessing a researcher's profile   when the environment corresponds to a predefined situation  e.g. the number of agents simultaneously accessing a profile exceeds four  or when a specific agent is performing an action  e.g. a student accessing a supervisor's profile . thus we can divide the cases into event-based  situation-based and agent-attribute-based. these cases are not mutually exclusive but can occur at the same time. for example  management may be needed for an agent with specific attributes in a particular situation when a specific event occurs. 
　the kind of management can be defined along three different dimensions: firstly  the number of agents it refers to; secondly  the rigidity of the applied regulation  which indicates to which extent agents can choose not to follow the regulation; and finally  the duration of management  which indicates for how long agents should follow the applied regulation. using these dimensions we can define a management 
space  illustrated in figure 1. by using the notion of a space  rather than rigid categories  we want to emphasise that the understanding of relationship management needs to better reflect the range of situations that may occur. so  for example  management may not need to be simply rigid or optional but also the whole range of flexibility in between. 
　with knowledge of when management may be applied and what form it can take we can more clearly characterise and compare different management methods. for example  re-
　
turning to our scenario  we could control the level of access to material  example 1  via a regulation that agents could choose to obey  which is activated when the agent performs the action of accessing the information  i.e. it is event based  and applies only to that agent accessing information  i.e. it refers to only one agent . alternatively  the same problem could be tackled through a long-term regulation that applies to all agents and cannot be questioned. each method has its own pros and cons and can be characterised through the concepts we provide. 
1 identifying relationships 
however  before one can manage relationships one must be able to identify and characterise them. we begin by briefly outlining some foundational concepts that we will use to formalise the model later on. to do so  we adopt the z specification language  spivey  1 . based on the smart framework  d'inverno and luck  1   we start by defining two primitives  attribute and action. formally  these primitives are specified as given sets which means that we say nothing about how they might be represented for any particular system. in addition  two secondary concepts  goal and environment  are specified in terms of attributes. attributes arc simply features of the world  and are the only characteristics that are manifest. actions can change environments by adding or removing attributes. 
 attribute .action  
　goals  in this context  are desirable environmental states described by non-empty sets of attributes. an environment is a set of attributes that describes all the features within that environment. 
environment == 	attribute goal === 	attribute 
　using these primitive concepts we can describe an agent as shown in the following schema. an agent is described by a set of attributes  can perform certain actions and has a number of goals to achieve. 

　the model for relationship identification builds on just these concepts and can deal with a wide variety of situations. 
1 	influence types 
as discussed above  relationships can take a number of forms ranging from cooperation towards a common goal to competition for possession of  or access to  a common resource. when such relationships occur they may affect the actions agents perform or were intending to perform. in such situations  the ability of one agent to achieve its goals becomes dependent on another agent's actions. it is these dependencies between agents that we are categorising through an analysis 
multiagent systems 
of the agent's respective actions and perceptions of the environment. 
　we begin by defining the state of an agent as those aspects of the environment it can perceive  along with its actual situation in the environment. 

　the state of the entire multi-agent system would then be given by the environment and the states of each individual agent in that environment. 

　now  if we consider that an agent usually takes into account some measure of the current state of the environment and performs actions based on those measures which  in turn  may change the environment  we have an indication of which aspects of an agent we should investigate to understand under which conditions two agents may be related. we must examine the overlaps between the aspects of the environment that one agent can view  through its sensing capabilities  and those aspects it can affect  through its actuator capabilities  in relation to other agents. we call the former the viewable environment and the latter the region of influence. the viewable environment schema formalises the former notion. 

an analogous schema describes the region of influence. 

　in figure 1  we illustrate these concepts. the regions of the environment that agents view and take into account are represented as ellipses while the regions they are able to affect  i.e. the regions of influence  are represented as pentagons. given this information we can infer that agent a and agent 
b could be related  with a able to directly affect the viewable 
1 
　

figure 1: region of influence affects viewable environment 

figure 1: regions of influence overlap 
environment ot b since it partly tails under a s region or influence. in other words  b can be influenced by the actions of a. agent a  on the other hand  can in no way be influenced by 1. crucially  a cannot directly affect the results of an action of b because it has no influence in the region of influence of b. returning to our scenario  such a situation could occur if the overlap between the viewable environments represented the documents stored in a's desktop computer. agent b  with the task of reporting to other agents on all documents of a specific type  e.g. papers on multi-agent systems   could periodically view the documents stored by a  i.e. sample the environment  waiting for a relevant document to appear before informing other agents about its existence. so  whenever a performs an action that adds a relevant document to its public document store  it will eventually influence b's actions  since b must now inform interested parties about this addition. 
　in figure 1  the situation is one where the regions of influence overlap. this means that both agents can have a direct impact on the actions of each other. thus  an action from either agent could affect the environment in such a way that a goal of the other agent is upset. returning to our scenario  this could happen if the two agents were both attempting to retrieve a document from a public document store that sets a 
　limit to the number of documents retrieved. 
　at this point  we should clarify that although in our diagrams the regions of influence have always fallen under the viewable environment of the respective agents this is only for illustrative reasons. in fact  there is no requirement for the viewable environment and the region of influence of an agent to overlap at all. if the region of influence of an agent does not fall under that agent's viewable environment that agent would not be able to view the results of its actions  a situation that is not improbable. even humans often do not fully realise the ramifications of their actions. the more usual case is when only part the region of influence of an agent falls under the viewable environment. in other words  the agent may not be fully aware of all the implications of its actions. 
　now  through the concepts discussed so far we can outline four different ways in which one agent can influence another. 
　weak influence a weak influence relationship occurs when an agent is able to affect aspects of the environment that another agent uses to decide what actions to perform  i.e. aspects of the environment the agent can perceive . although an influence relationship can lead to a different outcome for the influenced agent's goal it cannot directly affect actions of that agent. 
　agent b is weakly influenced by agent a if and only if  i  the intersection of a's region of influence and b's viewable environment is non-empty  and  ii  the intersection of a's region of influence and b's region of influence is empty. 
weaklnfluence 

regio noflnfluenee viewable environment weakinfluenced : agentstate agentstate 
a b : agentstate  
{b a  weakinfluenced regioninfluence region influence a = {} viewable b regioninfluence a {} 
　strong influence a strong influence relationship occurs when an agent is able to affect both the viewable environment of another agent as well as its region of influence. in this case an agent can directly affect the goals of another agent because it can act on exactly those aspects of the environment that may represent desirable environmental states for the other agent. 
　agent b is strongly influenced by agent a if and only if  i  the intersection of a's region of influence and b's viewable environment is non-empty  and  ii  the intersection of a's region of influence and b's region of influence is non-empty. 
stronglnfluence 

regio noflnfluenee viewableenvironment stronginfluenced : agentstate - agentstate 
a b : agentstate  
 b   a  stronginfluenced regioninfluence b regioninfluence a viewable b regioninfluence a 
　sneaky influence a sneaky influence relationship occurs when an agent is able to affect the region of influence of another agent but not the viewable environment. this  of course  implies that the influenced agent cannot view the results of its actions  so cannot be aware that some other agent is affecting those results. 
　
　agent b is sneakily influenced by agent a if and only if  i  the intersection of a's region of influence and b's viewable environment is empty  and  ii  the intersection of a's region of influence and b's region of influence is non-empty. 

　no influence finally  when an agent cannot affect the viewable environment or the region of influence of another agent  no direct relationship can develop between them. 
　agent b is not influenced by agent a if and only if  i  the intersection of a's region of influence and b's viewable environment is empty  and  ii  the intersection of a's region of influence and b's region of influence is empty. 
nojnfluence 
regionoflnfluence viewableenvironment notinfiuenced : agentstate agentstau a  b : agentstate 
 b a  notinfiuenced regioninfluence b regioninfluence a = viewable b regioninfluence a = {} 
　these four types of influence can now act as a guide to characterise a range of specific kinds of relationships. for example  a competitive relationship for access to common resources can only take place if both agents can strongly influence each other  i.e. their regions of influence and viewable environments overlap. a supervisor-student relationship is one where the supervisor can strongly influence the student  e.g. by providing direct guidance on what research the student should do  and the student can weakly influence the supervisor  e.g. by coming up with new results that may convince the supervisor to change research direction . 
1 	effect of influence on actions and goals 
in order to have a clearer understanding on exactly how one agent could affect the goals or actions of another we provide an analysis of the different cases. this is based on two assumptions: firstly  that agents perform actions because they want to achieve goals; and secondly  that goals agents are trying to achieve fall under their region of influence. as such  it makes sense to define the relationships that evolve through the interactions between agents in terms of the contribution that such interactions have towards the achievement of their goals. however  if an agent's goal cannot be achieved within that agent's region of influence the agent must seek assistance from another agent that has access to the region of the environment within which the goal can be achieved. in this paper we do not look at those situations. 
multiagent systems 
weak influence relationships 
when only weak influence relationships occur  the influencing agent cannot directly impact goals. nevertheless  it can still have a significant effect on the way the influenced agent achieves a goal  or whether the goal can be achieved at all. in essence  an agent could either be influenced so as to change its actions in order to achieve a goal or to change the goal completely. below  we outline the different scenarios. 
　goal does not change in the first type of case  the goal of the agent does not change as a result of the influencing agent. however  the actions performed to achieve the goal might change  as might the exact results of the actions  because of the goal. 
no effect the influencing agent has no impact on the outcome of the goal because the attributes of the environment that are affected by the influencing agent arc not taken into account lor the execution of an action by the influenced agent. 
outcome of action changes here the influencing agent affects the environment in such a way that the outcome of the action performed by the influenced agent changes. however  the goal of the influenced agent does not change. for example  consider an agent with the goal of compiling a list of all researchers with an interest in the subject of argumentation. the goal is satisfied as long as such a list exists. the agent compiles the list by asking other agents to declare their interest or not in the subject. the queried agents influence the outcome of the action by providing an answer. in any case  the goal is eventually achieved. however  the exact values described in the list have been influenced by others. 
action changes agents may influence another agent to such an extent that the agent needs to change its planned actions in order to achieve the goal. for example  if some agents refuse to declare whether they are interested in argumentation  the agent may need to follow an alternative route  such as looking at their list of publications for evidence of an interest in the subject. 
　goal changes the second type of scenario is when the influencing agent may change the environment in such a way that the influenced agent has to change its goal entirely. for example  let us assume that agent a has two goals. the first goal  of primary importance  is to discover any paper on negotiation  and the second goal  of secondary importance  is to discover papers relating to middleware. if a was pursuing the secondary goal and discovers that new papers relating to the primary goal have been posted by b  a must then change goals to reflect the change in the environment. as such  b has sufficiently influenced a  through actions that impacted on just the agent's viewable environment  so that a changed its goal. 
strong and sneaky influence 
strong and sneaky influence relationships can impact on a goal in a more immediate way since agents could change exactly those attributes that represent a goal state for another agent. we identify three main cases below. 
1 
　no change in the first case  the actions of agent a do not affect the goal of agent b. this means that although a is able to act in the region of influence of b  it does not perform actions that upset goal states for b. 
　goal upset an agent can perform an action that changes the environment in such a way that a goal state of another agent is upset. for example  one agent may wish to access a 
　document but cannot because another agent is already accessing it or has placed restrictions on its access. 
　goal aided alternatively  an agent can perform an action that helps towards creating the goal state of another agent. such actions may have been intentional or may occur unintentionally. for example  if an agent has the goal of discovering a paper on auctions and another posts that paper  it inadvertentently aids the second one in achieving its goal. 
1 conclusions 
the issue of agent relationship management has been tackled in a variety of settings through existing research. in the distributed systems area there has been work on policy specifications. policies are understood ils  one aspect of in-
formation which influences the behaviour of objects within the system   sloman  1  and deal with the definition of rules that identify what actions can or cannot be performed with respect to a target. although there is a wide body of work on policy specification  e.g.  barker  1; damianou et al  1    only recently has such work been applied to multi-agent systems  dulay et al  1 . closer to the field of multi-agent systems is research into the issues of interaction between agents with a view of such interdependencies as social structures  castelfranchi  1   which has led to the adoption of the notion of norms. a norm is  similar to a policy  considered as a means of regulating behaviour between agents. various ways of representing norms have developed  such as obligations  authorisations and conventions  dignum  1   commitments  jennings  1  and mental attitudes  conte and castelfranchi  1   as well as methods for reasoning about norms  e.g.  conte et al  1; y lopez et al  1  . 
　however  existing research has not addressed the need for identifying the whole range of relationship management structures that can be developed  usually looking at just the case of optional or compulsory rules  and has not provided appropriate models for identifying exactly what kinds of relationships develop in a manner that can be widely applied and incorporated into practical application settings. 
　in this paper we provide the groundwork for addressing these issues  which are central to the effective design of multiagent systems. firstly  through our description of the space of management mechanisms we have a single basis by which to access and compare the various frameworks developed so far. secondly  through the conceptual model for the identification of relationships we have a means to rationalise the process of when and how relationships should be managed and include it within a design methodology for multi-agent systems. further work will move in two directions. on the one hand  we will move towards a relationship management framework  based on regulations  that covers the range of management types presented here and place it within a wider solution for multi-agent systems infrastructure  ashri et al  1 . on the other hand  we will proceed with the characterisation of agent relationships  looking at issues such as how regions of influence are affected when one agent makes a commitment to perform an action for another agent and where groups of agents are involved. 
