 problem representation that omits unimportant details  and look for ways to solve the abstract problem. from the viewpoint of the manufacturing engineer  these ''unimportant details1' often are very important parts of the problem to be solved-and this can lead manufacturing engineers to view ai planning techniques as impractical. 
  manufacturing planning researchers typically want to solve a particular manufacturing problem  and present their research results within the context of this problem  without discussing how the approach might generalize to other planning domains. for ai researchers  this makes it difficult to see what the underlying conceptual problems are  or whether the approach embodies a general idea that can be applied to other problems. this can lead ai planning researchers to view manufacturing planning as a domain full of ad-hoc  domain-specific programs rather than general principles and approaches. 
   some of the issues arising in manufacturing planning are similar to issues investigated in ai planning  and others are distinctly different. some of the former may amenable to the use of existing ai planning techniques- and some of the latter may lead to new principles useful in ai planning. however  to investigate such issues  ai researchers will need a better understanding of manufacturing problems and concerns  so as to get better ideas of what the interesting generalizations are  and which techniques from ai might  best be applied to realistic manufacturing problems. 
　in this paper we attempt to provide a step in this direction  by describing the planning techniques used in imacs  a computer system for helping designers produce designs that are easier to manufacture  s. gupta et ai  1b; s. gupta and nau  1 . imacs analyzes the manufacturability of proposed designs for machined parts by generating and evaluating operation plans for 

often done in ai planners  but instead as a c a d model  which i m a c s represents using a c i s   a solid modeling system from spatial technologies inc. . 
   an operation plan is a sequence of machining operations capable of creating the part p from the stock s. since it would be physically impossible to produce p's exact geometry  designers give design tolerance specifica-
tions  e.g.  sec figure 1  to specify how much variation from the nominal geometry is allowable in any physical realization of p. a plan is considered capable of achieving the goal if it can create an approximation of p that 

1 	m a c h i n e d parts 
a machined part  p  is the final component created by executing a set of machining operations on a piece of stock  s. for example  figure 1 shows a socket p1  and the stock so from which p1 is to be produced. note that the goal to be achieved  i.e.  the part to be produced  is represented not as a set of predicates as is 
satisfies the design tolerances. 
   a workpiece is the intermediate object produced by starting with s and performing zero or more machining operations. currently  the machining operations considered in i m a c s include end m i l l i n g   side milling  face milling and drilling operations  on a three-axis vertical machining center. each machining operation creates a machining feature. different researchers use different 
	nau  gupta  and regli 	1 

1 	feature e x t r a c t i o n 
although much past work on integrating design with manufacturing planning has involved feature-based design techniques in which users specified designs directly as sets of form features  most researchers have become convinced that a single set of features cannot satisfy the requirements of both design and process planning- instead  some form of feature extraction is needed. for imacs  we have developed algorithms to extract machining features directly from the cad model  regli tt al.y 1; s. gupta et a/.  1a . 
there can be many-sometimes infinitely many-
different machining features capable of creating various portions of a given part. of these  we define a primary feature to be a feature that contains as much of the stock as possible without intersecting with the part  and as little space as possible outside the stock. figure 1 shows examples of primary and non-primary features; for a detailed definition see  s. gupta and nau  1 . 
　as described in  s. gupta et al.  1; regli et al  1   in every operation plan that imacs will ever want to consider  each machining operation will create either a primary feature or a truncation of a primary feature- and the number of primary features for a part is always finite  in fact  polynomial . thus  imacs's first step is to find the set f of all primary features for p and s. for example  for the socket p1 the set t contains 1 primary features  a few of which are shown in figure 1. 
　in ai terms  machining operations are elementary actions and machining features are tasks. jf is the set of all tasks that might ever be relevant for achieving the goal. unlike most ai planners  imacs finds this set in advance before it begins to generate plans-but as we discuss later  this technique may be useful in a number of ai planning problems. 
1 	g e n e r a t i n g incomplete plans 
figure 1 shows that the features in f may overlap in complicated ways  and not all of them are needed to create the part  for example  we do not need to machine both s  and s1 . a feature-based model  fbm  is any irredundant subset of features f c t such that subtracting those features from s produces p. for example  figure 1 shows an fbm  fbm1  for the socket p1. 
　in ai planning terminology  an fbm is an incomplete plan: if we can machine the features in it  this will create the part. since each fbm is a subset of f'  fbm's can be generated using set-covering techniques  but there can be exponentially many fbm's. as an example  for the socket po. f contains 1 primary features from which one can form 1 fbm's. in general  we usually will not want to generate all of these fbm's  for only a few of them will lead to good operation plans. thus imacs does a depth-first branch-and-bound search to generate and test fbm's one at a time  pruning unpromising 
1 	punning 

fbm's as described in section 1. for example  imacs generates only 1 of the 1 fbm's for the socket pq. 
　in many of the early generative process planning systems  e.g.   chang and wysk  1; nau and chang  1; nau  1    the input was a symbolic representation of p as a set of machining features analogous to a single fbm  with no way to recognize or handle many of the geometric interactions among the features. this prevented such systems from generating realistic process plans for complex parts  in which geometric interactions can make it quite difficult to decide what sets of features and machining operations to use  which operations to do when and in which setups  and how to hold the workpiece during each setup. 
　in one way or another  most recent work on generative process planning  both by manufacturing researchers and ai researchers  has tried to address these difficulties  e.g.   kambhampati et at.  1; vandenbrande and requicha  1; opas and mantyla  1; s. gupta et a/.  1b; das et a/.  1; hayes  1; 
britanik and marefat  1  . however  there are also some recent ai efforts at process planning that unfortunately do not seem to address such difficulties at all. we suspect one reason for this is that the researchers involved in these efforts lack sufficient familiarity with the problem domain-and section 1 describes a way whereby we hope to alleviate this problem. 
1 	resolving goal interactions 
an fbm is basically a totally unordered plan. to resolve goal interactions  imacs adds ordering constraints as follows: 
  identify ordering constraints. due to complex geometric interactions  accessibility etc.   some features must precede others. for example  in figure 1  the hole h  must be machined before the slot s1 in order to achieve reasonable machining tolerances and avoid tool breakage. 
  linearize. next imacs generates all total orderings consistent with the precedences. if no such total ordering can be found  imacs considers the fbm f to be unmachinable and discards it. unlike the typical approaches used in ai planners  there would be no point in adding additional operators: they would just create redundant features  and if there is a feasible way to machine the part it will be found among the other fbm's. 
	nau  gupta  and regl1 	1 

  modify goals. suppose features / and g overlap  and / precedes g in some total ordering. then when we machine /  we are also machining part of g. we don't want to machine that same portion of g again later in the sequence  because we would merely be machining air. thus  imacs truncates g to remove the portion covered by /. as an example  several of the features shown in figure 1 a  were produced by truncating the corresponding features in fbm1. 
  unlintarize. once the truncated features have been produced  several of the resulting fbm's may have identical features but different precedence constraints. in such cases the precedence constraints that differ can be removed  translating the total orders into partial orders. for example  figure 1 b  shows the partial order for the fbm of figure 1 a . 
1 	a d d i t i o n a l steps 
to obtain an operation plan from the partially-ordered f b m   imacs uses the following steps: 
  incorporate finishing operations. for faces with tight surface finishes or tolerances  imacs adds finishing operations  with precedence constraints to make them come after the corresponding roughing operations. currently  one finishing operation per face is allowed. 
  determine setups. on a three-axis vertical machining center  features cannot be machined in the same setup unless they have the same approach direction. this and the partial ordering constraints can be used to determine which features can be machined in the same setup  as shown in figure 1 b . although the specific computations are different  the problem is a special case of what is known to ai researchers as the plan-merging problem  yang ei a/.  1; foulser et a/.  1; britanik and marefat  1 . 
  determine process details. to select cutting parameters such as those shown in figure 1 c   imacs uses the recommendations of the machinability data center's handbook  machinability data center  1 . the maximum recommended cutting parameters are used  rather than attempting to select optimal cutting parameters; thus imacs's estimates involve considerable approximation. 
as shown in figure 1  these steps correspond to a task decomposition somewhat analogous to that used in htn planning  sacerdoti  1; tate  1; wilkins  1; 
1; yang  1; kambhampati and hendler  1; erol et a/.  1a; 1 . 
   since each f b m can lead to several different operation plans  imacs does the above steps inside a depthfirst branch-and-bound search  evaluating the plans as 
1 	planning 
described in section 1 in order to find the optimal operation plan. for example  figure 1 shows the operation plan imacs finds for the socket p1. 
1 	operation plan evaluation 
once imacs has found an operation plan  it evaluates whether the plan can achieve the design tolerances. to verify whether a given operation plan will satisfy the design tolerances  imacs must estimate what tolerances the operations can achieve. typical approaches for computer-aided tolerance charting are computationally very intensive  and only consider limited types of tolerances  ji  1; mittal et a/.  1 . thus  imacs simply evaluates the manufacturability aspects of a wide variety of tolerances without getting into optimization aspects  as described in  s. gupta and nau  1 . as an example  the operation plan shown in figure 1 satisfies the tolerances shown in figure 1  and thus is an acceptable way to make p1 from so-
　if the plan can achieve the design tolerances  then imacs estimates the plan's manufacturing time. the total time of a machining operation consists of the cutting time  when the tool is actually engaged in machining   plus the non-cutting time  tool-change time  setup time  etc. . methods have been developed for estimating the fixed and variable costs of machining operations; our formulas for estimating these costs are based on standard handbooks related to machining economics  such as  winchell  1; wilson and harvey  1 . as an example  table 1 shows the estimated production time for the operation plan of figure 1. 
1 	efficiency considerations 
as described in  s. gupta et al  1b; s. gupta and 
nau  1   imacs uses a depth-first branch-and-bound search to generate and evaluate fbm's and plans one at a time. by evaluating them as they are being generated and keeping track of the best one it has seen so far  imacs can discard fbm's and plans that look unpromising  even before they have been fully generated. for example  from the 1 primary features shown in figure 1 one can form 1 fbm's for the socket p1  but imacs generates only 1 of these fbm's. below are some of imacs's pruning criteria  which can be thought of as similar to critics in htn planning: 
  imacs will discard an fbm if it contains features whose dimensions and tolerances appear unreasonable. examples would include a hole-drilling operation having too large a length-to-diameter ratio; 

of outer diameter to inner diameter; two concentric hole-drilling operations with tight concentricity tolerance and opposite approach directions. 
  imacs will discard an f b m if it appears that there will be problems with work-holding during some of the machining operations. currently  imacs's work-holding analysis is based on the assumption that a flat-jaw vise is the only available fixturing device  das et a/.  1; 1   but we are currently developing some more sophisticated fixturability analysis techniques that allow the use of both vise clamping and toe clamping. 
  imacs will compute a quick lower bound on the machining time required for an fbm or plan  and will discard the f b m or plan if this lower bound is above the time required by the best plan seen so far. 
1 	discussion 
since we did not care whether or not we were doing ai planning in imacs  there are several differences between the techniques used in imacs and those used in classical ai planning systems. some of these techniques may be useful for ai planning. for example  imacs's technique of finding all primary features before beginning to generate plans can be generalized as follows; 
  enumerate the set of all tasks that might ever be relevant. call this set f. 
  loop: 
  generate an incomplete plan f as a subset of f 
  if the plan f has a goal interaction that can't be resolved via precedence constraints  discard it.  if a promising plan exists  it will be generated in another loop iteration.  
  flesh out the plan  using task decomposition  crit-ics  plan merging  etc.  
this technique should be useful whenever it is feasible to enumerate in advance the set f of all relevant tasks. more specifically  suppose that we can construct f in polynomial time  and that each task in f will need to be achieved at most once. then every plan we will care to consider is a subset f c f  and we can generate these plans nondeterministically in polynomial time. if each goal interaction involves at most a constant number of tasks  then we can determine in polynomial time whether whether there are ordering constraints sufficient to make f a successful plan. 
   this idea helps to explain a puzzling theoretical problem. in the worst case  planning with stripsstyle operators is pspace-complete  erol et al.  1; 1b   but the best known example of strips-style planning is blocks-world planning  which is only npcomplete  n. gupta and nau  1; 1 . this discrepancy can be explained by noting that in a blocks-world problem containing n blocks there are only at most 1n possible relevant tasks: for each block b  we might want to move b to the table  and if the goal state contains on 1  c  for some c  then we will want to move b to c. 
imacs shows that it is possible to address manufacturing planning both realistically and in a principled manner. our work on imacs has been well accepted by manufacturing researchers  and we have many ideas for further work on imacs and on other issues relevant to manufacturing. 
   furthermore  some of us  together with jim hendler at the university of maryland 1 are beginning the development of a test bed in which to compare ai and manufacturing techniques. we intend to develop a collection of manufacturing planning problems and solutions  e.g.  designs  plans  and planning systems   presented in a way that is accessible to ai planning researchers for use as a test set or benchmark set. we hope that this will help ai researchers discover ways to apply ai techniques to manufacturing planning in a realistic manner  and possibly to discover issues arising in manufacturing that may be useful for ai planning in general. 
