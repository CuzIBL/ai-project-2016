 
in the last years  the investigation on description logics  dls  has been driven by the goal of applying them in several areas  such as  software engineering  information systems  databases  information integration  and intelligent access to the web. the modeling requirements arising in the above areas have stimulated the need for very rich languages  including fixpoint constructs to represent recursive structures. we study a dl comprising the most general form of fixpoint constructs on concepts  all classical concept forming constructs  plus inverse roles  n-ary relations  qualified number restrictions  and inclusion assertions. we establish the exptime decidability of such logic by presenting a decision procedure based on a reduction to nonemptiness of alternating automata on infinite trees. we observe that this is the first decidability result for a logic combining inverse roles  number 
restrictions  and general fixpoints. 
1 	introduction 
description logics  dls  allow one to represent a domain of interest in terms of concepts and roles  where concepts model classes of individuals  and roles model relationships between classes  woods and schmolze  1; donini et al.  1; borgida and patel-schneider  1j. a knowledge base expressed in a dl is constituted by inclusion assertions that state the properties of concepts and roles. various reasoning tasks can be carried out on a k*  wledge base. the most fundamental one consists in checking whether a certain assertion is logically implied by a knowledge base. a dl is characterized by three aspects: the language used to form complex concepts and roles  the kind of assertions that are used to express properties of concepts and roles  and the inference mechanisms provided for reasoning on the knowledge bases expressible in the system. 
　in the last years  the investigation on dls has been driven by the goal of applying them in several areas  such as planning  weida and litman  1  action representation  artale and franconi  1   software engineering  devanbu and jones  1   information systems  catarci and lenzerini  
1   databases  borgida  1; bergamaschi and sartori  
1; sheth et al  1  information integration  calvanese 
automated reasoning 
et al  1c|  and intelligent access to the web  levy et al  1; blanco et al  1. the modeling requirements arising in the above areas have stimulated the need for incorporating increasingly expressive representation mechanisms: 
  the goal of capturing the semantics of database mod-els and reasoning about data schemas has stressed the importance of number restrictions  n-ary relations  and cyclic assertions in the knowledge base  calvanese et al.  1 . 
  information integration systems require inclusion asser-tions not only on concepts  but also on relations lullman  1 . 
  semi-structured data  used in applications such as digital libraries  internet information systems  etc.  require the ability to represent data whose structure is not rigid and strictly typed as in conventional database systems. models for semi-structured data represent data as graphs with labeled edges  and adopt flexible typing schemes in order to classify data  buneman  1. a special case of such models is xml  bray et al.  1   which is becoming the standard for exchanging data on the web. in general  correctly modeling such typing schemes calls for the use of fixpoints in the representation formalism icalvanese et. al.  1b . 
  uml  booch et al.  1  is nowadays the standard language for the analysis phase of software and information system development. case tools that perform automated reasoning on uml schemas  for example  to test consistency or redundancy  would be of great interest. fully capturing uml schemas in dls requires inverse roles  n-ary relations  number restrictions  and general fixpoints on concepts for modeling recursive structures  both inductive and coinductive   such as lists  trees  streams  etc.. 
　dls that capture all requirements above except fixpoints arc known  sec e.g. i calvanese et al.  1c  . however  fully capturing fixpoints in dls has been an open problem for a long time. fixpoints incorporated directly in the semantics have been first studied in  nebel  1; baader  1  for simple dls. dls with regular expressions  which can be seen as a form of fixpoints  have been studied in  baader  
1   and exploiting the correspondence with propositional dynamic logics in  schild  1; de giacomo and lenzerini  1 . in  calvanese et al.  1  another form of 

fixpoints  capturing well-foundedness  has been considered. while such logics got increasingly expressive  they all include fixpoint of a limited form only. fixpoints on concepts in their full generality have been investigated in  schild  1; de giacomo and lenzerini  1 developing a correspondence with modal //-calculus  kozen  1 . however these logics lack inverse roles  and number restrictions on them  which are essential to deal with n-ary relations. 
　the work presented in this paper closes the gap between the two lines of research  presenting a logic with general fixpoints on concepts that includes all the constructs mentioned above. specifically  we consider a dl  called  that includes: 
  a very rich language  comprising all classical concept forming constructs  plus inverse roles  -ary relations  and the most general form of number restrictions; 
  the most general form of inclusion assertions  without any limitations on the presence of cycles; 
  the most general form of fixpoint on concepts. 
we characterize reasoning in such a dl as exptimecomplete1  by presenting a decision procedure based on reducing inference to nonemptiness of two-way alternating automata on infinite trees  vardi  1 . we observe that this is the first decidability result for a logic combining inverse roles  number restrictions  and general fixpoints. 
1 	the description logic 
traditionally  description logics  dls  allow one to represent a domain of interest in terms of concepts and roles  which model classes of individuals and binary relationships between classes  respectively. more recently dls comprising relations of arbitrary arity have been introduced  e.g.  cal vanese et a/.  1ci. we present the dl which extends  by least and greatest fixpoint constructs. 
　we make use of the standard first-order notions of scope  bound and free occurrences of variables  closed formulae  etc.  treating and  as quantifiers. 
　concepts and relations  of arity between 1 and  are built according to the following syntax: 

where p and .1 denote atomic relations and atomic concepts respectively  r and c denote arbitrary relations and concepts  i denotes components of relations  i.e.  an integer between 1 and denotes the arity of a relation  i.e.  an integer between 1 and denotes a nonnegative integer   denotes the top concept  denotes the top relation of arity x denotes a concept variable  and the restriction is made that every free occurrence of x in px c is in the scope of an even number of negations counts as one negation . 
　concepts and relations must be well-typed  which means that  i  only relations of the same arity can be combined to 
   'the same computational complexity of reasoning with inclusion assertions in the basic dl acc. 

form expressions of type 	 which inherit the arity 
and  ii  i whenever   denotes a component of a relation of arity 
   we make use of the standard abbreviations  including  where  denotes the 
concept obtained from c by substituting all free occurrences of a  with c. we use to denote either 
　　an interpretation consists of an interpretation domain and an interpretation function   which maps every atomic concept to a subset of and every atomic relation of arity to a subset of . the presence of free variables does not allow us to extend   directly to every concept and relation. for this reason we introduce valuations. a valuation on is a mapping from concept variables to subsets of . given a valuation we denote by the valuation identical to except for 
　　let  be an interpretation and a valuation on . we assign meaning to concepts and relations of the logic by associating to and an extension function   mapping concepts to subsets of and relations of arity to subsets of as shown in figure 1. observe that the semantics assigned to a.cis 
sets 
tion enforced on variables  such an operator is guaranteed to be monotonic wrt . the constructs and  denote respectively the least fixpoint and the greatest fixpoint of the operator  sec  dc giacomo and lenzerini  1  for a discussion on the use of fixpoints in dls . the extension of closed concepts and relations is independent of the valuation  and therefore for closed concepts and relations we do not consider the valuation explicitly. a closed concept or relation l is satisfiable if there exists an interpretation  such that 
a knowledge base is a finite set of assertions of where  and  are either two closed 
concepts of vcr uor two closed relations of the same arity. 1 as an abbreviation for the assertions 
　　　　satisfies an assertion is a model of a knowledge base 
	calvanese  de giacomo  and lenzerini 	1 


figure 1: an uml diagram 
 if it satisfies all assertions in 
is logically implied by a knowledge base every model 
example 1 figure 1 shows an uml diagram which is part of a telecom italia application monitoring departments. departments other than main departments are controlled by other departments  in a purely hierarchical fashion  see the use of the concept tree . moreover  departments can be sold to companies for a certain amount of money. there are further constraints in the application  not shown in the diagram : first  if a main department is sold  then all departments directly or indirectly controlled by it are also sold. second  if a department is sold  then its controlling main department is also sold. 
　we provide the formalization in  of the uml diagram in figure 1. tree /v  l  represents a concept parameterized on n and l  to be used as a template  according to the following inductive definition of tree:  i  an empty tree is a tree;  ii  a node with at most one predecessor  at least one successor  and such that all successors are trees  is a tree;  iii  nothing else is a tree. tree dept  controls  represents the concept obtained by syntactically substituting dept and controls for the parameters n and l in tree iv  l . 

the additional constraints mentioned above are formalized as follows: 
1 
　　　　　studied in  de giacomo and lenzerini  1   by the inverse operator on roles. concepts in are built as follows  r is an atomic or inverse atomic role : 

figure 1: mapping a -  from 'dc'ru. to iiaccql 
can be viewed as a syntactic variant of modal fi-
calculus  kozen  1  extended both with graded modalities  see e.g.   van der hoek and de rijke  1  and with backward modalities   vardi  1 . 
　　we observe that can also be considered as a sublanguage of by restricting relations to be binary and allowing their use only according to the following abbreviations: 
ob-
tained by forcing all atomic and inverse roles to be functional. 
1 	encoding 	into 
next we turn to reasoning in in particular  we present a technique to decide logical implication in in this section we show how to encode into and then into in section 1 we study reasoning in by adopting automata theoretic techniques. 
　since we can define an atomic relation to be equivalent to any complex relation  we assume wlog that all qualified number restrictions are of the form  where p is an atomic relation. we also use the standard abbreviations. 
　　to reduce logical implication in  to logical implication in  we extend the technique in  calvanese el ai  1a.|. we make use of the mapping defined in figure 1  and define the knowledge base by applying a to all assertions in /c and adding: 

by an individual having one functional role fi for each tuple component 
	although atomic roles in 	are functional their inverses 

	are not. next we further transform 	to get a 
automated reasoning 

which corre-
such that if 
'. the tree in full 
　　　the elements of t arc is the root of t  and for every are the successors of the 
such with 
 in which also all inverse roles are 	alternating automata on infinite trees are a generalization 

functional . intuitively  following  de giacomo and lenzerini  1   we represent the role by the role   where  arc new functional roles and is the reflexive-transitive closure of now qualified number restrictions can be encoded as constraints on the chain 
. formally  we make use of the mapping  defined in figure 1. 
we define 
　since the mappings following result. 
theorem 1 logical implication in 	can be polyno-
rnially reduced to logical implication in 
　finally we observe  that since has the connectedmodel property  we can internalize assertions and polynomially reduce logical implication to concept satisfiability. 
and 
in the following we concentrate on concept satisfiability in 

1 	automata techniques for 
we now study concept satisfiability in following the techniques based on two-way alternating automata on infinite trees  twaa  introduced in fvardi  1 . indeed  vardi used twaas to derive a decision procedure for modal 
//-calculus with backward modalities. here we exploit them 
     1 under the usual assumption that numbers in number restrictions are coded in unary. 
of nondeterministic automata on infinite trees  introduced in imuller and schupp  1. they allow for an elegant reduction of decision problems for temporal and program logics  emerson and julia  1; bernholtz et ai  1 . let b+  1  be the set of positive boolean formulas over 1  including also true and false. for a set  i and a formula 
  we say that ./ satisfies iff assigning true to the elements in ./ and false to those in /   ./ makes true. 
let 	a two-way alternating automa-
ton over infinite ary trees is a tuple a = where is the input alphabet  q is a finite set of states  is the transition function  r/ j q 
is the initial state  and f specifies the acceptance condition. 
　　the transition function maps a state q and an input letter to a positive boolean formula over . intuitively  if i   then each pair appearing in  corresponds to a new copy of the automaton going to the 
direction suggested by c and starting in state . for example  if k = 1 and 
 when the automaton is in the state q{ and is reading the node  labeled by the letter a  it proceeds cither by sending off two 
copies  in the states q1 and q1 respectively  to the first successor of or by sending off one copy in the state to the predecessor of and one copy in the state itself  i.e.  xo . 
　a run of a twaa a over a labeled tree  is a labeled tree  in which every node is labeled by an element of t x q. a node in labeled by  describes a copy of 
a that is in the state and reads the node x of t. the labels of adjacent nodes have to satisfy the transition function of a. 

	calvanese  de giacomo  and lenzerini 	1 

inf p  
g1 
1 

it is satisfied in an interpretation which has the structure of an infinite tree of bounded degree. in particular  the degree is bounded by 1    where  is the number of atomic roles appearing in c. the tree model property can be shown following the lines of the proof in  vardi  1 for the modal calculus with backward modalities. next we define a twa a that accepts exactly the trees that are models of a concept. 
　the closure cl c  of a  concept c  which extends the one in  kozen  1  for the modal -calculus  is defined as the smallest set cl c  of closed concepts that satisfies: 

note that the cardinality of cl c  is linear in the length of c. 
　let c be the  concept we want to check for satisfiability  which wlog we assume to be in negation normal form. let a be the set of atomic concepts  and the set of atomic roles appearing in c. we construct from c a twaa ac which checks that c is satisfied at the root of the input tree. for technical reasons it is useful to consider trees where all nodes have the same branching degree 1n. to this end we introduce dummy nodes in the tree. we use the symbols  and  to distinguish nodes that correspond to elements of the model from those that do not. we also represent in the nodes of the tree the information about the labeling of the edges by introducing for each role four 
symbols 	.intuitively  	labels 
if not. similarly labels if not. 
　　since all roles  both direct and inverse  are deterministic  we can assume that for each node  each and each successor appears in a fixed position. in particular  is labeled with and is labeled with . let del and ini be two new symbols  and 
	the automaton 	where 
the acceptance 
condition f is as in | vardi  1  and the transition function 
	is defined as follows. for all 	for all .1 
we have  true if 	false if 
automated reasoning 
　intuitively  the automaton starts in the initial state ini and spawns two copies of itself: one verifies that the tree has the right structure wrt functionality  and one checks c on such structure. 
theorem 1 a  concept c is satisfiable iff the set of trees accepted by ac in not empty. 
　since nonemptiness of twa a can be decided in expt1me  vardi  1  we get the following upper bound. 
corollary 1 concept satisfiability in  can be decided in expt1me. 
　since the reduction in the previous section is polynomial  we get a worst case deterministic exponential time decision procedure for logical implication in . moreover  since logical implication in  is exptime-hard  it is so already for  we get the following tight complexity bound. 
theorem 1 logical implication in  is exptimincomplete. 
1 	conclusions 
by addressing general fixpoints on concepts  in addition to more standard constructs  dls finally meet the modeling requirements of advanced applications. the exptime reasoning procedure for  is the first decidability result for a logic combining inverse roles  number restrictions  and general fixpoints. in particular  since modal -calculus extended both with graded and backward modalities corresponds to   the result here applies to such logic as well. 
　we observe that reasoning in the presence of extensional information  abox  remains an open problem for 
