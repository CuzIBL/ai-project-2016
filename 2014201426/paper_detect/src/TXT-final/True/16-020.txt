 
       this paper presents a new linguistic  computationally implemented model for morphological analysis and synthesis. it is general in the sense that the same language independent algorithm and the same computer program can operate on a wide range of languages  including highly inflected ones such as finnish  russian or sanskrit. the new model is unrestricted in scope and it is capable of handling the whole language system as well as ordinary running text. a f u l l description for finnish has been completed and tested  and the 
entries in the dictionary of modern standard finnish have been converted into a format compatible with i t . 
       the model is based on a lexicon that defines the word roots  inflectional morphemes and certain nonphonological alternation patterns  and on a set of parallel rules that define phonologically oriented phenomena. the rules are implemented as parallel f i n i t e state automata  and the same description can be run both in the producing and in the analyzing direction. 
	i 	introduction 
       there have been few  if any  morphological parsers that would be truly language independent or even applicable to a wide class of languages with nontrivial inflection. the formalism of generative phonology is powerful enough to describe almost any language. nevertheless  it has been very difficult to implement computationally. martin kay and ron kaplan  1  have recently worked on a model where rules of generative phonology are compiled into finite automata  but until now their system has worked only in the producing mode for testing the descriptions. the ultimate size of their total analyzing automaton is s t i l l unknown. 
       the two-level model has been developed in the course of a project on the computer analysis of finnish  sponsored by the academy of finland and directed by professor fred karlsson. the new model is an alternative to the formalism of generative phonology  it has been inspired both by computational aspects and by those trends in linguistics that strive for more concrete and psychologically real phonological models. even in the study of syntax there is a wide interest in simpler parsing mechanisms that would be more feasible as models of human language processing  e.g. gazdar's context free grammars without transformations as well as some attempts going even further to finite state techniques  k. church and e. ejerhed 1 . 
       the two-level model differs from generative phonology in that it proposes parallel rules instead of successive ones. in this way it avoids the existence of intermediate stages in the derivation of single word forms. the name  two-level model  reflects the setup  where only the l e x i c a l and the surface levels ever  exist   there are no intermediate levels even logically. the very problematic rule ordering is also avoided in the two-level model. the two-level model is attractive as a process model  because it is based on finite state automata  which are the simplest machinery possible. they can be realized with many kinds of networks and devices. 
	i i 	t o e 	lexicon 
       the lexicon contains just one entry for each word even though the stem is subject to various alternations in the inflection. this is accomplished by two mechanisms. first  morphophonemes may be used in the lexical representations with corresponding rules that govern their realization on the surface. in finnish  there are several suppletive stem alternation patterns  which have their historical origins  but which are synchronically active only as whole patterns  rather than as a result of any active individual independent rules. as the second mechanism  the lexicon contains one alternation pattern for each such type  and this is referred to in the entries of the corresponding inflectional type. an example of 

1 k. koskenniemi 
such an entry for a root would be: 
 1  hevo nen/s  horse ; 
here the first item is the phonological representation of the stem  and the last item is the information stored for the lexeme  in this case the english translation. the second item indicates what must come after this entry. in this case  it is 
the name of an alternation pattern: 
 1  nen/s 	nen so 
se s1 
here too  the first items nen and se are the phonological representations   the capital e is a morphophoneme  which is realized as null before plural i . the second items  so  s1  refer to subsets of inflectional endings. the root entry together with this pattern defines the various stems hevonen  hevosen  hevosia  etc. such mini-lexicons have previously been used by lauri karttunen  1  in his texfin-system for analyzing finnish word forms. 
	ill 	the rules 
       the essential contribution of the two-level model is the concept of parallel two-level rules that relate the phonological representation defined by the dictionary and the surface form to each other. the rules do not rewrite or process forms  instead  each rule is like an equation that a given surface form and a given lexical representation either satisfy or do not satisfy. rules are easiest to conceptualize if we assume both levels to be present. let us take as an example finnish plural i  which is realized as j if it occurs between vowels. the rule is formulated as: 
	 1  	i  =  v + 	- v 
j 
here the plus sign is a boundary signal between the stem and the inflectional endings. it is used e.g. for indicating plural i:s and similar phenomena. the rule states that i on the lexical level may only correspond to a j on surface if it is preceded by a vowel  on both levels  and the boundary  and followed by a vowel. the rule also says that this is the only possible realization of i in this environment  and furthermore that this is the only environment for this correspondence. in analysis  resp. in production  all rules together act like simultaneous equations. we know the surface  resp. the lexical  representation and find the other as a solution of the equations. inflectional morphology is quite complicated in finnish  and the description contains about 1 rules. 
	iv 	rules as finite state automata 
       two-level rules correspond to and are implemented as finite state automata  where the input units are symbol pairs  one symbol from the lexical level and the other  or zero  from the surface level. the automaton corresponding to rule  1  is: 
	v 	+ 	i 	i 	= = 
	v 	1 	i 	j 	1 	= 
	1: 	1 	1 	1 	1 	1 	1 
	1: 	1 	1 	1 	1 	1 	1 
	1: 	1 	1 	1 	1 	1 	1 
1. 1 	1 	1 	1 	1 	1 
1. 1 	1 	1 	1 	1 	1 
the numbered rows stand for the states 1 colon and nonfinal with a period. the column labels consist of character pairs. zero symbolizes the null  i.e. absence of a character   v stands for any vowel and the equal sign for any character. sets refer to pairs that are not more explicitly mentioned in another column in the same automaton. thus the first column does not cover i:s corresponding to i:s or j:s  and the last column does not cover vowels corresponding to vowels. state 1 is always the initial state  and numbers in the table denote state transitions. a zero transition indicates a forbidden configuration. below is a demonstration of the procession of the automaton in a configuration : 
 1  lexical: t a 1  o + i a surface: t a 1 o 1 j a 
	state: 	1	1	1	1 
the other alternative  taloia  would have failed  because the transition on column 1 in state 1 is zero. 
       the rules  the automata  work together in parallell  a configuration is accepted if all rules  automata  pass. one contradicting rule is enough to ruin the correspondence. the columns with set symbols get their exact meaning only after all rules are given. the model presents a method for synchronizing the rules by collecting all explicit correspondences and aligning the automata to operate coherently. the set of rules  automata  act as a filter in the analysis  when matching entries are sought from the lexicon. in this way nomographic word forms also get all grammatically correct interpretations. 
       the correspondence between the rulelike formalism and the automata is so close that a compiler is planned for translating rules into automata. however  
the automata are f a i r l y easy to write and understand as such  and the r u l e s in the f u l l d e s c r i p t i o n o f f i n n i s h i n f l e c t i o n were w r i t t e n d i r e c t l y as automata. some twenty automata were needed and t h e i r manual compilation and testing took only a few weeks. 
　　　below are a few examples of two-level analyses of finnish word forms. the f i r s t l i n e of each example is the word form to be analyzed  the second is the sequence of l e x i c a l e n t r i e s t h a t have been matched according to the rules  and the t h i r d l i n e gives the information in the entries. 
 1  katolla 
katto$ha 
roof subst ade sg 
  = 'on the roof 1   
in  1  the t in the l e x i c a l form is represented as n u l l on the s u r f a c e   because of a m o r p h o l e x i c a l t r i g g e r $ in the ending. capital a in the ending realizes either as a or as a according to vowel harmony. 
 1  hakatuimmassa 
hakkast*sztus+impas+issa hit verb pcp1 pss sup ine pl   =   those that have been most beaten'  
example  1  is q u i t e complicated as it contains three occurrences of g r a d a t i o n and vowel harmony  and the match consists of f i v e l e x i c a l e n t r i e s : one r o o t   one alternation pattern and three endings. 
	v 	computer implementation 
　　　the two-level program was w r i t t e n in standard pascal programming language  i n i t i a l l y on a burroughs b1  but it runs now on dec-1 as w e l l . it could probably also be run on microcomputers for t e s t purposes with a small lexicon. the program can alternate between producing word forms and analyzing them. production then starts from the morphophonological representations of the l e x i c a l entries and endings  and a v a l i d surface form  according to a l l rules  is generated. 
　　　the 1 entries in the dictionary of modern s t a n d a r d f i n n i s h have been transformed i n t o the format of the twol e v e l description. by adding derivational rules and excluding redundant and obsolete e n t r i e s the whole a c t i v e l e x i c o n  about 1 e n t r i e s   could be s i m u l t a n e o u s l y used by the program. we have tested so far w i t h s e c t i o n s of the l e x i c o n at a t i m e   e.g. e n t r i e s beginning w i t h k or r. the analysis procedes with a r e s t r i c t e d number of steps between each input character. with a l a r g e l e x i c o n it takes about 1 
k. koskenniemi 1 
cpu seconds to analyze a reasonably complicated word form. 
　　　it is worth noting that the two-level algorithm provides a language independent framework for dealing with word i n f l e c t i o n in several a p p l i c a t i o n s . e.g. in i n f o r m a tion r e t r i e v a l it would provide means for improving the accuracy of the queries and for reducing the size of i n v e r t e d f i l e s   if the i n f l e c t e d word forms would be r e -
placed by their base forms. as a byproduct the a l g o r i t h m also c o n t r i b u t e s to the general s o l u t i o n o f s p e l l i n g c o r r e c t i o n   by locating i n v a l i d word forms. 
	vi 	future 
　　　we have plans for demonstrating the v a l i d i t y of the program and the model by c r e a t i n g d e s c r i p t i o n s for languages of other types  e.g. for some s l a v i c l a n guages and perhaps some o r i e n t a l l a n guages. as the next step in our project we s h a l l i n v e s t i g a t e more general syntactic models that could be applied to loose word order languages. in highly inflected l a n guages l i k e finnish  complete morphological analysis is much more important and it covers a s i g n i f i c a n t p o r t i o n of what is t r e a t e d as syntax in less i n f l e c t e d l a n -
guages 	l i k e english. 
acknowledgements 
　　　this work has been sponsored by the academy of finland and the cultural found a t i o n of f i n l a n d . my sincere thanks are due to lauri karttunen and martin kay and 
to my instructor fred karlsson. 
