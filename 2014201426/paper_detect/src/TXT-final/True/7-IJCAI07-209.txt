
in this paper we make a comprehensive study of the complexity of the problem of deciding the existence of equilibria in strategic games with incomplete information  in case of pure strategies. in particular  we show that this is np-complete in general bayesian games in standard normal form  and that it becomes pp-hard  and  in fixed-precision scenarios  pp-complete   when the game is represented succinctly in general normal form. suitable restrictions in case of graphical games that make the problem tractable are also discussed.
1 introduction
game theory has a very general scope  encompassing questions that are basic to all of the social sciences  and offering insights into any economic  political  or social situation that involves multiple players that have different goals and preferences. in its generality  game theory may be defined as the study of mathematical models of conflict and cooperation between intelligent rational decision-makers  cf.  e.g.   myerson  1 . not surprisingly  in artificial intelligence the framework of game theory has been immediately recognized to be very appealing  being the means for an artificial agent to act with rationality and intelligence when interacting with others. additionally  game theory demonstrated its effectiveness in the recent results on algorithms for load balancing and routing in large networks and the internet  where it has been extensively used for distributing the logic of the decision processes among many nodes  cf.  e.g.   feldmann et al.  1  . the most well known form of games studied in the literature is that of strategic games. in this context  the main solution concept is that of equilibrium  called nash equilibrium in games with complete information  nash  1  . equilibria model scenarios in which no player can improve his utility by unilaterally changing his strategy  or equivalently  such that the strategy chosen by any player is the best response to the strategies chosen by the others. any strategy which is not a best response indicates that the corresponding player is not acting rationally  because he could improve his utility by choosing a different one. although the existence of equilibria in strategic games is guaranteed  when the so called randomized strategies are allowed  cf. section 1   this is not true in the important case in which strategies are forced to be pure  gottlob et al.  1 . in case of randomized strategies  the problem of computing an equilibrium was recently shown to be ppad-complete  even for two-player games  chen and deng  1 ; and  further results have been established for strategic games under various restrictions  cf.  e.g.   gilboa and zemel  1; megiddo and papadimitriou  1; papadimitriou  1b; conitzer and sandholm  1; daskalakis and papadimitriou  1  .
　on the other hand  in this paper we consider games with incomplete information  aka bayesian games  that have been specifically introduced in the literature  harsanyi  1  to account for uncertainties in the knowledge that the single players have about the games and their counterparts. indeed  in these games players' payoff depends not only on the actions of the other players but also on their own private type  for which a probability distribution is a priori known.
　the equilibrium concept relevant for this kind of games is that of bayesian equilibrium  in which each player plays a best response to the other players in expectation over their private types. the complexity of deciding the existence of a bayesian equilibrium in case of pure strategies  short:  pbe problem  has been recently investigated by conitzer and sandholm   who proved its np-hardness for symmetric two-players games  in the case where  for each player  the utility function and the probability distribution over other players' types are represented extensively as tables  called standard normal form  snf  in section 1 . moreover  tractable classes of bayesian games have also been singled out in  singh et al.  1   where an efficient algorithm is provided for finding approximate equilibria when the utility function of each player depends only on the actions and realized types of some neighbor players  cf. graphical normal form  gnf    and when the kind of interaction formed by the neighborhood relation is a tree.
　however  a complete picture of the complexity of bayesian games is still missing in the literature  both for pure and randomized strategies. as an example  it is not known what happens if  unlike  conitzer and sandholm  1   the utility functions and the probability distributions are not explicitly represented as tables  cf. general normal form  gennf  ; and it has been left open in  singh et al.  1  if the tractability result holds for larger classes of games in gnf  e.g.  for games whose players interactions have tree-like structure.
the aim of this paper is precisely to shed lights on these aspects  by focusing on the case of pure strategies. our contributions are as follows:
 in section 1 we show that the result of conitzer and sandholm is tight  since  pbe is np-complete  even if only one among the utility function and the probability distribution is represented as a table  for each player in the game.
 we study  pbe on the class of games in gennf  and we show that the need of dealing with incomplete information has a strong impact on the intrinsic complexityof the games. indeed  we show that the problem is pp-hard  which is quite surprisingly given that deciding the existence of a pure nash equilibrium is np-complete  gottlob et al.  1 .
 we continue the analysis of  pbe on games in gennf  under the assumption that the utility functions and the probability distributions range over real numbers with a fixed-precision. in this scenario  we prove that the problem is  in fact  complete for the class pp.
 given that it is not generally known how efficient heuristics can be devised for problems hard for pp  it appears crucial to identify tractable classes of games. in section 1  we face this problem and we show that  pbe is feasible in polynomial time not only on classes of acyclic games  but also on games of bounded hypertree width  gottlob et al.  1  which is one of the broadest known generalizations of hypergraph acyclicity.
1 games of incomplete information
preliminaries. given sets s and r  a s-tuple with components in r is a total function from s to r. a s-tuple is denoted by a bold-face lowercase letter  e.g.  t. set r can be either a set of atomic values or a set of functions. given a s-tuple t and an element s （ s  resp. a set s   s   we denote by t s   resp. t s   the value of the s-component of tuple t  resp. the tuple obtained by taking only t's s-components  with s （ s . by t s  resp. t s  instead  we denote the

 s   {s} -tuple  resp. the  s   s -tuple  obtained by t by removing t's s-component  resp. all t's s-components  with s （ s . furthermore  given a s-tuple t  an element s （ s  and an element r （ r  we denote by ts★r the tuple obtained from t by replacing its s-component with r  i.e.  the
s-tuple t such that  for each  and t s  = r   and byt such that  t s  = t s   s （ s  and t x  = tx.
　finally  for a set s  we denote by Δ s  the set of all probability distributions over elements in s  i.e.  the set of realvalued functions τ : s ★  1  such that .
bayesian games. a strategic game g consists of a set of players n and  for each player i （ n  of a set of possible actions ai and an utility function  that describes the payoff of player i as a function of his own and other players' actions. the behavior of a strategic game is as follows: each player i simultaneously chooses an action in his set ai. the tuple of actions chosen by all players is called the action-profile  and it is denoted by a . as a consequence of this choice  each player i receives a payoff of ui a  .
　these games are also called games with complete information  because players have all perfect information about the game. bayesian games  harsanyi  1  have been introduced to account for situations in which such assumption cannot be made  since there may be information which is uncertain  or unobservable by some players. this uncertainty is modelled by introducing unknown parameters  the types of the different players  into the utility functions.
definition 1  bayesian game  harsanyi  1  . a bayesian game g consists of a set of players n and  for each player i （ n:
  a set of possible actions ai;
  a set of possible types ti;
  a probability function pi : ti ★ Δ 〜j（n {i} tj   assigning a probability distribution over 〜j（n {i} tj to each possible type of player i. we write pi ，|ti  to denote the belief that player i has over the types of the other players when he has type ti （ ti;
  an utility function that describes the payoff of player i as a function of the actions of all players and their types  including i's . 
although probability functions pi ，|ti  can be given separately for each player i  a common assumption is that a prior joint distribution p 〜i（n ti  over all the type profiles  i.e.  n-tuples t  exists  and is commonknowledgeamong all players. under this assumption  the single functions pi ，|ti  can be built by the single players according to the bayes' rule. indeed  as for the reasonability of this assumption  called the consistent beliefs assumption   it can be proven that every bayesian game with finite type set can be transformed into an equivalent game with consistent beliefs. a bayesian game behaves as follows:
1. at the beginning  each player i  gets revealed  his realized type t i （ ti by an external entity  usually called  nature  . under the consistent beliefs assumption  we can think that the realized types for all players are drawn from the joint prior distribution p ， .
each player i knows only his realized type t i  and does not know the realized types of the other players  this realizes the incompleteness of information discussed so far . the n-tupleof realized types of all playersis called the realized type-profile  and it is denoted by t .
1. according to their realized types  each player i simultaneously chooses an action  in his set ai. the tuple of actions chosen by all players is called the action-profile  and it is denoted by a .
1. as a consequence of this choice  and depending on therealized type-profile  each player i receives a payoff of ui a  t  . we observe that  for the players to be able to evaluate their actual payoffs  information about the realized types of the other players must be observable after the games terminates. indeed  since this information is hidden when actions have to be decided  what the players can evaluate is their expected payoff  according to the probability distribution p ，  on types.
　given a bayesian game g and a player i （ n  a randomized strategy for i is a probability function σi : ti ★ Δ ai   i.e.  a total function assigning  to each type in ti  a probability distribution over the set of actions available to player i. we write σi ，|ti  to denote the probability distribution over ai when the type of player i is ti （ ti. hence  σi ai|ti  is the probability with which player i will choose action ai （ ai in case his realized is ti. a randomized strategy profile is a n-tuple σ of randomized strategies  one for each player. in this paper we are interested in pure strategy profiles  i.e.  strategy profiles σ such that  for each player i （ n  the strategy for player i  σ i  = σi ，  assigns  to each type ti （ ti  a single action in ai  and not a probability distribution over the actions . we write σi ti  to denote the action ai （ ai chosen by player i when his type is ti. a pure strategy can be equivalently regarded as a randomized strategy where all probability distributions  one for each type ti （ ti  assign 1 to action σi ti   and 1 to the others.
definition 1. a pure bayesian equilibrium  pbe  is a strategy profile σ  with each σi ，  = σ i  being a pure strategy for player i （ n  such that  for every type ti （ ti: σi ti  （ argmax 
ai（ai
t
where  to ease notation  we denoted by a the n-tuple such that a i.e.  the action expected to be played by player k according to strategy profile σ when he is of type t i k    and a i  = ai. 
　it is well known that  although every bayesian game has a be  it does not necessarily have a pbe.
　it can be observed that games with complete information are a particular case of bayesian games in which all players may assume only one type. all the definitions made for bayesian games  strategies  strategy profiles and equilibria  are generalizations of analogous notions for games with complete information. in particular  equilibria in games with complete information are called  pure  nash equilibria  nash  1 .
representing games. games can be represented in different ways. below we briefly review the most used ones:
standard normal form  snf : in games of this form  cf.  e.g.  osborne and rubinstein  1   sets n and ai ti i （ n are represented explicitly  p t  and ui a t   i （ n are represented by tables of |n|+1 and 1|n| + 1 columns  having
|ai|  tuples  respectively. this form is also known as strategic form  cf.  e.g.   myerson  1  .
graphical normal form  gnf : this form is suitable to represent games in which the utility function of each player depends only on the actions chosen and realized types of a subset of the other players  cf.  e.g.   kearns et al.  1; vickrey and koller  1  . for each player i  let xi be the set of players j such that ui t a  does
not depend on t j  and a j . players in n   xi   {i} are called the neighbors of player i  and denoted by neigh i . the representation is similar to snf  but tables for utility functions ui ，  may have a reduced number of columns. in particular  for each player i  column relative to actions and types of players in set xi can be omitted.
general normal form  gennf : this is the most compact representation for a game  since p t  and ui a t  i （ n can be given by  succinctly encoded  functions that can be computed in polynomial-time in the size of their input  such form is a generalization of that defined in  gottlob et al.  1  for games with complete information . we also assume that a polynomial-time computable function neigh ，  : n ★ 1n that  for each player  returns his neighbors  is part of the representation. we will see that such function is very useful in case the interaction among players is restricted  cf. section 1 . it can be observed that games in snf and gnf are trivially in gennf  as for the former  the function neigh ，  would return the set n   {i} for any player i （ n .
1 intractability results
in this section  we face the complexity of deciding whether a bayesian game has a pbe  the  pbe problem . we start with the class of games in snf.
theorem 1.  pbe for games in snf is np-complete. hardness holds even for symmetric  two-players games  while membership holds even if only one among p ，  and the various ui ，  is given explicitly as a table.
proof.  hardness  hardness follows from  conitzer and sandholm  1  theorem 1   where the np-complete set covering problem is reduced to  pbe of a game in snf with only 1 players. actually  the definition of a bayesian game given there is more restricted than ours  since the utility function of player i does not depend on the realized types of the other players.
　 membership  we prove the membership in np for the more general case of n unbounded and only one of the functions among p ，  and ui ，  represented as a table. in this case  the size of the input is exponential in the number of players |n|. problem  pbe can be solved by guessing a strategy-profile σ in polynomial time  it consists in guessing an action for every pair player/type   and checking whether σ is a pbe. the latter task can be performed in polynomial time in the size of the input  since  for each player and for each type  formula  1  in definition 1 can be evaluated in time polynomial in the size of the table encoding p ，   which  in turn  is smaller than that encoding ui ，  . 
　by using the same line of reasoning as in the proof above  we get a similar result for games in gnf. theorem 1.  pbe for games in gnf is np-complete.
　let us now turn to games in gennf. we next show that  pbe is hard for the class pp  aka majority-p  of languages that can be decided by a nondeterministic turing machine in polynomial time where the acceptance condition is that a majority  more than half  of computation paths accept  cf.  e.g.   papadimitriou  1a  . this class contains np and is contained in pspace.
theorem 1.  pbe for games in gennf with unbounded numberof players is pp-hard. the result holds also for games in which players can assume just two types.
proof. we reduce the canonical pp-complete maj-sat problem  cf.  e.g.   papadimitriou  1a   to  pbe. given a propositional formula   over n variables as input  majsat    is true iff more than half of its possible assignments satisfies it.
　let v be the set of variables of formula  . we build a bayesian game g that has a pbe iff maj-sat    is true. the game has a set of n+1 players n = v “{eval}“{r s}  with the following characteristics:
  players in v  corresponding to the variables of formula    may assume one of two types {true false}  have only one available action nop  and utility functions which evaluate always to 1.
  eval   evaluator   may assume only one type  but has two available actions: count and pass. his utility function ueval ，  is defined as follows:
eval  if a eval =count:   {eval r s}|=   : 1 if t
	u	 a t =otherwise: 1
 :otherwise: 1
  players r and s may assume only one type  and have two available actions a1 and a1. their utility functions ur ，  and us ，  are such that they evaluate to 1 if aeval = count  while  in the other cases  where aeval = pass  they are defined as follows  independently on the types and actions of players in v  :
 ur ar as  us ar as   = 1  if  ar as  =  a1 a1 
 1  if  ar as  =  a1 a1 
   : 1  if  ar as  =  a1 a1 
the idea behind such choice for ur and us is that  if aeval = countboth a1 or a1 are always best-responses for players r and s; on the other hand  if aeval = pass  their utility functions prevent the existence of a pbe.
  p ，  （ Δ 〜i（v “{eval}“{r s} ti  is uniform: since |teval| = |tr| = |ts| = 1 and |tv| = 1 for each v （ v   this means that  for each type-profile t  p t  = 1n.
we now show that maj-sat    is true iff g has a pbe.
　 only if -part. if maj-sat    is true  we observe that any strategy-profileσ such that σ eval  = countis a pbe. in fact  that strategy is an equilibrium for players in v “{r s} since their expected payoff cannot be different from 1. moreover  action count is a best-response for player eval  that achieves an expected payoff of 1n ， #    1  with #    1n 1 being the number of models of formula   and 1 being the payoff that he would obtain by unilaterally changing his action into pass .
　 if -part. as for the other direction  if maj-sat    is false  eval would play pass  which guarantees him higher utility  but in this case  it can be observed that the structure of the utility functions for players r and s prevents them from reaching an equilibrium. 
　the reader may now wonder whether the problem is  in fact  complete for pp. while this might appears at a first sight very natural  the formal proof has to take care of the fact that both p ，  and ui ，   for each i （ n  are real-valued functions. hence  to prove the membership result  we next restrict ourselves to real values with fixed-precision  i.e.  we assume that all the values of interest for the game comes as multiples of a value  for some fixed natural number c.
theorem 1. in the fixed-precision setting   pbe for games in gennf with unboundednumber of players is pp-complete.
proof.  sketch.  assume  wlog  that all such functions range in the domain of reals in  1 . then  we can regard all the functions in the game as ranging in the integer domain
. we can now build a np turing machine mep   ep  stands for  expected payoff   that  given as input i （ n  ti （ ti  ai （ ai  σ i  and a boolean accept  behaves as follows:
guesses a tuple t i and then performs pi t i|ti  ， ui a t  ＋  additional branches  with a and t defined as in for-
mula  1    accepting  resp. rejecting  on all of them if accept is true  resp. false . such machine will have
pi t i|ti  ， ui a t 
t i（ x〜 tj
j（n {i}
computation paths  all accepting or all rejecting  depending on the value for accept. build now a second turing machine
m that  given σ  behaves as follows: for each triple  i ti ai    i （ n ti （ ti ai （ ai   {σ i }  makes two branches  on one invoking mep i ti σ i  σ i true  and on the other mep i ti ai σ i false . such machine will have a number of accepting paths lower than that of rejecting ones if and only if σ is not a pbe. machine m clearly operates in np. 
　finally  we conclude this section by observing that the number of players plays a crucial role in the pp-hardness above.
theorem 1.  pbe for games in gennf is np-complete  if the number of players |n| is bounded by a constant.
proof.  hardness  the hardness follows from theorem 1.
　 membership  problem  pbe can be solved by guessing a strategy-profile σ in polynomial time  it consists in guessing an action for every pair player/type   and checking whether σ is a pbe. in case of |n| bounded by a constant  formula  1  clearly shows that such task can be performed in polynomial time.	
1 tractability results
in order to look for tractable cases of the  pbe problem  we might think of issuing some suitable restrictions on the games. for instance  one may think about restrictions on the maximum number of neighbors of each player  on the maximum number of types of each player  and on the kinds of interaction among players.
　results in section 1 show that  exploiting only one of the restrictions above is not enough: requiring the size of the neighborhood  or the maximum number of types for each player to be bounded by a constant does not lead to tractability  cf.  respectively  theorem 1 and  gottlob et al.  1  for the more restricted case of games with complete information  i.e.  games in which players can assume only one type . on the other hand  it is possible to show that  by combining orthogonal  but weaker restrictions  we can obtain somewhat appealing tractable cases. to this end  we will exploit the concepts of intricacy  hyper-graph and hypertree-width of a game  gottlob et al.  1  below  and we show that the problem  pbe becomes polynomial in case of games g having bounded intricacy  or  equivalently  the small neighborhood property   bounded number of types  and whose associated hypergraph h g  has bounded hypertree-width.
　definitions of intricacy and hyper-graph have been proposed for games with complete information only  but we show that they can be used  without modification  also in the context of bayesian games. formally  given a game g  the intricacy of g  i g   is defined as
		 1 
where ||g|| is the size of the representation of g.
　a game g that has bounded intricacy  i.e.  for which i g  ＋ k for a fixed constant k  also enjoys the so-called small neighborhood property: for each player j （ n  |neigh j | （ o log||g||/log|aj| . it can be observed that while bounded neighborhood implies bounded intricacy  the reverse does in general not hold. hence  bounding intricacy could be a suitable restriction for those games in which bounding the number of neighbors is too severe.
　moreover  given a game g  the hyper-graph h g  =  v e  of g has players as vertices  i.e.  v = n  and set of hyper-edges defined as e = {{j “ neigh j } | j （ n}. for a game g  its associated hypergraphencodes the structural interactions among the players. in many cases  these interaction are not too intricate  and the notion of hypertree-width helps in singling out these scenarios.
definition 1   gottlob et al.  1  . given a hypergraph h =  vh eh   a hypertree decomposition of h is a hypertree  where t =  vt  et  is a tree  and χ and λ are labelling functions that associate to each vertex p （ vt two sets χ p    vh and λ p    eh. moreover 
hd satisfies all the following conditions:
1. for each hyper-edge h （ eh of h  there exists p （ vt
s.t. h   χ p ;
1. for each vertex v （ vh of h  the set {p （ vt | v induces a  connected  subtree of t;
	t	e（λ p  e;
1. for each  where tp is the set of nodes in the subtree rooted at p.
　the width of hd is maxp（vt |λ p |. the hypertree-width hw h  of an hyper-graph h is the minimum width over all its hypertree decompositions. 
　to prove our main tractability result  we will exploit a transformation from a bayesian game into a game with complete information  and show that it preserves important structural properties of the game. the transformation is called the type-agent representation of a bayesian game  as it was originally discussed in  harsanyi  1 . in the type-agent representation there is a player  called  to avoid confusion  typeagent  for every possible pair  i ti   with i （ n and ti （ ti. the set of actions available to each type-agent  i ti  is exactly the set ai of actions available to player i. the idea is that type-agent  i ti  is responsible for selecting the action that player i would use in the original bayesian game if ti is his realized type. hence  an action profile for the new game is a tuple a having a component a  i ti   for each type-agent  i ti . also the utility functions of each type-agent  i ti  are derived from that of player i  being defined as the conditionally expected utility to player i given that ti is his realized type. formally  the utility function for type-agent  i ti   v i ti  a   is as follows: v i ti  a  =
t
where  to ease notation  we denoted by a the n-tuple having a  j t j    as its j-component a j   for all j （ n.
　bes of the original game are in one-to-one correspondence with nash equilibria of the new game with complete information.
theorem 1.  pbe is feasible in polynomial time for the class of games having bounded hypertree-width  bounded intricacy  and bounded number of types  even with unbounded number of players.
proof. we exploit the transformation of the bayesian game g into a game g with complete information described above. we remind the pbes of g are in one-to-one correspondence with pure nash equilibria of has a set type-agents  i ti   with ti （ ti   each one having utility function v i ti  ，  defined as in  1 .
　since  in the bayesian game g  player i has only set neigh i  as neighbors  functions v i ti  ，  and ui ，  do not depend on actions and types of players in set xi = n   neigh i    {i}. hence  a can be regarded as a tuple in
. moreover  by splitting tuple t i into can be rewritten as. hence  v i ti  ，  becomes:
 
	j（neigh i 	j（xi	c
　since  the subexpression in parentheses evaluates to 1  the formula can be rewritten as:

　on the other hand  from formula  1  we obtain  for every player j （ n: i g 〜log||g|| − |neigh j |〜log|aj|.wlog  we can assume that  for each j （ n  |aj| − 1  hence log|aj| − 1. thus  we have |neigh j | ＋ i g  ， log||g||.
　we now show that  for every type-agent  i ti   function v i ti  ，  can be computed in polynomial time in ||g||. this is because  given an action-profile a  computing v i ti  a  accounts to sum out factors  each one evaluable in polynomialtime   and  as we observed above  we have that  for each j （ n  such value is polynomial in ||g|| if the game has bounded intricacy and the number of types available to each player is bounded by a constant t.
　hence  we have shown how g can be transformed in polynomial time into the game g. in order to conclude the proof  it remains to show that deciding whether nash equilibria exist in g can also be made in polynomial time.
　theorem 1 of  gottlob et al.  1  claims that this problem is polynomial for games with complete information which have bounded hypertree-width and bounded intricacy. what we show next is that the reduction above is such that g meets all these conditions.
bounded intricacy: any type-agent i ti  will have at most
neigh i  ， t neighbors in g. hence .
bounded hypertree-width: given the hypergraph h g  as-

sociated to g  with bounded hypertree-width hw g   we can build the hypergraphfor g as follows: the nodes are the typeagents  i ti   and for each type-agent  i ti   an hyper-edge  exists connecting  i ti  to all the variables occurring in v i ti  ，   i.e.  all type-agents  j tj  with j （ neigh i  and tj （ tj. such a hypergraph has hypertree-width bounded by hw g  ， t. to show this  we present a procedure that computes an hyper-tree decompositionfrom an hyper-tree decomposition  of minimal width. the transformation is as follows: ;  1  for every node  with egi being the hyper-edge in h g  defined by {i}“neigh i ;  1 
for every node;
　it can be seen that  satisfies all the conditions to be an hypertree-decomposition of  and has width bounded by hw g  ， t.	
acknowledgments
this work was supported by a royal society wolfson research merit award  allowing g. gottlob to invite g. greco and t. mancini to oxford.
　in addition  g. greco's work was supported by m.i.u.r. under project  tocai.it: tecnologie orientate alla conoscenza per aggregazioni di imprese in internet .
