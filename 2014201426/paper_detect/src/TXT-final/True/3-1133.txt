
methods developedfor the qualitative simulation of dynamical systems have turned out to be powerful tools for studying genetic regulatory networks. a bottleneck in the application of these methods is the analysis of the simulation results. in this paper  we propose a combination of qualitative simulation and model-checking techniques to perform this task systematically and efficiently. we apply our approach to the analysis of the complex network controlling the nutritional stress response in the bacterium escherichia coli.
1 introduction
qualitative simulation aims at making predictions of the behavior of dynamical systems in the absence of detailed  quantitative information on parameter values and functional relations  kuipers  1 . the idea of qualitative simulation has attracted much interest in the context of a biological application  the analysis of genetic regulatory networks  that is  the networks of regulatory interactions between genes  proteins  and small molecules underlying the development and functioning of all living organisms. on the one hand  mathematical methods supported by computer tools are indispensable for the analysis of genetic regulatorynetworks: most networks of interest involvemanygenes connectedthroughcomplex feedback loops  thus making an intuitive understanding of their dynamics difficult to obtain. on the other hand  numerical simulation methods are difficult to apply  because only a few networks are well-understood on the molecular level  and quantitative information on the interactions is seldom available.
¡¡we have previously developed a method for the qualitative simulation of genetic regulatory networks  de jong et al.  1b . this method differs from traditional approaches towards qualitative simulation in that it has been tailored to a class of piecewise-linear  pl  differential equations with favorable mathematical properties  glass and kauffman  1 . this allows it to deal with large and complex networks of regulatory interactions. the qualitative simulation method has been implemented in a publicly-available computer tool  called genetic network analyzer  gna   de jong et al.  1 .
gna has been used to analyze several genetic regulatory networks of biological interest  e.g.   de jong et al.  1a  .
¡¡given a model of a genetic regulatory network  the above qualitative simulation method produces a state transition graph  consisting of qualitative states and transitions between qualitative states. the graph describes the possible qualitative behaviors of the network. when simulating large and complex genetic regulatory networks  the state transition graph usually consists of hundreds or even thousands of states  as a consequence of which the analysis of the graph by visual inspection alone becomes error-prone or even practically infeasible. in order to analyze large state transition graphs  previous work in qualitative simulation has proposed the use of model-checking techniques  brajnik and clancy  1; shults and kuipers  1 . these techniques allow for the efficient verification of properties of discrete transition systems  clarke et al.  1 .
¡¡the aim of this paper  extending preliminary ideas in  batt et al.  1   is to demonstrate the effectiveness and practical applicability of the combined use of qualitative simulation and model checking for the analysis of large state transition graphs produced by the qualitative simulation of genetic regulatory networks. in particular  we show how state transition graphs can be reformulated as so-called kripke structures on which properties of the behavior of the network  expressed in temporal logic  can be verified. in addition  we present a new implementation of gna that connects the qualitative simulator to state-of-the-art model checkers.
¡¡we have applied the above approach to the analysis of the complex regulatory network controlling the nutritional stress response in the bacterium escherichia coli. among other results  the use of model-checkingtools has allowed the characterization of cycles in a large state transition graph obtained through qualitative simulation of the network. the cycles correspondto biologically-importantphenomenathat are currently being experimentally tested in our laboratory.
¡¡in the next section of this paper  we briefly review the qualitative modelingand simulation of genetic regulatorynetworks. this will set the stage fora discussion of the combined use of qualitative simulation and model-checking techniques in the third section. the application of this approach to the analysis of the nutritional stress response network is the subject of the next section. we finish with a discussion of the approach in the context of related work.
1 qualitative modeling and simulation of genetic regulatory networks
the dynamics of genetic regulatory networks can be modeled by a class of piecewise-linear  pl  differential equations of the following general form  glass and kauffman  1 :
¡¡¡¡¡¡¡¡¡¡¡¡x¨b = h x  = f x    g x x   1  where x =  x1 ... xn 1 ¡Ê   is a vector of cellular protein concentrations  f = f1 ... fn 1  g = diag g1 ... gn   and  is a bounded n-dimensional phase space box. the rate of change of each protein concentration xi  i ¡Ê {1..n}  is thus defined as the difference of the rate of synthesis fi x  and the rate of degradation gi x xi of the protein.
¡¡the function fi :   ¡ú r¡Ý1 expresses how the rate of synthesis of the protein encoded by gene i depends on the concentrations x of the proteins in the cell. more specifically  the function fi is defined as a sum of terms having the general form ¦Êli bli x   where ¦Êli   1 is a rate parameter  and bli :   ¡ú {1} a piecewise-continuous regulation function defined in terms of step functions s+ and s :
  and s  xi ¦Èi  = 1 s+ xi ¦Èi  
where xi is an element of the state vector x and ¦Èi a constant denoting a threshold concentration for xi.
¡¡the function gi expressing the regulation of protein degradation is defined analogously  except that we demand that gi is strictly positive. notice that with the above definitions  h is a piecewise-linear  pl  vector-valued function. an example of a simple genetic regulatory network and its pl model is shown in figure 1 a - b .
¡¡the use of step functions s¡À xi ¦Èi  in  1  gives rise to complications  because the step functions are discontinuous at xi = ¦Èi  and therefore h is discontinuous on ¦¨ =
                       li i¡Ê 1..n  li¡Ê 1..pi {x ¡Ê   | xi = ¦Èi }  the union of the threshold hyperplanes. in order to deal with this problem  following an approach widely used in control theory  we extend the differential equation  1   defined on     ¦¨  to the differential inclusion
	x¨b ¡Ê h x  	 1 
defined on    where h x  is the smallest closed hyperrectangular set containing the set of all limit values of h y   for y 1¡Ê ¦¨ and y ¡ú x  gouze¡ä and sari  1; de jong et al.  1b; batt et al.  1 . a solution of the differential inclusion  1  on a time interval i is an absolutely-continuous vector-valued function ¦Î t  such that ¦Î¨b t  ¡Ê h ¦Î t   almost everywhere on i.
¡¡formally  we define the pl system ¦² as the triple    ¦¨ h   that is  the set-valued function h given by  1   defined on the n-dimensional phase space box    with ¦¨ the union of the threshold hyperplanes. also  we denote by ¦®¦² the set of all solutions ¦Î t   on a finite or infinite time interval  of the differential inclusion  1   that reach and leave a threshold hyperplane finitely-many times.
¡¡the mathematical analysis of pl systems has shown that mere knowledge of the relative order of threshold parameters and ratios of synthesis and degradation parameters  describing the local strength of gene expression  is sufficient for the definition of a finite partition d of the phase space   into hyperrectangular regions  called domains. this partition is such that the derivatives of the solutions in each domain have a unique sign pattern  figure 1 b - d  . the definition of the sign pattern s x  for a point x in a domain d is complicated by the fact that the solution of a differential inclusion is in general not unique. in particular  if x lies on a thresholdhyperplane h x  is multi-valued and several solutions ¦Î t  may pass through x with different derivative signs. we therefore define s x  = {sign ¦Î¨b tx   | ¦Î ¡Ê ¦®¦² in d  ¦Î tx  = x  and ¦Î¨b tx  ¡Ê h ¦Î tx  }. we have proven that s x  is the same for every x ¡Ê d  batt et al.  1 .1
¡¡using the domain partition d of the phase space    together with the above qualitative characterization of the dynamics in each of the domains  we can discretize the continuous dynamics. in the resulting abstract description  the state of the system is represented by a domain  and there exists a transition from a domain d to a domain d1  if and only if there exists a solution reaching d1 from d  without leaving d ¡È d1. this leads to the introduction of the so-called qualitative transition system  ¦²-qts =  d ¡ú ¦° |=¦°   where d is the set of all domains  ¡ú  d ¡Á d is a transition relation describing all transitions between the domains  ¦° = {dsign = s | s ¡Ê 1{ 1 1}n} is a set of propositions describing the derivative sign patterns  and |=¦°   d ¡Á ¦° is a satisfaction relation that associates to each domain a qualitative description of the dynamics of the system in the domain  defined by d |=¦° dsign = s iff for all x ¡Ê d: s x  = s.
¡¡the graph representation of the qualitative transition system  g =  d ¡ú   is called a state transition graph. the domains are also called qualitative states. a qualitative state d is called instantaneous  if no solution remains in d longer than a time instant  and persistent  otherwise. moreover  it is a qualitative equilibrium state  if d |=¦° dsign = s  with 1 ¡Ê s  since then for every x ¡Ê d  ¦Î t  = x is a solution. the state transition graph for the example network is shown in figure 1 e . a path in the graph describes a possible qualitative behavior of the system  figure 1 f  .
¡¡in  batt et al.  1   the qualitative transition system is defined as the discrete quotient of a continuous transition system having the same reachability properties as the original pl system ¦²  given the equivalence relation induced by the partition d. using standard results from hybrid systems theory  alur et al.  1   it directly follows that the qualitative transition system ¦²-qts is a conservative approximation of ¦²  in the sense that if a solution ¦Î of the pl system ¦²  defined on some time interval i  passes through the time-ordered sequence of domains  d1 ... dm   then  d1 ... dm  is a path in ¦²-qts. on the other hand  it may happen that no solution of ¦² passes through a sequence of domains corresponding to a path in ¦²-qts.1
¡¡simple rules exploiting the favorable mathematical properties of the class of pl models have been formulated such that the qualitative transition system can be symbolically com-
x¨ba = ¦Êa s  xa ¦Èa1 s  xb ¦Èb    ¦Ãa xa  x¨bb = ¦Êb s  xa ¦Èa1    ¦Ãb xb 
1   ¦Èa1   ¦Èa1   ¦Êa/¦Ãa   maxa  1   ¦Èb   ¦Êb/¦Ãb   maxb.
 b 
1
xb 
maxb
1
1d1
1d1
d1
d1
d1
1d1 d1
11
1d
d1
1d
d1d d
d1 d1
1d d
d1 d1
1¡¡¡¡¡¡d ¦Êb/¦Ãbd
¡¡¡¡d ¦Èb d
1
d1 d d1 d ¦Èa	¦Èa	maxa xa
 c 
d1
figure 1: qualitative simulation of a two-gene network.  a  graphical representation  legend in figure 1 a  . gene b encodes protein b  which inhibits gene a expression  that is  protein a synthesis.  b  model consisting of pl differential equations and parameter inequalities. xa and xb are the protein concentrations  ¦Êa and ¦Êb  ¦Ãa and ¦Ãb  the synthesis  degradation  rates of the proteins  and ¦Èa1  ¦Èa1  and ¦Èb threshold concentrations. the second differential equation states that the synthesis rate of protein b is ¦Êb if xa is below ¦Èa1  and 1 if xa is above¦Èa1  and that its degradationrate is ¦Ãbxb. the parameterinequalities for protein b state that gene b may inhibit gene a expression  because when synthesized  protein b concentration tends towards the level ¦Êb/¦Ãb  for which s  xb ¦Èb  = 1.  c  domain partition of the phase space  : d = {d1 ...d1}.  d  sketch of the flow in   showing the unicity of the derivative sign pattern in each domain. dots denote equilibrium points.  e  graph representation of the qualitative transition system  ¦²-qts. dots denote self-transitions.  f  temporal evolution of the protein concentrations in the path  d1 ... d1 . arrows indicate the derivative signs in persistent states  ¡ü for s = {1}; ¡ý for s = { 1};   for s = {1} . f 
¡¡
puted from a pl model of the network and a set of parameter inequalities defining the relative order of the parameters  batt et al.  1 . the implementation of these rules has resulted in a new version of the computer tool genetic network analyzer  gna   available at http://www-helix.inrialpes.fr/gna.
1 analysis of genetic regulatory networks by model checking
models of genetic regulatory networks of biological interest may produce large state transition graphs  thus making manual analysis of dynamical properties error-prone or even practically infeasible. to address this problem  we propose to combine the qualitative modeling and simulation method outlined above with techniques for model checking  clarke et al.  1 . these techniques allow for the efficient verification of properties of the behavior of discrete transition systems  expressed as formulae in some temporal logic.
¡¡various model-checking frameworks exist  differing by their expressiveness  user-friendliness  and computational efficiency. for the sake of clarity of exposition  we focus on one particular framework in this paper  in which the discrete transition system takes the form of a kripke structure  and the behavioral properties are expressed in computation tree logic  ctl   clarke et al.  1 . however  we emphasize that our approach is not restricted to ctl model-checking  and allows other  more expressive temporal logics to be used as well  section 1 .
1 translate qualitative transition system into kripke structure
as a preliminary step  we introduce a set of atomic propositions  ap  to describe the state of the system. more precisely  the set of atomic propositions we use consists of simple expressions describing a protein concentration  e.g.  value xi = ¦Èi  value xi   ¦Êi/¦Ãi   the sign of its derivative  e.g.  dsign xi = {1}   or the type of a state  type = pers  type = inst  type = eq  for persistent  instantaneous  and equilibrium state  respectively . the set of atomic propositions for the two-gene example is shown in figure 1 a .
¡¡we define the kripke structure over ap corresponding to ¦²-qts as ¦²-ks =  d ¡ú |=ap    where |=ap  d ¡Á 1ap is the satisfaction relation associating to every domain d the atomic propositions that hold in d. the existence of at least one solution ¦Î on some time interval  1 ¦Ó   ¦Ó   1  with initial condition ¦Î 1  = x1  for every x1 ¡Ê    guarantees that ¡ú is total  i.e.  every state has a successor   which is required for kripke structures. the kripke structure for the two-gene example is shown in figure 1 b .
1 express dynamical properties in temporal logic
ctl formulae are interpreted with respect to a kripke structure. a ctl formula is built upon atomic propositions. the usual operators from propositional logic  such as negation      disjunction  ¡Å   conjunction  ¡Ä   and implication  ¡ú   can also be used. in addition  ctl provides two types of op-
 a  ap = { value xa= 1 value xa 1 ... dsign xa={ 1}  dsign xa={1} ... type =inst type =eq }.
 b  ¦²-ks =  d ¡ú |=ap   with
  d = {d1 d1 d1 ... d1 } 
  ¡ú= { d1 d1    d1 d1    d1 d1    d1 d1   ...  d1 d1 } 
  |=ap= { d1 value xa¡Ý 1    d1 value xa  ¦Èa1  ...  d1 dsign xa={1}    d1 dsign xb={1}    d1 type =pers    d1 value xa= ¦Èa1   ...  d1 type =inst  ...  d1 value xa  ¦Èa1  ...  d1 type =pers }.
biological propertyctl formulad1nusmv result and diagnostic  the network reaches a state in which both protein concentrations increase  and from that state onwards  a second state in which protein a concentration increases and that of protein b decreases   the network will inevitably reach an equilibrium state where protein a has vanished
  a high level of protein b guarantees the eventual disappearance of protein aef dsign xa = {1} ¡Ä dsign xb = {1}¡Ä ef dsign xa = {1} ¡Ä dsign xb = { 1}  
af type=eq ¡Ä value xa=1 
ag value xb ¦Èb ¡ú afvalue xa=1 {d1}
{d1}
dtrue:
false:
false:
 witness 

 counterexample 
 counterexample  c 
figure 1: verification of properties of the two-gene network in figure 1.  a  set of atomic propositions ap.  b  kripke structure ¦²-ks over ap corresponding to the qualitative transition system ¦²-qts shown in figure 1 e .  c  biological properties  with their ctl translation  their truth value in ¦²-ks for the set of initial states d1  and a diagnostic  witness or counterexample   ascomputed by nusmv.
erators: path quantifiers  e and a  and temporal operators  such as f and g. path quantifiers are used to specify that a property p holds for some  ep  or every  ap  path starting from a given state in the kripke structure. temporal operators are used to specify that  given a state and a path starting from that state  a property p holds for some  fp  or for every  gp  state of the path. each path quantifier must be paired with a temporal operator  clarke et al.  1 .
¡¡a variety of biologically-interesting properties of the dynamics of a genetic regulatory network can be expressed in ctl  chabrier-rivier et al.  1 . typical questions concern the possibility or the inevitabilityfor the networkto reach some state s   the absence or the universality of some property  and response or precedence properties  i.e.  a property is always followed or preceded by some other property . some examples are given for the two-gene network in figure 1 c . more generally  these properties can be used for testing the validity of a model given experimental data  or understanding how the dynamics of a system emerges from the interactions between its components.
1 check if model satisfies dynamical properties
the model-checking problem consists in verifying whether a temporal-logic formula holds in the discrete transition system at the initial state s . highly-efficient algorithms have been developed and implemented in model checkers for automatically solving this problem. two widely-used model checkers are nusmv  cimatti et al.  1  and evaluator  a component of the cadp toolbox  mateescu and sighireanu  1 . nusmv is an efficient  state-of-the-art model checker for ctl  whereas evaluator is an on-the-fly model checker for the regular alternation-free ¦Ì-calculus  a temporal logic based on regular expressions. the algorithmic complexity of these tools is linear in the size of the transition system and the formula. in addition to a yes/no answer  the tools return a diagnostic  either a witness or a counterexample  depending on whether the property holds or not.
¡¡in order to combine our qualitative simulator with modelchecking tools  we have integrated export functionalities in gna. the text files generated by gna can be imported in the model checkers  after which the verification of the properties of interest continues in the environment of the latter tools. figure 1 c  illustrates the verification of some properties of the two-gene network. fairness conditions  clarke et al.  1  have been used to ensure that attractors  equilibrium states  strongly connected components  are eventually reached  not shown .
¡¡recall that the qualitative abstraction used to obtain ¦²-qts from¦² is a conservativeapproximation. can the conclusions drawn from the verification of a property on ¦²-qts  or more precisely on ¦²-ks  be transposed to ¦²  if every path in ¦²-qts satisfies a property  then from the conservativeness  a corresponding property holds for every solution of ¦². conversely  if a property holds for some path in ¦²-qts  then  since this path may be spurious  the correspondingproperty may hold for no solution of ¦². one can define the set of temporal-logic formulae such that  if a property holds in ¦²-qts  it does so in ¦². in the ctl model-checking framework  this set is the set of formulae that can be expressed in the temporal logic called  ctl  grumberg and long  1 .
1 application: analysis of the nutritional stress response in e. coli
in case of nutritional stress  an e. coli population abandons exponential growth and enters a non-growth state called stationary phase. this growth-phase transition is accompanied by numerous physiological changes in the bacteria  huisman et al.  1 . on the molecular level  this transition is controlled by a complex genetic regulatory network integrating various environmentalsignals. a network includingsix genes believed to play a key role in the nutritional stress response is shown in figure 1 a   ropers et al.  1 .

	topa ¦Ègyrab ¦Ègyrab1	 s  
  ¦Ãfis xfis
fis
biological propertyctl formulad1nusmv resulttime   the transcription of cya is negatively regulated by camp and crp   kawamukai et al.  1 
   rrn p1  transcription increases independently of fis  ...  following  nutrient  upshift   appleman et al.  1 ag valuevalue
value us  ¦Ès ¡ú efdsign xcya ={ 1} 
e value xfis  ¦Èfis1
u value{ds}
{du}true
false  1s.   1s. c 
figure 1: network of key genes  proteins  and regulatory interactions involved in the nutritional stress response in e. coli  ropers et al.  1 .  b  pl differential equation and parameter inequalities for the protein fis.  c  some expected properties of the network. their translation into ctl and interpretation are not detailed here. u is the standard ctl operator until  clarke et al.  1 . ds and du correspond to the initial states for nutrient starvation and nutrient upshift  respectively.¡¡a pl model of seven variables has been constructed  one protein concentration variable for each gene and one input variable representing the presence or absence of a nutritional stress signal. seven differential equations and forty parameter inequalities describe the dynamics of the system  figure 1 b  . using the new version of gna  we have simulated two phenomena  namely nutrient starvation  causing the transition from exponential to stationary phase  and nutrient upshift  leading to the reentry into exponential phase. the simulation results have been analyzed by means of the modelchecker nusmv  using the export functionality of gna. below  we give some examples.
¡¡the simulation of a nutrient starvation has given rise to a state transition graph of 1 states  1 of which are persistent   computed in less than 1 s. on a pc  1 mhz  1 mb .
the graph contains a single equilibrium state corresponding to stationary-phase conditions. are the predictions obtained from the model consistent with experimental data  in  azam et al.  1   the measured concentration of the global regulator fis is shown to decrease and become steady in stationary phase  which is characterized by a low concentration xrrn of stable rnas:
ef dsign xfis = { 1}¡Ä
 1 
ef dsign xfis = {1} ¡Ä value xrrn   ¦Èrrn  
the verificationof  1  takes a fraction of a second to complete and shows that the observed temporal evolution of the fis concentration is reproduced by the model.
¡¡we have also studied the reentry into exponential phase after a nutrient upshift. using the same model as above  but starting the simulation from the qualitative state characterizing stationary-phase conditions and with the nutritional stress signal switched off  qualitative simulation results in a state transition graph of 1 states  1 of which are persistent   generated in 1 s. the graph contains several strongly connected components  sccs . one of these scc  containing 1 states  can be reached from all states in the graph. the qualitative transition system satisfies the property
       ag statesinscc ¡ú agstatesinscc    1  where the predicate statesinscc is satisfied by all and only states in the scc. that is  if the system has reached this scc  it always remains in it. checking this property by visual inspection is tedious and error-prone  while it takes nusmv only 1 s. further mathematical analysis has revealed that the cyclic paths correspond to solutions spiraling inwards to an equilibrium point  ropers et al.  1 . in other words  during the reentry into stationary phase  the concentrations of some of the proteins oscillate towards a new equilibrium level. this is a surprising result  which is currently subject to experimental verification in our laboratory. we also checked a dozen of other properties  two of which are shown in figure 1 c .
1 discussion
we propose a combination of qualitative simulation and model-checking techniques for the analysis and verification of qualitative models of genetic regulatory networks. model checkers help in dealing with the problem that the state transition graphs generated by qualitative simulation may become prohibitively large. they permit complex dynamical properties  whose verification defeats manual analysis capabilities  to be efficiently and reliably checked. the analysis of the genetic regulatory network composed of key genes involved in the nutrient stress response in e. coli illustrates the applicability of the approach.
¡¡model-checking techniques have been used before for analyzing biological networks. most approaches start from discrete models  such as concurrent transition systems  chabrier-rivier et al.  1  and boolean networks  bernot et al.  1 . in this paper we show that model-checking techniques can also be used for more conventional continuous models  in particular differential equation models  when using qualitative abstractions to discretize the dynamics of the system. in comparison with ideas along the same line  brajnik and clancy  1; shults and kuipers  1   our approach is adapted to a particular class of pl differential equations with favorable mathematical properties  allowing the development of tailored algorithms that scale up well to models of large and complex genetic regulatory networks.
¡¡the model-validation approach of this paper has been illustrated in the context of ctl model checking. while ctl allows a variety of biologically-meaningful properties to be expressed  some properties fall outside its scope. for instance  in section 1 we would have liked to be able to express the occurence of oscillations in some of the protein concentrations after a nutrient upshift. the formula eg p¡úf p ¡Ä  p¡úfp  expresses this property  where p means that the concentration of some protein is above a certain threshold. unfortunately it is not a ctl formula and it does not admit any ctl equivalent  clarke and draghicescu  1 . however  the property can be expressed in ¦Ì-calculus and evaluated using xtl  a component of the cadp toolbox  mateescu and garavel  1 . the capability of gna to generate export files for different model checkers  allows one to take advantage from the specific strengths of each of these.
