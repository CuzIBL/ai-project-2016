 
factors such as the massive increase in information available via electronic networks and the advent of virtual distributed workgroups for commerce are placing severe burdens on traditional methods of information sharing and retrieval. matchmaking proposes an intelligent facilitation agent that accepts machinereadable requests and advertisements from information consumers and providers  and determines potential information sharing paths. we argue that matchmaking permits large numbers of dynamic consumers and providers  operating on rapidly-changing data  to share information more effectively than via current methods. this paper introduces matchmaking  as enabled by knowledge sharing standards like kqml  and describes the shade and coins matchmaker implementations. the utility and initial results of matchmaking are illustrated via example scenarios in engineering and consumer information retrieval. 
1 	introduction 
the trend toward computer-based toois for many aspects of commerce has led to a rapid increase in distributed virtual workgroups  such as multi-vendor design teams and virtual corporations. in addition  the advent of the internet  personal computer networks  and interactive television networks has led to an explosion of information available on-line from thousands of new sources. these phenomena offer great promise for obtaining and sharing diverse information conveniently  but they also present a serious challenge. the sheer multitude  diversity  and dynamic nature of on-line information sources 
　*this work was supported in part by arpa contract daaa 1-c1  shared knowledge-based technology for the re-engineering problem   monitored by the u.s. army research laboratory  advanced computational and 
information systems directorate. the views  opinions  and/or findings contained in this report are those of the authors and should not be construed as an official department of the army position  policy  or decision  unless so designated by other documentation. 
1 	distributed al 
makes finding and accessing any specific piece of information extremely difficult. 
　to address this problem  several exciting new technologies have been developed. the standards and protocols of the world wide web  as well as its associated browsers  have provided a hugely successful dissemination framework for previously disassociated information. furthermore  integration frameworks from cad vendors and telecommunications companies provide information connectivity where there was none before. however  both of these employ address-based messaging or browsing paradigms-the users must know where the information exists. unfortunately  as users try to make the transition from adventurous explorers to goal-driven information seekers  it becomes very difficult to find desired information. the pearls are lost in a sea of irrelevant information. 
　in response to this problem  two common solutions have appeared: clearinghouses and exploration agents. clearinghouses  such as cornmercenet and mcc's einet galaxy  are central servers at which individual information providers can register. since there are relatively few clearinghouses  consumers are able to effectively locate desired information. exploration agents  such as lycos  mauldin and leavitt  1  and the world wide web worm  mcbryan  1    crawl  the network compiling a master index. the index can then be used as the basis for keyword searches much like a manuallycreated clearinghouse. 
　these approaches provide very useful solutions to the overflow of information  but several problems remain. first  as the number and size of clearinghouses grow  they degenerate into a duplication of the network  itself  an interesting phenomenon is that many clearinghouses are becoming cross-indexed  allowing each to benefit from the knowledge-base of the others . thus  inefficiencies and difficulties in locating a specific piece of information are still present. also  exploration is a computationally inefficient approach  in terms of bandwidth  processor  and memory utilization   so it is usually applied sparingly  and therefore provides a limited index of the subject network. 
　more fundamentally  the above approaches make the assumption that information producers are  mostly  passive  forcing consumers to drive the process. this necessarily imposes several handicaps: 
  information consumers must know of or arduously locate all relevant providers. however  today's networks are composed of millions of potential information sources  each of which may provide information dynamically. thus  discovering all sources is very difficult. 
  information providers have no way to contribute their efforts. even though producers often have a stake in delivering their information  and would therefore be willing to assist in the process  this potential goes unutilized. 
  once a connection is made  there is no means by which a provider can notify a consumer of new knowledge or updates to past queries. thus  in contexts where information is updated frequently and dynamically  approaches where the provider is passive simply can't work. 
1 	matchmaking 
a different approach to addressing this problem is called matchmaking. matchmaking is based on a cooperative partnership between information providers and consumers  assisted by an intelligent facilitator  genesereth  1  utilizing a knowledge sharing infrastructure  patil et al.  1 . information providers take an active role 
in finding specific consumers by advertising their information capabilities to a matchmaker. conversely  consumers send requests for desired information to the matchmaker. the matchmaker attempts to identify any advertisements that are relevant to the requests and notifies the providers and consumers as appropriate. 
　matchmaking is an automated process depending on machine-readable messaging and content languages. the main advantage of this approach is that the providers and consumers can continuously issue and retract advertisements and requests  so information does not tend to become stale. this is particularly critical in situations where information changes rapidly  as in product development and crisis management  and in situations where the shear magnitude of providers and consumers would cause the clearinghouse to be updated nearly continuously. a matchmaker is somewhat like a blackboard  except that it exists as a separate agent  the shared information tends to be highly structured in terms of knowledge-sharing protocols  and specific matchmaking algorithms are used.  the term agent is used in this paper to refer to a tool or program  possibly under the guidance of a human  that consumes or provides information to other agents.  
　the content language must allow broad classes of information  i.e.  many different documents  to be conveyed succinctly; otherwise  very many highly-specific messages  essentially duplicating the clients' databases  would be required. whereas this provides useful representational economy and efficiency  it dictates that advertisements and requests are only approximate versions of the actual information. thus  matchmaking is approximate  and false positive and false negative matches  depending on whether the advertisements and requests are over- or under-general  are likely to occur. 
　as variations on the general theme  matchmaking can follow many different specific modes. for example  the consumer might simply ask the matchmaker to recommend a provider that can likely satisfy the request. the actual queries then take place directly between the provider and consumer. the consumer might ask the matchmaker to forward the request to a capable provider with the stipulation that subsequent replies are to be sent directly to the consumer  called recruiting . or  the consumer might ask the matchmaker to act as an intermediary  forwarding the request to the producer and forwarding the reply to the consumer  called brokering . 
　an implicit form of the last case  called content-based routing  is also possible  where a consumer simply subscribes to information as if the matchmaker were the source. the providers  rather than advertising their capabilities  simply send out changes as they occur. the matchmaker then routes the specific changes on to the subscriber. these different modalities  which correspond to several existing kqml message types as described in section 1  are shown in figure 1. 
　an additional variation is on the persistency of the request. consumers often desire to be told not only about providers that have already advertised a relevant capability  but also about any providers that advertise a capability in the future. in this case  the consumers would issue a persistent version of the above requests. this is essential  for instance  in the parameter manager example described in section 1  in which a new consumer or provider with pertinent constraints may come on-line at any time. 
　there are many potential modes of matchmaking beyond those summarized in figure 1. as pointed out previously  one of the benefits of matchmaking is that it allows providers to take a more active role in information retrieval. whereas the above schemes allow providers to advertise their capabilities dynamically  providers still cannot identify potential consumers unless the consumer actually issues a specific statement of interest. a useful extension would be to allow a provider to request the names of consumers that have posted related interests. this raises serious privacy considerations  imagine a consumer asking for a list of automobile dealerships only to be bombarded by sales offers from all of the dealerships   but in some cases  it may be desirable for a matchmaker to present a consumer with potential information providers spontaneously. anonymity of the consumer is maintained  yet providers have an avenue for solicitations. 
　to evaluate and test the matchmaking approach  two prototype matchmakers have been built. the first matchmaker was designed and prototyped as part of the shade system  kuokka and harada  1a; mcguire et al  1 . the shade matchmaker supports many modes of operation over formal  logic-based representations. the second matchmaker  created as an element of the coins system  common interest seeker  operates over free-text information  supporting fewer modes. the implementation of each of these systems is outlined in the following sections. other researchers are also working on facilitators  such as the absi facilitator  singh  1   

which also perform certain matchmaking functions. a detailed description of protocol issues related to matchmaking is covered in  kuokka and harada  1b . 
　the decision to implement two distinct matchmakers rather than a single  fully capable matchmaker was initially motivated by non-technical issues. however  it turns out that the resulting modularity is appropriate and beneficial in the agent-based world. this approach allows many matchmakers  each created by researchers with specific technical expertise  to be specialized for specific classes of languages. such a distributed approach may also address pragmatic issues of scalability  but little effort has been applied in this area to date. if desired  a single  multi-language matchmaker may be implemented via a simple dispatching agent that farms out requests to the appropriate subcontracting agent. 
1 	shade matchmaker 
matchmaking depends heavily on several technologies: an appropriate messaging language in which the client agents express their requests  e.g.  the form of advertisement or request   an expressive content representation used to encode the actual information to be advertised and requested  and an effective matching algorithm. 
the shade matchmaker communicates in terms of 
kqml  knowledge query and manipulation language 
 finin et a/.  1   messages. advertisements are sent using the kqml advertise performative  message type . requests are sent using the recommend  recruit  and broker performatives. the matchmaker also supports content-based routing via the kqml performatives tell and subscribe. 
for example  the kqml message 
 advertise :sender p .-receiver mm :lang kqml 
:content 
 ask-one :lang kif 
:content 
 subcomponent-of  x  y    
1 	distributed al 
advertises the capability to answer queries  ask-one  about the component hierarchy  and the message 
 recruit-all :sender c :receiver mm :lang kqml 
:content 
 ask-one :lang kif 
:content 
　　 subcomponent-of gimbal  x     asks the matchmaker to locate an agent that can answer the query:  what is the parent component of the gimbal 1 
　as its content language  the shade matchmaker supports two logic-based representations: a subset of kif  genesereth and fikes  1   used in the above example  and a structured logic representation called max  kuokka  1  augmented to support string patterns as terms. kif is supported since it provides an expressive  standardized shared language with well-defined semantics. max is supported since it is more appropriate for representing highly structured data such as ob-
jects and frames. it essentially allows partial templates of frames to be advertised and requested. furthermore  with the string matching augmentation  it provides a convenient means for advertising and requesting semistructured text  such as outlines. for example  the message 
 subscribe :sender c :receiver mm :lang kqml 
:content 
 ask-about :lang max 
:content 
  trouble-report  x  
      match  x   subject  .*gimbal.*        subscribes to trouble report objects that have the string  gimbal  in their subject field. 
　the actual matching of advertised and subscribed content fields is performed by a prolog-like unification algorithm. if strings are present in the logic forms  a regular expression pattern matcher is used for term unification. 
　advertisements and requests must match based solely on their content; there is no knowledge base against 

which inference is performed. for example  an advertisement containing the term  engine  would not match an isomorphic request containing the term  propulsion system   since the matchmaker does not know that an engine is a subclass of a propulsion system. to address this issue  the shade project has also been developing technology to define ontologies  gruber  1 -knowledge bases that define shared concepts. as ontologies become available  future versions of the matchmaker will include the capability to perform limited inference based on the specific ontology specified in the kqml message  allowing the above example to match. 
　this path must be followed carefully  however  since an arbitrary amount of inference or knowledge may be required to match any given advertisement and request. the matchmaker could quickly be transformed from a communication facilitator to a multi-domain reasoning engine. this would violate a key tenet of the agent-based approach-that of utilizing many different domain-specific agents. therefore  the tendency to enhance the capabilities of the matchmaker must be tempered by the desirable separation of functionality underlying the network of agents. 
　the shade matchmaker is implemented entirely as a declarative rule-based program within the max forward-chaining agent architecture. this allows features of the matchmaker  e.g.  support for additional kqml performatives  to be added as additional rules. 
for example  the rule that implements the broker request is shown below. 


table 1: a portion of document vector for this paper 
other agents to subscribe to the message level actions of the matchmaker in addition to content level information. for example  another shade agent called the bird's eye view agent uses this feature to subscribe to all advertisements and requests  regardless of content. the bird's eye agent then displays the system of agents and message traffic. the meta-reasoning capabilities are also used to provide reasons for match failures in certain cases  the space imaging application described in section 1 uses this feature . 
1 	coins matchmaker 
motivated by the utility of the shade matchmaker on structured information and by the need for similar functionality over the huge amount of text available on-line  a second matchmaker has been created that operates on free-text as its content language. this matchmaker was initially conceived as the central part of a system called coins  comrnon interest seeker   which allows users to easily advertise and request information about their interests. however  by architecting the system as a set of agents  the coins matchmaker is also useful as a general purpose facilitator. 
　as with the shade matchmaker  the coins matchmaker is accessed via the standard kqml messages advertise and broker. the content language is either freetext or a concept vector  a weighed list of stemmed words in the document . an example of a portion of the concept vector for this paper is shown in table 1. 
　to determine if a free-text request matches a free-text advertisement  the content of each is converted into a concept vector using the smart  salton  1  information retrieval system. the smart matching algorithm is then used to determine the degree of match. finally  an adjustable cutoff measure is used to make the match binary. thus  other than supporting a different content language  the coins matchmaker works much like the shade matchmaker. 
　smart employs an inverse document frequency scheme so the coins matchmaker must maintain and use a local concept corpus. this functions somewhat like the ontology of the shade matchmaker in that it is a knowledge base of shared concepts allowing the match process to be more effective. 
1 	application: collaborative engineering 
the shade and coins matchmakers are being used as a central component of several research projects. the shade project  itself  is exploring broader infrastructure issues in support of distributed engineering. to this end  shade has developed a testbed for collaborative engineering to motivate and test infrastructure components such as the matchmaker. 
　to illustrate the utility of a matchmaker in an engineering environment  consider the following scenario showing a few steps in the design of a satellite. the engineering team consists of a systems engineer  responsible for specifying the overall architecture of the satellite; a designer  responsible for designing the geometry and structure of a gimbal on the satellite; and a mass specialist  who allocates the mass budgets to individual subsystems. 
　the participants use a number of engineering tools that consume and produce complex engineering information. each participant uses the project coordination assistant  pca   kuokka  1   which allows engineers to view and manipulate textual and structured data on the project such as the satellite component hierarchy and trouble reports  and the parameter manager  parman   kuokka and livezey  1   which allows many different engineers to define constraints over shared parameters. in addition  each engineer may use any number of cad tools specific to his or her discipline. 
　initially  the systems engineer uses the pca to request notification about any unresolved problems. this is translated into the following matchmaker subscription: 
 subscribe :sender syseng :receiver mm 
:content 
 tell :lang max 
:content 
  newpage   item  newitem    
 match  newitem   text  problem     
 oldpage  opage  
 not-match  opage   item  newitem       
notice that the form of the content is designed such that a literal will match the interest template only the first time it is added to the page. otherwise  if a pattern that matches the interest template exists within a page  every subsequent change to that page would result in a repeated notification  even if the pattern  itself  did not change. 
　next  using the pca  the systems engineer adds the mass budget attribute  mass-bgt  to the gimbal object in the global satellite topology database  resulting in a new page being sent to the matchmaker. 
 tell .-sender syseng :receiver mm :lang max 
:content 
   newpage 
  item   text  structure   
 item   text  gimball   
 item   text  mass     
 item   text  mass-bgt     
	...   	...     
 oldpage 
  item   text  structure   
 item   text  gimball   
 item   text  mass     ...   ...       
1 	distributed al 
by virtue of a previous subscription to changes to the gimbal  similar to the system engineer's subscription to unresolved problems   the gimbal designer receives notice of the new mass budget attribute. 
　the new parameter is relevant to his subsystem  so the designer imports the new parameter to his parman tool and enters the constraint that the actual mass of the gimbal must be less than the mass budget. since the parman tool is designed to handle distributed constraints  it must attempt to locate other agents that have constraints over the new parameter. this results in the following messages being sent to the matchmaker. 
 recruit-all :sender gimball-pm :receiver mm 
:content 
 subscribe :lang kqml 
:content 
 stream-about :lang kif 
:content 
 mass gimbal-1    
 advertise :sender gimball-pm :receiver mm 
:content 
 subscribe :lang kqml 
:content 
 stream-about :lang kif 
:content 
 mass gimbal-1    
　since the mass specialist is responsible for allocating the mass budgets  she also defines a constraint  which results in similar advertisements and requests being posted by her parman agent. the matchmaker matches the advertisements and requests for the mass budget posted by each parman and routes the requests on to the other parman agents. this allows each parman agent to locate all other sources of relevant constraints  and ultimately identify that the budget as supplied by the mass specialist is inconsistent with the actual mass of the gimbal. 
　at this point  we assume that the designer cannot restructure the gimbal to meet the budget demands  so he posts an open problem via pca. this results in the following message being sent to the matchmaker. 
 tell :sender gimball :receiver mm :lang max 
:content 
  newpage   item   text  problems   
 item   text 
 gimbal 1 cannot satisfy mass budget      item   text 
 dual controller hysteresis occurring     
...   ...  
 oldpage   item   text  problems   
 item   text 
 dual controller hysteresis occurring     
...   ...     
this matches with the system engineer's earlier subscription  so he receives notification of this problem. thus  by facilitating the dynamic connection of relevant information sources  a problem that might have gone unnoticed for many days was identified and propagated to concerned participants within minutes. a diagram  generated by the bird's eye view agent based on its 

figure 1: key message traffic among agents 
meta-level subscription to the matchmaker is shown in figure 1. 
　the key to the matchmaking approach is that it avoids the need to identify a priori all potential information transfer paths  which is impossible in general due to the dynamic nature of engineering teams. this is especially important if the project is considered in its full context  where there are hundreds of engineers  scores of gimbals  hundreds of other components  and thousands of parameters and constraints. many engineers might be using the parameter manager to state their constraints on the parameters of specific interest to them. when any one engineer decides to add a constraint  he has no way of knowing exactly which other engineers are impacted  and therefore whom should be notified. this is solved by each parameter manager sending advertisements and subscriptions to the matchmaker for the specific parameters of concern  allowing all agents to locate the new sources and sinks of information for this specific  unforeseeable engineering need. 
　the matchmaker is also vital to the operation of collaboration tools like the pca. as described above  when the systems engineer created a monitor for problem reports  a kqml subscribe message was sent to the matchmaker. as other changes were made to the pca data  they were forward to the matchmaker. this allowed the matchmaker to route relevant changes to subscribers. not shown in the scenario is that as changes are made to pca pages  the pca also transforms the semi-structured text into concept vectors and sends them as subscriptions to the coins matchmaker. as other agents do the same  the matchmaker monitors for pairs of concept vectors that match  according to the approximate concept vector match criterion . if a pair is found  pointers are returned to the pca and the other agent. the pca then adds them to a dynamic list of relevant documents. thus  the matchmaker is used to locate other information relevant to the contents of the pca information base. 
　the matchmaker has been used by several other engineering-related projects as well. the cosmos project  mark and dukes-schlossberg  1   which is creating a knowledge-based commitment reasoner to determine impacts of engineering changes  uses the matchmaker to provide indirection between a set of dynamic clients and the server. the arpa simulation based design project uses the matchmaker to provide change subscription and notification services over its large  objectoriented product model. in this application  if an object for which a subscription has been issued changes  the user will receive automatic notification. other applications of the matchmaker  such as its use to locate relevant pages in a large distributed engineering notebook  are in earlier stages of development. 
1 application: information retrieval 
the functionality of matchmaking goes beyond engineering teams. for example  the matchmaker is an integral part of a prototype information retrieval system being developed to support lockheed's sii  space imaging  inc  project  an effort to sell high-resolution satellite imagery on the commercial market. since there are multiple satellite image providers  and numerous valueadded post-processors  this task consists of locating data available from multiple dynamic sources in response to specific queries. therefore  the sii prototype uses the shade matchmaker. 
　the system works as follows. as new classes of images become available  the data sources issue advertisements in terms of the image attributes  e.g.  geographic area  resolution  spectral bands  and cloud cover . when a user requests a specific kind of image  a front-end agent issues a query to the matchmaker that describes the desired attributes. the matchmaker compares the advertisements to the queries  and sends any matches to the fronr-end agent. this first-pass match is used to locate servers for further  more specific  queries. in addition  when a source database is not appropriate  the matchmaker returns a failure reason. 
　the matchmaker is important to the sii application not only because there are multiple sources of data  but also because the data is constantly being updated as satellites circle the earth. the matchmaker allows each data source to advertise and retract its image capabilities dynamically  permitting the matchmaker to suggest sources even if the specific image hasn't yet been collected. only an automated system like the matchmaker can offer the up-to-the-minute location of data required by sii. 
1 conclusions 
the growth of information available via electronic networks presents both an unprecedented opportunity and a difficult challenge. rather than relying on traditional techniques that are consumer-driven  matchmaking allows both of the stake holders  i.e.  information providers and consumers  to contribute to information gathering activities. thus  information providers can seek specific consumers much like consumers currently find specific providers. in addition  since matchmaking is an automated approach  it better addresses the dynamic nature of electronic information  which is based on huge numbers of potential information providers and consumers. the need for such an approach is underscored by the rapid adoption of the shade and coins prototype matchmakers by several projects. 
　however  matchmaking is still an experimental approach  and many questions remain. additional support is required for formal languages such as object and terminological representations  and a capability to load relevant knowledge bases and ontologies is needed to permit matchmaking based on subsumption reasoning and inference  however  the matchmaker cannot become the reasoning engine to the world . also  further expansion into free-form human languages and graphics is needed  going beyond the current concept vector abstraction of text. looking beyond the content language  the experiments with matchmaking to date have already begun to stretch the kqml messaging substrate. further augmentations are required to support additional modalities and to clarify the semantics of the existing message types. and finally  as applications grow in size and complexity  techniques to distribute the matchmaker load will be required. yet  in spite of these open issues  matchmaking is a promising approach to supporting information access in heterogeneous and dynamic environments. 
acknowledgments 
the initial concept of matchmaking and the kqml formalization stemmed from efforts by the entire shade team  including jim mcguire  jay weber  greg olsen  rich pelavin  tom gruber  and marty tenenbaum  as well as the efforts of the kqml committee. we also thank brian livezey for many insights and morton hirschberg for his invaluable support. this work was supported in part by arpa prime contract daaa1-c1  monitored by the u.s. army research laboratory. 
