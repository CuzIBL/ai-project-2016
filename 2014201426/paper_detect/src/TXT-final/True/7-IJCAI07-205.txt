
agents with partial observability need to share information to achieve decentralised coordination. however  in resource-constrained systems  indiscriminate communication can create performance bottlenecks by consuming valuable bandwidth. therefore  there is a tradeoff between the utility attained by communication and its cost. here we address this tradeoff by developing a novel strategy to make communication selective based on information redundancy; ensuring communication only occurs when necessary  while maintaining acceptable coordination. we apply this strategy to a state-ofthe-art communication protocol to evaluate its resource saving benefit in a distributed network routing problem. furthermore  we design a mechanism to adapt its selectivity level to the prevailing resource constraints to ensure further improvements. empirical studies show our selective strategy achieves relative savings in bandwidth usage of 1%  with only a 1% relative reduction in coordination effectivenessand the adaptivestrategy further improves relative bandwidth usage by up to 1% and also relative coordination effectiveness by up to 1% over the non-adaptive approach.
1	introduction
in many distributed systems  such as sensor networks  p1p systems  and grid applications  decision-making is performed by individual agents in a decentralised fashion under incomplete global knowledge. now  to effectively coordinate their actions under these circumstances  the agents need to share information  xuan et al.  1; goldman and zilberstein  1 . specifically  the fact that such exchanges can significantly improve distributed task processing has been shown in  dutta et al.  1  where a state-of-the-art informationsharing protocol is developed. however  their solution does not consider communication cost  which is the extra bandwidth required for communication and is limited in all practical applications. given this  this paper develops a novel decentralised strategy that agents can employ to decide when to exchange information. this strategy is practical for realistic applications and balances the need to communicate  to improve coordination  with the need to reduce overhead  to save valuable bandwidth .
¡¡in more detail  the issue of planning when to communicate is a non-trivial problem. in particular  goldman and zilberstein  show that solving this problem optimally is intractable. given this  a number of non-optimal solutions to the problem have been proposed. for example  in  gmytrasiewicz and durfee  1   agents communicate to improve their own utilities  but this may be at the expense of the overall system performance. zhang et al.  require all possible communication acts of agents to compute team utility gained due to communication: an impractical proposition in real applications. the algorithms to solve the decmdp formulation in  shen et al.  1  need expensive offline planning and so cannot readily be applied to dynamic environments. finally  centralised solutions are equally inapplicable  haas et al.  1  as they are not scalable and present a single point of failure.
¡¡against this background  this paper presents a compromising but scalable approach: agents exchange information selectively such that it improves coordination  but without incurring the high costs associated with computing exactly when it is best to communicate. here  the main challenge is to find the right level of selectiveness that will restrict resource usage  thereby allowing its use for realistic task processing  while limiting performance degradation to nonsignificant levels compared to strategies that permit unconstrained communication.
¡¡to design our information-sharing algorithm for efficient task processing and resource usage  we use information redundancy as the parameter for agents to decide when to communicate. specifically  we build upon the informationsharing algorithm of  dutta et al.  1  which represents the state-of-the-art in this area  having been shown to outperform littman's q-routing  stone's tpot-rl  and broadcast protocols . this benchmark algorithm distributes local knowledge among cooperative agents after they jointly complete a task. we call this approach non-selective information exchange  nsie  as information is shared every time a task is completed without considering resource constraints  section 1 . here  we extend this approach by including a level of decision-making among agents before distributing local knowledge. thus  after jointly completing tasks  the agents now choose to communicate or not depending on whether the information transmitted would be useful or redundant to the recipient  section 1 . such redundancy is captured using a selectivity threshold  ¦¤s  which is by how much the current information  the value of an agent's local state  differs from what was previously transmitted. now  various selectivity values affect a system's performance differently: the higher the threshold  the more restricted the communication  which lessens coordination quality but takes up less resource. to improve resource usage still further  we then develop an algorithm for adaptively setting the selectivity threshold so that its level can be chosen according to the prevailing context. this allows more informed communication decisions  thereby reducing bandwidth usage and also increasing coordination effectiveness compared to using a fixed threshold. we then empirically assess the effectiveness of our selective information exchange  sie  and adaptive selective information exchange  asie  protocols by comparing their performances against nsie  section 1 . in particular  for a distributed task processing problem  we measure the amount of degradation  if any  in the quality of solutions and the amount of savings  if any  in resource usage achieved by our strategies compared to nsie. the evaluations are carried out on an exemplar problem: distributed network routing. this is the same domain used in  dutta et al.  1  which allows valid comparisons. that our sie approach extends the state-of-theart significantly is confirmed by these empirical studies: sie achieves a 1% saving in bandwidth usage while reducing throughput by only 1% compared to nsie across various network environments. asie further improves relative bandwidth usage by about 1% and also the relative throughputby about 1% compared to sie.
1	routing in resource-constrained networks
this section outlines the call routing application on which our selective information exchange protocol is evaluated. note  however  our protocol is generic and can be used to conserve bandwidth in any system with resource constraints and using information-sharing at some level to operate efficiently. also note  in systems where communication is different from exchangingstate values  as happensin ourapplication   we need a suitable way of formalising the redundancy metric.1 in our application  each node communicates directly with those that are within its communication range. the system's task is to connect a call between the node where the call originates and the one where it is destined. the originating node forwards a call setup request to one of its neighbours. as each agent only has local information  it chooses that neighbour for which it estimates that the call would be placed via the most efficient overall route.
¡¡specifically  each node i maintains a routing table rti  where each element rti d n   d: the destination node  n: a neighbour of i  represents i's estimate of the best end-toend bandwidth availability in going from n to d. node i chooses a neighbour j using a boltzmann distribution over its rti values:   where ¦Ó is the importance given to higher rt values. each node chooses the next hop until the call setup request reaches the destination. after this happens  the destination sends  upstream  along the call route an ack message indicating a successful call connection. each node i also appends its state value to the ack. in this application  a node's state is the bandwidth available expressed as a fraction of the maximum availability. thus  a node k receiving the ack from the immediate  downstream  node l gets the set of state values that were appended by all  downstream  nodes on this call route. node k then updates its rt as: rtk d l  ¡û  1   ¦Á rtk d l  + ¦Á¦£ sl ... sd   where ¦£   is an aggregation function on a set of node state values  and ¦Á is a discount factor  1   ¦Á   1 . here  we choose ¦£ as the minimum of the set of states since it is the minimum available bandwidth that determines the maximum number of calls on a given path.
¡¡the above description of information exchange after every call connection is called non-selective information exchange  nsie  which is the approach of  dutta et al.  1  and  therefore  treated as the baseline algorithm in this paper. in nsie  information exchanged via the ack messages is significant in updating rts and  hence  performing decentralised routing efficiently. on the other hand  these messages consume valuable bandwidth and  hence  act as overhead. the larger the ack's size is  the more the bandwidth it consumes. to counter this  we make information exchangeselective to restrict the ack size. thus  we are essentially solving the problem of controlling resource usage by communication  while retaining system performance.
1	the information exchange strategies
the state value that a node transmits to another at a given time can be identical to what it sent to that node on the previous occasion. this happens if  since the last transmission  exactly as many new calls have been connected through this node as existing calls on this node have terminated and  hence  the resultant bandwidth availability on this node is unchanged. in general  an agent's local state can be identical or similar in terms of information content to what it perceived when it last communicated its state. in such cases  sending state information is redundant and can be discarded. the goal  therefore  is to communicate only when there is a significant enough change in an agent's state. making information exchange selective  sie  in this way  the ack size can be reduced. to this end  we discuss the requirements and the design of sie  how sie affects system performance  and the notion of communication selectivity. finally  the adaptive  asie  protocol is introduced.
selective information exchange:	to implement sie 	a

node should have the following:
transmitter memory  t  : to store the state values sent to each neighbour on the most recent transmission. so  ti n  is the most recent state-value transmitted by i to neighbour n. these are compared against the current state value to determine a redundancy. thus  a node i needs a memory of size | ki |  where ki is its set of neighbours  for its decision of when to transmit.
receiver memory  r : to store the state values received from any other node on the most recent transmission from the latter. so  ri j  is the most recent state-value received by i from j. thus  i uses this stored value to update its rt when it receives an ack that does not include the current state of j. this happens if j detects a redundancy and does not transmit. on the other hand  when it receives the state value of j  when j has not identified a redundancy   it replaces ri j  with this value and updates its rt with this new information. thus  a node i needs a memory of size |a|  1  where a is the set of all nodes  for its rt-update decision.
¡¡given t and r  a formal description of the selective information exchange decision and rt-update action follows:
transmitting state value selectively. in sie  a node i  1   i ¡Ü d  transmits its state to its  upstream  node {i   1} if:. if condition  1  holds and i transmits its state si to {i 1}  theni updatesti i 1  to: ti i 1  = si. however  if condition  1  is not true  then i does not append si to the ack before sending it to {i   1}.
updating rt. a node i  1 ¡Ü i   d  uses the following set of state values of the  downstream  nodes to update its is the latest of ri i + m  and si+m}  1 . in the values in  1   i determines the  recency  of state information by checking if the value of node {i+m} is present in the message. if it is  then {i+m} has transmitted this value by determining that this transmission is not redundant  using condition  1  . then  i uses this value to update its rt  as stated in section 1  and also updates ri i+ m  to be si+m. however  if i does not find the state value of {i+m} in the message  then it uses the last value received from {i+m}  ri i+m   to update its rt. using the above-mentioned  we now analyse the effects of sie on decentralised routing along different dimensions:
memory size. each node i needs a memory of size |ki |+| a |-1 to store r and t . thus  memory size is linear with the number of nodes  but remains constant at run-time. now  hardware memory is cheap and can be easily incorporated into the nodes.
message size. this has a positive correlation with bandwidth use. it increases only if a node appends a state value. using sie  therefore  the message size cannot be any more than nsie. in fact  node states remain unchanged over time intervals when new calls do not originate and when existing calls are ongoing. in these scenarios  sie would restrict the size of ack  thus reducing overhead and freeing up valuable bandwidth.
quality of routing table. information exchange allows rts to remain up-to-date with the actual end-to-end bandwidth availabilities. now  since sie restricts communication  the concern is whether it adversely affects the quality of rts  hence  the overall routing quality . however  sie prevents information exchange only if it is identical to what has been communicated previously. thus  by storing in memory the latest transmissions  t    any new information is guaranteed to be transmitted. hence  sie keeps the rts up-to-date in exactly the same way as nsie; so routing performance should be as good as nsie.
¡¡the definition of sie implies that information exchange is restricted only when there is an exact equality between the current state-value and the one transmitted most recently. this is a very restrictive condition for defining redundancy and  hence  for information exchange being selective. it can be relaxed from zero difference  condition  1   by incorporating a  threshold difference  between present and past state values. such relaxation would further restrict information exchange resulting in further bandwidth savings  although it may deteriorate the quality of rts.
¡¡in more detail  a threshold difference  td  is the amount of change in state-value that a node needs to observe before transmitting its value. thus  a td of ¦¤si for node i implies that i transmits to its neighbourj iff: | si ti j  |¡Ý ¦¤si.  1  the higher the value of ¦¤s  the more selective the communication  the lower the numberof transmissions  and the smaller the message size  a large¦¤s implies nodescommunicateonly when there is at least an equally large state-change . however  when ¦¤s is small  nodes communicate for both large and small state changes.
adaptive selective information exchange:	in	sie 	all

agents use a common  pre-set  threshold to communicate. however  agents can choose different levels of communication selectivity and each such combination can affect the system performance differently. thus  sie searches only a limited region of the solution space. we now alleviate this by letting each agent choose adaptively its own td over time  thus  exploring a larger number of combinations of communication behaviours . by so doing  we could have a more effective system by improving upon the efficiencies of both task processing and resource usage than achieved by sie. to use such adaptive selective information exchange  asie   we need to determine how an agent should choose a particular td at a given time. to do this  we use stored performance profiles  zilberstein and russell  1  of a network.
¡¡in more detail  to generate performance profiles  we let a single agent use sie  with different td values  and all others use nsie. then  for each td value  we measure the difference of this system's performance from that where all agents use nsie. this determines how a single agent's communication selectivity affects global performance over time and  in turn  defines our performance profiles. subsequently  asie is implemented when each agent selects  at a given time  the td which generated the best performance profile. thus  the stored profiles are re-used at run time by each agent to dynamically select its own td.
¡¡however  in selecting td dynamically as described above  the following points should be noted.  1  our asie approach is myopic since each agent considers only how its own communication action influences global performance. using estimates of the actions of other agents could generate better performances  but is likely to cause practical difficulties in terms of the computational complexity associated with such estimation  goldman and zilberstein  1 .  1  the timeindexed performance profiles are re-used in the asie system  where  in fact  the system could be at a different global state than it was at the same time when the profile was generated. thus  the td that generated the best profile at a given time  and  thus  is selected in asie  can be different from the one required in the asie system at the current time. to alleviate this potential limitation  an agent needs to estimate the global state: again  a practical problem.  1  we generate performance profiles by letting one agent use sie. now  in a distributed system  the communication actions of different agents can impact global performance differently. in this case  the performance profiles of different agents will be different. nevertheless  we assume that by choosing a  representative  agent  we can generate a performance profile that will be fairly close to those of any agent. moreover  performance profiles of multiple agents can be stored in case of systems with heterogeneous agents. 1 experimental evaluation
for our experiments  we use the network simulator of  dutta et al.  1 . we create different network environments by changing the following simulation parameters so that the results on performance tradeoffs can be generalised.
  topology: different network structures can affect system performance differently  although we would want to establish some general conclusions about performance trends. to this end  we use a 1-node irregular grid topology  fig 1 a   used previously in  boyan and littman  1  to make valid comparisons. also  two random topologies of 1 nodes  fig 1 b   and 1 nodes  fig 1 c   are used.
  traffic patterns: both uniform and non-uniform network traffic is used. in the former  a common call origination probability  cop  exists for all nodes and remains constant throughout an experiment. thus  the network faces a steady traffic inflow. in the latter  the cop is selected randomly per node and then used to generate a call.   information exchange algorithms: we compare sie against nsie  with various td values  by comparing their routing quality and message overheads across different topologies and load patterns. asie and nsie are compared similarly.

	 a  1nodes	 b  1nodes	 c  1nodes
figure 1: random topologies
we choose the following performance measures  as per  dutta et al.  1  :
  call success rate  csr : this is the fraction of the number of calls originating that actually get connected to their destinations. given a network load and maximum node bandwidth  the more accurate the routing tables  the more likely it is that calls will be connected. thus  csr is a measure of routing quality  the coordination effectiveness .
  message size  ms : the size of an ack message is the number of state-values appended to it. the smaller the message size  the higher the bandwidth saved  the more efficient the information-sharing algorithm .
¡¡we study the impact of communication selectivity  td  on network performance. such empirical results allow a system designer or user to examine performance tradeoffs across different network environments. in this context  we can form subjective hypotheses such as:  i  small td generates good table 1: nsie performance: uniform load

coptopology 1topology 1topology 1csrmscsrmscsrmsavgstdevavgstdevavgstdevavgstdevavgstdevavgstdev11111111111111111111111111111111111111111111111111111111111111111bandwidth savings and only slightly deteriorates call routing; or  ii  high td generates significant bandwidth savings but significantly deteriorates call routing. in our experiments  first  the csr and ms of the sie and asie are compared against those of nsie using uniform load  followed by using non-uniform load. the following parameter values are used  as per  dutta et al.  1  : ¦Á = 1  ¦Ó = 1  and maximum number of simultaneous calls per node is 1.
1	uniform load
each experiment uses a constant cop chosen from the set {1 1 1 1 1}. note  the higher the cop value  the more calls originate and  hence  the higher the network load.
performance of nsie: our baseline results  nsie  are summarized in table 1  showing the steady state average csr and average ms values for differenttopologies. for all topologies  the average csr decreases as the cop increases  calls originating increase . with limited bandwidth  1 units per node   as the cop increases  larger percentages of originating calls fail to be connected. hence  the csr decreases. also  the average ms decreases with increasing cop. at higher cops  when all nodes generate large number of calls  only the short-distance calls connect. having limited bandwidth  a node gets saturated with the calls that it originates. then  the extent to which a node routes calls originating elsewhere decreases with increasing cop. since ack size is determined by the route length  ms decreases with less long-distancecalls connecting at high cop.
performance of sie: table 1 shows the steady state average csr and ms in the different topologies using sie when ¦¤s = 1. this is the minimum value that ¦¤s can take to have any communication selectivity  generating a baseline sie. for all other ¦¤s  we get the same trends  excluded due to limited space .
¡¡in table 1  the trends in both csr and ms are identical to those in table 1. however  both of these in table 1 are lower than the correspondingvalues in table 1. hence  sie uses less bandwidth than nsie  but it has a slightly reduced call success rate. we then compare these across all cop and ¦¤s values by generating the relative differences of the average csrs and mss as: csrdiff =  csr nsie  csr sie  /csr nsie   and msdiff =  ms nsie    ms sie  /ms nsie . thus  the higher the value of csrdiff  the poorer is the solution quality of sie compared to nsie. however  the higher the msdiff  the more efficient the communication of sie.
¡¡studying the csrdiff values  figure 1 a   of topology 1  we learn:  1  at any cop  for small ¦¤s  the csr of sie is very close to that of nsie. thus  when ¦¤s   1  csrdiff table 1: sie performance  ¦¤s = 1 : uniform load

coptopology 1topology 1topology 1csrmscsrmscsrmsavgstdevavgstdevavgstdevavgstdevavgstdevavgstdev11111111111111111111111111111111111111111111111111111111111111111is less than 1% for any cop. when ¦¤s is low  communication occurs for both small and large state-changes. now  small state-changes occur at any cop value because the origination and termination of few calls are more common than a larger number. larger state-changes  however  occur more at higher cops. thus  for any cop  a low ¦¤s value allows frequent communication. this keeps the rts updated fairly well  thus  generating good call success rates  close to nsie .  1  at larger ¦¤s  the sie csr is significantly lower than nsie when cop is small  but remains close to nsie at higher cops.
thus  ¦¤s = 1 causes a 1% csrdiff when cop is 1  but it is only about 1% when cop is 1. high ¦¤s allows communication only for large state-changes. now  large state-changes are rare at small cops when nodes are sparsely occupied  and so is communication. thus  the rts are not up-to-date  causing poor routing and reducing the csr of sie. but  at higher cops  large state-changes and communication  are more frequent; hence csr of sie is close to nsie.
¡¡studying the msdiff values  figure 1 b   of topology 1  we learn:  1  at any cop  the larger the ¦¤s  the larger is the msdiff value. since communication reduces with ¦¤s  so does the ms of sie  but not influencing the ms of
nsie . these results confirm that larger bandwidth savings are achieved by making communication ever more selective.  1  at any ¦¤s  a change in cop does not significantly change the msdiff value. thus  sie maintains a uniform advantage over nsie in terms of saving bandwidth for all cop values.
¡¡in summary  the significant result is that the bandwidth usage improvement of sie  up to 1%  clearly offsets its degrading in routing  as low as 1% . more typically  we obtain 1% improvement in bandwidth efficiency at the expense of less than 1% degradation in routing quality. the results from the other topologies show similar trends.
	 a  csr difference	 b  ms difference
figure 1: csr and ms differences between sie and nsie performance of asie: we study asie on a regular 1¡Á1 grid where the centroid is the representative node  nr   section 1 . here  performance profiles  pp  represent timevariations of the percentage deviations of global csr and ms between nsie and the one where only nr uses sie and all others use nsie. in asie  node i selects that ¦¤si which generates the least degradation in csr for the cop value  at that time  in the profile. it then uses this ¦¤si for its communication decision  equation  1   until it chooses a new ¦¤s. we select a period of 1 time steps for storing performance profiles and  thus  for choosing a new ¦¤s.
¡¡for each cop  we studied the frequency with which the csr of asie deviated from that of nsie  figure 1 . in each graph  using a different cop  the x-axis shows the different  percentage  csr deviations between asie and nsie. the y-axis shows the  percentage  duration of a simulation run for which the corresponding csr deviation  the x-value  was observed. thus  in figure 1 a   a 1% csr deviation was observed  asie worse than nsie by 1%  for 1% time of the simulation. we conclude:  1  at smaller cop values  asie performs better than sie by generating csrs that are closer to the baseline nsie. thus  the majority of the csr differences between asie and nsie is 1% for cop less than 1. for the same cop values  the mean csr differences between
sie and nsie is 1%  measured on the same topology but omitted here due to lack of space . so  the csr of asie is up to 1% closer to the benchmark than sie  implying a further improvement in the quality of task processing.  1  at higher cop values  sie performs slightly better than asie by achieveing csrs closer to nsie. thus  for cops 1 and 1  the csr difference in asie is mostly 1%  while for sie it is 1-1%. the slight decrease in asie performancecompared to sie is due to the limitation of a myopic algorithm  asie  in a dynamic environment  large cop .
now studying the ms of asie and sie  we observe: for all
cop  asie ensures higher bandwidth savings than sie: asie saves up to 1% compared to nsie  which is greater  by up to 1%  than the bandwidth savings of sie compared to nsie  plots omitted due to limited space .
	 c  cop = 1	 d  cop = 1
figure 1: csr difference between asie and nsie
1	non-uniform load
having a dynamic cop  varies between 1 and 1   we measure performances over time instead of steady-state averages.
 performance of sie: figure 1 shows the percentage differences of the csr and the ms between sie and nsie for topology 1  other topologies show similar trends . we conclude:  1  the higher the td  the smaller is the csr of sie than nsie  poorer routing than nsie  figure 1 a    and  1  the smaller is the ms of sie than nsie  more bandwidth savings than nsie  figure 1 b  . more typically  1% bandwidth saving is achieved incurring less than 1% loss in csr; further confirming that sie is more bandwidth efficient and its advantage thoroughly offsets its limitation.

	 a  csr difference	 b  ms difference
figure 1: csr and ms differences between sie and nsie
performance of asie: here  we use the performance profiles of uniform load experiments using the 1¡Á1 grid topology. this is a myopic choice since  with dynamic load  the cop values are different across nodes which was not the case in uniform load. now  at run-time  each agent estimates the average cop  cop    at its node over the past t  =1  time steps. then  it determines its ¦¤s value as: argminj ppcsr cop   ¦¤sj t   where ppcsr is the csr performance profile. the csr and ms differences between the above-mentioned asie system and nsie are shown in figure 1. we also run sie to compare it against nsie  results omitted due to space limitation . our results show  with non-uniform load  asie performed better than sie over all ¦¤s. thus  the mean csr difference in figure 1 a   about 1%  is smaller than the minimum csr difference  about 1%  achieved by sie across all ¦¤s  and the mean ms difference in figure 1 b   about 1%  is larger than the maximum ms difference  about 1%  achieved by sie  across all ¦¤s values. a fixed td for all nodes  as in sie  is not an effective strategy in dynamic load. rather  the nodes should adapt their communication behaviours; hence  asie outperforms sie.
1	conclusions
our novel protocol for selective information-sharing effectively trades off communication utility and cost in resource constrained mas. it uses information redundancy for communication decisions to save bandwidth and achieve good coordination. furthermore  it adapts the selectivity levels using stored performance profiles. empirical studies on a call routing problem shows  compared to the most effective communication strategy currently available  our protocolachieves

	 a  csr difference	 b  ms difference
 figure 1: csr and ms differences between asie and nsie significant bandwidth savings  while achieving only a slightly lower throughput. the adaptive strategy achieves further improvements over the non-adaptive one.
acknowledgements: this research was undertaken as part of the aladdin  autonomous learning agents for decentralised data and information systems  project and is jointly funded by a bae systems and epsrc  engineering and physical research council  strategic partnership  ep/c1 .
