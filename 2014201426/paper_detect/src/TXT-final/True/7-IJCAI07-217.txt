
multi-issue negotiation protocolshave been studied widely and represent a promising field since most negotiation problems in the real world involve interdependent multiple issues. the vast majority of this work has assumed that negotiation issues are independent  so agents can aggregate the utilities of the issue values by simple summation  producing linear utility functions. in the real world  however  such aggregations are often unrealistic. we cannot  for example  just add up the value of car's carburetor and the value of car's engine when engineers negotiate over the design a car. these value of these choices are interdependent  resulting in nonlinear utility functions. in this paper  we address this important gap in current negotiation techniques. we propose a negotiation protocol where agents employ adjusted sampling to generate proposals  and a bidding-based mechanism is used to find social-welfare maximizing deals. our experimental results show that our method substantially outperforms existing methods in large nonlinear utility spaces like those found in real world contexts.
1 introduction
multi-issue negotiation protocols represent a important field of study since negotiation problems in the real world are often complex ones involving multiple issues. while there has been a lot of previous work in this area   faratin et al.  1; fatima et al.  1; lau  1; soh and li  1   these efforts have  to date  dealt almost exclusively with simple negotiations involving independent mltiple issues  and therefore linear  single optimum  utility functions. many realworld negotiation problems  however  involve interdependent multiple issues. when designers work together to design a car  for example  the value of a given carburetor is highly dependent on which engine is chosen. the addition of such interdependencies greatly complicates the agent's utility functions  making them nonlinear  with multiple optima. negotiation mechanisms that are well-suited for linear utility functions  unfortunately  fare poorly when applied to nonlinear problems   klein et al.  1  .
　we propose a bidding-based multiple-issue negotiation protocol suited for agents with such nonlinear utility functions. agents generate bids by sampling their own utility functions to find local optima  and then using constraintbased bids to compactly describe regions that have large utility values for that agent. these techniques make bid generation computationally tractable even in large  e.g.  1 contracts  utility spaces. a mediator then finds a combination of bids that maximizes social welfare. our experimental results show that our method substantially outperforms negotiation methods designed for linear utility functions. we also show that our protocol can guarantee optimality in the theoretical limit.
　the remainder of the paper is organized as follows. first we describe a model of non-linear multi-issue negotiation. second  we describe a bidding-basednegotiation protocol designed for such contexts. third  we present experimental assessment of this protocol. finally  we compare our work with previous efforts  and conclude with a discussion of possible avenues for future work.
1 negotiation with nonlinear utilities
we consider the situation where n agents want to reach an agreement. there are m issues  sj （ s  to be negotiated. the number of issues represents the number of dimensions of the utility space. for example  if there are 1 issues1  the utility space has 1 dimensions. an issue sj has a value drawn from the domain of integers  1 x   i.e.  sj （  1 x 1. a contract is represented by a vector of issue values s =  s1 ... sm .
　an agent's utility function is described in terms of constraints. there are l constraints  ck （ c. each constraint represents a region with one or more dimensions  and has an

figure 1: a nonlinear utility space for a single agent
associated utility value. a constraint ck has value if and only if it is satisfied by contract s. figure 1 shows an example of a binary constraint between issues 1 and 1. this constraint has a value of 1  and holds if the value for issue 1 is in the range  1  and the value for issue 1 is in the range  1 . every agent has its' own  typically unique  set of constraints.
an agent's utility for a contract s is defined as
  where x ck  is a set of possible
contracts  solutions  of ck. this expression produces a  bumpy  nonlinear utility space  with high points where many constraints are satisfied  and lower regions where few or no constraints are satisfied. this represents a crucial departure from previous efforts on multi-issue negotiation  where contract utility is calculated as the weighted sum of the utilities for individual issues  producing utility functions shaped like flat hyper-planes with a single optimum. figure 1 shows an example of a nonlinear utility space. there are 1 issues  i.e.  1 dimensions  with domains  1 . there are 1 unary constraints  i.e.  that relate to 1 issue  as well as 1 binary constraints  i.e.  that inter-relate 1 issues . the utility space is  as we can see  highly nonlinear  with many hills and valleys.
　we assume  as is common in negotiation contexts  that agents do not share their utility functions with each other  in order to preserve a competitive edge. it will generally be the case  in fact  that agents do not fully know their desirable contracts in advance  because each own utility functions are simply too large. if we have 1 issues with 1 possible values per issue  for example  this produces a space of 1  1

figure 1: adjusting the sampled contract points
billion  possible contracts  too many to evaluate exhaustively. agents must thus operate in a highly uncertain environment.
　finding an optimal contract for individual agents with such utility spaces can be handled using well-known nonlinear optimization techniques such a simulated annealing or evolutionary algorithms. we can not employ such methods for negotiation purposes  however  because they require that agents fully reveal their utility functions to a third party  which is generally unrealistic in negotiation contexts.
　the objective function for our protocol can be described as follows:
	argmax	 1 
i（n
our protocol  in other words  tries to find contracts that maximize social welfare  i.e.  the total utilities for all agents. such contracts  by definition  will also be pareto-optimal.
1 the bidding-based negotiation protocol
our bidding-based negotiation protocol consists of the following four steps:
 step 1: sampling  each agent samples its utility space in order to find high-utility contract regions. a fixed number of samples are taken from a range of random points  drawing from a uniform distribution. note that  if the number of samples is too low  the agent may miss some high utility regions in its contract space  and thereby potentially end up with a sub-optimal contract.
 step 1: adjusting  there is no guarantee  of course  that a given sample will lie on a locally optimal contract. each agent  therefore  uses a nonlinear optimizer based on simulated annealing to try to find the local optimum in its neighborhood. figure 1 exemplifies this concept. in this figure  a black dot is a sampling point and a white dot is a locally optimal contract point.
 step1: bidding  for each contracts found by adjusted sampling  an agent evaluates its utility by summation of values of satisfied constraints. if that utility is larger than the reservation value δ  then the agent defines a bid that covers all the contracts in the region which have that utility value. this is easy to do: the agent need merely find the intersection of all the constraints satisfied by that s.
steps 1  1 and 1 can be captured as follows:
sn: the number of samples
t: temperature for simulated annealing
v : a set of values for each issue  vm is for an issue m
1: procedure bid-generation with sa th  sn  v  t 

figure 1: deal identification
1:	psmpl :=  
1:	while |psmpl|   sn
1:	psmpl := psmpl “ {pi}  randomly selected from p 
1:	p := Πm|i|=1vm  psa :=  
1:	for each p （ psmpl do 1:	 simulatedannealing p t 
1:	
1:	for each p （ psa do
1:	u := 1  b :=    bc :=  
1:	for each c （ c do
1:	if c contains p as a contract and p satisfies c then
1:	bc := bc “ c
1:	u := u + vc
1:	if u  = th then
1:	b := b “  u bc 
 step 1: deal identification  the mediator identifies the final contract by finding all the combinations of bids  one from each agent  that are mutually consistent  i.e.  that specify overlapping contract regions1. if there is more than one such overlap the mediator selects the one with the highest summed bid value  and thus  assuming truthful bidding  the highest social welfare   see figure 1 . each bidder pays the value of its winning bid to the mediator.
　the mediator employs breadth-firstsearch with branch cutting to find social-welfare-maximizing overlaps:
ag: a set of agents
b: a set of bid-set of each agent  b = {b1 b1 ... bn}  a set of bids from agent i is bi = {bi 1 bi 1 ... bi m} 
1:
1:	:=	（b1{ 1 j}  i := 1
1:	do
1: for each s （ sc do 1: for each bi j （ bi do
1:	
1:	is consistent then
1:	
1:maxsolution = getmaxsolution sc 1:return maxsolution　it is easy to show that  in theory  this approach can be guaranteed to find optimal contracts. if every agent exhaustively samples every contract in its utility space  and has a reservation value of zero  then it will generate bids that represent the agent's complete utility function. the mediator  with the complete utility functions for all agents in hand  can use exhaustive search over all bid combinations to find the social welfare maximizing negotiation outcome. but this approach is only practical for very small contract spaces. the computational cost of generating bids and finding winning combinations grows rapidly as the size of the contract space increases. as a practical matter  we have to limit the number of bids the agents can generate. thus  deal identification can terminatein a reasonable amount of time. but limiting the number of bids raises the possibility that we will miss the optimum contract. the bid limit thus mediates a tradeoff between outcome optimality and computational cost. we will explore this tradeoff later in the paper.
1 experiments
1 setting
we conducted several experiments to evaluate the effectiveness and scalability of our approach. in each experiment  we ran 1 negotiations between agents with randomly generated utility functions. for each run  we applied an optimizer to the sum of all the agents' utility functions to find the contract with the highest possible social welfare. this value was used to assess the efficiency  i.e.  how closely optimal social welfare was approached  of the negotiation protocols. to find the optimum contract  we used simulated annealing  sa  because exhaustive search became intractable as the number of issues grew too large.thesa initial temperaturewas 1 and decreased linearly to 1 over the course of 1 iterations. the initial contract for each sa run was randomly selected.
　we compared two negotiation protocols: hill-climbing  hc   and our bidding-based protocol with random sampling  ar . the hc approach implements a mediated single-text negotiation protocol  raiffa  1   based on hill-climbing. we start with a randomly generated baseline contract. the mediator then generates a variant of that baseline and submits it for consideration to the negotiating agents. if all the agents prefer the variant over its predecessor  the variant becomes the new baseline. this process continues until the mediator can no longer find any changes that all the agents can accept: i: a set of issues  i = {i1 i1 ... in}
v : a set of values for each issue  vn is for an issue n
1: procedure systematicls i v  
1:	s := initial solution  set randomly 
1:	for each i （ i do
1:	for each j （ vi do
1:	with issue i's value set to j
1:	if all agents accept s then
1: return s
　in our implementation  every possible single-issue change was proposed once  so the hc protocol requires only  domain size  〜  number of issues  iterations for each negotiation  e.g.  1 steps for the 1 issue case with domain  1  . we selected this protocol as a comparison case because it represents a typical example of the negotiation protocols that have been applied successfully  in previous research efforts  to linear utility spaces.
the parameters for our experiments were as follows:
  number of agents is n = 1 to 1. number of issues is 1 to 1. domain for issue values is  1 .
  constraints for linear utility spaces : 1 unary constraints.
  constraints for nonlinear utility spaces: 1 unary constraints  1 binary constraints  1 trinary contraints  etc.  a unary contraint relates to one issue  an binary constraint relates to two issues  and so on .
  the	maximum value for	a	constraint :	1 〜
 number of issues . constraints that satisfy many issues thus have  on average  larger weights. this seems reasonable for many domains. in meeting scheduling  for example  higher order constraints concern more people than lower order constraints  so they are more important for that reason.
  the maximum width for a constraint : 1. the following constraints  therefore  would all be valid: issue 1 =  1   issue 1 =  1  and issue 1 =  1 .   the number of samples taken during random sampling:  number of issues  〜 1.
  annealing schedule for sample adjustment: initial temperature 1  1 iterations. note that it is important that the annealer not run too long or too 'hot'  because then each sample will tend to find the global optimum instead of the peak of the optimum nearest the sampling point.   the reservation value threshold agents used to select which bids to make: 1.the threshold is used to cut out contract points which have low utility.   the limitation on the number of bids per agent:  agents. it was only practical to run the deal identification algorithm if it explored no more table 1: optimality with linear utility functions  for 1 agents
issues111hc11111issues111hc11111
figure 1: social welfare with nonlinear utility functions
than about 1 bid combinations  which implies a limit of bids per agent  for n agents.
　in our experiments  we ran 1 negotiations in every condition. our code was implemented in java 1  1.1  and run on a dual 1ghz processor powermac g1 with 1gb memory under mac os x 1.
1 results
let us first consider the linear utility function  independent issue  case that has been the focus of almost all previous work on multi-issue negotiation. as we can see  table 1   even the simple hc protocol produces essentially optimal results for a wide range of contract space dimensions. this is easy to understand. since the issues are independent  the mediator can optimize over each issue independently  first finding the most-favored value for issue 1  then for issue 1  and so on. once every issue has been optimized  the final contract will generally be very close to optimal  though full optimality can not be guaranteed because the hc protocol does not explore whether offsetting concessions between different agents - aka logrolling - could somewhat increase social welfare .
　we used hill-climbing to confirmhow inefficientthe simple hill-climbing is for the multiple interdependent-issues case even if the hill climbing performs well in the single issue cases. as shown in the experimental result  our proposing method is much better than the simple hill-climbing. of course  if we take multiple hill-climbing and pick the best result  it could make good quality solution. however  that is not completely straightforward. after the multiple hill-climbing  it is a problem how to pick the  best  result when the agents differ concerning which results are better.
　the story changes dramatically  however  when we move to a nonlinear utility function  interdependent issue  case  figure 1 shows 1 agents case . in this context  hc produces highly suboptimal results  averaging only 1% of optimal  for example  for the 1 issue case. why does this happen  since every agent has a  bumpy   multi-optimum  utility function  the hc mediator's search for better contracts grinds to a halt

figure 1: cpu time  ms  with 1 agents
as soon as any of the agents reach a local optimum  even if a contract which is better for all agents exists somewhere else in the contract space. the ar protocol  by contrast  achieves much better  often near-optimal  outcomes for higher-order problems. for example  even for the 1 issue case  ar protocol can secure 1% of optimal  which is twice as good as hc. since agents using the ar protocol generate bids that cover multiple optima in their utility spaces  our chances of finding contracts that are favored by all agents is greatly increased.
　the increased social welfare of our bidding-based protocol does  however  come at a cost. figure 1 shows the computation time needed by the hc and ar negotiation protocols with 1 agents. hc has by far the lowest computationalcost  as is to be expected considering that agents do not need to generate bids themselves and need consider only a relative handful of proposals from the mediator. hc's computational needs grow linearly with problem size. in the ar protocol  by contrast  the bid generation computation increases linearly with problemsize  and the deal identification times increases exponentially  as  # of bids per agent  # of agents  . at some point  the deal identification cost becomes simply too great. this explains why social welfare optimality begins to drop off  in figure 1  when the number of issues exceeds 1. in our computing environment  the deal identification algorithm can find results in a reasonable period of time if the total number of bid combinationsis less than 1 1. with 1 agents  this implies a limit of = 1 bids per agent. the number of bids generated per agent begins to grow beyond that limit as we go to 1 or more issues  see table 1 . this means that the mediator is forced to start ignoring some  lower-valued  submitted bids  with the result that social-welfaremaximizing contracts are more likely to be missed.
　in figure 1  we summarize the impact of these scaling considerations. this figure shows the social welfare optimality of the ar protocol  for different numbers of issues and agents  given that the mediator limits the number of bids per agent  . as we can see  ar produces outcomes with 1%+ optimality for up to 1 issues  depending on the number of agents.
　we can expect that the optimality will be improved by increasing the number of samples an agent takes of its own utility space  when searching for bids. in our original setting  the number of samples was increased by 1 per issue. for

figure 1: scalability with the number of agents

figure 1: tradeoff of optimality vs sampling rate
comparison  we conducted experiments in which the number of samples per issue was increased at other  still linear  rates: by 1 samples per issue  1 samples per issue  our original setting   1 samples per issue  and so on. the result of this comparison are shown in figure 1. as we can see  the optimality rate became better when there were more sampling points. there is  however  a down side to this. table 1 shows the failure rate  i.e.  the percentage of negotiations that do not lead to an agreement  for each setting. paradoxically  the failure rate is higher when there are more sampling points  especially for problems with more issues. when there are many sampling points  each agent has a better chance of finding really good local optima in its utility space  contracts on top of hills that are more likely to be narrow than wide. since the number of bids is limited due to deal identification algorithm's computation time  an agent can cover only a narrow portion of its utility space with own bids. as a result  we run an increased risk of not finding an overlap between the bids from the negotiating agents.
1 discussion
while deal identification in our protocol appears superficially similar to deal identification in combinatorial auctions   sandholm et al.  1    in reality they are fundamentally different  and as a result we have been unable to take advantages of the recent works on developing more efficient deal identification algorithms. these algorithms address a  sharing  problem: the challenge is to allocate resources to buyers in a way that maximizes social welfare  with the constraint that each resource may have only a single  winner . our protocol  by contrast  raises a  fit  problem: the chal-
table 1: number of sample points and the number of bids per agent
issues11111num. of samples11111bids per agent11111table 1: failure rate  % 
	1	1	1
11111111111111111111111111111111lenge is to find a resource  contract region  that maximizes social welfare  with the constraint that every agent is a  winner   i.e.  every agent offered at least one bid for that region . for the same reason  even though our protocol seems to involve a straightforward constraint optimization problem  i.e.  where bids can be viewed as weighted constraints   we have been unable to take advantages of the high efficiency constraint optimizers that have emerged in recent years   davin and modi  1  . such solvers attempt to find the solution s  that maximize the weights of the satisfied constraints  but they do not account for the crucial additional requirement that the final solution include one constraint from each bidder. our protocol thus involves a novel class of deal identification. it is our hope that we will be able to incorporate ideas from combinatorial auction deal identification and constraint optimization to develop more efficient algorithms for our context.
　most previous work on multi-issue negotiation   bosse and jonker  1; faratin et al.  1; fatima et al.  1   has addressed only linear utilities. a handful of efforts have  however considered nonlinearutilities.  lin and chou  1  has explored a range of protocols based on mutation and selection on binary contracts. this paper does not describe what kind of utility functions are used  nor does it present any experimental analyses. it is therefore unclear whether this strategy enables sufficient exploration of the utility space to find win-win solutions with multi-optima utility functions.  barbuceanu and lo  1  presents an approach based on constraint relaxation. in the proposed approach  a contract is defined as a goal tree  with a set of on/off labels for each goal  which represents the desire that an attribute value is within a given range. there are constraints that describe what patterns of on/off labels are allowable. this approach may face serious scalability limitations. however  there is no experimental analysis and this paper presents only a small toy problem with 1 contracts.  luo et al.  1  also presents constraint based approach. in this paper  a negotiation problem is modeled as a distributed constraint optimization problem. during exchanging proposals  agents relax their constraints  which express preferences over multiple attributes  over time to reach an agreement. this paper claims the proposed algorithm is optimal  but do not discuss computational omplexity and provides only a single small-scale example. the work presented here is distinguished by demonstrating both scalability  and high optimality values  for multilateral negotiations and higher order dependencies.
1 conclusions and future work
in this paper  we have proposed a novel auction-based protocol designed for the important challenge of negotiation with multiple interdependentissues and thus nonlinearutility functions. our experimental results show that our method substantially outperforms protocols that have been applied successfully in linear domains. possible future work in this area includes improving scalability by developing fast approximate bid generation and deal identification algorithms  as well as by adopting iterative  multi-stage  auction protocols.
