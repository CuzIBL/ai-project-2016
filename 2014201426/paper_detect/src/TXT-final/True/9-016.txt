 
　　a r e f u t a t i o n a l system of l o g i c f o r a language of order 	w 	ia presented. 	this langage is a s l i g h t m o d i f i c a t i o n o f 	church's 	  - c a l c u l u s 	w i t h t y p e s . 	the system is complete  	in the sense t h a t a r e f u t a t i o n of a set of sentences e x i s t s 
if and o n l y if 	t h i s 	set does not possess 	a gene-
r a l henkin model. 	the main r u l e of inference is a g e n e r a l i z a t i o n of robinson's 	r e s o l u t i o n to type t h e o r y   which allows us to get r i d of the s u b s t i t u t i o n 	r u l e . 
introduction 
　　during the l a s t decade  a l o t of e f f o r t in automatic theorem p r o v i n g has been devoted to 
mechanizing 	f i r s t - o r d e r l o g i c . 	the main a c h i e -
vement has been the d e f i n i t i o n by j.a*robinson1 
of a now well-known r e f u t a t i o n a l f i r s t - o r d e r system. i t s unique r u l e o f i n f e r e n c e   c a l l e d 
r e s o l u t i o n   	is an elegant way of combining the s u b s t i t u t i o n and cut r u l e s . 	the other f a m i l i a r 
r u l e s 	of 	inference 	are 	i m p l i c i t l y 	taken 	care 	of by skolemization and the set r e p r e s e n t a t i o n  clauses  	of the 	conjunctive normal form of the set of sentences one wants to r e f u t e . more p r e c i s e l y   	r e s o l u t i o n permits us to s e l e c t j u s t the s u b s t i t u t i o n s which are necessary f o r 	the cut of 
two o r more l i t e r a l s . moreover  i f t h i s cut i s possible at a l l   o n l y one such s u b s t i t u t i o n is s u f f i c i e n t   c a l l e d the most g e n e r a l u n i f i e r of the two l i t e r a l s . this existence of a most gener a l u n i f i e r between two terms i n f i r s t - o r d e r l o g i c is fundamental to the r e s o l u t i o n method. 
many a theorem proving program was w r i t t e n based on the r e s o l u t i o n r u l e   embodying v a r i o u s h e u r i s t i c s to speed up the search f o r a r e f u t a t i o n . however  r e s u l t s obtained sc f a r are s t i l l very l i m i t e d w i t h o u t human h e l p . to remedy t h i s s i t u a -
t i o n   	some workers in the f i e l d   n o t a b l y 
robinsonj 	have argued f o r the e x p l o r a t i o n of more powerful systems of l o g i c such as church's   - c a l c u l u s . 
higher order unification 
　　the s i t u a t i o n i n h i g h e r - o r d e r l o g i c i s q u i t e d i f f e r e n t from f i r s t - o r d e r . most general u n i f i e r s do not e x i s t any more  gould1 . 
1 







　　this system uses the constraints mechanism to delay as much as possible the process of u n i f i cation. this has two advantages. first  the dee-
per we go in a refutation  the more information we gather about the structure of the terms we 
need to substitute. this reduces our search space for unifiers  intuitively  the more argu-
ment-value pairs we know  the less functions exist whose graphs contain these pairs . 
　　second  we just need to check for the existence of some unifier  we do not need most gene-
r a l ones. this permits us never to consider the unification of two terms whose heads are variables  such as : 
   these cases are the most d i f f i c u l t ones to consider for most general unification  but they are t r i v i a l when we need only check for existence of unifiers  take any constant function . actually we need to compose only two elementary unification processes  called imitation and projection   whereas to get most general unifiers fietrzykowski and jensen1 need four  the other two being the most p r o l i f i c ones indeed. this is because when we consider a pair such as f a1  a 1   . . .   a   and f b1   b1...... b    we know something definite about the structure of the common instance   i t must begin with an f  and so we have a  handle  on the unification process. 
   a disadvantage of the delaying of unification is that we diay generate clauses whose cons traints cannot be satisfied and this is why some processing of these constraints is necessary. in many cases we w i l l know a most general 
unifier of some constraint and this unifier 
should be applied to the clause. in other cases we may know that no substitution w i l l unify the constraints  and then we should delete the clause. there is a trade-off here in the amount 
of unifying while searching which should be done. automatic theorem proving is undoubtedly more d i f f i c u l t here than in first-order logic. however our higher-order language permits us to state many theorems in a more concise way  and refutations tend to be a lot shorter. for 
instance  in our examples  we used set varia-
bles in a very natural way  using their charact e r i s t i c predicates . we could get a l l the 
 properties of e with application  of complementation with land of union with v . also the 
conclusion abstraction mechanism of  -calculus replaces in a nice way cumbersome comprehension axioms. 
　　it is d i f f i c u l t to make any e f f i c i e n c y however we might s t i l l need use some axioms a s s e r t i o n from searchless examples. however  of descriptions  to assert the existence of one of the most important h e u r i s t i c rules to certain functions : use in t h i s system would be to throw out clauses w i t h c o n s t r a i n t s which are obviously not u n i f i a -
b l e . 	in p r a c t i c e 	of course most clauses w i l l be 
recognized as such  thereby reducing sharply the when we need to substitute non-atomic proponumber of possible d e r i v a t i o n s . sitions for predicate variables  via s p l i t t i n g   
     types in t h i s l o g i c play a m u l t i p l e r o l e . refutations tend to become messy and unnatural. f i r s t   they permit us to have   normal forms the system should be improved on this point  f o r a l l terms. second  they can be used to sort maybe by replacing s p l i t t i n g by rules closer to objects of d i f f e r e n t n a t u r e   and so we get r e s - natural deduction. this would also allow us to t r i c t e d q u a n t i f i c a t i o n w i t h o u t adding cumbersome get r i d of the i n i t i a l reduction to clause form  a d d i t i o n a l l i t e r a l s . f i n a l l y   as a consequence which is not always desirable  and to use w e l l they r e s t r i c t the search f o r u n i f i e r s . known techniques to decrease the complexity of 
1 

r e f u t a t i o n s 	 ernst1  . 	only then can we hope to deal w i t h proofs by i n d u c t i o n in a s a t i s f a c t o r y way. 
     in conclusion  we have presented in t h i s paper a system of l o g i c which is a g e n e r a l i z a t i o n to church's type theory of robinson's r e s o l u t i o n . this system seems w e l l suited to mechan i z i n g proofs which r e q u i r e complex s u b s t i t u t i t i o n s f o r f u n c t i o n v a r i a b l e s   as shown in a few 
hand-simulated examples. s u b s t i t u t i o n s on nonatomic p r o p o s i t i o n s f o r predicate v a r i a b l e s are not d e a l t w i t h in a very s a t i s f a c t o r y way y e t   and some improvement is needed t h e r e . our s y s tem w i t h o u t e x t e n s i o n a l i t y is equivalent to andrews' system. however it is amenable to a u t o matic treatment because the s u b s t i t u t i o n r u l e has disappeared. our system w i t h e x t e n s i o n a l i t y ought to be equivalent to p i e t r z y k o w s k i ' s s y s tem  and i t i s conjectured t h a t i t i s more e f f i c i e n t . a p a r t i a l implementation is in progress at iria  mechanising constrained r e s o l u t i o n 
without s p l i t t i n g . the emphasis w i l l be put on the h e u r i s t i c r u l e s f o r processing c o n s t r a i n t s 
during the r e f u t a t i o n . 
acknowledgements 
     this paper presents r e s u l t s contained in the author's ph.d. t h e s i s at case western reser-
ve u n i v e r s i t y   under the d i r e c t i o n of pr. g.w. e r n s t . this research  was supported by the national science foundation under grant n＜ gj-m1. 
     the author wishes to thank the referees f o r t h e i r h e l p f u l comments. 
bibliography 
1 andrews 	p.b.c1  
resolution in type theory 
journal of symbolic logic 1 pp.1. 
1 andrews p.b. 1  general models and extensionality. 
journal of symbolic logic 1 pp. 1. 
1 church a.  1  
a formulation of the simple theory of types. journal of symbolic logic 1 pp. 1. 
1 church a.  1  
the calculi of lambda-conversion. 
annals of mathematical studies no.1. princeton university press. 
1 curry h.b. and feys r.  1  combinatory logic  vol 1  north holland  amsterdam. 
1 ernst g.w. 1  
a matching procedure f o r type theory. computing and i n f o r m a t i o n sciences  case western reserve u n i v e r s i t y . 
1 ernst g.w. 1  
the u t i l i t y of independent subgoals in theorem proving. 
information and control 1 pp. 1. 
1 gould w.e 1  
a matching procedure f o r in-order l o g i c . s c i e n t i f i c report n＜1  afcrl 1  contract af 1  1 -1  ad-1. 
1 henkin 	i. 1  
completeness in the theory of types. 
journal of symbolic logic 1 pp. 1. 
1 huet g.p.  1  
constrained r e s o l u t i o n : a complete method f o r higher order l o g i c . 
ph.d. thesis  case western beserve univ. jennings computing center report 1. 
1 huet g.p. 	 1  
the 	u n d e c i d a b i l i t y 	o f u n i f i c a t i o n i n t h i r d order 	l o g i c . 
information and control 1 pp. 1. 
1 pietrzykowski 	t. 1  
a complete mechanization of second order l o g i c . 
report csrr 1  department of applied 
analysis and computer science  university of waterloo. 
also journal of assoc  f o r comp. mach. 1 pp. 1. 
1 pietrzykowski i. and jensen d.  1  a complete mechanization of w-order type t h e o r y . 
report cssr 1  department of applied analysis and computer science  university of waterloo. 
also assoc  for comp. mach. national conf.  1 . vol 1  pp. 1. 
1 robinson j.a. 1  
a machine-oriented l o g i c based on the r e s o l u t i o n p r i n c i p l e . journal of assoc  f o r comp. mach. 1 pp. 1. 
1 robinson j.a. 1  new directions in theorem proving. 
proceedings of ifip congress edinburgh august 1 in information processing 1  vol 1 pp. 1  north-holland  amsterdam. 
1 robinson j.a. 	 1 . 
	mechanizing 	higher order logic. 
	machine intelligence 1  pp. 	1. 
american elsevier  new york. 

1 
