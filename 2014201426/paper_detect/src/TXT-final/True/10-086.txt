failure handling in a dialogue system 
gretchen p. brown 
laboratory for computer science 
massachusetts institute of technology cambridge  massachusetts 1 
　　　this note focusses on the relative difficulty of handling general failure situations and failures that occur in natural language dialogue.1 the observations made here have grown out of work on a system to handle mixed-initiative taskoriented typed dialogue called susie software   which is embedded in the owl knowledge representation system  1 
　　　failure can be defined as a state that occurs after the violation of an expectation; a common example of a dialogue failure would be a misunderstanding. our first observation is that dialogue failure can be just as complex as any other sort of failure. some dialogue failures require sophisticated analytic mechanisms to isolate their causes  and in some cases even detecting a failure will require substantial effort. in addition  dialogue failure introduces some complexities of its own. for example  it is necessary to distinguish between failures occurring in dialogue and those merely reported there. on the face of it this seems an obvious enough distinction  but in analyzing dialogue protocols there is a temptation to conflate the two. many reports of non-dialogue failures are also dialogue failures since the reports violate some of the hearer's expectations about the course that the dialogue will take.  the report may come as an interruption of  say  a question-answer sequence.  one should not conclude from this  however  that all reports of external failure are necessarily dialogue failures as well; to do so would be to adopt an oversimplified model that will lead to confusion. 
　　　another special complexity is introduced by the ambiguity of language. a dialogue participant not only detects failures directly  for example  if he himself does not know the answer to a question  but also has failures reported to him by the other participant. failures that are simple to detect when experienced directly may require more analysis when experienced secondhand because there is the additional mediation of language. 
　　　as intractable as the problem of handling dialogue failure may appear from this brief summary  our experience in work on the susie software system suggests that there are some areas of promise. in many cases  failure detection and recovery method selection is a straightforward process  both where failure manifestations are observed directly by an individual and where he must recognize them when reported by the other participant. individual failures tend to have a small set of 
1. this work was supported by the advanced research projects agency of the department of defense and was monitored by the office of naval research under contract number n1-c-1. 
very routine signals and recovery measures. truly novel methods of recovery from dialogue failures are rare in our experience  especially in a task-oriented environment. this is apparently due to the fact that dialogue is heavily dependent on a set of conventions understood by both parties. 
　　　another encouraging factor is that we have found routine recovery measures for dialogue failures to be generally simple enough so that unwanted interactions with other goals are readily predictable. this does not mean that interactions are necessarily easy to avoid  just that the fact that an interaction may occur can often be detected in a straightforward manner. an example of such an interaction would be the clash between a high level goal to minimize requests to a conversational partner and the need to get more information to recover from a failure. once a potential interaction is detected  a system can switch strategies  e.g.  choose a recovery measure that requires more work but involves less interaction. 
　　　finally  the extra mediation of language introduced in secondhand failure detection does not present as many problems as we might expect  since the failure reports that must be recognized in dialogue tend to be well marked  often with special discourse structures. typical examples include  do you mean ...    i don't understand.  and  wait a minute.  
　　　the susie software system takes advantage of these simplifying factors in a number of different ways. first  since conventions play such an important role in failure recovery  they have been given a prominent place in the system. owl methods  which are a declarative representation of procedural knowledge  are used to represent many sorts of dialogue conventions  and a special structure called a recovery path has been introduced to represent the more routine ways to recover from dialogue failures. second  we distinguish different categories of failure and use several different recovery mechanisms ordered in terms of their power. this allows us to handle the simple failures simply  using more powerful mechanisms only where necessary. the implementation is also carefully designed so that failures detected firsthand and those detected through reports of the conversational partner can be modelled by similar structures. 
　　　in summary  our experience has been that  although dialogue failures can be arbitrarily complex  many exhibit properties that make them particularly amenable to handling in an appropriately designed dialogue system. 
