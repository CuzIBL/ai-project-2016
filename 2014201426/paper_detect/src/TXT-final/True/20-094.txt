 
     we have been engaged in work about the propagation of temporal constraints in the domain of job-shop scheduling. many systems have been or are currently used to propagate temporal constraints. however  very few attempts have been made to build systems in which the amount of computational effort spent in constraint propagation is not fixed once for all. we do believe various pieces of knowledge can be used to dynamically adjust the amount of propagation. consequently  we advocate the use of a flexible propagation system. we describe such a system and discuss control knowledge enabling dynamic adaptation of the amount of propagation to the needs of a problem solver. we also provide examples in the domain of job-shop scheduling. 
i the usefulness of controlling constraint propagation 
     constraint propagation is a deductive activity performed by a propagation system for a problem solver. it enables the problem solver to decompose a problem without neglecting interactions between subproblems  determine which subproblems are more constrained and focus attention accordingly. the propagation system also detects inconsistencies between three kinds of constraints: 
  initial constraints partially describe the problem to be solved. 
  decisions made by the problem solver refine these constraints and gradually reduce the search space. 
  deviation constraints  appearing in real-time  describe differences between the problem solver predictions and the actual course of events. 
     as soon as disjunctive constraints are considered  the problem of determining whether a given set of constraints is consistent is np-hard. therefore  two kinds of propagation systems can be distinguished. complete systems guarantee consistency but are often useless for complexity reasons. polynomial systems are  until p=np  unable to immediately detect each contradiction. in general  a polynomial propagation system finds out a contradiction when the problem solver has already made decisions and refined constraints; a large amount of search is wasted since the problem solver explores spaces devoid of solutions. similarly  all the consequences of a deviation are not immediately assessed. therefore  the problem solver may be tardily warned of a need for plan revision and forced to make ill-considered reactive decisions. 
     many constraint propagation systems have been or are currently used within problem solvers. most of these perform a fixed amount of propagation - the trade-off between the anticipation of interactions and the amount of computational effort spent in constraint propagation is set once for all - and 
1 	reasoning 
systems in which the amount of propagation can be modified are designed to reduce propagation with respect to a predetermined set of particular parameters  reference intervals in  allen 1   levels of precision in  le pape and smith 1  . ad-hoc systems  e.g.  le pape and smith 1    implemented as part of and in the formalism of particular problem solvers  efficiently deduce just enough information for their problem solver to work properly. however  additional analysis may sensibly improve the problem solver capabilities of pruning the search space and reacting to unanticipated events. on the other hand  problemsolver independent propagation systems  e.g.  allen 1   are based on a theory and can be integrated into many problem solvers. unfortunately  they may provide more or less information than needed. indeed  the amount of propagation that enables a problem solver to be the most efficient varies from one problem to the other. it also varies dynamically during the search of a solution. 
     we do believe various pieces of knowledge can be used to dynamically adjust the amount of propagation. consequently  we advocate the use of a flexible propagation system. section ii describes such a system designed for propagating temporal constraints. section iii is concerned with control knowledge allowing to adapt this system and provides examples in the domain of job-shop scheduling. resulting benefits and remaining difficulties are discussed in section iv. 
ii a flexible propagation system 
     our temporal propagation system consists of a set of axioms and an interpreter. 
  axioms constitute a theory of temporal constraint propagation which can be extended even though it already contains the underlying theories of several systems described in  allen 1  le pape 1  rit 1 . 
  the interpreter uses the theory consistently with control rules which collectively specify what is expected from the propagation system. control rules serve as an interface between the problem solver and the interpreter. 
a. 	a theory of temporal constraint propagation 
     the basic time objects considered by the propagation system are called  events . within the theory  each event is identified with an interval of time during which it occurs. this means an event x is defined as having only a start point  start x  and an end point  end x . symbolic interval-based constraints are used to express various temporal relationships between events  e.g. precedence relation between two events x and y . numeric point-based constraints are used to represent minimum and maximum distances between time points along a time line  e.g. duration between  end x  and  start yj . while propagating 

symbolic constraints is more efficient and natural  the numeric representation is needed to refine the symbolic relations and take into account lower and upper bounds for durations and waits between events. 
four sources of knowledge make up the whole theory. 
  logic axioms concern the manipulation of formulas containing disjunctions  conjonctions and negations. they constitute a variant of propositional logic. 
  symbolic axioms deal with the thirteen relations of allen  allen 1 . 
  numeric axioms deal with the manipulation of inequalities in totally ordered abelian groups. 
 translation axioms enable to convert symbolic constraints 
into numeric constraints  e.g. 
the converse is 
also possible  but the numeric information about distances is lost. 
an inconsistency is detected when the application of axioms leads to the empty clause. 
     the theory can be used when a model of time is defined in the form of a totally ordered abelian group*. each time point is considered as a variable the range of which is the group. the theory is complete: given a set of constraints  it enables to state whether values can be assigned to time points without violating any constraint. 
b. the interpreter 
     within the interpreter  several propagation activities are distinguished: 
  constraint combination consists in building a new constraint from a set of existing constraints. 
  subsumption enables to hide a constraint the satisfaction of which results from the satisfaction of another constraint. 
  cancellation enables to remove a constraint. 
  restoration 	consists 	in 	reinstating 	previously 	subsumed constraints. 
  reduction consists in taking from a constraint what concerns a single time point or interval. 
  rewriting enables to gather constraints together into conjunctions  to split conjunctions  to write constraints in normal forms and to translate constraints from a symbolic to a numeric representation  and conversely . 
the role of the interpreter is to coordinate these activities in accordance with the instructions of the problem solver. indeed  the problem solver cannot afford to devote too much of its processing time to a highly combinatorial propagation activity  i.e. to use the completeness of the theory to detect every contradiction as soon as it is introduced . through control rules  the problem solver restricts the use of the theory. 
     *a constant timeo and five functions time   time=  time  time+ and time- need to be provided. moreover  discrete and dense models are distinguished: in a discrete model  there is a 
     smallest positive element timel such that  time  a b  is equivalent to  time*  time* a timel  b . a slight alteration in the abelian group allows to look upon a dense model as a discrete model  le pape 1 . it enables our theory to address both discrete and dense models of time. 
the interpreter proceeds as follows: 
  when a constraint is added or removed  it determines which propagation activities can be performed. 
  for each considered activity  control rules specify conditions under which axioms can be used. the interpreter determines whether the concerned constraints satisfy these conditions. 
  if the conditions are satisfied  axioms are applied and data dependencies are recorded. dependency links are necessary for removing all the consequences of a cancelled constraint. moreover  they enable to provide descriptions of detected inconsistencies. 
when the empty clause is derived  a description of the detected inconsistency is sent to the problem solver. 
     control rules can address constraint features inherent to the problem domain as well as domain independent features. within the theory  events are merely time intervals and constraints are formulas. domain independent features relate to these formulas  e g. disjunctive  numeric  symbolic  binary formulas . within a problem solver  an event is much more than an interval of time: it corresponds to the performance of an action or to the persistence of a fact. similarly  constraints partially describe a problem solving situation in terms of goals  restrictions  deviations and consequences of decisions. a lot of data are attached to events and constraints. the conditions specified by control rules can refer to this information. 
ill controlling the flexible propagation system 
     through control rules  the problem solver indicates how to pertinently use the propagation axioms. setting these rules requires to take into account the following facts: 
  a minimum amount of propagation is necessary for the problem solver to work properly. 
  the problem solver does not need to be aware of a contradiction when it has no means to deal with it. indeed  it may not be provided with the ability to react to contradictions that relate to many unmade decisions or events to happen. there is no need to detect these contradictions before the problem solving state is refined enough for reactive decisions to be made. 
  when the problem solver focuses on a particular subproblem  it is worth increasing the amount of propagation within this subproblem. 
  the problem solver can spend more or less processing time to propagate constraints in order to assess the consequences of a 
deviation or a decision. 
     part of the knowledge that enables to take these facts into account proceeds from the design of the problem solver. the designer knows how the problem solver works. he is able to a priori appraise the usefulness and the importance of some propagation steps. for example  he is led to define a set of compulsory propagations that are absolutely necessary to ensure that the problem solver will propose admissible solutions. 
     on the other hand  dynamic knowledge about the problem solving state  e.g. focused objects  importance of satisfying real-time constraints  current problem solving policy and strategy  is required. indeed  the desirability of some propagation steps varies from one problem to the other and during the course of problem solving. for example  the urgency of reacting to a deviation is estimated in real-time. similarly  the evaluation of a 
     partial solution against problem domain criteria enables to 
	collinot and le pape 	1 

determine whether - and to what extent - some constraints or events need particular attention. 
     in order to dynamically take advantage of the flexibility of the propagation system  the problem solver must be provided with sources of knowledge  e.g. adapting riles  that perform the following tasks: 
  determining which restrictions must be applied to constraint propagation: the two kinds of knowledge mentioned are considered to determine appropriate restrictions. knowledge about the efficiency of the propagation system in various kinds of situation is also taken into account. this knowledge can be refined when experience is gained from using the problem solver. 
  accordingly modifying  adding or deleting conditions of control rules. 
obviously  there is a connection between the determination of propagation conditions and other control activities performed by the problem solver  e.g. problem decomposition  adoption of a strategy . the use of control knowledge is extended to the management of the propagation system. 
     dynamically controlling the propagation system is helpful in a variety of situations. we present a few examples in the context of job-shop scheduling. broadly speaking  the scheduling problem consists in assigning resources and start and end times to operations. operations are the considered events. our scheduler is the considered problem solver. 
  considering or neglecting preference constraints: preferences are constraints the satisfaction of which may be compromised if necessary  e.g. due-dates . the scheduler often relies on the propagation system to detect necessary compromises. however  in case of emergency  the scheduler is only looking for an admissible solution; the propagation system is used as an  admissibility checker : control rules specify that deductive activities  i.e. combination  reduction  rewriting  involving preference constraints must not be performed. 
  focusing on particular events: 
propagating disjunctive constraints is time consuming and generally avoided. however  it is worth taking a closer look at operations that require the use of a scarce resource. when scarce resources are identified  the scheduler specifies that disjunctive constraints need to be combined only if the associated events require the use of such a resource. 
  requiring 	details: 
within the scheduler  manufacturing plans are represented as hierarchies of operations  as in  le pape and smith 1  . different levels at which scheduling can be performed are defined and explicitely associated with operations. disjunctive constraints relating to the use of shared resources are more numerous and precise at lower levels. according to the problem solving state  these details about resource planning may be more or less important  e.g. the scheduler may be scheduling in detail or just determining whether due-dates are likely to be relaxed . consequently  the scheduler specifies levels to which events must belong for propagation to be performed. 
  adapting the propagation to real-time constraints: 
in case of emergency  reactive decisions must be made without evaluating all of their consequences. through control rules  the scheduler specifies that only the consequences that relate to  imminent  events need to be detailed. 
1 	reasoning 
iv resulting benefits and remaining difficulties 
     with our flexible propagation system  the trade-off between the anticipation of conflicts and the amount of processing time assigned to constraint propagation is not fixed once for all. through control rules  the amount of propagation is adjusted to meet the needs of a problem solver. moreover  the problem solver can combine various available pieces of knowledge to dynamically determine how to adjust the behavior of the propagation system. 
     the problem solver is provided with the ability to moderate its control decisions. indeed  a wide range of intermediate possibilities from purely heuristic search methods to leastcommitment approaches is available. furthermore  the problem solver can globally adopt a heuristic strategy and ask the propagation system to locally assess all the consequences of a decision. similarly  it can adopt a least-commitment approach and punctually give up complete consistency checking. this is particularly useful in real-time problem solving. indeed  the problem solver can adjust the amount of propagation according to the urgency of a reactive decision. 
     difficulties in using our flexible propagation system must not be overlooked. 
  when a rapid reaction is necessary  the problem solver reduces the amount of propagation. since the consequences of reactive decisions are not closely considered  new deviations are likely to happen. deviations may occur more frequently  in which case the propagation activity is reduced again and so forth. finally  the problem solver might superficially use the propagation system and continually react to unanticipated events. 
  the quality of the dynamic adjustment of the amount of propagation rests upon a good understanding of the current problem solving context. this means the problem solver must combine criteria of judgement the difficulty lies in finding relevant criteria as much as in considering them together. for example  with regard to the problem mentioned above  instability resulting from a drastic reduction of the propagation activity   we have no intuition concerning knowledge that enables to evaluate to what extent a set of control rules responds to the need for stability. furthermore  knowledge would still be required about how to establish a compromise between this need for stability and a need for a 
rapid reaction. 
these difficulties are often encountered  in different forms  in the domain of real-time problem solving. using the flexible propagation system in the context of job-shop scheduling leads us to investigate domain dependent and independent knowledge that can be used to face these difficulties. 
