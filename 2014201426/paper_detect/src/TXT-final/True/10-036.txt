a structure for the representation of knowledge 
	a proposal 	for a micro-actor 
h i t o s h i ogawa  kokichi tanaka 
faculty of engineering science  osaka u n i v e r s i t y toyonaka  osaka 1  japan 

i . 	i n t r o d u c t i o n 
       a question-answering system is a composite of subsystems of language a n a l y s i s   inference and language g e n e r a t i o n . in the inference system  a u s e f u l and f l e x i b l e s t r u c t u r e is needed f o r the r e p r e s e n t a t i o n of knowledge. there are two ways of representing knowledge in computers: the assert i o n of f a c t s and theorems. a m i c r o - a c t o r   which possesses some of the a t t r i b u t e s of actors  c. hewitt 1   is introduced to construct a knowledge r e p r e s e n t a t i o n s t r u c t u r e . knowledge is p r o c e d u r a l l y embedded in micro-actors so it is easy to represent theorems and  since each micro - a c t o r has a stack f o r data  it is also possible f o r various kinds of f a c t s to be stored. 
       actor is indeed u n i v e r s a l and  although compl i c a t e d   i s compatible w i t h a l l programming l a n guages and hardware. however  it is not so easy to r e a l i z e p r e c i s e l y such a complicated system. for example  a pseudo-implementation of c o - r o u t i n e processing or p a r a l l e l processing w i l l reduce the e f f i c i e n c y of the system. we  t h e r e f o r e   i n t r o duce a m i c r o - a c t o r based on the concept of a c t o r   and use it as the knowledge base. micro-actor r e t a i n s the main c h a r a c t e r i s t i c s of a c t o r . using a lisp system on a p a r a l l e l processor  a micro - a c t o r system w i l l be e a s i l y implemented. 
	i i . 	a c t i o n o f micro-actors 
       in a m i c r o - a c t o r system  there is no d i s t i n c t i o n between procedures and data. the system is a c o l l e c t i o n of independent objects  micro-actors  which act as e i t h e r procedures or data. the a c t i o n of a m i c r o - a c t o r is defined in terms of only one k i n d of a c t i o n : sending messages to the other m i c r o - a c t o r s . 
       when a m i c r o - a c t o r receives a message  it becomes a c t i v e   and t r i e s t o play i t s r o l e . i t 
sends messages to other micro-actors if necessary  and waits for their replies. when i t s action is finished  it responds to the requester  the micro -actor sending the message . in fig. 1  sending a message is i l l u s t r a t e d with   '  and 
receiving an answer with 	an answer is 
also a message in a wider sense. for example  a micro-actor which acts as datum returns the answer to the question. a micro-actor which acts as a 
procedure performs i t s own function for the requested message and sends messages to other microactors requesting data or asking them to perform a part of the function. in this way  the job is carried out through the sequence of message sending. 
　　　adoption of only one kind of communication  message sending  between micro-actors has the following advantages: 
 1  only one kind of behavior  message sending  is the basic unit of control in the system. invoking a function  referring to the value of a variable  and other behavior are a l l considered to be special cases of this behavior. 
 1  micro-actors can directly communicate with other micro-actors there is no need to have any special channel for communication. 
 1  sending messages has no side-effects. because a micro-actor can converse with the several 
micro-actors simultaneously  a high degree of parallel processing is possible. 
i t i . structure of micro-actor 
　　　as shown in fig. 1  a micro-actor is represented as a box whose top is f i l l e d with i t s name. 
a micro-actor is composed of three parts: 
　 1  control part: this determines the action of the micro-actor by matching the sent message with the patterns of script  see below . the control part also checks whether the result of the action s a t i s fies the request  and if so  

replies to the requester. otherwise  it w i l l decide to take another action. the control part is considered to be the union of the ' i n tentions' and 'monitors' of hewitt's actors. it is programmed in lisp  and is common to a l l micro-actors. 
　 1  script: this expresses theorems. a micro-actor stores several pairs composed of the pattern of the receivable message and the corresponding action. usually  the content of the script is stored when the micro-actor is constructed  and more i n f ormation can be added at any 
knowledge repr.-1: 1gawa 
1 

time. 	i t i s w r i t t e n i n lisp and the r e s t r i c t e d japanese. 
　 1  acquaintance: this p a r t is a memory space. a m i c r o - a c t o r stores f a c t s or data  f o r example  the p a r t i c u l a r v a l u e s   a t t r i b u t e s o r other i n f o r -
mation which should be remembered  and which express the a s s e r t i o n . for example  a verb m i c r o - a c t o r stores the record of i t s a c t i o n s and some noun m i c r o - a c t o r holds i t s p a r t i c u l a r value. 
　　　the advantages of using m i c r o - a c t o r s to represent knowledge are as f o l l o w s : 
 1  knowledge is p r o c e d u r a l l y embedded in micro - a c t o r s   so t h a t : 
 a  it can be used when and only when it is needed. 
 b  it can be s p e c i f i e d at various l e v e l s of d e t a i l . that i s   it can be s p e c i f i e d in as much or as l i t t l e d e t a i l as is desired. 
 1  in the case where new knowledge is to be added to the system  even if some s p e c i a l mechanisms are needed f o r dealing w i t h i t   the whole system need not be changed. it is only necessary to embed the mechanisms in a new m i c r o - a c t o r   or to increase the other m i c r o - a c t o r s which r e a l i z e them. 
 1  a m i c r o - a c t o r can be f r e e l y changed under the r e s t r i c t i o n that the messages sent or received by the new m i c r o - a c t o r should be consistent w i t h those of the o l d one  or should subsume them. 
 1  the a c t i o n of each m i c r o - a c t o r is independent of the others except in the case of message sending  and there is no g l o b a l s t a t e of a l l the m i c r o - a c t o r s in the u n i v e r s e   so it is easy to debug the m i c r o - a c t o r s . furthermore  j u s t i f i c a t i o n of each m i c r o - a c t o r may lead to j u s t i f i c a t i o n of the whole system. 
iv. message and sentence number 
       a message is of the form of  n l   where l i s a simple sentence and n is a sentence number. the sentence number i n d i c a t e s an order of the message  and can also be used as a marker to d i s t i n g u i s h the r e s u l t of a m i c r o - a c t o r ' s a c t i o n from the others. for example  the m i c r o - a c t o r amari  remainder  stores the r e s u l t of d i v i s i o n to y i e l d the p a i r c o n s i s t i n g of the r e s u l t and the sentence number. the m i c r o - a c t o r can r e t r i e v e a l l the remainders by means of the sentence number. so it can r e p l y about the remainders of a l l d i v i s i o n s . f i g . 1 shows an example of a diagram of message f l o w . the f o l l o w i n g are i n i t i a l conditions o f the diagram: 
 1  there e x i s t e d f i v e m i c r o - a c t o r s ; waru   d i v i d e     dearu   b e     amari  remainder   shoh   q u o t i e n t     and teigisuru   d e f i n e   . 
 1  when the system received   ' x ' 	i s 1 .     micro 
- a c t o r x was made. then x received the message  %1 your value is 1 .   to have the value  %1   . 
 1    d i v i d e x by 1 .   was executed. waru   d i v i d e   computed 1 + 1   	then sent  %1  	to both shoh   q u o t i e n t   and amari 	 remainder . 
 1  warikireru   d i v i s i b l e   was made by teigisuru 
 define  which received  %1 ' i s  s d i v i s e b l e by  t. f i s defined a s ' d i v i d e s b y t . ' f i s the remainder 1   ' .   
       in f i g . 	1  warikireru   d i v i s i b l e   	sends the messages to both waru   d i v i d e   and dearu  be  r e f e r r i n g t o i t s s c r i p t   when i t receives   i s x d i v i s i b l e by 1  . 	waru   d i v i d e   computes 1 * 1   and amari  remainder  and shoh   q u o t i e n t   s t o r e  %1  and  %1  r e s p e c t i v e l y . 	amari  remainder  has two values but 	it returns the c o r r e c t answer to dearu  be  according to the sentence number. 
acknowledgements 
　　the authors appreciate many h e l p f u l conversat i o n s w i t h several graduate students and members of prof. tanaka's laboratory of osaka u n i v e r s i t y   e s p e c i a l l y dr. k i t a h a s h i   mr. k i j i m a   and dr. ross  in a d d i t i o n   we wish to thank prof. hewitt  mit  f o r sending us h i s papers and a l l o w i n g us to use the term   m i c r o - a c t o r   . 
