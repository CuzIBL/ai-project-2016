 
     a dynamic data structure is suggested for representing the accumulator array used with a hough transform. the structure  called a dynamically quantlsd space  allocates resources where they are most needed to best discriminate the peak in the parameter space. the effect is to focus the hough transform. such attention control is especially needed when the parameter space has a large number of dimensions. 
1 . t h e h o u g h transform 
¡¡¡¡¡¡the hough transform  has developed into a useful image processing technique. it is applicable whenever some set of image patterns p can be described by a finite number of parameters u1  .. .  uk. its purpose is to determine the parameters for the patterns in the image. each point  u1  . .  uk  in parameter space determines a particular pattern p€p via a function / : f u1   . . . .uk - p. the hough transform consists of making measurements in the image that give evidence for a subset of the patterns p1cp  and mapping these patterns into the parameter space with the inverse o f / : f~x{p1 -
     if this process of mapping an image measurement into a set of points in parameter space is repeated  then those points that actu-
ally correspond to a pattern present in the image will be mapped to  or  hit  or  voted for*  1   most frequently. this property forms the basis of implementations of the technique. the parameter space is represented as a k-dimensional accumulator array  each cell of which counts the number of times it has been hit by a mapping from the image. the parameter coordinates of the cell that attains the highest count then corresponds to the pattern that has the most evidential support from the image measurements. thus the hough transform converts a global pattern detection problem into a local detection problem: finding a local maximum in the parameter space . 
     this technique has been successfully applied towards finding straight lines l1l  circles   parabolas   and arbitrary 1d shapes  in images  as well as for image registration ; many other applications are possible. 
1. d y n a m i c q u a n t i z a t i o n 
     the quantization of the parameter space represented by the accumulator array is usually chosen to be uniform: each ceil has the same size. static non-uniform quantization schemes have been used to ensure that each cell is equally likely to be hit  1 . rut all quantization schemes run into a serious problem: the large amount of storage required for the cells of the accumulator array. this problem becomes especially acute for high-dimensional parameter spaces  * where even a coarse quantization leads to immense 
* the highest dimensional space i hive seen in the literature is the 1dtmensiorml space used in . storage requirements. it is to help alleviate this problem that dynamically quantized  dq  spaces have been proposed 
. 
     tn a dq space  cells may split or merge in response to the local characteristics of the data. each cell represents a k-
dimensional rectangular box in the parameter space  and contains a counter that accumulates the number of hits within the bounds of the cell. a cell may be modified in three ways: 
m1 : us counter may be incremented by being hit by an inverse mapping from the image. 
m1 : it may spilt in half across one dimension  creating two new cells. 
m1: it may merge with one or more of its immediate neighbors. 
the splitting and merging are guided by two goals: 
g  : the count in each cell should represent an equal portion of the total count over ail cells in the space. 
g1 ¡ö the hits within each cell should be uniformly distributed throughout the volume of the cell. 
this last goal requires that each cell have some knowledge of the distribution of hits within its boundaries. this is accomplished by associating a k-dimensional imbalance vector  essentially an approximation to the gradient  with each cell  and updating it as points fall in the cell. 
     the above goals lead to the following split and merge rules. split rule: a cell should be split if its count is too large  relative to the total count   or if its internal imbalance becomes too large. each of the two new cells resulting from the split receive 
exactly half of the count of the original cell. 
merge rule: a cell should be merged with its neighbor if together their counts are not too large  and the merge will not pro-
duce a highly unbalanced cell. the new cell resulting from the merge is assigned as a count the sum of the counts in the merging participants. 
     note that the merge rule is essentially the complement of the split rule. the actual rules in use are considerably more complicated than the above statements indicate; see   1  for details. 
1. 	h i e r a r c h i c a l organization 
     it is clear from the above description that the cells must be stored in a data structure that  a  allows any cell to be accessed quickly for incrementing its count  and  b  permits the neighbors of any cell  used in the merge rule  to be found easily. 
     a hierarchical organization immediately suggests itself  and in particular  the k-dimensional generalization of the quad and oct tree  seems an obvious candidate for the structure. however  their rigid organization and large number of sons per node  1*  have led me to use instead the k-d trees of bentley . sloan is currently investigating the quad/oct tree alternative  which he calls a dynamically quantized  dq  pyramid  


     each node of a k-d tree represent! a k-dimensional rectangular box. every node has exactly two sons  which partition it into two smaller pieces. the index of the dimension across which the box is split is stored at the node  along with an indication of how far along the splitting dimension the cut occurs  it does not have to be at the midpoint . 

1. properties of dq spaces 
     in the current implementation  points are  plotted* in parameter space by  1  accessing the appropriate cell via a path from the root   1  incrementing the cell's counter  and  1  firing the split or merge rule for the cell if applicable  and checking the rules for any neighboring cells modified by a rule firing  and so on recursively. the effect is that a dq space will dynamically reorganize itself to match the local characteristics of the data. this scheme possesses the following properties: 

figure 1. the tree structure of the dq space of figure 1. relative count densities are shown at the leaves. 
focus capability: figure i shows a 1d dq space containing 1 points that do not display any marked central tendency; the resulting cells are roughly the same size. the 1 points in figure 1  however  cluster around the two points  1  and  1   and the cell sizes adjusted to focus in on these clusters. the k-d tree supporting the cells of figure 1 is depicted in figure 1. the splitting dimension is indicated at each node  and a single digit proportional to the density of counts in each cell is shown at the associated terminal node. 
resolution control: the resolution of the space can easily be controlled by parameters that limit the number of cells. the dq space tries to achieve its goals within the limits set  and  gracefully degrades* if the resources allocated are inadequate to the task. 
dimensionality reduction: if the data is uniformly distributed along some dimension  then the dq space will tend not to discriminate  i.e.  split  along that dimension  see figure 1 . in effect  the dimensionality of the space is reduced. this could be especially important in a high-dimensional space that has some inessential 
dimensions. 
change of attention: in the current implementation  the count in each cell  fades  with time  so that a moving peak in parameter space can be  tracked  by the focusing capability of the dq space. 
1. current and future work 
     dq spaces are currently being used for motion detection and analysis  1  ll  some success has been achieved with a variation of ullman's t w o cylinder experiment*  using a 1d parameter space . 
     the complexity of dq spaces has rendered theoretical analysis difficult. * currently the interrelationships between the split 
see  for the meaner results that have been obtained. 


and merge tolerances and the resolution parameters  which together control the behavior of the space  are unclear. one advantage of sloan's dq pyramids is their simplicity relative to dq spaces. 
     the price for this simplicity is inflexibility: dq pyramids always allocate equal system resources for each dimension of the parameter space  whereas dq spaces can ignore irrelevant dimensions. in fact  it is possible for a dq space to have different dimensions in different sections of the space  constituting a sort of patchwork quilt of different parameter spaces. this corresponds well with our intuition that a change of context may engender a change of relevant features. 
