 
we consider the problem of minimizing depth-first search effort for the generation of all solutions to a problem stated as a conjunction of subproblems. for a sequence of subproblems that share no variables  the effort is minimized by ordering the subproblems in decreasing ratio of nc/ n - 1   where n and c are the number of solutions and the search effort of obtaining a solution to the subproblem. if a conjunctive problem has an arbitrary number of subproblems sharing variables among them  we assume that in the solution sets of the subproblems  each argument variable is bound to elements of its domain with equal frequency. under this uniform distribution assumption  we derive a set of necessary conditions that must be satisfied by an optimal depth-first sequence. if the distribution assumption does not hold for a conjunctive problem  then the search effort can be optimized only if the sequencing of subproblems is suitably interleaved with the actual enumeration of solutions to the problem. 
1. introduction 
in this paper we consider the problem of optimization of search effort for the generation of all solutions to a problem that is stated as a conjunction of subproblems. conjunctive problems arise frequently in many applications of artificial intelligence as well as in database applications of logic. depth-first search with backtracking is a commonly used problem-solving search technique used in such applications. it is the default strategy for the control of inference in sequential prolog. our motivation here is to develop search ordering conditions for the optimal control of depth-first search required in such problem-solving systems. knowing what constitutes optimal ordering conditions or a characterization of the conditions that can be used systematically to improve a given ordering is critical for optimizing the efficiency of problem-solving systems. 
a conjunctive problem has the generic form: 

it has been recognized  smi1a  that a significant weakness of backtracking is that the computational effort in searching for all feasible solutions to a conjunctive problem is quite sensitive to the sequence in which the subproblems are considered. in the next section  we review related work on controlling the search required to generate all solutions to conjunctive problems. in section 1  we present our results on how to order subproblems such that the search effort for generating all solutions is minimized. the results are summarized as follows. we show the conditions for optimal ordering of subproblems of a conjunctive problem that has: a  many independent subproblems  or b  exactly two dependent subproblems. for conjunctive problems with an arbitrary number of dependent subproblems  we derive necessary conditions for optimal ordering. the conditions can be used for systematic transformation of a given ordering of subproblems into a locally optimal sequence of subproblems. in section 1 we present our conclusions. 
1. related work 
the problem we consider here  namely  the efficient generation of all solutions to a conjunctive problem with backtracking as the basic problem-solving strategy  has been addressed in the past by a number of researchers. the work of warren  war1   smith  smi1a  and smith and genesereth  smi1b  are especially pertinent to us. 
warren  war1  considered the efficient evaluation of database queries  which may be regarded as a class of conjunctive problems  expressed in the prolog language. warren developed a heuristic approach for improving the efficiency by a suitable reordering of the subproblems of a conjunctive problem. the approach  demonstrated experimentally in a system for natural language question answering  relies on the availability of statistical information such as the number of solutions to each subproblem  the number of distinct values for each argument in a solution  etc. two important assumptions are made in  war1 . the first assumption made is that the uniform distribution of attribute values holds. the uniform distribution assumption holds if in the solution set of a problem  each argument variable of the problem is bound to elements of its domain with equal frequency. 
the second assumption made implicitly in  war1  is the uniform cost assumption. the assumption is that the cost of obtaining a solution to a subproblem is the same across all subproblems  i.e.  each subproblem is computationally just as hard as any other subproblem in the conjunctive problem. we note that there are many applications for which the uniform cost 
	natarajan 	1 

assumption does not hold. to illustrate this  consider a conjunctive problem consisting of three subproblems  say  and p  suppose the solutions to subproblem p  are explicitly available and stored in the main memory of a computer; solutions to subproblem  are also explicitly available but stored in a slower peripheral device  such as a disk; and  solutions to p1 are not explicitly available but a problem-solving search procedure can determine the solutions after possibly applying certain inference procedures. in such a situation  the cost  or equivalently  the time needed  for obtaining a solution is very unlikely to be the same across different subproblems. for the purpose of efficient solution of conjunctive problems under such more general conditions  we relax the uniform cost assumption and allow the cost per solution depend on the subproblem being solved. we still assume  however  that for any given subproblem the cost of obtaining a solution is constant  i.e.  it does not depend on the specific solution obtained for the subproblem. 
relevant analytical work on optimal static ordering of the subproblems of a conjunctive problem has recently been reported by smith and genesereth  smi1a   smi1b  static ordering means the planning  i e   the decision on how to sequence the subproblems  is made before the actual backtrack enumeration effort is undertaken once an ordering of the subproblems is chosen it is left unchanged during the entire enumeration phase of problem-solving. smith and genesereth have addressed how a problem-solving system can minimize the effort in generating all solutions by using information provided to the system regarding average number of solutions to each subproblem the uniform distribution assumption regarding attribute values and the uniform cost assumption have also been made in  sm1b  the work cited above  based on assumptions of uniform cost and uniform distribution  provides a good starting point for us 
we note that the total search effort in enumerating all the solutions to a conjunctive problem typically depends on both: a  how the values of each argument variable are distributed in the solution set of each subproblem  and b  the cost associated with the solution of each subproblem in this paper  we consider the impact of relaxing the assumptions of uniform cost and uniform distribution  on optimizing the search ordering. 
1. results 
consider the problem g s  stated in  1  suppose the solutions to g are enumerated by solving the subproblems in the sequence shown in  1 . let nt and c  be respecnively the number of solutions and the cost of obtaining a solution to subproblem p  given that subproblems p  through have been solved. assume the root of the search tree is at level 1. there are n  solutions to p  and each solution is represented by a node at level 1 corresponding to each solution of p1  there arc solutions of p1 and hence  n1 nodes at level 1 in general  at level / of the search tree  there are . nodes. thus  the total number of nodes in the backtrack search tree corresponding to the sequence expressed in  1  is: 
		 1  
since there are n1 nodes at level 1  each requiring a search effort of c  the total search cost at level 1 is n1. in general  the total search effort at level i is the product of the number 
1 	reasoning 
of nodes at level i and the search effort per node at that level. thus  the total cost of the backtrack search algorithm corresponding to the sequence expressed in  1  is : 

1 independent subproblems 
a subproblem p  s  is defined to be independent of subproblem  if s  has no variable in common with s  two subproblems that share at least one common variable are defined to be directly dependent. two subproblems  i  are considered indirectly dependent if there exists a subproblem 
   . .   j such that p  is directly dependent on pk and pk is dependent  either directly or indirectly  on pr for a sequence of independent subproblems  the following result shows the conditions that must be satisfied by an optimal ordering of subproblems. the result holds regardless of the distributions of argument variables the proof can be found in  nat1  
result let a conjunctive problem  expressed as in  1   have subproblems  through  that are pairwisc independent  i.e.  no subproblem shares a variable with any other subproblem. then the ordering that minimizes  1   the cost of 
generating all solutions to the problem  is to sequence the subproblems such that: 

special case  i . if each subproblem has the same number of solutions   then the subproblems must be ordered in decreasing order of their costs  i.e.  subproblem p  should be solved before subproblem p  whenever 
special case  ii . if the cost of obtaining a solution is identical for the subproblems  then the subproblems must be ordered in ascending order of their number of solutions  i.e.  subproblem p  should be solved before subproblem 
p  whenever 
it is significant to note that the above result can often be used even if  in practice  a given conjunctive problem expressed in the form of  1  may have the property that every pair of subproblems is dependent  cither directly or indirectly  on each other. a problem-solver can use the knowledge about optimal ordering conditions for independent subproblems even if the given conjunctive problem contains only dependent pairs of subproblems. 
1 dependent subproblems 
typically  the number of solutions to p  s   depends on all the subproblems that were solved prior to pr the objective of minimizing the search cost is equivalent to choosing the best permutation of the set of subproblems such that the cost expressed in  1  is minimized. a conjunctive problem is considered feasible if there exists at least one solution to the problem. 
from  1  we obtain the following results for special cases. case 
 i : if the search cost per solution of each subproblem is the same  then the subproblem with fewer solutions should be solved first. case  ii : if the two subproblems have an equal number of solutions  and the conjunctive problem has at least n  solutions  then the subproblem that is more costly should be solved first; otherwise.  the less costly problem should be solved first. 
1.1 at least three subproblems in a conjunctive problem 
we next consider conjunctive problems that are expressed as a conjunction of three or more subproblems. we relax the uniform cost assumption but assume the uniform distribution assumption holds for the individual subproblems. if a subproblem has t solutions  and x is one of its argument variables with domain 
  our assumption is that for any specific 
value of x  there will be exactly t/k solutions to the subproblem. 
suppose a conjunctive problem expressed as in  1  is solved by ordering the subproblems in two different sequences  and as follows: 

the subproblems solved at each level of the search tree traversed by a backtracking algorithm is shown in fig. 1. note that each level of the search tree corresponds to exactly one of the m distinct subproblems of the conjunctive problem. the two search sequences  r1 and r1 differ in only the relative ordering of sublet q denote the total number of partial solutions to the the first  / - 1  subproblems of either sequence. we have to distinguish two possible cases that may arise. 
cased : the set of variables in s  that are bound when pt is solved is disjoint from the set of variables in s1 that are bound when p1 is solved. 
cased! : the set of variables in s  that are bound when p  is solved contains at least one variable that also occurs in s1. 
let a  denote the number of solutions to p  given that the initial sequence of subproblems    has been solved. let a1 denote the number of solutions to p1 given that the initial sequence of subproblems p1 .... p1 has been solved. 
 case i : the difference in search costs of sequences r1 and r1  cost r1  - cost r1   equals: 

from the condition expressed in  1  we obtain the following resuits for ininimizing the average search cost. 
	natarajan 	1 

a  if the search cost per solution of subproblems p  and p1 is the same  i.e.  c  = c1l   then the subproblem with fewer solutions should be solved first. 
b  if the two subproblems have equal number of solutions  i.e.   and the conjunctive problem is feasible  then the sub-
problem that is more costly should be solved before the less costly problem. 
if neither the number of solutions nor the cost per solution of 
subproblems  are equal  then subproblem p  should be considered before p1 whenever: 
c  p  is more costly than  and the condition   holds. 
d  p  is less costly than p1 and the condition a c    a1c1 holds. 
in the general case  the decision about whether subproblem p  should be solved before p1 is resolved by evaluating the condition expressed in  1 . 
case iii : the size of the domain of a variable is the cardinality of the set of distinct values that can be bound to the variable. let s represent the product of domain sizes of each variable that occurs in both s  and s1 and has not already been bound during 

thus  sequence r1 is better than r1  if and only if  
		 1  
from the condition expressed in  1  we obtain the results analogous to  a    b    c   and  d  in case  i  above for minimizing the average search cost. in the general case  the decision about whether subproblem pi should be solved before p1 is resolved by evaluating the condition expressed in  1 . 
the conditions for optimal ordering of subproblems derived in this section  1.1  are based on the key assumption of uniform distribution of arguments of each subproblem. the uniformity of distribution means that the structure of the search tree has the following characteristic. at any level of the search tree  the number of sons of each node at that level is the same. ordering of subproblems has an impact on the degree  i.e.  number of sons  of nonterminal nodes at each level of the search tree. at each specific level of the tree  the degree is uniform. search ordering that minimizes total search effort is one of the ml possible sequences in which m subproblems may be statically sequenced before the enumeration effort begins. 
we briefly discuss what will be the impact of non-uniform distribution of arguments of subproblems. suppose one is interested in generating all solutions to a conjunctive problem for 
1 	reasoning 
which the uniform distribution assumption does not hold. typically  search effort for such a problem can not be optimized by restricting to the class of static orderings of subproblems   see  nat1  for details . for such problems  the minimization of search effort requires that search ordering be context-dependent  i.e.  whenever a decision has to be made on what subproblem to solve next  it must take into account the existing binding environment at that instant. with this technique  the planning  i.e.  sequencing of subproblems  is interleaved with the enumeration of solutions. this technique of dynamic search ordering or search rearrangement  bit1  has been effectively used in the solution of combinatorial puzzles. the technique holds potential for efficient solution of conjunctive problems in general problemsolving applications that are characterized by non-uniform distributions. 
1. conclusions 
in general  an optimal depth-first search sequence  that minimizes the total computational effort for solving conjunctive problems  depends on both: a  how the values of each argument variable are distributed in the solution sets of the subproblems  and b  the cost associated with the solution of each subproblem. 
for a sequence of independent subproblems  we stated the optimal ordering conditions that can be used even if a given conjunctive problem has only dependent pairs of subproblems. for a sequence of three or more dependent subproblems  if the uniform distribution assumption holds and the uniform cost assumption is relaxed  then we showed search ordering conditions that can be used for systematic transformation of a given ordering of subproblems into a locally optimal sequence of subproblems. if assumptions regarding both the distributions and costs associated with subproblems are relaxed  then dynamic sequencing of subproblems is necessary to minimize the search effort. issues related to the use of dynamic search ordering for improving search efficiency merit further study. 
