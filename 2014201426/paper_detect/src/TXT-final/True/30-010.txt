 
we analyse the complexity of standard and weak model checking for propositional default logic; in particular  we solve the open problem of complexity in case of normal default theories and introduce a new ample class of default theories with a tractable model checking problem. 
1 	introduction and overview of results 
the complexity of default reasoning is already well understood  however  in search of model-based representations  the complexity of the model checking problem instead of the inference problem needs to be analysed. 
　as halpern and vardi  argue  model checking is a beneficial alternative simplifying reasoning tasks  for instance  in classical propositional logic  model checking can be done using an easy polynomial algorithm  however reasoning is conp-complete  and allowing for representing the agent's knowledge as a semantic structure instead of a collection of formulae and additionally  this approach introduces a kind of closed-world assumption. furthermore  the complexity of model checking is closely related to the notion of representational succinct-
ness  gogic et al.  1  of non-monotonic formalisms. 
1 	complexity of inference 
gottlob  and stillman  showed that the complexity of brave  cautious  reasoning  i.e. to decide  given a formula and a default theory if / is in at least one  all  extension s  of i s c o m p l e t e   i n -
complete   even in case of normal and prerequisite-free default theories  and even if is a single literal. for related results  see  papadimitriou and sideri  1 . 
　the complexity decreases one level if disjunction-free default theories are considered  i.e. only conjunctions of literals and negated literals are allowed. kautz and selman  dealt with the inference problem for such theories: brave reasoning  for disjunction-free formulae  is np-complete  even in the case of normal default theories  although finding an extension is polynomial in that 
    this work was supported by the austrian science fund project n z1-inf. 
1 	automated reasoning 
case  and even if the formula to be inferred of at least one extension is a single literal. if w is a horn theory  npcompleteness holds even in the case of prerequisite-free normal default theories  stillman  1 . 
1 	complexity of model checking 
an interpretation is a model of a default theory iff it satisfies at least one extension of the theory. liberatore and schaerf  show that model checking is -complete  even for semi-normal prerequisite-free default theories. in the case of normal default theories  model checking is easier than the corresponding reasoning task - they show that the problem is in  and -hard  and conp-complete if defaults are also prerequisite-free. 
　in general  model checking suffers from two sources of hardness: on the one hand there are   with possible sets of generating defaults  
and the other source of intractability is the hardness of propositional inference. in case of normal default theories  given a particular model  only one subset of g needs to be considered and therefore the initial guessing stage is eliminated. in theorem 1 we show with a non-trivial membership proof that this problem is in and hence due to earlier results -complete. 
to obtain this theorem we improve techniques of gottlob  for guessing data-structures. 
　if the defaults are restricted in such a way that propositional satisfiability and inference are polynomial  the other source of intractability is affected and the problem is due to the necessary guessing of generating defaults np-complete. if such a default theory is restricted to normal defaults  complexity of model checking is even polynomial. therefore  in chapter 1  we introduce the class of default theories in extended horn normal form  abbreviated as  ehnf default theories    a class containing disjunction-free default theories  for which model checking is still one level easier than for arbitrary default theories. a default theory  d  w  is in ehnf iff w and all elements of each justification are disjunctions of horn theories  each prerequisite is a conjunction of dual horn theories  and each consequent is a horn theory. this is an ample class of default theories with a tractable model checking problem and hence very useful in practical applications. 


table 1: complexity of weak model checking 
1 	weak model checking and ael 
in chapter 1 we recall the notion of weak extensions and show that weak model checking  i.e. deciding if an interpretation satisfies at least one weak extension of a default theory  is  due to the non-constructive nature of the problem  even -complete for normal default theories and hence strictly harder than model checking. this issue is also connected to the fact that no modular translation from default logic into autoepistemic logic  ael  exists  gottlob  1b   since prerequisites are treated in a very different way. the objective parts of stable expansions  n-expansions  of the translated default theory correspond to weak extensions  extensions  of the default theory  therefore we obtain the complexity of model checking for ael  nonmonotonic logic n  in chapter 1. 
1 	summary 
in table 1 and table 1 a summary of our results for model checking and weak model checking with reiter's default logic is presented  the results already present in  liberatore and schaerf  1  are marked with * . additionally  the main contributions of this paper are: 
  we solve the open problem of the exact complexity of model checking for normal default theories. 
  we introduce a new ample class of default theories with a tractable model checking problem. 
  we show that weak model checking is -complete  even if restricted to normal default theories. 
  we generalize these results to -completeness of model checking with ael and n. 
  finally  in chapter 1 the complexity results of model checking are used to draw some interesting conclusions in translatability issues. 
1 basic concepts 
a prepositional default theory  reiter  1  is a pair  d  w  where w is a finite set of propositional sentences and d is a finite set of defaults. whenever we use the term default theory in the rest of the paper  we mean propositional default theory. 
a default d is a configuration of the form 
where  are propositional sentences. 	p d  is called the prerequisite of d  the  non-empty  set is referred to as the justification of d and denoted by 	is called the consequent of the default 
d. for convenience we define c h   and if  is a singleton we identify it with its only element. 
　　since reiter's original definition of extensions  a great number of equivalent characterizations has been introduced. in this paper we normally use a finite quasiinductive characterization  based on the operator due to marek and thuszczyfoki . we define cons a  as usual as be a subset of d: 
as we limit ourselves to finite default theories  it can easily be seen that at latest after steps a fixed point has been reached. . is an extension of  d  w  iff h = h d . every extension is of the form 
e = cons  with gd being called the generating defaults of the extension. 
in a normal default theory j d  = c d  for each default. 
a semi-normal default theory is a theory in which each 
 d  is of the form where are arbitrary propositional formulae. 
definition 1 an interpretation  valuation  
model of 	is model of at least one  con-
　whenever we use the term model we refer to propositioned herbrand model the model checking problem for default logic is to decide  given an interpretation and a default theory 
short review of relevant complexity con-
cepts: the notion of completeness we employ is based on many-one polynomial transformability. recall that 

is the class of decision problems that are solvable in polynomial time on a deterministic oracle turing machine calling an np-oracle polynomially often. 
　the classes  have been refined  depending of how many oracle calls are needed: of special interest in this paper is the class  also known as 
- this is the class of decision problems solvable with a logarithmic number of calls to an np-oracle. 
　a survey on already known complexity results for several nonmonotonic logics can be found in  cadoli and schaerf  1 . 
1
   we always implicitly assume that and that the ph does not collapse. 
baumgartner and gottlob 

1 	some useful tools 
due to lack of space  some proofs in the following chapters are sketched or omitted. 
lemma 1 let  be a normal default theory. if w  is consistent  then there are no mutually incompatible defaults and thus only one generating set. 
lemma 1 let  be a monotonic rule-system  or a normal or justification-free default theory  where w and the consequents of are jointly consistent. then the statement:  at least rules do not fire  is equivalent to  it is possible to choose a set b r with and interpretations in such 
　the following proposition formalizes a technique  binary search  that is well known in the literature  wagner  1; papadimitriou  1 . 
proposition 1 let be function of instances of a problem and be polynomially bounded in n  i.e. if the problem of deciding 	is in np  then the 
computation oj 
proposition 1 m is model of default theory {d w  iff there exists an extension of  d w  generated by a subset  in a normal default theory at most one extension e such that  exists. 
proposition 1 let e be an extension of the default 
d. then  e is an extension of 
1 	model checking for normal default theories is 	complete 
theorem 1 let be an interpretation and be normal default theory. deciding whether 
proof. we describe a turing machine m which decides this problem in polynomial time using an np-oracle for only o logn  times where n is the number of defaults. m works in four steps. 
　　step 1: m rejects if w. let g d be the set of all defaults d with c d . this step determines g by sorting out all unwanted   bad   defaults b = d g. none of the defaults of b shall fire or  is not a model of this extension  proposition 1 . checking if  w and constructing g can be achieved in polynomial time. in the following  let m be the cardinality of g. 
　step 1: m computes the cardinality of the set g  of generating defaults of the extension  i.e. those defaults in g which are applicable because their prerequisites can be inferred; due to lemma 1  g1 is unique. m assumes that e = cons{w u c{g1   is an extension  and in step 1 and 1 m will verify if no  bad  defaults have to be 
1 	automated reasoning 
used. to compute the cardinality of g1  m determines the number of defaults that do not fire. 
we can identify with a monotonic rule-system in which all consequents are jointly consistent. claim the problem to decide if at least  rules of a monotonic rule-system  in n rules  do not fire is in np. 
proof of claim: machine m guesses a data-structure is a set of deare interpretations  
and proves in polynomial time  using the monotonic rule system syntax of lemma 1 : w  
due 
to lemma 1  this is equivalent to the question if at least rules do not fire  i.e. if 
　from proposition 1 the number of defaults which do not fire can be computed in polynomial time using o logm  calls to an np-oracle. after concluding this 
step m knows  hence 
	step 1: if it can be shown that w 	and 
 is consistent for at least one d   b  then g1 is not a set of generating defaults and the given interpretation  is not a model for  d  w   proposition 1 . two types of  bad  defaults need to be distinguished: b  is consisting of defaults in which the prerequisites are not applicable  formally 
and  m determines the exact number of defaults in b  and in the fourth step will check for each default in b1  if the justifications are consistent with   after guessing the right g1 and b1 . claim the problem to decide  given  if the number of defaults in b1 is at least s  is in np. 
　　proof of claim: for a given  s  m guesses a datastructure with pretations. now m proves: 
  
formation of the cardinality of g1  therefore m now just has to guess a g  of suitable cardinality and 
check if it is the right one. . 
  
way  then there are at least s not applicable prerequisites of defaults  hence is equivalent to 
both steps can be concluded in polynomial time and are due to the initial guess in np. 
　hence   can be computed with log oracle calls  proposition 1 . 
　step 1: in the previous steps m has determined the cardinality of b1 and g . now m finally has to check that  is inconsistent for all defaults d 
b1  if yes  then g  is a generating set . to this aim  let us show that the converse problem is in np and introduce a machine n solving it. 
claim the problem to decide if w  is con-
sistent for at least one d b1  given the cardinality of g1 and b1  is in np. 

proof of claim: machine n guesses a data-structure 


fact that there is a default which is consistent with cons w  c g1  . 
all steps can be concluded in polynomial time and are due to the initial guess in n p . 
　this means that the output yes of machine n is achieved iff there exist defaults of b1 which fire  with guessing the only suitable g1 and b   and  the converse problem therefore needs merely one  negative  oracle call. 
　hence  step 1 to 1 are feasible in polynomial time with  calls to three different 
oracles in n p . with standard techniques these three oracles can be replaced with a single oracle. 
1 	ehnf default theories 
a default theory is disjunction-free  if w  all p d   all elements of each and all consequents c d  are conjunctions of  negated and not negated  literals. a horn clause is a disjunction of literals with at most one positive literal. a horn theory is a conjunction of horn clauses. a dual horn clause is a conjunction of literals containing at most one negative literal. a dual horn theory is a disjunction of dual horn clauses. 
definition 1 	a default theory  d w  is in extended 
horn normal form  ehnf  iff w and all elements of each j d  are disjunctions of horn theories  each p d  is a conjunction of dual horn theories  and each consequent c d  is a horn theory.   d w  is normal  then  trivially  the only element of each j d  is only a horn theory  too. 
　this is an ample class of default theories containing many restricted cases with an intractable reasoning problem even for normal default theories. however  model checking turns out to be tractable for normal ehnf default theories. 
theorem 1 let  be an interpretation and an ehnf default theory. deciding whether  d w  is in n p . 
proof.  sketch  guess g d  compute show that g =  and all satisfiability checks are of the form sat and due to the deduction theorem  the inference checks are equivalent to  all these checks are polynomial  because satisfiability of a horn theory and tautology checking of a dual horn theory are tractable; furthermore  the question sat is equivalent to sat  or ... or sat fm  and taut is equivalent to taut  and ... and taut ; therefore each check can be splitted to a quadratic number of checks in the number of disjunctions of w and resp.   however  if we would have allowed the consequents to be disjunctions  horn theories  too  the number of disjunctions would be exponential in the input length  even if only a logarithmic number of defaults would be allowed to have this form. . 
theorem 1 let  be an interpretation and be an ehnf default theory. deciding whether  is np-ziard  even if  is prerequisite-free  semi-normal  disjunction-free and all consequents are single literals. 

empty set shall be a model regardless to which evaluation of satisfies f. each extension has to contain  for each either iff f is satisfiable it can contain all i.e. f is satisfiable iff 
　instead of using a prerequisite-free default theory  in the above proof an  almost  normal default theory with prerequisites could be used  however the first set of defaults of the above proof cannot be presented as normal defaults unless using weak extensions  chapter 1  or disjunctive default logic of gelfond et al   with 

　we show that in the case of normal ehnf default theories  model checking is tractable  and moreover belongs to the hardest problems in p w.r.t. logspace-reductions. 
theorem 1 let  be an interpretation and  d  w  be an ehnf normal default theory. deciding whether  is in p. 
proof. we describe the algorithm given in figure 1: in the while loop  each default of the set g is tested and g  is created. to this aim  the check 
where 	 each 	is a horn theory  hence the negation a dual horn theory  and each is splitted to 
 dp tautology checks of dual horn theories  which is polynomial 	 the 	boolean 	functions 	taut dualhorntheory  and sat{horntheory  are assumed to be given . 	if  then each check was successful and the de-
fault is added to g . after at most  steps  all defaults with applicable prerequisites w.r.t. g have been added to the generating set g  of . to show  that this is a generating set of check that no default of d g is applicable  i.e. either the prerequisite cannot be inferred or the justification  which is in case of normal ehnf default theories only a singleton and only a horn 
	baumgartner and gottlob 	1 


figure 1: deterministic algorithm of theorem 1 
theory  is not consistent  which is implemented in the for each d  b loop. if dp  expressing that the prerequisite is inferred  and  expressing that sat  because one disjunction is satisfiable  i.e. the justification is consistent with g    then at least one of the  bad  defaults has to be used and not a model. 
theorem 1 let  be an interpretation and be an ehnf normal default theory. deciding whether  is p-hard  even if  is either 
disjunction-free or prerequisite-free. 
proof. in the case of disjunction-free default theories use a reduction of the p-complete problem of reasoning in propositional not-free logic programming  dantsin et a/.  1 . let be the default theory where each clause of p is translated into a normal default and the default is added which is feasible in logarithmic space since only one new default 
is added. then  is in the stable model of p. in the case of prerequisite-free ehnf default theories use a reduction of the  essentially the same  p-complete problem if a horn theory is satisfiable and use the default theory with w being a horn theory. 	
　if a normal default-theory is disjunction-free and prerequisite-free the problem no longer remains p-hard and can be shown to be in non-deterministic logspace. 
1 	automated reasoning 
1 	complexity of weak model checking 

iff h = j  see  e.g.  marek and truszczynski  1   and h is the weak generating set of this weak extension. 
　in prerequisite-free default theories extensions and weak extensions coincide. is a weak model of iff  is a model of at least one  consistent  weak extension. every extension is a weak extension  therefore every model is a weak model. however  the converse does not hold  since not every extension is a subset of a weak extension. 
theorem 1 let  be an interpretation and be default theory. deciding if weak model of is -complete  even if is semi-normal and prerequisite-free. 
　lemma 1 does not hold for weak generating sets  and for normal default theories it is neither sufficient to look at the largest weak generating set nor at the smallest w.r.t. g  hence an exponential number of subsets needs to be considered: 
theorem 1 let  be an interpretation and be a normal default theory. then the problem to decide if weak model of  complete. 
proof.  sketch  we use a transformation from the complete problem  i.e. the problem of checking 

be  normal prerequisite-free default theory. then the problem to decide if  is  weak model of  is conp -complete. 
theorem 1 let  be an interpretation and be an ehnf default theory. then the problem to decide if  weak model of  is np-complete even if the theory is disjunction-free and either semi-normal and prerequisite-free or normal  and p-complete if the theory is prerequisite-free and normal. 
1 	complexity of model checking with ael and n 
an interpretation  in the language is a propositional ael  n -model of a set of premises in extended with a modal operator  iff  satisfies an objective part of at least one stable expansion  n-expansion . 
theorem 1 let be a set of premises in and be an interpretation in deciding if is propositional ael  n -model is -complete. 

proof. hardness: weak extensions  extensions  of a default theory correspond to objective parts of stable expansions  n-expansions  of the translated theory  marek and tvuszczyriski  1; 1 . 
　membership: in  gottlob  1  it is shown that deciding if a formula is not occuring in all extensions is in 
  using the finitary characterization of niemela  with modal subformulae . consider the propositional 
and any m o d e l c o n t a i n i n g some 
1 	translatability issues 
a pfm-function / :  is a function embedding formalism a into formalism b fulfilling the additional criteria of polynomiality  faithfulness  extensions/expansions coincide in some way  and modularity  a propositional subtheory can independently be translated   janhunen  1; gottlob  1b . 
　we refer to  eiter and gottlob  1  for details of disjunctive logic programming  dlp   reasoning is as hard as in default logic  and to  inoue and sakama  1  for results that dlp can be pfm-embedded into default logic. 
theorem 1 unless the ph collapses  there exists no pfm-function embedding default logic  normal default logic or disjunction-free default logic into dlp. 
proof. assume the existence of a pfm-function embedding default logic into disjunctive logic programming; then a given default theory would admit the same models as a pfm-translation into a corresponding disjunctive program. however  as model checking with disjunctive logic programming is only conp-complete  this implies that  = conp. contradiction. 
1 	future research 
we plan to investigate the complexity of model checking for further interesting variants of default logic and other nonmonotonic logics. we hope that this will allow us to clarify a number of translatability issues  akin the result of chapter 1. 
acknowledgments 
the authors are grateful to c. d. koutras and r. rosati for reading an earlier version of this paper and suggesting improvements  and to the referees for several comments. 
