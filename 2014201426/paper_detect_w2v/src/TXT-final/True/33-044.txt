 
　　　a parallel processing method of rotating and comparing three-dimensional objects is presented. the multi-processor has an abstract structure in which the individual processors are located at the vertices of a geodesic dome. the design has been tested on the same type of object matching problems as shepard  1  used in his mental rotation experiments with human subjects. the same linear  reaction time** behaviour is found* 
	i 	introduction 
　　　shepard*s experiments demonstrated that human subjects can determine that two identical objects in different orientations are the same  with a reaction time that is proportional to their angular separation. the objects are simple - composed of a few unit cubes joined at their faces -- and are presented to the subjects as line drawings* shepard  uses his results to argue that people carry out mental rotations by an analog process  where by analog he means:  ...a process in which the intermediate internal states have a natural one-to-one correspondence to appropriate intermediate states in the external world*  this paper presents a parallel-process computational model for solving the object rotation and comparison task. it is relevant to machine vision and computer graphics problems where the modelling of three-dimensional objects 
is 	involved* 
　　　the linear reaction time is a direct result of the fact that the model involves parallel processing. the processors can directly communicate only with their immediate neighbours. each processor has its own local memory. the representation of an object is distributed amongst the processors. the complete object is represented by the total information stored by a l l the processors. in order to compare two objects it is f i r s t important to  align  them in the sense that each processor must hold information from corresponding parts of the two objects* once aligned  a test is made to determine how similar they are. in this test  each processor compares the information it has about the local shape of 
the f i r s t 	object 	with 	that 	it 	has 	about 	the 
second* 
	ii 	the model 
　　　the alignment process corresponds to the rotation of an object. to understand why the alignment process is proportional to the angular separation of the objects we must look further into the way in which objects are modelled. the abatract structure of the multi-processor system is as shown in figure 1. the processors are distributed over the surface of a sphere  like the t i l e s in the figure  and have direct communication links to their neighbours* most are hexagons having six neighbours  but a few are  of necessity in this type of tesseiation  pentagons. the modelled object is considered to be inside this sphere of processors with its center of gravity at the center of the sphere. each processor stores the radial distance of each intersection of the object's surface with the radial line from the processor's center to the center of the sphere. in addition  because a collection of points by i t s e l f does not define a surface  for each intersection point a link is stored to the neighbouring points on the object's surface. this representation is related to that of brown . note that the spherical abstract structure of the multi-processor does not require a spherical physical structure - it is only necessary to have the same physical communication structure. the same object in two different orientations w i l l have i t s shape information differently distributed amongst the processors. to align two objects requires shifting the information describing one of them* to shift the information means that messages must be sent between processors. the time taken for a message to get to i t s destination processor is a linear function of the number of intervening processors which have to relay it. the number of intervening processors is proportional 
to the angular separation of the source and destination processors because of the uniform distribution of processors over the sphere* the processors holding corresponding information from the two objects which are farthest apart are those along the  equator  of the rotation  and the angular difference between them w i l l be the same as the angular difference between the two objects. in summary  the time taken to  rotate  one object 
into another increases linearly with the angular separation between the objects because the information describing it must be relayed through 
a linearly increasing sequence of processors. 
1 

	i l l 	the computer simulation 
　　　a lisp program has been written which  while simulating the parallel hardware  carries out the parallel algorithms for rotating and comparing two shepard-style objects. the input to the program is two line-drawings expressed as a set of line segment endpolnt coordinates. the output is a statement of whether or not the two objects are the same or different. a brief description of the program follows. 
　　　the rotation mechanism is the most important part of the program. before a rotation can be begun  the axis of the rotation must be found. this is a serious problem because if one object is to be rotated into correspondence with another in linear time  it is not possible to spend time searching for the correct axis of rotation unless the search time happens to be either constant or linearly increasing. fortunately  it is possible to determine the unique axis and magnitude of rotation from the moments of inertia of the two objects  this observation was made at least as early as baumgart  1  . an object's moments of inertia  a generalization of center of gravity  define an lnertlal ellipsoid  and the required axis of rotation is the axis which w i l l align one object's lnertlal ellipsoid with the other's* having identical and aligned lnertlal ellipsoids does not guarantee that two objects are the same  but it does guarantee that if they are the same they w i l l be oriented in the same direction. the moments-of-inert la computation is a parallel process. 
　　　to rotate an object about a given axis each processor f i r s t computes what its own new location  expressed in spherical coordinates  would be if the point where the axis intersects the sphere of processors were to become location  1 1  - the  north pole . this effectively makes the axis of rotation the north-south axis of a spherical coordinate system thereby reducing subsequent calculation. the object is rotated in steps where the step else is no larger than the maximum angular difference between two processors. after each step  each processor checks to see whether the coordinates of the points it is holding are nearer to i t s center or to the center of a neighbouring processor. if the point is actually closer to one of the neighbours  then it is transmitted as a message to the neighbouring processor which then takes over responsibility for i t . the step size is limited so that a point never moves farther than the distance between neighbours. 
　　　once one object has been rotated into correspondence with the other  each processor does a simple comparison of the points it is holding for the two objects. if the corresponding points are within a given tolerance of one another  then they are considered to be matching. if no processor discovers a mismatch of points then the two objects are reported to be identical. 
　　　the one remaining aspect of the implementation is how the line drawings are processed to obtain a three-dimensional model and stored in the sphere of processors. in t h i s   the limited nature of the domain of object types has been exploited. almost every closed curve in one of the line drawings is the side of a unit cube* knowing that a closed curve is a perspective projection of a unit square is sufficient information to provide a set of four equations in four unknowns which can be solved for the exact location and orientation of the face it 
represents* 

	iv 	conclusion 
　　　the current simulation la baaed on a aet of 1 processors. in a truly parallel implementation the proceaalng time la guaranteed to be a linear function of the angular difference in the object's orientatlona by the fact that the rotationa are carried out in steps of fixed atep size as neceaaitated by the conatrainta of message propagation through a network of locally connected proceasors. we can aee - in contraat to what would be the caae during the execution of a serial matrix multiplication baaed algorithm - that at a l l times during the rotation process an object's repreaentation la in a consistent state. thus the internal atatea of the rotation have  a natural one-to-one correspondence to appropriate intermediate atatea in the external world . by both aatlafying shepard'a definition of an analog proceaa and by exhibiting linear reaction-time behaviour  the parallel algorithm discussed above provides a computational model of the mental rotation phenomenon. 
acknowledgements 
　　　edwin bryant  thomas strothotte and leigh hunt palmer have made aubatantlal contributions to thla paper. the financial support of the national science and engineering reaearch council of canada under grant a1 la gratefully acknowledged. 
