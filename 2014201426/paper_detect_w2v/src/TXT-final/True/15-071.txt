 
     in t h i s paper we show  how semantic nets when i n t e r p r e t e d as s o - c a l l e d conceptual schemata can 
be s u c c e s s f u l l y made to serve as common 
denominator to two as yet d i s p a r a t e areas of a r t i f i c i a l 	i n t e l l i g e n c e and 	r e a l - l i f e data management: 	knowledge representation and data base design. 
     f i r s t   we describe the requirements to semantic nets in the context of production data bases. next we describe the automated mapping between the semantic net and  possibly several  dbmss. 
1. 	d i f f e r e n t f a c t or property a s s o c i a t i o n s   
e . g .  an airline-company is f l y i n g a commercial-aircraft . 
     this association can also be read in the other 	d i r e c t i o n : 
 a commercial-aircraft is flown-by an airlinecompany  . 
     furthermore  the same expression  flown-by  can be used to construct a reference to a  set of  o b j e c t   s   : 
 the commercial-aircraft flown-by airlinecompany xyz . 

     further we show how t h i s formal and machine accessible mapping allows to execute f o r m a l l y s t r u c t u r e d english queries  and formulate expert r u l e s in a data base c o n t e x t . 
implementation status and research d i r e c t i o n s for these ideas are given resp. 	suggested. 
	i. 	introduction 
　　　in t h i s paper we intend to discuss the p r a c t i c a b i l i t y o f i n t e r p r e t i n g c e r t a i n types o f semantic nets as conceptual schemata for a class 
o f r e a l - l i f e production  possibly very large  databases. this has the double advantage of i n t r o d u c i n g more semantics and i n t e g r i t y i n t o the database design as w e l l as p r o v i d i n g support f o r   say  an expert system by making the   c o n t e n t s   of the net   i . e . the database  under  the net  a v a i l a b l e through a very high l e v e l user i n t e r f a c e . 
     the t o o l s for making t h i s happen mainly i n v o l v e an i n t e l l i g e n t   i . e . semantics preserving  
mapping between the semantic net and the underlying database s t r u c t u r e   and a userf r i e n d l y 	i n t e r p r e t e r / c o m p i l e r 	for 	t h i s mapping. 
i i . semantic nets as a modelling method for production data bases 
     as other semantic nets  1   1   1  a database semantic net  db-sn  comprises two kinds of a s s o c i a t i o n s : 
1. the taxonomic   i s - a   a s s o c i a t i o n   e . g .  a bomber is a military-aircraft   see f i g u r e 
1 . 
     as far as i n d i v i d u a l occurrences are concerned  	it becomes 	i n a p p r o p r i a t e to represent them in the semantic net when dealing w i t h very large data bases 	 vldb  	in a production environment  	and t h i s for two reasons: 
1. in a production-db there are in general too many i n d i v i d u a l occurrences; 
1. production dbs are dynamic: 
i n d i v i d u a l occurrences come and go with a time scale considerably superior to t h a t of changes in the net s t r u c t u r e . 
     therefore a db-sn contains only o b j e c t types of which the i n d i v i d u a l occurrences are instances. as a consequence  the db-sn contains only f a c t types  of which f a c t s are instances. 
     in f i g u r e 1 these object types are depicted as c i r c l e s . dashed c i r c l e s for the l e x i c a l o b j e c t types  having a l i s t a b l e representation  
e . g . constructor-name  and s o l i d c i r c l e s for the n o n - l e x i c a l o b j e c t t y p e s   e . g . constructor. n o n - l e x i c a l occurrences do not have themselves an e x t e r n a l r e p r e s e n t a t i o n but can be r e f e r r e d to by other l e x i c a l occurrences.  in general a reference t r e e is spanning one or more l e x i c a l occurrences . 
     for some o b j e c t types the d i s t i n c t i o n is not made in n a t u r a l language  e . g . maximum-speed  and thus we d e p i c t them as two concentric c i r c l e s . the o b j e c t types connected w i t h a i s - a l i n k to a   l a r g e r   	type are c a l l e d subtypes. 

1 r. meersman and f. vanassche 

	f i g u r e 1: 	example of a semantic 	net 

     to populate a vldb means: to qualify object instances as belonging to an object  sub type and to add fact instances. 
     obviously  given such freedom to alter the population of the database on the spot  it becomes essential to provide integrity rules  in order to avoid pollution. an example of such an integrity rule might be that the aircraft is built-by only one constructor   i t is depicted in figure 1 by a double headed arrow . note this is a functional dependency. 
another integrity rule might be that commercial aircraft is disjoint from military aircraft. the db-sn together with its integrity rules constitute a so-called conceptual schema of an information system. 
     it is the closeness of these semantic nets to natural language concepts that w i l l allow the specification of  integrity  rules i n   e.g. structured english. examples of simple integrity rule declarations in the  formal  ridl language  1   see also below  are given in figure 1. words underlined are ridl keywords. 
enforce aircraft is built-by 
only one constructor 
enforce commercial-aircraft 
is disjoint from 
         military-aircraft enforce aircraft having maximum-speed 
is included in 
         aircraft having aircraft-name enforce country is using 
only military-aircraft built-by same country 
figure 1 : example integrity rules 
     such integrity rules are getting increasing attention in the modelling of data bases. the recent iso report on conceptual schemata  1  states that a l l of the integrity rules should appear in the conceptual schema. hence this schema must be a sufficiently powerful tool for specifying them  and the database manager  the schema interpreter  sufficiently powerful to 
enforce them. it must be emphasised here that the iso report uses the conceptual schema in a much  richer  sense than is done in classical database theory. 
r. meersman and f. vanassche 1 
i i i . the automated mapping to a dbms environment 
     for reasons of storage and manipulation efficiency  the db-sn and its rules are translated to a data base schema. this data base schema is expressed in 1th normal form relations and its integrity rules. 
     the automated mapping to such a data base schema consists of three parts: 
1. analysis of the semantic net 
1. reference type evaluation and generation 
1. translation of the db-sn to 1nf relations 
a. 	analysis of the semantic net 
     one may view the analyser as a practical implementation of a theorem prover. it detects redundancies  implications and inconsistencies by building inferences from the semantic net and a subclass of its integrity rules. 
     we can take the subtype structure as a very simple example. if we look at the semantic net as a graph  we see that the subtype links constitute a subgraph which in i t s e l f is a set of connected directed graphs. the analyser is programmed with the following rules about these directed graphs: 
1. the graph must contain no c i r c u i t s . 
1. all arcs are distinct  have different vertices  
1. the graph must contain exactly one vertex  the root  with zero incoming arcs   indegree  zero . 
　　one task of the analyser is then of course  to refuse subtype structures violating these rules. inconsistencies may also arise between a subtype structure and integrity rules: in figure 1  it is obvious that adding any new object type which would be a subtype of both passengeraircraft and fighter would result in an inconsistent subgraph. 
     an example of a redundancy - that is detected by the analyser - is to state that a bomber is an aircraft. 	it is implied by the statement that a bomber is a military-aircraft and that a military-aircraft is an aircraft  since a subtype link is a transitive association. 
     similar redundancies and inconsistencies are detected when analysing the fact types and the integrity rules upon them. 
b. 	referenceability analyser and reference type generator 
     since it is the intention to process the information by a machine  a dbms  it is a requirement that every object is referenceable by machine processable   i . e . lexical  objects. 

1 r. meersman and f. vanassche 
     this 	is accomplished by c o n s t r u c t i n g a reference type for every n o n - l e x i c a l o b j e c t t y p e . 	the discussion of v a l i d reference types is outside the scope of t h i s paper and can be found in 	  1   . 	in s h o r t   a reference type can be seen as a d i r e c t e d graph w i t h no loops  e x a c t l y one node w i t h indegree zero 	 the nolot to be referenced  	and a l l l e x i c a l nodes must be w i t h 
outdegree zero. the c o n s t r u c t i o n of the d i r e c t e d 
graph i s subject t o c e r t a i n v a l i d i t y c o n d i t i o n s   since not a l l f a c t t y p e s and subtype l i n k s are e l i g i b l e . 
　　　as an example iata-type-nr is a good reference type for a commercial-aircraft  while the airline-company is not  since it is not unique for a commercial-aircraft. however  the iata-type-nr is not a good reference type for aircraft since o n l y some of them  the commercial a i r c r a f t   have such a number. on the other hand a l l commercial-aircraft have an 
aircraft-name i n h e r i t e d from  being-an aircraft . 
     the reference type generator 	t r i e s to c o n s t r u c t a reference type 	for every n o n - l e x i c a l 
o b j e c t type using an and/or graph search. this is done according to some o p t i m a l i t y c r i t e r i a   f o l l o w i n g some t i e breaking r u l e s   and t a k i n g i n t o account the above mentioned v a l i d i t y 
c o n d i t i o n s . when it f a i l s in doing so  the db-sn is said to be non referenceable and cannot be 
mapped to a r e l a t i o n a l data base schema without a d d i t i o n a l assumptions. 
     the above might seem a t r i v i a l task on a semantic net as depicted in f i g u r e 1. however  it is easy to see that complexity increases 
e x p o n e n t i a l l y w i t h the size of the semantic 	n e t . 
c. 	t r a n s l a t i o n of the db-sn to 1nf r e l a t i o n s 
     the t r a n s l a t i o n to 1nf r e l a t i o n s or record types involves four major phases : 
1. the t r a n s l a t i o n of the n o n - l e x i c a l l e v e l t o the l e x i c a l l e v e l   making use of the i d e n t i f i e d reference t y p e s . 
1. the t r a n s l a t i o n of subtypes. subtypes do not e x i s t at the db schema l e v e l . they are t r a n s l a t e d i n t o i n t e g r i t y r u l e s . 
1. the grouping of the b i n a r y a s s o c i a t i o n s 	i n t o n-ary 	r e l a t i o n s . 
1. the t r a n s l a t i o n of the i n t e g r i t y r u l e s . i n t e g r i t y r u l e s expressed on n o n - l e x i c a l f a c t s must be t r a n s l a t e d to i n t e g r i t y r u l e s expressed on pure l e x i c a l a t t r i b u t e s o r combinations t h e r e o f . some i n t e g r i t y r u l e s w i l l take a completely d i f f e r e n t form when expressed in a db schema. for i n s t a n c e   the t h i r d i n t e g r i t y r u l e 
expressed in f i g u r e 1 w i l l be t r a n s l a t e d as a n u l l value permission  see e . g . date  on the a t t r i b u t e maximum-speed in the generated r e l a t i o n  aircraft . 
iv. manipulating production data bases in terms of a semantic net description 
     as said b e f o r e   our research is focused on r e a l - l i f e production environments where very l a r g e and/or complicated databases are the r u l e . such databases are accessed t y p i c a l l y through l a r g e sets of a p p l i c a t i o n programs of g r e a t l y 
varying t y p e . 	most o f t e n   	these w i l l be w r i t t e n 
in a s u i t a b l e implementation language such as cobol  pascal  ada  e t c . and manipulate the database d i r e c t l y in i t s record format: these languages provide n a t u r a l r e p r e s e n t a t i o n for r e c o r d - l i k e s t r u c t u r e s . 
     of course  if the database was designed and implemented using techniques and generators as discussed i n section i i i   i t then becomes very d e s i r a b l e to possess a very high l e v e l language in which one is able to describe and manipulate 
the 	i n f o r m a t i o n in terms of the d e f i n i n g semantic n e t . 	this language can then be i n t e r p r e t e d on the t a r g e t database machine r e s u l t i n g 	from the automated mapping  or be the source input for 
generators on t h i s machine. 
     for the db-sn described above  such a language has been d e f i n e d . 	it is c a l l e d ridl for  reference and idea language  	and i t s compiler 	is able to i n t e r p r e t the i n f o r m a t i o n produced by the automated mapping in order 	to t r a n s l a t e back and f o r t h between semantic net concepts and the record types of the generated database. 
     to show how the ridl syntax allows to manipulate knowledge at a higher l e v e l than r e c o r d - or r e l a t i o n - o r i e n t e d syntaxes  we r e f e r to  1  and  1 . a l s o   the examples below should g i v e an i n d i c a t i o n of some of i t s alleged power. 
     on the one hand  the language has a purely f u n c t i o n a l component which centers around i n f o r m a t i o n r e f e r e n c i n g : one always s p e c i f i e s 
which i n f o r m a t i o n is needed at a given point without having at a l l to provide the procedure t h a t t e l l s how to o b t a i n it from the database. on the other hand  a complete procedural component is also present in ridl in order to allow people to handle more e a s i l y   n a t u r a l   procedural aspects   e . g . computations  c o n t r o l s t r u c t u r e     as w e l l as s u p p o r t i n g   e . g . system d e s i g n . 
     as an example  consider the ridl query  words underligned are keywords of the language : 
l i s t country-name of country using aircraft not b u i l t - b y same country 
of which the meaning should be s e l f - e v i d e n t from the semantic n e t . however  to b u i l d an a p p l i c a t i o n program t h a t executes t h i s at the generated r e c o r d - l e v e l is in general not a t r i v i a l task  even in the case above it is not d i f f i c u l t   but tedious  and c e r t a i n l y involves s p e c i f i c programmer e f f o r t . even in ridl  the above query can be e q u i v a l e n t l y formulated as: 


which illustrates some of its  procedural  aspects. other such constructions are f u l l support of procedures and functions  with object-
oriented parameter passing   set operations and the capability to define macros. 
     note that the subject of the l i s t statement above is a type of lexical objects. this is indeed a requirement: only the occurrences in the  lexical   leafs  of the semantic net have listable representations. 
r. meersman and f. vanassche 1 
　　an example of such rule on the db-sn of figure 1 might be: 
rule r1 
when add  country c is b u i l d i n g 
military aircraft a  
do 
d e l e t e  country minus c  is using a end r u l e 
note how t h i s r u l e would implement a 
 possible  enforcement of the l a s t i n t e g r i t y r u l e 
of f i g u r e 1. 
