
diagnosability of systems is an essential property that determines how accurate any diagnostic reasoning can be on a system given any sequence of observations. generally  in the literature of dynamic event-driven systems  diagnosability analysis is performed by algorithms that consider a system as a whole and their response is either a positive answer or a counter example. in this paper  we present an original framework for diagnosability checking. the diagnosability problem is solved in a distributed way in order to take into account the distributed nature of realistic problems. as opposed to all other approaches  our algorithm also provides an exhaustive and synthetic view of the reasons why the system is not diagnosable. finally  the presented algorithm is scalable in practice: it provides an approximate and useful solution if the computational resources are not sufficient.
1 introduction
nowadays  monitoring and diagnosing complex communicating event-driven systems has huge economic impact by ensuring better reliability  maintenance and safety  lamperti and zanella  1 . such diagnostic capabilities are  for instance  required in aeronautic  ghelam et al.  1  or automotive systems  telecommunications  pencole¡ä and cordier  1  and electronic commerce  yan et al.  1 . for many years  the problemof automated fault diagnosis of these kinds of systems has received constant and considerable attention from researchers in the fields of artificial intelligence and control. given a monitor continuously receiving observations from a system  automated diagnosis methods aim at detecting all possible faults that explain the observations.
¡¡however  the resulting diagnosis depends on the diagnosability of the system  sampath et al.  1 . if the system is strongly diagnosable  a diagnostic process will find an accurate explanation for any possible set of observations from the system  otherwise the diagnosis will provide an ambiguous and useless explanation. consequently  diagnosability analyses should be performed on the system before any diagnostic reasoning. the diagnosability results then help in choosing the type of diagnostic algorithm that can be performed and provide some information of how to change the system to make it more diagnosable  pencole¡ä  1 .
¡¡in this paper  we propose a formal framework for checking diagnosability on event-driven systems which is mainly motivated by two facts. on the one hand  checking diagnosability means determining the existence of two behaviours in the system that are not distinguishable. however  in realistic systems  there is a combinatorial explosion of the search space that forbids the practical use of classical and centralised diagnosability checking methods  sampath et al.  1  like the twin plant method  jiang et al.  1; yoo and lafortune  1 . on the other hand  in the case of a nondiagnosable system  checking its diagnosability is not sufficient; the diagnosability analysis should also provide the reasons why the system is not diagnosable. given these reasons  either the system specification is redesigned or diagnostic reasoning is improved by taking into account the fact that the diagnosis of a fault may always be ambiguous.
¡¡our proposal makes three contributions to the diagnosability problem. the first one is the definition of a new theoretical framework where the diagnosability problem is described as a distributed search problem. instead of searching for not distinguishable behaviours in a global twin plant  we propose to distribute the search based on local twin plants and to determine such global behaviours without computing any part of the global twin plant. the second contribution comprises the nature of the feedback in case the faults are not diagnosable. since the search is distributed over the whole system  the analysis provides an exhaustive and synthetic view of the diagnosability analysis of the system  why a given fault is not diagnosable . the third contribution is about the practical use of the algorithm. since the diagnosability analysis problem is complex  the complete analysis may not be possible due to a lack of computational resources. however  the distributed search makes the computation scalable in the sense that our algorithm is able to provide an approximate but exhaustive solution to the diagnosability problem whatever the computational resources are.
the paper is organised as follows. section 1 presents some background on diagnosability on event-driven systems. section 1 introduces our theoretical framework for diagnosability checking. section 1 presents a scalable algorithm for distributed diagnosability checking. in section 1  related works are compared and discussed.
1 background
1 diagnosability in discrete-event systems
the system is modelled using classical automata: this formalism is aimed at modelling any discrete event system with multiple faults  sampath et al.  1 . we call a fault or a critical event any event whose occurrence a monitoring agent aims to identify. we suppose that a fault is not observable and occurs in one component. the modelling of the system is modular: each component has a local model and a synchronisation operator sync is defined in order to implicitly represent the global model of the system.
definition 1  model of a component  the model of the component i is the finite state machine
  where
  xi is the set of states  xi = {x1i ... xmi}  
  ¦²i is the set of events 
  x1i is the initial state  and
  ti is the transition set  ti   xi ¡Á ¦²i ¡Á xi .
¡¡the set of events ¦²i is divided into four disjoint parts: ¦²oi is the set of observable events  ¦²si is the set of events shared among components  they represent communications between components   ¦²fi is the set of unobservable fault events and ¦²ui is the set of other unobservable events.
g1

figure 1: model of a system defined by two components. solid lines denote observable transitions  dashed lines shared transitions and dotted lines failure transitions.
¡¡figure 1 illustrates a system composed of two local models defined as above. the synchronisation operation  denoted sync {m1 ... mn} s   is the classical synchronisation operation on the n finite state machines {mi} based on the set of shared events s. the result m of the synchronisation is the subset of the cartesian product m1 ¡Á ... ¡Á mn restricted with the following rules.
  if e ¡Ê s then from any state  x1 ... xn   the event e can occur if for all machines mj where e can occur  there exists in mj a transition.
 then from any state  x1 ... xn   the event e can occur if there exists a machine mj where there exists a transition.
¡¡the models of components and the operation sync define the decentralized model of the system. the global model g then results from the synchronised product of the n components {gi} where the shared events are synchronised:
.
¡¡a behaviour of the system is then represented by a transition path in g starting from the initial state x1 =  x1 ... x1n  of g. in the following  a path will always denote a transition path starting from the initial state. moreover  as in  sampath et al.  1   the observable behaviour of the system is supposed to be live  which means that for any infinite path p of g  the sequence of observable events associated with p and denoted obs p   is infinite.
¡¡the classical diagnosability property of the system is a global property defined on the paths in g  sampath et al. 
1 .	two paths p and p in g are distinguishable iff
. let p = pfsf denote a path such that pf is a path ending with the occurrence of a fault f to a state xf and sf is a subpath whose initial state is xf. the diagnosability of fault f is then defined as follows:
definition 1 f is diagnosable iff
 p = pfsf  l ¡Ê n |obs sf |   l  
such thatoccurs in
¡¡if a fault is diagnosable then a diagnostic algorithm can diagnose its occurrence with certainty based on a finite sequence of observations. diagnosability checking thus requires the search for an infinite path p  i.e. a path containing a cycle  with such that. the pair  is called a critical pair  cimatti et al.  1 .
1 twin plant method for checking diagnosability
we now recall a centralised method to check whether f is diagnosable or not: the twin plant method  jiang et al.  1 . for the sake of clarity in the rest of the paper  the twin plant method is presented in an original manner  based on the decentralised model instead of the global model.
 definition 1  local diagnoser  the local diagnoser of a is the nondeterministic finite state machine  where
is the set of states     is the set of events    
is the initial state  and is the transition set  x f   ¡ú¦Ò  such that there exists a transition sequence
	1	m	¦²fi	¦²ui and	=	 ¦²i ¦²fi .
¡¡the top of figure 1 depicts such a local diagnoser. the basic idea of a twin plant is to build a machine that compares every pair of paths  in the system that have the same observable behaviour  i.e. . a local twin plant is essentially the same type of machine but the paths are local to a component. a local twin plant is based on the synchronisation of two instances  left  and  right  of the same diagnoser based on the observable events ¦²oi =
. since only observable behaviours are compared  the shared events must be distinguishablein both instances: in
 resp.   any shared event ¦Ò ¡Ê ¦²si fromis renamed l:  resp. r:
definition 1  local twin plant  the local twin plant of gi is the finite state machine
.
¡¡one state of a local twin plant is a couple x  =  that represents two possible diagnoses  the left one and the right one  given the same observable sequence. if f belongs to fl ¡Èfr but is not in fl ¡Éfr then f cannot be diagnosed in this state with certainty. in this case  the state x  is called f-nondiagnosable. otherwise it is called f-diagnosable. figure 1 illustrates a local twin plant for the diagnoser shown at the top of the same figure. its state labels
 top  are composed of the state labels of  middle  and   bottom . circular nodes denote f1-nondiagnosable states.

figure 1: local diagnoser  top  and part of the twin plant g 1  bottom  of component g1 shown in figure 1.
¡¡in the following  ¦Ø represents any set of components g¦Ø = {gj1 ... gj|¦Ø|} of the system with |¦Ø| ¡Ý 1. the ¦Ø-coupled twin plant is the twin plant of ¦Ø obtained by synchronisation of the local twin plants.
definition 1  ¦Ø-coupled twin plant  the ¦Ø-coupled twin plant is
.
¡¡by extension  a state x  =  x j1 ... x j|¦Ø|  is called fnondiagnosable if there exists a state x jm which is locally f-nondiagnosable.
¡¡the synchronisation operation sync is commutative and associative  moreover  and ¦²oi are disjoint sets by definition. therefore any ¦Ø-coupled twin plant can be also obtained by first synchronising the local diagnosers over the set of shared events  to obtain the diagnoser of ¦Ø  followed by the synchronisation of two instances of the later over the set of observable events.
¡¡consequently  considering ¦Ø = g = {g1 ... gn} the g-coupled twin plant represents exactly the global twin plant  gtp for short  of the system where all paths of g with the same observable behaviour are compared  hence the following fundamental result.
theorem 1 f is diagnosable in g iff  in the g-coupled twin plant  there is no path p with a cycle containing at least one observable event and one f-nondiagnosable state.
¡¡such a path p represents a critical pair  p1 p1 : in the following  p is called a critical path. the twin plant method searches for such a path in the gtp.
1 theoretical framework
we now show how to distribute the diagnosability check for a fault f without computing the gtp. the component where f may occur is denoted gf in the following. the terms diagnosable and nondiagnosable respectively denote f-diagnosable and f-nondiagnosable. furthermore  sync g  denotes  without ambiguity  the product of all finite state machines in g synchronisedovertheir shared events only.
¡¡considering the set of local twin plants {g 1 ... g n} defined in section 1  only g f contains diagnosability information about f. the main idea of the distributed checking is to propagate firstly the diagnosability information to the other local twin plants. after the propagation  it is possible to decide locally which parts of the local twin plants are relevant to solve the diagnosability problem. finally  for each local twin plant  a reduced twin plant is computed by removing all irrelevant parts.
1 propagation of diagnosability information
the propagation of the diagnosability information from g f to all other local twin plants is based on their connectivity with respect to g f.
definition 1  ¦Á-connectivity con ¦Á  ¦Ã   the set of finite state machines connected to the finite state machine ¦Ã by distance ¦Á is recursively defined as follows.
con 1  ¦Ã  = {¦Ã}
con ¦Á  ¦Ã  = {¦Ã1 |  ¦Ã1 ¡Ê con ¦Á   1  ¦Ã  such that ¦Ã1 and ¦Ã1 share at least one event and ¦Ã1 ¡Ê/ con ¦Â  ¦Ã  for all ¦Â   ¦Á}.
¡¡components ¦Ã1 and ¦Ã1 are connected if ¦Ã1 ¡Ê con 1  ¦Ã1 . the set transcon ¦Ã  denotes the set of components whose behaviour can possibly influence that of ¦Ã  transcon ¦Ã  = con ¦Á  ¦Ã   where n is the number of components in the system.
¡¡reducing a local twin plant g i consists in finding a set of states  denoted p g i   that can possibly be involved in the nondiagnosable states of gtp. these possibly nondiagnosable states p g i  are determined by analysing the connectivity between the component gi and the component gf.
definition 1  possibly nondiagnosable states  the set of possibly nondiagnosable states p g i  of a local twin plant g i is determined as follows.
1. p g i  = {x ¡Ê x i | x is nondiagnosable} if gi ¡Ê con 1  gf   i.e. gi = gf 
1. p g i  = y i if gi ¡Ê con ¦Á  gf  with ¦Á ¡Ê n+ and for all states y  ¡Ê y i and all connected twin plants gj ¡Ê con ¦Á   1  gf  there exists a state  y i x j  in the twin plant sync {g i g j}  such that x j is possibly nondiagnosable.
1. p g i  = x i if gi ¡Ê/ transcon g f 
¡¡this definition can then be extended to any state x  =  x j1 ... x j|¦Ø|  from any ¦Ø-coupled twin plant:
definition 1 a state x  =  x j1 ... x j|¦Ø|  in a ¦Ø-coupled twin plant g ¦Ø is possibly nondiagnosable iff
 i ¡Ê {1 ... |¦Ø|} x ji ¡Ê p g ji .
¡¡for example  to propagate the diagnosability information of f1 in g1 to g1  see figure 1  we compute g 1  the local nondiagnosable states  see figure 1  and finally the twin plant g 1  see figure 1 . since g 1 and g 1 share the events l:s1 and r:s1 they are connected  g 1 ¡Ê con 1  g 1  . thus to obtain p g 1   a synchronisation of g 1 and g 1 leading to is required  see figure 1 . in only states  x 1 y 1  and  x 1 y 1  are composed of a state in p g 1 . thus only state y 1 could be possibly nondiagnosable. since g 1 is the only connected twin plant in con 1   1  g 1  there is no need to consider other local twin plants to check whether y 1 is indeed in p g 1 . therefore the set of possibly nondiagnosablestates in g 1 is p g 1  = {y 1}.

o1
figure 1: part of twin plant g 1  left  for component g1  see figure 1  and its synchronisation  right  with the part of g 1 depicted in figure 1.
¡¡every state that is not possibly nondiagnosable is certainly diagnosable. this results from the following relationship between nondiagnosable and possibly nondiagnosable states of the gtp:
theorem 1 a state x  in the gtp is nondiagnosable iff it is possibly nondiagnosable.
proof:
    supposethere exists a state x  =  x 1 ... x n  in the gtp such that x  is nondiagnosable and a state x i such that x i ¡Ê/ p g i . cond. 1 of def. 1 implies that g i is in transcon g f . since x  is nondiagnosable the state x f from g f  also contained in x   is nondiagnosable. it follows that x f ¡Ê p g f   see cond. 1 of def. 1   so g i is in transcon g f    {g f}. therefore  there exists an ¦Á   1 such that g i ¡Ê con ¦Á  g f . cond. 1 of def. 1 ensures that there is a twin plant
g j ¡Ê con ¦Á 1  g f  in which all states  for which   do not belong to p g j .
since gtp results from the synchronisation of g j and g i  it means that x i ¡Ê/ p g i  implies that x j ¡Ê/ p g j  where x j denotes the state from g j contained in x . the previous reasoning led from the existence of a state x i = y ¦Á in a twin plant g i = h ¦Á ¡Ê con ¦Á  g f  with y ¦Á ¡Ê/ p h ¦Á  to the existence of a state x j = y ¦Á 1 in a twin plant g j = h ¦Á 1 ¡Ê con ¦Á   1  g f  with y ¦Á 1 ¡Ê/ p g ¦Á 1 . by recursively applying ¦Á   1 times the same reasoning  it follows that there exists a twin plant h 1 belonging to con 1  g f  and a state y 1 from h 1 belonging to x  such that y 1 ¡Ê/ p h 1 . since g f is the only element in con 1  g f   see def. 1  it means that h 1 is actually g f and y 1 = x f. it finally follows that x f ¡Ê/ p g f   which is a contradiction.
    suppose there exists a state x  ¡Ê p gtp  containing the local state x f ¡Ê g f such that x  is diagnosable. this implies that x f ¡Ê/ p g f . therefore x /  ¡Ê p gtp   see def. 1  which contradicts the assumption. 
1 distributed diagnosability verification
we now show how we can exploit theorem 1 firstly to reduce the size of twin plants by removing all states that are irrelevant to the diagnosability test  see lemma 1 below  and secondly to distribute the diagnosability test to a set of twin plants.
definition 1  reduced twin plant  a twin plant is reduced if all its states are either initial or on a path whose target state is possibly nondiagnosable.
¡¡in the following  r g   denotes the twin plant that is obtained by removing all states x /  ¡Ê p g   of g  that do not lead to a possibly nondiagnosable state. to simplify the synchronisation of reduced twin plants the event set of the latter remains unchanged  r ¦²  =  ¦²    that is  even if r g   does not contain any transitions labelled ¦Ò  ¡Ê ¦²   the event still belongs to its event set. thus the following equivalence holds for any two twin plants 
  see also def. 1 .
lemma 1 the global twin plant g  = sync {g 1 ... g n}  contains exactly the same critical paths as r g  .
proof: since the target state of every critical path p in g  is part of a cycle containing at least one nondiagnosable state x   see theorem 1   every state in p leads to x  and hence to a state that is entirely composed of possibly nondiagnosable states. thus  p is also a path in r g  . further  since every path in r g   is also a path in g  it follows that r g   contains only the critical paths defined in g . 
¡¡we now show how we can decide the diagnosability problem based on a set of distributed twin plants without requiring the computation of the gtp.
theorem 1 a fault f in system g is diagnosable iff there exists a set of reduced twin plants g r = {g ¦Ø1 ... g ¦Øk} such that
1. {¦Ø1 ... ¦Øk} is a partition of the system components  for all  and
1. no plant in g r contains an observable possibly nondiagnosable cycle  opnc for short   i.e. a path p = x   ¡ú¦Ò   with at least one possibly nondiagnosable
state and one observable transition label .
proof:
    suppose f is diagnosable  but there does not exist such a set gr. the gtp  which satisfies cond. 1  also contains an opnc and thus an observable nondiagnosable cycle  see theorem 1 . this implies that f is not diagnosable  see theorem 1  and thus contradicts the assumption.
    suppose now that there exists such a set gr and f is not diagnosable. from the nondiagnosability of f it follows that there exists an observable nondiagnosable cycle in the gtp and hence an opnc with an observable event ¦Ò ¡Ê ¦²oi  see theorem 1 . based on the synchronisation operation  see page 1  it means that every ¦Ø-coupled twin plant g ¦Ø with gi ¡Ê ¦Ø contains an opnc. thus every set satisfying cond. 1  and therefore involving gi  does not satisfy cond. 1. hence there does not exists such a set gr which contradicts the assumption. 
1 algorithm
this section presents a scalable algorithm that exploits theorem 1 to reduce the search space of the diagnosability analysis by distributing it on several reduced twin plants. every set of reduced twin plants gr represents a partition of the components of the system and the challenge is to find one that contains no opncs and thus proves that f is diagnosable. opncs can be removed by synchronising connected twin plants. therefore this operation is the basis for the distributed diagnosability check  see algorithm 1 .
¡¡the algorithm performs as follows. after the initialisation and the computation of the local reduced twin plants  line 1   the basic idea is to synchronise them pairwise using the function . the synchronisation is performed only if either r g i  or r g i   has an opnc. this pairwise synchronisation and the reduction of the resulting twin plant is computed using function redpairwisesync g    line 1 . the selection of pairs to synchronise is important since it has a strong impact on the algorithm efficiency. among the different selection heuristics  e.g.  lamperti and zanella  1    pencole¡ä and cordier  1   a common rule must be respected: a pair of twin plants to synchronise must be connected otherwise the synchronisation will not remove opncs.
¡¡the synchronisationoperation is repeated step by step until the algorithm stops due to one of the following causes.
 1  none of the twin plants in g  contains an opnc  that is  a partition gr has then been determined which verifies that fault f is diagnosable  see theorem 1 .
 1  a twin plant contains an opnc that cannot be removed by further synchronisations. this is the case if the reduced gtp has been computed which involves all components.
 1  due to finite computational resources  the algorithm must stop. in this case it returns a set of twin plants with opncs that provides all possible reasons of why f might not be diagnosable. at this level  the nondiagnosability of f is not certain but it can be deduced that any subset of components involved in an element of the partition is not sufficient to diagnose f with certainty.

algorithm 1 distributed diagnosability check

1: input:
- component models g1 ...gn of the system
- fault f that can occur in component gf
1: initialisations:
	g  ¡û  	set of relevant twin plants
1: compute local twin plants g i for all components gi and add them to g 
1: g  ¡û getnondiagstatelab g  g f 
1: reduce all twin plants in g 
1: while existsopnc g    and sufficientmemory g   and
¡¡nrelements g     1 do 1: g  ¡û redpairwisesync g  
1: end while
1: if existsopnc g   is false then
1:	return  f is diagnosable 

1:	return g cyc
1: end if

¡¡in case  1   that is if f is not diagnosable  all critical paths are returned. they provide a complete diagnosability analysis of the undistinguishable behaviours that cause the nondiagnosability of f. this information also contains a synthetic view of the nondiagnosability of f.
¡¡extracting this synthetic view from the opncs consists in considering every nondiagnosable state

   in the opncs.	if one label
contains   and the other label is empty  i.e.   it means that there exists an infinite nominal behaviour in the system which cannot be distinguished from a faulty behaviour. in this case  the observation of the system does not guarantee that a fault can be detected  it must be updated  respecified  in order to guarantee the diagnosability of f. if the label fr is not empty  then the diagnosability problem results from the fact that the occurrence of the faults fr cannot be discriminated from the occurrence of f. in this case  a designer can decide that the discrimination of f with fr is not important and abstract the set of faults to only diagnose a fault fabs = f ¡Å fr.
1 discussion
diagnosability on des is a problem that has been introduced in  sampath et al.  1  where the authors solve it by detecting some transition cycles of ambiguous states in a global diagnoser. the global diagnoser is equivalent to the determination of the local diagnoser  see definition 1  where the global model g is seen as a component. the main drawback of this method results from the diagnoser computation which is exponential in the number of states in the global model  determination  and as a consequence is doubly exponential in the number of components in the system.  jiang et al.  1; yoo and lafortune 1 then proposenew algorithmswhich are only polynomial in the number of states in g and which introduce the twin plant method. the question of efficiency is raised in  cimatti et al.  1  where the authors propose to use symbolic model-checkingto test a restrictive diagnosability property by taking advantages of efficient model-checking tools. but  still the diagnosability problem is seen as a test on a system and not as a deep analysis of the reasons why a system is not diagnosable. in  pencole¡ä  1   the author introduces the problem of analysing diagnosability of a system in a decentralised way by aggregating local non reduced twin plants until a critical path is detected. in this method  the diagnosability analysis is not scalable and only partial since the feedback is just about the detected critical path.
1 conclusion and future work
our theoretical framework solves the diagnosability problem in a distributed manner and takes into account the distributed nature of complex event-driven systems. we have also proposed an algorithm that is scalable in the sense that  if the problem is too complex to be solved with available computational resources  it can still provide an approximate analysis of the diagnosability of the system. in case of a negative answer to the diagnosability problem  we claim that finding a counter example is not sufficient to assist any designer of a system to improve diagnosability. we thus propose a synthetic view of the diagnosability results that summarise the different reasons why a fault is not diagnosable.
¡¡the perspectives of this work are numerous: it is a clear first step to assist any designer to make diagnosable systems because of the synthetic view of the results instead of a single counter example. one of our next challenge is the application of this framework to provide design recommendations for improving the diagnosability of health monitoring system for aircraft maintenance  ghelam et al.  1  or to provide an assistance to the design of composite web services  yan et al.  1 . another challenge is to improve our algorithm in order to search for optimal partitions where each element of the partition is as small as possible. from an optimal partition  we can then derive optimal diagnostic algorithms based on set of small system parts that still guarantee an accurate global diagnosis.
acknowledgments
the authors thank jussi rintanen  alban grastien and the anonymous reviewers for useful discussions and comments.
