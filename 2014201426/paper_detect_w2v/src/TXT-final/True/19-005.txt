 
　in this paper  a network of communicating loqic programs is proposed as a model for parallol/concrurrent programming based on logic programs. this network is regarded as an extension of kahn's pure dataflow in the sense that nodes are logic programs which have atoms for receiving and sending messages as well as queues to accept and memorize them. the nodes' behaviour is unboundedly nondeterministic. on the assumption that the channels' denotations should be defined by using sequence domains  the main concern of the present paper is whether or not mathematical semantics is always well-defined for a given network even when it is of unbounded nondeterminisrn. 
　this paper will show that the proposed network is reduced to a dataflow when a kind of 'fairness' is asked for nondeterminisrn in which logic programs receive inputs and produce outputs based on their computations. the network  then  has a  least  fixpoint semantics; it is regarded as one of mathematical semantics of the network  since it can satisfy the recursive relations among the channels' denotations. 
   it is also stated that the network with fair merge operators is applicable to the realization of a computational mechanism for sequential ligic programs. 
1. introduction 
　kahn's pure dataflow network is one of the established models for parallel/concurrent programming in the sense that its mathematical semantics is clearly defined by the least fixpoint solution to the set of equations associated with the channels of the network  1 . 
　when establishing a model for parallel/concurrent programming based on logic programs  kalin's pure dataflow can be extended to a network whose nodes are not functional but relational in accordance with logic programs. jf we establish a network according to such a model  there would be a strict question as to whether or not mathematical semantics of the network is well-defined even when it is of unbounded nondeterminisrn. the question arises from the standpoint that mathematical semantics should be made clear in order for operational semantics to be given so that implementation of the system is possible. in both parlog  1  and concurrent prolog  the channels' semantics are indirectly defined  hence the communications between processes seem complicated. 
   in general  unbounded nondeterminism due to the computation of logic programs should be respected and mathematical semantics should be defined based on the relations among the denota* present affiliation: department of information science  okayama university  okayama  japan. 
**this report describes work initiated at department of computer science  university of warwick  the united kingdom. it was supported in part by yamada science foundation. 
tions of channels. hence the fixpoint theory in  is not appropriate in this case. even theories concerning powerdomain constructions in  1  are unsuccessful for the network we intend to define  since  in essence  the network is described by relations among the denotations of the channels. 
   on the other hand  one way to extend kahn's model to a more general one is to establish a class of nondeterministic computing networks whose nodes are either asynchronous  continuous functions or fair merge operators. fixpoint semantics of such networks is well-defined in . the 'fairness' applied to such networks might be useful to solve the question of mathematical semantics of the unbounded nondeterministic network of logic programs. however  it seems that nodes consisting of logic programs contain more nondeterminism than the fair merge operations  since the choices of outputs produced by their computations are not only due to the relative timings of inputs but due to the decisions concerning their relations. at the same time  there is a crucial problem of how 'fairness* can be realized for nondeterminism in which logic programs are computed. 
   in this paper  we have a fair sequence in which any natural number occurs an arbitrary number of times. by means of the fair sequence it will be shown that fairness is well realized for nondeterministic receivinq of messages  and sending of messages related to the computations of logic programs  in the network. the network consisting of communicating logic programs might be reduced to a dataflow when fairness due to the fair sequence is asked. thus  the network has a  least  fixpoint semantics for the reduced dataflow  according to . the fixpoint semantics could be regarded as one of the mathematical semantics for the original network. according to the fixpoint semantics  an operational semantics will be shown on the condition that logic programs in the network are fairly nondeterministic in receiving inputs and sending outputs. if the intended network has fair merge operators  it can express a computational mechanism for sequential logic programs. it means that the semantics of sequential logic programs might be defined by applying the semantics of our network with fair merge operators. 
   the outline of the network is as follows: the network consists of channels and processes. the channels are only ways by which the processes may communicate with each other. there may be channels for inputs and/or outputs. the message is transmitted one way through each channel within a sufficiently short time. each process is a logic program consisting of definite clauses with atoms corresponding to receiving and sending messages as well as unbounded fifo queues each of which is connected with an input channel transmitting messages. in each process  the messages in the nondeterministically chosen positions of the queues are received for the computation of the logic programs  simultaneously. after the logic program*s finite computation  each process nondeterministically provides either one of possible outputs 

or no output. 
1 	architectures and languages 

	1. network gp comunciatnig logic programs  nclp  	1. denotations of channels 
upper bound  which is denoted by 
the partial order 	is extended to the one on 	by: 
1  denotes the set of natural numbers. 
	yamfimki 	1 

1 archtiectures and languages 

yamasaki 	1 function of input-tuples of sequences. fm p q  is an extention of an ordinary fair merge operator. thus n l  is regarded as the network presented and discussed by park . this means that the semantics of n l  is well-defined. this is a theoretical guarantee from the point of semantics for regarding the computation mechanism of logic programs as 
dataflows with fair merge operators. 
　it might be concluded that by using the nclp  we can transform any logic program to a network of dataflows with fair merge operators. this is an interesting and significant 
aspect of nclp. 
1. concluding remarks 
　the nclp is reduced to a dataflow when fair nondeterminism is asked for receiving and sending messages. in such a case  there is a  least  fixpoint semantics of a function associated 
with the nclp. as we have seen  this is one of the denotational semantics defined in section 1. thus  the denotational semantics of nclp is well-defined even when it has unbounded nondeterminism. 
　the operational semantics of nclp based on its fixpoint semantics was defined in section 1. the implementation of 
'fairchoice' can be done by the fair sequences in ww . 
　the expressiveness of the nclp contains interesting aspects compared with other systems. 
　it is interesting to extend the nclp so that each process can rewrite the contents of its queues. 
　it was briefly mentioned that the nclp with fair merge operators can express a computation mechanism for sequential logic programs. this is a significant aspect of the proposed 
where 	network as well as the nodeterministic computing network 
in . 
acknowledgments 
　first i would like to thank professor park  whose work stimulated the author and inspired the present work during the author's visit to the department of computer science  university of warwick. the author appreciates the valuable comments of professor park concerning this work. 
　the author is also heartly grateful to dr. matthews for his hospitality during the visit. 
　the author is indebted to professor doshita for his encouragement during the author's stay in the united kingdom. 
