
social networks allow users getting personalized recommendations for interesting resources like websites or scientific papers by using reviews of users they trust. search engines rank documents by using the reference structure to compute a visibility for each document with reference structure-based functions like pagerank. personalized document visibilities can be computed by integrating both approaches. we present a framework for incorporating the information from both networks  and ranking algorithms using this information for personalized recommendations. because the computation of document visibilities is costly and therefore cannot be done in runtime  i.e.  when a user searches a document repository  we pay special attention to develop algorithms providing an efficient calculation of personalized visibilities at query time based on precalculated global visibilities. the presented ranking algorithms are evaluated by a simulation study.
1 introduction
recently several approaches for combining social networks and document reference networks have been proposed  hess et al.  1    stein and hess  1    garc¡ä a-barriocanal and sicilia  1    korfiatis and naeve  1 . they integrate information on social relationships into classical referencebased measures such as pagerank  page et al.  1  or hits  kleinberg  1 . trust networks gained much attention because trust relationships constitute a strong basis for personalized recommendations as shown by trust-based recommender systems such as  golbeck  1    massa and avesani  1    avesani et al.  1 . we call such measures operating on two-layer networks trust-enhanced visibility measures.1they are motivated by the fact that a document can be highly visible although its content is completely untrustworthy. examples are cases of scientific misconduct in which publications considered as valid or even as landmark papers such as the science papers by the south-corean stem cell researcher hwang1 are declared as faked. reference-based measures still assign them a high visibility because citations are rarely removed and  as e.g.  budd et al.  1  showed  faked papers continue to be cited even after official retraction. in this case  more accurate rankings can be provided by looking at other users' recommendations: as it is a fake  it will no longer be recommended by anyone knowing this. less extreme  though more frequent is that opinions on the same document differ greatly between users  for example  when a user has a very extreme  or a very progressive opinion. so this user might consider a document as very interesting  whereas most users deem it as untrustworthy. here  it is crucial whose recommendations are taken into account: considering document reviews depending on the user's trust in the reviewer highly personalizes recommendations. however  as it is reasonable to assume that only a small fraction of documents is reviewed  we integrate trust-weighted reviews into referencebased measures that calculate recommendations for all documents. we therefore have a two-layer architecture with a document reference network and a reader trust network being connected by reviews.
current recommender systems do not yet integrate this information although parts are already available on the web. a user's bookmarks made available via applications such as del.iciou.us1 are e.g. simple reviews of webpages. the number of trust networks on the web increases  too. well-known applications are epinions or communities such as orkut. many users provide foaf  friend-of-a-friend  files  see e.g.  dumbill  1   with their profile and relationships. an extension of the foaf vocabulary encodes trust information1.
this paper analyzes how information from trust and document networks can be integrated into algorithms for personalized recommendations. based on a general framework for such trust-enhanced visibility measures  we develop concrete functions. to consider up-to-date trust information and reviews  these functions have to be efficiently computable at query time  i.e.  in the moment a user searches a document repository. as it is the reference-based measure that is typically very costly  we explore how to use precalculated visibilities. the efficiency of the measures introduced is analyzed with respect to recommendations for a single document and rankings of a set of documents. in the scope of a simulation study  the results obtained by the different functions are compared. the rest of the paper is hence structured as follows: section 1 discusses the general framework. in section 1  we develop different trust-review-enhanced visibility measures. section 1 presents the simulation study in which the functions are evaluated and section 1 gives the conclusion.
1 framework for a trust-enhanced visibility
1 trust and document reference networks
the two-layer architecture encompasses a document reference network and a trust network as shown in figure 1. documents such as webpages or scientific papers refer to other documents via hyperlinks or citations. based on the reference structure  a visibility can be calculated for each document  i.e.  its importance or rank. the best-known ranking algorithm is pagerank that has originally been incorporated in google. it computes the visibility visd of a document pd by using the weighted sum of the visibilities visk of the papers pk citing pd  based on the idea that a paper cited from many important papers must be somehow important 1:
vispd		pk¡Êbd | k
where bd is the set of pages citing pd and ck is the set of pages cited by pk.1 originally n is the number of documents in the network  in general it is simply a linear scaling factor. an important feature of this function is that the visibility of any document pd depends on the visibilities of documents pj ¡Ê bd citing it. therefore  changing the visibility of one document influences the visibility of other documents. other approaches  e.g. hits  which determines a hub and an authority value for webpages  are based on such a recursive definition  too. the framework presented works with any reference structure-based visibility measure.
the trust network is established between reviewers  i.e.  readers or editors who express their opinion on documents. reviewers assign a trust value to other reviewers  giving directed

figure 1: trust and document reference networks
and weighted edges in the trust network. high trust means that the evaluating user appreciates the evaluated user's reviews  e.g.  because he or she applies similar criteria in the review. trust between indirectly connected users  i.e.  the  friends of our friends   can be inferred by trust propagation: if userun is derived by aggregating the trust values on the pathum has not directly evaluated un  the trust value tum¡úun for from um to un. examples for trust metrics include  golbeck et al.  1  and  avesani et al.  1 .1 reviews connect trust and document networks.
1 personalizing recommendations
the two-layer architecture permits calculating a recommendation for a document  page  pd from the perspective of a person  user  um. for the recommendation  a citation-based measure on the document reference network is enhanced with information from the trust network. as this measure considers in addition the reviews made by the users in the trust network  it is called a trust-review-enhanced visibility  in the following: tre-visibility  vistrepd  .
by interpolation on the trust network  the reviews of other users can be taken into account. so we are able to calculate recommendations for documents that are not reviewed by the requesting user her/himself. the information from the trust network tells us to which degree a review should influence the recommendation vistrepd : the reviews made by users who user um considers as trustworthy should have most impact. so all reviews are personalized by the user's view on the trust network. by interpolating on the document reference network  recommendations cannot only be calculated for documents that have been reviewed but for all documents. as the visibility of a document depends on the visibilities of the documents citing it  reviews have an indirect impact on adjacent documents: in the example from fig.1  reviews r1 and r1 will influence the visibility of p1 if u1 considers the reviewers u1 and u1 as trustworthy. while the trust tu1¡úu1 of u1 in u1 is di-
rectly given sec.1  byindirect influence on visttuu1¡ú¡úuu1 is interpolated by some trust metric  seetu1¡útrepu1. the reviewsthrough the ciations fromr1 and r1 exert anp1 and
p1 to p1.
1 the trust-enhanced visibility
we now design the tre-visibility-framework using the structure of the document network and the trust-weighted reviews as the basis for personalizing document visibilities. in the first step by interpolation on the trust network  the trust of a user um to all others reachable from her or him is computed. non-reachable users are given a default trust tdefault  setting tdefault = 1 implies that the corresponding reviews have no impact . this interpolation can be done efficiently for all users in parallel. for all reviews rj of a user un  we consider um's trust tum¡úun in un to be the trust in all reviews by un. now um's trust in every review is known. in the second step  personalized tre-visibilities of all documents are computed by incorporating the reviews and weighting them by the trust um has in them. here we can choose between two different approaches:
1. compute a document base visibility vis pj of all documents pj using some visibility function like pagerank and then derive the personalized tre-visibility vistrepj from the user-independent document base visibility vis pj by including trustworthy reviews  or
1. use a modified visibility function that incorporates thereviews on each document directly when computing vistrepj .
the first approach has the advantage to be simple and to be able to precompute1 vis pj for all documents as vis pj is userindependent  but the integration of indirect reviews is not straightforward. the second approach automatically handles indirect reviews because the tre-visibilities are used for propagation  but here everything has to be computed on the fly  because no user-independent part exists. to be able to precompute most of the values is important for providing personalized recommendations in search engines to queries such as  should i buy this pay-per-view   and for sorting query results in a personalized ranking.1 anything that has to be computed at query time increases the load of the document repository server and demands the user to wait.
regardless of the approach used  a tre-visibility function should satisfy the following properties:
1. a review's impact on a document recommendation depends on the degree of trust that the requesting user has in the reviewer. reviews provided by users who are fully trusted should have a considerable impact on the recommendation  whereas reviews by users deemed as untrustworthy should have minimal impact.
1. if no review by a trustworthy person is available  therecommendation will consist of the visibility calculated on the document network. although this mere visibility measure is not personalized  it is appropriate: having no review by a trustworthy user does not permit inferring that the document is not worth reading.
1. the degree of influence that reviews have compared withthe pure structure-based visibility should be adjustable.
1. trust-weighted reviews of a document pj exert an indirect influence on the visibilities of the papers referenced in pj  because pj's visibility is modified by the reviews  and so it propagates a modified visibility to the documents that it cites.
the reference-based visibility measure has to be chosen depending on the type of document network: cyclic networks such as the web normally require different measures as typically acyclic publication networks.
1 tre-visibilities
in this section we introduce several functions to compute the trust-review-enhanced document visibility. we use the following definitions: for a document pd  rpd is the set of direct reviews on pd  and vis pd is the  precalculated  document base visibility. the distance ki d of a direct review ri ¡Ê rpj to pd is the length1 of the shortest path from pj to pd  if no path exists  ki d := ¡Þ .
all trust values are in  1 . reviews are non-negative and in the same range as the visibilities computed by the chosen structure-based visibility function.1
1 simple tre-visibility
the simplest approach to compute the tre-visibility of pd is to combine the reviews ri ¡Ê rpd of pd  weighted with the respective trust ti in ri  and vis pd . to indicate the impact of vis pd   it is weighted by its visibility contribution vc which is globally set by the user  e.g.  vc := 1. so the document base visibility can be treated as additional review with r1 := vis pd and t1 := vc. this gives the simple tre-visibility:
	n	n
	¡Ætiri	vctiri
vistrepds	=	i=n1	=	n	. ¡Æti	vc+¡Æti
	i=1	i=1

figure 1: part of a document reference network
1 integrated tre-visibility
the tres-visibility algorithm is appealing in its simplicity but neglects indirect reviews. as in structure-based visibility algorithms like pagerank or hits the visibility of a document depends on the visibilities of the documents citing it  an indirect effect of reviews on adjacent documents can be achieved by simply swapping the computation sequence: instead of first computing the document visibility and then adding the reviews  the reviews are directly incorporated in the visibility function  e.g. with pagerank1:
vispd=1 	p
+ ¦Á ¡Æ k
n	pk¡Êbd |ck|vistrepdi=n
vc vis +
	¡¤	pd ¡Ætiri
i=1
 . n
vc+ti
i=1	¦Á	vistrei
as the visibility vistrepdi of a document pd now depends on the visibilities vistrepki of the documents pk ¡Ê bd citing it  the reviews on the documents pk have an impact on vistrepdi; in other words: the trust-review-enhanced visibilities are propagated through the document network.
the drawback of this approach is that the visibilities of all documents are now user-dependent: the visibility vispd of a document pd can no longer be precomputed offline because it is influenced by the trust-weighted reviews of the documents citing it  and on those of the documents citing these and so on.1 precomputing personalized rankings for all users would only be possible for a very small set of users  a small trust network   while computing the complete ranking on the fly at query time is only possible for small document sets. so we need some more efficient visibility algorithm.
1 path-based tre-visibility
we therefore have to develop a function that uses precalculated visibilities vis pd for all documents pd like the tresvisibility function  sec.1  but that additionally takes into account indirect reviews like the integrated trei-visibility  sec.1 .
the trei-visibility vistrep1i of document p1 shown in fig.1 is computed by the reviews on p1 and the visibilities vistrep1i and vistrep1i of p1 and p1  which depend on the reviews on p1 and p1 and so on. the visibility vistrep1i of p1 contributes by 
and vistrep1i by  to vis p1  because p1 has 1 and p1 outgoing citations and  according to pagerank  the visibility of a document is distributed over all outgoing citations. the reviews on p1 thus contribute by  to p1  as they are part of vistrep1i. this also works for larger distances: a review ri on p1 contributes to p1 by  and therefore along the path 
by   and along the path . the total contribution of a review ri on p1 to the visibility of p1 is therefore  +  = .
in general: the contribution c¦Ðj of a review ri of a document pj along a path ¦Ð =   pj ¡ú q1 ¡ú q1 ¡ú ... ¡ú qm ¡ú pd   is c¦Ðj = |c1pj| + |c1| + |c1| +...+ |cq1m|.
by restricting the review influence to some maximum distance kmax  all indirect reviews and their contributions can be precomputed offline for all documents.1 so we get
n
vc¡¤vis pd +¡Æticiri
	vistrepdp	=	n i=1	.
vc+¡Ætici
i=1
with ci being the contribution of review ri to pd. if ri is a direct review on pd  ci = 1. if ri is a review of a document pj  ci is the sum of the contributions of ri along all paths   pj ¡ú ... ¡ú pd   with path length less or equal to kmax.
1 distance-based tre-visibility
we can simplify the tre-visibility calculation by determining the contribution of a review ri solely by its distance ki d to pd  following the idea that a review should have a larger impact if it is closer to the paper.1 with ¦Â for finetuning the impact of indirect reviews  we get:
n
vc
vispd =	n vc+¡Æ	¦Â i=1  ki d +1 
1 efficient computation
discussing the runtime of the functions described above  we have to distinguish the overall costs and costs at query time. while offline computation of large document repositories is costly  it is feasible as e.g. google shows. critical is the time needed to answer a single search query. as mentioned before it is impossible to compute the visibilities of all documents of a large document repository at query time. on the other hand  it is also impossible to precompute personalized rankings of all documents for all users  as this would even offline be to costly. thus trei is at least not appropriate for personalized search engines.
we could reduce computation costs by restricting the visibility computation to the subset of documents we are interested in  e.g. the set of documents matching the search term . unfortunately  this is not possible for trei because the treivisibility of the documents in the subset depends on the treivisibility of the documents they are cited by and so on.1
here the other tre-visibility functions come into play: the data on both subnets can be precomputed  and only the join has to be done on the fly. the trust of any user in any other user can be precomputed offline  which automatically gives the trust in each review. re-computation is required if trust edges change or new users join  but not  if new reviews are given! . the base visibility vis pj of each document pj can also be precomputed. the simple tre-visibility tres of the subset of documents the user is interested in can now be computed in a single run through these documents. for using trep or tred  each document additionally has to know its indirect reviews  and these sets of reviews can also be precomputed by simply propagating all reviews through the document network while computing the base document visibility. new reviews are propagated through the document network at the time they are created. so at query time all to be done is the join: for all documents pj in the selected subset  all direct and indirect reviews and the document base visibility vis pj are summed up  weighted by their corresponding trust values in order to compute vistrepj . and finally the documents are sorted to provide a personalized ranking.
1 simulation
it is obvious that the functions presented take direct  and indirect  reviews weighted by their trust values into account and compute personalized tre-visibilities. the interesting question is how much the presented functions differ and which impact they give to indirect reviews.
we compare the different tre-visibility functions by computing tre-visibilities from the perspective of a test user u on 1 document reference networks  each with ¡Ö 1 documents  with 1 to 1 references  and 1 reviews randomly
alg.aalg.b¦¤direct
¦¤indirect¦¤totalpageranktres11.1pageranktrei111pageranktred111pageranktrep111trestrei111trestred111trestrep111treitred111treitrep111tredtrep111table 1: differences in visibility computation
distributed. the test user's trust in each review was uniformly distributed in  1 . the document base visibilities were computed by pagerank with ¦Á = 1 and n = 1. now the trevisibilities of all documents were computed using tres  trei  trep and tred  with vc = 1  kmax = 1  ¦Â = 1 . by compar-
ing the visibilities  visapd   visbpd   of a node pd as computed by two visibility algorithms a and b we can see how big the differences between a and b are. if a and b would compute the same function  the difference would be 1. table 1 gives the average difference of the visibilities computed by algorithm a and b  respectively  over all documents: ¦¤direct is the average difference of documents with at least one direct review  ¦¤indirect the same for documents without direct review and ¦¤total the overall difference.1
the first four lines of tab.1 show the differences to pagerank. obviously  direct reviews have high impact on all trevisibility functions  but also the effect of indirect reviews is considerable  with the exception of tres  certainly . in the next three lines ¦¤direct is most interesting  which shows to which amount the visibility of directly reviewed documents is changed by additional indirect reviews  which are not considered by tres but by the other functions . the next two lines show  ¦¤indirect  that tred and trep differ from trei  we did not expect them to totally resemble trei   but much less than from pagerank. and finally the last line shows  that trep and tred are very close so that for the given networks the average number of 1 outgoing citations per document  affecting trep  is well resembled by setting ¦Â = 1  pretests with ¦Â = 1 gave large differences . this also shows that the parameters of the functions used have to be adjusted for each network size and structure to give appropriate results.
1 conclusion
in this paper  we introduced different trust-enhanced visibility function integrating document visibilities  user-dependent trust information and reviews for personalized document recommendations. we attached importance to design functions that calculate personalized rankings efficiently at query time.
therefore  we analyzed how to use pre-calculated information on both networks that is joint on the fly. the simulation study compared the functions  and we can conclude that the path-based and the distance-based tre-visibility permit computing personalized recommendations of the same quality as the costly recursive tre-visibility while being efficiently computable  and thus appropriate for search engines. on the basis of these results  we now aim to develop a personalized recommender system integrating our efficient trust-enhanced visibility computation.
acknowledgments
this work was partially supported by the german academic exchange service  daad  and the german science foundation  dfg .
