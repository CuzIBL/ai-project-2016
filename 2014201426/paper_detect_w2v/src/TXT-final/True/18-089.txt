 
 logical sensor specification  lss  has been introduced as a convenient means for specifying multi-sensor systems and their implementations. in this paper  we demonstrate how control issues can be handled in the content of lss. in particular  the logical sensor specification is extended to include a control mechanism which permits control information to  1  flow from more centralized processing to more peripheral processes  and  1  be generated locally in the logical sensor by means of a micro-expert system specific to the interface represented by the given logical sensor examples are given including a proposed scheme for controlling the utah/mit dextrous hand 
1. introduction 
　both the availability and need for sensor systems is growing  as is their complexity in terms of the number and kind of sensors within a system. but most robotic sensorbased systems to date have been designed around a single sensor or a small number of sensors  and ad hoc techniques have been used to integrate them into the complete system and for operating on their data. in the future  however  such systems must operate in a 
　reconfigurable multi-sensor environment; for example  there may be several cameras  perhaps of different types   active range finding systems  tactile pads  and so on. in addition  a wide variety of such sensing devices  including mechanical  electronic  and chemical  are available for use in sensor systems  and a sensor system may include several kinds of sensing devices. thus  at least three issues regarding the configuration of sensor systems arise 
1. how to develop a coherent and efficient treatment of the information provided by many sensors  particularly when the sensors are of different kinds 
1. how to allow for sensor system reconfiguration  both as a means of providing greater tolerance for sensing device failure  to permit dynamic allocation of sensing resources  and to facilitate future incorporation of additional sensing devices 
　this work was supported in part by the system development foundation and nsf grants ecs-1 and mcs1 chuck 
hansen is an aro fellow 
1. how to control the sensors 
we have previously proposed the multi-sensor kernel 
system  1  1  and logical sensor specification  as solutions for the first two problems  respectively the rest of this paper gives our method for answering the third 
　the purpose of the logical sensor specification is to permit an implementation independent description of the required data and the nature  type  of that data. in addition  alternative ways of producing the same output can be defined this makes it possible to recover if some sensor fails one can also choose an alternative based on higher level considerations  e.g.  speed  resolution  etc  thus  a use for logical sensors is evident in any sensor system which is composed of several sensors  where sensor reconfiguration is desired  and/or where the sensors must be actively controlled 
 as described in more detail elsewhere   the principal motivations for logical sensor specification are: the emergence of significant multi-sensor systems  the benefits of data abstraction  and the availability of smart sensors  thus  the substitution of hardware for software  and vice versa  should be transparent above the implementation level; see also organick et. al  . 
　logical sensors are then a means by which to insulate the user from the peculiarities of input devices. thus  for example  a sensor system could be designed to deal with camera input  without regard to the kind of camera being used. in addition  logical sensor specification is also a means to create and package  virtual  physical sensors. for example  the kind of data produced by a physical laser range finder sensor could also be produced by two cameras and a stereo program. this similarity of output result is more important to the user than the fact that the information may be obtained by using one physical device  or by using two physical devices and a program. logical sensor specification allows the user to ignore such differences of how output is produced  and treat equivalent means of obtaining data as logically the same. 
　related work has been done in several areas. the need for some device-independent interactive system has resulted in the graphical kernel system  gks  which is now a draft international standard the main idea behind gks is to provide  a means whereby interactive graphics 

applications could be insulated from the peculiarities of the input devices of particular terminals  and thereby become portable  . some encouraging results reported in the robotics literature including a systematic study of robotic sensor design for dynamic sensing undertaken by beni et al . another related research effort is the programming environment  called the graphical image processing language  under development as part of the ipon project  an advanced architecture for image processing  at the university of pennsylvania  the hierarchical robot control system described by albus  is a precursor to the logical sensor scheme proposed here 

the logical sensor name uniquely identifies the logical sensor the characteristic output vector is a vector of types which serves as a description of the output vectors that will be produced by the logical sensor. thus  the output of a logical sensor is a set  or stream  of vectors  each of which is of the type declared by that logical sensor's characteristic output vector  programs 1 to n represent alternative ways in which to obtain data with the 
t. henderson et al. 1 
same characteristic output vector hence  each alternate subnet is equivalent  with regard to type to all other alternate subnets in the list each alternate subnet in the list is itself composed of:  1  a set of input sources each element of the set must be a logical sensor  or the set may be empty . allowing null input permits a physical sensor  which has only an associated program  the device driver   to be described as a logical sensor  thereby permitting uniformity of sensor treatment  1  a computation unit over the input sources currently such computation units are software programs  but in the future  hardware units may also be used finally  the role of the selector  whose inputs are alternate subnets and an acceptance test name  is to detect failure of an alternate and switch to a different alternate if switching cannot be done  the selector reports failure of the logical sensor. 
 in order to solve most recognition and manipulation problems  however  it is necessary to be able to reposition sensors  e.g.  aim cameras  and adapt rapidly to changing conditions  e.g.  if an object is slipping from the grasp of a robot hand  perhaps more force should be applied   thus  in addition to a stream of sensed data flowing from physical sensors on up through some hierarchy of logical sensors  there may also be a stream of control commands  or signals  flowing in the reverse direction 
　each logical sensor has a control command interpreter to interpret the control commands coming from a level up in the hierarchy and to send commands down to logical sensors lower in the hierarchy moreover  the select function now plays a more sophisticated role in the logical sensor namely  the select function monitors both the sensor data going up and the command stream to be issued given the command  or commands  to be executed and the sensor data being produced locally  the select function is able to short circuit the path back to the root logical sensor and to modify the commands to be issued such a function may be viewed as a micro-expert system which knows all about the interface represented by the logical sensor in which it is located thus  a logical sensor acquires some of its meaning now not simply as a sensor/algorithm combination  but also as an interface between two layers of sensing and analysis 
 another requirement on the logical sensor is that it now also acts as a  logical controller.  if the control command received at a particular sensor requires that control commands be sent to the source input logical sensors  then those commands will depend on which alternate subnet is currently selected by the selector function for example  suppose range data can be obtained from a stereo camera system  a laser range finder system or a 
 robot hand with tactile sensing then to obtain range data from a given region in space requires aiming and focusing two cameras  or aiming a camera and a laser  or positioning a robot arm the high level command to scan a region must then be broken down into the appropriate lower level commands 
a logical sensor can be viewed as a network composed 

1 t. henderson et al. 
of sub-networks which are themselves logical sensors communication within a network is controlled via the flow of data from one sub-network to another. hence  such networks are data flow networks 
　once the logical sensors are specified  they are stored as s-expressions in order to actually obtain an executable system from the logical sensor specification  it is necessary to translate the database expressions into some executable form  eg.  to produce source code for some target language  and then either interpret or compile and run that source we currently have two implementations of the logical sensor specification language running a c version  called c-lss  running under unix  and a functional language version  called fun-lss  which produces fel code  function equation language  . these have been described elsewhere . c-lss produces a unix shell script from the specification 
1. an example 
 we are currently applying the methodology to some interesting and hard problems in particular  we are developing and testing a specification for the utah/mit dextrous hand this gives us the opportunity to try out the method on a distributed multi-processor system  as the hand is controlled by six m1s. 

shown in figure 1 are some of the logical sensors which comprise the specification of a sensor and control scheme for the utah/mit dextrous robot hand. the robot hand has four fingers each with four degrees of freedom . the high level commands for hand control are interpreted as a set of commands to a lower-level right on down to the control of the joint positions of each finger which define the configuration of the robot hand 
 a grasping action requires several hand operations  including the attainment of an approach configuration. one of these is the  curl  position  the control command to the hand logical sensor . to curl the hand requires that each finger move away from the median axis of the hand  the control command  abduct  to each of the finger logical sensors . finally  the abduct command requires that each joint achieve a specific angle  the 1y control commands to the joint logical sensors  thus  the feedback loop for position control can be located in the programs which are part of the joint logical sensor specification moreover  concise local knowledge for what to do in case of error conditions  slipping  too much force  etc   can be embedded in the appropriate select function 
1. conclusions 
 we have presented a framework for the specification of sensing and control systems. moreover  the methodology lends itself nicely to distributed processing the method permits the specification of fault tolerance  both software and hardware  and dynamic reconfiguration of the sensing system the incorporation of control now permits closed loop operation and adaptation to changing conditions our specific accomplishments include 
1. the development of a methodology for the specification of distributed sensing and control in particular  one based on a reasonably well understood underlying computational model  
i.e.  dataflow 
1. the development of an operational environment for computing with respect to the methodology. 
the successful implementation of such a methodology provides a very significant and fundamental tool for the specification of distributed sensing and control systems moreover  we believe that our approach permits an effective conceptual decomposition of the problem into manageable units. for a more complete treatment of logical sensors as a framework for distributed sensing and control  with detailed examples   see henderson et. al . 

