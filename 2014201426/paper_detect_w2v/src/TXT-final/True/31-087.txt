 
this paper analyzes coalition formation among self-interested agents that need to solve combinatorial optimization problems to operate efficiently in the world. by colluding  coordinating their actions by solving a joint optimization problem   the agents can sometimes save costs compared to operating individually. a model of bounded rationality is adopted  where computation resources are costly. it is not worth solving the problems optimally: solution quality is decision-theoretically traded off against computation cost. a normative theory of coalitions among bounded rational  br  agents is devised. the optimal coalition structure and its stability are significantly affected by the agents' algorithms' performance profiles  pps  and the cost of computation. this relationship is first analyzed theoretically. a domain classification including rational and br agents is introduced. experimental results are presented in the distributed vehicle routing domain using real data from 1 dispatch centers; the optimal coalition structure for br agents differs significantly from the one for rational agents. these problems are np-complete and the instances are so large that  with current technology  any agent's rationality is bounded by computational complexity. 
	1 	introduction 
in many domains  self-interested real world parties  e.g. companies  need to solve combinatorial optimization problems to operate efficiently. often they can save costs by coordinating their activities with other parties. such settings occur for example in distributed manufacturing among multiple companies and in distributed vehicle routing among dispatch centers. when the planning activities are automated  it is useful to also automate the coordination activities via a negotiating software agent representing each party. in such automated negotiations among self-interested agents  the question of coordination arises: what coalitions should the agents form  are they stable  and how should costs be divided within each coalition  coalition formation includes three activities. one is coalition structure generation: formation of coalitions by the agents such that agents within each coalition coordinate their activities  but agents do not coor'supported by arpa contract n1-j-1. 
1 distributed al 
dinate between coalitions. the second is the solving of the combinatorial optimization problem of each coalition. conceptually this involves distributing the tasks of the coalition among the member agents and solving the optimization problem of each agent given its resources and the tasks it was distributed. the coalition's objective is to maximize monetary value: money received from butside the system for accomplishing tasks minus the cost of using resources.1 third  agents within each coalition have to agree on how to divide this value of the generated solution. these activities interact. for example  the coalition that an agent wants to join depends on the portion of the value that the agent would be allocated in each potential coalition. 
　coalition formation has been widely studied  kahan and rapoport  1; van der linden and verbeek  1; raiffa  1; shechory and kraus  1; zlotkin and rosenschein  1; ketchpel  1   but to our knowledge  only among rational agents. let us call the entire set of agents a. say  that the lowest cost achievable by agents 1 c a working together  but without any 
                   r other agents  is c s. this is the minimum cost to handle the tasks of agents 1 with the resources of agents s. a coalition game is defined by a characteristic function vrs  which defines the value of each coalition s: 
	vrb 	= 	-crs. 	 1  
the superscript r emphasizes that we mean the rational value of the coalition  i.e. the maximum value that is reachable by the coalition given its optimization problem. a rational agent can solve this combinatorial problem optimally without any deliberation costs such as cpu time costs or time delay costs. 
　if the problem is hard and the instance is large  it is unrealistic to assume that it can be solved without deliberation costs. this paper adopts a model of bounded rationality  simon  1; good  1l   where each agent has to pay for the computational resources  cpu cycles  that it uses for deliberation. a fixed computation cost ccomp   1 per cpu time unit is assumed.1 the domain cost associated with coalition 1 is denoted by 
　1  in some problems  not all tasks have to be handled. this can be incorporated by associating a cost with each omitted task. then problem solving also involves the selection of tasks to handle. the theory of this paper applies to such cases but in our example application  all tasks have to be handled  and no payments from outside the system are received for them. 
　1  in practice  cpu time can already be bought on supercomputers. the market for cpu time is assumed to be so large that the demand of the agents we are studying does not impact the price of a cpu time unit. it is also assumed that 
c	r
s{ s    1  i-e. it depends on  decreases with  the al-
located computation resources rs  fig. 1. the functions cs rs  can be viewed as performance profiles  pps  of the problem solving algorithm. they are used to decide how much cpu time to allocate to each computation. with this model of bounded rationality  the value of a coalition with br agents can be defined. each coalition minimizes the sum of solution cost and computation cost: the problem instance  and computing the mapping from  the instance to the pp  sandholm and lesser  1  may take considerable time  thus making the meta-level itself costly. in the limit  the base algorithm would be run at the meta-level to determine what it would achieve for a given time setting. assuming an optimal meta-level enables analyzing bounded rationality at the base level in isolation from uncertainty of the pps. it also allows us to sidestep the problem of having a meta-meta-level controlling the meta-level  a meta-meta-meta-level controlling the meta-meta-level  and so on ad infinitum. 
　we assume that the problem instances  tasks and resources  of all agents are common knowledge. this is somewhat unrealistic in open environments with a large number of agents. in practice it is often necessary to learn the other agents' characteristics from previous encounters. alternatively  the agents can be made to explicitly declare their tasks and resources  but they may lie in order to gain monetarily.  rosenschein and zlotkin  1  analyze when rational agents are motivated to declare truthfully. unfortunately that work assumes only two agents and that they can optimally solve exponentially many np-complete problems without computation costs. even under these assumptions  in most cases  truth-telling is not achieved. the effect of bounded rationality on truthful revelation is unknown. 
　for now-this is relaxed in section 1-we assume that the agents solve the combinatorial optimization problems equally well and that this is common knowledge. for any coalition's problem and for any setting of cpu time  the cost of the solution potentially generated by each agent is the same. the agents need not generate the same solutions  only the same quality. 
　with such shared deterministic pps  each agent knows the value vs ccomp  of each potential coalition s upfront. therefore coalition formation will take place before any computation. after collusion  each coalition computes its solution using the optimal amount of cpu time rs as defined by equation 1. because in our model  rationality is bounded by cpu time cost  it costs the same for one agent to use nt cpu time units as it costs n agents to use t units. therefore  it is best if a coalition's optimization problem is solved by a single agent. this is trivially true since an agent could simulate distributed problem solving among n agents for time t by using a local algorithm for nt. conversely  it is not always possible  due to redundancy etc.  for n agents solving the problem for time t to reach a solution of the same quality as one agent using nt can reach. the computing agent can be arbitrarily chosen from within the coalition  and the coalition pays that agent its true cost for computing. this cost along with the domain solution cost contribute to vs ccomp   which is divided among the agents in the 
termination time. in general  for optimal meta-reasoning  the remaining part of a probabilistic pp should be conditioned on the algorithm's performance on that problem instance on previous cpu time steps  sandholm and lesser  1; zilberstein  1 . such conditioning  anytime algorithms  and their integration to coalition formation are part of our current research and are too long to be presented here  sandholm and lesser  1 . 
	sandholm and lesser 	1 


distributed al 


sandholm and lesser 


distributed al 


sandholm and lesser 

profitable refinements. if ccomp is high  less time is allocated  and all coalitions will have profitable refinements  though the larger coalition will have time to make fewer 
of them. thus it was not surprising that in games where the grand coalition was optimal  it was optimal for very 
small computation costs only. surprisingly  two agents colluding was often better than all agents working separately even for large ccomp's. the result that higher they also assume that all agents have the same capabilities. with exponential computation they guarantee 
each agent an expected value that equals its shapley value  kahan and rapoport  1; raiffa  1 . in a 
computation costs promote smaller coalitions is some-all tasks of all agents needs to be solved optimally. subset of stods   concave task oriented domains   fig. 1   the computational complexity is reduced to linear  in agents  using an encryption scheme. yet at least one  intractable  combinatorial problem involving 

what deemphasized by our choice of not including the initial solution construction phase in the pps. shifting the pps right to begin at the time when the initial solution was finished  instead of 1  would shift the pps of small coalitions less than the pps of large coalitions because the initial solution construction is superlinear both in tasks and vehicles. thus small coalitions would gain an advantage-that is most significant for large ccomp. if the time of initial solution generation is discarded  the best coalition structure for the greatest computation costs depends only on the quality of the initial solutions of the different coalitions because no refinement steps are beneficial. for example  coalitions {1}  fig. 1   {1} and {1} achieved a better initial solution cost than the sum of the initial solution costs of the two agents separately  fig. 1. 
1 different performance profiles 
so far games where each agent has the same pp for a given coalition were presented. in general  domains where the agents have different pps-due to different algorithms-are not characteristic function games for br agents  brcfgs   because the value of a coalition sometimes depends on the actions of non-members. the value of a coalition can depend on whether an outside agent is willing to compute the solution for the coalition  for a payment  if its algorithm is better than any of the algorithms of the agents in the coalition. also  interactions between domain solutions of different coalitions may exclude some problems from the class brcfg. in non-brcfgs  br superadditivity  br subadditivity  and the brc are undefined  fig. 1. instead  the nash equilibrium may be a reasonable solution concept-although only individual agents are motivated to pertain to it: coalitions may prefer to deviate. these issues are discussed in  sandholm and lesser  1 . 
1 related dai research on collusion 
coalition formation has been widely studied in game theory  kahan and rapoport  1; van der linden and verbeek  1; raiffa  1 ; only the most relevant concepts were presented here. this section compares our work to other recent dai work on coalition formation. 
　 zlotkin and rosenschein  1  analyze rational agents that cannot make side payments  while our agents do. their analysis is limited to  subadditive task oriented domains   stods   which are a strict subset of cfgs  fig. 1. in their solution concept  one agent handles all the tasks  because stods never exhibit diseconomies of scale. we do not assume that one agent can take care of all the agents' tasks. unlike our work  
distributed al 
　 ketchpel  1  presents a coalition formation method for rational agents which have different expectations of coalition values. the  computational  origin of these expectations is not addressed. his assumption of imperfect information differs from our setting  where the agents have perfect information  but cannot perfectly deduce. ketchpel's coalition formation algorithm runs in cubic time in the number of agents  but does not guarantee stability. his protocol is based on mutual offers.   in practice it is hard to prevent out-of-protocol offers such as multiagent offers. in our approach  if the agents' payoff vector is chosen from within the brc  the coalition structure is stable against all offers. finally  his 1-agent auction is manipulable and computationally inefficient. he approaches the coalition formation and the payoff division problems simultaneously. 
　this is closely related to the contracting protocol of sandholm  sandholm  1   traconet   where agents construct the global solution by contracting a small number of tasks at a time  and payments are made regarding each contract before new contracts take place. an agent updates its approximate solution after each task transfer. in general equilibrium approaches such as walras  wellman  1   non-manipulative agents iterate over the allocation of resources and tasks  and payments are made only after a final solution is reached. 
　 shechory and kraus  1  analyze coalition formation among rational agents with perfect information in domains that are not necessarily superadditive. their protocol guarantees that if agents follow it  a certain stability criterion  k-stability  is met. this requires the solution of an exponential number of optimization problems. their other protocol guarantees a weaker form of stability  polynomial k-stability   but only requires the solution of a polynomial number of optimization problems. unfortunately  each one of these may be intractable. their algorithm switches from one coalition structure to another guaranteeing improvements at each step: coalition structure formation is an anytime algorithm  although each domain problem is solved optimally. in our approach  each domain problem is solved using an approximation  design-to-time  algorithm. 
1 	conclusions and future research 
a normative theory of coalitions in combinatorial domains was presented  where the rationality of selfinterested agents is bounded by computational complexity. a domain classification was presented for rational and br agents. the algorithms used by the agents significantly impact the coalition structure that should form as well as its stability. theorems were presented on the pps guaranteeing br superadditivity  br sub-

additivity  and existence of the brc. although almost all domains are superadditive  br superadditivity is surprisingly all but obvious in practice. none of the vehicle routing games of our experiments-using real data and a reasonable iterative refinement algorithm- exhibited br superadditivity. thus  the optimal cs for br agents varied  although rational agents should always form the grand coalition. section 1 developed conditions on the pps that guarantee br superadditivity  and it discussed a separate solving approach-based on a nondeterministic splitting step-that guarantees that the base algorithm fulfills those conditions. we are currently developing methods of constructing algorithms that satisfy the conditions without such splitting. the observed br subadditivity of some of the games implies a nonempty brc: the best cs in those games is stable. even when br subadditivity did not hold  the brc was often non-empty-especially for large ccomp. often with superlinear iterative refinement steps  low ccomp promotes large coalitions while high ccomp suggests smaller ones. the best br css mostly agreed with our intuitions of what coalitions should form based on strategic domain specific considerations such as adjacency of the dispatch centers and the combinability of their loads. 
　our model of bounded rationality is based on costly computation resources. future work includes analyzing another model  where each agent has a fixed free cpu and no more cpu time can be bought. if the domain cost increases with real time due to a dynamic environment  such agents with bounded computational capabilities are often best off by distributing the computation. in the costly computation model of this paper  it is best to allocate each coalition's computation to a single agent. the models are equivalent if the domain cost increases linearly with real time and distribution does not speed up computation. 
　extensions include generalizing these methods to agents with different pps  probabilistic pps  and anytime algorithms where pps are conditioned on execution so far  sandholm and lesser  1; 1; zilberstein  1 . agents with probabilistic pps may want to reselect a coalition if the value of their original coalition is lower than expected-but sunk computation cost has already been incurred. future research also includes agents that can refine solutions generated by others. 
