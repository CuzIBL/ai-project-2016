ion f a c i l i t i e s called respectively the isa and partof hierarchies. 
¡¡¡¡¡¡apart from the conceptual  gains offered by having a taxonomy of classes  the main purpose of the isa hierarchy is the inheritance of d e f i n i t i o n a l properties 
which is a generalization of the default mechanism that capitalizes on the expected s i m i l a r i t y between a subclass and a superclass. the partof hierarchy  on the other hand  involves the composition of groups of objects into functional units. such units are called structures and the objects that constitute them  their parts. 
for classes  the parts are variables  slots  which are bound to objects  slot fi llers  whenever the class is instantiat e d the slots may have default values and relations called dependencies attaching them to other objects and having many possible procedural interpretations such as determining the acceptability of a slot f i l l e r or inferring i t s value. whereas relations represent the assertional properties of a class  slots represent the d e f i n i t i o n a l properties. consequently  the partof hierarchy determines the inheritable properties of a class while the isa hierarchy specifies the inheritance paths. the metaclass  program   the class of a l l programs  can be thought of as a structure having prerequisite effect etc. as slots and each program f i l l s these slots by providing particular prerequisites etc. this allows programs to be integrated into the two hierarchies and benefit from the organization  e.g. inheritance  like any other class. similarly  the metaclass  class  is a structure whose slots represent the four basic programs for classes and the semantics of each class are defined by f i l l i n g these slots by specific programs. the default values for these slots  and the:four similar ones in   r e l a t i o n     constitute the standard behaviour of classes and relations providing the primitives in terms of which everything else can be defined and linking the formalism to a physical implementation. 
