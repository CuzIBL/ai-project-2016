 
　　　we describe the mizar computer assisted reasoning system. several versions of mizar are currently implemented with varying powers of expressiveness and proof analysis. the main use of mizar has thus far been in mathematics education. evolving versions of mizar have been under development for the past decade; consequently the system has been subjected to extensive testing. several experiments connected with the preparation of mathematics research papers have also been carried out. the naturalness and readability of mizar texts is demonstrated by example. a proof scanning f a c i l i t y that modularly splits into a proof structure analyzer and inference checker is described. we discuss our use of the f a c i l i t y in teaching undergraduate discrete mathematics for computer science. 
1.introduction 
　　　a computer assisted reasoning  car  system is nontrivial if the level of detail with which the user must be concerned corresponds well with the level of detail required for clear  realistic mathematical presentation. mathematical vernacular is characterized in part by an open ended system of standardized notation. a writer of mathematics is not free to f i l l his text with an undisciplined proliferation of freely invented notation. if a standard notation is adequate for the purpose  the writer is well-advised to use i t . only the rarest circumstances permit a relaxation of this practice. nevertheless  excessive formalism should be avoided since it invites a level of detail simply too distracting  indeed boring  from the main themes of the argument. 
　　　the standardization of notation permits the possibility of a formal reconstruction of mathematical vernacular. the requirement that the mathematical presentation be not too formally detailed  but nevertheless clear in a step-wise fashion  permits the use of some aspects of automated reasoning in a reasoning assistance system. a single human oriented step in a mathematical argument is viewed as a small  quickly solvable  automated reasoning task. the ultimate success and value of such a system is determined by how useful a tool it proves to be in practice and not by how well it is alleged to embody a particular pedagogical ideology. a number of attempts to carry out such a development have been tried: in particular  the earlier system  automath  of n.g.de bruijn  db1   fea of s. postma  po1   
quip of r.l.smith  sm1   excheck of l.blaine  b1   pl/cv1 of r.l.constable  co1 . 
　　　basically  most of the systems mentioned are based on classical logic. an important exception is automath. this was an attempt to construct a system more fundamental than logic  but classical logic can be embedded in i t . the principal concern here is to describe and report on the achievements up to the present of one such line of development  namely the mizar family of car systems that have been under development for the past decade. mizar has enjoyed the opportunity to be extensively tested in a variety of mathematics educational settings as well as  in one case  intensive referee-like circumstances in mathematics research   homotopy theory . the concept of proof is stressed in mizar. some of the other systems we mentioned view the role of proof d i f ferently. 
　　　the mizar system takes a traditional approach. a proof is a documentation of the v a l i dity of a theorem and i t s explanatory function is secondary. we believe we are near to automath  where proof is the basic concept  rather than theorems. 
　　　we argue here that mizar captures the balance between formalism and human-oriented mathematical expression. in addition  since the experience of preparing a mizar text is similar to composing a structured program by step-wise refinement  mizar facilitates the a b i l i t y to produce a proof with i t s main ideas clearly discernible. a well organized proof is often enough a mathematical explanation. 
　　　there are several versions of mizar with varying levels of logical richness and inference checking power. two interesting experiments are worth noting. in a version of mizar oalled mizar-hpf  fundamental axioms for a fragment of category theory were prepared in an environment  see the  environ  segment in the example given below  and a series of exercises were soanned. the axiomatization strategy was carried through  in effect  by employing sorts for higher order objects. in mizar-1  a paper of karol borsuk  bo1   in homotopy theory  was thoroughly transcribed. this resulted in a text approximately twice the size  in lines/words  as the original text. the task of transcription for suoh a paper is rather similar to writing a detailed exegesis. 
1. 	an example. 
　　　we present in this section as an example. the example is interesting for several reasons. first  and most importantly  it is representative of mizar texts  although quite small. 
	the example conforms to the 	restrictions 	of 
mizar-mse 	  many-sorted 	first-order 	logic 	with 
equality   but without function symbols . this is the simplest mizar and yet as we w i l l discuss in the following sections has a degree of power making it useful in a wide range of topics in discrete mathematics. it w i l l be seen by inspection that the text we present is as readable as any mathematical text. the experience of preparing a mizar text is analogous to composing a structured program  and this is often visible in the result. 
　　　mizar reads the text checking for mistakes. apart from syntactic errors the mistakes the currently implemented version of mizar detects are of two kinds: inferences that are invalid or too i n t r i c a t e   and inappropriate assumptions or nonconcluded lines of reasoning. most of the time what is too intricate for the mse inference checker is indeed too intricate for a human as well to see immediately. students  in particular  when they attempt to exceed the power of the checker on a single step often do not really explicitly see their proposed reasoning step. this is confirmed by the d i f f i c u l t y they frequently have in providing the intermediate steps. we claim that the power of the mse inference checker matches well the power of an intelligent student to e x p l i c i t l y and effectively see his way through a chain of deductions. that is to say  the attention to detail is about at the right level. we do not claim that this level of detail and formality in mse is appropriate for the pursuit of real mathematical discovery; we do claim  however  that the power afforded by the mse checker is appropriate for developing the s k i l l s required for composing mathematical demonstrations. 
　　　what follows is an example of a text that can be submitted to mizar for checking. 
environ l e t x denote human; 
ax: for x being human holds works x   implies wfs 
begin 
= = comments are set off by '=s' at the beginnings 
=s of lines. the environment presents an axiom 
= = characterizing a welfare state. we prove the 
＊  following correot consequence. 	it is 
= = essentially the 
= = result of a nonintuitionistic prenex 
= = operation. 
ex x st works x  implies wfs 
	a. trybulec and h.blair 	1 
proof 
1: now assume for x holds works x ; then wfs by ax; henoe thesis 
end; now given x such that 1: not works x ; thus thesis by 1 end; 
henoe thesis by 1 
end 
　　　this text may be input to mizar for checking and mizar w i l l respond  properly  that the argument is correct. 
　　　the following example is that of a text output by mizar. this output resulted from submitting an input text of the preceding proof at an intermediate stage of development. 
environ l e t x denote human;  for x being human holds works x   
implies wfs 
begin ex x st works x  implies wfs 
proof 
1:now assume for x holds works x ; then wfs by ax; hence thesis end; 
  ** 	*1 
now given x such that 1: not works x ; thus thesis end; 
**** *1 end 
        *1 s o r r y 
errors explanation 
1 wrong beginning of the item in environ part  only axioms  i.e. labeled sentences  predeclarations  starting with   l e t     and oonstant declarations  starting with  given   are allowed.  *1  
1 no sentence is designated by this label  the label was not used to label any of the previous sentences. 
1 	reasoning or proof is not concluded. 
1 	your inference is not accepted by the cheoker. remarks 
 *1  due to this error a portion of the text usually until  begin    end    environ    now   proof  or semicolon has been skipped in the analysis. 
　　　both authors prepare mizar texts in an i t e r a tive fashion by f i r s t preparing proof skeletons. the practice is derived naturally enough from structured programming. whatever i t s merits or demerits in prinoiple  the result in fact is nearly always a more rapid  more elegantly structured proof than we obtain when we yield to the temptation of discarding this discipline in favor of a ' l i n e a r l y ' composed proof. 
1 	a. trybulec and h. blair 
1. proof scanning 
	i. 	preprocessing 
　　　sentences that occur in the text are preprocessed by the mizar system to forms contained in the fragment of logic generated from atomic sentences by negation  conjunction  and universal quantification. double negation and associativity of conjunction are used to obtain simplified forms. 
l i . justifications. 
　　　there are two different possibilities to just i f y sentences in mizar-mse that enable two opposite tasks. the f i r s t is straightforward inference checking by referring to earlier sentences   i . e . axioms  statements or assumptions  that constitute sufficient conditions for the sentence to be j u s t i f i e d . 
the second task concerns the proof structure. 
the user's attention to structuring the proof enables him to divide his main goal  justifying the sentence  into subgoals. in mizar this is done e x p l i c i t l y by the user as it would naturally be done in writing a mathematical text. the importance of such structuring was recognized at the very beginning of developing mizar  tr1 . m. davis in  da1l  proposes a formal characterization of obviousness  regarding inference checking. we are experimenting with his particular characterization in a version of mizar-mse with an altered inference checker   cf. trb1 . the point here is that since the inference checker is a separate 
module  the exploration of the appropriate inference power of a checking f a c i l i t y is easily implemented without altering the entire system  which would have the effect of leading a user to reorganize his proofs if he were to redo them. this has particularly aided the development of mizar while simultaneously encouraging users to set down their mizar texts with a carefully  and naturally  organized structure. 
1. 	mizar in use. 
　　　mizar-mse  on vax/1 under unix  was used at the university of connecticut in the undergraduate introduction to discrete systems course. students could elect to participate in a unit on mizar in lieu of another unit. because results are satisfactory we have decided to introduce mizar as a required component of the course. our subjective impression is that students that p a r t i c i pated in the mizar unit did learn how to develop proofs. mizar is used at warsaw university  poland  at university of alberta  canada  and at university of louvain  belgium. it was recently introduced also at washington state university at pullman. a version of mizar-mse has also been implemented for apple-ii. 

