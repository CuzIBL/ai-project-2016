 
we propose a method of compiling circumscription into extended logic programs which is widely applicable to a class of parallel circumscription as well as a class of prioritized circumscription. in this paper  we show theoretically that any circumscription whose theory contains both the domain closure axiom and the uniqueness of names axioms can always be compiled into an extended logic program ii  so that  whether a ground literal is provable from circumscription or not  can always be evaluated by deciding whether the literal is true in all answer sets of ii  which can be computed by running ii under the existing logic programming interpreter. 
1 	introduction 
circumscription  mccarthy  1; lifschitz  1  was proposed to formalize the commonsense reasoning under incomplete information. 
　so far  many studies have been proposed to explore the approach of the use of logic programming for the automation of circumscription based on the relationship between the semantics of circumscription and the semantics of logic programs. 
　gelfond and lifschitz  1a  was the first to consider a computational method for some restricted class of prioritized circumscription which compiles circumscriptive theories into a stratified logic program. though their method is computationally efficient  the applicable class is too limited. 
　so we proposed the extension of gelfond and lifschitz's method which also compile prioritized circumscription into a stratified logic program  wakaki and satoh  1 . with keeping the efficiency of gelfond and lifschitz's method  our method expands the applicable class of circumscription by making use of the result  lifschitz  1  about parallel circumscription of a solitary formula. however  as far as a class of stratified logic programs is considered as the target language to which circumscription is compiled  the applicable class is limited within a class of circumscription which has a 
	 	automated reasoning 
ken satoh 
division of electronics and information engineering hokkaido university n1  kita-ku  sapporo 1  japan 
unique minimal model since every stratified logic program has a unique perfect model  przymusinski  1 . but there are many examples of nonmonotonic reasoning whose intended meaning cannot be represented by a unique model such as multiple extension probtem  a class of circumscription which has fixed predicates  and so on. 
　recently sakama and inoue  1; 1  proposed two methods both of which compile circumscription into classes of more general logic programs whose semantics are given by stable models for the first one  sakama and inoue  1  and by preferred answer sets for the second one  sakama and inoue  1 . though both of their methods can handle the multiple extension problem as well as circumscription with fixed predicates  the first one is only applicable to parallel circumscription but not to prioritized circumscription. on the other hand  the second one is applicable to prioritized circumscription  but it gives only the semantic aspects and is lack of the feasible logic programming interpreter for prioritized logic programs proposed by them as the target language into which prioritized circumscription is compiled. 
　in this paper  we propose a new method of compiling circumscription into extended logic programs proposed by gelfond and lifschitz  as its target language. it is widely applicable to a class of parallel circumscription as well as a class of prioritized circumscription. showing the semantic correspondence between circumscription with fixed predicates and reiter's default theory which generalizes theorem 1 in  etherington  1   we can give not only the semantic relationship between a class of parallel circumscription and a class of extended logic programs but also the one between a class of prioritized circumscription and a class of extended logic programs. as a result  any circumscription whose theory contains both the domain closure axiom and the uniqueness of names axioms can always be compiled into an extended logic program ii  so that  whether a ground literal is provable from circumscription  can always be evaluated by deciding whether the literal is true in all answer sets of ii. this can be computed by running ii under the existing logic programming interpreter such as satoh and iwayama's top-down query evaluation procedure for abductive logic programming  satoh and iwayama  1 . 


	wakaki & satoh 	1 


 	automated reasoning 

	wakaki & satoh 	1 

 	automated reasoning 


1 	related works and conclusion 
in this paper  we present a method of compiling circumscription into extended logic programs which is widely applicable to parallel circumscription as well as prioritized circumscription. our method always enables us to compute any circumscription whose theory includes both dca and una by compiling it into elp ii  which can be evaluated by using the existing logic programming interpreter such as satoh and iwayama's top-down query evaluation procedure for abductive logic programming. 
　in the following  we compare our method with related researches from the viewpoints of the applicable class as well as the computational efficiency and feasibility. 
  gelfond and lifschitz's method  1a  as well as our previous method  wakaki and satoh  1  are the most efficient since they are as efficient as the evaluation of a stratified logic program. but their applicable classes are limited within a class of circumscription which has a unique model as mentioned in the introduction of this paper. 
  in sakama and inoue's first method   paral-lel circumscription is translated into a general disjunctive program  gdp . this method is applicable to a wide class of parallel circumscription  but inapplicable to prioritized circumscription though a class of gdp has the expressive power of the positive occurrences of negation as failure  inoue and sakama  1 . the most important difference between their gdp and our elp is whether classical negation   is available or not. theorem 1 shows that our approach exploiting classical negation can also give an extension of their alternative method whose target language is edp  so that it may become applicable to prioritized circumscription. 
  in sakama and inoue's second method   par-allel circumscription as well as prioritized circumscription is translated into prioritized logic programs proposed by them whose declarative meaning is given by preferred answer sets defined by them. their method  however  is immature for the purpose of the automation of circumscription since their prioritized logic program is not feasible because their method gives only the semantic aspects  but procedural issues for the query evaluation are left as their future works. 
our future work is to implement our method proposed in this paper. 
