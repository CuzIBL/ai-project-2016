an automated consultant for macsyma 
by michael r. genesereth 
center for research in computing technology 
harvard university 
cambridge  massachusetts 
laboratory for computer science 
massachusetts institute of technology cambridge  massachusetts 1 
　　　consider a person trying to solve a problem with a computer system he does not fully understand. and assume that  although he has encountered a difficulty due to his lack of knowledge  he is unwilling to learn more about the system than is necessary to solve the problem. the simplest way for him to acquire just the information he needs and no more is to consult an expert. consultation is a method widely used in computer centers as well as in domains like business  law  and medicine. unfortunately  human consultants are a scarce resource and quite expensive. the purpose of this paper is to propose as an alternative an automated consultant and  in doing so  to outline its requirements and publicize a current research effort* directed toward constructing such a consultant for the algebraic manipulation system macsyma. such a program should be able to converse with its user in english about a difficulty he has encountered and provide advice tailored to his need. as currently conceived  the macsyma advisor would be a program distinct from macsyma with its own separate data base and expertise. 
　　　one of macsyma's strongest user aids is its staff of human consultants  available on-line to help users with resource knowledge difficulties. during the last three years  the author has served as a macsyma consultant and recorded many of these consultation sessions. during the same three years  m i t . has offered a course on  knowledge-based systems  in which one of the requirements is the solution of a macsyma problem and an analysis of the resulting protocol. the analyses were supposed to indicate which information sources were consulted and why. the author also had the opportunity to read many of these analyses. an examination of the data obtained from such consultations and protocol analyses reveals that in using macsyma  people perceive the need for five general classes of information. 
 1  the user needs to know the name of a command or technique to do some task. if he were to phrase his need as a question  he would ask  how do i do ...   this is called a howdo need. 
 1  he needs to know a command's prerequisites  arguments  postrequisites  etc. he would ask  what are the ... of ...  . 
a what need. 
 s  he needs to check his beliefs about macsyma. he would ask  is it the case that...  . an is need. 
 1  he needs a procedural explanation of how a command works or a result was obtained. he would ask  how did macsyma do ...  . a how need. 
 1  macsyma has returned an unexpected result  and he can find nothing wrong with his derivation. he needs sufficient information to pinpoint and correct the misconception underlying his erroneous expectation. he would ask  why is it that...   a why need. 
　　　of these  the questions requiring the most sophisticated treatment are why and how. what  howdo  and is questions can be answered directly  with no consideration of the the user's purpose or his state of knowledge. a why or how question calls for different answers to different people in different situations. 
a why question arises when a contradiction between 
macsyma and the user's model  the misconception  becomes manifest in a violated expectation. however  the underlying misconception need not be immediately apparent. the violated expectation may depend on earlier mistakes that were not observed at the time  i.e. the point at which the user's misconception first had its effect in the user's plan  the locus  may be remote from the observed contradiction  the manifestation . a why question is a request by the user for enough information to correct the misconception underlying the manifestation. this can be supplied either by identifying the manifestation and its locus  model debugging  and correcting it directly or by explaining the correct result in detail  explanation  and letting the user do the debugging himself. 
the key to the model debugging process is the user's 
 plan . a plan is essentially a goal-subgoal tree with enough annotation to explain the user's expectations. the advisor constructs an explicit representation of the user's plan  plan finding  and then tries to find a bug. it may be able to recognize some pattern that indicates a  standard  mistake  one that many users make  using plan recognition . or it may be able to recognize an almost correct plan  by partial recognition . in either case  having discovered an issue  the advisor then tries to confirm that it is the locus by engaging in a question and answer session  plan taking  in which the user verifies the advisor's deductions and supplies further information. once the issue is confirmed  corrective action is taken. 
　　　in asking a how question the user is seeking a procedural explanation for a result or act or fact in order to remedy a deficiency in his model of macsyma. however  no violated expectation is provided  and so the advisor cannot pinpoint this deficiency. whenever a deficiency cannot be discovered  as with a how question or when model debugging fails  the advisor resorts to explanation. an explanation is a 
　　　partial plan. for acts  only the skeleton of the plan is given; for facts  the advisor also includes enough annotation to prove the result. explanation plans can be generated by a problem solving proof procedure with the aid of a meta-evaluator. using an explicit model of the user  the plan can then be pruned by an enthvmeme deletion process to eliminate general statements the user already knows and that would therefore be useless. 
　　　although the various parts of the advisor have all been implemented  as of this writing they have not yet been combined into a working system. also  the present data base is at best meager. the current timetable calls for its release to the macsyma user community this fall  where if successful it will find heavy use and provide valuable data for further improvements. 
*genesereth m.r.: automated consultation for complex computer systems. ph.d. thesis  harvard univ.  nov. 1. 

s p e c i a l i z e d 	s y s t e m s - i t 	g e n e s e r e t h 
1 
