
interactive tasks such as online configuration can be modeled as constraint satisfaction problems. these can be solved interactively by a user assigning values to variables. explanations for failure in constraint programming tend to focus on conflict. however  what is often desirable is an explanation that is corrective in the sense that it provides the basis for moving forward in the problem-solving process. this paper defines this notion of corrective explanation and demonstrates that a greedy search approach performs very well on a large real-world configuration problem.
1 introduction
to demonstrate the distinction between corrective explanations and more traditional conflict-based explanations  consider the example in figure 1.

figure 1: example of corrective versus conflict-based explanations.
　this figure presents assignments of colors to variables in a coloring problem. we have assigned colors to the first 1 variables  highlighted in black   only two colors are available  and we are running a forward checking algorithm  so we have encountered a domain wipeout on variable v1 at this point. we will say that variables v1 and v1 form a  culprit set . the assignments to those variables account for the wipeout. the variables v1 and v1 do not provide a corrective explanation because it is not possible by changing their instantiations alone to restore any choices to v1. {v1 v1} is a corrective explanation of inconsistency  as alternative assignments can be found for the these variables that enables the user to assign at least one more variable. making v1 b lue  and v1 r ed  allows us to proceed to assign a value to v1  blue.

 
　　this work has received support from enterprise ireland  grant sc/1  and science foundation ireland  grant 1/pi.1/c1 .　a corrective explanation for value recovery is useful when the user would like to restore a value that was removed due to some previous decision s . such an explanation identifies modifications to the user's decisions guaranteing that the desired value is restored and can be selected consistently. a corrective explanation is minimal if no  proper  subset is itself a corrective explanation. we define an optimal corrective explanation as one of minimum cardinality.
1 computing corrective explanations
instead of using compilation methods  amilhastre et al.  1  or standard model-based diagnosis techniques  junker  1; reiter  1   we advocate the use of a heuristic search approach to find corrective explanations. while heuristic search cannot guarantee that minimum length explanations are found  near optimal explanations can often be found quite efficiently. we generate corrective explanations by returning any differences between the assignments made by the user and the assignments in a solution found using carefully chosen variable and value ordering heuristics. these heuristics attempt to maximize the number of user assignments in such a solution. the value ordering heuristic favors values chosen by the user during search  by selecting those first whenever possible  and uses standard heuristics for the remaining ones. we partition the set of variables into a set of user-assigned variables and a set of unassigned variables. user-assigned variables are considered first  and within each subset of variables a particular variable ordering heuristic is used. the intuition here is that during search the user's choices are always considered first  so they are more likely to participate in the solution used to generate an explanation.
1 experiments
we ran a suite of experiments based on the renault megane configuration benchmark  amilhastre et al.  1 . the problem consists of 1 variables  domain sizes vary from 1 to 1  and there are 1 non-binary constraints. the number of solutions to the problem is in excess of 1〜1. the solver we used in our experiments was based on generalized forward checking.
we studied three variable ordering heuristics for gener-
ating corrective explanations using the approach described above: minimum ratio of domain over forward degree  also

 a  average cost of inconsistency explanations. b  average cost of value recovery explanations.
	 c  average length of inconsistency explanations.	 d  average length of value recovery explanations.
figure 1: results for finding explanations for the renault megane configuration benchmark.referred to as minimum domain/degree   maximum degree to the user's assigned variables and random. we used a random value ordering  since it seemed to perform best overall.
　based on the variable and value ordering heuristics  we studied three different search techniques: 1  a branch-andbound search seeking to minimize explanation length; 1  a greedy heuristic search for a solution that returns a single explanation; 1  running multiple greedy heuristic searches  1 in these experiments   providing multiple explanations  of which the one of minimum length was returned. the simulated user chose variables randomly and values lexicographically. we considered both the task of generating corrective explanations for inconsistency  over 1 configuration sessions   and corrective explanations for value recovery  over 1 sessions  in which the user chose to restore an inconsistent value with a probability of 1. we report averages at intervals of 1 variables.
　in figure 1 a  and figure 1 b  we see that minimum length explanations tend to be very expensive to compute using a branch-and-bound search  thus not a viable option in an interactive context. in figure 1 c  and figure 1 d  we plot average explanation lengths. the greedy approaches  with the possible exception of that based on the random variable ordering  find almost minimum length corrective explanations using a
　fraction of the search cost of branch-and-bound.
　the best approach of those studied was based on minimum domain/degree. for the inconsistency explanations experiment the average length of the explanations found was 1 variables  for the one solution version  and 1 variables when we proposed the best of 1 solutions. this compares with an average optimal explanation length of 1 variables. the average search effort required to find a single explanation was 1 constraint checks. for the value recovery experiment  minimum domain/degree found explanations of length 1 and 1 for the one solution and best of 1 solutions  respectively. the average optimal length was 1. the search effort required to find a single explanation was 1 checks.
1 future work and conclusion
the notion of corrective explanation is new in the domain of constraint satisfaction  where existing work on explanation is focused on conflict. using a greedy search approach with good variable and value ordering heuristics seems an attractive option as it represents a good compromise between search cost and explanation length. building upon the work of junker  junker  1  we plan to explore the potential for a preference-oriented relaxation-focused corrective explanation algorithm.
