a wrinkle on satisficing search problems1 
jeffrey a. barnett and don cohen 
usc information sciences institute 
1 admiralty way 
marina del rey  california 1 

a b s t r a c t 
　the problem of optimally ordering the execution of independent disjuncts is explored. only a single answer is sought  not necessarily the best one. by definition  this is called satisfying search. since the disjuncts are independent  the total combined probability that a solution is found does not depend on the execution order. however  the ordering does affect the total expected execution time because execution ceases as soon as any solution is discovered. therefore  the optimal ordering is the one that minimizes the total expected work. the new result is an algorithm to find this optimal ordering when the effects of executing a disjunct must be undone before another one can be tried. the algorithm is shown to have time complexity 1 n log n   where n is the number of disjuncts. this is the same complexity as for the original problem where undo times are ignored. 
introduction 
　many investigators have examined problems of satisficing search: try the available methods one at a time until one of them satisfies the stated criteria  then stop. the objective is to find a method ordering with the least expected cost to solve the problem. typically  only the probability of success and the expected cost are known for each method. 
　method i is pairwise preferred to method j if  given only these two methods  it is less expensive to try i first. pairwise preference is transitive. therefore  if the optimal ordering of n methods is m1....mn and mn+1 is added  it is merely inserted somewhere in original ordering - all original methods stay in the same posi-
tion relative to one another. 
　below  the original problem is generalized: associated with each method is a cost that must be paid  after trying the method  if another method is to be used. for example  the cost may be the time to undo the changes to the problem-solving state so that another method can be executed in the proper context. 
　the pairwise preference relation is no longer transitive and the simple insertion scheme is lost for the generalized problem. however  the criteria for optimal ordering is straightforward to derive. an algorithm that finds the optimal ordering is given  and it is shown to be of the same time complexity as the one for the original problem  namely o n log n . 
　1this research is supported by the defense advanced research projects agency under contract no. mda1 c 1. views and conclusions contained in this report are the authors' and should not be interpreted as representing the official opinion or policy of darpa  the u.s. government  or any person or agency connected with them. 
the original problem 
　a set of methods is available  each of which has the potential to solve the same given problem. the methods can be applied to the problem in any order; however  they may only be tried one at a time. if one of the methods solves the problem  the remaining untried methods need not be used. in other words  only one solution is desired or necessary  and there is no interest in extra solutions nor any other results that might be produced by method execution. 
　the usual statement of problems in this class assumes that the probability that a particular method is successful and the execution cost of the method are independent of the order of execution and whether or not any other method is successful. without this independence assumption  there is no general optimal ordering because the tradeoff between higher probability of success and lower expected cost is an application-dependent issue; the most general result possible then  is a partial ordering for method execution. however  with the independence assumption it follows that the total probability that at least one method will find a solution is independent of the order in which the methods are tried. therefore  the residual problem is to determine the ordering with least expected cost. 
　a typical example of this class is the following: let p be the probability that method i solves the stated problem and define q = l-p.. further  let c. be the expected cost of trying method i. for example  c = p.s + qu. where s is the expected cost when successful and u is the expected cost when unsuccessful. what is the best order in which to apply a given set of methods to find a 
solution with the least expected cost  
　the answer is simple:1 define p. = p /c.. apply first the method with largest p; if it fails  try the method with the next largest p  etc. the order of application among methods with the same p value is immaterial to the total expected cost of finding a solution. 
　two features of this result are noteworthy. first  a merit score  namely p. = p./c  can be calculated for a method independent of what other methods exist. thus  if a new method becomes available  it can be evaluated separately and inserted into the current ordering of previously available methods with the assurance that the new ordering is optimal. second  as a consequence  the pairwise preference ordering is transitive: method i is preferred to method j if  given only methods i and j  the expected cost of trying i 
　see simon  h. a.  and j. b kadane   optimal problem-solving search: all-ornone solutions   artificial intelligence 1  1   1 for this and other relate results. 

j. barnett and d. cohen 1 


1 j. barnett and d. cohen 
another possible generalization of this class of ordering 

for all j  the differences are calculated and the maximal one selected in time o n  by the algorithm described next. 
the a l g o r i t h m 
problems suggests itself; suppose the detoxification time between method i and method j is d..  i.e.  d depends upon both the preceding and succeeding methods. now the computation of the optimal ordering becomes at least as hard as the version of the traveling salesman problem where the salesman must visit each city once but does not need to return to his starting point. to see this  assume that p and c are the same for all n methods and q = 1-p is very nearly equal 1. then the cost of an ordering j = j1...jn  where j is a permutation of the first n natural numbers is 
