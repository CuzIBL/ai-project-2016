 
an extension of semantic resolution is proposed. it is also an extension of the set of support as it can be considered as a particular case of semantic resolution. it is proved sound and refutationally complete. the extension is based on our former method for model building. the approach uses constrained clauses  or c-clauses   i.e. couples  clause : constraint . two important new features are introduced with respect to semantic resolution. firstly  the method builds its own  finite or infinite  mod-
els to guide the search or to stop it if the initial set of clauses is satisfiable. secondly  instead of evaluating a clause in an interpretation it imposes conditions  coded in its rules  to force a c-clause not to be evaluated to true in the interpretation it builds. 
the extension is limited in this paper to binary resolution but generalizing it to nary-resolution should be straightforward. the prover implementing our method is an extension of otter and compares advantageously with it  if binary resolution is used in otter   both in the search space and in the proof lenght of a relevant non trivial example. last but not least  model building is incremental. this feature is specially useful when deal-
ing with large set of clauses. 
1 	introduction 
since the very beginning of automated theorem proving  researchers tried to put some semantics in theorem provers in order to improve their power and efficiency   see for example  gelernter et a/.  1  . this was a very natural idea: usually  human beings are strongly guided in their proofs by some interpretation of the conjecture they are trying to proof or to refute. but a problem immediately appeared:  how to formalize this idea    the first  fully automated formal approach taking semantics into account was the set of support strategy  wos et a/.  1  who was born almost simultaneously with resolution  and who is still considered as the most powerful restriction strategy available   wos  1   page 1 . in 1  slagle  slagle  1  proposed a very elegant and general restriction strategy for resolution  called semantic resolution  in which the application of the resolution rule is controlled using ad hoc ground models given by the user. slagle was aware of the limits of his method: 
　 a disadvantage of a semantic strategy is that the program must at present be given a model along with the theorem to be proved. one might hope that someday the progreim could devise its own models    slagle  1   page 1 . 
　j. slaney's scott theorem prover  slaney  1  is an answer to this wish. scott produces striking results using semantic resolution. 
　slagle also emphasized the usefulness of models in improving the set of support strategy: 
　'' with set of support resolution  resolvents are generally not maximal and the underlying model is unknown. if the models were known many resolutions and resolvents could be eliminated    slagle  1   page 1 . 
　the method we propose here overcomes the two drawbacks pointed out by slagle  for semantic resolution and set of support . more precisely  we propose an extension of semantic resolution based on our former method for simultaneous search for refutation and model   bourely et a/.  1; caferra and zabel  1  . it strongly relies on the use of constrained clauses  i.e. couples  clause : constraint s   instead of standard clauses. the constraints allow in some sense to code meta-reasoning: they are logical formulas imposing some conditions concerning the inference rules. 
　our approach has at least three important consequences: first it prunes the search space for refutation in a similar - but stronger - way than semantic resolution does. second it allows to perform an incremental model construction. if a model of a formula i1 is known  and if we want to get a model of e/ f'  then our method computes the new model by extending the previous one  instead of re-computing it entirely. last  but not least  it gives to all level of the support strategy a power similar to that of level 1. 
　the paper is divided into 1 sections. section 1 recalls briefly the basic ideas of our method for model building and some of its key rules. in section 1 we propose an extension of semantic resolution and we prove its properties: soundness and refutational completeness. section 1 

is devoted to incremental model building: we state conditions assuring that a model can be automatically built. one running example illustrates this construction. 
　section 1 shows  via an analysis of the search space of the halting problem proof how our method prunes the search space of otter  if binary resolution is used  and produces a shorter proof. 
1 simultaneous search for refutations and models 
with the aim of increasing the possibilities of theorem provers as  hopefully intelligent  research assistants  we have developed few years ago a  refutationally complete  method combining search for refutations and models for first order formulas. the method captures the  normal  attitude of a human being faced to a conjecture: he considers simultaneously two possibilities: to prove and to disprove the conjecture. 
　this method - called ramc1 - uses constrained clauses  or c-clauses   i.e. couples {clause : constraint . constraints code the conditions necessary either to the application or the impossibility of application of the inference rules and denote the range of the variables of the clauses. it is neither possible nor useful to paste here large parts of results published elsewhere. instead we recall some inference and disinference rules used in the examples that give also a taste of the method  for technical details see  caferra and zabel  1  and  bourely etal  1  . 
　- the rule of binary c-resolution  abbreviated bcresolution  on c  and u p o n i defined as follows: 
　- the rule of distautology generation imposes constraints on a c-clause in order to prevent it from being a tautology. 

　- the unit bc-dissubsumption rule imposes constraints preventing a c-clause from being subsumed by a unit cclause. it allows the elimination of the c-clauses that are logical consequences of other c-clauses of s. it is defined as follows  where 
　the binary-c-disresolution rule is a natural extension of the unit disresolution  defined in  caferra and zabel  1 . 

'standing for refutation and model construction 
　- the gpl-rule    generating pure literal  rule . 
let s be a finite set of c-clauses. let c be a c-clause in s and / be a literal in c. the gpl rule computes constraints for c in order to prevent application of bcresolution upon / and lc  i.e. the complementary of /  between the c-clause c and any of the c-clauses in s. 
formally  let s be a set of c-clauses and c : 
 be a c-clause in 1. the gpl-rule is defined as follows: 

　in  bourely et a/.  1  the gpl rule is extended in order to deal with self-resolvent clauses   it is easy to see that the result of the previous rule applied on self-resolvent clauses  is in most cases useless . 
　the reader can easily imagine the meaning of other rules of the method  based exactly on the same idea . 
　our approach is not limited to herbrand models: in  bourely et a/.  1   the method is extended to sets of equational clauses. we defined the cparamodulation and c-dis-paramodulation rules  similar to the c-resolution and c-disresolution rule  and we give two termination criteria identifying classes of satisfiable equational unit clauses for which a model can be surely built. they allow to compute the domain d  a subset of the herbrand universe  and to interpret function symbols on the domain. 
　if ramc stops  and if the set of c-clauses that we obtain contains only unit c-clauses  it gives a model of the initial formula. the partial interpretation of the predicates is given by the unit c-clauses produced by the method: each n-ary predicate p is mapped to two subsets corresponding to the sets of n-tuples of ground terms for which p is respectively evaluated to true and to false. the interpretation is partial b e c a u s e = dn  we have obvi-
ously total interpretations are particular cases of partial interpretations. the sets are presently 
expressed by equational problems in an equational theory. equational problems are a decidable class of logical formulas quantified in a particular way and using only = not=      a  v. we shall soon incorporate in the method constraints with more expressive power  peltier  1 . interpretations  models  expressible by equational problems are called equational  or eq-  interpretations  models . 
1 	extending semantic resolution 
the principle of semantic resolution  slagle  1  is the following: it uses an interpretation 1  given by the user  and prevents the application of resolution between 
two c-clauses that are true in j. this restriction is refutationally complete. the main idea of the method we propose is a very simple one: since we are able to build 
　1 notice that not to be false in a partial model in not equivalent to be true in it 
	caferra and peltier 	1 
models of sets of clauses  why not use them in order to guide research in similar way as semantic resolution  or the set of support strategy  does   
　immediately  we can go further: instead of evaluating clauses in a  in general partial  model  why not impose conditions - coded in the constraints - forcing a clause to be evaluated to false or not to be evaluated to false in the model   
　these simple ideas have important consequences: search space can be restricted with respect to that of semantic resolution and it gives to the method at all levels a power similar to that of set of support at level l1. the model building capabilities of our approach are also improved  with respect to our previous work: we will show that the use of an interpretation 1 that is a model of some of the c-clauses makes the model construction for the whole set easier. 
1 	semantic c-rules 
we translate these ideas into the inference  and disinference  rules of our method. let 1 an eqinterpretation  represented by a finite set of unit cclauses: 
are de-
the following 
equational problem: 

it is easy to verify: 

 i.e. there is a literal in c evaluated to true in 1 . 
　we introduce a new inference rule and a new disinference rule. 
binary i-c-resolution : 
　we shall call ramcs the method ramc augmented by the two rules above. 
remark: ramc is a particular case of ramcs  with 

　notice that the use of equational problems allows to restrict the application of the resolution rule in a stronger way than semantic resolution  as defined by  slagle  1  does  as showed by considering the following set of clauses: 

and the her brand interpretation: 
i = {s a } 
　the following is a valid semantic derivation  according to slagle's definition. 
c1 : s x   resolution between c1 and c1  
　　c1 : r x   resolution between c1 and c1  while ramcs gives the following c-clauses: 

　the constraints of c1 have no solution and thus c1 can be removed from the set of c-clauses. 
　more precisely  it is possible to show that all the crefutations generated by our method do correspond to a ground semantic refutation  see theorem 1 below . this is not the case with semantic resolution: in previous example  the first derivation did not correspond to any ground semantic derivation  for more details about this problem  see for example  mccune and henschen  
1  . 
　in  standford  1   a method was proposed in order to avoid inferences that do not correspond to any ground inference: it attaches to each clause a list of literals whose descendants must be falsified  it was called the fsl list . this method appears to be not efficient  mccune and henschen  1 . 
　 the fsl method was implemented but during preliminary experiments we found that it required too much processing time. during deep searches the fsl lists became very long and the improvement was small or nonexistent.    mccune and henschen  1   page 
1  
　our approach seems to be more adapted to solve-this problem in a more natural and efficient way. 
　in theorems and lemmas below  interpretation  means peq-interpretation. 
theorem 1 let 1 be an interpretation  s a set of cclauses and d be a derivation from s using the i-cresolution rule. let d' be a corresponding ground deriva-
tion  i.e.  then d' is a ground semantic derivation from ground instances of c-clauses in s. 
proof 1 by induction on the length n of d: 


	caferra and peltier 	1 



caferra and peltier 	1 