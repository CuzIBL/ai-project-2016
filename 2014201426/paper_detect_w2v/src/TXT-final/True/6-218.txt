 
we propose a novel method for constructing utility models by learning from observed negotiation actions. in particular  we show how offers and counter-offers in negotiation can be transformed into gamble questions providing the basis for eliciting utility functions. results of experiments and evaluation are briefly described. 
1 introduction 
utility functions encode an agent's preference and risk taking behavior  and in many negotiation scenarios they are often considered private information. although various elicitation techniques for decision makers have been widely used  see for example  keeney and raiffa  1    they are not readily applicable in the negotiation scenario. for example  an agent can not ask the the opposing party lottery questions to assess its utility function. the use of learning mechanisms in negotiation has been investigated in several recent studies  see for example  bui et al.  1; zeng and sycara  1   and has been shown to be an effective tool in handling uncertainty and incompleteness. none of the previous studies  however  have directly addressed the issue of utility elicitation. in many cases  value functions and utilities are assumed to be partially or completely known as shown in their experiments and evaluation. in this work  we assume that each party's utility is completely unknown to the other and no trusted third party exists. we describe how information provided by observed negotiation actions can be used to construct the utility model of an agent. 
　an important tool in eliciting utility functions is the use of lottery or gamble questions and the concept of certainty equivalence. let d be a domain  u be a utility function over d  and let o1 and oj be outcomes in a gamble g where o  occurs with a probability p  o1 occurs with a probability  1 - p   and a certainty equivalent is an amount x such that the decision maker  dm  is indifferent 
1 negotiation actions as gamble questions 
we would like to construct a model that gives us preference and risk-taking information given a position xi and a gamble that insists on a position xj. a position is either an offer or a counter-offer. due to space limitation  our discussion is restricted to constructing the buyer's model. we use zeuthen's concept of probability to risk a conflict  zeuthen  1  as a basis for transforming negotiation transactions into gamble questions. while zeuthen assumes complete knowledge 
peter haddawy 
asian institute of technology 
pathumthani  thailand 1 haddawy ait.ac.th 
of utility functions  our approach attempts to build a utility model by observing negotiation actions. 
　a conflict occurs when both parties do not reach an agreement. the probability that a party would risk a conflict is proportional to the difference between what the party wants and what it is offered. the closer the other party's offer is to what is desired  the smaller this probability should be. the farther away the other party's offer is from what is desired  the larger the readiness to risk a fight or conflict. 
definition 1 let ub and us be b 's  buyer  and s 's  seller  utility function  respectively. let xb be b 's position and xs be s's position. the probability that b will risk a conflict  pb. and the probability that s will risk a conflict  ps  are defined as follows: 
 1  
 1  
　by computing the expected utility  b can decide whether to accept s s offer or insist its own position. in particular  b 
counter-offers xb whenever the gamble has a utility higher than xsj.e.   conflict . 
b accepts xs if for b the expected utility of the gamble  1 -
	 conflict  can not exceed 	. if the 
utility of a non-agreement  conflict  is higher than xs then 
the offer is rejected. 
　without losing generality we will assume that ub is monotonicallv decreasing while us is monotonically increasing. the following theoretical results allow us to generate training instances implied by a counter-offer. 
theorem 1 let xb beb 's counter-offer and xs be s 's offer 
furthermore  let g =  conflict  and let  be b's certainty equivalent for g. if g ub xs   then for any nondegenerate g   
theorem 1  inferior offers  let xb be b's counter-offer andxs be s's offer. furthermore  letg =  1~ps ub zb  + 
1 	poster papers 　by theorem 1  if b decides to make a counter-offer xb to an offer xs by 1  then b's certainty equivalent belongs to the interval  xb zs . theorem 1 states that if b prefers the gamble to an offer of xs by s then b would also prefer to gamble than accept any offer by 1 higher than xs. symmetrically  b prefers any offer lower than xb over a gamble. counter-offers imply preference between a gamble and a specific offer. although b's estimate of 1's probability to risk a 

conflict  ps  is not specifically known  b's counter-offers are in part based on ps. hence  by learning b's actions  ps values are indirectly incorporated into the model. 
1 	utility model construction and evaluation 
we ran experiments using two control utility functions: 
 risk-averse  decreasing function  and 
 risk-prone  decreasing function . in each 
negotiation sequence  ps is either generated randomly or is set using {1 1 1} as values. the negotiation using  is over the domain d1 =  1  and that of 
is over d1 =  1 . the value of conflict c is set at the maximum value of the domain. the buyer-seller negotiation strategy  vary among boulware-conceder  concederboulware  and conceder-conceder pairs. we define our 
boulware strategy as one where the agent concedes only 1% of the time and a conceder strategy as one where concession is frequent at 1% of the time. whenever an agent concedes  concession is randomly chosen between 1% of the difference between both agents' most recent counter-offers. 
　the artificial neural network used in our experiments has one hidden layer with four nodes. the input layer contains three input nodes and the output layer contains two nodes. data fed into the input layer are scaled so that values only range between 1 and 1. negotiation sequences used for training  tuning  and testing are randomly generated using a chosen strategy pair  a control utility function  a negotiation domain  and a constant conflict value. we used a k -1 cross validation method to train and tune the network  where k is the number of negotiation transactions  offer-counter pairs  in each negotiation sequence. network training is stopped when either no improvement in performance is detected for a successive 1 epochs or the number of epochs reaches 1. among the data generated using the intervals  1% is used for training and 1% is used for tuning. we point out that although the generated data maybe learned using other techniques we have chosen to use neural networks for convenience purposes. 
　we have randomly generated a total of 1 negotiation sequences  wherein each of b's counter-offer b's expected utility of the gamble is greater than that of s's offer. the total number of negotiation transactions is 1 which gives an average of 1 transactions per negotiation sequence. the training instances are obtained by generating a total of 1 random data points for each observed negotiation transaction; 1 random data points for each of the region below and above the interval. the certainty equivalent  which is obtained from the control utility function  lies inside each interval. for each of the region below and above the certainty equivalent 1 test points are generated. we then evaluate the approach by comparing how well the model performs when trained using the intervals against the test points from the control utility function. 
　intuitively  not all negotiation transactions maybe useful. for example  an offer that is near the maximum domain value and a counter-offer that is near the minimum domain value has an interval width that is close to the width of the domain. since we are using the interval to estimate the certainty equivalent such a negotiation transaction would be less useful to one in which both the offer and counter-offer are closer to the certainty equivalent. results of regression analysis suggest that useful interval widths are those that are about 1% of the domain width. we have used this result as a basis to eliminate data points that may not be useful in constructing the utility model. 
　to test the overall performance  negotiation sequences were grouped into subsets where normalized interval widths are no greater than 1  1  1  1  and 1. the average interval width for each subset is 1  1  1  1  and 1  respectively. the average network performance of each of these respective subsets is shown in figure 1. the overall network performance increases as the average interval width corresponding to the negotiation transactions decreases. the solid curve shows the performance of the utility model in predicting whether an offer is preferred by b to a gamble using only implicit data points below the interval. this is important because b's counter-offers only correspond to the lower limit of the interval. the dotted curve shows the accuracy of the model in predicting whether an offer is preferred by b to a gamble and whether b prefers a gamble to an offer. tne mean accuracy is obtained by averaging the results using implicit data points below and above the interval. the results suggest that for intervals with average width of 1 the network can predict about 1%: of the time whether an offer is preferred to a gamble by b. for intervals with average width of less than or equal to 1  we are able to predict with more than g1% accuracy whether b prefers the offer to a gamble. in addition  the predictive accuracy of the model when implicit data points above and below the interval arc used is better than a random guess. we ran four right-tailed 
z-tests and one right-tailed t-test using the following hypotheses: h1 :  = 1 and ha :    1. for the /-test the null hypothesis is rejected at a = 1. in each of the r-tests  the null hypothesis is rejected at  = 1. 
　in summary  we have outlined theoretical results that would allow us to construct utility models from negotiation actions. results from our experiments suggest that our utility model provides significant predictive capability. 
references 
 bui et al.1  h. h. bui  s. venkatesh  and d. kieronska. learning other agents' preferences in multi-agent negotiation using the bayesian classifier. international journal of cooperative information systems  1-1  1. 
 keeney and raiffa  1  ralph keeney and howard raiffa. decisions with multiple objectives: p