
interaction between heterogeneous agents can raise some problems since agents may not use the same models and concepts. therefore  the use of some mechanisms to achieve interoperability between models allows agents to interact. in this paper we consider the case of reputation models by describing an experience of using several existing technologies to allow agents to interoperate when they use reputation notions/values during interactions. for this purpose  we have implemented agents on the art testbed and we make them use a functional ontology of reputation which was developed to allow the interoperability among reputation models.
1 introduction
in open multi-agent systems  it is often a problem to achieve agents' interoperability. agents may be heterogeneous and it is not trivial to establish interactions and cooperations between agents that use different models. we have to provide means by which agents can understand each other and translate part of their models into the model of other agents  and vice versa .
　in this paperwe will focus on the specific case of reputation models. the work presented here describes an experience of using several existing technologies to allow agents to interoperate when interacting using the notions from their reputation models. we implemented agents on the art testbed  fullam et al.  1  that provides an infrastructure for the experimentation of reputation models. then  we used the functional ontology of reputation  casare and sichman  1b  to allow agents to describe their own reputation model for external purposes and a query language over owl  bechhofer et al.  1   called nrql  for agent interactions.
　the next section presents the background of this work and describes briefly the used tools  the art testbed and the functional ontology . section 1 details our proposition by explaining how an agent can use the ontology to interoperate with others. at last  section 1 shows the implementation of this work on art.
anarosabrandao gmail.com
1 background
this section first states the current heterogeneity of reputation models and then presents the tools that were used as a background of this work: the art testbed and the functional ontology of reputation.
1 heterogeneity of reputation models
multi-agent systems arised new kind of chalenges for developers due to their specific and original features as  for instance  the openness of the system  the decentralized management of tasks and the autonomy of agents. these features taken together imply that some agents  potentially implemented by different developers  can enter or leave dynamically the system  and that these agents may be involved in collective tasks and will cooperate with other agents that rely on them. furthermore  since agents are considered as autonomous entities  we cannot assume that there is a way to control their internal behavior. these features are interesting to obtain flexible and adaptive systems but they also create new risks about the reliability and the robustness of the system. the risk that an agent does not behave well  intentionnally or not  is increased. this bad behavior can cause the failure of some tasks performed by the agent but also of collective tasks in which it is involved.
　solutions to this problem have been proposed by using trust models. the main idea of this approach is to endow agents with a model of other agents that allows them to decide if they can trust these other agents or not. such trust decision is very important because it is an essential condition to the formation of agents' cooperation. the trust decision process has been the subject of several propositions from different researchers. most of them use the concept of reputation as the basis of a decision. reputation is a subject that has been studied in several works  castelfranchi and falcone  1; sabater and sierra  1; conte and paolucci  1; abdulrahman  1; muller and vercouter  1  with different approaches but also with different semantics attached to the reputation concept. the word  reputation  does not have exactly the same meaning depending on the approach. some authors consider that an agent has only one associated reputation value that is globally maintained by the system  zacharia et al.  1   whereas others think that two agents can have a different opinion about the reputation of an agent  sabater and sierra  1; abdulrahman  1; muller and vercouter  1 . moreover some works consider that reputation should be relative to a given context  castelfranchi and falcone  1   to the sources used to build it  mcknight and chervany  1   to the nature of its target  mcknight and chervany  1   to the facet of the agent that is evaluated  sabater and sierra  1; wang and vassileva  1   and so on.
　these different approaches result in a wide semantic heterogeneity of reputation models. two different reputation models do not represent exactly the same things  and sometimes they even use the same word for different concepts. these differenceslead to some incompatibility among reputation models. agents using different reputation models cannot interact since their notions about one another reputation are not understood each other. this is a heavy constraint over the system because it imposes that every agent use the same reputation model. in order to drop this constraint we must provide a way to bring interoperability between the models.
1 the art testbed
one of the consequence of the wide diversity of reputation models and of their heterogeneity is that it is very difficult to compare and to evaluate them. each model focuses on the representation of some specific concepts that may be different from those of other models. the context and the kind of the target application is also sometimes different. these difficulties have been stated by the community during the international workshop about trust in agent societies at aamas'1  tru  1  and it has been decided to create a working group named art  agent reputation and trust  which goal is the development of a testbed for the experimentation and comparison of trust models.
　a first version of the art testbed has been developed and used for a competition between trust models during the aamas'1 conference. this first version provides a simulation engine on which several agents  using different trust models  are running. the simulation consists in a game where the agents have to decide to trust or not other agents. this game is an art appraisal game in which agents are required to evaluate the value of paintings. the game can be summarized as follows:
1. the art simulation server gives to each agent a givennumber of clients.
1. each client gives to its agent the description of a painting. the client expects that the agent evaluates the painting and gives back to him an accurate value.
1. a painting is mainly characterized by an era. according to this era  an agent is more or less accurate in its evaluations.
1. each agent can ask other agents to help it in its evaluation of a painting if it thinks that these other agents are more accurate than itself for the corresponding era. this exchange of information is called an opinion transaction and to get this evaluation the requester pays a fixed amount of money to the provider.
1. agents also interact by the way of reputation transactions. the information requester gives money to the provider but this time  the information that is bought is not an opinion about a painting but the reputation of another agent  a target  for a given era. this reputation represents the estimated accuracyof the target in its evaluation of paintings of the given era.
1. at last  each agent calculates a value for the paintings ofits clients and receives money for this evaluation. the game is played during several iterations. at the next iteration  the amount of clients affected at an agent at step  1  depends on the accuracy of its evaluation in the previous iteration.
　more details about the art testbed can be found in  fullam et al.  1 . during most of this game  the incompatibility of trust models is not important because they are used locally by their agents' decision process. however  the case of reputation transaction is particular because it is the only moment where agents have to exchange information coming from their trust models. here  interoperability is required as an agent must be able to formulate a query about reputation values that must be understoodby the receiverof the message. this one must also be able to answer and to send the required values in a format that is understood by the first agent. in the current version of the art testbed  interoperability is obtained by asking the developpers of each agent to provide a way to map their trust model into a very simple common reputation model. this simple model defines that:  i  an agent associates with each of its acquaintancesa single value named  reputation weight ;  ii  this reputation weight is a value in the domain  1 .
1 the functional ontology of reputation
the diversity of domains that are interested in trust and reputation implies a wide and confusing heterogeneity of concepts and definitions. this diversity is also found in the trust models used in multi-agent systems as they are often inspired by social or economic sciences. in order to allow the interoperability of trust models  casare and sichman  casare and sichman  1b  proposed a functional ontology of reputation. this ontology aims at identifying and organizing the concepts and relations involved in trust models. the authors have studied the main models in multi-agent systems in order to identify the important concepts that may appear in a trust model. then they defined a functionalontology that subsumes the main reputation models.
　this ontology includes concepts for different aspects of a reputation model. it both represents reputation as a process  using concepts to describe the procedures  the actors  the data  ...  and as a product  using concepts to structure the description of a reputation product . for instance  there exists concepts to represent different reputation natures - according to the entity  agent  event  location  etc.  that is evaluated; different reputation types - according to the way it has been computed; different information sources to build reputation; etc.
　an implementation of such ontology was described using the owl language  bechhofer et al.  1 . the authors claim that the functional ontology of reputation could be used for interoperability as it is possible to map a reputation model into concepts of the ontology. thus  an agent can map its own reputation model into these concepts and can understand the reputation models of others if they are also mapped. the next section describes how we propose to achieve this.
1 using the ontology for the interoperability of reputation models
reputation building is a learning process that needs several experiences with the evaluated agents to calculate relevant values. thus  it is often suggested that agents should interact in order to get more information and to accelerate the convergence of the learning process. the lack of interoperability between reputation models is then a problem because it prevents any interaction between agents using different models.
　we propose to use the functional ontology as an intermediary between reputation models. since the ontology subsumes most of the existing reputation models  we can assume that it is possible to define a mapping between a reputation model and part of the ontology. interoperability is then achievable if an agent selects in its own model some information to send to another agent  maps it into ontology concepts and sends the mapped information to the other agent that can convert it according to its own model. in this section we first identify some interesting concepts of the ontology  then show how to use them for agent interaction. at last  an agent architecture based on this approach is proposed.
1 concepts used to describe a reputation model
the functional ontology proposed by casare and sichman  casare and sichman  1b  aims at covering a broad knowledgeaboutreputation. the concepts included in the ontology can describe several aspects about reputation but a few of them were useful for the mapping of a reputation model. for this purpose  we have identified the following concepts:
  reputation role used to specify the roles fulfilled by some given agents during a reputation calculation process. the roles considered are the target who is evaluated  the evaluator or the maintainer that calculates a reputation value  the transmitter that sends a reputation value to another agent and the recipient that will use the reputation value.
  reputative entity used to address a given entity. there are three kinds of entities: agents  non-agents  as events  locations  ...   or skills  owned by agents . each of these entities can be the target of a reputation.
  reputation type that distinguishes different reputations according to the way they where obtained. for instance  primary reputation is obtained from direct experiences with target  whereas secundary reputation is based on second hand information.
  reputation evaluation value and reputation final value containing the value of a reputation. an evaluation value is the result of a single evaluation process whereas a final value is computed from several evaluation values and represents a global evaluation about a target.
　these concepts are used to build an external description of a reputation model. this external description contains instances of these concepts.
1 defining mapping between reputation models and the functional ontology
as shown in  casare and sichman  1a   it is possible to map reputation concepts between different models using the functional reputation ontology as an intermediary. the following example illustrates how it should be done using two reputation models: cognitive reputation model  conte and paolucci  1  and regret model  sabater and sierra  1 .
　the cognitive reputation model adopted the term  image  in order to represent an evaluation  telling whether an agent is good or bad  formed using information acquired by agent direct experience  while in the regret model the term  direct trust  refers to the evaluation of an agent behavior that is built from a direct interaction between agents.
　by expressing these two concepts in terms of ontology elements  we have found that both of them are subsumed by the same concept  named  primary reputation   that represents the reputation that is obtained from direct experiences with target.
　so  suppose we have an agent using the cognitive reputation model that is asking another agent  that is using regret model  some reputation information acquired by direct experience about a specific location  rio de janeiro. if both of them are using the ontology as an intermediary  the second one can provide its  image  value for rio de janeiro while the first one can understand it as corresponding to its  direct trust  value.
1 agent interaction about reputation
agents interact in order to exchange information. we say that an agent interacts about reputation when the interaction purpose is to receive information about the reputation of someone or something  as shown in the above example. these interactions consist in a simple query/answer protocol  as shown by figure 1. one agent  called the requester  sends a query about some reputation information to another agent  called the provider. then the provider answers by a message containing the required information.

figure 1: interaction about reputation protocol
　the interesting part is not on the protocol or on the format of the messages that we kept very simple  but on the content of each message. since the agents may use different reputation models  the content of the messages must refer to concepts of the ontology. in its current implementation  the ontology has been written using owl  bechhofer et al.  1 . the queries must then refer to this ontology using a query language for owl. we decided to use nrql  haarslev et al.  1  that is the query language of the racer  racerpro  1  tool. this choice is motivated by the fact that racer is actually the leading tool for reasoning about ontologies and thus nrql is close from becoming a standard de facto. then the content of a query is a string formatted as a query expressed in nrql and the answer is a string representing the answer to this query as if it was treated by a racer engine.
1 an agent architecture for interoperability
agents must be able to formulate and understand queries and their answers in nrql  using the concepts presented in section 1. figure 1 shows an overview of a general agent architecture that allows this. the figure does not represent a full architecture but rather some elements that have to be added to an existing architecture in order to interact about reputation.

figure 1: general agent architecturefor reputation interaction
this general architecture functions as follow:
1. the interaction module receives a message. if the message is about reputation  it is transmitted to the reputation mapping module.
1. the reputation mapping module analyzes the content ofthe message and transforms it to comply with the reputation model of the agent. to do so  the reputation mapping module uses concepts of the functional ontology and the structure of the reputation model. it must also know how to map information from the ontology into concepts of the agent's reputation model.
1. the translated message is forwarded to the reputationreasoning module. this one can now understand it and handle it as it should. reputation reasoning is out of the scope of our work and it is not studied further here.
1. if the reputation reasoning module needs to interact withother agents  it formulates a message according to its own reputation model and sends it to the reputation mapping module.
1. in this case  the reputation mapping module translatesthe content of the message into concepts of the ontology and forwards the resulting query to the interaction module that sends it to other agents.
　during translation  the reputation mapping moduleuses especially the concepts described in section 1. however  it can refer to other concepts of the ontology to formulate specific relations between concepts  for instance inside a query. an example of this case is given in the next section.
1 experimentation in the art testbed
we have implemented agents using the ontology for interactions about reputation. for experimental validation of our approach  we used the art testbed as a deployment infrastructure for our agents. firstly  we implemented agents that have the ability of interact about reputation using the ontology. secondly  we modified the art testbed to use the reputation mapping facilities for monitoring purposes to facilitate the use of art as an experimentation tool.
1 agents' interactions in the art testbed
in the first version of the art testbed  the protocol used for reputation transaction rely on a common reputation model. this common model is used by agents to represent externally their own reputation model. since the internal implementation of reputation models is free  this common model was defined to solve the interoperability problem. thus  the implementation of each agent must provide a mapping of the internal model into the common model. in order to remain general enough  the common model is very simple: it associates with each couple  agent  painting era  a numerical value between 1 and 1. then  reputation transactions in art consist of queries about a given couple  agent  painting era  and an answer containing the numerical value associated with the provider's model.
　the problem with this common model is that it is too simple. the mapping of complex internal reputation models into a simplistic one results in a big loss of expressiveness and details. it is thus impossible to perform finer agent interactions about reputation.
　our proposition to use the functional ontology of reputation as a kind of shared reputation model for interaction has been implemented in art. we have modified the art engine to allow the exchange of messages for reputation transaction and those contents are rough strings  instead of couples  agent  painting era  or numerical value . it is expected that these strings were queries and answers written in nrql. the use of nrql queries about the functional ontology allows an agent to formulate a wide range of queries about reputation models. to validate this new version of queries  we implemented agents that use them in order to formulate the same kind of queries than the ones defined in the first version of art. this implementation was mainly a test of the relevance of the functional ontology to express such queries. the formalization of a query in racer which result is the direct reputation of an agent called john for the evaluation of paintings of the impressionism era is the following:
 retrieve   val 
 and   val reputationweight    rep directreputation 
  rep  val hasreputationvalue 
  skill impressionism 
  skill  target hasreputativerole 
  target  rep hasreputation 
 john  skill hasskill   
　this query uses the relations between concepts to find a given reputation value. the followed path is graphically represented in the figure 1. as explained before  more concepts than those identified in section 1 are used but only to represent relations. they are not used to request their values.

figure 1: query path using the ontology concepts and rela-
tions
　this query means that the requester asks an instance of the reputationvalue class that is related to an instance of the class directreputation  related to an instance of the targetrole class  related to an instance of reputativeskill. this instance of reputativeskill should be a subclass of impressionism  the era is represented by the way of an  isa  relation  and must be related to the instance of the individual class that is called john.
　with this query formulation  we show that our modifications on the art testbed still allow to express at least the same interactions as in the first version. furthermore  it is now possible to use an elaborated query language to perform several other requests. the receiver of a query also uses the same language to answer.
　the reputation mapping module of an agent links the query to the agents' internal reputation model. as shown in section 1  an agent using the cognitive reputation model  conte and paolucci  1  will interpret the semantics of this message as a query about the  direct trust  of john. then  it is able to answer this query with the corresponding value. if the receiver is using a different model  for example the regret model  sabater and sierra  1   the answer can still be understood by the reputation mapping module. in this case  the term  image  matches with the required concept of the ontology and the received value will be considered as a direct trust value about john. it is also possible to formulate answers that express that the required concept is not known because it does not exist in the agent's internal reputation model. the use of nrql allows this kind of  empty  answers.
1 extending the monitoring facilities
the art testbed has been designed to organize competitions between agents using different reputation models in order to compare them  but it is also a tool used for experimentation of a single reputation model. a researcher can thus implement its own reputation model and evaluate it using the art testbed. but the first version of the testbed only allows the user of the testbed to state the global performanceof its agents  in terms of monetary earnings . it is not possible to follow precisely the behaviour and the evolution of a reputation model.
　our idea is to use the functional ontology  and the mapping implemented for interaction  to improve the monitoring facilities of art. when we use the ontology for agent-agent interaction  it is a way to describe the values of reputation concepts at a given time. we think that this approach can also be used for agent-human interaction. the ontology  written in owl  is a step towards understandability by an human user. then  if we restrain to the concepts identified in section 1 to avoid flooding the user with too much information  it can be used to describe the state of a reputation model.
　in orderto display informationaccording to the concepts of the ontology  we modified two parts of the art testbed:  i  the database used to store information about played games has been modified to store the values of concepts of the ontology;  ii  the graphical interfaces that read the database to display information have been adapted to display these concepts. a screenshot of the modified art interfaces is shown in figure 1.

figure 1: external display of the reputation model
　if the developer of the agent has implemented a correct mapping of its reputation model into the concepts of the ontology  it will now be possible to follow precisely its evolution during the game as it can be seen in figure 1. this figure shows the reputation model of an agent called john. the curves indicate the value of some reputation concepts at given time steps. here  the reputation displayed concerned two other agents named  ann  and  sue  about their evaluation of paintings of the era  era1 . the types of reputation that are displayed are the direct reputation of john  the one built from its own experience with the targets  and the reputation propagated by sue. the checkboxes at the right of the figure permit a fine selection of the concepts to display. in this example  we can see that both propagated and direct reputations of sue are better for  era1  than the reputations of ann.
1 conclusions
the work presented in this paper aims at reducing the incompatibility between reputation models. we propose to use the functional ontology of reputation defined by casare and sichman  casare and sichman  1b  to facilitate interoperability. concepts from this ontology are used to build a shared reputation model. each agent can map its own reputation model into the shared model in order to interact with other agents using different reputation model. the work described here does not propose new models or technologies but rather present a first experience in the use of existing technologies to allow agents using different reputation models to interoperate.
　such agents have been implemented on the art testbed. we have slightly modified the first version of art to extend it with the functional ontology. this extension widens the possibility of interactions between agents. the second contribution of this extension is about monitoring as it now permits to users to follow precisely the states and the evolution of an agent's reputation model. the extended version of art may provide a basis for the testbed that will be used during the next competition in 1. as our future work  we will use the agents implementation from the art competition at aamas 1 and make them to use the ontology in order to validate our approach with all the reputation models that were used.
acknowledgements
this work has been developed in the project  integration of the functional ontology of reputation into the agent reputation testbed  art   supported by fapesp  brazil  grant number 1-1. jaime sichman is partially supported by cnpq  brazil  grant numbers 1-1  1-1 and 1-1. anarosa a. f. branda o is supported by cnpq  brazil  grant number 1-1.
