 
we propose a new procedure for proof by induction in conditional theories where case analysis is simulated by term rewriting. this technique reduces considerably the number of variables of a conjecture to be considered for applying induction schemes  inductive positions . our procedure is presented as a set of inference rules whose correctness has been formally proved. moreover  when the axioms are ground convergent and the defined functions are completely defined over free constructors  it is possible to apply the system for refuting conjectures. the procedure is even refutationally complete for conditional equations with boolean preconditions  under the same hypotheses . the method is entirely implemented in the prover spike. this system has proved interesting examples in a completely automatic way  that is  without interaction with the user and without ad-hoc heuristics. it has also proved the challenging gilbreath card trick  with only 1 easy lemmas. 
1 	introduction 
formal methods are more and more frequently adopted by industry for hardware and software verification. they require efficient automatic tools to relieve designers and programmers of the related proof obligations. mathematical induction is essential as a technique for building formal proofs in this context. its power is expressed by the successes of nqthm  boyer and moore  1  that has been for many years the only significant automated theorem proving system for induction. however nqthm requires a lot of interaction with the user. for instance many lemmas need to be given to nqthm as milestones even for simple proof tasks. 
　another direction for automating induction was proposed in the early eighties  the inductionless induehon technique  musser  1; huet and hullot  1  whose principle is to simulate induction by term rewriting. this method is refutational and does not require human interaction. while very limited at the beginning  its domain of application has widened considerably  
1 	automated reasoning 
thanks to the contributions of  jouannaud and kounalis  1  who relaxed the conditions on constructor symbols and of  fribourg  1  who showed that only lin-
ear derivations were needed. more recently the method has been completely freed from the completion framework  kounalis and rusinowitch  1a; reddy  1 . it has now become possible to apply it to conditional equational theories  kounalis and rusinowitch  1b; bouhoula et al.  1a . inductionless induction in our new setting reduces to firstly instanciating conjectures by induction schemes called test sets and secondly simplifying them by axioms  other conjectures or induction hypotheses. every iteration generates new lemmas that are processed in the same way as the initial con-
jectures. the method does not require any hierarchy between the lemmas. they are all stored in a list and using conjectures for mutual simplification simulates simultaneous induction. the system spike has been developed  bouhoula et al.  1b  on this principle and incorporates many optimizations such as powerful simplification techniques. to our knowledge  this system is the only one that can prove and disprove inductive theorems in conditional theories without any interaction. 
　however computer experiments have convinced us of the necessity of introducing a proper rule to perform case reasoning. case analysis is a fundamental reasoning technique. a typical instance of it is the cut rule that consists in splitting a goal formula a along another formula c for generating two subgoals c  a and 
the main difficulty  already recognized by logicians a long time ago  relies in the choice of the cut formula c. a natural solution when dealing with theories axiomatized by horn clauses  or conditional equations  is to use the negative literals of the axioms as cut formulas. this approach is frequently used in the context of conditional rewrite system when a conditional rule  may reduce a goal a to subgoals 
 i.e. term / is replaced by r in a  and 
　the problem is now that one of the subgoals is not smaller than the initial goal and a lot of control is needed to avoid divergence of the process since a similar case analysis can be applied again to . this has motivated us to introduce a new case analysis rule that allows one to split a goal a into subgoals 
and  since in the context of conditional rewrite system all subgoals are strictly smaller than the initial 


	bouhoula and rusinowitch 	1 


1 	automated reasoning 


	bouhoula and rusinowitch 	1 


1 	automated reasoning 

nqrhm rrl spike ! explicit definitions 1 1 1 implicit definitions 1 1 1 induction scheme definition 1 1 1 lemmas 1 1 1 clauses is case-rewriting. since the axioms have boolean preconditions  all the clauses generated in a a' derivation  such that eo only contains boolean clauses  are boolean. so the new inference system k can be proved refutationally complete for boolean clauses too. 
	1 	computer experiments 
our prototype spike  written in caml light  is designed to prove the validity of a set of clauses in a conditional theory. the first step in a proof session is to check if all defined functions are completely defined. if this step is successful then we can use a more efficient version of the case rewriting rule. the second step is to check the ground convergence of the set of axioms. if the first two steps are successful then we can refute false conjectures. the third step is to compute test sets and inductive positions. after these preliminary tasks  detailed in  bouhoula et al.  1a    the proof starts. 
	e x a m p l e 1 	an 	interactive 	proof of gilbreath 	cards 
trick was first given by g. huet  huet  1l  using the coq proof assistant. b. boyer has used nqthm to derive another proof. a similar but much faster proof was obtained by h. zhang with rrl. these two  automatic  proofs require many lemmas  some of them being nonobvious. for instance  b. boyer introduces a predicate  silly  that is  only defined to force a certain weird induction   here we quote b. boyer . the same predicate appears in zhang's experiment. on the other hand  our proof is based on 1 lemmas easy to understand. these lemmas have been suggested by a first unsuccessful proof attempt with spike. the source of failure was identi-
fied by the impossibility of reducing a family of patterns. hence we have introduced the adequate lemmas for simplifying them. this was enough to derive a proof 
   the proof has taken more real time than boyer's  and zhang's . however  it is difficult to compare these approaches from the efficiency point of view  since we have spent much less time to get the right lemmas. on the other hand  the differences between programming languages lead also to some discrepancy in the performance. 
   the following array compare users inputs in the proof of gilbreath card trick for nqthm  rrl and spike: 
	bouhoula and rusinowitch 	1 

1 	conclusion 
 we have proposed a new procedure for proof by induction in conditional theories. our procedure relies on the implicit induction paradigm and puts the stress on simplification and case analysis. as our previous procedure  bouhoula et al  1a   it allows simplification of conjectures by conjectures and has been extended to handle non-orientable equations. it can also refute non valid conjectures. a meaningful contribution of this paper is that our strategy is refutationally complete for a class of rewrite systems that can specify numerous interesting examples. this class contains the boolean ground convergent rewrite systems with completely defined functions over free constructors. in other words with our procedure every false conjecture will be disproved in finite time. however  our method remains valid even when the functions are not completely defined. note that our correctness and completeness proofs do not require an elaborated notion of fairness. it is compatible too with many simplification rules that were not discussed here for lack of space. an extension to theories that are presented by non horn clauses is also easy. 
　the method is entirely implemented in the prover s p i k e . this system has proved non trivial examples in a completely automatic way  that is  without interaction with the user and without ad-hoc heuristics. it has also proved the challenging gilbreath card trick  with only 1 lemmas. 
   we plan to enhance the system with recent techniques developed for interactive provers such as the ones in  bundy et a i   1; chadha and plaisted  1 . 
a c k n o w l e d g e m e n t : we thank helene kirchner for her comments. 
