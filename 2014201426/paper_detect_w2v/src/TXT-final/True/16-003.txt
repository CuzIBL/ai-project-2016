 
an effective story undcrstander must be able to reason about characters in the story  their affects  actions  plans  and goals  as well as the settings and important points of the story. in many systems this has been done with separate inference mechanisms for each class of knowledge structure. this paper proposes a story understander with a unified frame-based inference component used on each class 
of knowledge structure. 
introduction 
early story-understanding programs were primarily concerned with understanding events iu the real world  or the blocks world  or the restaurant world. recently  researchers have shown the importance of affect  dyer1  in the story understanding process. other research addresses the problem of determining the plot units  lehnert1l  or main point |wilensky1| of a story. each of these systems intro-
duces a new class of knowledge structure  and then introduces a new inference mechanism for that class. this research takes a different approach  proposing a single unified processing scheme which subsumes the need for specialized inference rules. the theory has been implemented in a program called faustus   frame activated unified story understanding system . faustus represents each class of knowledge structure as a frame  including objects such as chairs and people  plans such as ask and eat-at-restaurant  settings such as restaurant and supermarket  and points such as irony and goal-subsumption-state-termination. of course  the frame for eat-atrestaurant is different from the frame for chair  but the same underlying processes are used to manipulate all types of frames. 
components of the model 
faustus is composed of three main components  one for linguistic processing  one for frame-based inferences  and one for storyunderstanding specific inferences. this paper concentrates on the frame-based inferences. faustus does not address the problem of interaction between the first two levels; it calls directly on arens' phran |wilensky1  program to generate the parse of each sentence. thus  the program is non-integrated  in the sense used by dyer.  dyer1 . however it is unified  in the sense that one inference mechanism is used for all classes of knowledge structures. 
this work supported by national science foundation grant ist1. 
the frame-level inference mechanism is meant to be general enough to be applicable to a variety of tasks  not just story understanding. in fact  one implementation of the inference mechanism was built with joe faletti  and was used both by faustus and by faletti's planning program  pandora.  faletti1 . 
the story-understanding specific component is essentially an agenda system that decides what frame-based inferences to cossider next at a given point. it can be characterized as a set of story understanding principles  as described in.  wilensky1j. 
the claim i am making is that many inferences that other systems have made through knowledge-specific inference rules are made  automatically  in faustus  due to the structure of frames in memory  and the primitives that manipulate the frames. furthermore  more complex inferences needed for story understanding  or planning in faletti's case  can be specified in terms of constraints on these primitives. 
the frame processing mechanism 
faustus's processing mechanism is summarized below. there are six basic processes which manipulate data in four different memory locations. processing begins with the story input  which is parsed by phran. the output from phran is then used to index into the knowledge data base  which is a collection of assertions and associations organized into frames of related concepts. this is genera! world knowledge  independent of any particular story. most concepts in the story will match parts of several frames. when this happens the concept is said to invoke these frames. each invocation has a weight associated with it  and when a frame's accumulated invocation passes a threshold  the frame is instantiated. this means that an instance of the frame is created with default values replaced by those mentioned in the input. the set of instantiated frames is kept in the active frame buffer. subsequent inputs are processed in the context defined by the frames in the active frame buffer; a new input may be found to fit in as a value of one of the active frames. this process of adding to an existing active frame is called elaboration. 
	fig. 	l 
faustus's representation of the story is formed by choosing out of the active frame buffer those frames that it decides are appropriate to the story. this decision process is called determination  and frames that are so selected are called determined frames. the set of determined frames is faustus's construal of the story. 

because the content of the active frame buffer influences the processing of subsequent inputs  faustus has two processes that try to eliminate irrelevant frames from the buffer. termination is the opposite of determination; it is the process of discarding an active frame because it is found to be inappropriate in some way. finally  if a frame has not been determined after a sufficient passage of time   where sufficient time is a function of activation  the process of attrition discards it. an important side-effect of this attrition is often the determination of some other frame. often an input will invoke two or more frames  but no determination can be made among them. however  when all but the most highly activated frame is lost through attrition  that remaining frame becomes instantiated. 
thus  we have a two-step filter; while the inputs may invoke a large number of frames  only some of those are instantiated  and only some of the instantiated frames are determined to actually belong in the construal of the story. the invocation step is driven by activation and has an  analog  flavor  while the determination step relies on more  digital  evidence. there is no central control mechanism to decide what to do next. the instantiations and determinations are driven solely by associations within the frames themselves. 
example 
in the following example  i will show how the processes are applied to determine various classes of frames. since the system hinges on the content of the frames in the knowledge data base  i will go into some detail in presenting these frames. 
input: frank hated his job at the factory. he wanted a job where he wouldn't have to work so hard. he envied his friends who went to college  and didn't have to work. so frank quit building cars and enrolled at the local university. however  as a student  he was soon working harder than he ever had in his life. 
1. object frames 
in the first sentence of the story  faustus determines an instance of the factory frame. because faustus knows of several types of factories  it invokes each sub-type. at this point  there is not enough evidence to choose among them  so faustus makes no determination. when the fourth sentence is read  the phrase  building cars  matches the purpose   manufacture  object car    in the automobile-assembly-plant frame  and so invokes that frame. because the frame was invoked earlier  there is now enough evidence to instantiate the frame. faustus has made the connection between the fairly abstract concept of factory and the more concrete concept of automobile assembly plant. below are simplified versions of the factory and automobile-assembly-plant frame  and the elaborated instance representing the factory mentioned in the story. 
p. norvig 1 
of course  there are other possible construals of the story. perhaps frank worked at a textile mill  and he quit his hobby of building cars when he enrolled at the university. such a construal is consistent both with the facts of the story  and with world knowledge. however  to arrive at such a coustrual would require spreading invocation to a larger number of sub-frames  and instantiating frames after a single weak invocation. faustus's instantiation and determination mechanisms guide it away from this and towards a simpler construal. 
1. plan and goal frames 
the two frames below say that frank's enrolling in school was a plan for having an easy job  but that the plan failed  he actually wound up with a difficult job. of course  many story understanding programs are good at constructing frames just like these; what is interesting is the way they were arrived at. in the pam  plan applying mechanism  system for example  wilensky 1   there was an explicit explanation procedure that attempted to explain every action as a plan for a known goal. in faustus this same effect is accomplished by giving high priority to the tasks of elaborating the plan slot of each instance of a goal frame  and the goal slot of each instance of a plan frame. the same connection is found  but the explanation process has been demoted from the status of a procedure that was the main inner loop of the program to the simple assertion that plans and goals are important. 
 goal 
 self goal-1  
 actor frank  
 desired  occupation  actor frank   difficulty low    
 plan plan-1  
 outcome  student  actor frank   difficulty highest    
 status failed   
 plan 
 self plan-1  
 planner frank  
 action  enroll  actor frank   institution college-1    
 goal goal-1  
 status executed   
1. story points frames 
so far we have seen that faustus can process a story  recognizing and elaborating frames of varying level of abstraction what is needed is a mechanism for separating the important frames from the trivial ones. as mentioned in the introduction  several current programs have attacked this problem with a processing scheme separate from the normal inference process. faustus has integrated wilensky's story points approach in an implementation that does not 

 factory 
 ako institution  
 kinds  list textile-mill automobile-assembly-plant ...   
 instances  list factory-1 ...   
 purpose  manufacture    
 automobile-assembly-plant 
 ako factory  
 instances  list factory-1 ...   
 purpose  manufacture  object car     
 automobile-assembly-plant 
 self factory-1  
 employees  frank    
require new processing rules  just the same indication of importance that was used to find plan-goal relations. 
for example  an important point in the story above is a goal-failure frame which says that frank's goal was avoiding hard work  that he tried to achieve that goal  and that he failed. while this is true  and it is an important part of the story  it seems to miss the main point. more important is the irony in frank's actions bringing him harder work when he was trying to avoid work. if the story were changed so that the last line read  however  as a student  he worked just about as hard as he did at the factory   then we would still have the same goal-failure point  but the story would not be ironic  and would not be as interesting. 

1 p. norvig 
an obvious solution is to introduce a new story point  the ironicgoal-failure frame. this frame would be a kind of goal-failure  with the provision that the outcome of the plan must be the opposite  in some way  of the desired goal state. while this approach would work  it would miss an important processing generalization; knowing about ironic-goal-failure would be of no help in detecting other instances of irony. 
the approach i took was to try to detect instances of irony in general  rather than trying to enumerate special cases. irony occurs when  1   there is a strong expectation   1   there is a violation of that expectation  and  1   the concept which replaces the expected one is the opposite of the expectation. as it turned out  faustus was already capable of tracing expectations  so it was easy to have it create an instance of an expectation or expectation-violation frame. note that these new frames are different in an important way from all the ones we have seen before; they are derived not from concepts mentioned explicitly in the story  like university and factory   nor from concepts inferred by faustus  like plans and goals   but from faustus' own internal processing behaviour. 
faustus makes a distinction between two types of story points; static points  which are found by relating inferences to a stored frame marked as inherently interesting  and dynamic points  which are uncovered as the result of processing events like expectation violation. irony  humour  and surprise would all be examples of dynamic points. this distinction is orthogonal to wilensky's |wilensky1  categorization of external and content points. wilensky enumerates some content points  while schank tt ai  schank1  does the same for external points. 
below are two points detected by faustus  a static and a dynamic point. either of them could be used to generate a summary of the story. for example  the first corresponds to  frank wanted an every job. he enrolled in college. it was not easy. he didn't try anything.   else.  if this were the main point of the story  the story would be incomplete; the 1ubsequent-action slot of the goal-failure frame has yet to be elaborated. the story is incomplete from the point of view of a problem resolution episode. the second point corresponds to the summary  frank enrolled in college. he thought being a student would be easy. ironically  he ended up working harder than ever.  this is a better summary because it is a completely elaborated frame; the story is complete from the point of view of an ironic episode. 
 goal-failure 
 actor frank  
 goal goal-1  
 plan plan-1  
 subsequent-action nil   
 ex pectation-violation 
 expectation  student  actor frank   difficulty low    
 triggered-by plan-1  
 violation  student  actor frank   difficulty highest     
it was easy to add dynamic points because faustus's basic mechanism for processing expectations is so simple. once expectation and expectation-violation frames were defined  they were easily handled by the standard frame manipulation processes. in a system with distinct processing schemes for each of several levels it would be more difficult to add expectations as manipulatable objects. 
of course  the analysis of irony is far from complete. there will surely be non-ironic episodes which fit the expectation-violation frame described above  and ironic episodes which do not. the concept of opposite is surprisingly complicated  and is another source of difficulty. faustus makes do with a very simple notion of opposite. 
advantages of the unified approach 
there are a number of reasons why this unified approach is advantageous  both as a cognitive model of story understanding  and as a methodology for developing a working program. 
first of all  faustus has a flexible control structure. it is not constrained to making inferences in either a strictly top-down or bottom-up manner. this is important because certain instantiations and determinations can only be made from evidence acquired from several different levels. faustus is able to find this evidence  while a strictly top-down system  such as a text skimmer  e.g.  dejong1     must identify the correct script to process an input. 
unified systems have a certain economy that tends to make them easier to understand and to modify. any improvements to the system immediately propagate to all types of inferencing. in a nonunified mechanism  an improvement to  say  the point-handling mechanism does nothing to improve the goal detection mechanism. of course  the complexity has not disappeared; it has merely moved from the processor to the knowledge base. i feel that that is where it belongs  for the reasons stated here. the ease with which i was able to add dynamic points and use them to detect irony in stories supports this claim. 
