
we show how testing whether a system is diagnosable can be reduced to the satisfiability problemand how satisfiability algorithms yield a very efficient approach to testing diagnosability.
diagnosability is the question whether it is always possible to know whether a given system has exhibited a failure behavior. this is a basic question that underlies diagnosis  and it is also closely related to more general questions about the possibility to know given facts about system behavior.
the work combines the twin plant construct of jiang et al.  which is the basis of diagnosability testing of systems with an enumerative representation  and sat-based techniques to ai planning which form a very promising approach to finding paths in very large transition graphs.
1 introduction
faults in dynamic systems can be diagnosed by observing a sequence of events taking place in the system and inferring the occurrence of unobservablefailure events  sampath et al.  1 . a main question arising in this setting is whether it is always possible to infer that a failure has occurred. a system that has this property is diagnosable. the diagnosability question for transition systems with a graph representation can be solved in polynomial time  jiang et al.  1 .
¡¡many systems exhibit regularities best captured by representing them in terms of state variables  which also makes it possible to represent systems with very large state spaces succinctly without representing each state explicitly. the number of states of a succinctly represented system may be exponential in the size of its representation  which makes the diagnosability problem pspace-complete  rintanen  1 . the diagnosability problem is similar to other pspacecompleteproblemslike ai planningand ltl model-checking in that it reduces to finding paths in a graph. an efficient approach to solving ai planning and model-checking problems is to reduce them to the satisfiability problem of the classical propositional logic  kautz and selman  1; biere et al.  1 . this suggests a similar approach to diagnosability testing  which is what we pursue in this work.
¡¡the structure of the paper is as follows. in section 1 we present the transition system framework and formally define when a system is diagnosable. section 1 contains the main contribution of the work  an encoding of the diagnosability problem as a formula in the classical propositional logic. in section 1 we show how these formulae can be used to demonstrate that a system indeed is diagnosable  as opposed to showing that it is not. section 1 contains a demonstration of the scalability of the approach to transition systems with very large state spaces  and sections 1 and 1 conclude the paper by discussing related work and pointing out future research directions.
1 preliminaries
we define transition systems followingsampath et al. .
definition 1  transition systems  a transition system is a
tuple where
  x is a set of states 
  ¦²o is a set of observable events 
  ¦²u is a set of unobservable events 
  ¦²f is a set of failure events 
  ¦Ä   x ¡Á ¦²o ¡È¦²u ¡È¦²f ¡Áx is the transition relation 
  s1 ¡Ê x is an initial state.
¡¡the transition system is initially in the state s1  and an event sequence e1 ... en 1 takes the system through a sequence s1 s1 ... sn of states such that  si ei si+1  ¡Ê ¦Ä for all i ¡Ê {1 ... n  1}. note that a state si and an event ei do not necessarily determine the successor state si+1 uniquely.
   let be a transition system. we say that e1 ... en 1 is a sequence of events in t if there  such that  si ei si+1  ¡Ê ¦Ä for all i ¡Ê
¡¡the state sequence nor the unobservable or the failure events can be observed. in deciding whether a failure has occurred only the sequence of observable events is available.
¡¡let ¦Ò ¡Ê  ¦²o ¡È ¦²u ¡È ¦²f   be a sequence of events. we define its projection ¦Ð ¦Ò  to observable events recursively as follows.

¡¡sampath et al.  give a definition of diagnosability which we adapt to our notation.
definition 1  diagnosability  a transition system t =  is diagnosableif there is d such that for
any sequence ¦Ò of events in t that ends in a failure event and for all sequencessuch that and ¦Ð ¦Ò1  = ¦Ð ¦Ò1   ¦Ò1 includes a failure event.
¡¡hence a system is diagnosable if and only if there are no two infinite event sequences which have the same observable events and one of them contains a failure event and the other one not. in other words  every infinite continuation of an event sequence with a failure is distinguishable from every infinite event sequence without a failure.
¡¡the constant d is called the delay. not all failures can be detected immediately after they have taken place  and the delay expresses how many further events have to be observed before being certain that a failure has taken place.
1 succinct system representation
the structure of many systems is highly regular and it may be more practical to represent states in terms of state variables and the relations corresponding to events in terms of changes to the values of the state variables. this often makes it possible to represent very large systems compactly.
¡¡the set of states of a system consists of all the valuations of the state variables in a finite set a. in this paper we restrict to two-valued  boolean  state variables. hence a state s : a ¡ú {1} is a total function from the state variables to the constants 1  true  and 1  false . a literal is a state variable or its negation  and the set of all literals is l = a¡È{ a|a ¡Ê a}. the language l over a consists of all formulae that can be formed from a and the connectives ¡Å and  . we use the standard definitions of further connectives ¦Õ ¡Ä ¦× ¡Ô    ¦Õ ¡Å
 ¦×   ¦Õ¡ú¦× ¡Ô  ¦Õ ¡Å ¦× and ¦Õ   ¦× ¡Ô  ¦Õ¡ú¦×  ¡Ä  ¦×¡ú¦Õ .
¡¡the main design decision for succinct transition systems is how to represent transition relations. it would be possible to use arbitrary propositional formulae which is a powerful and general representation  but as our intention is to utilize independenceof eventsfor obtaining more efficient diagnosability testing  we have decided to use a more restricted representation that makes it possible to define what does it mean that two or more events take place simultaneously.
definition 1  succinct transition systems  a	succinct transition system is a tuple where
  a is a finite set of state variables 
  ¦²o is a set of observable events 
  ¦²u is a set of unobservable events 
  ¦²f is a set of failure events 
  ¦Ä : ¦²o ¡È ¦²u ¡È ¦²f ¡ú 1l¡Á1l assigns each event a set of pairs  and
  s1 is an initial state  a valuation of a .
¡¡an event e ¡Ê ¦²o ¡È ¦²u ¡È ¦²f is described by a set of pairs  which indicate that the event can be associated with changes c in states that satisfy the condition ¦Õ. more formally  an event e ¡Ê ¦²o ¡È ¦²u ¡È ¦²f is possible in any state s such that s |= ¦Õ for some. when e takes place in s  one of the pairs satisfying s |= ¦Õ is chosen and the effect of the event is that the literals in c become true.
¡¡let s be a state and c a consistent set of literals. then define the successor state succ s c  of s with respect to c by
1.  for all a ¡Ê a such that a ¡Ê c 
1.  for all a ¡Ê a such that  a ¡Ê c  and
1.  for all a ¡Ê a that do not occur in c.
¡¡a succinct transition system can be mapped to a transition system as follows.
definition 1 let be a succinct
 transition system. then define the transition system  where 1. x is the set of all valuations of a and
1. 
1 simultaneous events
an important factor of efficient sat-based planning  kautz and selman  1  is the notion of parallel or partially ordered plans. this means that several independent actions can be taken simultaneously  and it has the advantage that it is unnecessary to consider all n! total orderings of n independent events as their mutual ordering does not matter.
dependence is defined through the notion of interference.
the pairsinterfere if there is a ¡Ê a that occurs positively/negatively in c1 and negatively/positively in ¦Õ1 or in c1  or positively/negatively in c1 and negatively/positively in ¦Õ1.
events e1 ... en can take place simultaneously with o1 ¡Ê
do not interfere for any {o o }   {o1 ... on} such that.
   we will consider diagnosability testing with sequences e1 ... en of  possibly empty  sets ei of event occurrences such that all members of ei are mutually noninterfering. we define the successor state with respect to a set e of non-interfering event occurrences by  succ.
¡¡let ¦Ò ¡Ê  1¦²o¡È¦²u¡È¦²f   be a sequence of sets of events. its projection ¦Ð ¦Ò  to observable events is defined as follows.

¡¡for a succinct transition system we say that e1 ... en 1 is a sequence of parallel events in t if there are states s1 ... sn such that for all i ¡Ê {1 ... n   1} si+1 = succ si e  for some e = {o1 ... ok} such that there are o1 ¡Ê ¦Ä e1  ... ok ¡Ê ¦Ä ek  where ei = {e1 ... ek} and oh and oj do not interfere for any h ¡Ê {1 ... k} and j ¡Ê {1 ... k} {h}.
¡¡diagnosability of succinct transition systems with simultaneous events is defined analogously to definition 1. the length | e1 ... en | of sequences of sets of parallel events is defined as the sum n of the cardinalities of the sets. a small technical difference is caused by the fact that projection ¦Ð e1 ... en  for sequences of parallel events always results in a sequence of the same length n  often with empty event sets.  it can be shown that the definitions are equivalent by interpreting a set of parallel events as any total ordering of the events.
1 diagnosability as a satisfiability problem
jiang et al. have shown how the diagnosability test can be reduced to finding a path in a graph. their test is based on making the definition of diagnosability  definition 1  finite by constructing a product transition system  sometimes called the twin plant  in which states are pairs  s s   of states of the original transition system  and events represent unobservable events in one or both of the components of these state pairs  or observable events shared by both components. if in this system there is an event sequence from  s1 s1  to some  s s   which includes a failure eventin the first componentbut not in the second  and there is a non-empty event sequence back to  s s   with no failures in the second component  then a pair of infinite event sequences witnessing non-diagnosabilityexists. this reformulation of definition 1 reduces infinite event sequences to cycles in a graph.
¡¡this diagnosability test can be formulated as a satisfiability problem in the classical propositional logic  similarly to other path finding problems in ai planning  kautz and selman  1 . we construct a formula for which the satisfiable valuations correspond to pairs   s1 ... sn   s 1 ... s n   of state sequences with s1 = s 1 that correspond to pairs   e1 ... en 1   e 1 ... e n 1   of event sequences such that ¦Ð e1 ... en 1  = ¦Ð e 1 ... e n 1  and of which one contains a failure event and the other does not  and which loop back to  si s i   that is  sn = si and s n = s i for some i ¡Ê {1 ... n   1}. the formula for a given event sequence length is satisfiable if and only if it is not possible to detect the occurrence of a failure event.
¡¡the encoding of state and event sequences is similar to the encoding of planning in the propositional logic  kautz and selman  1 . that the projections of both sequences to observable events coincide is guaranteed by forcing each observable event to take place in both sequences simultaneously. essentially  each observable event is a joint event of both sequences.
¡¡next we define the formula for diagnosability testing of a succinct transition system .
the events at each time point t are described by a formula t  t t+ 1  parameterized with t. the propositional variables occurring in the formula  with superscripts t referring to different times points  are the following.
  at and a t for all a ¡Ê a and t ¡Ê {1 ... n}.
 and o ¡Ê ¦Ä e  and t ¡Ê
  e to for all e ¡Ê ¦²o ¡È¦²u  o ¡Ê ¦Ä e  and t ¡Ê {1 ... n 1}.
  et for all e ¡Ê ¦²o and t ¡Ê {1 ... n   1}.
¡¡propositional variables with a hat a  represent event occurrences and values of state variables in the second event sequence that does not contain failure events. the propositional variables et describe the occurrence of observable events simultaneously in both event sequences.
¡¡next we describe t  t t + 1  for a given t. when an event occurs  the event must be possible in the current state and it has some effects.
 eto¡ú¦Õt for every  for every
¡¡the value of a state variable changes only if there is a reason for the change.

for all a ¡Ê a where  are all event occurrences with  a ¡Ê ci and e1 ... ek are the respective events with oi ¡Ê ¦Ä ei . for the change from false to true the formulae are defined similarly by interchanging a and  a.
¡¡an event can occur in only one way  and two events cannot be simultaneous if they interfere.
	for all e ¡Ê ¦²o ¡È ¦²u ¡È ¦²f and
such that
 for all and o ¡Ê ¦Ä e  and such that interfere
¡¡the above formulae describe one step of an event sequence. we need to represent two event sequences  so we have a copy of all of the above formulae in which all propositional variables have been replaced by
respectively. the second sequence is restricted to events in ¦²o ¡È¦²u. this is the key idea in the diagnosability test which makes it possible to identify two sequences of events that have the same observable events and only the first of which contains a failure event.
¡¡the formulae that connect the two event sequences require that observable events take place in both sequences whenever they take place.
for all e ¡Ê ¦²o for all e ¡Ê ¦²o
¡¡to avoid trivial cycles we require that at every time point at least one event takes place.

¡¡the conjunction of all the above formulae for a given t is denoted by t  t t + 1 . a formula for the initial state s1 is
.
¡¡we define a formula that finds a pair of infinite executions  in the form of a cycle  with the same observable events and a failure in one execution but not in the other.

n = 1

figure 1: parameter n in the diagnosability test with several potential cycle lengths
m = 1 n = 1

figure 1: parameters m and n in the diagnosability test
the possible cycles represented by  are illustrated in figure 1. the parameter n controls the number of states in the sequence  and the last state must equal one of the preceding states so that a cycle is formed.
¡¡the diagnosability question can also be formalized with a fixed starting point m for the cycle  figure 1. 

¡¡we show that the formulae ¦µtn perform the diagnosability test correctly. proofs for ¦µtm n are analogous.
lemma 1 let be a succinct transition system and n a positive integer. the formula ¦µtn is satisfiable if and only if there are sequences ¦Ò =
 e1 ... en 1  and ¦Ò  =  e 1 ... e n 1  of parallel events in
1.	 
1.
1. for all i ¡Ê {1 ... n   1} 
1. ¦Ð ¦Ò  = ¦Ð ¦Ò    and
1. there are executions s1 ... sn of ¦Ò and s 1 ... s n of ¦Ò  in t such that s1 = s 1 and sm = sn and s m = s n for some m ¡Ê {1 ... n   1}.
proof: sketch: proof of the equivalence from left to right is a demonstration that a valuation that satisfies  can be mapped to ¦Ò  ¦Ò  and executions s1 ... sn and s 1 ... s n that satisfy the required properties.
¡¡proof from right to left is by constructing a valuation of all propositional variables in  based on ¦Ò  ¦Ò  and the executions s1 ... sn and s 1 ... s n  and then showing that each conjunct of is satisfied by that valuation. 
theorem 1 for a succinct transition system is satisfiable for some n ¡Ý 1 if and only if t is not diagnosable.
proof: sketch: we show that t is not diagnosableiff for some n the right hand side of the equivalence in lemma 1 holds.
¡¡assume that t is not diagnosable. hence there are infinite sequences ¦Ò =  e1 e1 e1 ...  and ¦Ò  =  e 1 e 1 e 1 ...  of parallel events in t such that ¦Ð ¦Ò  = ¦Ð ¦Ò   and ¦Ò contains a failure event and ¦Ò  does not. let s1 s1 s1 ... and s 1 s 1 s 1 ... be the corresponding state sequences.
¡¡since t has only a finite number of states  there are some m and n such that m   n and sn = sm and s n = s m
.	now
 e1 ... en 1  contains a failure event and  e 1 ... e n 1  does not  and the sequences satisfy the requirements in the right hand side of the equivalence in lemma 1 except for condition 1  which can be satisfied by deleting those ei and
e i for which ei ¡È e i =  .
¡¡for the implication from right to left assume that the right hand side of lemma 1 holds. now the two sequences
 e1 ... en 1  and  e 1 ... e n 1  yield the infinite sequences ¦Ò = e1 ... en 1 em ... en 1 ... and ¦Ò  = e 1 ... e n 1 e m ... e n 1 ... with ¦Ð ¦Ò  = ¦Ð ¦Ò   so that ¦Ò contains a failure event and ¦Ò  does not. hence t is not diagnosable.	
¡¡search for the proof of non-diagnosability with formulae  leads to a one-dimensional search problem for the value of n  and with ¦µtm n the problem is two-dimensional. the standard solution method in the one-dimensional case is to test the satisfiability of   then and so on  until a satisfiable formula is found. there are also parallelized algorithms that may find a satisfiable formula much faster than this sequential method  rintanen et al.  1 .
1 showing diagnosability
for a system that is actually diagnosable  the formulae in the previous section are not very practical for showing diagnosability because there is no simple way to guarantee that the parameter n is high enough so that all reachable states with a failure event have been covered. the most obvious upper bound for n is the cardinality of the set of all states  which is often impractically high: for q state variables one would be forced to consider n = 1q. solutions to this problem have been proposed  sheeran et al.  1  but they work for specific types of transition systems only or they step outside the sat framework  mcmillan  1 .
¡¡however  in many cases it is not necessary to include a complete reachability test. it may be sufficient to use a formula ¦Ñ which gives an upper bound to the set of state pairs  s s   in the twin plant that could be reached by event sequences ¦Ò =  e1 ... ek  and ¦Ò  =  e 1 ... e k  such that ¦Ð ¦Ò  = ¦Ð ¦Ò   and  e 1 ¡È ¡¤¡¤¡¤ ¡È e k  ¡É ¦²f =  .
¡¡it may be possible to show that for no state pair satisfying ¦Ñ there is an event sequence starting with a failure event in the first component and another event sequence without failure events starting in the second componentif both sequences must have the same observable events. this can be tested by using the following formula with increasing values of n.

¡¡the formula is satisfiable iff after a failure in the first component of the twin plant  but not in the second  an event sequence of length n with the same observable events in both components can take place. hence  if the formula is unsatisfiable  the behavior after a failure necessarily differs from the behavior without a failure  and the system is diagnosable.
¡¡the incompleteness of this test is caused by the approximate nature of ¦Ñ: if ¦Ñ represents too many unreachable states of the twin plant  then it may appear that distinguishing between behavior with and without failure is not possible. hence the unsatisfiability of the formula is a sufficient but not a necessary condition for diagnosability.
¡¡a complete positive and negative test for diagnosability is now obtained by testing the satisfiability of ¦µtn for increasing n interleaved with testing the satisfiability of increasing n and increasingly strong upper approximations¦Ñ of the reachable state pairs in the twin plant.
¡¡there are alternative ways how the formulae ¦Ñ for approximating reachability in the twin plant could be derived. one approach is by polynomial time algorithms for computing sets v of 1-literal clauses that are true in all reachable states  rintanen  1 . if a state in the twin plant does not satisfyit is unreachable from the initial state. other approaches to deriving tighter upper bounds ¦Ñ could be based on techniques for knowledge compilation  selman and kautz  1  and obdds  bryant  1  or dnnf  darwiche  1 .
1 experiments
the algorithm of jiang et al.  is impractical because it relies on the explicit enumeration of all pairs of states. for a transition system with n states  the twin plant consists of n1 states. starting from n = 1 the size of the twin plant is too high for practically running their algorithm.
¡¡we demonstratethe much better scalability of our approach  section 1  by using a system that consists of m identical interconnected components. each component has 1 states. the number of states of the whole system with c components is therefore 1c. there are some dependencies between the states of neighboring components which means that not all 1c state combinations are actually possible. the twin plant in the diagnosabilitytest has a quadraticnumber 1c of states  which becomes infeasible for explicit state enumeration starting from about c = 1 components.
¡¡each component has 1 events of which 1 are observable. we tested the diagnosability of a faulty event in one component. to obtain bigger and bigger problems we increased the number of components. the parameter n for proving non-diagnosability was 1 irrespective of c  meaning that the shortest path with a cycle has length 1.
¡¡statistics on formulaerepresenting the diagnosability problem are given in table 1. the formulae for n = 1 are unsatisfiable and for n = 1 they are satisfiable. after the first two columns for c and n we give the value of the formula  whether it is satisfiable or not   the number of propositional variables and clauses in the formula  and finally the time it took a sat solver to test satisfiability.
¡¡the experimentswere run with a 1 ghz pentium 1 computer and the siege sat solver  version 1   ryan  1 . since siege is a randomizing sat solver and the runtimes vary across different runs  we ran it 1 times with each forc	n	val	vars	clauses	runtime
1f111
11t111
11f111
11t111
11f111
11t111
11f111
11t111
11f111
11t111
11f111
11t111
11f111
11t111
11f11
1 11t11f11
1 11t1table 1: runtimes for diagnosability testing. the number of components is c and the path length is n.
mula and computed 1 per cent confidence intervals for the mean by using a standard boot-strapping method. these are shown in the last column of table 1 next to the runtime.
¡¡unsurprisingly  there appears to be an exponential growth in the runtimes  but for our system non-diagnosability can be detected rather easily for systems with 1 or 1 components and an astronomic number of states. the propositional formulae are big  with one or two hundred thousand propositional variables and one or two million clauses  but efficient sat solvers can utilize the regularity of the transition systems to find the cyclic path in the twin plant efficiently. for systems in which the components are more complicated or in which the cycles witnessing non-diagnosability are longer  the approach probably does not scale quite as far.
1 related work
another approach to finding paths in graphs compactly represented in terms of state variables is based on ordered binary decision diagrams  obdds   bryant  1 . obdds were very popular in computer-aided verification  especially model-checking  burch et al.  1   until the introduction of sat based techniques  biere et al.  1  following their success in ai planning  kautz and selman  1 . the main disadvantage of obdds is their fast growth when the number of state variables increases. their main advantages are generality and flexibility. for instance  it is easy to detect that an obdd represents all reachable states  which is more difficult for sat as discussed in section 1.
cimatti et al.  have expressed a narrow diagnosability test  with only delays d = 1  as a model-checking problem in a temporal logic  and used a general-purpose modelchecker nusmv for testing diagnosability.
1 conclusions
we have presented a sat based approach to diagnosability testing  and demonstrated its scalability to systems with billions of states. earlier works  most notably by jiang et al.   have relied on explicit enumeration of the states and are feasible only for systems with a much smaller number of states. the success of sat for the diagnosability problems parallels its successes in areas like model-checking and ai planning  and has been made possible by the fast progress in the development of efficient algorithms for the satisfiability problem of the propositional logic.
¡¡a weakness of the sat approach in comparison to for example obdd based techniques is that the diagnosability test is better suited to detecting non-diagnosability than diagnosability. however  the same weakness is present in other related sat based techniques  including ai planning and bounded model-checking  in which the presence of  short  paths in transition graphs can be often easily detected  but the absence of paths having a given property  without length restrictions  is often much more difficult to detect. we intend to further investigate approximate reachability techniques for proving diagnosability.
acknowledgements
we thank the members of the knowledge representation and reasoning group as well as sophie pinchinat for interesting discussions and comments.
¡¡this research was supported by national ict australia  nicta  in the framework of the supercom project. nicta is funded through the australian government's backing australia's ability initiative  in part through the australian national research council.
