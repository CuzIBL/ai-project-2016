 
the hr program forms concepts and makes conjectures in domains of pure mathematics and uses theorem prover otter and model generator mace to prove or disprove the con-
jectures. hr measures properties of concepts and assesses the theorems and proofs involving them to estimate the interestingness of each concept and employ a best first search. this approach has led hr to the discovery of interesting new mathematics and enables it to build theories from just the axioms of finite algebras. 
1 	introduction 
the hr program invents definitions in finite algebras such as group and ring theory  and other areas of pure mathematics  such as graph and number theory. using a set of production rules to derive a new concept from old ones and a set of measures for the interestingness of a concept  hr's best first search bases new concepts on the most interesting old ones. as it invents new definitions  hr uses empirical evidence to spot conjectures. recently we have interfaced hr with the otter theorem prover   mccune  1   to prove some of the conjectures hr makes. when otter fails  hr invokes the mace model finder   mccune  1   to find a counterexample. the proofs from otter help hr to assess the concepts involved in the conjectures  and the models given by mace provide further empirical evidence for future conjectures. this closes a cycle of mathematical activity similar in nature to buchberger's spiral of creativity   buchberger  1 . we detail how hr forms and assesses concepts and discuss how this has led to the introduction of new mathematics. we also show how a theory can be constructed from just the axioms of an algebra  and how the heuristic search improves the overall quality of the theory with respect to various measures. 
1 	background 
lenat  in  lenat  1  chose pure mathematics as the domain for his am program to demonstrate the use of heuristic search in concept formation. am re-invented classically interesting definitions and conjectures  such 
toby walsh 
department of computer science  university of strathclyde glasgow g.1xh  scotland. twfics.strath-ac.uk 
as highly composite numbers and goldbach's conjecture. the conjectures were based on empirical evidence  but no attempt was made to prove them automatically. thus am performed concept formation  conjecture making and counterexample finding. attempts to build on lenat's work include the dc program   morales  1   the cyrano programs   haase  1  and lenat's own eurisko program   lenat  1 . the are system   shen  1   used functional transformations to derive new functions from old ones. shen eliminated many special-purpose operations required by am and the functional transformations found more complex concepts than am  such as logarithms. 
　the il program   sims  1   used a generate  prune and prove method to invent operators for number types. the user specified some criteria for  say  multiplication of complex numbers and il generated plausible operators  empirically checked whether they met the criteria  and if so  proved it. conjectures were always that the operator met the user's requirements  so il used a cycle of concept formation  counterexample finding and theorem proving. the concepts produced by the system described in  bagai et a/.  1  are situations in plane geometry involving properties of points and lines. conjectures were about the existence of situations and an efficient theorem prover showed that certain situations were impossible. for example  the theorem prover showed that the situation of a parallelogram with parallel diagonals could not exist. disproving a conjecture meant finding a situation in an infinite number of possibilities  so no counterexample finding was undertaken. the system therefore achieved an interplay of concept formation  conjecture making and theorem proving. 
　the gt program   epstein  1   generated and proved theorems in graph theory about properties of graphs. the representation of graphs employed enabled model generation  concept formation and some theorem proving  and gt demonstrated an efficient model for theory formation in graph theory. another graph theory program  graffiti   fajtlowicz  1  makes conjectures in graph theory that one summation of numerical invariants is always less than another. the invariants are given by the user and each conjecture is checked against a large database of graphs. if the conjecture provides a 

stronger bound than ail previous ones for at least one graph  the dalmation heuristic   and it is not seemingly implied by a previous one  the echo heuristic   the con-
jecture is posted to a mailing list for graph theorists. over 1 papers have been written about graffiti's conjectures  and this has led to important developments in graph theory. we see that graffiti automates conjecture formation and counterexample finding aspects  but the concepts are provided by the user and the theorem proving is done by the graph theory community. 
　otter   mccune  1   is a state of the art first order resolution theorem prbver which uses the negation of a conjecture to find a contradiction  thus proving the conjecture. the model generator mace   mccune  1   uses the davis-putnam method to search for small finite models of first-order statements  and can be used to find example algebras  eg. finite groups or rings. 
1 	concept formation 
working  say  in group theory  hr starts off with a little initial information  namely some example groups and some core concepts. the initial information can be given by the user or generated using mace and hr in group theory  the core concepts are the group operation  the identity element and the inverse of elements. hr keeps a data-table of the models of each concept for example  for the group operation concept  hr stores a data-table with rows  g a b c  where     and a * b = c. hr also keeps a definition of the concept  ie. a predicate which is satisfied by the entries in every row of the data-table. we use the notation: 

to indicate that concept 1 has a data-table with four columns  the first of which is the name of the group  and the last three are triples of elements from that group which satisfy predicate p. 
1 	producing new concepts 
hr invents new concepts by using a production rule to manipulate the data from one  or two  old tables into a new table. each of hr's 1 production rules performs a simple operation and hr is able to derive a definition for the new concept from a definition of the old concept. for a particular concept and production rule there are many possible manipulations  so a set of parameters give exact specifications. below  we give a description of the manipulation each production rule  pr  performs and an example from group theory: an input and output concept. a more detailed description of the production rules is given in  bundy et al.  1 . 
the exists pr: removes columns from the input datatable. the parameters tell the pr which columns to keep. eg. using parameters  1 1   we get: 

the match pr: finds rows where columns prescribed by the parameters are equal. eg. parameters 
the forall pr: finds sets of rows with all elements of groups present in particular columns  the parameters specify which columns . with parameters  1   we get: 

the negate pr: constructs rows which do not appear in a data-table. there are no parameters here. eg. 

the conjunct pr: given two data-tables  x and y  and parameters  a b .. .   this finds rows in table x for which there is a row in table y with entry a equal to entry 1 in x  with entry b equal to entry 1 in x and so on. as in the following example  using parameters  1 1    the two input concepts can be the same: 

the size pr: counts the number of tuples appearing in a data-table. the parameters specify which columns to look for elements in. eg. with parameters  1  we get: 
the split pr: finds rows where a column contains a particular number. the parameters specify which column to look in and what number to look for respectively. eg. with parameters  1   we get: 

the compose pr: certain predicates can be thought of as 
1 functions. given such a function  this pr replaces columns in a data-table by the output of the function on the entries in the column. the parameters specify which column to replace. eg. using parameters  1   with the second concept as the function  we get: 

note that conjunct and compose use 1 old concepts and size introduces a numerical value. we don't claim that all interesting concepts in a domain are covered by these 1 production rules  merely that it is possible to construct some interesting concepts using them. figure 1 shows how hr constructs the concept of abelian groups: 

figure 1: construction path for abelian groups. 
c1lt1n  bundy  and walsh 1 

1 	heuristic search: measuring concepts 
hr can perform an exhaustive search by using each concept with every production rule  exhausting all possible parameterisations and returning to used up concepts when it is possible to use them in a 1-concept production rule with a new concept. some concepts will be more interesting than others  and we can improve the search by constructing new concepts from the best old ones. we discuss below five concrete measures hr uses to assess the interestingness of a concept. 
　given a data-table  the set of tuples with a particular group name in the first column can be used to describe that group. smaller descriptions are advantageous  so hr measures the parsimony of a concept  which is inversely proportional to the size of its data-table. similarly  smaller  easier to understand definitions are advantageous  so hr measures the complexity of a concept  as inversely proportional to the number of production rule steps used in its construction  which gives a rough guide to the complexity of the concept's definition . hr's set of groups can be categorised by a concept if two groups are thought of as equal if they are given the same description by the concept's data-table. concepts introducing new categorisations are interesting  so hr measures the novelty of a concept  which is inversely proportional to the number of other concepts giving the same categorisation. every time a new concept is introduced  the novelty of all the old concepts is re-assessed. 
　sometimes  the user may be looking for a concept which gives a particular categorisation  for example the classification of groups up to isomorphism  where all pairs of isomorphic groups are categorised as the same  but all pairs of non-isomorphic groups axe categorised as different . if the user specifies such a gold standard classification  we can measure the invariance of a concept by taking all the pairs of groups which should be categorised as the same and finding the proportion of pairs which are categorised correctly by the concept. similarly  the discrimination measure finds the proportion of pairs of groups which should be categorised as different that are categorised correctly by the concept. 
　to use the heuristic of basing new concepts on the most interesting previous ones  hr measures and orders its concepts after a given number of new concepts have been introduced  usually 1. to order the concepts  each of the above measures is normalised to a value between 1 and 1  1 the worst score  1 the best   and a weighted sum is taken. the user sets the weights  with the choice dependent on what type of theory they are looking for  eg. if they were looking for many different categorisations  the novelty measure would be heavily weighted. often  to avoid a conflict  one or more weights are set to zero  eg. the novelty measure prefers concepts giving new categorisations  but the discrimination and invariance measures prefer concepts giving a particular categorisation  causing a conflict. the production rules can also be ordered because each concept is produced by a single rule  hence the average score of the concepts output by a production rule can be used to assess the rule. 
1 	theory formation 
a set of concepts  however interesting  does not comprise a theory. a theory should also have  at minimum  a set of theorems and proofs. in we discuss how hr spots and makes conjectures  and in and we discuss how hr uses otter and mace respectively to try to prove or disprove the conjectures. at present  to form a theory  we cut back a little on hr's concept formation abilities  and only use the conjunct  exists  foroll  match and negate production rules. this is because otter does not deal well with inductively defined concepts like the integers introduced by the size and split production rules. also  the compose production rule usually adds a layer of complexity to conjectures which makes it difficult for otter to prove them in an acceptable time limit. 
1 	starting a t h e o r y 
in algebraic domains such as finite group theory  hr can construct a theory from the bare minimum of information: the axioms. to do this  hr first passes the axioms to mace  which is asked to construct a single example group. mace must be told the size of the group it is to find  so hr first gives mace 1 seconds to find a group with 1 element  then 1 seconds to find a group with 1 elements and so on until size 1  after which it is unlikely that mace will succeed. in the unlikely event that no model of any order is found  hr must admit defeat as its concept formation process is model based. to describe a model it has found  mace outputs a set of tables  each with a name. hr examines these tables and for each one  extracts the name and data contained as an initial  core  concept. in group theory  mace finds the trivial group with one element and uses three tables to describe it. hr takes these tables and extracts the group operation  identity and inverse concepts - those core concepts which were implicit in the axioms. 
1 	m a k i n g conjectures 
whenever hr invents a new concept  it immediately checks whether a previous concept has the same datatable. for example  one of the first concepts hr invents in group theory is:  after finding the models for this concept  hr runs through the previous concepts  and finds that the only elements  a  for which a*a=a are the identity elements and vice versa. when hr finds a match like this  it makes the conjecture that the definitions are equivalent  ie. 

there are other types of conjecture that hr can make. 
for example  if hr finds that the models of a newly formed concept are a subset of the models of a previous concept  or vice versa   hr can make the conjecture that one definition is a specialisation of the other. for example  hr makes the conjecture that the identity element is always a member of the centre of a group: 

for simplicity  conjectures hereafter are assumed to be of the first type: definition!  -  definition1. 

1 	proving conjectures 
theorem proving is  in general  a difficult activity  so hr must give otter the best chance of proving the con-
jectures. using the 1 production rules mentioned  each conjecture can be written in a succinct way acceptable to otter  and will be of the form: 

　of course  if the predicate on the right hand side coincides with a predicate on the left hand side  the subgoal is trivially true  so it is not passed to otter. also  it is possible that the subgoal has been looked at in order to settle a previous conjecture  so hr stores all previous results  and uses them where possible. it also checks whether a subgoal which has the same right hand side  but a subset of the conditions on the left hand side has been proved - if so  the present subgoal follows as a corollary. entirely novel subgoals are passed to otter with the axioms of the algebra. otter is then given a fixed time limit to prove the subgoal  usually 1 seconds. if all the subgoals are proved  the conjecture becomes a theorem and is added to hr's collection. 
　regardless of the difficulty to prove a conjecture  if the concepts in it are too complex  otter has little chance of proving it in a short space of time. for this reason  when theory forming  we usually impose the condition that no concepts with a complexity greater than a given threshold are used to base new concepts on. if otter is only given 1 seconds to find proofe  it is a good idea to impose a complexity threshold of 1. 
1 	disproving conjectures 
when hr has few example groups to provide empirical evidence  it often makes false conjectures such as: 

which states that all groups are abelian. when false conjectures are passed to otter  it either fails outright  or runs out of time. the unproved subgoals from the conjecture are then passed to mace. hr gives mace 1 seconds to find a counterexample of size 1  then 1 seconds to find one of size 1  and so on. for the untrue conjecture above  mace finds the smallest non-abelian group  d 1  - with six elements. when a new group is found  hr reads mace's output once again and adds to the data-tables of the core concepts. then hr uses the new data to recalculate the data-tables for all its old concepts. by introducing new models only when needed to disprove a conjecture  hr guarantees that the models are also interesting - each model has a property which is true of no previous one. 
1 	closing the maths cycle 
each new group found by mace is different to the ones it already has  because it disproves a conjecture which was true of all the others. once introduced  all further calculations will involve the new group  which will add more empirical plausibility to the conjecture making. also  with the notion that concepts are more interesting if you can prove some interesting facts about them  we can use the conjectures  theorems and proofe to derive more measures for the interestingness of a concept. 
　hr has two ways to assess conjectures. firstly note that each conjecture states that one definition is equivalent to another. figure 1 shows a typical conjecture - two concepts have been constructed  with the dotted line indicating that those definitions are equivalent. the shaded nodes belong to the construction paths of both equivalent concepts and all nodes except x are concepts already found in the theory. 

figure 1: construction path for a typical conjecture. 
the more divergent the construction paths for the two definitions  the less obvious the fact that they are equivalent. therefore  hr measures the surprisingness of a conjecture as the number of distinct concepts which appear in one  but not both  construction paths. in figure 1  noting that x is the same as a previous concept  the conjecture scores 1 for surprisingness. 
　when otter proves a subgoal  it outputs a proof length score  and an average of this over all the subgoals will roughly indicate the difficulty of the overall conjecture. proof length is a measure-of the interestingness of the proof  and hence the conjecture   but others  such as the number and length of clauses produced  have been suggested by otter's author  william mccune  as better alternatives  which we are currently implementing. a weighted sum of surprisingness and difficulty is used to assign a value between 1 and 1 to each theorem. then  the average score for the conjectures a concept appears in can be used to order the concepts themselves. note that  the conjecture in figure 1 is most concerned with two old concepts - those appearing with an extra border  and the interestingness of the conjecture is used to assess the interestingness of both these concepts. 
　hr has only limited ways to investigate and attempt to settle open conjectures  those which cannot be proved or disproved by otter or mace in the given time . thus we are presently more eager for hr to make provable conjectures. so  even though these are probably the most difficult and interesting  hr gives open conjectures a score of 1 for difficulty and the difficult concepts involved in the conjectures are discriminated against. we discuss how hr can deal with open conjectures in 
	c1lt1n  bundy  and walsh 	1 

1 results 
1 	concept formation 
hr works in number theory by first generating a table of factorisations for integers 1 to 1. it can turn concepts into integer sequences fay  i  listing integers of a particular type in numerical order  eg. prime numbers  ii  applying a function to the integers 1  1  1  etc. eg. the r function  number of divisors   iii  identifying integers setting a record for the highest value output by a function  eg. highly composite numbers  with more divisors than any previous integer   which was am's major reinvention. hr finds all the number types found by am and re-invents over 1 well known integer sequences. hr 
also outputs many integer sequences not found in the recognised repository  the online encyclopedia of integer sequences   sloane  1   which contains over 1 sequences. 1 sequences found by hr have been accepted into the encyclopedia  for example  this interesting sequence: 1 1 1 1 ...  those integers setting a record for 
　presently  we believe that 1 of these 1 sequences are genuinely new inventions. perhaps the most interesting sequence found by hr is the tau numbers  where the number of divisors is itself a divisor : 1 1 1 1 ... this was missing from the encyclopedia  and a search of the relevant literature produced no reference  so we believed this to be a new invention  and we called these numbers 'refactorable  however  we recently discovered that they were first defined in 1   kennedy and cooper  1   hr made some interesting conjectures about tau numbers  eg. that they are congruent to 1 1 or 1 mod 1. proving this and others from hr led us to some interesting results   colton  1   eg. odd tau numbers are squares. there are also some open conjectures  such as whether there are any triples of tau numbers  there are none 
asked to find concepts classifying groups up to order 
1   ie. the concept can be used to decide whether any two groups up to order 1 are isomorphic   hr finds many calculations unknown to the authors. the function: 
  

classifies groups up to order 1 and was genuinely surprising as we hadn't thought such a simple function could perform the task. when given an hour to find as many categorisations as possible  hr finds around 1 categorisations of the groups up to order 1. also  we chose 1 definitions from a group theory text  to see how many hr re-invented. we noted that hr found these 1: 
  abelian  cyclic and exponent 1 groups  elements  identities  inverses and orders of elements  orders and centres of groups  but 1 required better handling of subgroups: 
  normal subgroups  quotient groups  cosets  index of sub-groups  simple groups  central series  derived subgroups and 1 involve concepts from other domains:   elementary abelian  dihedral  quarternion and p-groups. a hit rate of nearly 1% is encouraging  and in future  more production rules and working in 1 domains at once will increase the yield of classically interesting concepts. 
1 	theory formation 
when forming theories  the complexity of concepts is capped and some production rules are removed  so the theories formed are more superficial. hr finds some con* 
jectures of note  eg. groups of exponent 1 are abelian: 

　in 1 experiments  we gave hr 1 hours to construct a theory. we used a complexity threshold of 1 and a weighting of 1% for the novelty of a concept  so that hr didn't specialise too much  and 1% for the interestingness of the theorems each concept was involved in. the interestingness of conjectures was measured with equal weights for surprisingness and difficulty. in  g roup and  q uasigroup theory and  r obbins algebra  we compared the  b est first search choosing which concept and production rule to use next  against a  r andom choice  and the  e xhaustive search described in ′1. in table 1  we recorded the content erf the theories produced  ie. the number of concepts  theorems  open conjectures and models produced and two measures of the quality of the theories  namely the average proof length  difficulty  and surprisingness of all the proved theorems. 

'table 1: summaries of 1 theory formation sessions. 
we draw two conclusions from these results: 
  the nature of the theories produced is more depend-ent on the axioms than the choice of search method. 
  the best first search improves the overall quality of the theory  with respect to the difficulty of theorems. 
conclusion 1 is clear because the rows in table 1 vary much more between algebras than between different searches with the-same algebra. as expected  in quasigroup theory  with the least restrictive axioms  mace finds most models and  as shown by the average proof length column  quasigroup conjectures are more easily proved by otter than those about the more complex algebras. from the significant increase in average proof length gained by using the best first search over the other searches  it is clear that the heuristic improves the quality erf the theory with respect to the difficulty of the theorems produced. a similar increase is observed when hr uses the best first search to find concepts with classifying abilities. the best first search concentrates on 

particular concepts  so the random search covers a larger space  and therefore spots more varied conjectures  which explains the increase in average surprisingness in the random searches over the best first searches. 
1 	future work and conclusions 
presently  hr can make conjectures which otter has little chance of proving. to address this imbalance  we intend to interface hr with inductive theorem provers which can better handle conjectures with numerical content. also  we wish to improve hr's treatment of open conjectures. we noted in ′1 that hr gives open conjectures a score of 1 for difficulty  which is counter-intuitive  but sensible while hr has limited possibilities for settling such conjectures. once hr has better tools to settle open conjectures  we will increase the interestingness of  and thus time spent investigating  open conjectures. 
the obvious way to address open conjectures is to give 
otter and mace more time to settle them. however  we find that the number of settled conjectures does not increase in line with the time given to the task  and more sophisticated techniques are required. hr already has one method to disprove previous open conjectures when mace finds a new model  hr checks whether this is a counterexample to any previous open conjecture. this approach can be effective - we have documented an example semigroup which disproved 1 of hr's open conjectures. hr can also use previously proved theorems as lemmas in open conjectures. however  lemma choice is a difficult problem and we hope to use techniques such as gazing   barker-plummer  1   to improve matters. our first attempt at lemma use - using the previous theorem with the most similar construction tree - was encouraging  as we found a conjecture where the lemma reduced otter's proving time from 1 to 1 seconds. 
　concept formation in hr is  i  novel  because it is the first to work in domains as diverse as group theory  number theory and graph theory and  ii  important  as it has led to the introduction of new mathematics  most notably the integer sequences. theory formation in hr is  i  novel  as it is the first to integrate with third party software to perform concept formation  conjecture making  theorem proving and counterexample finding and  ii  a bootstrapping system - a theory including models  definitions  theorems  proofs and open conjectures can be created from just the axioms of an algebra. hr improves on am and graffiti by using theorem proving when constructing theories  and improves on il  gt and the bagai et al system  by covering a wider range of concept types over more domains. introducing models only when needed to disprove conjectures and driving a heuristic search with concrete measures of interestingness increases the quality of the theory produced and has brought hr success in automated mathematical concept formation. we hope to continue increasing the interestingness of the concepts and theories produced  building a system sophisticated enough for working mathematicians to explore new domains with. 
1 	acknowledgments 
this work is supported by epsrc grants gr/m1o and gr/k/1. we would like to thank the anonymous reviewers for their useful comments. 
