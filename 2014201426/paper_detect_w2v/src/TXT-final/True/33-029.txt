 
a model of learning in a highly active and competitive environment is presented here. this paper posits that learning  under these conditions  can be characterized as accommodating examples produced by the constrained example generation 
 ceg  	process. 	the role of the ceg process in the lrceg system is demonstrated by a typical 	learning scenario. 
i introduction 
　　　this paper introduces an emerging system designed to learn racquetball by a process of constrained example generation  lrceg . having the capacity to generate a set of constrained examples has been shown to be essential in many domains   1   .   1   . furthermore  learning as a form of accommodating and assimilating knowledge has been demonstrated to be useful to a number of systems . .the implication here is that some forms of learning can be modeled  in part  as a process of retrieval  modification  or construction of domain specific knowledge  represented as examples c1.c1. exploring a variety of learnirg issues within the rb domain is made possible by the generality and robustness of the ceg paradigm   1     
　　　racquetball  rb  as a learning domain has some advantages. the speed and competitive nature of the aport facilitates investigating learning under rapidly changing and strenous conditions. many important occupations require learning the appropriate behavior for unpredictable  fast-paced  and demanding environments  e.g.  medicine  athletics  aircraft piloting . the learning required to perform tasks in these domains can be very different  although not mutually exclusive  from a typical classroom education. the generality and robustness of the ceg paradigm allows exploring a variety of learning-rb issues . 
ii acquisition and representation of domain specific knowledge 
　　　some knowledge about rb must be obtained and represented before the lrceg system can attempt learning. knowledge for the i n i t i a l set of six examples was extracted from interviews of a rb expert. 
 this work supported  in part  by free computer time from the coins department at the university of massachusetts  amherst  mass. 1. 
the syntax of the expert's information was  if a player encounters object-of-encounters then try and 
meet object-of-meet and respond object-of-respond. . the context within which learning occurs is the 'object-of-encounters'  and the appropriate behavior for meeting and hitting the ball is 'object-of-meet' and'object-of-respond' respectively. an example of the expert's advice is 
 if a player encounters a fast cross-court shot then try and meet the ball waist high and respond with a ceiling shot.  both the context and behavior knowledge is translated into velocity and rb court x y 1 coordinates   i . e .   'coordinate-velocity' information . this knowledge is represented in a frame-like data structure  fig 1a b1. 
 context  semantics  x dx   y dy   z dz   v dv   
 objective objective-function-definition  
 situation situation-function-definition  
 response response-info-1-furction-definition   
 a.  

　　　the lrceg system is written in lisp and runs on a vax 1. a flow diagram of the lrceg system and how a user interacts with it appears in fig 1. system operation can be described in thirteen steps  corresponding to box numbers in fig 
1.  as follows: 	  1   l n i t i a l 	ball x y z position and 

1 

velocity v  number of iterations  and discrete time interval is specified by the user.  1 a snapshot  instantaneous ball position and velocity  information is gathered.  1 retrieve example s   from box 1  with satisfiable semantic constraints i.e. x y z v from snapshot are within dx dy dz dv of x y z v from semantics slot of the example. retrieval output is a set of examples that are candidates for modification. 
 1 modification involves calling the function-definition programs defined in the 
objective  	situation  	and response slots  see fig 
1a. . the objective program modifies the x y z coordinates of where a player meets the b a l l   the player computes the trajectory of the ball and modifies where  on the rb court  to be in order to satisify the constraint of meeting the ball at the position specified by the  object-of-meet . the situation function quantifies the players  situation  which is inversely proportional to the distance between the player and the objective. the response function modifies the x.y.z coordinates of where to h i t the ball and computes the short-term-success-rate which is a  goodness  measure of the example's response specification. examples are modified if improvement can be made in the short-term-success-rate. each example is trying to obtain the highest  goodness    i . e .   short-term-success-rate value  measure possible  in effect competing with other examples to be selected as the one having situation  
on their 
execution of the being able constraints 
currently by 	updating currently highest short-term-response-rating.  1 an example has failed if executing i t s response results in a missed or skipped ball  hits floor before front wall . otherwise  threshold the response rating of the returned example to determine the success or failure of i t s response.  1 self explanatory  1 change the i n i t i a l context slightly   i . e .   vary the i n i t i a l ball position and/or velocity .  1 compute the statistical success rate of the example s  and use a sigmoidal function to update long-term-success-rate of the example from 1.  1  replace old long-term-success-rate with updated one from 1 and add the modified example to 1. this step is the accommodation process as the new example is now available for competition and evaluation with old examples in subsequent environments. 
　　　the lrceg system is learning successfully if it returns a example having the best response rating for a previously similar context   i . e .   what might work best in the future is what previously worked best in similar contexts . 
iv experimental results 
　　　this section presents figs  1 through 1 as a typical learning scenario in which the system  'player-l'  learns the best response for a cross-court shot. 
1 


after rotating fig 1 +1 degrees about the y axis. '1' traces the path of 'player-1 . *b' traces the trajectory of the ball start* ing at 'player-1' who does not move in this scenario. for display purposes the position of the ball and players are not indicated for every iteration. 

sane as fig 1 except rotated -1 degrees about the z axis. line segment 1 illustrates 'player-r executing the action specified by example number 1. line segment 1 intersects line segment 1 at the point where example 1's short-term-success-rate is higher than example 1's. at the intersection point 
*player-l' begins executing the action specified by example 1. when 'player-1* meets the racquetball example 1 specifies where to hit i t . 

a new and seperate example 1 has been created and accommodated as a result of steps 1 in fig 1. except for the 
long-term-success-rate  information for example 1 is a copy of the latest modifications  to example 1. example 1 f s long-term-success-rate was computed to be .1 
     the parent of example 1   i . e .   example 1  now has a long-term-success-rate of .1 example 1's long-term-success-rate was reduced to .1 .  note: i n i t i a l long-term-success-rates for a l l examples was  1 . this figure shows how example 1 begins influencing player-ts behavior earlier in a similar r a l l y . examples 1 and 1 did not influence player-ts behavior because their semantic constraints were not satisfied and/or their short-term-success-rate was not high enough. 

finally the long-term-success-rate of example 
1 is high enough so that 'player-1' begins executing the action specified by that example from the f i r s t iteration. 
v future improvements and extensions 
	future research will extend the limits of 	the 
lrcec system to incorporate more functions currently performed by the user. once the extensions have been implemented the following learning issues can be addressed:  1 determine the limits of this paradigm for learning  1 ascertain the knowledge and proceses necessary to learn a sequence of examples   i . e . sequence of actions   1 evaluate accommodation techniques and  1 compare how well the system learns as a function of the expert supplying the knowledge. 
vi conclusion 
　　　this paper has demonstrated how some types 	of learning 	can 	be accompolished by applying the ceg paradigm to examples representing domain knowledge. acknowledgements 
	many thanks and much gratitude goes 	to 	prof. 
edwina l. rissland for her invaluable guidance  critiques  suggestions  and research that provided the foundation for this paper; daryl t. lawton for smoothing out my thoughts; and to the coins 
department for free computer time on weekends. 
bibliography 
 collins  a. and a. stevens   1   goals and stratagies of effective teachers  
	bolt 	beranek 	and 	newnan 	inc.  
cambridge  mass. 
 rissland  e.  and e. 	soloway  1  	 overview 
	of 	an 	example 	generation 	system  
     proceedings of first national conference on artifical intelligence 
	c1  	rissland  	e. 	 1  	 example 	generation  
   proceedings of third national conference of the canadian society for computational studies of intelligence 
 rissland  	e. 	l.  	and 	e. 	m  	soloway 
	 constrained example 	generation: 	a testbed 
for studying issues 	in 	learning . 	in 	proc ijcai-1 
 rissland  	e.  	soloway  	e.  	o'connor  	s.  waisbrot  	s.  	wall  	r.  wesley  l.  t. 
weymouth  1   examples of example generation using the ceg architecture  coins technical report  in preperation. 
 mcdermott  	j. 	 1  	 ana: 	an 
	assimilating 	and 	accommodating 	production 
	system  	darpa report 	1 
1 
