ion  for 
abstract. t r a d i t i o n a l scheduling algorithms  using the example  was discussed in quillian   and attached procedures have 
techniques of pert charts  decision analysis or operations rrsrarrh  become a common property of ai languages since planner  hewitt 
require well-defined  quantitative  complete sets of constrainls*. they 
	1 . 	however  the strengths and weaknesses of these representation 
are i n s u f f i c i e n t for scheduling situations where the problem techniques and their potential interactions is still not well understood. 
description is ill-defined  involving incomplete  possibly inconsistent 
for this reason  we have chosen not to include as many representation 
and generally qualitative constraints. the nudge program uses an capabilities as are currently being implemented in krl  bobrow & 
extensive knowledge base to debug scheduling requests by supplying 
	winograd 1  and o w l   m a r t i n 1 . 	wc view 	f r l - 1 as an 
typical values for qualitative constraints  supplying missing details experimental medium to study the u t i l i t y of a few specific 
and resolving minor inconsistencies. the result is that an informal capabilities and their interactions. 
request is converted to a complete description suitable for a 
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　because a knowledge-based approach requires a large store of traditional scheduler. specific data  it was necessary to choose a particular domain to carry 
to implement the nudge program  a knowledge representation out our experiment. our criterion was to select a realm in which 
language - frl-1 - based on a few powerful generalizations of the scheduling requests are typically informal. this criterion ruled out 
traditional property list representation has been developed. 	the such scheduling problems as those of an assembly line. 	 see tongr 
nudge knowledge base defined in frl-1 consists of a hierarchical 
	 for an ai treatment of this problem.  	instead  we selected office 
set of concepts that provide generic deseriptions of the typical scheduling; in particular  assisting a manager in scheduling his team. 
activities  agents  plans and purposes of the domain to be scheduled. 
	this environment includes scheduling meetings  monitoring 	the 
currently  this domain is the management and coordination of progress of subgoals assigned to team members  alerting the manager 
personnel engaged in a group project. to deadlines  and real-time rescheduling. 
nudge constitutes an experiment in knowledge-based  rather 
in providing nudge with the knowledge necessary for these 
than power-based ai programs. it also provides an example of an functions  our research serves a third purpose beyond  1  exploring 
intelligent support system  in which an ai program serves as an aid the relation between knowledge-based and power-based scheduling 
to a decision maker. finally  nudge has served an experimental and  1  exercising various representation strategies. it provides 
vehicle for testing advanced representation techniques. 
insight into the categories of knowledge that are necessary for office scheduling  independent of their representation . nudge contains a 
1. introduction 
hierarchy for activities involving information transfer  for people in various roles related to this transfer  for the plans governing these transfers  and for the associated demands on time  space and 
 minsky & 	papert 1 . 	that 
personnel. 	the hierarchy is on the average five levels deep and includes approximately 1 objects  each described by a generalized property list called a frame. 	an abridged version of this hierarchy 
this paper reports on an experiment appears below  with specialization indicated by nesting. 
debug informal scheduling requests. the database is used to supply missing details  resolve inconsistencies  determine available options  notice necessary prerequisites and plan for expected outcomes. 
manage this large store of knowledge  a representation language -frl-1 - has been implemented. frl-1 extends the traditional attribute/value description of properties by allowing properties to be 
described by comments  abstractions  defaults  constraints  indirect 
pointers from other properties  and attached procedures. 
	knowledge 	＊1: 	goldstein 
1 


　　　t h e t e r m   f r a m e   as used in f r l - 1 was inspired by m i n s k y ' s  1  development of frame theory. frame theory contends that  !  intelligence arises from the application of large amounts of highly specific knowledge  at opposed to a few general i n f e r c n o n g mechanisms  and  1  this is accomplished through the use of a library of frames  packets of knowledge that provide descriptions of typical objects and events. these descriptions contain both an abstract template providing a skeleton for describing any instance and a set of defaults for typical members of the class. the defaults allow the information system to supply missing detail  maintain expectations  and notice anomalies. 
     we have yet to investigate with equal care related area* of knowledge not strictly involved in scheduling the information flow between members of a research team - this includes space allocation  budgeting  and travel scheduling. the last of these is the focus of the gus system developed by robrow ct al . gus is is a framebased dialog system that addresses many of the issues raised here. the major difference is that gus focusses on the use of frame representations to support dialog comprehension while n u d g e focusses on their use to support sophisticated scheduling. 
finally  although developed for the office scheduling domain  the 
nudge knowledge base does have a broader applicability. the use of a hierarchy of successively more abstract concepts allows highly specific information to be clearly segregated from more general facts about the world. furthermore  some of the concept hierarchies such as those for time and place apply in toto to many other applications. 
1. scenario 
     the following request is typical of those understood by nudge.  si  nudge* schedule a meeting with bruce for next tuesday. 
si is an informal specification in that such facts as the following are left unsaid: 
where the meeting is to be held. 
which tuesday is next tuesday. 
what time on tuesday is preferred. 
how long the meeting is should last. 
whether there arc any prerequisites. 
what to do if rruce is unavailable. 
as such it is typical of the requests made by people of one another. given a knowledge of the individuals involved  their roles and the context  n u d g e expands si to the more complete s 1   where the added information is in italics. 
 si'  	i understand your request to mean: 	schedule a 
meeting 	w i t h 	bruce 	and 	me 	at 1 	in 	the 	afternoon 
n e x t 	t u e s d a y 	one 	week 	from 	tomorrow 	lasting 
one hour in my office to discuss the personal assistant project. 
when processed by the the language comprehension component of 
n u d g e  bullwinkle 1   si causes the construction of a frame gcstalt  a data structure of instantiated frames containing all information in si*.  the actual text of si* is generated by the text output procedures associated with the frames in this gestalt.  
　　　the knowledge-based phase of the scheduling concludes with the conversion of the information in the frame gcstalt to a calendar containing possible conflicts and an associated set of strategies for resolving those conflicts. the bargain program then reports the highest utility compromise to the user. 
 rl  your preferred t i m e for meeting with bruce on tuesday is already filled by a meeting with mark. 
h o w e v e r   m a r k ' s purpose is to discuss l a n g u a g e 
r e s e a r c h 	a n d 	c a n d y 	i s 	a v a i l a b l e . 	s h a l l 	i 
reschedule mark to see her instead. 
mark's purpose is not specifically to se ira  and hence  a member of ira's group can be substituted to see mark. observe that access to a diverse set of scheduling strategies has made it unnecessary to juggle the possible time of the meeting between ira and rrucc  producing a compromise not entirely satisfactory to cither. instead  a sufficiently broad perspective has allowed nudge to identify the option of finding an alternative participant by referencing the purpose of the conflicting appointment. a knowledge-based phase in the scheduling thus avoids the myopia a purely power-based approach can exhibit. 
continuing the scenario: 
 1  yet. 
 r1  t h e m e e t i n g w i t h bruce is scheduled. should bruce prepare a written pa progress report  
 1  yes. 
 r1  	i will remind bruce about the report. 
     section 1 describes the frame gcstalt representing nudge's completion of the si request. section 1 discusses the representation techniques of frl-1 supporting the creation of the gcstalt. section 1 analyzes the underlying knowledge of activities and individuals represented with these techniques. 
1. t h e formation of frame gestalts 
     a frame gestalt consists of a set of generic frames  instantlated appropriately for a particular scheduling request. the generic frames are selected on the basis of clues implicit in the scheduling request; knowledge-based reasoning begins with a recognition process. information missing in the request is then computed from defaults  constraints  and procedures -- all associated with these generic frames. for si  the gcstalt includes the frames shown below  with daughters of a frame representing its specializations. many other interrelations among these frames arc not shown. 

the goal of the knowledge-based phase is to compute this frame gestalt. 
     the input to the gestalt formation process is a set of partially instantiated frames representing the information actually present in the informal request. this input is generated by a natural language front end consisting of the wait-and-see-parser developed by m. m a r c u s   1   and a f r a m e - b a s e d semantics designed by c bullwinkle . there are four partially instantiated frames: 
meeting1  schedule1  interval1  moment1. 
     meeting1 is the frame for the proposed meeting and initially contains information regarding the participants and time of the event extracted from the english request. 

knowledge ftepr.-u: goldstein 1 

	meetinc1 reports that the participants arc bruce and 	ira. 
bruce it known from the semantic interpretation of si  while ira is inserted on the basis of pragmatics  i.e. that the person requestmr the meeting wishes to be included among the part icipants. m e e t i n c 1 has been identified by pragmatics as a - k i n d - o f 
 ako  p a - m e e t i n g on the basis of knowledge regarding the common activities of ira and bruce. had no such special knowledge existed  the sentence would simply have triggered an instance of the m e e t i n c frame. 
     the first element of these frame structures is the name of the frame name and each remaining item is a slot. each slot has one or more values  explicitly marked by the ivalue facet. a frame is thus simply a multi-level association list. the semantics of attached procedures and inheritance is enforced by the access functions. 
1. representation technology 
     the formation of a frame gcstalt occurs by expanding the the frames extracted from the initial request in terms of the knowledge stored in the frl database. this section discusses this process in terms of the contributions made by six representations techniques embedded in frl-1: comments  abstraction  defaults  constraints  indirection and procedural attachment. 
     o comments. the first generalization of property lists in frl1 is the inclusion of comments attached to values. comments are used in these examples to record the source of the value in each slot. so far  the only tourcc is the semantic and pragmatic interpretation performed by the language comprehension process. alternative sources are inferences made by attached procedures and inherited properties. other kinds of commentary provide numerical utilities for use by the scheduler  and describe differences between multiple procedural methods attached to the same slot. 
     this commentary provides guidelines both for b a r g a i n to judge the reliability and and strength of various constraints and for n u d g e to debug inconsistencies arising from c o n f l i c t i n g contributions by different frames during the gcstalt formation process. the former would arise if conflicts existed between the generic information of the ira and bruce frames  while the litter is exemplified by si being part of a dialog. the sentence  the meeting should be tomorrow in my office.  would override the default suggested by generic knowledge. our use of commentary to guide a debugging process derives from research by sussman  and goldstein . 
     self-knowledge  in the form of machine understandable annotations  also facilitates the system's ability to explain its inferences to a user. this is critical if the user is to become 
confident in the system's capabilities. 
      1  abstraction. the second property list generalization is to allow information to be inherited between concepts. in essence  this is an implementation of quillian's superconcept pointer  but between property lists rather than nodes in a semantic net. for example  details of the meeting between bruce and ira are inherited from a generic description of pa-meetings. this description includes answers to such questions as where such meetings are typically held  when  why  who is involved  what prerequisites are required and what consequences result. 
     since the answers to some of these questions is clearly applicable to a broader set of activities than meetings of the pa-group  the information is distributed in a hierarchy of successively more general frames  thereby achieving both power and economy. 
each frame points to its generalization by means of its ako slot. 
the process by which information in a generic frame is acquired by a specialised instance of that frame is called inheritance. meeting1  for example  inheriu information from its generalisation  the pam e e t i n c frame. 
meeting 1 
	ako 	svalue 
	who 	$value fa-meeting 
ira 
bruce  source: 
 source:  source: pragmatics s i   
pragmatics s i   
semantics s i   pa-meeting 
	ako 	svalue 
	why 	svaiue 
	where 	soefault 
	when 	soefault 
	who 	soefault meetin1 
pa-project 
ai-playroom 
  on friday   for 1 hour   
ira 	 role: manager  	bruce 	 role: frl  
canoy  role: semantics  
	mitch 	 role: syntax  
      1  defaults. the third generalisation that naturally accompanies a hierarchy of frames is default information  as the slots of a generic activity typically supply default answers to the common questions asked about such events. the utility of such default information was a major insight of minsky's original frames research. their use  s prevalent throughout the nudge database  and give the scheduler much of its power. 
     for example  pa-meeting supplies the information that such activities typically involve four people  occur on fridays in the ai lab playroom and last one hour. the idefault atom distinguishes defaults from values. we shall refer to the different kinds of information associated with a slot as its facets. the role commentary information associated with the participants of pa-meetings is used by the p e r s o n - s w a p p i n g scheduling strategy of the bargain program.  managers are optimistically defined to know all of the team members* roles.  
     in forming a frame gestalt  the defaults of superior frames are used unless they are overridden by information from a more reliable source  such as the explicit constraints of the original request. thus  the where default would apply to the mekting1 gestalt. the when default  however  is overridden by the explicit request in si that the meeting occur on tuesday. 
　　　defaults arc also useful to the natural language understanding system by supplying expectations that aid the parser and semantics m processing ambiguity and ellipsis. 	however  we do not develop that application here. 
     w constraints. a knowledge representation language must accommodate descriptions of properties if it is to support the recognition of new instances of a generic concept. frl-1 allows constraints to be attached to a slot by means of facets for requirements and preferences. these constraints are illustrated in the meetinc frame  which is the immediate generalization of pameeting. 
meeting 
	ako 	$value 	activity 
	who 	srequire 	 exists  who  has-role 	'chairman   
	when 	sprefer 	 not     duration 1when  	 hour 1 . 1       
requirements arc predicates which must be true of the values in a slot. preferences can be relaxed yet leave a valid slot. the irequire facet of meeting stipulates that a chairman he present at all meetings. the iprefer facet states that meetings should not last longer than 1 minutes. 
     it is possible to collapse defaults  preferences and requirements into a single constraint facet. however  we have found it convenient to preserve the distinction  given the use of these facets by a scheduler. requirements cannot be relaxed. preferences  however  can be negotiated. defaults are preferences that offer specific alternatives  rather than acting as predicates on a set. 
knowledge r*pr 1: 	g o l s t e i n 
1      krl's development of  perspectives  in which a frame is described from a particular viewpoint is a more elaborate kind of constraint than we typically employ. while a frame pattern matcher can  in essence  specify a perspective  we have not generally used such a device for the narrowly defined world of office scheduling. whether an extended description mechanism will be needed for more complex applications remains to be seen. our current plans are to see where frl-1 fails before we incorporate more powerful  but more complex techniques. 
	 1  indirection. 	not all 	of the 	relevant 	description 	of 
meeting1 is contained in abstractions of the meeting r o n r r p i . frames in orthogonal hierarchies also supply constraints. for example  activities involve agents  and the frames for these agents have relevant information. the frame system has separate hierarchies for activities and people  interconnected by indirection. the ira frame exemplifies this. 

the first atomic slot identifies ira as a person. the remaining nonatomic slots  ie  slots with compound names  provide information regarding various activities with which ira is typically involved. for example  in general ira prefers meetings on friday afternoons in his office. this information is not stored directly in the activity frame since it not generically true for the activity  but only applicable when ira is involved. ira's default of ne1 as the place to hold meetings supplies the value of the where slot of meeting1. 
     the indirect information appears in the frame gestalt if both the agent and activity frames arc triggered. for si  triggering ira and m e e t i n g together resulted in the frame gestalt supplying the missing information regarding the location of the meeting. thus  indirection provides links between different hierarchies  extending the frame system to include a network of contingent facts. 
indirection is a simplified kind of mapping between concepts. 
frl differs from merlin  moore & newell 1   in whieh general mapping is allowed  by providing a restricted but more structured environment. mapping occurs  in essence  only between agent ami a c t i v i t y frames t h r o u g h indirection and between concept and superconcept frames through inheritance. 
      1  procedural attachment. a knowledge representation must allow procedural as well as declarative knowledge. procedural attachment provides this capability in frl-1. 
     there are typically three kinds of procedural attachment  ami all are provided in frl-1. these are if-added  if-ncedcd  and if-rcmow-d methods. a difference from traditional ai languages is that three procedures are attached to the slots of a frame rather than to assertions of an arbitrary form. frl-1 is thus a more structured environment than languages like p l a n n e r and c o w i v k h  mcdermott & sussman 1 . providing a mechanism for triggering arbitrary procedures by adding a value to a slot supports the fundamental operation of frl-1 which is instantiation; that is  creating an instance of a frame and filling in values for its slots. 
     for example  when the time of meetinc1 is arranged  a value of the when slot is assigned  its name is entered in a calendar for easy reference. the method for doing this is supplied by the when slot of the activity frame. 

     activity also illustrates if-ncedcd methods. these methods  how access to arbitrary procedures for supplying values. for example  examine the who slot of activity. there are two ifneeded methods there. the first   ask   is a function that requests the value from the user. its purpose is indicated by the comment t y p e : request. the other method   use topic   attempts to deduce the participants by accessing the who slot of the frame provided as the value of the topic the comment on this method indicates that it is of type: deduce. the type comments are used by the function controlling the overall instantiation process  the if-ncedcd method of instance in thing  which all frames inherit  their function is to allow deductive methods to be used in preference to interactive requests if possible. 
     if-needed methods have widespread use. defaults can be viewed as a special kind of if-ncedcd method  so useful and widespread that a special facet of a 1lot is devoted to it. idiosyncratic forms of inheritance  using other than the ako link  can be imbedded in an ifnecded method for appropriate slots. 
     attached procedures are also used to maintain the integrity of the database. for example  ako and instance are slots that provide a two-way link between a frame and its generalisation. this linkage is maintained by a pair of if-added and if-removed methods. the procedures which implement this mechanism appear in t h i n g   the most general frame in nudge. 

     subtleties. we conclude our discussion of fri.-o as a representation language with a consideration of first some of the subtleties involved in the use of these six techniques and then some of frl-o's current limitations. 
i. 	there i* 	more than one kind 	of inheritance. 
     additive and restrictive inheritance arc two kinds of inheritanre strategics that correspond to two common forms of specialization. additive inheritance is appropriate where specialization adds new noncontradictory facts to the more general concept. restrictive inheritance is appropriate where specialisation overrides the information contained in the more general concept. commentary is employed to inform the inheritance mechanism whether to stop or to continue up an ako chain once the first datum is found. 
1. method* 	can 	conflict. 
     procedural attachment can be troublesome. for example  care must be taken to avoid loops: a method in slot a may add a value to slot b that in turn adds a value to slot a. an endless loop results. we handle this by using comments to describe the source of information. it is up to the individual method to access this commentary. 
     scheduling multiple methods associated with a single slot may be required  when the methods have an a implicit order. currently  the frame system executes the methods in a fixed order. if more subtle ordering is required  the user must combine the methods into a single procedure  with this method responsible for performing the proper ordering. 
1. the 	dittinction 	between 	value 	and 	requirement 	i* 	not 	nhnrp. 
     requirements have been presented as predicates to filter out unwanted values. to the extent that nudge can reason directly from them  however  they can be used in place of values. for example  an if-needed procedure can use the requirement to select the generic category when instantiating a new frame to fill a slot. 
1. a frame it 	more than the turn of iff parts. 
     in our initial conception of a frame system  we did not provide for a self slot to contain idiosyncratic information about the frame itself. our hypothesis was that all of the information in the frame could be represented in the individual slots. however  the need arose 

knowledge r*r r. - 1 : g o l d s t e i n 1 

to represent global information about the frame  not local to any slot. two examples are knowledge of how to print the frame in english and knowledge of the preferred order in which to instantiate the solts of the frame. for these reasons  a self slot was introduced with a set of facets appropriate to the various classes of global information it contains. at present these include a sdiscijss facet which contains a procedure for describing the frame in prose  and an sorder facet which contains a procedure that orders the slots at the time of instantiation. 
1. inheritance of valuet and default* can conflict. 
     a given slot may have both a default and a value in i t * generalization frame. which should dominate  currently  the frame system treats values as more important than defaults  so all of the values of superior frames are checked before a default is accepted. however  this may not be appropriate in all cases. when it is not  the user of the frame system can obtain complete control by asking for the full heritage of the slot  i.e. all of the facets for the slot in the current frame and its superiors. the user can then select the desired datum. 
	limitations. 	the following are limitations of version 1 of frl. 
1. no provision is made for multiple worlds in the frame system  although the b a r g a i n program can consider a l t e r n a t i v e calendars. 
1. procedures cannot be attached to arbitrary forms  but only to values. for example  there is no way to have a procedure irigger when a new requirement is added. 
1. arbitrary data structures cannot be asserted. only information of the form  frame  slot  facet  datum  comment  can be placed in a frame. 
1. hash coding is not currently used. hence  it is expensive to find all the frames with a slot of a given name and even more expensive to find all the frames in which a given value appear* 
1. comments cannot be associated with arbitrary parts of a frame  but only cither with individual data or the self slot of the frame. there is no way to associate a comment with a sublet of the slots. 
1. mapping between frames is restricted to matching slots. a generalized mapping function  as in merlin  wherein one slot can be mapped to another  is not allowed. 
     eventually  we may find that the more sophisticated capabilities of conniver  merlin  krl  or owl arc needed. but the rapid rise and fall of planner argues for caution in the introduction of complex new techniques. we plan to introduce additional techniques only as the simple generalized property list scheme of frl-1 proves inadequate. at present  frl is adequate to represent the knowledge described in the next section which comprises the basis of us scheduling expertise. 
1. epistemology of scheduling 
     nudce's ability to expand informal scheduling requests arises from the recognition of the request as an instance of various generic frames. this section provides snapshots of this generic knowledge  which includes frame hierarchies for activities  people  time  and plans. 
      1  a c t i v i t i e s . most activities known to n u d g e involve information transfer. they span a set of events central to the scheduling domain and interesting in the subtleties they introduce for successfully debugging conflicting schedules. the  activity  subtree of the frame hierarchy shown earlier illustrates these information transfer activities and their disposition along generalisation chains. 
     the use of concept hierarchies is an alternative to the unstructured set of primitives proposed by schank . we find this approach powerful in that it facilitates the recognition of new objects and allows fine distinctions to be readily made. to illustrate the first point  si could have been treated as referring to an instantiation of the m e e t i n g frame  in the absence of recognizing a meeting between bruce and ira as a p a - m e e t i n g . later  if additional information allows this recognition  the ako pointer of meeting1 would simply be adjusted to point to pa-meeting. otherwise no change is needed. 
　　　the fine distinctions between information transfer activities represented in the activity hierarchy guides the time of scheduling  the preparations required  and the pattern of the consequences. a phone call need not be scheduled for a precise time while a formal meeting must. we find a separate frame useful  rather than representing phone and mail as different instruments to a single communication activity  as might be schank's approach  because other information is clustered around the choice of means. a letter requires more preparation time than a phone call  implies a certain delay in communication  and leaves open whether a response will be received. 
      1  people. beyond the straightforward record of pertinent facts about a person -- their name  address  phone number  office -- lies the need to capture the alternate roles people play in different situations. roles exists in their own abstraction tree. for scheduling purposes  the roles define an order of importance that dictates  in the case of conflicting defaults and preferences  the order in which they should be relaxed. acquiring properties by virtue of playing a role is identical to inheriting information as a specialized instance of a frame; the ako/instance links define the path along which this information flows. a particular feature of roles is that they are 
often transitory and conditional on the type of activity. 
     originally  we maintained a strict hierarchy in frl with each frame pointing to a single abstraction. recently  we have allowed multiple ako links. the motivation was that it appeared natural for a person to inherit from several roles. for example  in a given situation  ira may be both a visitor and a professor. insofar as the information inherited from multiple parents is non-conflicting  no difficulty arises from this bifurcation in the ako path. if there is a conflict  it shows up in the frame gestalt with comments indicating the various sources of the conflicting information. it is up to the process using the gestalt to decide on a resolution. 
     for example  as a professor  ira's preferences with respect to a meeting time would take precedence over a student. as a visitor to another university  they would not. the techniques for debugging schedules take account of this  treating the visitor role as overriding the professor role. 
     people can be members of groups. a group has many of the same characteristics as a person insofar as it can appear in the who slot of an activity and may have its own  personal  facts: a name  an address  etc. the member and affiliate slots record this dual relation in nudge. 
      1  time. in our earliest work on nudge  time was represented simply as points on a real-number line. this was adequate for the formal analysis made by the scheduler  but proved insufficient to represent the informal time specifications supplied by users. people's time specifications are generally incomplete and occasionally inconsistent. to handle these informal requests  we moved to a frame-based representation for time similar to the one described by winograd . 
knowledge renr.-u: goldstein 1 below is part of the generic frame for a moment in time: 
moment ako 
minute 
hour day svalue 
sif-needed $ if-added 
srequire 
sif-needed 
sif-added 
srequire 
sdefault time 
 ask  	 type: request  
 daytime-equation  
 integer-range 1  	 type: syntax  
 daytime-a1reement  
 ask  	 type: request  
 weekday-equation  
 integer-range 1  	 type: syntax  
 day-month-agreement  
 weekday-agreement  
 calendar-day  now   weekday sif-neeoeo  ask  	 type: request  
 weekday-equation  	 type: deduce1  sreouire  weekday   	 type: syntax  
 weekday-agreement  	 type: deouceo  daytime sif-keeded  ask  	 type: request  
 daytime-equation  	 type: deduced  srequire  daytime   	 type: syntax  
 daytime-agreement  	 type: deduced  month  similar to day' year  similar to day  the moment frame can represent an incomplete request by creatine; an instance with only a few of the slots instantiated. thr attached procedures ~ weekday-equation and daytime-equation 
- derive as many additional descriptors as possible. 
     a set of time predicates  before  during  after  etc.  have been implemented that allow a user lo ask questions regarding his calendar. for example  using the natural language front end  the system can be asked:  is ira free on monday  february 1   
     the predicates take instantiated time frames as input and perform their analysis on a  need to know  basis. that is   before ml m1  will return t even if ml and m1 are incomplete  providing there is sufficient information to make the required judgment. for example  ml may specify a moment in january without saving precisely when and m1 a moment in february. in this case  the before question can be answered despite ignorance of the exact time involved. in this fashion  we go beyond winograd's original discussion of frame-based time-representations in that he did not consider the issues raised by reasoning with incomplete time specifications. of course  the nature of the incompleteness may be such that no answer is possible. in this case  the time predicates report that the frames are too incomplete for an answer. 
     the time predicates can also tolerate a certain degree of inconsistency. for example  suppose a user asks if a meeting is possible with bruce on tuesday  january 1  1. in fact  january 1 is monday. but if the frame system knows that bruce is on vacation all of january  it is more appropriate for it to reply:  i assume you mean monday  january 1. bruce will be on vacation then.  rather than first asking for a clarification and then telling the user his request will fail. 
     inconsistency is detected by if-added methods which  in the course of deriving values  observe that they have computed a slot value that conflicts with a user supplied value. a comment regarding the inconsistency is placed both at the slot level and at the frame level. for example  the moment frame for the inconsistent time 
specification given above would be: 
moment1 
	weekday 	svalue 	tuesday 	 source: user  
	monday 	 source: 	deriveo  
	self 	slogicat-state 	inconsistent  see: 	weekday  
     the time predicates report the inconsistency  and then attempt to answer the original question by reducing the inconsistency to an incompleteness. this is done by referencing an ordering on the slots corresponding to their relative reliability. year dominates month which dominates day which dominates weekday. the inferior slot values are ignored until the inconsistency is removed. the question is then answered using the resulting incomplete frame. at best  the time predicates have guessed correctly and the user has learned the answer to his question. at worst  he is alerted to the consistency and responds w i t h a repetition of his original request w i t h the inconsistency removed. 
      1  plans. it is uncommon to schedule isolated events. typically  clusters of related activities are organized around a theme; a series of meetings to discuss the state of a group's research  work bv several people on a joint paper. these clusters embody two kinds of interrelations in addition to the a k o / i n s t a n c e bond already discussed. first  there is a logical ordering of activities  which in the realms of scheduling nearly always entails a chronological ordering to be enforced. second  activities can be broken down into subactivities; these represent sub-goals with respect to the purpose*; of the activity itself. opposing prerequisite/postrequisitk links connect frames possessing a logical ordering. the values of a prerequisite slot name frames which must immediately precede it. analogous sub/super links connect frames subordinate one to another. a plan is a group of frames connected by these pointers. these implement a procedural net in the style of saccrdoti   which served to unify the ideas of abstrips and noah as schemes for representing planning knowledge. 
an example of using a plan is illustrated in the scenario. 
nudge's r1 response alludes to a pa progress report  whose frame contains the following planning links. 

interconnections describing its subgoals and the order in which thr  must be accomplished permit the creation of an instance mirroring this structure which satisfies the request. at r1 in the scenario  nudge makes a point of scheduling the preparation of a written progress report for bruce which is clearly something to be accomplished before the newly scheduled meeting with ira. the generic frame for p a - m e e t i n g has a p r e r e q u i s i t e slot containing a requirement for this and an if-needed procedure to accomplish it. 
pa-meeting 
prerequisite srequire  ako report  lif-needed  instantiate-as-required  
     frames and knowledge. frame systems have proved a eonvenient representation for knowledge that naturally falls into a taxonomy of successively more general categories. i n d i v i d u a l frames are convenient for representing concepts that have multi-dimensional descriptions which may be potentially incomplete or inconsistent. however  the limits of frames as a representational scheme are not yet clearly understood. we plan extensions into different domains to understand these limitations. 
1. bargaining between goals 
     n u d g e translates an ill-defined  under-specified scheduling request into a complete specification  represented by the frame gestalt. this gcstalt becomes the input to a scheduling program  bargain  that seeks the best time for the requested activity if the desired time is unavailable. other traditional scheduling programs could be employed as the gestalt is a complete and formal request. we use bargain since it improves upon traditional decision analysis programs by incorporating ai techniques to control the search process. 
     b a r g a i n is power-based in the sense that its competence is predicated on efficient search. it engages in a best-first search  as controlled by a static evaluation function that measures  1  the number of violated preferences   1  their respective utilities and  1  the number of remaining conflicts. bargain was originally designed by goldstein  and implemented in conn iyer by 
f. kern  1j 
     bargain employs a set of 1 search operators which constitute debugging strategies for time conflicts. one set are  resourcedrivon   i.e. they are experts on the physics of time and eliminate a conflict by altering the duration  interrupting  sharing or moving the event. the second set are  purpose-driven  and go outside the time domain to examine the topic of the meeting and alternative methods for accomplishing it an application of any one of these techniques produces a new calendar with the conflict resolved  and possibly new conflicts introduced. each strategy has a cost associated with it. barcain halts when it has found the best sequence of debugging 

knowledge repr.-u: goldstein 1 

strategies that generate a conflict free calendar within various computational constraints. 
     the applicability of a search operator - especially the purposcdriven kind - can depend on the overall knowledge context. hence  the power-based approach benefits from some hetcrarchy with the preceding knowledge-based phase. a given search operator may ask the frame system whether it applies. for example  a strategy to change participants must rely on knowledge of available candidates and the goals of the activity for suggesting suitable replacements. 
     the relative preference for different scheduling strategies is controlled by specific assertions in the how slot  which contains the names of strategies applicable to the activity in which it appears. for example  pa meetings can be postponed as a last resort and only reluctantly interrupted; as can be seen in this excerpt from the pameeting frame. 
pa-meeting 
	how 	sdefault 	postpone 	 utility: high   maximum: n 
	interrupt   u t i l i t y : 	medium  
     our approach to power-based scheduling parallels the conservative development of the knowledge-based component in thai the well-understood techniques of decision analysis have been augmented only as required. this augmentation has involved applying ai search techniques to improve the efficiency with which a best compromise is found. 
1. conclusions 
      1  f r l - 1 provides a simple  but powerful representation technology. frames are generalised property list  sharing much of the simplicity of traditional attribute/value representation schemes. yet the addition of a few capabilities -- comments  constraints defaults  procedural attachment  inheritance -- provides a great deal more power and economy in the representation. krl and owl are more ambitious and more complex  and may well apply to contexts in which frl-1 proves insufficient. but this remains to be seen. we plan further experiments with frl-1 to identify its strengths amd weaknesses. 
      1  whether frl-1 or some other ai language is employed  our experience with the nature of informal requests  the issues raised by multiple inheritance paths  the interaction between a searrh program and a rich knowledge base  and the epistemology of information transfer activities  time  place and people will surely be relevant to the design of knowledge-based ai programs. 
      1  frl is an experiment in the utility of the frames. our experience is that clustering the answers to common questions about the frame structure for a concept provides a useful representation paradigm. the frame gestalt derived from this frame structure supplies missing information similar to that generated by competent human schedulers to handle informal requests. 
      1  the entire system can be viewed from another perspective. since a frame's behavior is actually governed largely by the attached procedures  it can be viewed as an accessing scheme to the underlying procedural knowledge. thus  frames implement goal-directed invocation  as in planner   but with pattern matching replaced by the more general process of frame instantiation. 
      1  nudge is a step towards an ai system with common sense. by generating a complete frame gestalt  the system minimr/.es the possibility of overlooking obvious alternatives. defaults  p