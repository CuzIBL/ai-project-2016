 
resource allocation is a key problem in autonomic computing. in this paper we use a data center scenario to motivate the need for decentralization and cooperative negotiation  and describe a promising approach that employs preference elicitation. 
1 resource allocation in an autonomic computing system 
an autonomic computing system is designed to drastically reduce the role of human administrators by automating most of the managerial decision making  kephart and chess  1 . automated resource allocation is necessary for an autonomic computing system to optimize its performance. in the large  distributed autonomic computing systems we would expect in big businesses  resource allocation will occur at multiple scales. local allocation decisions will be made within individual elements  servers  databases  storage units  etc.  and small clusters of elements. local clusters will contend for pools of resources in the larger domain  or across administrative domains. although we can generally assume that elements in an autonomic computing system of a single corporation will be cooperative  sharing the common goal of optimizing total business value  the complexity of local information will often preclude centralized allocation across the entire system. cooperative negotiation  using preference elicitation techniques  can be an effective approach to decentralization. 
　to motivate the problem  consider the problem of resource allocation within a data center. the data center provides information technology resources to multiple organizations  each in a separate domain governed by a workload manager  wlm . each wlm decides how to allocate resources in its domain to maintain quality of service  qos  for each of a set of n classes of transactions. 
　the qos specification for a transaction class c includes terms describing monetary payments or penalties as a function of the measured attributes of the service provided to that class by the data center. for simplicity  we shall consider here 
just a single attribute  the response time tc for class c. we denote the revenue function for class c  including all rewards and penalties  by rc tc . 
   in a real system  a wlm can adjust various parameters / for multiple resources. here  we assume a single resource  with quantity l. given fixed  and class demand vector and assuming that the resources have no incremental costs  the expected total revenue is then: 
		 1  
a wlvts internal resource optimization problem is to find a feasible that maximizes eq.  1 . 
　to handle fluctuations in client demand  a single provisioncr at the data center periodically reallocates resources among the wlms. denoting an individual wlm by i  the resource allocation problem for the provisioner is to compute: 
		 1  
the provisioner can compute  1  centrally if it has a good model of the internal operation of each wlm and can obtain all relevant state information. in a real system however  the model and data necessary to compute pr tc  may be complex and large. moreover  in a system with transient  heterogeneous components  e.g.  differently configured wlms or different components altogether   the internal models of the components may simply not be available to the provisioner. in these cases  it is necessary to decentralize the resource allocation problem. that is  wlms would perform local computations and send summary information to the provisioner. 
　a natural division of labor is to have each wlm send its entire ui curve  so that the provisioner can compute eq.  1 . figure 1 shows an example of curves from two wlms  each with two transaction classes.1 the provisioner wishes to find the peaks of the aggregate curve  also shown. 
1 cooperative negotiation 
to compute its full ut curve  a wlm must solve eq.  1  for each feasible l1. if each rc is in a computationally manageable form  e.g.  piecewise linear or quadratic  and we have a 
   1  we computed the utility curves assuming a simple m/m/l queue model for each tc. i is the total service rate available  and the fc component of indicates the fraction of l given to class c. 

1 	poster papers 


figure 1: maximum system utility as a function of allocation  with total resources l - 1. curve  wlm a  indicates maximum utility to a as a function of la. curve  wlm b  indicates maximum utility to b as a function of lb. curve 
 total  indicates total utility as a function of la provided to a  with l-la provided to b . 
simple model for tc  e.g.  m/m/l queue   then computing each u  lj  point may be tractable. however  in typical real systems the dependency of the service attributes upon resources and demand is likely to be sufficiently complex as to require a combination of optimization and simulation to compute each u  l   point. moreover  wlms will often have substitutable and complementary preferences over different quantities of multiple goods  giving rise to large  expensive-to-compute  multidimensional u  curves. such complexities would make it in feasible for a wlm to send its entire u  to the provisioned 
　instead  we propose to model the resource allocation problem as cooperative negotiation. in the context of autonomic computing  cooperative negotiation is not simply noncooperative negotiation with the simplifying assumption that agents are non-strategic. rather  the objective is to achieve the right balance between global optimization and negotiation time. we are developing preference elicitation techniques  boutilier  1  to address this problem. we can view the negotiation for resources between the wlms and the provisioner as involving computation or  elicitation  of relevant parts of the u  curves. 
　partial elicitation may be feasible in the case of negotiation among wlms for different resource levels. it will often be possible to identify the region of z-space in which the optimal allocation lies without complete knowledge of these utility functions. the provisioner could be given a small number of samples of the utility functions u  l1  for wlms /. making simple monotonicity assumptions  the provisioner could determine the region of allocation space in which the optimal allocation lies.1 for instance  having samples of the two  lower   curves in figure 1 at points lx - {1 1} for / = a b  is sufficient to determine that the optimal allocation lies somewhere in the region   1 . 
we are currently developing incremental utility elicitation 
1
   monotonicity of ui seems natural  corresponding to a  free disposal  assumption. 
procedures in which the provisioner gradually narrows down the region in which the optimal allocation lies until a decision which is guaranteed to be e-optimal is found. a rough sketch of one such procedure is presented here. assume that each wlm has provided evaluations of its utility function u  at a set of m sample points  we assume that is the maximum value of l  and bounds u  under any allocation. 
with this small set of samples  the provisioner is assured that 
 armed with 
this information  it is reasonably straightforward to determine the maximum regret of any allocation l. furthermore  we can also determine the allocation that has minimax regret given this incomplete knowledge of the utility function: 

here ut ranges over the set of utility functions u  consistent with the bounds above. minimax regret is a reasonable error criterion  and the minimax-optimal allocation l* can be determined using a tractable scries of linear programs. 
　incremental elicitation arises when the minimax-optimal allocation has a max-regret level that is too high  say  greater than e. in this case  the provisioner does not have enough information about the ut curves to determine an allocation whose worst-case error is less than  this necessitates additional samples of the u  curves. we have developed intelligent query strategies that efficiently determine points l  for which knowledge of 1  l   will  quickly  reduce minimax regret. once sufficiently many points have been evaluated  minimax regret will reach an acceptable level and an allocation whose error is bounded by e can be offered. wc do recognize that the procedure becomes more complicated with multidimensional u  curves. 
　this procedure obviates the need for wlms to compute their entire utility curves. the complex optimization required to determine u  l  need only be applied by wlm / at a small collection of points; and these points are determined by the provisioner based on information about the utility functions of other wlms. in this sense  such incremental elicitation techniques can truly be viewed as a form of collective negotiation between wlms and the provisioner. 
　we are exploring error criteria other than minimax regret in our general model. optimization w.r.t. specific utility constraints  and determining queries that reduce error  would both require tailoring to the specific criterion adopted; but the same incremental framework still applies. for instance  if distributional information over the  j  curves is available  bayesian decision criteria could be used  e.g.  an allocation that maximizes expected utility w.r.t. pr w  . 
