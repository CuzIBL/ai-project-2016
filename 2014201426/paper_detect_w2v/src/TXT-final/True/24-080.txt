 
normally  constraint networks are undirected  since constraints merely tell us which sets of values are compatible  and compatibility is a symmetrical relationship. in contrast  causal models use directed links  conveying cause-effect asymmetries. in this paper we give a relational semantics to this directionality  thus explaining why prediction is easy while diagnosis and planning are hard. we use this semantics to show that certain relations possess intrinsic directionalities  similar to those characterizing causal influences. we also use this semantics to decide when and how an unstructured set of symmetrical constraints can be configured so as to form a directed causal theory. 
1. introduction 
finding a solution to an arbitrary set of constraints is known to be an np-hard problem. yet certain types of constraint systems  usually those describing causal mechanisms  manage to escape this limitation and permit us to construct a solution in an extremely efficient way. consider  for example  the task of computing the output of an acyclic circuit consisting of a large number of logical gates. in theory  each gale is merely a constraint that forbids certain inputoutput combinations from occurring  and the task of computing the output of the overall circuit  for a given combination of the circuit inputs  is equivalent to that of finding a solution to a set of constraints. yet contrary to the general constraint problem  this task is remarkably simple; one need only trace the flow of causation and propagate the values of the intermediate variables from the circuit inputs down to the circuit output s . this forward computation encounters none of the difficulties of the general constraint-satisfaction problems  thus exemplifying the simplicity inherent to causal predictions. 
this work was partially supported by the national science 
foundation  grant #iri-1 and by the air force office of scientific research  grant #afosr-1. 
judea pearl 
c o m p u t e r science department 
university of california  los angeles los angeles  c a . 1 u.s.a. 
　　the aim of this paper is to identify and characterize the features that render this class of problems computationally efficient  thus explaining some of the reasons that causal models are so popular in the organization of human knowledge. note that this efficiency is asymmetric; it only characterizes the forward computation  but fails to hold in the backward direction. for instance  the problem of finding an input combination that yields a given output  a task we normally associate with planning or diagnosis  is as hard as any constraint satisfaction problem. thus  the second aim of our analysis is to explain how a system of constraints  each defined in terms of the totally symmetric relationship of compatibility  can give rise to such profound asymmetries as those attributed to cause-effect or inputoutput relationships. at first glance  we might be tempted to attribute the asymmetry to the functional nature of the constraints involved. however  functional dependency in itself cannot explain the directional asymmetry found in the analysis of causal mechanisms such as the logic circuit above. imagine a circuit containing some faulty components  the output of which may attain one of several values. the constraints are no longer functional  yet the asymmetry persists; finding an output compatible with a given input is easy while finding an input compatible with a given output is hard. this asymmetry between prediction and planning seems to be a universal feature of all systems involving causal mechanisms  shoham  1   a feature we must emulate in defining causal theories. 
　　our starting point is to formulate a necessary and sufficient condition for a system of constraints to exhibit a directional asymmetry similar to that characterizing causal organizations. basically  the criterion is that of modularity: there should exist an ordering of the variables in the system such that imposing constraints on later variables would not further constrain earlier variables. intuitively  it captures the understanding that predictions are useless for diagnosis; e.g.  given a set of findings  we cannot improve the accuracy of our diagnosis by concentrating our analysis on the patient's prospects for recovery. likewise  in the context of the logic circuit example  modularity asserts that if we wish to add a new gate  then  as long as we do not connect to its 

output  we can add this gate anywhere in the circuit without perturbing the circuit's behavior. starting with modularity as a definition of causal theories  section 1   we show1 that it is tantamount to enabling backtrack-free search  for a feasible solution  along any natural ordering of the theory. we then explore methods of constructing causal specifications for a given relation  that is  specifications that permit objects from the relation to be retrieved backtrackfree along some ordering. such methods are investigated along two dimensions: inductive and pragmatic. along the inductive dimension  section 1   we observe the tuples of some relation p  and we seek to represent this set of observations by a causal theory that is as simple as possible. we provide a formal definition of simplicity and show that together with the insistence on backtrack-free predictions  it leads to a natural definition of intrinsic directionality  matching our perception of causal directionality in logical circuits and other physical devices. 
　　along the pragmatic dimension  section 1   we start with an unordered collection of constraint specifications  which might represent some stable physical laws  and we seek an ordering of the variables such that the overall system constitutes a causal theory. clearly  not every system of constraints can turn causal by a clever ordering of the variables. the criterion for the existence of such an ordering depends on both the nature of the constraints and the topology of the subsets of variables upon which the constraints are specified. some constraint systems are amiable to causal ordering by virtue of their topology alone  regardless of the content of the individual constraints. these are called acyclic constraint systems  originally studied in the literature of relational databases   beeri et al.  1 . in contrast  section 1 ascribes causal ordering to a more general set of topologies  but imposes special requirements on the character of the individual constraints. 
　　our basic requirement for a k -variable constraint to qualify as a description of a primitive causal mechanism  is that at least one set of k-1 variables must behave as inputs  or causes  relative to the remaining kth variable  to be regarded as an output or an effect   that is  no value combination of these k-1 variables can be forbidden  and each such combination must be compatible with at least one value of the k* variable. additionally  in order for the system as a whole to act as a causal system  mechanisms must be ordered in a way that prevents conflicts among their predictions  hence  we require that no two constraints should designate the same variable as an output. we provide effective procedures for:  1  deciding if such an ordering exists and   1  identifying such ordering whenever possible. the ordering found can be used to facilitate search and retrieval  and are similar to those used to describe the operation of physical devices  kuipers  1; iwasaki and simon  1; de-kleer and brown  1 . 
proofs can be found in  dechter and pearl  1 . 
1. definitions and preliminaries: constraint specifications and causal theories 
definition 1  constraint specification : a constraint specification  cs  consists of a set of n variables x = each associated with a finite domain  
dorrii domn  and a set of constraints  on subsets of x. each constraint ci is a relation on a subset of variables namely  it defines a subset of the cartesian product of the scheme of a cs is the set of subsets on which constraints are defined  scheme and each such subset is called a component. a solution of a given cs is an assignment of values to the variables in x such that all the constraints in the cs are satisfied. a constraint specification cs is said to define an underlying relation rel  cs   consisting of all the solutions of cs. 
definition 1  causal theories : given a constraint specification cs  its underlying relation called a causal theory  of p . 
　　although condition  1  may seem hard to verify in practice  it nevertheless provides an operational definition for causal theories. to test whether a given cs is causal relative to ordering d  we need to find the set of solutions to the given cs  project back these solutions on the strings of variables   then check whether 
each such projection coincides exactly with the set of solutions to a smaller cs  one consisting of only those constraints that are defined on variables taken from 
 in section 1 we will show that certain types of specifications possess syntactic features that render them inherently causal  in no need of the elaborate test prescribed by  1 . for example  the specifications provided by a collection of logic gates always constitutes a causal theory relative to any ordering compatible with their standard assembly in acyclic circuits  i.e.  no variable can serve as an output of two different gates . similarly  linear inequalities and propositional clauses  under certain conditions  can be assembled into causal theories by finding appropriate orderings of the variables. 
	dechter and pearl 	1 




1. synthesizing causal theories and uncovering causal directionality 
our ultimate goal is to construct causal theories for the information we possess. in this section we analyze two tasks. first  we assume that the information we have is a database tabulating explicitly the tuples of some relation p  and our task is to replace the table by a more economical representation  one that enjoys the computational advantage of causal organizations. such a task would be useful in machine learning applications  where the tuples represent a stream of observations and the causal theory forms a convenient model of the environment  facilitating modular organization and fast predictions. in our second task  the information will be given in the form of a preformulated constraint specification cs  and the problem will be to construct a causal theory without explicating the underlying relation of cs. 
task 1:  decomposition  given a relation p and an ordering d  find a causal theory for p along d. 
　　barring additional requirements  a causal theory can be obtained by a trivial construction. for instance  the complete dag generated by directing an edge from each lower variable to every higher variable is clearly a causal model of p  and the desired causal theory can be obtained by projecting p onto the complete families 
we next present a scheme for constructing a causal theory on top of an edge-minimal model of p  that is  a dag d from which no edge can be deleted without destroying its capability to support a causal theory of p. 
　　the algorithm that follows constructs an edge-minimal causal model of p. 

to form a causal theory  we simply pair this dag with the projections of p on its families. 
　　the construction above shows that a causal theory can be found for any arbitrary ordering. however  we will next show that certain orderings possess features that render them more natural for a given relation. it is these features  we conjecture  which give rise to the perception that certain relations possess  intrinsic  directionalities. 
definition 1  model preference : a causal model d1 is said to be at least as expressive as d1  denoted if for any causal theory there exists a causal 
theory such that a dag d is said to be a minimal causal model of p if it is not strictly more expressive than any other causal model of p. in other words  the set of relations modeled by d is not a superset of any set of relations  containing p  that can be modeled by some other dag. 
　　clearly  every minimal model must be edge-minimal  but not the converse. for example  the complete dag  is an edge-minimal causal model 
of the relation given by the formula   but it is not a minimal model  because it is strictly more expressive than the dag  the latter can model only relations where x does not constrain y. polynomial graphical methods for testing preference and equivalence between causal models are described in  pearl et al.  1j. however  finding a minimal model for a given relation may be exponentially hard. 
definition 1  intrinsic directionality : given a relation p  a variable x is said to be a direct cause of variable y  if there exists a directed edge from x to y in all minimal causal models of p. 
example 1. consider a relation p specified by the table of 
figure 1 a . the table is small enough to verify that the dag in 1 b  is the only minimal causal model of p. for example  the arrow from x to z cannot be reversed  because p cannot be expressed as a set of constraints on the families of the resulting dag  {yz zx xyw . adding an arc y --- x to the resulting dag would permit a representation of p  using the scheme  yz yzxy yxw    but would no longer be minimal. it is strictly more expressive than the one in 1 b   because  unlike the latter  it also models relations in which some x y pairs are forbidden. the causal theory corresponding to the dag of 1 b  is shown in 1 c   matching our intuition about the causal relationships embedded in 1 a . note that the same minimal model ensues  though not the same theory  were we to destroy the functional dependencies by adding the tuple 1 to the table in 1 a . however  it is no longer unique. 
	dechter and pearl 	1 

	 a  	 b  	 c  
figure 1: the directionality shown in  b  is intrinsic to the relation in  a   because  b  is a unique minimal causal model of  a . 
　　verma and pearl  have used minimal model semantics to construct a probabilistic definition of causal directionality. they have also developed a proof theory which  under certain conditions provides efficient algorithms for determining causal directionality without examining the vast space of minimal models  pearl and verma  1 . whether similar conditions exist in the relational framework remains an open problem. 
task 1: given a constraint specification cs  find a dag d and a constraint specification is a causal theory of rel cs . 
this task can be solved by executing algorithm 
adaptive-consistency  dechter and pearl  1  along an arbitrary ordering d: 
build-causal-1  cs d  
1. begin 
1. execute adaptive-consistency w.r.t order d. 
1. take the graph induced by adaptive consistency and direct edges from lower to higher variables  call this dag d. 
1. return the set of constraints cs' induced by adaptive consistency. 
1. end 
the resulting pair  is a causal theory of cs. 
algorithm adaptive-consistency is known to be exponential in the induced width w* of scheme cs   dechter and pearl  1   hence  it is a practical procedure only for sparse constraint topologies. 
1. finding causal ordering 
in this section we characterize sufficient conditions under which causal theories can be assembled from pre-existing constraint specifications. part of these conditions relate to the nature of the individual constraints; each must permit a causal relationship to exist between variables designated as inputs and that designated as the output. additionally  to avoid conflicts in assembling the overall theory  we shall insist that no two constraints designate the same variable as their output. whether a given cs can comply with the latter restriction depends only on the topological property of scheme cs  and is captured in the notion of an ordered cs. 
definition 1: an ordered constraint specification  ocs  is a pair  d cs  consisting of a dag d  and a constraint specification cs in which every component is a family of d. 
for example  a cs with constraints defined on 
 ab ac bcd ce def  forms an ocs with the dag of figure 1. however  if instead of bcd  we had two separate constraints  on bd and cd  this dag could no longer be paired with the cs to form an ocs and  in fact  no such dag exists. 
　　a scheme that permits the formation of an ocs is called a web and can be identified in quadratic time  dalkey  1 . the following procedure1 for identifying ocs's parallels the notion of web's unfolding in  dalkey  1 : 
procedure buitd-dag-1  cs  
1. while scheme  cs  is non-empty do 
1. if there is a component s scheme  cs  containing a lonely variable x  i.e.  one that participates in only one constraint   then 
1. direct edges from all variables in s- x towards x  and remove s from scheme  cs  . 
1. else  return failure. 
1. end while 
1. return the dag d generated. 
theorem 1: procedure build-dag-1  cs  returns a dag d iff  d  cs  is an ocs  else  no such dag exists.  
task 1: given a cs  find  whenever possible  a dag d s.t.  is a causal theory of rel  cs  . 
　　in general  this task may require insurmountable amount of computations. the task becomes easier when the cs can be paired with a dag d to form an ocs by the procedure above. still  not every ocs pair  d cs  corresponds to a causal theory according to criterion  1 . we next show that if the constraints residing in a given ocs meet certain conditions  then the ocs always yields a causal theory. such constraints will be called causal. 
definition 1  causal constraints : a constraint  c  on a set of variables  is said to be causal with respect to a subset o of its variables if the following two conditions are met: 
i . any assignment of values to 	is legal. formally  if then 


	dechter and pearl 	1 

　　in case algorithm legal-dag-1  fails  we know that the specifications do not lend themselves to causal modeling by straightforward variable ordering. it is still feasible though that causal theories could be formed by treating clusters of variables as single objects. for example  the ordering scheme of  iwasaki and simon  1  illustrates how such clusters can be organized systematically  and uniquely  whenever the constraints are linear equalities having a unique solution. the basic build-dag-1 algorithm can be used to identify promising candidates of variable clusters  and to assemble more general causal theories than those treated in this paper. 
1. conclusions 
this paper presents a relational semantics for the directionality associated with cause-effect relationships  explaining why prediction is easy while diagnosis and planning are hard. we used this semantics to show that certain relations possess intrinsic directionalitics  similar to those characterizing causal influences. we also provided an effective procedure for deciding when and how an unstructured set of constraints can be configured so as to form a directed causal theory. 
　　these results have several applications. first  it is often more natural for a person to express causal relationships as directional  rather than symmetrical constraints. the semantics presented in this paper permits us to interpret and process directional relationships in a consistent way and to utilize the computational advantages latent in causal theories. second  the notion of intrinsic directionality suggests automated procedures for discovering causal structures in raw observations or  at the very least  for organizing such observations into structures that enjoy the characteristics of causal theories. finally  the set of constraint specifications that can be configured to form causal theories constitutes another  island of tractability  in constraint satisfaction problems. the procedure provided for identifying such specifications can be used to order computational sequences in qualitative physics and scheduling applications. 
