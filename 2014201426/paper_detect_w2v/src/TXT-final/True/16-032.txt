 
for an adequate interpretation of image sequences it is not only necessary to recognize objects and object positions but also certain interesting temporal developments of the scene  called events. in this paper we discuss event models for traffic scenes as high-level conceptual structures which permit interfacing to an existing natural language dialogue system. event models are declarative descriptions of classes of events organized around verbs of locomotion. they involve components which are directly related to the deep case structure of a corresponding natural language 
description. event models may be used for bottom-up scene description as well as top-down question-answering. they may also incorporate expectations about a scene  thus providing an interface 
to experience and common sense. 
1. introduction 
this paper deals with high-level image-sequence interpretation  i.e. with obtaining a meaningful description of time-varying visual data at a high level of abstraction. while in the traditional single-image paradigm of computer vision an interpretation in terms of object names and locations may be considered adequate  this is clearly not the case for an image sequence. image sequences have much the same semantic potential as silent movies. hence computer vision should ultimately be able to extract results comparable to human understanding of silent movies. while the silent-movie paradigm does not define  high-level interpretation   it suggests conceptual structures which are similar  if not partially identical  to meaning representation of natural language. as miller and johnson-laird  put it:  percepts and words are merely avenues into and out of this conceptual structure.  
in this contribution we propose conceptual structures for a limited domain: motion in a traffic scene. traffic scenes have been used in hamburg for a long time both for vision and natural language research. on the vision side techniques have been developed to isolate moving objects and obtain 1d-shape descriptions ; the natural language group implemented a powerful dialogue system for simulated static scenes . recently efforts were started to connect both systems  with the ultimate goal of obtaining natural language descriptions of real-world image sequences . 
our approach to motion representation and recognition is strongly related to the pioneering work of badler  and the more recent work of tsotsos . both use a hierarchy of motion concepts to build a high-level description from low-level information. motion primitives such as 'location-change' can be immediately retrieved from basic scene analysis data. badler also generates simple verbal descriptions based on instantiated motion concepts corresponding to english verbs of motion and directional adverbials. 
in section 1 a representational scheme will be presented which extends this work. we introduce  event models  which specify certain interesting subspaces of four- dimensional space-time continuum  much in accord 
with webster's definition . event models support bottom-up scene description as well as question 
answering. 
in section 1 we discuss issues of evaluating event models. 
1. event models 
in the preceding section an event has been loosely introduced as an interesting occurrence in a time-varying scene within a certain time interval and within certain spatial boundaries. in this section we shall define event models as a representation of classes of events and as a tool to recognize events in a given scene. event models will be organized around verbs of change - currently restricted to verbs of locomotion such that each event model describes events whose natural language description involves a particular verb. 
it is convenient to sidestep scene analysis issues by assuming a certain standard representation of the analyzed scene. we use a  geometrical scene description  in terms of symbolic object names  object types  and 1d shape and position for equally spaced time slices  see  for details . 
event models specify predicates about the geometrical scene description in a relational form  e.g. 
 isa 1 vehicle  
 behind 1 1bj1time1 
the first component of a tupel specifies the relation  all other components are either constants  vehicle  or unbound token variables  1bj1  1bj1  timed. the a -operator - introduced in  - denotes evaluation at a time instance or for all instances in an interval. time 

	b. neumann and h.-j. novak 	1 
is considered discrete. relations may be primitive 

 directly computable or retrievable from the scene data  or defined in terms of other relations. 
a first example of an event model is given below. it specifies predicates which must be true for an event to be verbalized using  move . 
 event-model e-move 
 parameters 1bj1 time1 time1  
 kernel 
 in-motion 1bj1 a  time1 time1   
 c-frame c-m1ve1 c-m1ve1 ...   
an event model consists of a name and parameter section similar to a procedure declaration. the kernel specifies predicates with respect to the geometrical scene description. in-motion is considered a primitive predicate. the event model is linked to possible case frames listed in the c-frames statement. a case frame connects variables of an event model with the deep cases of a natural-language utterance. c-m1ve1 involves a source and a goal case  other case frames may involve other case combinations. 
 case-frame c-m1ve1 
 cases 
 verb move  
 agent 1bj1  
 start timed 
 end time1  
 source 1bj1atime1  
 goal 1bj1atime1   
 e-model e-move   
in the case of question answering the parser uses the variables specified in a case frame to generate additional constraints supplementing the event kernel such that any instantiation of the event model is a positive instance for the question at hand. from the question 
¡¡'did the red lorry move from the drive-way to the parking lot   we get the constraints 
 isa 1bj1 lorry  
 color 1bj1 red  
 within  time1 time1   past-time1 past-time1   
 isa source 1 driveway  
 mark s1urce1bj1s time1  
 is a g1al1 parking-lot  
 mark g1al1bj1atime1  
conversely  if bottom-up scene description is required  case frames specify from which  instantiated  variables of an event verbalizations are to be generated. many of the involved mechanisms  e.g. the generation of time bounds or mark for relating two locations are available from previous work  1   but they must be remodelled to permit both bottom-up and top-down processing. 
event models may be partially defined by other event models  hence a hierarchy is induced. model 1 is said to be a specialization of model1  if its kernel contains the kernel of model1  after uni- fication of variables  or  in a logical interpretation  if it implies mode!1. 
in the following example it is assumed that approach and as stated earlier many verbs of locomotion cannot be used without certain knowledge about what is typical and what is not. consider the german verb  weitergehen   appro*   to carry on walking  . on the surface it may describe an uninterrupted walking event  but clearly it implies that halting had been expected. similarly  'turn off  is used when an object continues its path along a way which deviates from the natural extension of its previous path. expectations may be specified in event models using the following notation: 
 expect  expectations  in-view-of  premises   
the expect construct relates two partial scene descriptions  where the description termed  premises  provides the scene data on which the expectations are to be based. usually the whole scene up to a certain time or except certain components constitutes the premises. in those cases it is convenient to use a shorthand this-scene before  time  or this-scene without  objects . in the following example we define the event model carry-1n-walk1 using the expect construct. 

the expect notation is a first step towards interfacing event models with several knowledge sources other than scene data  prominently experience about past events and common sense. in our system we plan to generate expectations by matching the premises with encodings of 
typical events. 
1. event recognition 
an event model may be viewed as a template which must match pertinent scene data  verbal information and background knowledge for an event to be true. from the 
examples it should be plausible that predicates are involved where the truth value can indeed be determined 
given certain arguments and the above mentioned 
knowledge sources. some of the predicates are very 
simple  e.g. in-motion   others are less so  e.g. expect . very little has been said  however  about the process of instantiating a complete event model  i.e. event recognition. in this section we shall discuss some features of the control structure. an 

1 	b. neumann and h.-j. novak 
implementation is currently being prepared. 
the general framework is a backtracking control regime induced by alternative predicate instantiations. time variables  however  play a special part in event recognition and are treated differently. note that many predicates involving time as well as durative events like move are also satisfied for subintervals if they are satisfied for some interval at all. for these cases it is convenient to keep track of possible values using 
linear inequalities. following the idea in   we can then apply linear programming methods to determine satisfiability each time a new constraint is added. solutions may be obtained satisfying the inequalities and maximizing some criterion function  e.g.  the most recent instance'  or  the longest interval . 
for an effective search it is necessary to control the order of alternative instantiations  the order of predicate evaluation and the order of invoking event 
models. 	a 	useful 	criterion for controlling instantiations is temporal and spatial proximity to the 
current focus of attention. 
the order in which the predicates of an event model should be evaluated depends decisively on the constraints imposed by the natural language interface. decision questions may propose specific events 
 e.g.  did a yellow car turn off schlueterstreet    where event model instantiation is constrained by agent and source specif ications. on the other hand  event models must also be instantiated in a free verbalization context  e.g.  what happened   . it is one of the advantages of the strictly declarative definition of event models that they can be employed for all cases ranging from recognition to verification. for an effective evaluation predicates may be dynamically ordered according to their degree of instantiation such that the branching rate can be kept low. 
finally  for bottom-up scene description one has to hypothesize one out of many event models. we presently 
consider ca. 1 verbs of locomotion  listed in   and a corresponding number of event models. they are organized into a specialization hierarchy as discussed in the previous section. this makes it possible to proceed from general event hypotheses  e.g. move  to increasingly special event hypotheses  e.g. cross  
similar to the control structure used in   for that matter  in other hierarchical systems. 
1. conclusions 
we have proposed a representation for event models which is designed to meet four main objectives. 
 i  event models provide a precise yet readable definition of a class of events. this is achieved using a relational notation with a clear logical interpretation. 
 ii  event models support event recognition in the framework of computer vision. a scene is assumed 
to be analyzed up to the level of object 
recognition before event recognition begins. although the state of the art does not yet permit automatic object recognition in real-life traffic scenes  this seems to be an attainable goal. 
 iii  event models are linked to a corresponding natural language description. although their conceptual structure is oriented towards visual data  they support both question-answering and free verbalization. 
 iv  event models may refer to expectations and hence interface to contextual knowledge  experience and common sense. this allows to model events in terms of deviations from the expected - a feature whose importance has long been recognized  1 . 
the evaluation strategy has been outlined. an implementation is underway. 
