
to be successful recommender systems must gain the trust of users. to do this they must demonstrate their ability to make reliable predictions. we argue that collaborative filtering recommendation algorithms can benefit from explicit models of trust to inform their predictions. we present one such model of trust along with a cost-benefit analysis that focuses on the classical trade-off that exists between recommendation coverage and prediction accuracy.
1 introduction
recommender systems have been developed as a solution to the well documented information overload problem.  resnick et al.  1    breese et al.  1 . these systems employ techniques from user profiling  machine learning and information filtering to produce individual recommendations of items to suit users' requirements. collaborative filtering  cf  recommenders operate on the assumption that similar users share similar tastes; recommendations are generated for a target user by analysing the rating histories of a set of suitable recommendation partners.
　the traditional cf approach relies heavily on the similarity between the target user and its partner as a way to weight each partner's predictions  resnick et al.  1 . in this paper we propose that  in addition  it is possible to model the trustworthiness of these partners  and to use this as another factor to influence their prediction contributions. indeed the idea of explicitly modeling and using trust in filtering tasks is becoming increasingly popular. for example   golbeck and hendler  1  presents a trust-based email filter  trust scores in this system are calculated through inference and propagation  of the form  a   b   c     a   c   where a 
b and c are users with interpersonal trust scores. the trustmail application  golbeck and hendler  1  looks up an email sender in the reputation/trust network  and provides an inline rating for each mail. these trust values can tell a user if a mail is important or unimportant. trust values in this system can be defined with respect to a certain topic  or on a general level  in a similar manner to work in  o'donovan and smyth  1a  and  o'donovan and smyth  1b .  avesani et al.  1  describe a trust-based recommender system in the skiing domain. however these approaches rely on models of trust that are built from the direct feedback of users; in short  individual users are expected to indicate those partners that they place the most trust in and a trust model is generated from the resulting graph of relationships.
　 massa and bhattacharjee  1  build a trust model directly from explicit user-provided trust ratings. this work is carried out using the popular epinions.com service. epinions.com is a web site that allows users to review various items  cars  books  music  etc. . in addition they can assign a trust rating to reviewers based on the degree to which they have found them to be helpful and reliable in the past.  massa and bhattacharjee  1  argue that this trust data can be extracted and used as part of the recommendation process  especially as a means to relieve the sparsity problem  lack of overlapping user ratings  that has hampered traditional collaborative filtering techniques  o'sullivan et al.  1 .  massa and bhattacharjee  1  argue that it is possible to compare users according to their degree of connectedness in the trust-graph encoded by epinions.com  but do not show that this method of comparison maintains recommendation accuracy.
　our benchmark algorithm uses resnick's standard prediction formula which is reproduced below as equation 1; see also  resnick et al.  1 . in this formula c i  is the rating to be predicted for item i in consumer profile c and p i  is the rating for item i by a producer profile p who has rated i. in addition  c and p refers to the mean ratings for c and p respectively. the weighting factor sim c p  is a measure of the similarity between profiles c and p  which is traditionally calculated as pearson's correlation coefficient.
		 1 
　as we have seen above resnick's prediction formula discounts the contribution of a partner's prediction according to its degree of similarity with the target user so that more similar partners have a large impact on the final ratings prediction.
　we argue that there is another factor which might be used in conjunction with similarity to influence recommendation and prediction. we believe that the reliability of a partner profile to deliver accurate recommendations in the past is another important factor  one that we refer to as the trust. intuitively  if a profile has made lots of accurate predictions in the past  then they can be viewed as more trustworthy than another profile that has made many poor predictions. we describe a computational model of trust that can be generated unobtrusively  during the normal operation of a cf recommender system  by mining the recommendation histories of different recommendation partners. we re-evaluate work in  o'donovan and smyth  1b  which shows that trust-based methods can improve prediction accuracy when compared to existing cf approaches. however  we describe a more comprehensive cost-benefit analysis by considering three accuracy benefits against changes in recommendation coverage.
1 a computational model of trust
intuitively  if a recommendation partner  profile  has made many good predictions in the past  it can be viewed as more trustworthy than one with many poor predictions. the trust model  o'donovan and smyth  1b  is based on this idea. we differentiate between profiles generating recommendations  producer profiles  and those receiving recommendations  consumer profiles  in a particular recommendation session. to generate a predicted rating  p i   for item i for some consumer c  conventional cf systems draw on the services of a number of producer profiles  combining their individual recommendations according to some suitable function  such as resnick's formula.  see equation 1 . our trust model depends on whether these predicted ratings are correct relative to the true ratings of the consumer  c i ; see equation 1.
		 1 
1 item-level trust
we define the item-level trust for each producer p with respect to a given profile item i to be the percentage of times that p has made a correct rating prediction for i across some set of consumers; see equation 1. to do this we consider the rating that p alone predicts for i  for the consumer in question. we define the recset p   equation 1  to be the total set of rating predictions that p has made; each  rk ik  refers to a rating prediction  rk that p has made for item ik. similarly  corrset p  is the subset of these ratings that are considered to be correct; equation 1.

corrset p  = { ck ik  （ recset p  : correct ik p ck }
 1 
　thus  the trust of p in relation to item i is a measure of how often p's predicted ratings for i have been considered correct in the past. this information can be accumulated during the normal course of operation of a cf recommender system in a variety of ways. for example  users could be asked their

figure 1: recommendation error.
opinions of the predicted ratings  or this might be confirmed by evaluating the user's actions on the basis of the rating predictions; if a user buys a highly rated item then we might assume that the high rating was justified.
1 trust-based recommendation
we incorporate our trust-model into cf by modifying the standard resnick prediction algorithm in 1 ways to produce 1 different trust-based variations. resnick's standard prediction formula is given in equation 1. normally it uses the similarity between the target user profile and each recommendation partner profile to weight their prediction contributions  shown as sim c p  in equation 1; equation 1 shows our modifications to this standard equation by adding the w c p i  weighting term. our first variation  witem  modifies this so that the weighting term is a combination of item trust and profile similarity; we use the harmonic mean of trust and similarity. the fitem approach differs in that it uses profile similarity as the weight factor  but filters out profiles that fall below a given trust level for the target item prior to recommendation. finally  the citem approach uses the obvious combination of witem and fitem.
		 1 
1 evaluation
for the following evaluation we use the 1 profiles from the movielens data-set  split into 1% as training profiles and the remaining 1% as test profiles. during training we use a leave-one-out approach to build our trust model over the training profiles. briefly  each training profile is used as a consumer with the remaining acting as producers. itemlevel trust values are computed on the basis of the correctness or otherwise of the producer predictions. during testing  we evaluate the predictions of the training profiles for each of the items in the test profiles using our 1 basic algorithms  resnick  witem  fitem  citem .
　in this evaluation we are especially interested in the tradeoff between the coverage of a recommender  the percentage of items that a rating can be predicted for   figure 1  and

figure 1: recommendation coverage.
the error over these predictions  figure 1 . the error graph shows a positive response to error for the trust-based methods  especially those that employ trust-based filtering and in particular for the higher trust-levels. for example  at a trust level of 1 only those profiles that have previously been correct 1% or more of the time that they have been called upon to rate an item  are included as recommendation partners for the filter-based approaches  fitem and citem . and for these approaches we see significant error reductions of up to 1% compared to the baseline resnick. however  the coverage results indicate that these error reductions come at a cost. in particular  the minimal error rates at the highest trust thresholds reduce coverage by over 1%  which is unlikely to be acceptable in most recommendation scenarios. however  for trust thresholds below 1 we get significant error reductions while preserving coverage to a reasonable degree. in particular  the error for citem is seen to drop most rapidly up to a trust threshold of 1  at which point it offers 1% coverage and an error of 1; resnick's error is 1% higher than this.
1 conclusions
we believe that computational models of trust can improve the effectiveness of recommender systems. we have shown that by integrating an item-level model of trust into standard collaborative filtering we can increase accuracy by up to 1% by using only the top 1% most trustworthy profiles as recommendation partners. while this benefit comes at a significant coverage cost  more reasonable coverage can be achieved with reduced error rates by less drastic filtering thresholds. in addition to improving prediction accuracy  we believe that this trust-based approach may make recommenders more robust to attack by malicious users  as discussed in  o'mahony et al.  1    levien  1  and  kushmerick  1 . this is a matter that we will investigate as part of future work.
1 acknowledgments
this material is based on works supported by science foundation ireland under grant no. 1/in.1/i1
