 
we introduce grid-based sensordcsp  a geometrically structured benchmark problem for the study of distributed csp algorithms. this domain provides realistic structure of the communication and tracking constraints. we formally define this problem  and perform its worst-case complexity analysis. likewise  we provide an average case empirical analysis of the awc algorithm  studying its behavior on tractable and intractable sub-classes of our problem. 
1 introduction 
in recent years we have seen an increasing interest in distributed constraint satisfaction problem  discsp  formulations to model combinatorial problems arising in multi-agent environments  yokoo  1 j. recently  an interesting benchmark for discsp algorithms  called sensordcsp  has been introduced in  fernandez et al  1. inspired by distributed applications arising in networked systems  sensordcsp involves a network of distributed sensors simultaneously tracking multiple mobile objects. an instance of sensordcsp is defined by a set of sensors  a set of mobiles which are to be tracked by the sensors  and two sets of visibility and compatibility constraints specifying which sensors can communicate one with another and which sensors can track which mobiles  respectively. the goal is to allocate three sensors to track each mobile  such that all these triplets of sensors are pairwise disjoint  and the sensors in each such triplet are mutually compatible and can track the mobile they are assigned to. the analysis in  fernandez et al.  1  addresses the complexity 
   * research supported by afosr  grant f1-1  intelligent information systems institute  and f1-1  muri grant on cooperative control of distributed autonomous vehicles in adversarial environments   cicyt  tic1-
c1 and darpa  f1-1  controlling computational cost: structure  phase transitions and randomization  and f1-1  configuring wireless transmission and decentralized data processing for generic sensor networks . the views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the official policies or endorsements  either expressed or implied  of afosr  darpa  or the u.s. government. 
of sensordcsp  as well as its empirical evaluation  considering the performance and scalability of alternative discsp algorithms on various scenarios in a truly networked environment. 
　in this work we extend sensordcsp by providing it with an underlying spatial structure. in sensordcsp  the constraints of communication between sensors and visibility of mobiles are independent of their physical location. in contrast to sensordcsp  the spatial limitations for both communication between sensors and visibility of the mobiles are captured by a geometrical structure in our new benchmark  providing a more realistic framework. we refer to our geometrically enriched benchmark as grid-based sensordcsp or just gsensordcsp. we provide both an analytical complexity analysis of gsensordcsp and an empirical study of a characteristic discsp algorithm on various instances of this problem. 
1 gsensordcsp: definition and complexity 
gsensordcsp is a specific variant of the general sensord-
csp  enriched by a spatial structure: we have multiple sensors multiple objects  mobiles  t = which are to be tracked by the sensors subject to visibility and compatibility constraints  and the goal is to decide whether there exists an allocation of three sensors to each object  while keeping these triplets of sensors pair-wise disjoint. however  the visibility and compatibility constraints in gsensordcsp relate to the physical limitations of the sensors and the terrain on which the sensors are located. 
in gsensordcsp  the sensors are located on the nodes of a 

figure 1: grid of 1 x 1 sensors; black sensors stand for the  a  1-compatibility window of the gray sensor  and  b  1-visibility window of the square mobile. 

poster papers 	1 

uniform grid  and the mobiles are located within the surface enclosed by this grid; this way the grid specifies the generally trackable region. the physical limitations of the sensors are modeled by the notions of -compatibility and visibility. the -compatibility window for a sensor si  denoted as corresponds to the set of all sensors that are at most kc general  rectilinear and/or diagonal  hops from for example  the black sensors in figure 1  a  correspond to 1-compatibility window for the gray sensor. similarly  the kvvisibility window for a mobile  denoted corresponds to the set of all sensors that are at most k general hops around  for example  the black sensors in figure 1 b  correspond to 1-visibility window for the square mobile. finally  if each sensor  of a given gsensordcsp problem instance can communicate only with some sensors within then the set of compatibility constraints of this instance is called -restricted. the notion of -restricted visibility is defined similarly. 
   studying the worst-case complexity of gsensordcsp we formally show that: 
1. any gsensordcsp instance with 1-restricted visibility is solvable in low polynomial time  and 
1. gsensordcsp with -restricted visibility is npcomplete for all  
the former is shown by a reduction to the problem of feasible integer flow in bipartite graphs  while the latter is shown by a non-trivial reduction from 1-sat and is valid even for the problems with 1-restricted compatibility. 
1 	connecting locality and constrainedness 
while the physical limitations of the sensors in gsensordcsp are modeled via the locality windows  the terrain limitations are modeled via incomplete compatibility and visibility within the windows. problem instances of any gsensordcsp sub-class  can be ordered according to the local con-
strainedness  i.e.  the average number of sensors that a sensor can communicate with and the average number of sensors that can track a mobile. in our experiments  for each pair of locality parameters  we define a random distribution of gsensordcsp instances via two parameters that control the density of visibility and compatibility: the probability that two sensors and will be compatible is given by if otherwise  it is equal to 
1. clearly  higher value for and correspond to better conditions for communication and tracking  respectively. 
　for our first experiments with the awc  yokoo  1  algorithm  we consider different sets of instances with 1 sensors  grid 1 x 1   and 1 mobiles  with every set generated with different values for the parameters pc and pv. the parameters pc and pv are ranging from 1 to 1 with an increment of 1  giving a total number of 1 data sets  where every set contains 1 instances. given our formal complexity results  we consider several hard subclasses of gsensordcsp corresponding to kv = 1. for instance  figure 1 a  shows 
the ratio of the satisfiable instances  psat  as a function of pc and pv for kv = 1 with kc = 1 and kc = 1. as in the case of general sensordcsp  fernandez et al  1   when both probabilities are low  the instances generated are mostly unsatisfiable  while for high probabilities most of the instances are satisfiable. both for kc = 1 and kc - 1  the transition between the satisfiable and unsatisfiable regions occurs within a narrow range of the density parameters. observe that  for kc = 1 this range corresponds to significantly higher values of pc and pv  comparatively to these for kc = 1 and kc = 1. however  the form of the transition for various values of kc is very similar. 

figure 1: some experiments with awc on instances of gsensordcsp:  a  ratio of satisfiable instances for kv = 1  and mean solution time for  b  = 1 and  c  = 1  as a function of the density parameters and  
　consistently with the general sensordcsp  we observe that the phase transition of gsensordcsp coincides with the region where the hardest instances occur. for instance  figure 1 b  shows the mean solution time with respect to the density parameters and for the problem instances with 1 sensors  1 mobiles  = 1  and  = 1. somewhat 

1 	poster papers 


figure 1: solving dynamic gsensordcsp problems with the naive and the solution repairing approaches:  a  performance for a problem generated from an instance in the 1 % psat  b  performance for a problem generated from a hard instance in the 1% psat point. 
less expected result is depicted in figure 1 c  for the case of kv = 1  and kc = 1   which we showed to be polynomial by a reduction to the problem of feasible integral flow in bipartite graphs. despite the fact that awc is a general purpose algorithm  figure 1 c  shows that these tractable instances are relatively easy for awc. able to  detect and exploit  the tractable without being aware of its existence. 
　extending the evaluation  we consider different sets of instances for several orders of the problem  grids of 1-
1 sensors   and several levels of decomposition  kc  kv {1 1} . the analysis of these sets of instances clearly shows both exponential dependence of the mean solution time on the size of the grid  and  somewhat more interestingly  growth of the slope of this dependence with  
1 	dynamic gsensordcsp 
as an additional extension of the gsensordcsp domain  we consider the dynamics of the mobiles  in order to determine under which conditions  number of sensors and mobiles  velocities  trajectories  etc.  generic discsp algorithms are able to track the mobiles in real time. more formally  a dynamic gsensordcsp problem can be seen as an ordered sequence of static gsensordcsp problems  the static problems of the sequence only differ in the positions of the mobiles and hence the visibility between sensors and mobiles. observe that  if no assumptions are made about the relationship between the positions of the mobiles in and it is natural to solve these problems independently  naive approach . however  mobile dynamics are typically far from being chaotic. a first approximation is to consider linear trajectories. in this case  changes between the subsequent problems are governed by a clear model. an approach that a priori seems to be promising for dealing with the dynamic problem is to initialize the search for  by the solution already achieved for   solution repairing approach . 
　in order to compare the naive and the solution repairing approach  we have performed experiments where we solve dynamic gsensordcsp problems with both approaches. figure 1 depicts the cumulative probability distributions of solving ui for two different problems. one of them is obtained from the 1 % psat point of gsensordcsp and the other from the 1 % p1at point. 
　our results show that we can exploit the previous solution and that  assuming certain reasonable constraints on the mobile movements  we can benefit from solution repairing over the naive approach. more interestingly  it also follows that the relative attractiveness of solution repairing is higher in the region of hardest instances. 
1 	conclusions and future work 
we believe that gsensordcsp provides a realistic framework for the analysis of the discsp algorithms  and we hope it will contribute to the further research in this area. for the dynamic version  a next step would be to consider the effect of several kinds of trajectories in the performance of the solution repairing approach. finally  a further step towards an even more realistic discsp benchmark would be to consider its optimization version: maximizing the number of tracked mobiles. in this extended distributed benchmark  it would be interesting to study the existence of the easy-hard complexity patterns that have been observed in classical optimization problems  slaney and walsh  1 . 
