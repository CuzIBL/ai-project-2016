 
　　　the e-resolution inference principle described in this paper is a single-inference logic system for the first-order predicate calculus with equality. special axioms for equality   i . e .   axioms for symmetry  reflexivity  transitivity  and substitutivity  are not required to be added to the original set of clauses. other advantages of e-resolution are the relatively small number of intermediate clauses which must be retained in a proof and the distinct possibility that search strategies suitable for resolution w i l l also be suitable for eresolution. although it is not known whether or not e-resolution is complete  this topic is currently being investigated by the author. 
key terms: automatic theorem-proving  equality substitution  e-resolution  f i r s t order predicate calculus with equality  theorem-proving. 
	i. 	introduction 
　　　e-resolution is a technique for automatically generating proofs of theorems in the first-order predicate calculus with equality. the mechanism by which substitution of equals for equals is handled is automatically part of e-resolution  or  built-in.  the completeness of e-resolution has not  as yet  been proven  and it is therefore not known whether or not the system is complete. however  the author is currently investigating this topic. 
　　　e-resolution incorporates and combines some ideas similar to those used in paramodulation  
k-modulation 1 and sibert's thesis  1 but is different from a l l three. some of the features which enhance its usefulness are: 
 a  it is not necessary to add special axioms for equality to the original set of clauses  i . e .   axioms for symmetry  reflexivity  transitivity  and substitutivity. 
 b  the mechanism of equality substitution is not activated u n t i l its success could help produce a resolvent. this causes the number of intermediate clauses which must be retained in the proof of a theorem to be held to a minimum. 
 c  the system is a direct extension of j. a. robinson's resolution principle 1 and is designed so that  hopefully  search techniques developed for resolution can be used  without extensive modification  in e-resolution. at least this seems to be the case for set of support strategy  1 maximal clash resolution 1 and merging. 1 
this investigation was supported in part by 
public health service research grant gm-1  nih  the system is programmed in lisp and is running on the cdc 1 as the main portion of a theorem proofchecker for set theory.1 it has been used to prove several modest theorems involving equality substitution. 
　　　the following sections serve to formally describe e-resolution. section ii introduces definitions which w i l l be used later. section i i i develops the e-resolution system  and section iv illustrates e-resolution through examples. f i nally  section v discusses search strategies. 
	i i . 	definitions 
　　　the following definitions are preparatory to the matter of defining e-resolution. it is assumed that the reader is familiar with the notation used in  and . such terms as atom  l i t e r a l   clause  well-formed expression  substitution  disagreement set  herbrand universe  etc. are defined there. 
　　　it is well known that any set of sentences in the first-order predicate calculus with equality can be converted to clausal form  i.e.  an equivalent set of clauses  each of which is a disjunct of l i t e r a l s . in the following definitions  we borrow heavily from . 
　　　equality atoms. an equality atom is an atom whose predicate symbol is the special symbol  = . rather than writing an equality atom as  - 1 ab   we w i l l use the more readable  a - b . note that the predicate symbol  =  is always of degree 1. analogous to the above    = a b   is known as an inequality atom and w i l l be written as  a = b . we w i l l sometimes speak of equality l i t e r a l s and inequality l i t e r a l s . an equality l i t e r a l is an equality atom or a negated inequality atom. an inequality l i t eral is an inequality atom or a negated equality atom. 
　　　interpretation. an interpretation i of a set s of clauses is a set of literals such that for each atomic formula f that can be formed from a predicate symbol of degree n occurring in s and n terms from the herbrand universe hg of s  exactly one of the literals f or f is in i. an interpretation i is said to satisfy a ground clause c if at least one l i t e r a l in c is also in i  and to falsify a ground clause c if the complement of every l i t e r a l in c is in i. an interpretation i is said to satisfy a non-ground clause c if it satisfies every ground instance of c over hg  and is said to falsify a non-ground clause c if it falsifies at least one ground instance of c over hg. an interpretation i is said to satisfy a set s of clauses if it satisfies every clause in s  and is said to falsify a set of clauses if it f a l sifies at least one clause in s. q represents the empty clause  and is not satisfied by any 

-1-











vi. search strategies 
　　　as stated earlier  it appears that set of support strategy  maximal clash resolution  and 
merging  as well as other search strategies suitable for resolution may a l l be used without extensive modification in obtaining e-resolution 
proofs. for example  maximal clash resolution is used in the theorem proof-checker discussed in 
. 
　　　the reasoning behind the statements in the above paragraph is simple. note that e-resolution proceeds exactly as does resolution until  in resolution  two terms cannot be unified. at this point  e-resolution makes a divergence. it checks to see if indeed these two terms which could not be unified  can be equi-unified. if this is the case  then a  possibly empty  set of l i t e r a l s   which are the by-product of equi-unification  w i l l be unioned 
with the result of resolving  in the straight resolution sense  the two clauses currently under investigation. regardless of whether the two terms are equi-unifiable or not  e-resolution begins again at exactly the same point where the d i vergence was initiated and proceeds from this point exactly as would resolution  dependent upon 
whether the terms were unifiable or not. the only real difference is the set of by-product l i t e r a l s   
which accumulate as a result of equi-unification  in e-resolution. 
　　　although no proof is given of the assertion  it seems true that for many of the same reasons that the above-mentioned strategies do not destroy completeness in resolution  they do not destroy completeness in e-resolution. 
summary 
　　　e-resolution may be compared to other methods for handling equality substitutions in resolution  namely  demodulation  1 paramodulation  and the system described by sibert.1 
　　　the demodulation system is the forerunner of the more general  more powerful paramodulation system. in the generating of equality trees by etg  a portion of the technique used is very similar to paramodulation and demodulation and in fact was inspired by the basic techniques of these two systems. however  in e-resolution the only equality substitutions which result in a new clause are those which w i l l produce an e-resolvent  a l though many intermediate substitutions may be made in order to find the e-resolvent. in paramodulation  by contrast  equality substitutions may result in new clauses which w i l l not produce resol-
vents. this is the concept in e-resolution which results in generation of only a minimum number of new clauses. 
　　　the sibert system is more similar to e-resolution than are paramodulation and demodulation. 
however  it is f e l t by the author that e-resolution is a more efficient system and  aa such  in its present form is more practical for use on a 
machine. however  many of the concepts introduced by sibert are basic to the problem of resolution with equality and were used as a foundation for e-resolution. 
　　　a disadvantage of e-resolution and an area in which further research would no doubt increase greatly the efficiency of a system u t i l i z i n g i t   is the time which must be spent by etg fruitlessly constructing an equality tree when  in fact  the a and b terms given it are not equal. in general  this condition w i l l actually occur more times than 
w i l l the condition where they are equal. 	however  
the following process w i l l rectify this problem: the tree level bound k may be set to some low level i n i t i a l l y . a bound may also be set on the number of e-resolvent sets which may be generated  i.e.  a maximum n such that en+1 s  is not generated. now  in generating en s   one saves a l l equality trees associated with non-equi-unifiable literals of level k. if q is not in en s   then one increases k to k' and restarts the e-resolution process  each time extending and saving the equali t y trees associated with non-equi-unifiable literals at level k'. if  j is not in en s   raise the maximum e-resolution level n to n' and generate en  s . if q  is not in en  s   then k' is increased to k   etc. 
　　　acknowledgements. the author would like to express appreciation to dr. w. w. bledsoe for much guidance  encouragement  and consultation given to him throughout the preparation of the e-resolution system and the material presented here. the author would also like to acknowledge the valuable consultation given to him during his research efforts by messrs. robert anderson and forest baskett. 
