 
　　　a l o g i c f o r case s t r u c t u r e systems is presented which allows v a r i a t i o n s in the order and number of terms in atomic formulas. this logic is used to 
describe and characterize four e x i s t i n g case systems. a computer program which allows f l e x i b l e case structures is then described. applications of the program to medical record analysis and disease modeling are used to i l l u s t r a t e important concepts about case systems. several open problems are also discussed. 
	1. 	i n t r o d u c t i o n 
　　　much of the research in natural language processing has focused on the problem of storage s t r u c t u r e s   or the question   how is the information or meaning of a sentence to be represented once a sentence has been parsed   some of the storage structures have been special purpose organizations such as the sad sam program of lindsay 1  the baseball program of green  et al 1  or the student program of bobrow1. others have been semantic networks such as tlc by q u i l l i a n 1   protosynthex i i i by simmons1   memod by norman and rumelhart 1   or mental by shapiro 1   s t i l l others have been based on dependency grammar such as schank's conceptual parser-*1 or on predicate c a l c u l u s   such as qa1 by green and raphael 1 or pcdb by sandewall 1   
　　　a common feature of several of these natural language processors is a r e c o g n i t i o n of deep case 
r e l a t i o n s as discussed by f i l l m o r e 1 . some systems which have not e x p l i c i t l y used a case s t r u c t u r e have nevertheless used c a s e - l i k e mechanisms. jn a d d i t i o n   case-like systems have been used in modeling in 
medicine and psychology  even without natural language. 
       it appears now that a formalization of case s t r u c t u r e languages would be useful and f e a s i b l e . on the one hand the large amount of data on case systems appears to be structured in s i m i l a r ways and yet differences in terminology and approach have created serious communication problems. on the other hand  even if we admit that the usual f i r s t order logics somehow capture the essential nature of these systems  the s i m p l i f i c a t i o n s imposed there f o r elegance and t h e o r e t i c a l usefulness make them less useful as a means for examining and comparing case structure systems. 
　　　this paper presents   i n section 1  a language for case s t r u c t u r e systems which is b u i l t on f i r s t order logic and yet allows such things as omitted and rearranged terms in atomic formulas  p r e p o s i t i o n s   and the checking of case r e s t r i c t i o n s in the determination of well-formedness. the case logic should make it s i g n i f i c a n t l y easier to formulate  analyze 
or compare case s t r u c t u r e systems. 
this research  was supported by the national 
i n s t i t u t e s of health. resource on computers in 
biomedicine at rutgers u n i v e r s i t y  grant rr 1  
       in section 1 a few representative systems with cases are expressed in the formalisms of case l o g i c . section 1 contains a d e s c r i p t i o n of the chronos 1 program 1 . this program is unusual in having a f l e x i b l e case s t r u c t u r e . for example it has been 
used with one case structure f o r the analysis of medical records and w i t h another as a model f o r 
glaucoma. 
1. case logic 
　　　this section describes the essential characteri s t i c s of a case s t r u c t u r e system or case logic  cl . it appears that an adequate f o r m a l i z a t i o n can be made w i t h i n a f i r s t order framework. the differences between t h i s and a pure predicate calculus involve the i n t r o d u c t i o n of some f i x e d   or constant pre-
d i c a t e s   some a d d i t i o n a l axioms  and some syntact i c a l changes to r e f l e c t the fact that c e r t a i n languages of i n t e r e s t allow v a r i a t i o n s in the order and even omissions of some terms. 
     the axiom system f o r a case logic depends heavily on the s p e c i f i c cases which are used and  of course  on the i n t e r p r e t a t i o n s we wish to allow. because no axioms are given here it is perhaps more appropriate to c a l l cl a   n o t a t i o n a l system  rather than a   l o g i c   . however  it should be remembered that in any p a r t i c u l a r cl one must include an axiom system as well as naming the various syntactic and semantic objects in the system. 


1 



1. some representative case structure systems 
　　　in this section we examine a variety of systems which appear suitable for description as case structure systems. for the sake of clarity  the special case co  which is always assumed to be in c is not listed in the descriptions. 
1 	fillmore - natural language cases 
　　　the most persuasive argument for the universality of cases in the deep structures of natural languages is made by fillmore 1 . he argues from evidence in 
many languages that every language  regardless of its surface structures  has a deep case system which gives the relationship of many nouns to a verb. 
　　　fillmore's description of cases and their purpose in language can be expressed directly in cl. he suggests a minimum of six cases. 
agentive  a  - the animate perceived instigator of an action 
instrumental  i  - the inanimate force or object which is causally involved. 
dative  d  - the animate being affected. 
factitive  f  - the object or being resulting from the action. 
locative  l  - location or spatial orientation. 
objective  1  - determined by verb  neutral case . 
while other possible cases are mentioned we can say roughly that c = {a  i  d  f  l  1}. 
fillmore notes that the cases a and d require animate nouns  that is  for a noun to serve in the agentive or dative case it must have the feature  animate . other features making up the set m can easily be imagined for the other cases. 
　　　corresponding to features on nouns fillmore says that verbs can be classified according to  sentence types  or  case frames . 	a case frame tells what case relationships may exist between a verb and its nouns. 	for example  open  may be used 
in four ways: 
the door opened.  1  
john opened the door.  a 1  
the wind opened the door.  i 1  
john opened the door with a chisel   a 1 i   
we can represent the case frame for  open  as  1  a    i     . this says that when  open  is used its object must appear but the agent and instrument are optional. clearly a case frame is a case structure  .♀   in cl. 
     fillmore shows by example the case signals  s.  of various languages. he also gives some tentative rules for english. for example: 
 the a preposition is by; the i preposition is by if there is no a  otherwise it is with; the 1 and f 
prepositions are typically zero; the b  benefactive case  preposition is for; the d preposition is typically t o . . . . 
  i f there is an a it becomes the subject; otherwise  if there is an i  it becomes the subject; otherwise the subject is the 1.  
1 simmons -i semantic networks 
       r.f. simmons1 gives an extensive account of semantic networks and their use in processing natural language by computer. an essential feature of these networks is a set of deep case relations connecting nominal concepts  underlying noun phrases  to verbs. while a semantic network does not require any specific case structure simmons has chosen one which follows from work of celce-murcia and fillmore . 
       in his system there are five deep case relations  so that c =   causal actant  thome  locus  source  and goal}. the set of prepositions  or q.  is of course just the prepositions of english. verbs are classified into paradigms according to the case sequences they allow  a paradigm  then  is a case structure   1  . for example  the ergative paradigm consists of the sequences  for the active voice : 
 causal-actant.  theme  causal-actant   
 causal actant.  theme  
 causal actant-  theme  
 theme  
simmons gives  break  as an example of an ergative verb. thus 
john broke the window with a hammer. john broke the window 
the hammer broke the window the window broke 
are all well-formed since in each case one of the case sequences is matched  where  john  is the causalactant.   window  is the theme  and  hammer  is the causal-actant  . 
       another example is the  reflexive-deletion paradigm where the theme is deleted if it corresponds to the ca1  causal-actant.  . thus  run  may be used in several ways: 
john ran to school john ran a machine 
the machine ran 
the brook ran 
in each of the sentences there is a theme - john  machine  or brook. the paradigm allows the deletion 
of the theme if it is the same as the causal-actant. in this the case structure is 
 causal-actant  goal  
 causal-actant  theme  
 theme  
       simmons discusses other aspects of the case structure portion of semantic networks as well. he points out that a  semantic definition  of a verb can be given by describing the properties of the nominal concepts serving in each case relationship to the verb. it appears to be the case that these descriptions can be adequately handled by means of our case conditions. if so then a parser for semantic networks 
would simply check the descriptions in the process of determining well-formedness. 


for example the noun human might have a property 
 state-of-mind  with allowed values being  happy    sad   or  blue . it could have the superset  animal  and the subset  woman   naturally any noun w i l l have 
the properties of its supersets in addition to those explicitly listed. a verb entry has the form: 
 word  

the paradigm for a verb is an ordered set of cases. in a given simple sentence chronos ii will  currently  allow any or all of the cases to be missing. thus the case structure for a verb is a portion of the power set of paradigm subject to restrictions on features. 
       case determination depends on syntactical information  case signals  as well as feature checking  case conditions . currently in chronos ii the definitions of case signals and case conditions are combined in one lisp function for each case. someone who wishes to use chronos ii for a specific application must specify the l i s t of cases  define each case  and modify the lexicon appropriately. 
       each possible case function is called for every preposition term  noun phrase  	prepositional phrase  or adverb  and returns a number giving the likelihood that the given preposition term serves that case relationship to the main verb of the sentence. 	the 
case whose function returns the highest value is temporarily assigned to the preposition term. a failure  consisting of values of d for a l l the cases  forces a backup to the previous term and a reassignment of the case for that term. 
       the case parser1 is essentially independent of the particular set of cases being used. its speed and generality are of course directly dependent on the accuracy of the likelihood numbers returned by the case functions. there are various features which extend the simple heuristic value assignments  making the case functions easier to write or the parsing more efficient. for example  a variable number of  pre-emptive levels  can be created. once a case function returns a value at a new and higher preemptive level then only values at that level  or higher  are considered valid. this is especially useful when one knows that a particular preposition  say  signals one and only one case. then that case function returns a value which pre-empts any previous use of that case. 
       chronos ii has been used primarily with two case systems. one is for the analysis of medical records  i.e. nurse's notes  and is the more general of the 
two. in it c = {agentive  objective  dative  locative  instrumental  temporal  frequency  derivative  
manner  where agentive  objective  dative  instrumental  and locative are as in fillmore1  temporal points to the duration of an event  frequency is indicated by adverbs such as  rarely  and  often   derivative is indicated by words such as  increasing   and manner includes most other adverbs. the effect of such a case system can best be seen by comparison 
with a traditional c = {subject  object  indirect object} system. for example  the parse of  john 

note that in the second parse   pressure  has become the predicate. 	it is an essential principle of chronos ii that the predicate of a simple sentence is the logical predicate  relative to the purpose of discussion  rather than the syntactical predicate  usually the verb . 
	1. 	discussion 
       this report presents a notational system  cl  for case structure systems and examines a few existing systems in terms of the notation. 	cl is a f i r s t order system which appears useful in characterizing case systems and w i l l hopefully lead to a better understanding of natural language storage structures. 
       several observations about case structure systems follow from this study  observations which are actually open problems. for example  consider the sentence  john gave birth to a baby . the oddness of this sentence can be handled in at least three ways. first  we could say that  to give birth  is a predicate which imposes the case condition on the agent that it be female. in that case the sentence is not a formula of cl. chronos ii could do that  or alternatively  raise its eyebrows by accepting the sentence at a lower pre-emptive level  see section 1 . second  we could say that  to give  is a predicate  that the sentence is well-formed  but its negation is provable from a set of usually accepted facts about l i f e . third  we could say that  to give  is the predicate but demand that the sentence be treated as ill-formed. the last approach is feasible as long as the conditions on well-formedness can be stated as predicates on the single sentence  such as features  but is 
probably risky if it requires examination of other formulas. 
　　　an interesting problem  proposed in section 1  concerns the interaction of case signals and case con-
ditions. in chronos ii these functions mesh in a rather haphazard way. it should be interesting to examine situations where priorities in their use affect efficiency. 
       case systems  since they emphasize a logical structure  rather than a purely syntactic one  lessen the importance of the syntactic predicate and of the sentence as a unit. schank1 and others have stressed the need to examine a discourse as an integrated 
whole rather as a collection of isolated sentences. it seems that the better a case system i s   that is  the more relevant it is to the problem solving situation at hand  the easier it is to connect sentences in the discourse in meaningful ways. 
       since many case systems are in use  a natural question arises   what is the best case system   my experience with chronos ii suggests that  at this stage in the development of intelligent programs  one can only speak of the goodness of a case system relative to a problem situation. the finely distinguished cases which are arising in the medical model version of chronos ii would probably only clutter the program which analyzes nurse's notes. conversely  certain cases which one would need in discussing everyday l i f e would be unnecessary in a medical model. an important problem then is to decide what cases to use in a particular application. even more interesting might be a study of transformations between various case representations. problems of summarization and analogical reasoning will probably be more tractable with a better understanding of case structure transformations. 
ac knowledgements 
　　　　many people have contributed to this work. discussions with robert simmons f i r s t interested me in case logics. william fabens  richard orgass  and 
ann yasuhara made useful suggestions on case logic  
neil singer  santosh chokhani  nanette yaskin  and mike trigoboff all worked on chronos ii and contributed to discussions on case systems. i also want to thank the referees for their comments and suggestions which i have incorporated. 
references 
1. bobrow  daniel.  natural language input for a computer problem solving system . in semantic information processing  ed: marvin minsky  mit press  1. 
1. bruce  bertram.  a model for temporal 