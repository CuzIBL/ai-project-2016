 
　　　in assessing the power of a theorem prover  we should select a theorem d i f f i cult to prove  compare the quality of 
proof with the published work of mathematicians  and most important determine 
whether cpu time used to find the proof is economically acceptable. 
　　　in this paper we apply the above c r i t e r i a to rue resolution  equality-based binary resolution which incorporates the axioms of equality into the d e f i n i t i o n of resolution. we select a theorem in boolean algebra  show the published proof of george and garret birkhoff side by side with the computer deduced proof achieved in less than 1 seconds of cpu time1 the 
proof is quite long requiring the derivation of four lemmas and is proven by two rue refutations of 1 and 1 steps respect i v e l y . the same refutations with the equality axioms and unification resolution 
are 1 and more than 1 steps. hence  the power of rue resolution is shown by the brevity of proof compared to using the equality axioms. 
　　　the primary pragmatic issue in theorem proving is the effective management of heuristic search to find proofs in acceptable computer time. whether an inference 
system supports or obstructs this objective is a crucial property and in this 
paper we explain in d e t a i l the heuristics applied t o ' f i n d proofs. these heuristics are rue specific and dependent  and cannot be applied in the context of unifica-
tion resolution. 
*this research was supported by a sabbatical grant from the ibm systems research i n s t i t u t e in new york. 

     we now define a. disagreement of complementary literals  p s1  . .  sn    p   t 1   . .  tn  at the union: 
where di is a disagreement set of the corresponding arguments s i   t i . 	the topmost disagreement set of p   s 1   . .   s n     p   t l . . . t n   is 	the set of pairs of corresponding argu-
ments which are not i d e n t i c a l . 
　　　us ing the substitution axiom for pr dicates  we can now state: 
	p   s l   . .   s n   a p   t l   . .   t n   	- 	d 
where d now represents a disjunction of inequalities specified by any disagreement set of p p. in resolution by unification and equality  we can resolve p and p immediately to d. for example: 
p f a h b g c     
		p f b h e g d     
resolves in four d i s t i n c t way s depending on our choice of d. 	we may resolve to 
j' a  h  b  g  c     』f   b  h  e g  d        to 
a』b v b』c v c』d  or to an intermediate level d. these are l o g i c a l l y d i s t i n c t deductions since an input set may imply f a h  b g c      =f  b h c g d      without im-
plying a=b   b=c a c=d  so that the former participates in a refutation but the latterdoes not. 
　　　we now define a second inference rule similar to the above applying d i r e c t l y to 
an inequality: 
1. nrf rule of inference: 
　　 the nrf resolvent of the clause tl』t1 v a is o'a v d  where 1 is a substitution and d is a disjunction of inequali t i e s specified by a disagreement set of 1 t l   1 t 1 .   
　　　for example we may deduce by nrf: f a h b g c   』f b h c g d    
- a』b v b』c v c』d 
v. digricoli 1 
or reduce to the inequalities of any di agreement set. we call the above the negative reflexive function rule. 
in   d i g r i c o l i   1  we prove: 
1. completeness of rue resolution: 
 tf s is an e-unsatisfiable set of clauses  there exists an rue-nrf 
deduction of the empty clause from 1.  
　　this theorem establishes that resolving to inequalities is complete without introducing the axioms of equality for substitution  t r a n s i t i v i t y and r e f l e x i v i t y   or paramodulation. apart from symmetry  the axioms of equality are applied i m p l i c i t l y by the rue-nrp rules of inference. 
　　we describe the above as completeness in 'open form' since we have not specified either- the substitution or disagreement set to be used. in   d i g r i c o l i   1   we deal with this issue and define the rue u n i f i e r and the topmost viable disagreement set as part of a completeness theory stated in strong form. however  in this paper we w i l l use rue resolution in open form as defined above  heuristically exp l o i t i n g this form and making efficiency of proof search our primary goal. 
　　　this is a f a i r l y complex theorem for a human to prove and we have the following proof published in the transactions of the 
american mathematical society   1   by george and garret birkhoff: 

1 v. digricoli 
theorem: 	a v   b v c   	=   a v b   v c 
proof  birkhoff  : 
we first prove lemmas: li  l1  l'1 and l1. 
l1: a = aa since: a=al=a ava =aavaa 
=aavo = aa 
l1:
 avl = 1 since: avl =   avl  l =   avl   ava  
=av la =ava=l 
l1: a  = avab since: a=al=a bvl =abval 
=abva=avab 
l1: a avb  = a since: a avb  = aa v ab 
= a v ab = a 
from lemmas ll l1 l1 and axiom 1  it follows that: 
　　　　　　　　a = a  avb vc  b = b  avb vc  c - c  avb vc  substitute the above for a b c in av bvc : 
av bvc  = a  avb vc  v   b  avb vc  v c  avb vc    . 
on the right side  factor out the expression  avb vc to the right: av bvc  =  av bvc     avb vc  . 
on the right side  distribute  av bvc   across   avb vc  : 
av bvc  =    av bvc  a v  av bvc  b   v  av bvc  c . 
applying ll l1 l1 and axiom 1 to each member of the right side  we obtain: 
	a v  bvc  	 avb  v c 
d 
　　　it is evident that especially the latter part of the above proof will be difficult for a human to deduce. in fact in human experiments with three mathematically astute university students  one could not prove associativity after six hours of work  a second proved associativity in nine hours and the third proved the theorem in three hours. hence  we are asking the rue theorem prover to prove a theorem which humans find quite difficult. 
the following is the proof deduced by the rue theorem prover in 1 seconds of cpu time  ibm 1   using a total 1 unifications in its proof search. we first ask the theorem prover to prove two lemmas  xy v x = x and  x v y x = x  and then augment the input axiom set with these lemmas to prove associativity. 

　　　in the above refutation  we are uniformly applying the following substitution: 
      in a left-to-right scan of complementary literals  first unify at the highest argument level  and then in a second scan unify at all lower levels.  

　　　the refutation is a succinct 1 step rue proof of the lemma  xy v x =- x  and within this proof the sub-lemma  x v 1 = 1  is proven beginning at step 1. the same refutation performed with the equality 
axioms and standard unification resolution would be 1 steps. 
　　　we have a succinct rue proof of  1 steps and an equivalent proof with the equality axioms and. u n i f i c a t i o n resolution would be 1 steps. note that the sublemrna 1 = xao is proven beginning at step 1. 
　　　when the theorem prover is given the negated dual lemma: 
	ab v a 』 a. 	 avb a 』 a 
it produced a. 1 step refutation proving both lemmas in 1 seconds with a t o t a l 1 unifications in the proof search. this refutation is simply the concatenation of the above two refutations and counting sublemmas  four lemmas are being proven in a single run of the theorem prover. it corresponds to the work of the birkhoff paper proving lemmas l1 l1 l1 l1 and is a substantial piece of work. 
　　　the theorem prover found the 1 step refutation proving associativity in 1 seconds using 1 unifications in the proof search. an equivalent proof with the equality axioms and unification resol u t i o n would be more than 1 steps. altogether 1 seconds with 1 unifications were used for the entire proof. cpu time would be substantially reduced by a more e f f i c i e n t implementation of the theorem prover in assembly language in place of p l / l . this is a very fine result compared to other published work  mccharen  overbeek  wos  1  and our purpose in this paper is to study the heuristic management of proof search which led to the above result. 

1 v. digricoli 
i i i 	finding a needle in a haystack 
　　　let us examine the enormity of the task of search which confronts a theorem 
prover seeking to find the refutations we we have stated. the d i f f i c u l t y of proving theorems in boolean algebra is com-
pounded by the commutivity of the boolean functions  v    and the symmetry of equali t y   so that the axiom x v 1 = x  has 1 variants based on these properties. we can incorporate the entire effect of com-
mutivity and symmetry by stating for the remaining boolean axioms a l l variants based on these properties: 

hence  in boolean algebra we are r e a l l y dealing with an input set of 1 axioms when we drop the axioms for boolean commutivity and equality symmetry. furthermore  the rue inference rules i m p l i c i t l y incorporate the axioms of equality for substitution  t r a n s i t i v i t y and r e f l e x i v i t y and these axioms also do not appear in the input set. let us assume that we w i l l l i m i t the input set to n clauses selected from the above variants. let us assess the magnitude of search for the 1 step refutation which proves associativity when n is as low as 1. 
　　　the theorem prover begins with the negated theorem with skolem constants  av bvc  』  avb vc  and must find the refutation sequence we have stated. the refutation search is represented by a tree: 

　　　since in rue resolution complementary l i t e r a l s always resolve  each of the 1 clauses in the input set resolves immediately with the inequality of the negated theorem and in a breadthfirst search 1 resolvents appear at level one of the search tree. the complete breadthfirst expansion of the search tree to level 1 has l 1 - t o - l 1 t h leaf nodes. the situation is actually worse if we take into account resolving to different disagreement sets making the expansion factor at a node higher than 1. even with the input set reduced to 1 clauses  a breadthfirst search for a refutation is out of the question. the refutation we seek w i l l be a linear input refutation represented by a path in the above tree. a miniscule number of paths from the root w i l l culminate in the empty clause but at least one w i l l when the input set is e-unsatisfiable. 
　　　we have stated that the refutation for associativity was actually attained by the rue theorem prover in 1 u n i f i cations  i . e .   the theorem prover heuri s t i c a l l y developed a subtree of 1 nodes in place of the breadthfirst expansion. we wish now to explain precisely what heuristics were applied to define 
this subtree of search. 
iv a heuristically controlled 
proof search 
　　　in order to find a refutation in acceptable computer time  we must d r a s t i cally prune the breadthfirst search tree and furthermore order the search in the remaining subtree. we w i l l define the components of an evaluation function which h e u r i s t i c a l l y determine which search paths to abort and what is the best leaf node to expand in the search tree. furthermore  in applying an axiom to a node  we must h e u r i s t i c a l l y select a disagreement set apt to participate in a r e f u t a t i o n . the following principles were applied with these objectives in mind: 
 1  heuristic ordering by degree of u n i f i c a t i o n   
 1  selection of the lowest level disagreement set not containing an irreducible l i t e r a l    1  heuristic substitution selection  
 1  complexity bounds r e l a t i n g to: 
 a  argument nesting 
 b  number of d i s t i n c t variables in a clause 
 c  number of occurrences of the same constant or function symbol in a clause 
 d  maximum number of l i t e r a l s in a clause 
 e  maximum character length of a clause 
 1  removing redundant resolvents  
 1  frequency bounds for the use of individual axioms in a ref. path. 

　　　a l l of the above principles are syntactic in nature and apply generically to experiments performed.  1  through  1   which were crucial in our work  are rue specific and cannot be applied in standard 
u n i f i c a t i o n resolution with the equality axioms. the remaining principles have been commonly used in resolution theorem proving. 
a. 	heuristic ordering by 
degree of unification 
　　　if we wish to erase the l i t e r a l   tl 』 t1  in a refutation  we measure the relevancy of an axiom al = a1 by computing the degree of u n i f i c a t i o n between l i t e r a l s as follows; 
 1  apply the mgpu  the most general p a r t i a l u n i f i e r   to complementary l i t e r a l s to obtain tftl/tft1  tfal=tfa1. 
 1  set w=1   u n i f i c a t i o n weight . 
 1  for i = 1: if 1ti matches 1 ai i d e n t i c a l l y   then w = w+1  else if σ t i   σ a i are the same function  say: σti is f bl b1  and σ a i   f   c l   c 1     then w = w+1 and  furthermore  w = w+1 for each matching pair of corresponding arguments. 
　　　this is a simple scheme of matching which computes a weight of 1 when the mgu of complementary l i t e r a l s exists  and 1 when there is no degree of u n i f i c a t i o n . there is also an intermediate scoring between these extremes. we now state our f i r s t principle of h e u r i s t i c a l l y ordering the expansion of the refutation search tree: 
 1  apply axioms to a negative l i t e r a l in the order of higher degree of u n i f i cation f i r s t and set a lower l i m i t sdwmin below which we suppress or postpone the application of an axiom  search directive weight minimum . 
 1  furthermore  among axioms which sat-i s f y sdwmin  select the f i r s t sdlim axioms with the highest u n i f i c a t i o n scores  search directive l i m i t   . 
　　　the 1 step refutation for associat i v i t y was found using sdwmin=1  	i . e .   we pruned the search tree of a l l axioms f a l l i n g below this u n i f i c a t i o n score. 	in proving the supporting lemmas for associat i v i t y   a l l refutations were found using sdlim=1. 	as naturally i n t u i t i v e   this heuristic by degree of unification may be in rue resolution  i t   nonetheless  does 
not apply in unification resolution which requires the mgu at each deduction step. 
b. selecting the lowest level disagreement set not containing an irreducible l i t e r a l 
　　　typically in adding the negated theorem to the input clause set  we introduce skolem constants and when it is evident that these constants are in effect a r b i trary constants in respect to the input axioms  then we can conclude that inequal i t i e s on skolem constants l i k e a=b are irreducible  i . e .   we cannot deduce a=b from the axiom set. 
　　　for example  the negated theorem  av bvc 』 avb vc  introduces skolem constants a b c which in respect to the axioms of boolean algebra are a r b i t r a r y constants and we cannot prove two of these constants equal. thus we should never generate an inequality l i k e a』b in an rue deduction. furthermore  inequalities l i k e  xvx a 』 b which demodulate to irreducible l i t e r a l s are also irreducible and cannot appear in a r e f u t a t i o n . this leads to the following heuristic rule: 

since resolving to b』l would result in an irreducible l i t e r a l . this heuristic proved successful  not only in a l l the boolean experiments  but also in ten experiments in group and r i n g theory   d i g r i c o l i   1 . the rue theorem prover permits the user to specify as input a l i s t of irreducible l i t e r a l s   and  at the end of a run  it produces a l i s t of ground l i t e r a l s present at leaf nodes of the search tree which the user may scan for irreducible l i t e r a l s in preparation for the next run. 

1 v. digricoli 
c. 	heuristic substitution selection 
　　　in the completeness analysis in   d i g r i c o l i   1   we specify that substitutions may be unconditionally performed in variables at the f i r s t argument level  l i k e p x   but only in variables at lowerlevels  l i k e p   f   x       if certain conditions are met by the input set. this leads to longer refutations requiring extensive use of the nrf rule  when the same refutations can be stated in abbreviated form without the nrf rule  if we permit immediate substitutions at lower argument levels. in fact  it occurs in experiments performed that the following 
maximum u n i f i c a t i o n is the refutation 
su bstitution: 
 in a l e f t - t o - r i g h t scan of complementary l i t e r a l s   f i r s t unify at the highest argument l e v e l   and then in a second scan unify at a l l lower levels.  
note that we have given p r i o r i t y to substituting at the f i r s t argument level as specified by the completeness theory. however  the above substitution selection which enhances the efficiency of finding proofs  is not universally compatible with rue completeness and we show this in  digric o l i   1  . 
 1  under length of proof  1  denotes that the  1 step rue refutation is 1 steps when restated with the equality axioms and u n i f i c a t i o n resolution. 
d. 	pruning; by complexity bounds 
       an important method of pruning the search tree is to apply complexity bounds on resolvents which are formed. theorem provers working in areas of the search tree having l i t t l e relation to a refutation tend to produce resolvents which are too complex under a variety of a t t r i b u t e s . the rue theorem prover permits the user to specify complexity l i m i t s which when exceeded cause the resolvent to be discarded. these limi t s relate to the depth of argument nesting  the character length of a clause  the number of l i t e r a l s in a clause  the frequency 
of appearance of a constant or function symbol in a clause  or l i t e r a l   and the number of d i s t i n c t variables in a clause. it is true that the ideal setting of complexity bounds can only be derived by knowing a refutation. nonetheless  it is important to know to what extent the proof search is contracted by applying complexity bounds. experiments show that it is a good heuristic to use t i g h t bounds to begin with  possibly derived from examining proofs in prior work with the theorem prover  and to gradually relax these bounds . the experiment mental results in this paper- are f i r s t stated by applying complexity l i m i t s which 
ar e a profile of t h e refutations derived. we then suspend a l l use of these bounds  to determine the degradation of search 
which occurs. both sets of results turn out to be favorable . 
 1  in run 1 complexity bounds were applied which perfectly f i t the refutation derived  but in run 1 no complexity bounds were applied to l i m i t search. apart from this d i s t i n c t i o n   both run 1 and 1 used the same input set and heuri s t i c s   in run 1 of b1  complexity bound were relaxed one level and applied. 
 1  to prove lemmas b1 through b1  both individualy and altogether  the followinginput set was used: 

a complete set of variants was used for the f i r s t four axioms but only a p a r t i a l 
set for each of thedistributive axioms. in resolving with an inequality  the theorem prover f i r s t chose from each variant set  that axiom having the highest u n i f i c a t i o n score with the inequality. this reduced the applicable axioms from 1 to 1  and of these only three with the highest u n i f i c a t i o n scores were applied since sdlim was set to 1. this meant that the node expansion factor was 1 instead of 1 in the search tree and the excellence of the results in proving lemmas is due primarily to this heuristic together with avoidance of irreducible l i t e r a l s . 
 1  in proving b1 associativity  we reduced the input set to 1 clauses and introduced variants of two proven lemmas: 

in this experiment  the theorem prover in resolving with an inequality chose only those input clauses whose u n i f i c a t i o n score was 1 or greater  sdwmin=1  and 1dlim was not used. our next experiments w i l l attempt to prove associativity without using lemmas and with the same input set of 1 clauses previously used. this w i l l be an exceptionally long r e f u t a t i o n . 
