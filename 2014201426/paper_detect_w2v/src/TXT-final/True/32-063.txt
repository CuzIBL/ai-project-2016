 
the paper presents a structured modeling language  sml  and a relational database framework for specification and automated generation of causal models. the framework describes a relational database scheme for encoding a library of causal network templates modeling the basic components in a modeling domain. sml provides a formal language for specifying models as structured components that can be composed from the basic components. the language enables specification of models as parameterized relational queries that can be instantiated for specific model instances. the paper describes an algorithm that  given a library and a specification  computes a causal model in time and space linear in the number of basic components. the algorithm enables model reuse by combining model fragments from the template library to compose new models. the present automated modeling approach has been implemented using the structured query language  sql  and a relational database environment. the approach has been successfully used for modeling an automated work-cell in a real-life digital manufacturing application. 
1 	introduction 
automated modeling is a key for developing automated reasoning applications in domains such as industrial automation and digital manufacturing. the models can be used to support reasoning tasks for two main objectives. one  to reduce the commissioning time by simulating  verifying and validating the intended function of a system before it is built. two  to reduce downtime after a system is built by diagnosing and identifying faults. building adequate models is typically a time consuming process involving much iteration and requiring in-depth knowledge of the particular domain. 
　the models considered here are in the form of causal networks  pearl  1; dechter and pearl  1; darwiche and pearl  1 . causal networks represent causeand-effect relationships in a system by a directed acyclic 
1 	qualitative reasoning and diagnosis graph in which nodes axe the variables and the edges represent direct causal influence. in addition to the graph  causal network models include quantification of the causal influence. bayesian networks  pearl  1  quantify the causal influence by conditional probabilities that are attached to each cluster of parents-child nodes in the network. here we adopt deterministic quantification in the language of directed constraint networks  dechter and pearl  1 . 
　the significance of the problem of automated modeling in causal networks is well-known  laskey and mahoney  1 . recently  a number of approaches have been proposed based on object-oriented languages  which allow complex domains to be described in terms of interrelated objects  roller and pfejffer  1; laskey and mahoney  1 . the focus of those works is on the representation of probabilistic knowledge as network fragments and not on algorithms for constructing models from the knowledge base. the contributions of this paper are a relational framework for encoding the causal relationships in a modeling domain; a language for model specification and an algorithm for constructing causal models. 
　the paper is organized as follows. section 1 describes sml relational framework and the concept of a template library. section 1 gives the model specification language and a detailed example. section 1 describes the algorithm for constructing causal models. sections 1 presents discussion and related work and section 1 concludes  
1 	structured modeling language 
sml enables specification of models using a library of basic components. basic components are the building blocks in a modeling domain. examples of basic components in the industrial automation domain are a proximity switch  a cylinder  a valve  and a solenoid actuator. we start with a set of definitions then formalize our concept of model library and then give an example. 
definition 1  relational databases   maier  1  let  be a set of attributes  each with an associated domain. a relational database scheme r over 
u is a collection of relation schemes 	  
where 

lational database d on database scheme r is a collection of relations . each relation  on relation scheme   written   is a set of value tuples for the attributes in  from their respective domains  and we write t.x to denote the value assigned by a tuple t to a subset 
key of a relation  is a minimal subset that uniquely identifies a tuple within the relation. a foreign key is a set of attributes within one relation that matches the key of some  possibly the same  relation. a relation scheme may contain more than one key and the keys explicitly listed within a relation scheme are called designated keys. we distinguish one of the designated keys as the primary key. to denote the primary key of a relation  we underline the attribute names in the key. let x and y be subsets of . we say that a relation satisfies the functional dependency  fd  if for every x-value x  there corresponds only 
one value for y  i.e.  the set has at most one tuple. a relation scheme ri embodies the fd  if ki'  is a designated key for ri. a database scheme r represents the set of fds 
g =  embodies x -  y}. r completely characterizes a set of fds f if 
definition 1 causal networks  let u = {ui ... un} be a set of attributes  each with an associated domain. a causal network is a pair  g d  where g is a directed acyclic graph whose nodes are u and d =  is a relational database such that: 
 1  each scheme ri corresponds to a family in g  i.e.  a set consisting of a child node and all its parent nodes pa    1  d completely characterizes the set of fds  
　　the above database definition of causal networks maps directly to that of directed constraint networks  dechter and pearl  1 . the mapping from the database representation to that in propositional logic  darwiche and pearl  1  is also straightforward. for each relation r  on the scheme i do: for each tuple output the propositional sentence: 
the propo-
sitional sentences above are ensured to be consistent. 
1 	template model library 
the library describes the structure and function of the basic components in a given modeling domain. basic components are modeled using templates of causal network fragments encoded in a relational database. the 
1
   the tuples in a relation ri  do not have to cover all value instantiations of the parent variables. this means that the quantification of the causal relation can be incomplete. the more complete the quantification the more specific the predictions that can be made using the model. 
structure of a causal network is described by a set of families in a directed graph. each family may have a distinguished parent called assumption. a basic template consists of a directed acyclic graph  dag  g  and a set of functional relations  defined on the dag's families r1 ..  rn for all the non-root nodes 
. the structure of a basic 
template of type b is defined by its relational scheme  
		 1  
　we now describe the template library encoding of the causal relationships. the encoding consists of two relational tables: struc and func. the struc scheme is: 

each tuple in the struc relation corresponds to a family in a causal network fragment. it is identified by a 
structure id  sid  and is associated with a basic component type  type. the family consists of the output variable  outvar which is the child  and the input variables  invar l  ...   invarn  which are the parents. the domains of those variables are indexed by the integer attributes:  ...  invar n domld  
outvar-domld. the number of input variables  n  is determined by the size of the largest family in the modeling domain. families with m parents  m   n  will have null values for all inputs with index greater than m. assumdomid is an index identifying the assumption domain. if a family includes no assumption then assumdomid is null. the func relation scheme is: 
func sid as1um  	 1  
sid is a foreign key referencing the structure id in the struc relation. 
　the library defines the value domains of the various attributes in a table having the scheme  
  1  
domld is the domain identifier  and the allowed values in the domain are:   ...  val k. here  k is a parameter determined by the maximum number of values in a domain. each value val i has an associated cost  which is a non-negative integer. only the domains of the assumption attributes have associated costs; the costs for all other domains have the default value zero. the domains for the assumption attributes provide the fault information required for model-based diagnosis  ei fattah and dechter  1 . 

the relation provides the value of the output variable as a function of the values of the assumption and the input variables. 
	el fattah 	1 

1 example 
figure 1 shows an example of a basic template in the industrial automation domain. the figure depicts the schematic and the dag representation of the template's structure for a basic component of type cylinder. a cylinder has two inputs  root nodes  corresponding to the extend and retract pressures: ext p and ret p. there is one assumption variable  assum  also a root node   which represents the mode of operation of the cylinder. the cylinder's piston rod position  pos causally depends on the input pressures and the assumption. the cylinder has two outputs  the leaf nodes   which are the extended extd and retracted retd positions of the piston. table 1 shows the tuples in the struc relation for cylinder. the values and the costs for the various domain indexes are given in the dom table shown in figure 1. table 1 shows a partial set of tuples for cylinder in the func relation. the first tuple says that if the cylinder is ok and both pressure inputs are off then the piston position is neutral. 

figure 1: basic template for a cylinder:  a  schematic   b  dag of causal network fragment. 
1 	model specification language 
sml specification of models is based on the concept of structured template. structured templates represent components that are composed of basic components. examples of decomposable components in the industrial automation domain are work cells  fixtures  clamps  pins and dumps. we start by defining a structured template  
1 	qualitative reasoning and diagnosis 

then formalize the specification language and give an example. 
1 	structured template 
a structured template is specified by the basic templates of its sub-components and by the connections between those sub-components. formally  a structured template composed of m basic templates can be specified as a pair:  1  c . s is an ordered tuple of the families of the m basic templates  
  1  
c is a set of pairs representing the structural connections between the basic templates: 
 1  
 each element in c is a connection from a node which is the child in some family to a parent node  in another family in s such that i precedes j. 
1 	specification language 
figure 1 gives the grammar of sml model specification language in ebnf  extended bacchus naur form . terminals are enclosed in double quotes  non-terminals are in italic  anything between square brackets are optional. the grammar says that a structured component is specified by one or more sub-components. each 


figure 1: sml specification grammar 
sub-component is specified by the function  sub.comp. the parameters of that function are: the structured component label  struc-compjabel; the basic component label  basic compjabel  the basic template structure id  struc id and the connections from other subcomponents. a connection consists of one or more references from the outputs of parent sub-components. the sub.comp function returns a reference to the output of the defined sub-component which can then be used as the  from  attribute to another child sub-component. the connection in a sub-component definition is optional. if included then the outputs of the parent subcomponents are used to replace the inputs in the defined sub-component. else  the inputs to the defined subcomponent are determined by the struc relation tuple identified by struc id. 

figure 1: clamp pneumatic circuit 
　model specification is encoded in a relational table with the following scheme  sved scid  sc label  subcomplabel  sid  
	from 1 ...  	from n  	 1  
scid denotes a structured component id and is the primary key. sclabel is the structured component label. subcomplabel is the label of a sub-component whose type is identified by the structure id  sid. from  1  ...  from n are foreign keys consisting of the scid's of the parent sub-components whose outputs are connected to the respective inputs of the basic structure template identified by sid. the function sub-comp in the sml specification has the side effect of adding a tuple representing the sub-component entry to the spec table. the function then returns the scid of that tuple which can be used to encode the  from  connections as explained earlier. 
1 	example 
figure 1 shows the pneumatic circuit for an industrial clamp. the function of a clamp is to hold a machine part in place on a fixture during operation on the part  e.g.  a robot welding operation. the clamp has two landmark positions; namely the extended and retracted positions. the extended  retracted  position is produced by the control valves that connect the extend  retract  port of the cylinder to pressurized air and the retract  extend  port to the exhaust. the circuit shows two pneumatic valves connected in series. the main valve has two solenoid actuators: one for extend and the other for retract. the safety valve is a spring-return valve with only one actuator for extend. for the clamp to extend  retract   the extend actuators of both valves must be on  off  and the retract actuator of the main valve must be off  on . the extend and retract position of the clamp is sensed by proximity switches that sense the piston rod at the extended and retracted positions. 
　figure 1 shows the structured template specification of a clamp set. the subcomponents of a clamp set include power  air  actuators  valves  cylinders and proximity switches. each clamp in the set is associated with a cylinder and all cylinders are actuated by the same valves. the specification is stated as an sql procedure whose parameters are the clamp set label  comp  and a variant array of cylinder labels. each sub-component entry in the specification references a structure id  sid. for example the first sub-component  power  has sid =1  which references a basic component of type power in the struc table. naturally  the sid values are implementation dependent. the next subcomponent entries are: air  the extend and retract actuators of the main valve  and the extend actuator for the safety valve. note that those components have no from arguments which means that their inputs are exogenous variables coming from outside the clamp set. the next three subcomponententries specify the main valve and the next two specify the safety valve. the main valve position  vlvl.pos  has two inputs coming from the main extend and retract actuators. the main valve pressure lines a and b both take input from the the main valve position. the next two entries for the safety valve are similar. the equation for the safety valve b output vlv1~b takes an input from the main valve b output vlvj.b  which implies in-series 
	el fattah 	1 


figure 1: specification of a clamp set 
connection as indicated by the schematic in figure 1. the  for  loop in the procedure creates for each element in the cylinders list five subcomponent entries: three entries for the cylinder and two for the cylinder-extended and retracted proximity switches. the air inputs to each cylinder come from the main valve a line and the safety valve b line as in the schematic in figure 1. 
　the subcomponent entries in the specification are ordered such that all connections to the inputs of a subcomponent come from the outputs of sub-components that are earlier in the ordering. for example  vlvl-pos has its inputs coming from the earlier sub-component outputs: act-exll  aclret. figure 1 depicts the specification structure for a clamp set instance having 1 cylinders: cyll  cyl1. the figure shows the ordering of the sub-components according to the structured template specification of figure 1. each sub-component is represented as a box; the name of the sub-component is shown in italics; the type is in italics and bold; and the output is shown at the bottom of the box. the figure shows that a basic component  e.g.  a cylinder  consists of multiple sub-components  which are the causal network families. 
1 	model generation 
model generation requires two information sources:  a  the template library namely the struc and func relations  and  b  the model specification in the form of a spec relation. causal models can be generated in some predefined format such as symbolic or relational. relational format represents the causal model by a relational 
1 	qualitative reasoning and diagnosis 

figure 1: clamp structured template 
database where each relation corresponds to a causal network family  . the name of the relation is the child variable  and the attributes of the relation are the family variables   the sym-
bolic format represents the equations for each family as a 
set of propositional logic sentences  darwiche and pearl  1 . 
　the model generation algorithm is given in figure 1. the algorithm takes as input a library of basic components  specification of a structured component instance  sclabcl  an output model format  outformat  and an optional assumption list  assumlist. the algorithm outputs the causal model in the required format. the assumption list consists of basic component types whose assumptions need to be included in the model. if no list is given then the model will be based on the default assumption ok for all basic component types. the algorithm selects the specification tuples for the structured component instance  step 1  and computes for each tuple s a causal relation r which is then output in the assigned format  steps 1 . step 1 selects the structure template tuple t  struc having same structure id  sid as tuple s. step 1 determines the scheme for the causal relation. the step prefixes the sub-component label to the assumption  input and output variables. it caches the name of the output variable in the temporary out table. if there are connections then the input variables are replaced by the proper connections from the out table. an assumption is included if the structure templates mentions an assumption and the sub-component type is a member of assumlist. step 1 populates the causal relation with the function template tuples having same structure id  sid as tuple t. the time and space com-

plexity of the algorithm is 1 n-k   where n is the number of sub-components and k is the maximum number of tuples in the functional relation of the causal families. 

figure 1: algorithm create causal model 
1 	discussion and related work 
the present automated modeling approach has been implemented using the structured query language  sql  and a relational database environment. the approach is used to model the clamping fixtures in a real-life robotwelding workcell. the fixtures consist of multiple sets of pins  dumps  locators  and clamps having pneumatic circuits similar to the one in figure 1. one feature of our modeling approach is the explicit representation of assumption attributes. this is essential for building models for diagnosis  el fattah and dechter  1 . the models are used to generate model-based diagnostic code to run on the programmable logic controller that controls the workcell  provan et a/.  1 . 
　previous work  falkenhainer  1  proposed compositional modeling  a framework for constructing adequate 
device models from a model fragment library which explicitly represents modeling assumptions. the framework takes a domain theory  a structural description of a specific system  and a query about the system's behavior and searches the space of possible models to compose the right model for the query. recent work on causal explanation  nayak  1  proposed the notion of causal approximation and showed that compositional modeling becomes tractable when all model fragment approximations are causal approximations. our approach does not represent modeling assumptions and each component type is represented by exactly one model. this is not an inherent limitation in our approach and we plan to extend it by:  1  including modeling assumptions in the relational schema of the fragments   1  incorporating compositional modeling constraints in the library in the form of sql stored procedures. we can assign costs to various model fragments and modify our model construction algorithm to compose minimum cost models. 
　specifying the model template library as a relational database enhances the maintenance and reconfiguration of models. the database encoding enables adaptability and scalability to new and unforeseen requirements and applications. new fields and record types can be added to the library database without affecting current automated modeling programs. our database approach enhances the reliability of the modeling data through the use of proper integrity constraints  e.g.  key integrity  domain integrity and referential integrity. 
　the focus of previous work on automated modeling in bayesian networks has been primarily on the representation of probabilistic knowledge as network fragments and not on algorithms for constructing models from the knowledge base  laskey and mahoney  1 . a main contribution of our approach is the description of an efficient algorithm for automated generation of causal models. the algorithm can be stated declaratively in sql  which enhances the expressiveness and naturalness of model-building operations. the ubiquity of database environments and industry standard sql servers are two factors in favor of our database approach to automated modeling. 
　an advantage of our approach is the ability to describe models with a generalized number of sub-components. for example  our clamp set model includes a variable number of clamps in the template which can then be instantiated for generating specific models. see figure 1. the oobn language  roller and pfeffer  1  cannot represent models with varying number. for example  the oobn approach cannot represent a model of a car accident with a variable number of passengers; instead it will represent a distinct model for each possible number of passengers  roller and pfeffer  1 . also  the oobn language is poorly equipped to represent global constraints on the sub-components. for 
	el fattah 	1 

example  it cannot represent that a car contains three passengers  at least one of whom is a child  roller and pfeffer  1 . our relational approach can express such global constraints as global consistency queries. the key to the expressive power of our approach is that structured model templates are represented as parameterized relational queries that can be instantiated to generate specific model instances. 
　the present modeling framework can be extended to represent temporal causal networks  el fattah and provan  1 . this can be done by classifying causal relations in two classes: instantaneous and delayed and by including temporal data for delayed relations. the value of the output of a causal relation at any time t is determined by the values of the inputs at t if the relation is instantaneous and at t - d if the relation is delayed  where d   1 is the time delay. 
　our structured template specification requires a causal ordering of the subcomponents  similar to those used to describe the operation of physical devices  kuipers  1; iwasaki and simon  1; de kleer and brown  1 . previous work on bond graphs has also developed methods for causal ordering from a compositional modeling perspective  el fattah  1 . causal ordering is orthogonal to our modeling approach. we assume that all basic components consist of causal constraints  dechter and pearl  1  with pre-defined input-output directionality. the causal structure of our structured components is determined by the directed connections between its subcomponenets. if the connections and the basic constraints are non-directional then a causal ordering algorithm can be employed and the directional constraints are then cached in our database library. 
1 conclusions 
the paper presents a structured modeling language for automated modeling in causal networks. the language provides a formal method for specification of models based on a library of basic components. the library is represented by two relations: struc and func. the struc relation describes the templates for the structure 
of basic components  which determines the causal relation scheme and the associated causal network families. the func relation contains the value tuples for the causal relations of the basic components. the specification of models is done by instantiating structured component templates defined in sml. the information required for instantiating the templates can be acquired automatically from the schematic representation  e.g. the wiring diagrams  of the modeled system. the modeling knowledge is captured and maintained in the basic component library  which is then reused to generate causal models. the paper describes an efficient algorithm for the automated generation of causal models from specifiction. the approach has been implemented and successfully used to model an automated work-cell in a real-life digital manufacturing application. 
1 	qualitative reasoning and diagnosis 
