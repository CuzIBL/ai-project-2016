 
　　a motivation is given to introduce i n d e f i n i t e d e s c r i p t i o n s . parts of a d e s c r i p tion language are presented. mechanisms for the i n t e r p r e t a t i o n of i n d e f i n i t e des c r i p t i o n s are b r i e f l y discussed. keywords : knowledge r e p r e s e n t a t i o n   ai programming languages  o b j e c t - o r i e n t e d systems  d e s c r i p t i o n languages  reasoning  c o n s t r a i n ! propagation. 
	1. 	introduction 
　　a form in lisp or a term in prolog can be viewed as a d e s c r i p t i o n   i.e. an expression which refers to an entity in a domain of discourse. forms and terms are both def i n i t e d e s c r i p t i o n s . they are subject to 
two 	r e s t r i c t i o n s 
      i  the uniqueness condition : a desc riplion may onjy denote a unique r e f e r e n t   it cannot be ambiguous. for exampje    fat her john  is allowed because john can only have one f a t h e r   but  brother john  is not allowed because john may have more than one brother and it is therefore not clear which one is intended. 
       i i   the c o m p u t a b i l i t y c o n d i t i o n : when the referent of a d e s c r i p t i o n is needed during i n t e r p r e t a t i o n   it should be computable. for example  the expression  father john  must be computable when it is needed otherwise an error condition oc cur s. 
　　variables can also be viewed as descript i o n s . t y p i c a l l y   the uniqueness and comp u t a b i l i t y conditions hold for then too : a variable may have only one value  within a given environment of course  and the value should be r e t r i e v a b l e when needed  otherwise an error condition  unbound variable  r e s u l t s . 
　　descriptions that may have more than one possible referent or whose referent is not computable at the time it is needed are called i n d e f i n i t e . we want to develop a system where d e f i n i t e as well as i n d e f i nite d e s c r i p t i o n s can be used. 
　　for example   greaterthan 1   which denotes an unknown number greater than 1  or  divisor 1   which denotes a d i v i s o r 
of 1  i.e. 1 1   1 or 1  are i n d e f i n i t e d e s c r i p t i o n s which would be allowed in the system. note that the conjuction of  grea-
terthan 1  and  divisor 1  uniquely refers to 1. in other words  the conjunction of i n d e f i n i t e d e s c r i p t i o n s may be d e f i n i t e . 
　　a d e f i n i t e d e s c r i p t i o n provides a determ i n i s t i c method to compute the referent when needed. an i n d e f i n i t e d e s c r i p t i o n expresses a constraint on its r e f e r e n t . computation with i n d e f i n i t e d e s c r i p t i o n s consists of operations over c o n s t r a i n t s . for example   greaterthan 1  expresses the constraint that the refer en t has to s a t i s fy the predicate  lambda  x     1 x  .  divisor 1  introduces the constraint that the referent has to be a member of   1   1   1        1   1   . the predicate can be applied to f i l t e r members out of this set  so that tho 
conjunction 	of 	the 	two 	d e s c r i p t i o n s 	yields 
1 . 
　　in recent years there have been some proposals that are relevant to this researdi concepts like lazy evaluation  henderson and m o r r i s   1   or futures  hewi1   1   make it possible to delay evaluation u n t i l needed or u n t i l s u f f i c i e n t information is a v a i l a b l e . 
　　the concept of a l o g i c a l v a r i a b l e as used in prolog  kowalski  1  can be v i e wed as a way to relax the c o m p u t a b i l i t y c o n d i t i o n   because a l o g i c a l v a r i a b l e can be used even though its referent is not known or only p a r t i a l l y known. note however that a l o g i c a l variable can be bound to only one object at the t i m e   which would make it necessary to backtrack 1 times before 1 y i e l d s a successful match in the previous example  but see k o r n f e l d   1 . 
　　because the evaluation process needed to deal with i n d e f i n i t e d e s c r i p t i o n s resembles techniques used to implement cons t r a i n t p r o p a g a t i o n   there are some i n t e resting r e l a t i o n s to c o n s t r a i n t languages as well  cf. borning  1o   steele and sussman  1  
　　there are four motivations for studying i n d e f i n i t e d e s c r i p t i o n s . first they can be incorporated in ordinary programming l a n guages  p a r t i c u l a r l y in o b j e c t - o r i e n t e d languages in which d e f i n i t e d e s c r i p t i o n s 

1 l. steels 
	already 	play 	an 	important 	r o l e . 	second 	they lects 	are 	t   t o p     	nil  	and 1.  .bottom;. 
	can 	be 	incorporated 	in 	knowledge 	represen-  he 	domain 	of t 	is 	the 	universe 	of discour-
t a t i o n languages  p a r t i c u l a r l y in the recent generation of d e s c r i p t i o n languages  see e.g. winograd  1   a t t a r d i and 
simi 	  1    . 
　　t h i r d   because i n d e f i n i t e d e s c r i p t i o n s feature prominently in natural language  
the r e l a t i o n between formal languages and natural languages promises to become more 
t r a n s p a r e n t . f i n a l l y   i n d e f i n i t e d e s c r i p tions can be used as a component of query languages for databases. it would make it possible that a user supplies c o n s t r a i n t s in the form of i n d e f i n i t e d e s c r i p t i o n s to refer to an object in the database-. se. the domain of nil is the empty set.  he domain of 1 is o v e r d e f i n e d . when at a 
:ertain 	point 	a 	subexpression 	refers 	to 	the 
 verdefined o b j e c t   then the whole expres;ion refers to the overdefined object. 
	1. 	descriptions based on concepts 
　　the second type of d e s c r i p t i o n s is of the form  concept  or   concept    arg   . . . 
;arg    	for n   1. 	a concept may either be 
l f u n c t i o n   in which case a unique referent :an be computed given r e f e r e n t s as argulents. for example   +1  is a description with referent 1. but a concept need                                                            tot 	be 	a 	f u n c t i o n . 	for 	example  	 divisor in 	this 	short 	paper 	a 	f u l l 	treatment 	of 1  	is 	a 	d e s c r i p t i o n 	with 	possible 	r e f e the 	d e s c r i p t i o n 	system 	is 	impossible. 	i n -	 ents 	1 1 1 	and 	1. 	divisor 	is 	a 	con-
	stead 	we 	only 	introduce 	some 	basic 	l i n -	cept 	but 	not 	a 	f u n c t i o n . 
g u i s t i c 	constructs 	and 	mention 	some 	proper ties 	of 	the 	evaluation 	mechanism. 
1 . 	descriptive connectives 1. 	domain vs. 	referent 
	the 	d e s c r i p t i v e 	connectives 	dand  	dor  
	not  	deither 	and 	dancinot 	are 	used 	to 	com-
the 	f i r s t 	key 	idea 	is that we 	make 	a bine 	d e s c r i p t i o n s . 	they 	should 	not 	be 	con-
d i s t i n c t i o n between the domain of a destused with the p r o p o s i t i o n a l connectives 
c r i p t i o n 	and 	its 	r e f e r e n t . 	the 	referent used to 	combine 	statements 	in 	predicate 
is 	the 	element 	denoted 	by 	the 	d e s c r i p t i o n . calculus 	. 
	the 	domain 	is 	the 	set 	of possible 	elements 
	the 	d e s c r i p t i v e 	connectives 	r e f l e c t 	set-
out of which the referent has to be chosen. for the d e s c r i p t i o n 'uneven' the 
domain is the set of uneven numbers and the referent is an element out of this set - although it is unknown which one. the domain of 'the brother of john' is equal to all brothers of john. the r e f e rent is one element out of this set. 
　　the d i s t i n c t i o n between domain and referent allows the c o n s t r u c t i o n of a clear s e t - t h e o r e t i c semantics for a d e s c r i p t i o n language. by making it possible to give p a r t i a l d e s c r i p t i o n s of the domain  it theoretic r e l a t i o n s between the domains of the component d e s c r i p t i o n s . the referent of  dand d1 d 1  is an element out of the i n t e r s e c t i o n of the domains of d1 and d 1 . the referent of dor d1 d 1  is an element 
1ut of the union of the domains of d1 and d1. the referent of  deither dl d1  is an element of the domain of dl or of the domain of d1 but not of both. the referent of  dandnot dl d1   is an element out of the s e t - t h e o r e t i c d i f f e r e n c e between the domains of d1 and d1.  dnot d  is an ab-
b r e v i a t i o n 	of 	 dandnot 	t 	d   	i.e. 	dnot raises the expressive power of the language indicates a se t-t h e o r e t i c d i f f e r e n c e with also the e x p l i c i t r e p r e s e n t a t i o n of con- the domain of the a ll - d e s c r i p t i o n . thus s t r a i n t s on the domain makes the deduction  dnot female  is equivalent to  dandnot 
more 	powerful. 	often we 	know a lot 	about 	t 	female . the 	domain 	of 	a 	d e s c r i p t i o n 	but 	not 	its 
                                                               it 	is 	easy 	to 	prove 	that 	t 	and 	nil 	act r e f e r e n t . 	by 	operating 	at 	the 	level 	of as 	the 	i d e n t i t y 	and 	zero-element 	for 	these domains  	we 	can 	sometimes 	reduce 	the connectives. 	analogues 	exists 	also 	for 	the domain 	u n t i l 	it 	is 	a 	s i n g l e t o n   	i.e. 	u n t i l other 	p r o p o s i t i o n a l 	laws  	such 	as 	de there 	is 	a 	unique 	referent 	l e f t . 	these 
                                                           morgan's. points w i l l be i l l u s t r a t e d in the rest of the paper. first we introduce d e s c r i p t i o n 
	1. 	descriptions of the domain 
types 	there 	are 	a 	v a r i e t y 	of things 	that 	could 
	be know about 	the 	domain 	of a 	d e s c r i p t i o n . 
1. names and special objects 
	we 	want 	to 	have 	constructs 	that 	are 	able 
the simplest form of a d e s c r i p t i o n is a to express this p a r t i a l i n f o r m a t i o n . here 
name 	which 	uniquely 	i n d e n t i f i e s 	an 	element 
	are 	some 	examples 	: 
in the domain of d i s c o u r s e . 	a name 	is 	an 
enumeration of the possible members. 
atom or a d a t a s t r u c t u r e 	c o n t a i n i n g only 
	an 	expression 	of the 	form 	 element-of 
names as e l e m e n t s . 	sequences and sets are 
	x i ....x 	expresses 	the 	c o n s t r a i n t 	that 	the 
considered 	to 	he 	p r i m i t i v e 	d a t a s t r u c t u r e s . referent 	has 	to 	be 	either 	x1.... 	or x 	. 
f o r e x a m p l e   john   john mary james  and 
                                                                 for 	example  	an 	a l t e r n a t i v e 	d e s c r i p t i o n  john mary james  a r e e x a m p l e s of names. for 	 brother 	john  	could 	be 	 element-of there 	are 	three 	s p e c i a l 	objects 	in 	the 	george 	james . 
system. 	the 	undefined 	object 	or 	a l l - o b j e c t   
the n u l l - t h i n g or empty o b j e c t   and the o v e r d e f i n e d o b j e c t . the names of these ob-

　　partial enumeration. a d e s c r i p t i o n of the form  includes x  expresses that the referent comes out of a domain that has x as a member. for example  if it is known that george is one of the brothers of john then  includes george  is an a l t e r n a t i v e d e s c r i p t i o n for  brother john . 
　　cardinality of domain. the d e s c r i p t i o n  number-of x  with x an integer  i n d i c a tes that the c a r d i n a l i t y of the domain is equal to x. for example  if it is known 
that john has two b r o t h e r s   then  brother john  can be described as  number-of 1 . 
　　the deduction rules for the d e s c r i p t i v e connectives include rules for dealing 
with such domain d e s c r i p t i o n s . for example  the referent of  dand  brother john   friend frank    where  brother john  is  elementof george james  and  friend frank  is 
 element-of george mary   is equal to george because george is the only element in the i n t e r s e c t i o n of the domains of two 
descri pt ions. 
	1. 	variables 
　　variables are d e s c r i p t i o n s which start out as i n d e f i n i t e members of the universe 
and gradually assume t h e i r domain as cons t r a i n t s accumulate. variables are prece-
ded by the symbol : and are l e x i c a l l y scoped w i t h i n the expression in which they occur  although they may occur anywhere in the d e s c r i p t i o n . for example  in  dand : y 1   or its equivalent  dand 1 : y   the referent of : y w i l l be equal to 1  v a r i a bles in the d e s c r i p t i o n system thus behave like l o g i c a l v a r i a b l e s . 
	1. 	converse 	descriptions 
　　if   father george   i~s a~~de sc r i pt ion for john  then  with father john  is an a l t e r native d e s c r i p t i o n for george. a d e s c r i p -
tion of the form  with  concept   description  is called a converse d e s c r i p t i o n   because it denotes the converse of a concept. 
	1. 	evaluation 
　　the goal of evaluation is to find the name of the referent of a d e s c r i p t i o n   i.e. a value. when a d e s c r i p t i o n is d e f i n i t e   its referent can be computed and evaluation proceeds as ordinary a p p l i c a t i v e evaluation when the d e s c r i p t i o n is i n d e f i n i t e   the result from evaluation is a c o l l e c t i o n of c o n s t r a i n t s on the r e f e r e n t   called a cons t r a i n t c l u s t e r . 
　　these c o n s t r a i n t s take the form of a predicate that the referent has to s a t i s f y   generators which could start enumeration of the domain if needed  and c o n s t r a i n t s on the domain such as a l i s t of its members a l i s t of the elements not in the domain  a p a r t i a l l i s t of the members  the c a r d i n a l i t y of the domain  etc. 
　　the evaluator w i l l attempt to proceed with the computation even though p a r t i a l results are c o n s t r a i n t c l u s t e r s . deduction rules for the d e s c r i p t i v e connectives 
	l steels 	1 
operate 	over 	c o n s t r a i n t 	c l u s t e r s . 
　　for example  if the c o n s t r a i n t clusters of two d e s c r i p t i o n s contains p r e d i c a t e s   then the c o n s t r a i n t-c l u st er of the conjunction of the two d e s c r i p t i o n s w i l l contain the and-conjunction of the two p r e d i c a t e s . thus  dand  greaterthan 1   lessthan 1   results in   predicate  lambda  x  and 
   x 	1    	x 1           -
the evaluation process w i l l also attempt to apply functions to constraint c l u s t e r s . for example  when an e x p l i c i t domain is known  computations can be performed by mapping the f u n c t i o n . for example    +   e l e ment-of 1   element-of 1  is equal to  element-of 1 1 . 
　　note however that it is possible to specify d e s c r i p t i o n s whose referent w i l l not be computable because it would require the i n t r o d u c t i o n of much more knowledge. for example  the d e s c r i p t i o n  dand even prime  has only one r e f e r e n t   namely 1  but this cannot be determined from knowing predicates or generators on the component d e s c r i p tions themselves. 
	1. 	conclusion 
　　we argued for the i n t r o d u c t i o n of indef i n i t e d e s c r i p t i o n s   sketched some l i n g u i s -
tic constructs and b r i e f l y indicated a possible e v a l u a t i o n . 
