 
this paper presents a new scenario recognition algorithm for video interpretation. we represent a scenario model by specifying the characters involved in the scenario  the sub-scenarios composing the scenario and the constraints combining the sub-scenarios. various types of constraints can be used including spatio-temporal and logical constraints. in this paper  we focus on the performance of the recognition algorithm. our goal is to propose an efficient algorithm for processing temporal constraints and combining several actors defined within the scenario. by efficient we mean that the recognition process is linear in function of the number of sub-scenarios and in most of the cases in function of the number of characters. to validate this algorithm in term of correctness  robustness and processing time in function of scenario and scene properties  e.g. number of persons in the scene   we have tested the algorithm on several videos of a bank branch and of an office  in on-line and off-line mode and on simulated data. we conclude by comparing our algorithm with the state of the art and showing how the definition of scenario models can influence the results of the real-time scenario recognition. 
1 	introduction 
a problem of current focus in cognitive vision is automatic video interpretation. the goal is to develop a systematic methodology for the design  implementation and integration of cognitive vision systems for recognizing scenarios involved in a scene depicted by a video sequence. an automatic video interpretation system as described in figure 1  takes as input  1  a priori knowledge containing scenario models predefined by experts and the 1d geometric and semantic information of the observed environment and  1  video streams acquired by the camera s . the output of the system is the set of recognized scenarios at each instant. in this paper  we focus on the module of scenario recognition. the scenario recognition module takes as input the a priori knowledge of the scene and a stream of individuals tracked by a vision module. 
　to solve scenario recognition issues  we first propose a language to describe scenario models and second a temporal constraint resolution approach to recognize in realtime scenario occurrences. our scenario representation is mainly based on the representation of  vu et al  1  and inspired by the work of  ghallab  1 . in this paper  we focus on the optimization of the recognition method. we first enhance the processing of temporal operators by pre-compiling scenario models to decompose them into simpler scenario models. by this way  the scenario recognition algorithm uses a linear search compared to an exponential search for non-compiled scenarios. secondly  we propose a novel algorithm to recognize composed scenarios that takes advantages of the actors of its sub-scenarios when they are recognized instead of trying all combinations of actors as this is often the cases for similar state of the art algorithms. 
　we present in section 1 some related works. our scenario representation is described in section 1. the recognition algorithm is detailed in section 1. we conclude our paper by showing experimental results to validate this new algorithm. 
a priori knowledge 

figure 1. overview of an automatic video interpretation system. 

temporal reasoning 	1 

1 	related works 
since the years 1s  a problem of focus in cognitive vision has been automatic video interpretation. there are now several research units and companies defining new approaches to design systems that can understand human activities in dynamic scenes. three main categories of approaches are used to recognize temporal scenarios based on  1  a probabilistic/neural network combining potentially recognized scenarios   1  a symbolic network that stores totally recognized scenarios  strs  and  1  a symbolic network that stores partially recognized scenarios  sprs . 
　for the computer vision community  a natural approach consists in using a probabilistic/neural network  oliver and pentland  1 . the nodes of this network correspond usually to scenarios that are recognized at a given instant with a computed probability. for example   howell and buxton  1  proposed an approach to recognize a scenario based on a neuronal network  time delay radial basis function .  hongeng et al  1  proposed a scenario recognition method that uses concurrence bayesian threads to estimate the likelihood of potential scenarios. because video processing is very sensitive to noisy images  these probabilistic methods are useful to give an interpretation of the scene while taking into account the stochastic variations of the analysis. in our case  we use classical filtering techniques to get rid off these variations and to obtain coherent data that can be associated with symbolic values. 
　for the artificial intelligent community  a natural way to recognize a scenario is to use a symbolic network which nodes correspond usually to the boolean recognition of scenarios. for example   rota and thonnat  1  used a declarative representation of scenarios defined as a set of spatio-temporal and logical constraints. they used a traditional constraint resolution technique to recognize scenarios. to reduce the processing time for the recognition step  they proposed to check the consistency of the constraint network using the ac1 algorithm. more recently   gerber et ai  1  defined a method to recognize a scenario based on a fuzzy temporal logic. in the same year   vu et al  1  present an approach to optimize the temporal constraint resolution by ordering in time the sub-scenarios of the scenario to be recognized. the common characteristic of these approaches is to store all totally recognized scenarios  recognized in the past . 
　another approach consists in using a symbolic network and to store partially recognized scenarios  to be recognized in the future . for example   ghallab  1  has used the terminology chronicle to express a temporal scenario. a chronicle is represented as a set of temporal constraints on time-stamped events. the recognition algorithm keeps and updates partial recognition of scenarios using the propagation of temporal constraints based on rete algorithm. their applications are dedicated to the control of turbines and telephonic networks.  chleq and thonnat  1  made an adaptation of temporal constraints propagation for video surveillance. in the same period   pinhanez and bobick  1  have used allen's interval algebra to represent scenarios and have presented a specific algorithm to reduce its complexity. 
　all these techniques allow an efficient recognition of scenarios  but there are still some temporal constraints which cannot be processed. for example  most of these approaches require that the scenarios are bounded in time  ghallab  1   or process temporal constraints and atemporal constraints in the same way  rota and thonnat  1 . 
　we can distinguish two main categories of approaches to recognize a scenario based on a symbolic network: the strs approaches recognize scenarios based on an analysis of scenarios recognized in the past  rota and thonnat  1; vu et al  1   whereas the sprs approaches recognize scenarios based on an analysis of scenarios that can be recognized in the future  ghallab  1 . the strs approaches recognize a scenario by searching in the set of previously recognized scenarios a set of subscenarios matching the scenario model to be recognized. thus  if the system fails to recognize a scenario  it will have to retry the same process  re-verify the same constraints  at the next instant  implying a costly processing time. a second problem is that strs algorithms have to store and maintain all occurrences of previously recognized scenarios. the sprs approaches recognize a scenario by predicting the expected scenarios to be recognized at the next instants. thus  the scenarios have to be bounded in time to avoid the never ending expected scenarios. a second problem is that sprs algorithms have to store and maintain all occurrences of partially recognized scenarios  implying a costly storing space. 
　the method presented in this article is a strs approach taking advantages of the sprs approaches. the objective is to reduce the processing time  1  when searching in the past  list of previously recognized scenarios  for an occurrence of a given scenario model and  1  when trying to recognize a scenario involving several actors by avoiding checking all combinations of actors. 
1 	scenario representation 
our goal is to make explicit all the knowledge necessary for the system to be able to recognize scenarios occurring in the scene. the description of this knowledge has to be declarative and intuitive  in natural terms   so that the experts of the application domain can easily define and modify it. thus  the recognition process uses only the knowledge represented by experts through scenario models. 
　let  be the set of scenario models and  be the set of scenario instances  recognized scenarios . for a scenario model and a scenario instance p   we note  
the scenario model of p and we note p w  the set of 
recognized scenarios of the model  a scenario is composed of four parts: 
a   is the set of actor variables  characters  involved in the scenario  p  corresponds to the actors. an actor can be a person tracked as a mobile object by a vision module or a static object of the observed environment like a chair. 
 is the set of sub scenarios that compose is an elementary scenario if  if not  is called a composed scenario. each sub-scenario is represented by a variable v. these variables are called temporal variables because their value is a recognized scenario defined on a temporal interval. we note  a scenario instance corresponding to the value of the temporal variable v  and the set of variables corresponding to the actors of   is the set of sub-scenarios that should not occur 
during the recognition of the scenario we call the forbidden sub scenarios. is the set of forbidden actor variables involved in but not already defined in  and are called the forbidden variables. 
is the set of constraints of  there are three 
types of constraints: 
-the set of temporal constraints  noted  on at least one variable of  and not on any forbidden variable  
-the set of atemporal constraints  noted  on only 

-the set of forbidden constraints  noted  on any forbidden variable. 
　the three subsets and constitute a partition of we use the operator  and  to link the constraints within a set of constraints. to use the operator  or   we propose to define two similar scenario models with different constraints. an elementary scenario is only composed of a set of characters and atemporal constraints. 
figure 1 represents a model of a composed scenario 
 bank attack . this scenario involves two actors  a cashier and a robber. 
　in our representation  any scenario  involves at least one person  and is defined on a time interval. an interval is represented by its starting and ending times noted start and end defining the scenarios on a time interval is important for the experts to describe scenarios in a natural way. 
figure 1. one example of  bank attack  scenario is composed of four steps:  1  the cashier is at his/her position behind the counter   1  the robber enters the bank and moves toward the front of the counter then  1  both of them arrive at the safe door and  1  nobody else in the branch during the attack. the forbidden subscenario  step 1  is not necessary to recognize this  bank attack  scenario. we have included this constraint just to show the possibility of modeling forbidden sub-scenarios. 
1 	scenario recognition 
the scenario recognition process has to detect which scenario is happening from a stream of observed persons tracked by a vision module at each instant. the recognition process takes also as input the a priori knowledge of the scene and the scenario models. as defined in the previous section  there are two types of scenarios: elementary and composed. 
1 recognition of elementary scenarios 
the algorithm to recognize an elementary scenario model  consists in a loop of the selection of a set of actors 
then the verification of the corresponding atemporal constraints  until all combinations of actors have been tested. once a set of actors satisfies all constraints  we say that the elementary scenario  is recog-
nized and we generate an elementary scenario instance p attached with the corresponding scenario model  the set of actors and the recognition time t. the scenario instance is then stored in the list of recognized scenarios. if at the previous instant  a scenario instance p' of same type  same model  same actors  was recognized on a time interval  the two scenario instances are merged into a scenario instance that is recognized on the time interval  
　the selection of actors leads the recognition algorithm to an exponential combination in function of the number of actor variables. however  in practice  there are few actor variables in elementary scenario models  so the recognition algorithm is still real-time. 
1 compilation of composed scenarios 
a composed scenario is a sequence of sub-scenarios ordered in time. each sub-scenario corresponds to a temporal variable in the corresponding scenario model. the strs algorithms of the state of the art perform at each instant an extensive search process among all possible scenarios and sub-scenarios leading to an exponential algorithm. for example  for a given scenario  be-
fore before  ; if a scenario instance pw1 of w1 has been recognized  it makes sense to try to recognize the main scenario  . therefore  the strs algorithms will try all combinations of scenario instances  with 
　　we propose to decompose the scenario model into a set of simple scenario models containing at most two sub-scenarios. 
　to compile a predefined composed scenario model co  we define three steps:  1  build a graph with the temporal variables   1  generate intermediate scenario models for co and  1  link the generated intermediate scenario models based on the constraints  
temporal reasoning 	1 　as proposed by  ghallab  1   we first build a graph which nodes correspond to the temporal variables and which arcs correspond to the temporal constraints the arcs are oriented and are associated with a time interval corresponding to the time delay between the ending time of the two variables. for example  the constraint c  between v  v  is associated with an interval  a  b  indieating that v  can end in the interval  end vi +a  end v  +b . the constraint before is associated with  1  oo . after building the graph  called initial graph  with all temporal constraints between temporal variables a      we compute the equivalent complete graph and we check the graph consistency. these two graphs are equivalent because the only difference between them is the redundancy of some constraints. then  we simplify the complete graph by removing unnecessary arcs to obtain the least constrained graph. for any triangle abc of the graph  an arc ac is redundant  unnecessary   if the arcs ab and bc imply a stronger constraint. the simplified graph is equivalent to the two other graphs. the initial and simplified graphs for the scenario  bank attack   figure 1  are shown on figure 1. thanks to the simplified graph  all the temporal variables a    are ordered by their ending time. 
　the resulting scenario model is equivalent to the initial scenario model this two scenarios have the same actor variables and equivalent set of constraints. the only difference is that the constraints of the scenario   are verified at several intermediate levels corresponding to the intermediate scenario models as shown on figure 1. because any sequence of temporal variables can be ordered by their ending time  so any scenario model can be decomposed into intermediate scenarios containing only one or two temporal variables. 
　the recognition of compiled scenario models is described in the next section. the gain in processing time is due to the search algorithm: we just try several times to link two scenario instances instead of trying to link together a whole set of combinations of scenario instances. 

figure 1. to compile the scenario  bank attack   we build:  a  the graph with all temporal constraints kt      b  the simplified graph with only the necessary constraints and  c  the generated intermediate scenario models. 

figure 1. three intermediate scenario models are generated for the compilation of the scenario model  bank attack   and the initial model is equivalent to  bank attack 1 . 
1 recognition of composed scenarios 
the recognition of a composed scenario model  is triggered by a scenario template  which has been generated when the last sub-scenario  terminating has been recognized. the scenario template contains and the 
scenario instance pt with its list of actors a pt  that partially instanciates  is composed of two sub-
scenarios  or to be found. 
　if such a scenario instance  has been previously recognized in the past  then we are able to finish instanciating the remaining actors of  thus  just a few combinations of actors need to be checked avoiding an exponential search. 
　the last step of the algorithm consists in verifying whether all temporal and atemporal constraints and are satisfied with and if one forbidden constraint of cannot be satisfied then the scenario  c is recognized and stored in the list of recognized scenarios. 

1 	d i s c u s s i o n 
in the domain of temporal scenario recognition and among sprs algorithms  the chronicle recognition algorithm  ghallab  1  is one of the most popular. by storing partially recognized scenarios  it can speed up the whole recognition process. a partially recognized scenario corresponds to a prediction and enables to store all previous computations that do not need to be recomputed at the following instants. a main difference between the chronicle algorithm and our algorithm is that the chronicle algorithm has been developed to process scenarios defined with only one  actor  and can only recognize events detected at one time point. thus  this algorithm is efficient for the configuration  mono-actor . however  in the configuration  multi-actors   the chronicle algorithm has to duplicate the partially recognized scenarios for each combination of actors not already instanciated. this can lead to an explosion of memory allocation and to an exponential search. our algorithm is as efficient for the configuration  mono-actor  because we store the recognized scenarios which have been compiled. moreover  it is efficient for the configuration  multi-actors  because the recognized scenarios do not need to be duplicated even if some actors arc not instanciated. the worst case occurs with elementary scenarios because to recognize them at the current instant  all combinations of actors need to be checked. in real world applications  elementary scenarios do not contain many actor variables  less than 1  making the proposed algorithm sufficient to obtain an operational real time video interpretation system. 
1 	experiments and results 
to validate our recognition algorithm  we first integrated the algorithm with a vision module to obtain an operational interpretation system and then we have realized four types of tests:  1  on recorded videos taken in a bank branch and in two metro stations  one in belgium and one in spain  to verify if the algorithm can correctly recognize the predefined scenario models   1  on live videos acquired on-line from cameras installed in an office  in a metro station and in a bank branch to verify if the algorithm can work robustly on a long time mode   1  on recorded videos taken in a bank branch and on simulated data to study how the complexity of the algorithm depends on the scenario models  i.e. number of subscenarios and of actor variables  and  1  on simulated data to study how the complexity of the algorithm depends on the complexity of the scene  i.e. number of persons in the scene . 
   in the first experiment  we verify on recorded videos that the algorithm correctly recognizes several types of  bank attack  scenarios and several types of  vandalism against a ticket machine  scenarios in a metro station. the vandalism scenario involves in general two individuals  one looking around to check whether nobody is coming and the other one attempting several times to break the ticket machine. table 1 shows that the predefined scenarios were correctly recognized in most of the eases. the interpretation system fails to recognize some scenarios only in the cases when the vision module misses to detect the people in the scene. we have not detected any false alarm during all the experiment. the non-detection of false alarms can be explained by the fact that the scenarios are very constrained and there are unlikely to be recognized by error. 
   in the second experiment  we installed the interpretation system in an office and in a bank and we connected the system to one or two on-line cameras to acquire directly live videos. in this experiment  we used the bank scenarios and we slightly modified them to use them in the office. we ran the system in the bank for few hours and continuously during 1h in the office. as in the first experiment  the scenarios were most of the time correctly recognized  showing that the recognition algorithm can work reliably and robustly in real-time and in continuous mode. 
number of tested sequences    average number of persons/frame recognition rate  %  number of false alarms bank cam. 1 1 1 1 1 bank cam. 1 1 1 1 1 metro cam. 1 1 1 1 1 table 1. the recognition of temporal scenarios in videos of a bank branch and of a metro station. 

figure 1. the processing time of the new algorithm is closely linear time in function of the number of sub-scenarios. 

number of actor variables/model 
figure 1. the processing time  a  of the old algorithm and  b  of the new algorithm depend on the number of actor variables of predefined scenario models. 
   in the third experiment  we studied the processing time of the recognition algorithm in function of the scenario models. first  we studied the processing time of the algorithm focusing on the resolution of temporal constraints. in this experiment  shown on figure 1   we tested eight 

temporal reasoning 	1 

configurations of scenario models: the first configuration is made of scenarios containing 1 sub-scenarios and the last configuration is made of scenarios containing 1 subscenarios. on the bank videos containing about 1 frames  we found that the processing time of the classical strs algorithm is exponential in function of the number of sub-scenarios  whereas the processing time of our algorithm is closely linear in function of the number of sub-scenarios. 
   second  we studied the processing time of the algorithm focusing on the number of actor variables of the scenario models. in this experiment  shown on figure 1   we tested nine configurations of scenario models: the first configuration is made of scenarios involving 1 actor variables and the last configuration is made of scenarios involving 1 actor variables. to run the algorithm with enough actors  we simulated bank videos containing 1 persons. on these videos  we found that the processing time of the classical strs algorithm is exponential in function of the number of actor variables  whereas the processing time of our algorithm is closely linear in function of the number of actor variables. 
　in the fourth experiment  we studied the processing time of the recognition algorithm in function of the scene. to have a continuous variation of the scene  we simulated the scene. we built a scene environment with eight zones of interest and ten pieces of equipment. we simulated the individuals evolving in the scene at each instant. in these simulated videos  the number of individuals changed from 1 up to 1. to verify if our algorithm can recognize in real-time the predefined scenarios  we measured the maximal processing time per frame. we found that  the maximal processing time for each frame is 1ms for a scene of 1 persons. we also found that the average processing time for each frame is closely linear in function of the number of persons. figure 1 shows several tests of this experiment to illustrate how the processing time depends on the complexity of the scene. 
　with the fourth experiment  we can conclude that our recognition algorithm can recognized in real-time the predefined scenarios if the number of persons/frame is 

cpu 1mhz  1mb ram. 
1 	conclusion 
in the literature  there are two categories of symbolic approaches to recognize temporal scenarios: the strs algorithms reasoning on the past and the sprs algorithms reasoning on the future. first  we have shown that the strs algorithms recognize usually a scenario by performing an exponential combination search. then  we have explained that even if our proposed algorithm is a strs algorithm  it checks temporal constraints nevertheless by performing a linear search thanks to a step of pre-compilation of scenarios. second  we have also shown that the sprs algorithms have to try all combinations of actors to be able to recognize  multi-actors  scenarios. thanks to the pre-compilation step this drawback for our algorithm is limited to elementary scenarios. thus  processing time can still be an issue depending on the complexity of scenarios. for these two reasons  the proposed algorithm enables the integrated video interpretation system to be real-time. up to our knowledge  this video interpretation system is the first operational system able to recognize complex temporal scenarios. 
　our future work consists in taking care of the errors and the uncertainty of the vision module. the goal is to be able to continue the interpretation of the videos even when the vision module cannot cope with the real world complexity and then to be able to recognize more complex scenarios. 

figure 1. the  a  maximal and  b  average processing time/frame of the new algorithm depend on the number of detected persons. 
