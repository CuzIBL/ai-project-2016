 
hybrid kl-one-style logics are knowledge representation formalisms of considerable applicative interest  as they are specifically oriented to the vast class of application domains that are describable by means of taxonomic organizations of complex objects. in this paper we consider the problem of endowing such logics with capabilities for default inheritance reasoning  a kind of default reasoning that is specifically oriented to reasoning on taxonomies. the formalism that results from our work has a reasonable and simple behaviour when dealing with the interplay of defeasible and strict inheritance of properties of complex objects. 
1 	introduction 
hybrid kl-one-style logics  h-logics  for short - see e.g. 
 nebel  1   are knowledge representation formalisms of considerable applicative interest  as they are specifically oriented to the vast class of application domains that are describable by means of taxonomic organizations of complex objects. these formalisms  that may be seen as term-oriented syntactic variants of subsets of first order logic  are usually structured into two modules: the terminological module  allowing the representation of  concepts  and their implicit structuring according to a partial order  and the assertional module  allowing to state that given individuals are instances of the concepts described by means of the terminological module. 
　in the last ten years h-logics have been intensively investigated  with the attention of researchers especially focusing on the analysis of their logical and computational properties. little attention  however  has been paid to the problem of endowing these logics with default reasoning capabilities. this is despite the fact that default reasoning is an important item on the list of desiderata of h-logics users  see e.g.  peltason et ai  1    and despite the fact that in most domains that have a taxonomic nature  e.g. the natural species   default information is abundant. some researchers have 
   *this work has been partially funded by the progetto finalizzato  sistemi informatici e calcolo parallelo* of the italian national council of research 
1 	knowledge representation 
recently addressed this problem  see e.g.  baader and hollunder  1; brewka  1; nado and fikes  1    but we think that their work has been successful only to a limited extent. 
　in this paper we will address the problem of extending h-logics with the ability to perform default inheritance reasoning  a kind of default reasoning that is specifically 
oriented to reasoning on taxonomies and that had been used mostly within formalisms of a much smaller expressive power than h-logics  see e.g.  touretzky  1  . most systems dealing with default inheritance reasoning solve  conflicts  according to some sort of specialization principle  i.e. by relying on the partial order according to which the knowledge base is structured: as a first approximation we can say that  in case of conflicts  a default a -  b is  preferred  to another default  if the precondition of the former precedes the precondition of the latter in the ordering; this accounts for the fact that the conclusion derivable from the former is more reliable than the one derivable from the latter. 
　this paper is organized as follows. in section 1 we summarize the main notions of h-logics. in section 1 we describe the integration of default inheritance capabilities into h-logics  while in section 1 we present an algorithm for computing  extensions   i.e. sets of derivable conclusions . in section 1 we show that  unfortunately  computing an extension is a computationally hard problem in our formalism  even if its monotonic fragment is computationally tractable. section 1 concludes. 
1 	basic notions of h-logics 
in this section we present the basic notions of hlogics. for a more general presentation see  nebel  1  donini et al.  1 . 
1 	the terminological module 
we assume two disjoint alphabets of symbols  called atoms and roles. concepts  denoted below by c and d  are formed out of atoms  denoted by a and b  according to the following syntax rule: 

this logic is usually known as acc. other h-logics are obtained by allowing different concept-forming operators. an interpretation  consists of a set 


	straccia 	1 


1 	knowledge representation 

	straccia 	1 

1 	knowledge representation 

　since  given an hdit t  is a credulous instance of c wrt t iff t has an extension  from theorem 1 and theorem 1 we have the following corollary: 
corollary 1 the credulous instance problem for restricted hdits  either of type 1 or of type 1  is nphard. 
instead: 
theorem 1 the skeptical instance problem for restricted hdits  either of type 1 or of type 1  is co-nphard. 
the proof of theorem 1 wrt hdits of type 1  resp. type 1  is similar to the one for theorem 1  resp. theorem 1   except that in the reduction we do not consider rule  c . therefore  an arbitrary propositional 1cnf formula is unsatisfiable iff a:f holds in all extensions of . 
1 	conclusion 
in this paper we have shown how we can extend h-logics in such a way that they allow default inheritance reasoning  thus creating a formalism that combines the expressive power of a language for the description of taxonomic organizations of complex objects with the taxonomyoriented style of default reasoning which is typical of  inheritance systems with exceptions''. 
　the importance of our work lies in bringing these default reasoning capabilities into a family of logics that have gained wider and wider acceptance because of their reasonable expressive power  good computational properties  intuitive  object-oriented  syntax and wide spectrum of applicability. 
　we have presented an algorithm that computes extensions and shown that it is correct and complete. moreover  we have shown that  even if the  h-fragment  of our formalism were tractable  computing an extension or deciding that there are no extensions would be np-hard; similarly  also the  credulous or skeptical  instance problem  the realization problem and the retrieval problem are intractable. 
　our formalism has been designed with the aim of providing the minimal framework that would allow one to study the interaction of h-knowledge and default inheritance knowledge in a meaningful way. quite obviously  extensions to this framework may be conceived that enable the expression of more general concepts: any h-logic that contains acc may be profitably used. 
　for that matter  the formalism could also be straightforwardly extended to the representation of default rules of a different nature; for example  we might have defaults of the form 
and  are acc concepts. recently  baader and hollunder  have embedded this types of defaults into h-logics. however  their formalism  unlike ours  does not support the taxonomy-oriented brand of non-monotonic reasoning informed by the  principle of specialization''; it can thus be seen as  and has the disadvantages of  an  h-fragment  of a standard non-monotonic logic  in their case  reiter's default logic . 
