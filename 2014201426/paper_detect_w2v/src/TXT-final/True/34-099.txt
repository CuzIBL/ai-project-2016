 

     a system is described which uses light stripe input to construct 1-d body models useful for auto-
matic assembly. special hardware can extract a stripe from a tv picture in about .1 second. clusters of stripes from single surfaces in the body  and hence the equations of the surfaces themselves  are found by a program which forms hypotheses based on clues in the data and then tries to establish them. the resulting surface equations and the stripe evidence for them are used to produce the body model  which is a union of convex subsets of three-space formed as intersections of  possibly complemented  half-spaces and solid cylinders. 
introduction 

     this paper describes a system for deriving three-dimensional  1-d  body models from optical input data  figure 1 . as in the work of shirai  and agin    a plane of light is moved across the object under investigation. by viewing the resulting light stripes from another angle  points on them may be located in space using triangulation. our work differs from shirai's in that it deals with bodies having cylindrical as well as planar faces  and from both other projpcts in its concern with body models useful in solving problems of automatic assembly such as  how can this face be placed against that one   or  will these two objects clash if i do that to them . 

     we use a representation of 1-d bodies derived from that used by lang and braid . body models are built up from two kinds of primitives: the half-space h  defined as the set of points  and the i defined as the set of points 
bodies are represented as boolean combinations of sets resulting from transformations of the  perhaps complemented  primitives by members of the affine group of all rotations and translations of threespace. thus a rod would be represented as an intersection of a transformed cylinder and two transformed half-spaces. 
　　the system to build a body model from an object has been developed in three parts: 
　　1. the stripe finder  a hardware device which rapidly extracts a stripe from a tv frame. 
　　1. the surface finder  a software module which produces the surfaces of the object from the output of the stripe finder. 
　　1. the model builder  a software module which produces a body model from the output of the surface finder. 
　　at present the two software modules run in strict sequence  but it is intended to make them interact  so that if  for instance  the modelbuilder discovers that a surface has been missed  it can request a search for it- the process of changing over computing hardware and of continued development of the surface finder has delayed final integration of the system. the model shown in figure 1 was produced by storing surface finder output on disk for use by the model builder. 
the stripe finder 

　　if an ordinary tv camera is used to view a stripe which is nearly vertical as seen by the camera  then the stripe intersects each line of the tv scan only once  producing a single brief brightness pulse on the video wave form for each line. since each tv line is scanned at a constant speed  the time taken for the scan to move from the start  left side  of a given line to this video pulse is proportional to the distance of the stripe from the edge of the picture for that line. this fact is used by the stripe hardware. 
a program  to use the striper specifies: 
　　1. a brightness threshold  so that unwanted low level light  possibly scattered or reflected stripe light  can be ignored by the stripe finder. 
　　1. a tv scan line to be tested. 
　　1. a left-hand margin for the tv picture  within which the stripe detector is inhibited  so that the whole picture need not be dark. 
　　the stripe finder returns a result which is the number of ticks elapsed on a fast clock between the start of the scan on the chosen line and the time the stripe is encountered. minicomputer software is fast enough to permit stripe information from 

1 

successive tv lines to be acquired and stored  so data from an entire strip may be collected in one tv frame time. a detailed account of the stripe finder is given in . 
the surface finder 

　　1. a  scan  consists of a collection of stripes. a decision is made as to the spacing of stripes and direction of scans needed to give good evidence for the surfaces of the object under investigation; the scans are produced and put in a list. 
　　1. the individual stripes comprising the scan  figure 1  are segmented into linear segments  figure 1   all of which are marked  unexplained . 

　　1. the segment endpoints are located in threespace. 
　　1. a scan containing unexplained segments is chosen from the list of scans produced in step 1. if no such scan exists  all surfaces have been found; otherwise  let s be the set of unexplained segments in this scan. 
　　1. s is examined for curved sections of stripe wrongly described as sets of linear segments; such sections  if found  form a segment class   curved  segments. the rest of s  consisting of linear segments  is divided into  horizontal    vertical   and  general  segment classes. 
　　1. within the above classes  clusters are formed. the are named according to the type of surface with which they will be fitted; there are thus  plane clusters  and  cylinder clusters . some clusters of linear segments may in fact arise from cylinders; they are named  ambiguous clusters   figure 1 . not all segments in s need be put in clusters. 

figure 1 
two plane clusters of the segments of figure 1; the upper one is ambiguous. 
　　1. surfaces are fitted to the clusters. both planes and cylinders are fitted to ambiguous clusters and the type of surface providing the best fit is chosen. 
　　1. each surface found in step 1 is considered as a prediction that some unexplained segments lie in it. the entire list of scans is searched for such segments  the set of which  presumably containing most of the segments in the original cluster for this surface  becomes the  evidence  for the surface. the surface is refitted to the evidence  and the evidence segments are marked 
 explained . the strategy is re-entered at step 1. 
specific techniques 

   here some aspects of the general strategy are enlarged upon; the paragraph numbers correspond to those of the general strategy. 
　　1. the decision as to which scans to produce will ultimately he left to the system  including the model-builder. the decision arises in a natural 
way when the upper levels of interpretation wish more information about an inadequately sensed or a hypothesized surface. there is no need to make all the scans at once; segments can be accepted into known surfaces as the scans are produced. 
　　1. the 1-d stripes  in tv co-ordinates  are segmented by a recursive algorithm similar to one described in duda and hart ; each straight line segment is broken into two new segments at the point of its maximum deviation from the stripe if the deviation is above a threshold. a segment between stripeend-points starts the process. 
　　1. the 1-d to 1-d conversion process uses a matrix associated with each scan . the 1-d coordinates are fixed with respect to the body. 
　　1. this step is clear. 
　　1. the segmentation algorithm produces a set of linear segments from a curved section of stripe. curved segments are recovered from linear ones by rejoining the linear ones if the change of angle between them is not sudden. linear segment classes are decided on using the direction of segments considered as 1-d vectors. 
1 　　1. linear segments are clustered by accepting them one at a time into clusters on the basis of direction  overlap  distance  and adjacency criteria. curved segments are at present clustered only on the basis of overlap and adjacency. cylinders whose axes are nearly parallel to the light plane give rise to nearly linear segments of stripe and 
hence to linear segments; clusters which might have arisen from such cylinders are detectable through a number of cues  and are called  ambiguous clusters . there is no need at this stage to accept every segment into a cluster; when in doubt  it is best to leave a segment out  since it will likely be ac-
cepted into a surface at step 1. 
　　1. planes are fitted by an eigenvector method f1  which computes the principle axes of a set of 
points in 1-space  and thus can provide a least squared error f i t  error being perpendicular distance and thus independent of choice of axis  for both planes and lines. cylinders are fitted by an iterative minimisation algorithm  which requires an 
efficient cylinder representation and a good initial guess for the cylinder parameters. 
     a cylinder is described by an axis line and a radius r; the axis line may be specified by its direction and a point on it  i.e. a unit 1-d direction vector and a 1-d point vector x . one component of is redundant since  one component of x may be forced to a constant zero by forcing x to lie on one of the planes x=1  y=1  z=1; the plane chosen here should be the one minimising 
 the parameter vector given to the minimisation algorithm consists of r  two components of and two components of x. which component of x has  been forced to zero is remembered as an additional piece of information in the cylinder representation. 
　　the minimisation algorithm needs a good estimate for the cylinder because of the paucity of cylinder data produced in a single scan. to get the estimate  ♀is estimated first and then the points to be fitted are projected onto a plane perpendicular to & . a circle is fitted to the projected points  giving estimates for x. and r. 
   &  is estimated for cylinder clusters by using the fact that the angle of intersection of the light plane with a cylinder's axis stays constant throughout any scan. thus the intersection of the light plane with the cylinder always gives the same ellipse shifted in space parallel to the axis  

i.e. parallel to &. if corresponding points on these shifted ellipses can be identified  the vector between the points will be parallel to the 

axis  and hence will specify &. in fact  instead 

of complete ellipses  the curved segments of stripe which form a cylinder cluster must be used to find the shift. 
　　the  -determination algorithm uses the fact that consecutive ellipse sections  i.e. segments from successive stripes in a cylinder cluster  will have approximately equal slopes  in 1-d tv coordinates  at corresponding points. the slopes along two such segments are computed by taking first differences of their horizontal co-ordinate; the two resulting series of slopes are allowed to  slide past  one another  taking on all relative displacements in some interval. each displacement puts a set of slopes from one series opposite a set from the other  and for each displacement the goodness of the match between the opposite members of the two sets is computed. the displacement giving the best match is taken to define corresponding points of the segments. once a   is found from corresponding points in the first two segments considered  it can act as a prediction which allows a much reduced interval of displacements to be considered in succeeding &-determinations using pairs of segments from successive scans in the cluster. the final estimate of ♀ is the unit vector in the direction of the sum of  's determined by the segment pairs. since curved segments when projected along ♀  lie around the circle to be fitted  a simple least-squared error criterion is used to define the circle and thus estimate x and r. 
　　for ambiguous clusters of linear segments  r is estimated to be in the direction of one of the segments  all of which are approximately perpendicular to the circle to be fitted. three of the segments are projected onto a plane; each set of projected points from a segment has a mean 1-d position  and the circle is passed through these three mean positions. this method is an attempt to force the circle to pass through the segments  as it should do. estimates for the radius and two compoinents of x are thus found; the third component of x is estimated as the average of the third compoinents of the three segments. 
1. this step is clear. 
a hypothesis-based system 

　　the strategy is implemented in a system called hyper  which owes much in form to hierarchical synthesis  see barrow et al .     1     and to freuder's seerr 1 it can only be sketchily described here. while running  the system may be thought of as a network whose nodes are hypotheses and whose arcs represent what freuder calls the relation of  relevance . a hypothesis is the attribution of a predicate to an argument; its name is always of the form   predicate   argument  . among other qualities a hypothesis has a status  true  false  or pending  and a value  which may be anything  a list  a program  etc. . 
　　a hypothesis is established or falsified and its consequences ramified by running programs as-
sociated with its predicate. for every predicate p there are two such programs:  doknow p   a program which takes a hypothesis as argument and which establishes or verifies it  and  know p   a program which takes a just-established hypothesis as argument and suggests actions based on knowing the hypothesis' truth or falsity. these programs are run under a priority-ordered job queueing scheme. 
　　the know and doknow programs usually contain instructions both for performing general computations and for building and traversing the hypothesis network. the latter instructions are the hyper primitives: 
 constructive get  brackets  which get  or initiate action to get  the value of a hypothesis. 
affirm and deny  which assert a hypothesis' truth or falsity and ramify the consequences. 
1 assume  which constructs an  alternative world  in which a hypothesis is true  and ramifies the consequences. 
retract  which abandons the alternative world created by a particular assume command. 
fail  which retracts the most recently assumed hypothesis. 
verity  which allows a value to be suggested for a hypothesis and the suggestion to be tested. 
nudge  which suggests that a hypothesis be established if a value possibly needed to establish it has been computed. 
　　a system like this can be built to run  i.e. to generate and traverse the hypothesis network  top-down  bottom-up  middle-out  or all three at once. it acquires necessary information from other levels as it is needed  and wakes up programs when values of interest to them have been computed. 
the hyper system is more fully described in   
　　a fictional example showing the action of the simplest primitives may be of interest; suppose the following hypotheses have values of the following sorts: 

a  finite  intersection of transformed  possibly complemented  primitives. to produce a body model space is divided into cells defined by the observed surfaces  and cells are accepted into the union if there is evidence that they contain matter. 
　　the strategy is to start with a cell skycube which is guaranteed to enclose all the bodies being examined  and to divide this up using the observed surfaces. since to divide skycube completely by all the surfaces would produce an inconveniently large number of subcells  the effect of small surfaces is localized; skycube is divided in the following way: 
　　1. identify the surface of the table and divide skycube by this surface  and make a list of cells  at this point just containing the cell above the table. 
　　1. choose a surface  working in decreasing order of  seen  area; if no surfaces remain  the process has been completed. 
　　1. for each cell in the list  if the evidence for the surface shows that it exists within the cell as a matter/void transition  then divide the cell by the surface and replace it by the two resulting cells. 
　　1. go to step 1. 
　　evidence is judged adequate for a surface in a cell if in that cell it consists of at least two segments  and the combined length of evidence segments in the cell exceeds a threshold. 
　　the surface finder sends the model builder a set of surface records  each containing the mathematical specification for an  infinite  transformed primitive  h or cr  and the evidence for the surface of that primitive. the model produced from these records is a union of cells  where a cell is 
1 　　a 1-d version of this process is shown in figure 1. after the cell splitting  each surface has been used to divide at least one cell  and all the evidence occurs somewhere in the surfaces of the cells. if the surface finder missed no surfaces  each cell obtained by the splitting will represent space either filled with matter or entirely empty. 
　　since the bodies being examined are known to be entirely inside skycube  any cell with one or more of its surfaces in common with skycube must be empty. remaining cells with stripe evidence for a matter/void transition on at least one of their surfaces are classified as being full  others as being empty. cells entirely surrounded by matter could be classified as being full  but no program currently using body models needs information about such cells. a body model produced from two scans is displayed in figure 1. 

　　if the surface-finder produces scans with two great a space between stripes  or from too few directions  or from ill-chosen angles  then it may send incomplete information to the model 
builder. in fact  complete information on a body with deep concavities may be impossible to obtain with the striper. given incomplete data  the model builder may either 
1. produce a correct body model  or 
1. produce an incorrect body model  or 
1. complain that the date is incomplete. 
in future work we must try to minimize occurrences of 1  and provide suggestions to the surface finder so that complaints are intelligently dealt with. 
　　at present  if a cell has at least one surface which is a surface of skycubf and also at least one  visible  surface  or if a cell has a surface which is the complement of some surface for which 
stripe evidence exists on the cell  then it is 
assumed that there is a missing surface somewhere inside the cell. it would be possible  by examin-
ation of the location of the surface evidence to make some inferences about the position of the missing surface  but this is not done at present. 
　　if all the surfaces of a body are sufficiently large to register with the striper  the main cause of insufficient surface data being gathered is occlusion of surfaces by the body itself. a point on a surface is occluded if either the light plane cannot reach it or the tv camera cannot see it. though a correct body model often arises without all of any surface being seen  it is clearly desirable that the system should have some model of the occlusion process so that it may suggest action if occlusion could have caused a surface to be missed. 
acknowledgements 

　　this work has benefitted from many productive discussions with dr. h. g. barrow. the research was supported under science research council grant number b/rg 1. 
