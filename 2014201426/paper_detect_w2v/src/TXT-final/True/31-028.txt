 
this paper rests on several contributions. first  we introduce the notion of a consequence  which is a boolean expression that characterizes consistency-based diagnoses. second  we introduce a basic algorithm for computing consequences when the system description is structured using a causal network. we show that if the causal network has no undirected cycles  then a consequence has a linear size and can be computed in linear time. finally  we show that diagnoses characterized by a consequence and meeting some preference criterion can be extracted from the consequence in time linear in its size. a dual set of results is provided for abductive diagnosis. 
1 	introduction 
this paper presents an approach for computing diagnoses  reiter  1; de kleer et a/.  1  when the system description is structured using a causal network - figures 1 and 1 depict examples of structured system descriptions. 
　the most common approach for computing diagnoses has been the use of assumption-based truth maintenance systems  atmss   de kleer  1; reiter and de kleer  1 . we will first explain the difficulties with such an approach and then describe the elements of our approach that address these difficulties. 
　an atms assigns a  label  to each proposition. the label of proposition o characterizes all consistency-based diagnoses of the observation -o. once the label of a proposition is computed  one can immediately check whether the proposition is logically true. therefore  computing labels is no easier than deciding satisfiability  which is one source of difficulty with this approach. what makes the atms approach especially difficult  however  is that labels can grow exponentially in size  even on very simple diagnostic problems. this difficulty has led to a body of research on  focusing  the atms  which attempts to control the size of atms labels. focusing is based on the following intuition. the label of proposition o characterizes all diagnoses of observation -o. but one is rarely interested in all diagnoses  therefore  one rarely needs a  complete  label. most often  one is interested in diagnoses that satisfy some preference criterion  for example  most probable diagnoses . therefore  one can use such a criterion to compute  focused  labels that are of reasonable size  yet are good enough to characterize the diagnoses of interest. 
　although a standard framework exists for computing atms labels  forbus and de kleer  1   no such framework seems to exist for focusing. 
　the approach we present in this paper is based on three main ideas: 
　characterizing diagnoses using consequences: we introduce the notion of a consequence for characterizing all consistency-based diagnoses. the size of a consequence  which is a boolean expression  is always less than the size of a label. in fact  there are diagnostic problems that have exponential-size labels and linearsize consequences. 
　utilizing system structure in computing consequences: we introduce a basic algorithm for computing consequences  the complexity of which is parameterized by the topology of the system's causal structure. we show that for singly-connected structures  no undirected cycles   the consequence is always linear in size and can be computed in linear time. for some of these structures  a label can be exponential in size. 
　a principled mechanism for focusing on preferred diagnoses: we show that if a consequence has a particular syntax  and-or tree where no symbols are shared between and-branches   then one can extract the diagnoses it characterizes and that meet a specific preference criterion in time linear in the size of the consequence. diagnoses with the highest order-of magnitude probability is an example of such a preference criterion. 
　therefore  we are providing a paradigm for diagnostic reasoning with causal structures  consequences  and preference criteria as the key components. by using this paradigm  one is guaranteed some complexity results that are parameterized by the topology of the system's causal structure. as we shall see  this approach is based on the causal-network paradigm in the probabilistic and constraint satisfaction literatures  dechter and dechter  1; geffner and pearl  1; dechter and dechter  1 . in both cases  the system structure is the key aspect that decides the difficulty of a reasoning problem. this  conceptually meaningful  parameter is what diagnostic practitioners need to control figure 1: a structured system description  causal network  of a digital circuit. 
in order to ensure an appropriate response time for their applications. the probabilistic literature contains many techniques for tweaking this parameter to ensure certain response times  most of which can be adopted by our proposed framework. 
1 	characterizing diagnoses 
　in the diagnostic literature  de kleer et a/.  1   a system is typically characterized by a tuple i where is a database constructed from atomic propositions is a sentence constructed from p. the atoms in a are called assumables and those in p are called non-assumables. the intention is that the database describes the system behavior  the assumables represent the modes of system components and the sentence  represents the observed system behavior. 
　a diagnosis is defined as a conjunction of literals that is consistent with  and that includes one literal for each assumable. therefore  a diagnosis is an assignment of modes to components that is consistent with the system description and its observed behavior. in 

we will refer to the triple  as a system description and keep it implicit whenever possible. we will also assume that any satisfiable sentence constructed from assumables is consistent with database   this means that the system description does not fix the mode of any component. 
　given some observation  and some preference criterion  our ultimate goal is to compute all preferred diagnoses of  according to this criterion. we will do this in two steps. first  we will compute the consequence of which characterizes all its diagnoses. second  we will 
extract from cons   the preferred diagnoses. the second step will be addressed in section 1. in this and the following section  we focus on the first step. 
　we start with the following properties of consequences: 

　1we use a capital letter  such as y  to denote an atomic proposition  a small letter  such as y  to denote a literal  and a boldface letter such as y or y to denote a set of atomic propositions or a set of literals  respectively. 
equivalence. 
1 	automated reasoning 1 the consequence of a sentence is unique up to logical 

consider the system in figure 1 for an example. the consequence of c is true  the consequence of d is true  but the consequence of 
　if property c1 were true  then computing consequences would be very easy. to compute the consequence of   we keep rewriting the expression cons   using until we reach a boolean expression that involves only the connectives and and consequences cons n    where n is an observation that is local to an individual component. such consequences  called local consequences  can be computed easily since they can be 
inferred from the component description. 
　property c1 does not hold  however  and this makes the computation of consequences more subtle. property c1 may hold in certain cases. when it does  we say that is  independent  of . for example  c and d are not independent in figure 1 because cons  more generally: 
definition 1 let i  1  and k be disjoint subsets of p. the sets i and 1 are conditionally independent given k precisely when 
for all conjunctive clauses and 	over i  j  and k  respectively.1 
when k is empty  we say that i and j are marginally independent. note that property c1 is a special case of property c1 when k is empty since true is the only conjunctive clause over the empty set of atoms. 
i 
　therefore  the key to computing consequences is the ability to detect system independences  which would be used to invoke property c1. as we shall see next  the causal structure of a system is a very rich source of system independences. explicating such a structure when describing systems  and detecting system independences from such a structure  is the topic of the next section. 
1 	structured system descriptions 
when a system is described as in figures 1 and 1  the result is called a structured system description. 
a structured system description has two components: 
a causal structure and a set of component descriptions. the causal structure depicts the interconnections between system components  and component descriptions 
　1a conjunctive clause over atoms x is a conjunction of literals that includes one literal for each atom in x. 
describe the functionality of system components.1 formally  a causal structure is a directed acyclic graph  the nodes of which are the non-assumables p. a component description is a set of material implications. there is one component description  possibly empty  for each node in the causal structure. the component description associated with node n contains only two types of material implications: 
where  1  are constructed from the parents of n in the causal structure;  1  and are constructed from assumable atoms a; and must be inconsistent. these conditions hold iff a component description is local to a single component  1 and 1  and does not constrain the inputs of that component  1 . 
　we will use to denote a structured system description  where g is the causal structure   is the union of component descriptions  p are the atoms in g  and a are the atoms appearing in  but not in g. 
1 	system independences from system structure 
a most important property of a structured system description is that its topology explicates many system independences: 
theorem 1   darwiche  1    be a structured system description and let i  j  and k be dis-
joint sets of atoms in g. if i and j are d-separated by k in g  then i and 1 are conditionally independent given k wrt to    p a . 
d-separation is a topological test that can be performed in polynomial time and is discussed in detail elsewhere  pearl  1 . 
　in figure 1  a n d a r e not d-separated by the empty set  which means that and may not be marginally independent  this was confirmed in the previous section . but and are d-separated by 
     which means that they are conditionally independent given 
　this independence is useful for computing the consequence of observation   . .  . we first use 
  
therefore  
　the technique of applying property c1 to generate consequences that can be decomposed using property c1 is very powerful. in fact  the algorithm to be given in the following section for computing consequences is based on making  optimal  use of this technique. 
　1 a structured system description is a special case of a symbolic causal network  darwiche and pearl  1 . 


1 	automated reasoning 



　to compute   the algorithm applies property c1: 

where u is a conjunctive clause over u  the parents of 
　to compute   the algorithm partitions the observation into a number of observations each about the nodes connected to x through its parent u; see figure 1. this allows the application of property c1: 
which can also be justified using d-separation and theorem 1. a detailed derivation of this algorithm can be found in  darwiche  1 . 
　the complexity of the algorithm is similar to its probabilistic counterpart: linear in the number of arcs but exponential in the number of parents per node. we can verify this by counting the number of conjoin and disjoin operations. 
1 	extracting preferred diagnoses 
the algorithm presented in the previous section computes consequences that have the form of an and-or tree. if component descriptions do not share assumables  then no assumables will be shared by the branches of any and-node in the tree. in this section  we show that if a consequence satisfies the previous two properties  then one can extract from it the most preferred diagnosis in time linear in the size of the consequence  as long as the preference criterion meets some conditions. 
the preference criterion is specified by a triple is a set of costs   is some cost addi-
tion operation and is a cost total ordering.1 the cost function should be such that each literal or its negation has a zero cost and the cost of a diagnosis is obtained by adding the costs of its individual literals. an example of such a preference criterion is where the cost of a literal is the order-of-magmtude of its probability.1 
　given a preference criterion  and given an and-or tree r  with no assumables shared by branches of and-nodes   one can extract its most preferred diagnoses using the following recursive procedure:1 
is commutative  associative and has a zero element; 
the cost of a literal is 
its probability does not satisfy the above conditions since literals l! 
which have to 
be completed using zero cost literals. 
1 properties of the cost function ensure that 
1 	automated reasoning 

it is clear that the above procedure involves only a linear number of recursive calls  one for each node in the tree. what remains to be shown is some guarantee on the size of pd ti  during these recursive calls. as it turns out  each subtree on which a recursive call may apply represents the answer to a diagnostic problem that involves part of the observation o and some local observations involving a single component. in particular  each 
bitrary node in the network  y is one of its children  u is one of its parents  and u is a conjunctive clause over these parents. 
　we can summarize the guarantees for computing mostpreferred diagnoses as follows. first  computing the consequence is linear in the number of nodes and exponential in the number of parents per node in a causal structure: the computed consequence has the same size. second  extracting the most preferred diagnoses from the consequence involves a number of minimization and conjunction operations that is linear in the size of the consequence. finally  each one of these operations is applied to a pair of sets  each containing the preferred diagnoses of an asymptotically simpler diagnostic problem. 
1 	dual results for abduction 
there is a dual to consequence calculus  called argument calculus  which associates arguments with sentences in-
stead of consequences. the role that arguments play in abductive reasoning is similar to the role that consequences play in diagnostic reasoning. following is the definition of an argument wrt a system description and observation 
definition 1 the argument for written   is the logically weakest sentence a constructed from atoms a such that 
the duality between arguments and consequences is given below: 
theorem 1 	|. 
intuitively  the most general argument supporting is that the most specific outcome of does not hold. 
　argument calculus can be viewed as a semantical atms since the prime implicants of  constitute the atms label of .  darwiche  1 . this result  together with theorem 1  explains the influential role that atmss have been playing in diagnostic reasoning. 
　the following properties hold for arguments  darwiche  1 : 	arg false = 	false 
in figure 1 for an example. the argument for a is false  
assumables. 
	properties of the and-or tree ensure that 	= 
the argument for d is false  but the argument for a v d is okx. 
theorem 1 the sets i and j are independent given k  according to definition 1  precisely when 

　in figure 1  {b c  e  are independent of  d-separated from  {a d}. thus  

　given a system description  a  p  a  and an observation o   let us define an abductive diagnosis as a diagnosis a that  together with the system description  logically entails the observation  then: 
theorem 1 d is an abductwe diagnosis of system 

that is  the argument for observation 1 characterizes all its abductive diagnoses. therefore  theorem 1 is the basis for a dual set of results for computing abductive diagnoses. 
1 	conclusion and related work 
we have presented an approach for computing the most preferred diagnoses. we formally defined the class of system descriptions and the class of preference criteria to which the approach is applicable. we also characterized the computational guarantees it offers  which we believe are among the sharpest guarantees provided so far. 
　what is most important about our approach is that it ties the computational complexity of diagnostic reasoning to a very meaningful parameter: the topology of a system structure. thus  it provides diagnostic practitioners with more flexibility in engineering the response time of their applications. this emphasis on structure has been the central theme in probabilistic reasoning lately  pearl  1 . there have been some several attempts to import this theme into model-based diagnosis  dechter and dechter  1; geffner and pearl  1; dechter and dechter  1 . a number of structurebased algorithms have been provided for computing the most likely diagnoses  which seem to have similar computational complexity and appeal to the same underlying principles. previous algorithms  however  have rested on the language of constraints among multivalued variables. a major contribution of this paper is  the symbolic  consequence calculus  which allows computation directly on boolean syntax. this not only simplifies 
　1 a disjunctive clause over atoms x is a disjunction of literals that includes one literal for each atom in x. 
　1  an abductive diagnosis of observation is also called an explanation of 
structured-based algorithms significantly  but also provides a method for humans to compute diagnoses of nontrivial problems  as illustrated in section 1 . 
　another important feature of the presented approach is the very simple and general mechanism for focusing on preferred diagnoses  which comes with useful guarantees. we are unaware of similar guarantees on the computational complexity of focusing using a mechanism as general as the one we have proposed. 
