 
   a public virtual laboratory is presented  where animats are controlled by mechanisms from different cognitive paradigms. a brief description of the characteristics of the laboratory and the uses it has had is given. mainly  it has been used to contrast philosophical ideas related with the notion of cognition  and to elucidate debates on  proper  paradigms in ai and cognitive science. 
1. introduction 
virtual laboratories have been used in very different areas with different purposes. they are especially useful when they simulate situations which are difficult to reproduce  control  or observe. cognitive science studies phenomena that fall in this category. 
   a virtual laboratory has been developed for the comparison of different cognitive paradigms. experiments carried out in this virtual laboratory were used as  opaque thought experiments'* for discussing the notion of cognition  gershenson  1 . detailed information about the virtual laboratory can be found in gershenson  1 . 
1. a virtual laboratory 
   following the ideas presented in gershenson  gonzalez  and negrete  1   a virtual laboratory was developed for testing the performance of animats controlled by mechanisms proposed from different perspectives in a simple virtual environment. programmed in java with the aid of java1d libraries  this software is available to the public  source code and d o c u m e n t a t i o n i n c l u d e d   at http://student.vub.ac.be/-cgershen/cogs/keb/. the software allows the user to create and repeat controlled experiments for comparing the different animats in different situations in a friendly and informative fashion. 
   in the virtual laboratory  the user can create different phenomena  such as rocks  grey cubes   food sources  green spheres   rain  blue semitransparent cylinders   lightnings  black cylinders   and spots of different colours  circles : randomly or in specific positions. these also can be generated randomly during the simulation at a selected frequency. lightnings turn into rain after ten time steps  and rain turns into food after fifty time steps. 
   all the animats have an energy level  which decreases when their hunger or thirst are high  and is increased when these are low. an animat dies if its energy is exhausted. eating food decreases their hunger. they can decrease their thirst by drinking under rains. hunger and thirst are increased if they attempt to drink or eat  incorrect  stimuli. they lose energy if they touch lightnings or rocks. basically  an animat in order to survive needs to eat when hungry  drink when thirsty  and avoid lightnings and rocks. we can say that they are cognitive systems if they are successful  because they would know how to survive  gershenson  1 . the animats can leave a coloured trail in order to observe their trajectories. 

   there are many models that would solve the problem of surviving is such an environment  but it was decided to implement representative models of different paradigms in order to observe their differences and similitudes. these models are as follows: a rule-based system typical of traditional knowledge-based and expert systems; maes'  1  action selection mechanism  an already classical behaviour-

intelugent systems demonstrations 	1 

based system; an original architecture of recursive concept development  gershenson  1  as an example of the novel concept-based approach; a simple feed-forward artificial neural network; and a braltenberg-style architecture  braitenberg  1 . all the animats survive fairly well in the simple environment. a short description of each mechanism follows: 
  the rule-based animats have a set of rules  //.. then . these receive information from  cheater  sensors  i.e. with meaning given by the programmer  e.g. food perceived  hungry  obstacle close  etc.   and produce behaviours  e.g. explore  approach food  eat  avoid obstacle  etc.   with which a motor system has to deal. 
  the behaviour-based animats also have  cheater  perceptual and motor systems  but the control is determined by a network of behaviours  e.g. approach food  eat  avoid obstacle  etc.  which inhibit and excite according to the types of connections they have. 
  the concept-based animats only have basic sensors  e.g. redness  hardness  flavour  etc.   and they develop recursively concepts that they associate by reinforcement learning with predetermined behaviours. 
  the neural animats have three sensor pairs and two motors. each sensor perceives if a phenomenon  food  rain  or rock  is left or right of the animat. these signals  and signals from the internal medium  hunger and thirst  are inputs to a three-layered feed-forward neural network with fixed weights. the outputs go straight to the motors. 
  the braitenberg animats also have six sensors and two motors  but they are directly connected: food and rain sensors to the inverse motors  left to right  right to left   and rock sensors to the corresponding motors  left to left  right to right . 
1. comparison 
several experiments were performed in the virtual laboratory to compare the different properties of the architectures that control each type of animat  gershenson  1 . the reader is invited to download the virtual laboratory and compare the different architectures as well. 
　　we could see that we can describe the different animats in the same terms  because it can be said that they perform the same behaviours  independently on how these were implemented. also  distinguishing which architecture controls which type of animat is not possible for a naive observer. 
　　we observed that there is no general  best  architecture for the simple task of surviving in the virtual environment. we can say that each animat is better in different situations. yet it seems that this is more a consequence of the particular implementation than of the paradigm on which it stands  because the models can be adjusted and refuted to any desired degree of detail. in order to judge which architecture is better  we need to refer to a particular context. their performance cannot be generally measured  but only relatively to specific tasks. 
　　some models were very easy to implement in software code  others not so much  but occasionally it is a different story if we want to implement an architecture in a real robot. moreover  if a model works in a simulation and/or robot  it does not mean that animals function in the same way. some models are very robust. others would break up quite easily. some models are quite good if we have just practical purposes  and this also depends on the experience of the engineer. still  if we are interested in using them as explanatory models  the simplicity of their implementation might be secondary. also  if we would like to increment the systems  for example to include more environmental stimuli and internal variables  some would need to be redesigned  others could be easily extended. some models would have more ease in adapting to changes of their environment than others  but this does not mean that we cannot adjust different architectures in order to obtain the desired behaviour. 
　　we can say that different models  architectures  and paradigms  study different aspects of cognition. will we find ever a  best  model  it depends on our purposes and our context. generally speaking  we can say that all approaches are useful  since they illustrate different aspects of cognition. 
　　the observations in the virtual laboratory were useful for discussing and illustrating ideas related to the notion of cognition  gershenson  1   and to clarify debates concerning the  proper  paradigm for studying cognition  gershenson  1 . 
1. conclusions 
virtual laboratories allow us to explore different avenues than physical laboratories. this virtual laboratory was useful for illustrating questions such as  what makes a system cognitive  . it helped in showing that the observer plays a great deal in the cognition of the system  and that cognition is independent of the implementation of the system. 
