reid g. smith 
heuristic programming project  
department of computer science  stanford university  stanford  california  1. 
       distributed processing offers the potential for high speed  reliable computation  together with a means to handle applications that have a natural spatial distribution. in this paper  distributed processing is defined as processing that is characterized by physical decomposition of the processor into relatively independent processor nodes. recent advances in lsi technology  expected to result in 1 single silicon wafers with at least 1 active elements by 1  noyce  1   indicate that it is reasonable to contemplate designs which incorporate large networks of single chip processor nodes. 
       in this paper we examine the control of problem solving in such an environment  where most information is local to a node  and relatively l i t t l e information is shared by the complete network. individual nodes correspond to  experts  which cooperate to complete a top level task  analogous to the  beings  of  lenat  1  . the distributed processor is thus to be composed of a network of  loosely-coupled   asynchronous nodes  with distributed executive control  a flexible interconnection mechanism  and a minimum of centralized  shared resources. this puts the emphasis on  coarse grain  parallelism  in which individual nodes are primarily involved with computation  large kernel tasks   pausing only occasionally to communicate with other nodes. 
       the contract net represents a formalism in which to express the control of problem solving in a distributed processor architecture. individual tasks are dealt with as contracts. a node that generates a task broadcasts its existence to the other nodes in the net as a contract announcement  and acts as the contract manager f o r t h e duration of that contract. bids are then received from potential contractors  which are simply other nodes in the n e t . a n award is made to one node which assumes responsibility for the execution of that contract. subcontracts may be- let in turn as warranted by task size or a requirement for special expertise or data not in the possession of the contractor. when a contract has been executed  a report is transmitted to the contract manager. 
       contracts may be announced via general broadcast  limited broadcast  or point-to-point communications mechanisms  depending on information about relevant contractors available to the contract manager. i f   for example  a manager has knowledge about the location of particular data  then i t s contract announcement w i l l be directed to the node s  believed to possess that data  so that the complete network is not needlessly involved. 
       contracting effectively distributes control throughout the network  thus allowing for f l e x i b i l i t y and r e l i a b i l i t y . decisions about what to do next are made as a result of relatively local considerations  between pairs of processors  although the nature of the announcement-bid-award sequence maintains an adequate global context; that i s   the decision to bid on a particular contract is made on the basis of local knowledge 
¡¡this work is supported by the advanced research projects agency under contract dahc 1-c-1. computer f a c i l i t i e s are provided by the sumex-aim f a c i l i t y under national institutes of health grant rr-1. the author is supported by the research and development branch of the department of national defence of canada. e. a  felgenbaum  b. 
g. buchanan. g. wiederhold  k. g. knutsen  and e  j. gilbert provided a number of useful suggestions. f. k. buelow was a valuable source of lsi technology data. 
 the task being processed in the node contemplating a bid   and global knowledge  other current contract announcements . the formalism also incorporates two way links between nodes that share responsibility for tasks  managers and contractors . the failure of a contractor is therefore not f a t a l   since a manager can reannounce a contract and recover from the failure. 
       a node in the contract net is composed of a contract.processor  management processor  communications interface  and local memory.the contract processor is responsible for the applicationsrelated computation of the node. the management processor is responsible for network communications  contract management  bidding  and the management of the node i t s e l f . individual nodes are not designated a priori as contract managers or contractors. any node can take on either role  and during the course of problem solving  a particular node normally takes on both roles simultaneously for different contracts. 
       a contract is represented as a record structure with the following fields: name - the name of the contract  node - the name of another processor node associated with the contract. priority - a description of the  importance  of the contract. task - a description of the task to be performed results - a description of the results obtained/and subcontracts - a pointer to the l i s t of subcontracts that have been generated from the contract. 
       contracts are divided into two classes in a node: those for which the node acts as contractor  and those for which it acts as manager. the node field of a contract is f i l l e d accordingly - with the name of the contract manager in the f i r s t case  and with the name of the contractor in the second case. subcontracts waiting for service are held at the node that generated them  with an empty node f i e l d . 
       the priority description is used by a 
       management processor to establish a partial order over contracts to be announced  and by potential contractors to order contracts for the purpose of bidding. similar descriptions are also used to order contractors for the purpose of awards. the concept of priority thus must be generalized over simple integer descriptions to include such  layered  descriptions of potentially arbitrary complexity  which include both applicationsrelated and architecture-related information. 
       a task description also contains two types of information: the local context in which the task is to be executed  and the applications software required to execute i t . this information is passed when a contract is awarded. depending on the task  the required global context may be passed with the award  or further contracts may be let to obtain i t . software passed to a node for execution of a particular contract is retained for future use  and i t s presence has a favorable effect on the future bids of that node. 
       a sail simulation has been constructed to test the formalism. it accepts simple applications programs. and maps them onto a simulated distributed processor with a variable number of nodes. the simulation is being used to determine the costs associated with the formalism  in terms of both processor and communications overhead  and the decrease in computation time that can be expected for various applications. distributed heuristic search is presently being examined in this way  and alternatives in distributed deduction w i l l be examined in the near future. 
