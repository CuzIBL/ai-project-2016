 
coalition formation is a key problem in automated negotiation among self-interested agents  and other multiagent applications. a coalition of agents can sometimes accomplish things that the individual agents cannot  or can do things more efficiently. however  motivating the agents to abide to a solution requires careful analysis: only some of the solutions are stable in the sense that no group of agents is motivated to break off and form a new coalition. this constraint has been studied extensively in cooperative game theory. however  the computational questions around this constraint have received less attention. when it comes to coalition formation among software agents  that represent real-world parties   these questions become increasingly explicit. 
in this paper we define a concise general representation for games in characteristic form that relies on superadditivity  and show that it allows for efficient checking of whether a given outcome is in the core. we then show that determining whether the core is nonempty is -complete both with and without transferable utility. we demonstrate that what makes the problem hard in both cases is determining the collaborative possibilities  the set of outcomes possible for the grand coalition   by showing that if these are given  the problem becomes tractable in both cases. however  we then demonstrate that for a hybrid version of the problem  where utility transfer is possible only within the grand coalition  the problem remains   complete even when the collaborative possibilities are given. 
1 introduction 
coalition formation is a key problem in automated negotiation among self-interested agents. a coalition of agents can 

   *thc material in this paper is based upon work supported by the national science foundation under career award iri-1  
grant 
multiagent systems 
sometimes accomplish things that the individual agents cannot  or can do things more efficiently. however  motivating the agents to abide to a solution requires careful analysis: only some of the solutions are stable in the sense that no group of agents is motivated to break off and form a new coalition. this constraint has been studied extensively in cooperative game theory. however  the computational questions around this constraint have received less attention. when it comes to coalition formation among software agents  that represent real-world parties   these questions become increasingly explicit. 
　in general  computational complexity could stem from each potential coalition having some hard optimization problem. for example  when the agents are carrier companies with their own trucks and delivery tasks  they can save costs by forming a coalition  pooling their trucks and tasks   but each potential coalition faces a hard optimization problem: a vehicle routing problem defined by the coalition's trucks and tasks. the effect of such hard optimization problems on coalition formation has been studied by sandholm and lesser  sandholm and lesser  1 . as in the bulk of research on coalition formation  in this paper we do not address that issue. rather  we assume that such optimization problems have already been solved  at least the pertinent ones   and given this  we characterize the stable feasible outcomes. this has been the focus of most of the work in coalition formation. the contribution of this paper belongs to the relatively new  small set of papers that study the complexity of characterizing such solutions. 
　the determination of stable solutions has electronic commerce applications beyond automated negotiation as well. for example  consider a large number of companies  some subsets of which could form profitable virtual organizations that can respond to larger or more diverse orders than the individual companies can. determining stable value divisions allows one to see which potential virtual organizations would be viable in the sense that the companies in the virtual organization would naturally stay together. as another example  consider a future online service that determines how much each employee of a company should be paid so that the company does not collapse as a result of employees being bought away by other companies. the input to this service would be how much subsets of the company's employees would be paid if they left collectively  for instance  a whole department 

could be bought away . this input could come from salary databases or a manager's estimate. the computational problem of determining a stable renumeration would be crucial for such a service. both of these example problems fit exactly under the model that we study in this paper. 
　the rest of the paper is organized as follows. in section 1  we review the required concepts from cooperative game theory. in section 1  we define a concise general representation for games in characteristic form that relies on superadditivity  and show that it allows for efficient checking of whether a given outcome is in the core. in section 1  we show that determining whether the core is nonempty is -complete both with and without transferable utility. in section 1  we demonstrate that what makes the problem hard in both cases is determining the collaborative possibilities  the set of outcomes possible for the grand coalition   by showing that if these are given  the problem becomes tractable in both cases. in section 1  we show that for a hybrid version of the problem  where utility transfer is possible only within the grand coalition  the problem remains -complete even when the collaborative possibilities are given. 
1 	definitions from cooperative game theory 
in this section we review standard definitions from cooperative game theory  which we will use throughout the paper. in the definitions  we follow the most prevalent advanced textbook in microeconomics imas-colell et al.  1 . 
　in general  how well agents in a coalition do may depend on what nonmembers of the coalition do  e.g. lbernheim et  /.  1; chatterjee et ai  1; evans  1; milgrom and roberts  1; moreno and wooders  1; okada  1; ray  1  . however  in cooperative game theory  coalition formation is usually studied in the context of characteristic function games where the utilities of the coalition members do not depend on the nonmembers1 actions lkahan and rapoport  1; van der linden and verbeek  1: zlotkin and rosenschein  1; charnes and kortanek  1; 
shapley  1; wu  1 .  one way to interpret this is to consider the coalition members' utilities to be the utilities they can guarantee themselves no matter what the nonmembers do laumann  1; tohme and sandholm  1 .  
definition 1 given a set of players a  a utility possibilis a vector 
               representing utilities that the players in b can guarantee themselves by cooperating with each other. a utility possibility set is a set of utility possibility vectors for a given set b. 
definition 1 a game in characteristic form consists of a set of players a and a utility possibility set for each  
　sometimes games in characteristic form have transferable utility  which means agents in a coalition can transfer utility among themselves. 
definition 1 a game in characteristic form is said to have transferable utility if for every there is a number  
 the value of b  such that 
　it is commonly assumed that the joining of two coalitions does not prevent them from acting as well as they could have acted separately. in other words  the composite coalition can coordinate by choosing not to coordinate. this assumption is known as superadditivity} we will assume superadditivity throughout the paper. this actually makes our hardness results stronger because even a restricted version of the problem is hard. 
definition 1 a game in characteristic form is said to be superadditive if for any with b and c disjoint  and 
for any 	and 	  we have  
　　　　.  in the case of transferable utility  this is equivalent to saving that for any with b and c disjoint  
　we now need a solution concept. in this paper  we study only the best known solution concept  which is called the core  mas-colell et al  1; kahan and rapoport  1; van der linden and verbeek  1 . it was first introduced by gillies  gillies  1. 
definition 1 an outcome 	is 
blocked by coalition   if there exists such that for all  
          in the case of transferable utility  this is equivalent to saying that the outcome is blocked by  
an outcome is in the core if it is blocked by no coali-
tion. 
　in general  the core can be empty. if the core is empty  the game is inherently unstable because no matter what outcome is chosen  some subset of agents is motivated to pull out and form their own coalition. in other words  requiring that no subset of agents is motivated to break off into a coalition of its own overconstrains the system. 
　an example of a game with an empty core is the one with players   where we have the utility possibility vectors 
	  and 	 and the 
ones that can be derived from this through superadditivity . the same example with transferable utility also has an empty core. 
　in the rest of this paper  we will study the question of how complex it is to determine whether the core is nonempty  that is  whether there is a solution or the problem is overconstrained. 
1 	representing characteristic form games concisely 
in our representation of games in characteristic form  we distinguish between games without transferable utility  where we specify some utility possibility vectors for some coalitions  and games with transferable utility  where we specify the values of some coalitions. 
   'when superadditivity holds  it is always best for the grand coalition of all agents to form. on the other hand  without superadditivity  even finding the optimal coalition structure  partition of agents into coalitions  can be hard  sandholm et al.  1; larson and sandholm  1; shehory and kraus  1; 1; 

ketchpel  1 . 
1 	multiagent systems 

　if the representation of the game specifies explicitly for each coalition then the length of the representation is exponential in the number of agents. in that case  any algorithm for evaluating nonemptiness of the core  as long as it reads all the input  requires time exponential in the number of agents. however  that run time is polynomial in the size of the input  this can be accomplished  for example  using the algorithms that we introduce in section 1 . 
　of course  most characteristic form games that represent real-world settings have some special structure. this usually allows for a game representation that is significantly more concise. the complexity of characterizing the core has already been studied in certain very specific concisely expressible families of games before. for example  faigle et al. study the complexity of testing membership in the core in minimum cost spanning tree games  faigle et al  1 . deng and papadimitriou study games where the players are nodes of a graph with weights on the edges  and the value of a coalition is determined by the total weight of the edges contained in it  deng and papadimitriou  1j. deng et al. study an integer programming formulation which captures many games on graphs  deng et ai  1 . all of those results depend heavily on concise game representations which are specific to the game families under study. typically  such a family of games is played on a combinatorial structure. cooperative games on combinatorial structures have been systematically studied  bilbao  1 . 
　as a point of deviation  we study a natural representation that can capture any characteristic form game.1 conciseness in our representation stems only from the fact that in many settings  the synergies among coalitions are sparse. when a coalition introduces no new synergy  its utility possibility vectors can be derived using superadditivity. therefore  the input needs to include only the utility possibility vectors of coalitions that introduce synergy. the following definitions make this precise. 
definition 1 we represent a game in characteristic form without transferable utility by a set of players a  and a set of utility possibility vectors   here 
there may be multiple vectors for the same b  distinguished 
by different k indices.  the utility possibility set for a 
given 	is then given by  
all the dt are disjoint  and 
that whenever does not receive a value elsewhere in w. 
　so  we only need to specify a basis of utility possibilities  from which we can then derive the others. this representation integrates rather nicely with real-world problems where determining any coalition's value is complex. for example  in the multiagent vehicle routing problem  we solve the routing problem for every coalition that might introduce new synergies. when it is clear that there is no synergy between two coalitions  for example  if they operate in different cities and each one only has deliveries within its city   there is no need to solve the routing problem of the coalition that would result if the two coalitions were to merge. 
　the following lemmas indicate that we can also use this representation effectively for checking whether an outcome is in the core  that is  whether it satisfies the strategic constraints. 
lemma 1 without transferable utility  an outcome ua -  is blocked by some coalition if and 
only if it is blocked by some coalition b through some utility vector ub  where  
proof: the  if part is trivial. for  only if  suppose is blocked by coalition c through some   so that for every 
	we know 	where 
	but then  	blocks 	through 	＊ 
　the proof for the same lemma in the case of transferable utility is only slightly more intricate. 
lemma 1 with transferable utility  an outcome   is blocked by some coalition if and 
only if it is blocked by some coalition b through its value 

proof: the  if part is trivial. for  only if  suppose ua is blocked by coalition c through 

for all the 	to avoid senseless cases that 
have no outcomes  we also require that 	for 	1 checking whether the core is nonempty is all  	hard 
definition 1 we represent a game in characteristic form with transferable utility by a set of players a  and a set of values we now show that with this representation  it is hard to check whether the core is nonempty. this holds both for the non-. the value for a given 	is then 	transferable utility setting and for the transferable utility setall 	ting. 
	to 	definition 1  core-nonempty  we are given a super-
avoid senseless cases that have no outcomes  we also require additive game in characteristic form  with or without transferable utility  in our representation language. we are asked 
1
	our hardness results are not implied by the earlier hardness re-	whether the core is nonempty. 
sults for specific game families because it is not possible to concisely 
represent those games in our input language. 	we will demonstrate afp-hardness of this problem by re-
　　　1setting the utility to 1 in this case is without loss of generality  ducing from the afp-completc exact-cover-by-1-sets as we can simply normalize the utility function to obtain this. problem  garey and johnson  
multiagent systems 

definition 1  exact-cover-by-1-sets  we are given a set s of size 'sm and a collection of subsets ofs  each of size 1. we are asked if there is a cover of s consisting ofm of the subsets. 
we are now ready to state our results. 
theorem 1 core-nonempty without transferable utility is mv-complete. 
proof: to show that the problem is in afv  nondeterministically choose a subset of w  and check if the corresponding coalitions constitute a partition of a. if so  check if the outcome corresponding to this partition is blocked by any element of w. 
to show a/ p-hardness  we reduce an arbitrary exact-
cover-by-1-sets instance to the following 
core-nonempty instance. 	let the set of players be 
a = 	for each st  let 	be an el-
ement of w  with ust =  1 1 . also  tor each let be an element of w  with  
 1 . also  let be an element of w  with 	finally  let  
with 	with 
               with be elements of w. the only other elements of w are the required ones giving utility 1 to singleton coalitions. we claim the two instances are equivalent. 
first suppose there is an exact cover by 1-sets consisting . then the following outcome is possible: 
it is 
easy to verify that this outcome is not blocked by any coalition. so the core is nonempty. 
　now suppose there is no exact cover by 1-sets. suppose the core is nonempty  that is  it contains some outcome - with each an element of w  and the c1 disjoint. then one of the must be for some for if this were not the case  there must be some s ♀ s with = 1  because the that are equal to st cannot cover 1; but then would block the outcome. thus  none of the cx can be equal to . then one of the ct must be one of   or else two of  
would block the outcome. by symmetry  we can without loss of generality assume it is . but then will block the outcome.  contradiction.  so the core is empty. ＊ 
　we might hope that the convexity introduced by transferable utility makes the problem tractable through  for example  linear programming. this turns out not to be the case. 
theorem 1 core-nonempty with transferable utility is mv-complete. 
proof: to show that the problem is in mv  nondeterministically choose a subset of w1 and check if the corresponding coalitions constitute a partition of a. if so  nondeterministically divide the sum of the coalitions' values over the players  and check if this outcome is blocked by any element of w. 
to show .a/t -hardness  we reduce an arbitrary exact-
cover-by-1-sets instance to the following 
core-nonempty instance. 	let the set of players be a = 	for each 	be an element of 
w. additionally  let 	  and be elements of w. the only other elements of w are the required ones giving value 1 to singleton coalitions. we claim the two instances are equivalent. 
　first suppose there is an exact cover by 1-sets consisting of then the value of coalition s is at least combining this with the coali-
tion which has value 1m  we conclude that the grand coalition a has value at least 1m. hence  the outcome  is possible. it is easy to verify that 
this outcome is not blocked by any coalition. so the core is nonempty. 
　now suppose there is no exact cover by 1-sets. then the coalition s has value less than 1  since there are no m dis-
joint sx   and as a result the value of the grand coalition is less than 1m. it follows that in any outcome  the total utility of at least one of  is less than gra. so 
this coalition will block. so the core is empty. 	＊ 
　our results imply that it is computationally hard to make any strategic assessment of a game in characteristic form 
 
when it is concisely represented. 
1 	specifying redundant information about the grand coalition makes the problem tractable 
our proofs that core-nonempty is hard relied on constructing instances where it is difficult to determine what the grand coalition can accomplish. so  in effect  the hardness derived from the fact that even collaborative optimization is hard in these instances. while this is indeed a real difficulty that occurs in the analysis of characteristic form games  we may nevertheless wonder to what extent computational complexity issues are introduced by the purely strategic aspect of the games. to analyze this  we investigate the computational complexity of core-nonempty when v a   or v a   is explicitly provided as  possibly redundant  input  so that determining what the grand coalition can accomplish can no longer be the source of any complexity.1 it indeed turns out that the problem becomes easy both with and without transferable utility. 
theorem 1 when v a  is explicitly provided  corenonempty without transferable utility is in v. 
proof: the following simple algorithm accomplishes this efficiently. for each element of v a   check whether it is blocked by any element of w. m 
　for the transferable utility case  we make use of linear programming. 
theorem 1 when v a  is explicitly provided  corenonempty with transferable utility is in v. 
　　1 bilbao et al. have studied the complexity of the core in characteristic form games with transferable utility when there is an oracle that can provide the value v b  of any coalition b  bilbao et al.%  . our amended input corresponds to asking one such query in addition to obtaining the unamended input. 
multiagent systems 

proof: we decide how to allocate the v a  among the agents by solving a linear program. the core is nonempty if and only if the following linear program has a solution: 

　the algorithms in the proofs also construct a solution that is in the core  if the core is nonempty. 
1 	hybrid games remain hard 
not all complexity issues disappear through having the collaborative optimization problem solution available. it turns out that if we allow for hybrid games  where only some coalitions can transfer utility among themselves  the hardness returns. in particular  we show hardness in the case where only the grand coalition can transfer utility. this is a natural model for example in settings where there is a market institution that enforces payments  but if a subset of the agents breaks off  the institution collapses so payments cannot be enforced. 
　we demonstrate afp-hardness of this problem by reducing from the aap-complete node-cover problem igarey and johnson  1. 
definition 1  node-cover  we are given a graph g = 
 v  e   and a number k. we are asked whether there is a subset ofv of size k such that each edge has at least one of its endpoints in the subset. 
we are now ready to state our result. 
theorem 1 when only the grand coalition can transfer utility 
core-nonempty is nv-complete  even when v a  is explicitly provided as input. 
proof: to show that the problem is in nt  nondeterministically divide v a  over the players  and check if this outcome is blocked by any element of w. 
to show afp-hardness  we reduce an arbitrary node-
cover instance to the following core-nonempty instance. let a -   and let furthermore  for each edge jet be an element of w  with finally  for any be an element 
of w  with the only other elements of w are the required ones giving utility 1 to singleton coalitions. this game does not violate the superadditivity assumption  since without the explicit specification of t  j1   super-
additivity can at most imply that 
we claim the two instances are equivalent. 
　first suppose there is a node cover of size k. consider the following outcome: all the vertices in the node cover receive utility 1  all the other vertices receive utility 1  and each of x  y  and z receives utility  using the fact that all the edges are covered  it is easy to verify that this outcome is not blocked by any coalition. so the core is nonempty. 
　now suppose there is some outcome in the core. in such an outcome  either each of receives at least 
  or two of them receive at least each.  for if not  there is some with and some 
multiagent systems 
and the coalition 
it follows 
that the combined utility of all the elements of v is at most k. now  for each edge   at least one of its vertices must receive utility at least 1  or this edge would block. so the vertices that receive at least 1 cover the edges. but because the combined utility of all the elements of v is at most a:  there can be at most k such vertices. so there is a node cover. ＊ 
　hybrid games  where only some coalitions can transfer utility  are quite likely to appear in real-world multiagent settings  for example because only some of the agents use a currency. our result shows that for such hybrid games  even when the collaborative optimization problem has already been solved  it can be computationally hard to strategically assess the game. 
1 	conclusions and future research 
coalition formation is a key problem in automated negotiation among self-interested agents  and other multiagent applications. a coalition of agents can sometimes accomplish things that the individual agents cannot  or can do things more efficiently. however  motivating the agents to abide to a solution requires careful analysis: only some of the solutions are stable in the sense that no group of agents is motivated to break off and form a new coalition. this constraint has been studied extensively in cooperative game theory. however  the computational questions around this constraint have received less attention. when it comes to coalition formation among software agents  that represent real-world parties   these questions become increasingly explicit. 
　in this paper we defined a concise general representation for games in characteristic form that relies on superadditivity  and showed that it allows for efficient checking of whether a given outcome is in the core. we then showed that determining whether the core is nonempty is np-complete both with and without transferable utility. we demonstrated that what makes the problem hard in both cases is determining the collaborative possibilities  the set of outcomes possible for the grand coalition   by showing that if these are given  the problem becomes tractable in both cases. however  we then demonstrated that for a hybrid version of the problem  where utility transfer is possible only within the grand coalition  the problem remains a/'p-complete even when the collaborative possibilities are given. 
　future research can take a number of different directions. one such direction is to investigate the complexity of restricted families of games in characteristic form.1 another direction is to evaluate other solution concepts in cooperative game theory from the perspective of computational complexity under our input representation. a long-term goal is to extend our framework for finding a strategically stable solution to take into account issues of computational complexity 
　　1 one interesting restricted family is that of convex games. in a convex game  with transferable utility   for any  and in such games the core is 
known to always be nonempty. how complex it is here to construct a solution in the core with our representation is an open question. 

in determining the synergies among coalitions  for example  when routing problems need to be solved  potentially only approximately  in order to determine the synergies . 
