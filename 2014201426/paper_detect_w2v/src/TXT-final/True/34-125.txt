 
     computer based consultants are systems that incorporate specialized bodies of knowledge and 
make this knowledge conveniently available to users who are not computer experts. this paper summarizes initial progress on a computer based consultant project aimed at helping a novice mechanic work with electromechanical equipment. we describe some properties and abilities of consultants  and present results to date on the problem solving  vision  and natural language components of our evolving system. 
     keywords in this paper are: computer based consultant  advice-giving  problem solving  trouble-shooting  scene analysis  natural language understanding. 
introduction 

     one of the increasingly prominent trends in computer science research has been the emphasis on incorporating specialized bodies of knowledge in computer programs and making this knowledge conveniently available to users who are not computer experts. such programs-which we might call computer 

based consultants--can be viewed as stemming from 

the confluence of two lines of research. one line of research has centered on formulating and encoding a great deal of knowledge about a chosen problem domain in order to produce a program whose performance rivals expert humans. often cited examples of this research include programs that analyze chemical structure 1 perform symbolic integration 1 or play board games well.s1 
     the second line of research has focussed on metnods for constructing a program that can carry on a dialog with a user. important contributions to this research have come from work in computer aided instruction  and from work in understanding typed and spoken natural language. representative examples of this work include programs to carry out a  mixed initiative  tutorial dialog 1 to engage in a dialog about a toy block world1 and to understand spoken english sentences about such diverse topics as plumbing 1 news stories 1 moon rocks 1 or submarines.1 
¡¡¡¡¡¡the work reported herein was sponsored by the advanced research projects agency of the department of defense under contract dahc1-c-1 with the u.s. army research office. 
     perhaps one of the best examples to date of a complete computer based consultant is the mycin system.1 this system provides advice to physicians on the diagnosis and therapy of certain classes of bacterial diseases. it solicits various kinds of medical data from a physician user  can answer his questions  expressed in a restricted natural english format   and can accept advice from him regarding generally useful rules for diagnosis and therapy. 
     in this paper we describe initial progress on another computer based consultant. this new consultant is aimed at helping an inexperienced mechanic work with mechanical equipment. before describing the functional components of the system  let us first consider some of the characteristics 
of the problem domain. 
the problem domain 

     imagine a mechanic  whom we will assume to be relatively inexperienced  working on a piece of equipment in a  work station  like the one sketched in figure 1. he is typically responsible for a 
variety of jobs  such as troubleshooting  repairing  or modifying equipment. in order to do these jobs  
he needs certain kinds of specialized knowledge; he 
must know about the use of various tools  about principles of troubleshooting  and about principles of assembly and disassembly  and he must also know a certain amount of detail about the construction and operation of the specific equipment on hand. 
     a traditional way of conveying this knowledge to a mechanic has been through the use of manuals. a more nearly ideal  though usually impractical  way would be to make an expert mechanic continuously available as a consultant. the expert could identify various components  answer specific questions about equipment details  suggest troubleshooting sequences  hypothesize causes of failure  warn of hazards  and so forth. 
1      in order to explore what would be involved in replacing the human expert by a computer based expert  we recorded a number of dialogs between expert human mechanics and novice mechanics. the d i alogs concern the air compressor shown in figure 1.  we shall use. this compressor throughout the paper for illustrative purposes.  two excerpts from these dialogs are presented below. at the time the dialogs were recorded  the expert and novice were in different rooms and the expert viewed the scene only by means of still pictures taken through a television camera.  we did this to simulate the 

     this fragment illustrates several important abilities of consultants that contrast sharply with a static information source like a manual. first  notice that a question from the novice is answered directly and in his terms. there is no need for him to search through a mass of information  or to convert information from an abstract or  standard  form into a directly usable form. notice that the expert is checking on progress by offering warnings and reminders about c r i t i c a l steps. this has the function not only of minimizing errors  but also of 
allowing the expert to keep track of the progress of the work. the latter function is the basis for the expert1s a b i l i t y to present relevant advice  and to present it in a context that is familiar to the novice. 
     the second dialog expert concerns the same subtask  but was carried out with different participants. it offers an interesting comparison of the different demands imposed by different skill levels: 
excerpt 1 

	expert: 	install the pulley on the shaft. 
novice: what is the first thing to do in installing the pulley  
expert: rotate the shaft so that the slot  keyway  is on the top. 
novice: ok .. . now what  
expert: place the key in the slot. 

     this short fragment dramatically illustrates the a b i l i t y of the expert to descend into detailed instructions in order to help a very naive user. this novice needs much more help than the first one did  a situation foreshadowed by his initial question about a relatively simple operation. 
     the short dialog excerpts exemplify some of the abilities that a consultant needs in order to be helpful to the novice mechanic. both introspection and protocol experiments point out a number of other required abilities  among which are the a b i l i t y to provide advice about troubleshooting; to describe the use of tools; to describe the appearance of tools  or to be able to point them out ; and  of course  the a b i l i t y to use language. 
     the abilities required of a mechanic's consultant impose a number of technical requirements on a computer system designed to fill that role. it is worth mentioning just a few of these requirements to illustrate the research problems we are addressing. 
     the set of problems that is perhaps the most characteristic of our project centers on providing advice about a task at any of several levels of detail  and of interacting with the novice as he uses this advice. in particular  multilevel plans must be created and represented  the novice must be modeled in order to determine the level of detail he needs  his performance must be monitored as he executes the task  and internal models must be maintained to reflect the current state of the task environment. this  in turn  imposes a need for semantic representations that can accumulate a structured discourse history that evolves as the task proceeds  and that can provide linguistic contexts and clues to the novice's competence. also  because so much information is communicated visually  we must be prepared to use vision to answer questions from the novice; but  because the world of machinery is exceedingly complicated v i sually  we must exploit geometric models and se-
mantic constrains extensively if we expect to be able to answer a reasonable range of  visual questions.  
1      it is interesting to note that most of the foregoing technical requirements are not peculiar to a mechanic's consultant; they are likely to underlie any computer baaed consultant system. in the next sections  we w i l l outline the progress we have made on these research problems. 

system interfaces with the physical domain of the work station through several devices. a headset enables the novice mechanic to talk to the system and to receive spoken replies; it represents a natural language component of the system. a v i sual component is represented by a color television camera and a laser rangefinder. the laser rangefinder is a mechanically scanned instrument  developed for this project  that generates an array of range values supplementing the color television picture. the range array and picture arrays  one for each primary color  can be placed in registration  providing a multisensory image that specifies the color of  and distance to  each point in the scene. the rangefinder can also be operated as a visual pointer  so that the system can answer questions like  show me the pressure switch  by pointing at it--that is  by illuminating the pressure switch with the laser beam. 
     the raw sensory data provided by the transducers are translated into internal representations by the natural language and visual functional components of the system. these internal representations trigger subsequent action. for example  a question about an assembly step might be answered either by referring to an assembly sequence already stored in a model  or by using the planning capability to compose a sequency if the model does not contain an appropriate one. similarly  a question about the location of a part 
might be answered either by referring to a geometric model or by locating the part using new v i sual data. of course  the natural language and visual components themselves need various kinds of model information in order to translate raw data into internal representations. for example  in order to understand a given sentence  it is necessary to access a discourse model in order to establish the referents for pronouns or determined nouns. 
     with this system overview as a background  we can review the current stock of ideas and programs for each of the functional components. 
planning for assembly 

     the system component that has received the most attention to date has been the planner and associated model  for composing assembly and disassembly sequences- we have emphasized this because assembly and disassembly are subtasks of virtually a l l typical work station tasks. for example  many troubleshooting jobs and almost a l l repair jobs require some amount of disassembly and reassembly of the machine. 
     let us use the task of assembling the air compressor to illustrate in a simplified way how assembly plans are produced.* three different types of knowledge are used- a model of the specific air compressor  a procedural model that encodes more general information about how parts are fastened together  i.e.  assembled   and a planner that has abstract knowledge about how plans can be represented and about how the steps of a plan can interact. 
     the compressor assembly model is essentially a graph whose nodes correspond to the parts of the compressor  the motor  pump  pulleys  and so on   and whose arcs correspond to the mechanical connection between parts. a considerable amount of information is usually associated with each arc. for example  the arc representing the connection between a pulley and its shaft may include information about the set screws and key.  the key prevents relative rotation between pulley and shaft.  similarly  the arc connecting the belt cover and its support may contain information about the number and size of the sheet metal screws. this equipment-specific model also contains certain auxiliary information peculiar to the compressor  like the fact that the pump cannot be installed i f its pulley is already on the pump shaft. 
     each generic type of connection has associated with it a set of procedures that contain instructions about how that connection is physically accomplished. for example  a procedure associated with installing a pulley on a keyed shaft might include specific instructions about inserting the key and tightening the set screws. note that this procedure is independent of any specific piece of equipment; it offers generally useful knowledge about how a certain job in the domain of mechanical equipment is done  and it would be invoked whenever that job was necessary. in addition to the specific instructions  procedures of this sort contain calls to other procedures that elaborate in more detail how the given job is done. in our pulley and shaft example  we might want to call more detailed procedures for  say  describing how 
* 
1 disassembly plans are essentially similar  and will not be discussed explicitly. 
to align pulley and shaft or for dealing with rusty parts. this hierarchical structuring of procedural knowledge forms the basis for producing plans that can be stated to a novice at any of several levels of detail. 
     the procedural model of assembly operations allows the planner to generate instructions about how to connect two specific parts  but it does not select the order in which parts are to- be connected. this is the job of the general planning program. the planner adopts the view that if there are n connections to be made between pairs of parts  a l l connections are equally important and that there is no prior reason to prefer any particular order. that is  i t initially assumes that a l l n assembly steps will be made in parallels-logical ly  as a conjunction. however  it then expands the steps in greater detail  and examines the preconditions and effects of these steps to see if there is any interference among them. to continue our example  i t would discover that the pump can be installed only if there is no pulley on i t s shaft. this would interfere with a different assembly step; namely  installing the pump pulley on the pump shaft. the planner recognizes this potential conflict  and imposes an order so that the 
pump will be installed before its pulley is placed on its shaft. when a l l conflicts of this nature are resolved  the remaining steps can indeed be logically performed in any order. 
     this a b i l i t y to recognise alternative orderlngs of steps has major implications for any computer based consultant: a human performing a task may well take the i n i t i a t i v e on occasion and choose an ordering for certain stepa  and it ia important for the consultant to know whether this choice is valid. equally  the availability of alternative orderlngs affords an opportunity to ap-
peal to other ordering criteria like ease of physical operations. 
a plan is repreaented as a procedural net  a 

fragment of which is shown in simplified form in figure 1. each node corresponds to an assembly step at some level of detail. the net represents 

a hierarchy of plana  a l l accomplishing the same task but stated at varying levels of detail. the ith row of the net represents one complete plan at the 1 t h level of detail  and the dotted lines indicate the expansion of a step into a more detailed subplan. notice that the level 1 plan splits into two parallel paths at a and merges together at b in order to represent the fact that the two subplans can be performed in either order. 
¡¡¡¡¡¡procedural nets have proven useful in several ways. perhaps the moat obvious is that it allows us to apeclfy a plan to the novice mechanic at varying levels of detail. typically  the novice will understand some atepa at a high level and need little or no additional elaboration  whereas he will be mystified at other steps and need to have them expanded into more complete instructions. by keeping track of an execution path through the net  we can link steps at the various levels of detail. the more general problem here is to learn how to monitor the mechanic's performance as he executes a task. we would  for example  expect the system to ask occasional questions of the novice  just as the human expert did in the dialog  in order to monitor his progress as he proceeds through the net. thus far  our system is not that flexible and monitors progress by adhering to a more limited dialog format. 
     in addition to the several uses of procedural nets at plan execution time  they are also used during planning to represent partially formed plans. this allows us to restart the planner to modify an existing plan during the course of i t s execution  which in turn permits us to respond to information discovered as the assembly physically proceeds. further discussion of procedural nets and arbitrary orderlngs of plan steps w i l l be found in a forthcoming paper.1 
     before leaving the subject of assembly planning we should mention a second type of hierarchy which is distinct from the hierarchy of plan de-
tails that we have been discussing. this second hierarchy deals with levels of equipment  and is motivated by the fact that often the major parta 

1 

of a mechanical device are themselves components that can be assembled and disassembled. for exam-
ple  the pump of the air compressor has a piston  crankshaft  and valves and is in fact similar in some ways to a simple one cylinder gasoline engine. we thus expect that the general scheme for assembly planning described above would be replicated hierarchically to deal with several levels of components of the equipment. ideally  then  we hope eventually to be able to provide consultation at aeveral levels of detail about any of several levels of equipment components. we have only recently begun considering this second hierarchy  but it appears to entail a relatively straightforward extension of the ideas discussed already. 

planning for troubleshooting 	vision 


     troubleshooting is a key element of a mechanic's job  and often represents the task requiring the highest levels of s k i l l and experience. in spite of its obvious importance  we have given it relatively little attention thus far because of our decision to f i r s t reach a reasonable level of competence at assembly planning. accordingly  we can offer here only tentative remarks about troubleshooting  and describe the two main approaches that we are currently pursuing. 
     the two approaches of interest might be termed the  engineer's approach  and the  technician's approach.  the engineer's approach rests on a detailed tracing of cause and effect in order to find where the causality chain breaks down. the technician's approach eschews this timeconsuming effort  except as a last resort  and instead relies on experience to suggest likely candidate faults to be investigated directly. 
     let us use the example of the air compressor to contrast these two approaches. suppose the stated problem is that the compressor can no longer power several air tools that it normally can drive. the engineering approach might begin by tracing the electrical circuits to ensure that the motor is receiving the correct voltage and current. assuming that it is  and that the belt connecting the motor and pump is in place   the next step might entail checking the volume and pressure of air output from the pump unit. an inadequate output would pinpoint the pump as a likely suspect  and an investigation of it would continue in the same vein. in contrast to this approach  a skilled maintenance mechanic familiar with the air compressor knows that the reported symptoms are often caused simply by a lack of lubricating o i l in the crankcase of the pump. he would fill the crankcase immediately  and if the air compressor was then able to power the usual air tools he would assume that his suspicions were correct and that the problem was now corrected. 
     it seems clear that a computer based consultant needs to be able to employ both of these approaches  and be able to switch between them when appropriate. an implementation of the engineering approach has begun in a simple way; it relies on a simulation model of the equipment to suggest a sequence of tests or observations corresponding to a sequence of causes and effects. an indication of a malfunctioning component is obtained whenever an observed effect differs from the effect predicted by the simulation. an alternative to this implementation is suggested by shortllffe's 1 ruledriven system  in which each rule corresponds to a simply stated fact or rule of thumb. we are currently investigating the extent to which some sort of rule-drive system can be adapted to mechanical troubleshooting. 
     the domain of electromechanical machinery is an extraordinarily difficult one in which to do automatic scene analysis. equipment and components usually have only a limited range of hue and saturation values. visual texture similarly is very limited; specular highlights are often complex  and can vary depending on such vagaries as  oil-canning  of sheet metal parts; shadow patterns can be very complex and depend in complicated ways on the particular stage of assembly; and  finally  machines and components assume a very wide variety of shapes. indeed  scene analysis in the domain of machinery is likely to be more difficult than  say  in the domain of offices or even landscapes  because in the latter two domains there is a much richer variety of perceptual clues. for these reasons  we have elected to ap-
proach the vision problem by capitalising on prior knowledge of visual appearances and geometric relations  and by limiting our aspirations at the outset to a set of subproblems that are both important and tractable. 
     we have implemented thus far several modular vision packages to perform specific tasks. one interesting module is a tool recognizer that can accept limited semantic descriptions of tools  build a model of the tool from the description  and aubsequently use this model to discriminate an isolated hand tool from a set of alternatives. 
let us outline briefly how this is done. 
     consider the open-end wrench shown in figure 1. this wrench is a member of a large class of 

	figure 1 	an open end wrench 
hand tools characterized by one or more connected shafts or handles  with an optional  business end  that is applied to a fastening; screwdrivers  nutdrivers  hammers  and many varieties of wrenches f a l l in thi s class. the basic operation of the tool recognizer is first to find a shaft  or handle  based on typical aspect ratios for tools  and then to concentrate attention on the end of the shaft in order to determine the tool type. model information about the endplece is provided in ad-
1 vance by an operator  who may use a circumscribed rectangle  as shown in the figure  as a reference for his description. in the case of the open-end wrench  the operator could specify that the endpiece has a convex curved outline between its upper left  ul  and lower left  ll  endpoints  is again curved convex between the upper right and lower right  and is u-shaped between the upper left and upper right endpoints. relative acale information would typically also be added to ensure that various parts were reasonably proportioned. 
     in operation  after finding a tool shaft or handle  the tool recognizer module constructa a loose bounding rectangle in order to determine 
whether: 
1  an endpiece is attached to the end of the shaft/handle; 
1  the end of the shaft/handle is connected to another shaft/handle; or 
1  nothing is attached to the end of the shaft/haudle  e.g.  the ends of an. alien wrench  the free end of a tool handle . 
coarse size and shape tests are performed to eliminate broad classes of tools. for example  hammerlike tools are easily distinguished from screwdrivers and wrenches on the basis of aspect ratio. in the case of an endpiece  the loose rectangle also gives gross upper  lower  left  and right limits  which are then refined by shrinking the rectangle to a minimum enclosing size. figure 1 a  illustrates an intermediate processing step using a combination wrench as an example; the program has located the tool shaft  and has circumscribed a tight bounding rectangle around one of its ends. on the basis of this information  the tool may be an open-end wrench  a box-end wrench  or a nutdriver. included in the model information for these tools are tests for distinguishing features possessed by the tools. for example  the open-end and box-end wrenches have an opening in the center of the endpiece  whereas the nutdrlver is solid in the center. the program generates a square grid of points within the bounding rectangle and determines whether any of these points is within the brightness range of the background region  figure 1a . since some of the points pass the test  the nutdrlver is ruled out as a possibility and the program looka for a test which w i l l distinguish the open-end wrench from the box-end wrench. using the test  open-at-top   the program attempts to scan an uninterrupted straight line from the center of the bounding rectangle to a point on the top segment of the rectangle  as shown in figure 
1b. 
     using the distinguishing features tests  the program has refined i t s hypothesis about the identity of the tool to a single candidate  the openend wrench. it now attempts to verify this hypothesis using model information which describes the shape of the endplece  in this case by finding the curved convex sides and the u-shaped opening between the upper right and upper left endpoints of those sides. 
     it is interesting to contrast this approach to tool recognition with a brute force template 
matching approach. on pragmatic grounds  template matching is not very attractive simply because of the variety of tools  and of sizes of tools   the large number of translations and rotations that a tool can assume  and the inadequacy of template matching if a tool is partially occluded. on conceptual grounds  the approach outlined above is interesting chiefly because of the ease with which new tools can be described by their functional characteristics. in the wrench example  the description is a primitive attempt to say that  anything that can be used as a wrench is in fact a wrench.  tools are a particularly good domain in which to pursue this philosophy because they are artifacts with clear functional purposes. 
     two other interesting vision modules entail the ability to point to specific components of 
machinery. both rely on an underlying geometric model of the equipment at hand. the first module enables the consultant to answer requests of the form  show me the x  by pointing at x with the laser rangefinder. this is accomplished using a hidden surface algorithm of a very simple variety to locate the outline of a visible surface of the desired component. once the surface has been determined  a little care is needed to guard agalnat the possibility of pointing at the component by pointing through a hole or a concavity.  for example  we would not want to point at a doughnutshaped part by pointing at the hole.  a simplified form of the medial axis transformation is 
used to find a thick region of the part that can serve as a target. 
     the second pointing a b i l i t y is intended to allow the novice technician to ask questions of the form  what part is this *' by pointing at the unknown part himself. we currently uae a wand with a small light at the tip to simplify processing  yet retain a natural form of pointing for the novice. a ray in space is defined by the wand t i p and the camera lens; intersecting this ray with a geometric model of the equipment provides the information needed to answer the question. 
     the modules described above have some direct extensions that we expect to pursue in the near future. for example  the pointing modules rely heavily on the use of geometrical models of equipment. using these models  we expect to develop means for finding and determining the orientation of a machine or component of interest to the novice. an open question centers on the extent to which range data w i l l simplify the problem. we have already devoted a good deal of attention to a formalism for combining multlsensory data;1 we 

1 

will need to explore the ease of applying the formalism to the complicated collection of shapes typical of most machinery. 
     having said something about our plans for v i sion  we should perhaps also mention that we are not planning in the near future to use vision to answer fine grained mensuration questions like  are the pulleys aligned sufficiently well   we expect that most realistic questions of this form will tax the resolution of our transducers and prefer not to devote our energy to this class of problem. 
language communication 

     we were persuaded at a very early stage that natural language communication would have to be an integral part of a mechanic's consultant. aside from the unfamiliarlty a mechanic presumably has 
with a computer terminal  it seems unreasonable to ask  say  an auto mechanic to crawl out from under a car in order to ask how to replace a u-joint.* thus  our ultimate goal is to allow the novice to use natural english speech to talk to the computer based consultant. symmetrically  a second goal is to enable the consultant to talk to the novice using ordinary speech. in recognition of the difficulty of these ultimate goals-chiefly the f i r s t one--we have set as intermediate goals the development of more restricted language components that will still allow our experiments to proceed. 
     our current language a b i l i t y rests heavily on a commercially available device known as a phrase recognizer.* the phrase recognizer is able to recognize an isolate speech fragment up to two seconds long  once the device has been trained by listening to the novice say each phrase  or word  several times. in our experimental work  a typical vocabulary of roughly 1 words is evenly divided between object names and control words. control words include items like  why    how   and  show-me-the   while object names are mainly part names. 
     to enable the computer based consultant to talk to the novice  we use a commercially 
our intuition recently received some support when we learned of a simple program providing diagnostic advice to auto mechanics. when field-tested by a major auto manufacturer  it was found to be  a disappointment  because the men wouldn't go near a keyboard.  
ours  the vip-1  is manufactured by threshold technology  inc. other suppliers are also entering the market. 
available phoneme synthesizer. ¡ì the synthesizer accepts a sequence of phoneme specifications from the computer and converts these to audible form  producing speech output. a programmer-defined output vocabulary is implemented by selecting a phonemic representation for each word; once this has been done  that word  which is reasonably understandable  may be used in any context. there is thus no intrinsic limit to vocabulary size  and the system is much more convenient and compact than say  a direct digital representation of acoustic waveforms. 
     the combination of phrase recognizer and phoneme synthesizer has been notably useful in a l -
lowing us to experiment with fragmentary versions 
of a consultant system. they permit us  at the very least  to gain some intuition about the   l i v e   behavior of such a system. on the other hand  the phrase recognizer in no sense  understands  linguistic content  there is a very limited a b i l i t y to handle even simple sentences  and there is no representation of an utterance other than its recognition as one of a limited number of alternative phrases. consequently  we view the current capability as being only an experimentally useful  and easily achieved  interim one  and are devoting our energy to developing a more adequate natural language component for the consultant. 
     our immediate goal in this regard is to implement a language component able to deal with natural text input. simplifying matters for discussion purposes  we need three things in order to accomplish this: a sentence-by-sentence translation facility  an internal representation of input sentence meanings  and a discourse analysis model. sentence-by-sentence translation is driven by paxton's  best-first  parser.1 this parser was 
originally intended for  and indeed is used in  a natural speech understanding system  but it has been modified to accept text input while work in acoustics continues. accordingly  let us focus attention on the internal representation  which doubles as a target language for the parser. 
     we are planning to use a semantic net representation that follows roughly along the lines suggested by norman1 and simmons.1 let us use 
a few simplified examples to convey both the general approach and i t s application to our particular needs. 
     a semantic net representing some information about simplified air compressors is shown in figure 1. each node of this particular net 
we use a votrax voice synthesizer  manufactured by federal screw works. 
we plan to extend the system from text to speech at a later date. 
1 

represents an object or a set of objects  and each arc a binary relation between nodes. the upper nodes indicate that the set of air compressors  of tanks  of pumps  and of motors are each subsets  the s relation  of the set of all machines. the set of air compressors is partially defined--we will say delineated to indicate the definition is 

only partial-by the subnet enclosed in the box. this subnet represents a prototypical member c of the set of air compressors; we use ed to show that 
c is the delineating element of the parent set. compressor c is shown as having three parts  hap means has-as-part : t  p  and m. the e  element-of  arcs emanating from these nodes indicate that they are respectively elements of the set of tanks  pumps  and motors. thus  the portion of the net we have discussed so far represents the fact that a typical air compressor is composed of a tank  a pump  and a motor  and that all of these objects are machines. the remaining portion of the net represents the fact that there is a particular compressor called c1mpi   i t is an element of the set of all compressors   and that i t has as parts a particular tank tl  a pump pi  and a motor ml. 
     nodes can also represent abstract entitles like relations. the net in figure 1 is a representation of the  drive  relation  drive in the sense of  to power   between two pieces of machinery. it shows that drive relations are a subset of the family of all relations  and it delineates drive by displaying a subnet of a typical drive relation d. the delineation shows that drive relates two objects  a driving object m' and a driven object p'. by following the e arcs out from these nodes  we see that m' must be a motor  and that  ' must be a component that can be driven. the net also shows that pumps are among 
we are simplifying some bookkeeping details needed in practice to associate t1 with a l l tanks  p1 with a l l pumps  and so forth. conceptually  the reader can think of c1mp1 and c as having matched subgraphs. 

che set of components that can be driven  whereas motors are not. 
if we are now given the question  what 
drives the pump   the net of figure 1 provides the semantics that enable us to parse the question satisfactorily. in particular  i t shows that drive is a binary relation  and that  pump  is something that can be driven.  in contrast  the question  what drives the motor   would be rejected because motors are not shown by the net as being drivable.  the  scratch net  at the bottom of figure 1  which is essentially a copy of the delineation subnet  represents the parsed question  what drives the pump  . 
     although the net in figure 1 enables us to parse the question  it does not contain enough i n formation for us to construct an answer. for this  we need the additional information represented in figure 1. figure 1 shows fragments of 

the previous two nets  but we have augmented the delineation of the typical compressor c. the new delineation uses the relation d'  an element of the set of drive relations  to include the information that motor m drives pump p. using this information  it is possible to match the scratch 

1 

net in figure 1 with the net partially shown in figure 1 and thus to construct the correct answer. further details are available in a forthcoming paper by hendrix.1 
     the preceding discussion sketches our current design for semantic representation. the third part of the language component has to do with the use of a discourse history to provide the context in which to understand a sentence--for example  to resolve references. in the preceding example  we passed over the issue of how  the pump1' is associated with the particular pump at hand  say pump pi of figure 1 . we expect to rely on an accumulation  or a summary  of previous scratch nets  with links to procedural nets  for this purpose  but do 
not yet have a detailed design for this aspect of the system. 
a brief example 

     we are still some distance away from having a smoothly running consultant system containing a l l the functional components described above. nevertheless  we include the following fragmentary example  from a transcript of a live voice experimen tal run  in order to give a little of the flavor than a more nearly complete system would have. for ease of comparison  we again have specified the task to be  assemble the air compressor.  
system: try to achieve assembled aircompressor. 
novice: how  
system: the top level plan is . .. install pump ... install pumpbrace ... install pumppulley ... install belt ... 
install belthousingcover ... 
system: ready for questions. 
novice: show me the pump. 
          laser beam moves to point at pump.  system: ready for questions. 
novice: what is this   pointing with wand at tank platform  system: tank platform. 
system; ready for questions. 
novice: none. 
system: install pump. 
novice: how  
system: connect pump to platform. 
novice: how  
system: get 1 l&1-inch #1 hexagonal bolts and 1 #1 flat washers and 1 sire 1 hexagonal nuts. 
	novice: 	ok. 
     in this example  the system has composed a hierarchical plan for transforming an i n i t i a l state of the compressor to the desired final state of complete assembly. the novice then executes the plan  while the system keeps track of the current state by using the procedural net representation of the plan. the simple replies of  ok  and  how    or their equivalents  tell the system either to move to the next step at the current level of detail  or to expand a step into a 
     number of more detailed actions. if the novice were to ask  why '' some step was suggested  the system would use the procedural net to construct an answer that might involve either supergoals of the current step or subsequent steps of the current subplan. 
future problems 

     it is obvious that a great deal of work re* mains to be done to bring the individual components of the system to a uniformly high level of 
sophistication  and to integrate these components into a smoothly running system. it is interesting to note  however  that even in its present rudi-
mentary state the system exhibits a surface behavior that impresses outside observers favorably.  we w i l l forgo the opportunity to speculate on the implications this observation has for the presumed mechanisms of intelligence.  in the remaining few paragraphs  we w i l l briefly discuss the outlook for continued progress on the consultant system. 
     i t seems to us that the situation is reasonably optimistic  at least as far as the individual components of the system are concerned. planning for assembly/disassembly appears to be quite well in hand  and the only real uncertainties center on 
how much work la needed to encode how much detail for machines of interesting complexity. planning for troubleshooting is less advanced  but there is a good stock of ideas available and at least one demonstration program  shortliffe's mycin program  to encourage us that quite sophisticated troubleshooting abilities are within reach. vision  however  is clearly difficult in the domain of real machinery  and a general and powerful capability here is not likely to be forthcoming in the near future. however  by relying heavily on geometric and other models  which we assume would typically be available  it appears that a vision component can be evolved that  though limited  would still be very useful. natural speech understanding is not yet a reality in our system  but good progress is being made on that topic at a number of laboratories. 1   1 1   1 by carefully matching our i n terim language designs  e.g.  the semantic net representation  to this body of work  we expect to be able to make use of forthcoming speech understanding systems with minimum effort. 
1      it is less easy to assess the d i f f i c u l t y of integrating a l l of the functional components into one smoothly running system. one obvious problem is the current multiplicity of models; at the moment  we have at least one model each for assembly planning  troubleshooting planning  vision  snd language. some of these models may be combined-for example  the procedural net may play a role in modeling a discourse history. the funda-
mental problems  however  are much deeper  and involve issues of coordinating very diverse knowledge sources 1 of thinking versus acting  and of 
human novice effort versus  expert  computer effort. all this persuades us that computer based consultant systems are likely to continue to be a 
fruitful domain for artificial intelligence re-
search  i n addition to offering promise as a means for deploying knowledge usefully in an increasingly complicated world. 
acknowledgment 

the ongoing project described in this paper 
is of course the work of a large number of people. 
i would like to especially acknowledge the contributions of g. agin  a. e. brain  b. deutsch  r. 1. ixida  r. e. fikes  t. d. garvey  j. gaschnig  g. g. 
hendrix  n. j. nllsson  w. paxton  e. sacerdoti  
g. l. sutherland  j. m. tenenbaum  and h. c. wolf. 
