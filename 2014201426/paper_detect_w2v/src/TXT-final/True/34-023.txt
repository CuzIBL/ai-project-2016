 
　　　this paper describes a number of new ideas for planning and for the execution of plans in a 
world which is not completely specified. such s i t u a t i o n s often occur in real world environments. most of the ideas contained here have been implemented in a system for computer-aided decisionmaking for f l i g h t operations. 
1. planning and execution in incompletely specified environments 
　　　in conventional computer applications  data is input and manipulated according to predefined plans specified by the programmer. programs are 
w r i t t e n to provide solutions to problems for which algorithms are known. while the numerical data may be changed easily  a l t e r i n g the goal of the program may require extensive modification. this type of approach may be unacceptable in systems 
where the exact problem specification is not known at the time of programming. 
　　　in order to make programs which are able to solve a wider variety of problems  much time has been spent constructing systems which attempt to make the computer  understand  the subjects with which it is dealing. many of the systems are planners  programs which take a goal as an input and generate a plan which can be executed  at which time the given task w i l l have been s a t i s f i e d . 
　　　most of the e x i s t i n g high level planners such as strips  and planner  1  w i l l report a success only when a detailed plan has been developed. these planners have primarily been applied to simple domains in which a l l relevant aspects concerning the state of the world are known to the planner. in these domains  nothing can change without the execution of a system i n i t i a t e d action. 
　　　many of the planning systems are based upon the idea that a problem may be divided into a 
　　　series of subgoals  or preconditions . any one of a number of techniques or operators can be employed in order to t r y to solve the subgoal. a sequence of correct operators would determine the s o l u t i o n . however  much of the deduction may depend upon the presence of certain data in the database. if this data were not known at the time of planning  then an e n t i r e section could f a i l . in many cases information may be missing because 
this work was supported in part by the joint services electronics program  u.s  army  u.s. 
navy  and u.s. air force  under contract daab-1-c-1 and in part by the a i r force systems command under contract af f1-c-1. 
of incomplete modeling of the world due to the domains complexity. but in other cases  the overa l l concept may have been modeled  but the spec i f i c piece of datum may not be  known  to the planner  much as a person may not know what is going on in the next room. 
     in order to increase the complexity of problems and domains which can be accommodated  it is necessary to extend the c a p a b i l i t i e s of the deduction languages and systems in the following areas: 
     the deduction mechanism must have the capab i l i t y to construct plans in a dynamic environment. by dynamic  it is meant that movements of objects or changes in the world can occur without being merely consequences of system actions. in t h i s type of s i t u a t i o n   it may be f u t i l e to formulate a detailed plan based upon specific data when a dynamic a l t e r a t i o n of t h i s data may t o t a l l y invalidate the remainder of the plan. planning for a l l of the possible a l t e r n a t i v e s would  in most cases  be unfeasible due to the large number of future states possible. one a l t e r n a t i v e would be to have a planner which would  know  that it exists in the r e a l world. the planner would have the a b i l i t y to vary the complexity of the plans generated according to the s i t u a t i o n . this would lead to a case where there would be no necessary d i s t i n c t i o n between the planning and execution phases. in c e r t a i n cases  the plans which would be generated would be of a more general nature  r e f l e c t i n g an outline of the important steps and tasks to be done. as the execution progresses  new information would be received and added to the database. this would allow more d e t a i l s of the plan to be computed as execution continued. 
     a deductive mechanism should be able to operate in an environment in which there is a lack of information. this would correspond to the real world s i t u a t i o n where a human being has to make an i n t e l l i g e n t evaluation missing some of the f a c t s . this capability has to be attained before the dynamic planning and execution can occur. this is because while it may be recognized that a certain aspect of the world may be expected to exhibit dynamic a c t i o n   it may not be known what the value would be when needed. planning may have to continue without the d e f i n i t e informat i o n . the planner must have the a b i l i t y to gather new information. among the possible ways in which this could be accomplished are: have the system develop a question or allow the mechanism to seek out information by inspecting the environment using any sensory equipment a v a i l a b l e . if it is realized that while certain possibly relevant information is not known during the periods of i n i t i a l planning  it may be possible to plan if 

1 

it is realized that the information is to become available at some future time. in this case  it may be necessary to analyze c e r t a i n possible future states of the world. for t h i s   there must be a mechanism for storing global knowledge and models concerning this unknown information. it may also be desirable to incorporate p r o b a b i l i t i e s and costs into the deductive and decision making 
procedures. 
	1. 	related research 
　　　research concerning the application of general deduction mechanisms to real world problems which are dynamic in nature and/or are incompletely specified have been extremely limited. it appears that many of the e x i s t i n g systems are incapable of being extended to handle these types of problems without extensive modifications. 
       planner  1  allows strategies and r e l a t i o n ships to express as procedures called theorems. these theorems are executed in order to t r y to s a t i s f y the problem which consists of a series of goals. the control structure is based upon a depth f i r s t search with backtracking. it appears that it would be d i f f i c u l t to express the idea that c e r t a i n facts may not be known at a given time. planner understands only one type of f a i l ure  that being when a goal cannot be s a t i s f i e d . i f   however  a goal is not s a t i s f i e d not because it is 'wong*' but because some of the necessary data are missing  then a d i f f e r e n t type of f a i l u r e 
       has occurred  a type which planner cannot understand. when dealing with this  unspecified information   it is necessary to maintain several alternatives from which one may be chosen. storing this type of information is very d i f f i c u l t in planner. 
　　　when evaluating a theorem  planner treats each of i t s steps or subgoals as equal. during the planning  a l l of these subgoals are of equal importance. if one f a i l s   the theorem f a i l s . but  it appears that in r e a l i t y   subgoals have d i f f e r e n t levels of importance. this means that more time should be spent in order to s a t i s f y a key subgoal than a r e l a t i v e l y minor one. planner's depth f i r s t control structure would not allow the consideration of a l l major subgoals f i r s t . 
　　　many of the philosophies in planner are also contained in qa1   1   . the context mechanism which is available in qa1 would allow the storage of a l t e r n a t i v e plans r e s u l t i n g from d i f f e r e n t possible values of unspecified information. qa1's limited effectiveness  as with planner  arises from the backtracking philosophy which is embedded in both of the systems. the introduction of new types of failures makes backtracking an undesirable search technique. as in planner  the i n f l e x i b i l i t y of the recommendation l i s t s means that once a sequence of theorems is formed  it cannot be altered or edited. this appears to be inappropriate when desiring to a l t e r control as new information is determined. 
　　　conniver's  1  main advantages over planner and qa1 are freedom from compulsory backtracking  the inclusion of a context mechanism  and f l e x i b l e p o s s i b i l i t i e s l i s t s . the possib i l i t i e s l i s t   which specifies the next procedure to be t r i e d   can be inspected or edited at any time. 	the control structure is based upon the frame concept 	 which allows a total deduction 
environment to be maintained and continued. this allows great f l e x i b i l i t y in specifying how a theorem is to be evaluated. despite i t s advantages   it appears that conniver has not yet been applied in systems which require the i n t e g r a t i o n of planning and execution  such as those dealing with dynamic situations in uncertain environments. 
　　　much of the work which has been done concerning the problems found in executing and planning have been outgrowths and extensions of the strips  1 1  system. strips is used to generate a plan which could be solved through the application of a sequence of operators. an operator can be executed when a l l of i t s preconditions have been s a t i s f i e d . the plannex  system takes a complete strips plan and monitors i t s execution. using this system  actions may be deleted from the plan if it is determined that t h e i r consequences are not needed. it can also recognize if necessary i n i t i a l conditions are absent  which would lead to a replan mode. it is also possible to take solutions which have been generated and generalize them. these macrops  are saved and can be used to s a t i s f y future tasks or subtasks. strips only succeeds when a complete plan has been generated. the presence of unspecified information would in most cases lead to a f a i l u r e . strips would respond to t h i s type of f a i l u r e by searching for an alternate plan. 
　　　recent results have demonstrated that stripsl i k e systems can be made more e f f i c i e n t by employing a hierarchical approach  1 1 . these systems have been constructed using the p r i n c i p l e 
　　　that preconditions of an operator are of varying importance and some should be examined and s a t i s fied before others. by t r y i n g to s a t i s f y the preconditions which are most basic or are harder to achieve f i r s t   irrelevant operators can be eliminated sooner. the preconditions are assigned a c r i t i c a l i t y or rank. the higher valued preconditions represent the tasks which must be s a t i s f i e d f i r s t . so  in abstrips   1      type  box room   has a higher rank than  inroom  box room   and both have a higher rank that  inroom   robot room  . when a problem s p e c i f i c a t i o n is received  the c r i t i c a l i t y is set to a maximum value  which 
would contain a l l predicates representing unchangable information . preconditions with c r i t i c a l i t y below this value are i n i t i a l l y ignored. a plan is constructed using whatever techniques are appropriate to the system and domain. the plans produced w i l l satisfy a l l of the f i n a l conditions  but the operators specified w i l l only be s a t i s f i e d through their most c r i t i c a l preconditions. as the 
c r i t i c a l i t y is lowered  new preconditions are introduced for the already specified operators. as these precondtions are s a t i s f i e d   new operators are introduced forming a more detailed p l a n . when 
the c r i t i c a l i t y has been set to i t s lowest value and a l l preconditions have been s a t i s f i e d   a complete  detailed plan w i l l have been constructed. while this type of planning has proved to be more e f f i c i e n t that strips  of more interest are the types of plans which are generated. some of the 
h i g h - c r i t i c a l i t y plans have many of the desired a t t r i b u t e s of a p a r t i a l plan o u t l i n e . the plans do not contain every necessary d e t a i l   but rather only the major steps which must occur. these approaches have not been used to s a t i s f y problems 
1 

in domains which are dynamic or incompletely s p e c i f i e d . in  minsky describes a framework for a representation of knowledge which would permit the inclusion of s i t u a t i o n dependent default values. the scope of the world model which is considered at any time is a function of the present environment. 

　　　systems which are to operate in an incompletely s p e c i f i e d   real world environment must of necessity operate d i f f e r e n t l y than the e x i s t i n g planners. there must be a r e a l i z a t i o n that knowledge concerning some of the relevant portions of the world may be unavailable during some of the stages of planning. this may be because the unknown portion of the world is outside of the system's monitoring c a p a b i l i t y and/or may be changing as time progresses. because of t h i s   the planner must realize that in many cases it is not feasible  if not f u t i l e   to i n s i s t upon the construction of a completely detailed plan before the i n i t i a t i o n of execution. the system must have the knowledge that missing information may be obtained in various ways  such as through observation or questioning. the system may have to plan around some of the missing information by 
making reasonable assumptions. 
　　　when a problem is specified to a planning or execution system  it may be done in several ways. the most common method is to specify aspects of the world which must exist a f t e r the plan has been executed. this is generally accomplished by specifying a goal s t a t e . it may also be desirable to specify possible intermediate states which may have to be s a t i s f i e d in a certain order. most of the existing planners place l i t t l e emphasis on how the goal state is to be achieved. there is l i t t l e or no concern about whether the plan which 
has been generated is optimal or near-optimal according to any c r i t e r i a . however  in more r e a l i s t i c s i t u a t i o n s   people s t r i v e for a more e f f i c i e n t plan even though t h e i r analysis may not include a formal statement of what is best  a planner should also be able to accept a statement of what c r i t e r i a should be used* 
　　　in these types of problem s p e c i f i c a t i o n s   there are r e a l l y only three general methods which can be used to insure that a portion of the goal is s a t i s f i e d . f i r s t   the goal could already be true in the world and represented in the system's 
world model. second  the goal could be true in the world model but not e x p l i c i t l y represented in the system's model and it could be deduced that the goal is a logical consequence of available information in the model. t h i r d   it may be that the goal is not true in either the model or the world but it is possible to perform actions which w i l l a l t e r the world in such a manner that the goal w i l l be s a t i s f i e d . the e x i s t i n g general purpose planners s a t i s f y goals using these general techniques. 
　　　but a l l of the situations above are predicted on the concept that a l l relevant information is d i r e c t l y known or could be deduced. but these are clearly not r e a l i s t i c assumptions. the world model which the system maintains could be 
d e f i c i e n t in many ways. some information could be missing due to the necessary simplifications which must occur when modeling a complicated domain. however  if some aspect of the world were expected to be important for planning  it would surely be represented. and some of the information could be missing because it is just not known  no matter how relevant it may be. the l a t t e r case is of major interest because this type of unspecificat i o n occurs in r e a l i s t i c problems when a portion of the world is beyond monitoring c a p a b i l i t y or when dynamic s i t u a t i o n a l t e r previously known values. 
　　　one major problem is how to recognize this type of missing information  which w i l l be referred to as  unknown  information. when a precondition to an operator is encountered  it is imperative to know whether it belongs to a p r e v i ously mentioned category or is unknown information. no matter how complete the model  certain informat i o n may be absent if the system is solely responsible for c o l l e c t i n g and storing the information. but by using semantic knowledge about the world  it may be possible to determine something about how to s a t i s f y the preconditions. the i n i t i a l attempt to s a t i s f y a precondition involves examining the database in order to see if the precondition is s a t i s f i e d because it is already t r u e . as soon as it is determined that the needed fact is not in the database  the system checks to determine if the concept is unspecified. in many cases it is possible to determine that a precond i t i o n is not s a t i s f i e d by inspecting the database for contradictory information. if t h i s is the case  then the system can conclude that the information is specified and that some action is needed. sometimes  however  s u f f i c i e n t informat i o n is not available to make the determination and the system may have to postpone the decision. i n i t i a l l y   research concerning unknown informat i o n w i l l be confined to predicates whose r e s t r i c t i o n s are l i m i t e d . in these cases the alternate values and contradictions can be expressed in a f a i r l y straightforward manner. 
　　　when the database is being referenced  it is not enough to find a specific fact represented. the dynamic properties of the domain have to be considered. some of the a t t r i b u t e s may change dynamically in a random or predetermined manner. this would a f f e c t the confidence in the t r u t h or f a l s i t y of a f a c t . 
　　　in order to ascertain the value for an item of unknown information  it is necessary to a c t i vate some type of input. this may include any sensory device a v a i l a b l e   such as a camera for observation. it may also take the form of a response to a question. in any case  the system must know the appropriate methods a v a i l a b l e . it must also be aware of when types of information can be obtained. 
　　　as has been stated  a planned s o l u t i o n to a task is a sequence of actions whose execution 
would a l t e r the world from an i n i t i a l state to a 
goal s t a t e . the proper actions are determined by evaluating operators. the form of the operators is shown in figure 1. the operators represent allowable actions in a domain. they are stripsl i k e in representation but have d i r e c t counterparts 

1 

in planner and conniver. each operator has a set of preconditions which must be s a t i s f i e d before the action can be executed  either real-time or during planning . the operators have addition and deletion l i s t s . these represent the aspects of the world which are expected to be altered when the action is executed. these are only used to update the system's world model. the system is responsible for making any observations necessary to insure that the changes in the world correspond to the expected changes. 
　　　　each of the preconditions  additions and deletions has a number associated with i t . this is the c r i t i c a l i t y of a predicate. there is an upper l i m i t for the c r i t i c a l i t y in a domain. this is f o r concepts which cannot be altered by any system a c t i o n . the concepts represented by predicates with lower c r i t i c a l i t i e s can be changed. the c r i t i c a l i t i e s roughly represent the order in which the preconditions must be s a t i s f i e d . if there are two preconditions with d i f f e r e n t c r i t i c a l i t i e s   the one with the highest c r i t i c a l i t y is s a t i s f i e d f i r s t ; the lower precondition w i l l be s a t l s f i a b l e in some manner. 

　　　a s i g n i f i c a n t research area concerns how to s a t i s f y the prerequisites and the development of a control structure which would f a c i l i t a t e the e f f i c i e n t construction of i n t e l l i g e n t plans. the conventional methods for s a t i s f y i n g the prerequisites have been described above. research is being conducted concerning the p o s s i b i l i t y of considering a prerequisite to be s a t i s f i e d by  assumption  at certain levels of c r i t i c a l i t y and stages of planning. in these cases  a precondit i o n may be assumed to be s a t i s f i e d  or s a t l s fiable  at an early planning stage. the system 
must be aware of the assumptions being made and have reasons for these actions. to date  several classes of assumptions and t h e i r reasons have been formulated. the most basic is a l o w - c r i t i c a l i ty precondition. in most cases it is possible to assume that a precondition with a c r i t i c a l i t y below some cutoff can be s a t i s f i e d . this is because this type of precondition was to be constructed as an easily done d e t a i l . the c r i t i c a l i t y cutoff could be determined by the stage of planning  the domain used  as well as the system's knowledge of what tasks could always be accomplished. 
　　　another type of assumption is called a l o g i cal assumption. this type of assumption o r i g i nally would occur when unknown information was involved. the various possible values would have been examined. i f   for each case it was determined that the precondition could be s a t i s f i e d   the precondition would be assumed to be l o g i c a l l y s a t l s f i a b l e . the information derived from searching a l l of the p o s s i b i l i t i e s should somehow be saved so that an assumption could be made if the proper conditions are met. 
　　　in many cases a precondition can be assumed to be s a t l s f i a b l e if certain relationships exist between the precondition of the operator being evaluated and the precondition of any operator used to s a t i s f y the o r i g i n a l precondition. this is called a dominance assumption. an operator  1  is defined to dominate another operator  1  if a l l of 1's preconditions are among the preconditions of 1 with the same r e l a t i o n s h i p r e s t r i c t i n g any uninstantiated v a r i a b l e s . now  if a precondition of 1 may possibly be s a t i s f i e d by the application of 1  then the precondition may be assumed to be s a t l s f i a b l e by dominance. 
　　　in the previous two cases  the assumptions which could be made are very dependent upon the planning environment which exists when a precondition is encountered. hopefully  this w i l l lead to a system which has a better knowledge of 
what it is trying to accomplish at any given time as well as a knowledge of s i t u a t i o n methods of dealing with the preconditions. 
　　　the last type of assumption which has thus far been considered has been called a linkage 
assumption. this type of assumption arises because the lack of knowledge concerning the exact order of execution of a plan s a t i s f y i n g part of a top level goal w i l l cause unknown information to e x i s t . in this case the informat i o n is known in the real world but may be a l t e r e d during planning of another plan. in many cases the overall goal w i l l be divided into subplans  each of which is developed independently. the exact order in which the plans w i l l be executed is not known at the time of planning. when t r y i n g to satisfy certain preconditions  a planner 
may examine the real-world database  as opposed to a l o c a l   planning database . but information found in the real world database may be a l t e r e d 
by other subplans by the time the subplan is actually executed. the system must have knowledge of whether database entries are expected to 

1 

change. for those that are expected to change  the appropriate assumption may be that the precondition w i l l be s a t i s f i a b l e during the execution phase. 
　　　the last type of assumption mentioned is b a s i c a l l y r e s t r i c t e d to a t t r i b u t e s which are expected to change. there are some types of information which are not expected to change  even though they may . in these cases  the system may use values found in the latest real world model. but these should be noted in the plan being produced. 
　　　a problem concerns when the system should i n i t i a t e execution. this also involves the quest i o n of how detailed should the planning be. in theory  the execution could be i n i t i a t e d during any stage of planning. however  a more r e a l i s t i c approach would have the execution begin when a  reasonable  plan has been developed. in some cases the i n i t i a l course of action may be so well defined   or may be the only alternative  that the system may decide to s t a r t execution before the i n i t i a l planning has terminated. observations  
which are a type of execution  could be performed at any time during planning or execution if the proper conditions occur in the real world. 
　　　a f t e r the plan outlines s a t i s f y i n g portions of the top level goals have been generated  it is necessary to link them into a coherent plan outl i n e . to do t h i s   an order of execution must be 
determined and intermediate connecting programs must be developed. the subplans are classed according to the c r i t i c a l i t i e s of the tasks which are s a t i s f i e d . an attempt is made to l i n k the highly rated subplans to the i n i t i a l world. when a  shortest  linkage is found to a subplan  this subplan is assumed to be executed next. linkage is attempted between the remaining subplans and the world model of the. most recently assumed executed subplan. this continues u n t i l a l l of the subplans have been l i n k e d . 
　　　among the major problems which s t i l l must be considered for e f f e c t i v e l i n k i n g include: how to d i s t i n g u i s h between the case when two subplans of d i f f e r e n t c r i t i c a l i t i e s have the same i n i t i a l environment condition and should be executed consecutively and the case when the lower c r i t i c a l i t y subplan must be executed with subplans of i t s own c r i t i c a l i t y to avoid making other subplans undoable; what types of searches are necessary to promote the most   e f f i c i e n t   linkage for the e n t i r e plan  surely a most e f f i c i e n t f i r s t linkage is not enough. 
　　　it would be very desirable to have the system be aware not only of what part of the plan it is executing but also the knowledge needs and preconditions of other subplans. in the present formulation  an attempt is being made to obtain this type of performance. when observations are needed and the necessary environment does not e x i s t   demons w i l l be established so that  should the opportunity a r i s e   the observations could be 
made. certain aspects of the world could be protected as preconditions for future subplans  t o p - l e v e l goals as w e l l as any currently active operators. if a subplan t r i e s to undo another subplan's i n i t i a l assumptions  the planner being constructed w i l l be warned of t h i s . 
　　　in some cases  a plan may be executing and during an observation  some previously unknown information is acquired. this new information may lead the system to re-evaluate the manner in which the overall goal is to be s a t i s f i e d . this may involve s a t i s f y i n g a subgoal with a d i f f e r e n t operator and/or a l t e r i n g the order in which subplans are executed. for this type of performance to occur  the system must be aware of some of the important possible a l t e r n a t i v e s . investigation 
has been concerned with two possible cases: new information leading to alternate plans  and new information leading to short cuts. 
　　　when t r y i n g to s a t i s f y a goal  the system may be considering several possible approaches  a s i t u a t i o n which can occur is that a f t e r planning has been successful through a certain c r i t i c a l i t y   a f a i l u r e due to unknown information is encountered. in the previous cases discussed  it was possible to  assume  that the precondition could be s a t i s f i e d   but t h i s is not always the case. if the unknown precondition is found to be s a t i s f i e d   the system should be able to pause and consider the new information. if a new subplan were found which was expected to be superior  the linkages may have to be reformulated. in most cases  it is not expected that this would a l t e r the composition of other subplans. when the subplan is being reformulated  other unknown f a i l u r e s may s t i l l be encountered which may dissuade the system from pursuing these paths. 
　　　the p o s s i b i l i t y of a short-cut also may occur when a f a i l u r e due to unknown information is encountered during planning. in t h i s case  the operator which was being considered when the f a i l u r e occurred is l a t e r found to be p o t e n t i a l l y 
useful in the f i n a l l y constructed plan. to determine t h i s   the system examines the f a i l u r e and subplan produced and asks the questions: 
1  is the operator which was being examined when the f a i l u r e occurred s t i l l p o t e n t i a l l y useful in that the change the action would have yielded 
was realized in some manner later on in the plan  or more precisely  did planning continue u n t i l a subplan to realize the action goal was obtained   1  if the f a i l e d precondition were assumed to be true  would a l l of the operator's preconditions be s a t i s f i e d or s a t i s f i a b l e to a certain c r i t i c a l i t y   
       if these conditions are met  then the plan should be altered to indicate that if the precondition is found to be t r u e   an alternate shorter subplan could replace part of the plan without a f f e c t i n g any of the other linkages or subplans. it is hoped that t h i s type of planning w i l l not only make the system more responsive to new information which is received  but w i l l also allow the system to demonstrate a better understanding of what it is t r y i n g to do at a l l levels of planning and execution ncluded as unspecified parameters. it is sometimes possible to judge the superiority of one plan over another with only this information. 
　　　the preceding discussion was primarily concerned with planning when missing some relevant information. another problem which arises is to construct a plan which is most compatible with the overall mission. to accomplish t h i s   it is 

1 
necessary that the system be aware of the overall 
mission  including an o v e r a l l plan of how the mission is to be accomplished. the system must 
also be aware of both the p i l o t and system capab i l i t i e s ; who is to complete a task and how is it 
to be done. 	the system should then be able to 
develop a plan which would conserve the most essential on-board c a p a b i l i t i e s and would least 
i n t e r f e r e with the p i l o t ' s actions. 
	1. 	conclusions 
　　　systems which are to be able to plan and execute solutions to real world problems must be able to plan in incompletely specified environ-
ments. 	the system should have the knowledge that certain relevant information may not be known at a l l stages of planning. 	the system should be able to form a plan outline indicating the ''major  steps. 	for various s i t u a t i o n s   it should be able to assume that certain tasks are s a t i s f l a b l e   
deferring planning u n t i l a time j u s t before execution. 	the system should have the a b i l i t y to i n i t i a t e 	execution before planning has terminated. 
as new information is received  the plan and/or flow of execution should be modifiable. 
　　　when planning  the system should be cognizant of the overall mission o u t l i n e . using knowledge of p i l o t and system c a p a b i l i t i e s   the plan which is constructed should be compatible with the mission objective.  
 
 
 
 
 
 
1 

minsky  m.   frame-systems: a framework for representation of knowledge   to be published  november 1. 
nilsson  n.   a hierarchical robot planning and execution system   stanford research i n s t i t u t e report project 1  a p r i l 1. 
rulifson  j .   derksen  j. and waldinger  r.   qa1: a procedural calculus for i n t u i t i v e 	reasoning   a r t i f i c i a l i n t e l l i g e n c e 
technical note 1  stanford research i n s t i t u t e   november 1. 
sacerdoti  e.  	 planning in a hierarchy of 
abstraction space   third international joint conference on a r t i f i c i a l i n t e l l i gence  stanford  c a l i f o r n i a   august 1. 
siklossy  l. and dreussi  j .    an e f f i c i e n t 
robot planner which generates i t s own 
procedures   third i n t e r n a t i o n a l joint conference on a r t i f i c i a l i n t e l l i g e n c e   stanford  c a l i f o r n i a   august 1 
sussman  c   why conniving is better than planning   fjcc  1. 
sussman  g.  winograd  t. and charniak  e.  
 micro-planner reference manual   a r t i f i c i a l intelligence memo 1a  massachusetts i n s t i t u t e of technology  december 1. 
