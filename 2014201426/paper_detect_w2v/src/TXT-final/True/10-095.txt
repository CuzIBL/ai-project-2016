theorem proving by covering expressions l. j. henschen 
w. m. evangelist 
	northwestern 	u n i v e r s i t y 
	evanston  	i l l i n o i s 	1 
m o t i v a t i o n 
       this paper describes work in progress to develop methods t h a t search d i r e c t l y f o r u n s a t i s f i a b l e instances of u n s a t i s f i a b l e clause sets   i . e . herbrand methods  r a t h e r than deduce cont r a d i c t i o n s from such s e t s . such approaches a t t a c k two serious disadvantages  in the authors 1 o p i n i o n   o f r e s o l u t i o n . f i r s t   r e s o l u t i o n i s a d e d u c t i o n - o r i e n t e d r u l e   and there are g e n e r a l l y 
v a s t l y more inferences t h a t can be deduced from a set of clauses than are used in the r e f u t a t i o n s produced  even when very r e s t r i c t i v e s t r a t e g i e s are used; we p o i n t to the low penetrance f a c t o r s c i t e d in the l i t e r a t u r e . second  while the sepa r a t i o n of v a r i a b l e s insures t h a t the general resolvent w i l l subsume f a m i l i e s o f resolvents o f instances  such g e n e r a l i t y puts the inference in a s t r i c t l y l o c a l context -- aside from possible f u t u r e r e s o l u t i o n s   there is no connection w i t h any other deduction performed in the search so f a r . 
       herbrand methods g e n e r a l l y have three p a r t s - 1 . form some set of r e p l i c a s of clauses  1. mate the l i t e r a l s in the r e p l i c a s   and 1. t e s t for t r u t h - f u n c t i o n a l u n s a t i s f i a b i l i t y - t y p i c a l l y performed in the above o r d e r . it is the authors' opinion t h a t the f i r s t two of these are the c r u c i a l ones; u n f o r t u n a t e l y   most herbrand methods reported in the l i t e r a t u r e have concentrated on the t h i r d . for example  prawitz f 1   suggests t h a t when m a t r i x r e d u c t i o n on a set of r e p l i c a s f a i l s   one should add another r e p l i c a of each i n p u t clause and t r y a g a i n . gilmore f s technique   1   s u f f e r s from the a d d i t i o n a l problem t h a t a d i s j u n c t i v e normal form is c a l c u l a t e d before any l i t e r a l s are even mated. this leads to d i s j u n c tions t h a t are extremely l o n g . we propose that the three parts above can work t o g e t h e r   and t h a t   i n p a r t i c u l a r   the r e s u l t s o f the u n s a t i s f i a b i l i t y t e s t can provide s i g n i f i c a n t i n f o r m a t i o n about 
how a d d i t i o n a l r e p l i c a s should be chosen. we also propose t h a t i t i s u s e f u l f o r the three operations to be i n t e r s p e r s e d   because steps of the u n s a t i s f i a b i l i t y t e s t can o f t e n suggest p r o f i t a b l e l i t e r al matings. this w i l l also reduce the size of the intermediate formulae. 
       we describe a herbrand method based on a n o t a t i o n which allows f a s t   e f f i c i e n t t e s t i n g f o r u n s a t i s f i a b i l i t y and easy e x t r a c t i o n of informat i o n when the t e s t f a i l s . in the ground case each clause y i e l d s a cover expression. these expressions are combined to form a cover f o r the s e t . each clause is used once  and the clauses can be taken in any o r d e r . there is no wrong order or wrong p a i r of clauses to use in r e s o l u t i o n - b a s e d methods. in the general case  we s t a r t w i t h some r e p l i c a s and c a l c u l a t e the cover  then compare 
this cover with the input clauses to find promising new replicas and l i t e r a l matings. a more detailed presentation of the method can be found in . 
ground case 
       we now describe the truth functional test and related notation* theorems w i l l be stated without proof. the proofs are straightforward. let s be a set of ground clauses over n atoms  

theorem 1. 	s is unsatisfiable if f s subsumes each of the 1 n c l a u s e s w h e r e each q  is 
pi or -p¡ê. 
a cover term is a sequence of n symbols  each of which is +  -  or 1. the symbols + and - are determined symbols. a cover expression is a set of cover terms. a cover term t containing k determined symbols represents the 1 n  * clauses whose ith literal has the same sign as position i of t for the positions containing determined symbols and pi for 1 positions. for example  1- represents the 1 clauses ¡Àp  +p1 ¡Àp1 -p1. 
       we use terms in a way very similar to gilmore's disjunctive normal forms. consider the 
clause dnf of clauses gilmore forms such a dnf for each clause and translates the conjunction of those dnfs to dnf  deleting contradictory conjuncts. we formulate a cover expression for each clause; for the above clause  cov c  consists of the three terms  analogous to gilmore1s dnf. however  we interpret the terms as disjuncts  i. e. clauses  not as conjuncts. in general  if 
c =	v	 v	 	t h e n c o v	c	 h a s k
	 pii      	 pii *	   	 terms. 	the 
jth term has the same symbol in position im as the sign of p-  for m   j  the opposite symbol as the sign ofpi-t in position i i   and 1 everywhere else. the reason for our interpretation as disjunctions is given by 
theorem 1. cov c  represents the set of clauses not subsumed by c. 
       we then  multiply  the covers for the clauses together. if t and s are terms  then t and s are compatible if there is no position in which they contain opposite determined symbols; in this case the product  t*s  is the term whose symbol in position k for any k is given as f o l lows: if either s or t  or both  contain a deter-
mined symbol in position k  then the symbol in position k of t*s is that determined symbol  otherwise it is 1  see example below . the product of two expressions is the union of the products of compatible pairs of terms from the individual expressions. 
theorem 1. 	if s is a set of ground clauses  then the product of the covers of clauses in s represents the set of clauses not subsumed by s. 
example. let s contain p1 p1  pi~p1  and  pi -p1. then we have 

theorem proving-1: henschen 1 


theorem proving - 1 : henschen 1 
