 
¡¡¡¡press is a computer program for solving symbolic  transcendental  non-differential equations    1   . we describe a new equation solving method  called homogenization  which we have implemented in press. homogenization prepares equations  so that they can be solved by the change of unknown method. it does this by oausing different occurrences of the unknown to occur within identical subterms. the method has application  outside equation solving  to the problem of generalizing expressions. 
i introduction 
   a common method of solving equations is to change the unknown  e.g. if the equation is 
     1/log1x   log1x s 1 then the equation may be solved by substituting y s logpx and solving the resulting disguised quadratic 
m/y   y   1 
unfortunately  things are seldom as simple as this. 
equations  which can be solved by change of unknown  are more likely to appear in the form 
	m.logx1   log1x * 1 	 i  
in which the occurrences of the unknown  x  appear within dissimilar subterms  namely logx1 and log1x. some preparation of the equation is required before the unknown can be changed. in the case of our example  the subterm logx1 must f i r s t be converted to 1/log1x  with the aid of the rewrite rule loguv =  1/logvu 
we call this preparation step homogenization  because it makes the occurrences of x appear in identical subterms. in this paper we describe the implementation of a version of homogenization. 
ii some terminology 
   before we can describe the homogenization method we must introduce some terminology. 
homogenization  w i l l be called the input equation  and the resulting equation w i l l be called the output equation. 
  the output equation belongs to a class of equation which we w i l l call the base olaas. we have restricted the base class to algebraic equations  l.e those involving only the functions +  -  *  / and exponentiation to a rational number power. this covers a l l the examples we have found in text books and exam papers. in fact most output equations are  sometimes disguised  quadratics. any class of equations could be used as the base olass  but the idea is to plck a olass whose members are relatively easy to solve. 
- the input equation can always be regarded as an algebraic equation la afibfi. set of nqn-algfiwtllfi fluburm la x   .g. equation  1  above can be regarded as an algebraic equation in the set  logx1  log1x . these subterms are called the offending terms and the set of them is called the offenders sat. the idea is that this is a set of subterms preventing the equation being algebraic: a class of equations which press knows a lot about. 
  the essence of the homogenization method is to replace each of the offending terms by some algebraic funotlon of a single term  called the reduoed term. in the example above the reduced term is log1x. 
i l l the homogenization method 
the homogenization method is as follows: 
 a  the offenders set is found by trying to parse the input equation as an algebraic equation. when the parse is blocked  because the current subterm is x or a non-algebraic subterm containing x  then this is added to the offenders set and the parse forced to continue. 
- the original equation  prior to 
 1  the singleton is the unknown  x. the equation is already algebraic so exit. 
this 	research was 	supported 	by 	src 	grant 	no 
 1  the singleton is a funotlon of x  f x  
or/b 1 and an src studentship to bernard say  which occurs at least twice in the silver. 
1  b  if the offenders set is a singleton then we must distinguish three cases. 
input equation. exit with success as now the change of unknown method can be applied to the output equation  substituting y for f   x   . 
 1  the singleton is a function of x as above  but occurs only once in the equation. in this case again the change of unknown method cannot be used so exit with failure. this case includes examples like 
xcos x  = 1. 
 c  classify the input equation acoordlng to i t s offenders set. for example  if a l l the offenders are trigonometric terms  then the equation is of type trigonometric. the types currently used are: trigonometric  exponential  hyperbolic  logarithmic and mixed  the miscellaneous type . the classification scheme is explained in more detail in the long version of this paper  
 d  a reduced term is selected. the type of the input equation determines how this term is chosen  different techniques are needed for trigonometric equations thsn for exponential equations  for example. for mixed type  where the special techniques f a l l   the reduced term is chosen from the offenders set on the basis of a simple simplicity measure. 
 e  now an attempt is made to rewrite each term in the offenders set as an algebraic function of the reduced term. in order to avoid the lnefflciences of random search  we have designed the program to make maximum use of i t s syntactic analysis of the input equation. thus a special rewrite rule set is used for each of the equation types  see  for details . for mixed types each rewrite must be done in single step: with s rule of the form ot =  a f   r t   
where ot matches the offending term  rt matches the reduced term and af la an algebraic function. if some of the offending terms cannot be rewritten  then backtrack to choose a new reduced term if this is possible  otherwise f a i l . 
 f  substitute the rewrites for the offending terms in the input equation to give the output equation. this equation is now an algebraic equation of the reduoed term  i.e. it is homogenized  so exit with success. change of unknown oan now be successfully applied  substituting y for the reduced term in the output equation. 
were successfully processed by our implementation of homogenlzatlon  that is the correct output equation was found. the rest of press was then able to solve 1 of these output equations. the 1 examples where homogenlzatlon failed are discussed in the long version of this paper. 
   here are some examples of equations which have been solved using homogenlzatlon: 

v generalization 
   change of unknown is very siallar to the nethod of generalization in the program-property theorem-prover of boyer and moore    1   . before proving a theorem by induction  the boyer-moore theorem-prover is able to generalize it by replacing several occurrences of the same subterm by a new akolem constant  e.g.  rev a  in 
      equal  append  rev a   append b e      append  append  rev a  b  c   is replaced by d to produce 
      equal  append d  append b c    append  append d b  c   which is then solved by induction. 
   work by boyer  moore and aubin    1     has concentrated on the question of when generalization is to be done  which occurrences of a subterm are to be replaced and what additional assumptions may need to be introduced to prevent over-generalization. these are not issues in equation solving. there is never a danger of over-generalization and a l l occurrences of a subterm should always be generalized   i . e . ohanged to a new unknown . 
   the method of homogenization described above is complementary to the work done by boyer  moore and aubin  because it suggests how an expression may be prepared for generalization: subterms which were not previously identical may be made so  in order to allow generalization to proceed. 

iv results and example equations 
   during our survey of exam papers we discovered 1 questions on which the homogenlzatlon method could be used  although in some examplea other  better  methods could be used. of these 1  1 vi conclusions 
   we have described the homogenlzatlon method  which prepares equations for solution by change of unknown. this work further illustrates the role of meta-level inference in algebraic manipulation  see 
1 

  1     . meta-level inference consists of a syntactic analysis of the input equation to determine appropriate algebraic solution steps. in this case the syntactic analysis reveals the offenders set  picks a reduoed tern and  hence  suggests what rewrite rules to apply. 
   we have found that the problem of selecting the reduoed tern is one that requires something more than a general purpose method. although the simplicity method  used for equations of mixed type is often successful on any equation  there are many problems for which it is inadequate. thus we have implemented special purpose methods for some types of equations  and these have proved to be of great value. similar remarks apply to the rewriting of offending terms. we are continuing the development of these methods. 
