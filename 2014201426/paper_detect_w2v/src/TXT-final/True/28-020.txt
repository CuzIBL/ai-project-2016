 
tractable covers are introduced as a new approach to equivalence-preserving compilation of propositional knowledge bases. first  a general framework is presented. then  two specific cases are considered. in the first one  partial interpretations are used to shape the knowledge base into tractable formulas from several possible classes. in the second case  they are used to derive renamable horn formulas. this last case is proved less space-consuming than prime implicants cover compilations for every knowledge base. finally  experimental results show that the new approaches can prove efficient w.r.t. direct query answering and offer significant time and space savings w.r.t. prime implicants covers. 
i 	introduction 
different approaches have been proposed to circumvent the intractability of propositional deduction. some of them restrict the expressive power of the representation language to tractable classes  like the horn  reverse horn  binary  monotone  renamable horn  q-horn  nested clauses formulas  dowling and gallier  1; lewis  1; boros et a/.  1; knuth  1 . unfortunately  such classes are not expressive enough for many applications. contrastingly  compilation approaches apply to full propositional-logic knowledge bases  kbs for short . thanks to an off-line pre-processing step  a kb i! is compiled into a formula ¦² so that on-line query answering can be performed tractably from ¦²*. many approaches to compilation have been proposed so far  mainly  reiter and de kleer  1; selman and kautz  1; 1; del val  1; dechter and rish  1; marquis  1; del val  1; 1; marquis and sadaoui  1; schrag  1 . 
¡¡*this work has been supported in part by the ganymede ii project of the contrat etat/region nord-pas-de-calais. 
automated reasoning 
¡¡in this paper  a new approach to equivalence-preserving compilation  called tractable covers  is introduced. in short  a tractable cover of e is a finite set t of tractable formulas ¦µ  disjunctively considered  s.t. e = t. tvactable covers of e are equivalence-preserving compilations of e: a clause c is a logical consequence of e iff for every ¦µ in t  c is a logical consequence of ¦µ. since ¦µ is tractable  each elementary test ¦µ  = c can be computed in time polynomial in |¦µ| +  c . the point is to find out tractable ¦µs that concisely represent  i.e. cover  the largest sets of models of e  so that  t  remains limited. to some extent  the present work could then be related to other model-based approaches to knowledge representation and reasoning  like  khardon and roth  1 . 
¡¡first  a general framework is presented  which can take advantage of most tractable classes  simultaneously. in many respects  it generalizes the prime implicants cover technique recently used for compilation purpose  schrag  1 . then  the focus is laid on tractable covers that can be computed and intensionally represented thanks to  partial  interpretations. two specific cases are considered. in the first one  partial interpretations are used to shape the kb into formulas from several possible classes. in the second one  they are used to derive renamable horn formulas. the last one is proved less spaceconsuming than prime implicants covers  schrag  1  for every kb. since tractable covers of e are equivalencepreserving compilations  their size may remain exponential in |e| unless np c p/poly  selman and kautz  1   which is very unlikely. however  experimental results show that the new approaches can prove efficient w.r.t. direct query answering and offer significant time and space savings w.r.t. prime implicants covers. 
1 formal preliminaries 
a literal is a propositional variable or a negated one. a clause  resp. a term  is a finite set of literals  representing their disjunction  resp. conjunction . a horn  resp. reverse horn  clause contains at most one literal that is 


	boufkhad etal. 	1 

automated reasoning 

	boufkhad etal. 	1 

only. hard sat instances  with respect to current algorithms  should be considered hard for query answering since at least one query  namely  the empty clause  is difficult. however  easy sat instances can exhibit hard queries that differ from the empty clause. 
¡¡accordingly  we tested the tractable covers and the prime implicants approaches w.r.t. many kbs  including 
 standard  structured problems  taken from  forbus and de kleer  1   and random k-sat problems  dubois et a/.  1   varying the #cla u1e /#var iable  ratio from the easy to the hard regions. each kb e has been compiled using the 1 techniques. then  1 queries have been considered. in order to check the usefulness of the compilation process  we also answered these queries from e  using a direct  uncompiled  davis/putnam-based approach  dubois et al.  1 . for each problem e and each compilation technique  the ratios a = qc/qu and 1 = c/ qu - qc  have been computed. qc  resp. qu  is the time needed by the compiled  resp. uncompiled  approach to answer all the queries  and c is the compilation time  a  resp. /   tells us how much query time improvement we get from compilation  resp. how many queries are required to amortize the cost of compilation . 
automated reasoning 
¡¡table 1 reports some results of our extensive experiments. for each problem  forbus and de kleer  1   it lists results for the prime implicants  carvers  and hyperimplicants covers  successively. especially  it gives the ratios a and /  and the size  in literals  of the corresponding cover. the size of any tractable cover compilation is the size of e plus the size of the set of  partial  interpretations used as an implicit representation. for the carver-based approach  only the horn  reverse horn and binary classes have been considered. for the hyperimplicant approach  simplification of the cover  i.e. lines 
1 to 1 of the process-implicanth procedure  has not been implemented. 
¡¡results obtained on 1 variables random 1-sat problems  where the ratio #cla/#var varies from 1 to 1  are reported on the two next figures. 1 problems have 

been considered per point and the corresponding scores averaged. figure 1  resp. figure 1  gives aggregate values of ratios ¦Á  resp. sizes in literals  obtained for each compilation technique ¦Á = 1 separates the region for which compilation is useful from the region for which it is not. 
¡¡at the light of our experiments  tractable covers prove better than prime implicants covers  both for structured and random k-sat problems. significant time savings w.r.t. query answering and significant space savings are obtained. especially  tractable covers prove useful for many kbs for which prime implicants covers are too large to offer improvements w.r.t. query answering. more  the tractable cover approach allows the compilation of kbs which have so huge prime implicants covers v that v cannot be computed and stored. this coheres with the theoretical results reported in  boufkhad and dubois  1   showing that the average number of prime implicants of k-sat formulas is exponential in their number of variables. 
1 	conclusion 
both theoretical and experimental results show the tractable cover approach promising and encourage us to extend it in several directions. a first issue for further research is how to determine efficiently the best suited classes of tractable formulas for a given kb e. on the experimental side  an extensive evaluation of the carverbased technique equipped with more expressive tractable classes must be done. extending the hyper-implicant approach to other tractable classes  especially the q-horn one  boros et al.  1   is another interesting perspective. finally  fragments of tractable covers of e can serve as approximate compilations  lower bounds  of e in the sense of  selman and kautz  1; 1; del val  1; 1 . since the tractable cover approach allows disjunctions of tractable formulas from several classes  better approximations could be obtained. 
