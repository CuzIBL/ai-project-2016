 
this paper investigates the semantics of conditional term rewriting systems with negation  which may not satisfy desirable properties like termination. it is shown that the approach used by fitting  for prolog-style logic programs is applicable in this context. a monotone operator is developed  whose fixpoints describe the semantics of conditional rewriting. several examples illustrate this semantics for non-terminating rewrite systems which could not be easily handled by previous approaches. 
1 	introduction 
conditional term rewriting systems  ctrs  have attracted much attention in the recent past as a useful generalization of the simpler formalism of term rewriting systems  trs . but ctrs have not been unconditionally accepted  due to the absence of well defined semantics for conditional rewriting mechanisms. this paper suggests one remedy  following the approach of melvin fitting  who suggested similar semantics for prolog-style logic programs . 
모past work on the semantics of conditional term rewriting has followed three directions: 
1. impose restrictions on the syntax of the ctrs formalism to ensure termination and the existence of a unique precongruence which is considered to describe the meaning of the rewrite relation . this approach does not define the meaning of rewriting when the ctrs does not satisfy the relevant termination criterion. also  the termination criterion itself is undecidable  and is not a necessary condition for each rewrite step and all rewrite sequences to terminate finitely. 
1. give logical semantics for a ctrs r as a set of conditional equations 뫩 r 뫩 r   together with a set of  default  negative equality literals . this approach is useful if all rewrite sequences terminate or if the ctrs is intended to describe a specification based on a set of free constructor functions. 
1. transform ctrs into  equivalent  trs  and identify the semantics of the ctrs with that of the transformed systems . assign an  initial algebra  semantics for trs. the drawback of this approach is that it does not adequately describe the operational use of ctrs with negative literals in the antecedents of rules. 
모this paper attempts to fill the lacuna using an elegant approach of fitting  following kripke who brought together kleene's multivalued logics   and tarski's lattice-theoretical fixpoint theorem . fitting  uses this approach to present an alternative to the semantics of logic programming given by apt and van emden . the main contribution of this paper is to show that this approach can also successfully explain the meaning of conditional rewriting systems with negation  including the problematic ctrs whose semantics have eluded the grasp of previous approaches 

모in the next section  we introduce ctrs and point out the deficiencies of a two-valued fixpoint semantics. in section 1  following some mathematical preliminaries  we describe the new semantics for conditional rewriting. several examples are then given in section 1 to illustrate the semantics. references follow concluding remarks. 
1 	preliminaries 
1 	conditional r e w r i t i n g 
we define the formalism and operational use of a language for expressing data type and function specifications  1  1 . 
definition 1 equational-lnequational-conditional 	term 
rewriting systems  ei-ctrs  are finite sets of rules of the general form 

where ihs and rhs are two terms  and the antecedent is a conjunction of zero or more equations si = ti and negated equality literals every variable occurring in each and rhs must also occur in ihs. 
모following the notation of refers to the subterm of p at position j  and 'p q  j ' refers to the result of replacing  by q in p. for instance  when positions are described in dewey dec-
	and 
mohan 

d e f i n i t i o n 1 to n using an ei-ctrs r  written tains a rule equality literal 
 i  
minate; and 
of  
examples  see . 1 such every fixpoint; such that function 
1 	logic programming 


mohan 
key observation: the fixpoints of  describe the semantics of conditional rewriting with an ei-ctrs r; particularly important are the least fixpoint and the largest intrinsic fixpoint. 
모we now investigate the fixpoints of the monotone relation  corresponding to each rewrite system r. 
1 	logic programming 

mohan 
 c.k.mohan and m.k.srivas.  negation in conditional term rewriting   in r.wilkerson  ed. :   a d vances in logic programming and automated reasoning   to appear   ablex press  1. 
 d.plaisted.  confluence and reduction properties of conditional term rewriting systems . manuscript  1. 
1 	conclusions 