 
the paper presents a scheme for categorizing knowledge engineering tools. the classification of knowledge acquisition systems has revealed some interesting facts about these systems. it seems that systems which are able to work on multiple tasks produce very shallow  i.e.  not of expert-level  knowledge bases. on the other hand  systems which produce expert-level knowledge bases function on a single task. these insights have led to the design of aske  a knowledge acquisition system which can be used to build expert-level knowledge bases in several domains and for different task-types. the knowledge acquisition process is based on the notion of templates  the knowledge-bearing units of aske. templates provide a convenient way of representing domain knowledge. 
i introduction 
in the last few years there has been a growing amount of research on knowledge acquisition  ka . in general  this process  which includes the transfer of problem-solving knowledge from a domain expert to a computer program  is carried out by knowledge engineers. however  there exist a number of ka systems  for example  roget  bennet  
1   ets  boose  1  and mole  eshelman and mcdermott  1   which build knowledge bases by directly interacting with the domain expert. 
       the paper has two objectives. first  to present a scheme for classifying ka systems. second  to present aske  automatic system for knowledge engineering . in aske  we have attempted to automate the knowledge acquisition process. the aim is to produce a system that can be used by domain experts from different disciplines to build expert-level knowledge bases in their respective domains. the lessons learned from the classification exercise has been the motivation for the development of aske. 
       section 1 presents a scheme for categorizing knowledge-engineering tools. the discussion is centred on classifying existing ka systems. in section 1  we will look at the central features of aske. a description of how aske processes information is given in section 1. 
1 	machine learning 
ii a classification of ka tools 
our classification of knowledge engineering tools is shown in figure 1. the ka systems are distinguished from other tools by the fact that they interact directly with domain experts  and automatically acquire and generate knowledge bases. depending on how they extract knowledge  ka systems can be divided into two groups: induction-based and interviewbased. induction systems use inductive learning techniques to extract knowledge from experts. typically  an induction-based system induces rules from training instances  i.e.  positive and negative examples  provided by a domain expert. interview-based systems extract knowledge by carrying out an interactive  system-driven dialogue with a domain expert  or domain experts . they differ from inductive systems in that they do not have a learning algorithm  but rather  the interrogation of the expert is guided by use of domain-specific knowledge and/or of psychological techniques for eliciting knowledge. 

       on the basis of the type of heuristic the system employs to drive the interviewing process  we can classify interview-based systems as either knowledge-driven or technique-driven. knowledge-driven systems  e.g.  roget  mole  contain task models which assist in the identification 

and classification of new knowledge. the technique-driven systems  e.g.  ets   on the other hand  rely on formal methodology  which is often rooted in some psychological theory  e.g.  personal construct theory  to elicit domain knowledge from the expert. templates. the template approach to ka is founded on clancey's  1  classification paradigm. the assumption is that domain knowledge can be represented in classification hierarchies. furthermore  the heuristics for solving problems are no more than relationships between different concept hierarchies. the knowledge-driven systems use domain-specific 
strategies to elicit expert knowledge. the strength of this approach is that the end result  after a consultation  is a system which solves problems at the expert-level. however  the scope of such systems is limited  they can only be used to develop knowledge bases for a narrowly defined task area  e.g.  diagnostic task where symptoms do not have multiple  interacting causes . 
in order to qualify as a truly automatic knowledge 
engineering system  a system should be applicable over a wide range of domains  and produce expert-level systems. none of the presently known ka systems satisfy this criterion. in the rest of the paper we will describe work in progress towards the development of an automated ka system which has the general applicability of technique-driven systems and functionality of knowledge-driven systems. 
ill the aske system        aske contains four main types of templates  as shown in figure 1. the most basic template is referred to as 
general template  gtemp . a gtemp contains knowledge about domain classification  i.e.  information about the main tasks that experts do  and background knowledge such as bibliography and project aims. an acquisition template  atemp  contains general domain knowledge which includes main concept types and their inter-relationships. aske's interaction with the expert is guided by the atemp. the specialist areas for which knowledge bases have been developed  aske will have a reference template  rtemp . an rtemp consists of domain-specific knowledge which is used as an example of how a new knowledge base may be developed. a working template  wtemp  is created from the atemp at the start of the knowledge elicitation session. this template is subsequently filled up by the new knowledge. aske  patel  1  is an interview-based ka system which is both technique-driven and knowledge-driven   hence it is shown with a dotted line in figure 1 . it develops knowledge bases in two stages. in the first stage  a technique-driven method consisting of question-asking strategies is used to acquire an initial task model. this knowledge is then used to elicit problem-solving expertise from the domain expert. note that this ka strategy  the building and using of task models  is consistent with the keats methodology  motta et al  1  and is also used by knack  klinker et al.  1  and protege  musen  1  ka systems. 
       aske is built around the notion of templates. a template is a framework for representing domain knowledge. aske uses question-asking strategies geared towards eliciting knowledge that can be directly mapped onto the domain 
	patel 	1 

       figure 1 depicts how domain knowledge is represented in aske. templates are arranged in a hierarchy of nodes representing templates linked via an isa relation. the gtemps contain information that is not directly relevant for knowledge elicitation purposes. the basic template for acquiring knowledge is the atemp  the initial task model. the model includes information on the main concept categories for the task type  of the domain  and how these concepts are related to each other. aske uses question-asking strategies to elicit the atemp  if one does not exist for the domain. otherwise  the user is presented with the atemp and is given the option of changing it if deemed not appropriate for the proposed application. the knowledge about concept types is used to construct the wtemp  which is subsequently filled up with the new knowledge. 
       rtemps play a important role in the acquisition of the atemps and also in the main knowledge elicitation session. rtemps are extracted from developed knowledge bases. 
these are subsequently used as exemplars on the basis of which new applications may be developed. this usage of rtemps is like the interviewing strategy in roget  which used knowledge of existing expert systems to acquire the conceptual structure. the novelty of rtemps is that they are selected at run-time. 
iv a scenario 
interpretation are settlement and burial sites. these specialist areas differ in detail but not in the kind of reasoning done. thus  the rtemp for one can be used as an exemplar for developing the knowledge base of the other. in the scenario  we will assume that a knowledge base for interpreting burial sites has been developed. the example session involves the interpretation of settlement sites. the parenthetical sentence  in bold  following the question is obtained from the rtemp. 
a extracting general domain knowledge 
general domain knowledge consists of two kinds of information: how domain knowledge is organized and atemps for the different task types. both of these can be obtained from sources other than the expert  for example  books or people with a working knowledge of the domain. 
       the atemp for interpreting settlement sites contains the following information: 
1. concept category which refers to the observed data. 
- artifact  ecofact  feature 
1. concept category which refers to final solution  i.e.  kind of things that can be inferred . 
- activity and cultural profile 
1. information about the relationship between the concept categories. 

in this section we will briefly describe:  1  the steps involved in the extraction of an atemp; and  1  how the atemp is used to extract problem-solving knowledge from the expert. as an example  we will use the domain of archaeology. 
archaeological knowledge may be classified as shown 
in figure 1. typically  an archaeologist excavates a site. the 
finds are recorded  classified and interpreted. of these  only the latter two are conducive to expert system technology. the classification task is normally restricted to classifying of artifacts  i.e.  the finds which are man-made . in the interpretation task  the social habits and the organization of past civilizations are inferred from the finds. 
this information was extracted as follows: 
 the type of initial data is identified.  
 aske: what are the main categories of observed data for interpreting settlement sites   the main categories of observed data for interpreting burial sites were: artifact  ecofact  feature   archaeologist: artifact  ecofact  feature 
 the type affinal solution is identified.  
 aske: 	what are the main categories of final solution for interpreting settlement sites   the main 

categories of final solution for interpreting burial sites were: cultural profile.  
archaeologist: activity  cultural profile 
 identify relationships. the information is used for the acquisition of heuristics.  
 aske: which initial data categories are related to activity  
archaeologist: artifact  ecofact 
 aske: which initial data categories are related to cultural profile  
archaeologist: artifact  ecofact  feature 
b extracting problem-solving expertise 
the knowledge elicitation session commences with the creation of a wtemp from the atemp. the wtemp contains slots relating to the main concept types for the task. 
1 	machine learning 

the knowledge elicited from the expert is held as values of respective slots. 
       for the interpretation of settlement sites  the important facts are the different categories of observed data and solution. the actual expertise in interpreting sites lies in the ability to map data to interpretations. the rules therefore depict transformations from data to interpretation. these rules are of the form: 
if 	data and data and .... then 	interpretation and 
       the following dialogue shows how the atemp for interpreting settlement sites is used to interrogate the expert.  note: most of the interaction  from hereon  between aske and the user is through graphical interface.  
 obtain classification of different data types.   aske: what are the different types of artifact    the artifact hierarchy for interpreting burial sites is displayed graphically.  expert: pottery  stone  metal 
 obtain classification of different solution types.   aske: what are the different types of activity  
expert: cooking  pottery-making  butchering  storage  1 aske: what are the different types of cultural profile  
expert: exchange contacts  demography  craft specialization  ritual practices 
 the attributes of all data types are obtained.  
 1 aske: what are the important attributes of pottery that may contribute towards the interpretation of this settlement site  
expert: 	 attribute  fabric 
 possible values  coarse  fine 
 attribute  decoration 
 possible values  plain  ornamented 
 attribute  blackening 
 possible values  yes no 
 the relationship between data and solution is identified. this is used to automatically generate rules.  
 1 aske: what can you conclude from the fabric of pottery  
expert: 	 activity  cooking  storage 
 cultural profile  exchange contacts 
 aske: what can you conclude from the decoration of pottery  
expert: 	 activity  cooking 
	 cultural 	profile  exchange contacts  ritual 
practices 
from the information supplied by the expert  rules of 
the following type are generated. the rules are displayed in the rule editor  and the expert is asked to edit them. 
if artifact is a pottery and fabric is  coarse  fine  and decoration is  plain  ornamented  
then activity is  cooking  storage  site profile is  trade contacts  ritual practices  
v conclusion 
aske is an automated system for knowledge engineering. it is an interview-based ka system that develops knowledge bases by first acquiring general domain knowledge which is then used for acquiring problem-solving knowledge from the expert. the ka process in aske is guided by templates  the knowledge-bearing units. aske contains four basic types of templates  each of which carries different kind of domain knowledge and serve different functions. 
       in the notion of a template we have attempted to put forward a general scheme for representing domain knowledge. indeed  as the classification of ka systems highlighted  it is necessary for any ka system  attempting to automate the knowledge engineering process  to be able to develop knowledge bases in different domains and for different tasktypes. aske was designed with this purpose in mind. the template approach has been successfully used for acquiring knowledge in the domains of archaeology  e.g.  interpreting settlement sites . motor mechanics  e.g.  diagnosing engine problems  and nursing  e.g.  selecting patient care plans . 
acknowledgements 
i would like to thank marc eisenstadt  enrico motta  tim rajan  steve shannon and arthur sum for helpful discussions and comments. this research is supported by an open university studentship. 
