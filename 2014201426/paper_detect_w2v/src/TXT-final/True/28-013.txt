 
belief revision is a ubiquitous process underlying many forms of intelligent behaviour. the agm paradigm is a powerful framework for modeling and implementing belief revision systems based on the principle of minimal change; it provides a rich and rigorous foundation for computer-based belief revision architectures. maxi-adjustment is a belief revision strategy for theory bases that can be implemented using a standard theorem prover  and one that has been used successfully for several applications. in this paper we provide an anytime decision procedure for maxi-adjustments  and study its complexity. furthermore  we outline a set of guidelines that serve as a protomethodology for building belief revision systems employing a maxi-adjustment. the algorithm is under development in the belief revision module of the cin project. 
1 	introduction 
belief revision underlies many forms of intelligent behaviour. an intelligent agent must be adept at revising its beliefs in a rational way. the agm paradigm  so named after its founders alchourron  gardenfors and makinson   is a powerful theoretical framework for modeling and implementing belief revision systems; it provides a rich and rigorous foundation for principled computer-based architectures that endow agents with the ability to change their beliefs in a coherent and rational fashion. 
¡¡gardenfors and makinson  provided a constructive means for defining revision functions based on an epistemic entrenchment ordering of a reasoning agent's beliefs. furthermore  they showed that there is a oneto-one relationship between revision functions and epistemic entrenchment orderings. 
¡¡iterated revision can be achieved by transmuting epistemic entrenchment orderings where the emphasis is not exclusively on acceptance and removal of beliefs from a theory  but also on raising and lowering of the degree of acceptance of beliefs. raising the degree of acceptance of a belief corresponds to a revision  whilst lowering it corresponds to a contraction. 
¡¡maxi-adjustment is a specific strategy for implementing belief revision systems. it strives for maximal in-
1 	automated reasoning 
ertia of information under change  and was devised by williams . it has been shown to be successful in applications where the systems designer or knowledge engineer is able to specify dependencies among beliefs  macnish and williams  1 . in essence  when incoming information is inconsistent with the agent's knowledge  a maxi-adjustment retracts only those minimally entrenched beliefs that are inconsistent with the new information. 
¡¡in this paper we provide an anytime decision procedure for maxi-adjustments. furthermore  we outline a set of guidelines that serve as a protomethodology for building belief revision systems. the algorithm is under development in the belief revision module of the cin project; a project that is seeking to develop an intelligent information management toolkit  antoniou and williams  1 . 
¡¡section 1 outlines belief revision in the agm paradigm. section 1 discusses several important modeling problems that arise when agm change functions are used in practice  it thence outlines how maxi-adjustments overcome them. section 1 describes subsumption removal; an optional feature of maxiadjustment that can be used to enhance its performance. in section 1 we give an anytime algorithm for maxiadjustments  and in section 1 we discuss its complexity. in section 1 we make several methodological remarks concerning the design and development of belief revisions systems that employ the maxi-adjustment strategy. 


subset of c closed under cn. we let l¡Þ  pronounced 'elbow'  denote the set of contingent sentences. 
¡¡within the agm paradigm a body of information is represented as a theory  and informational changes are regarded as transformations on theories. the principal agm functions are contraction and revision. they can be described using the well known agm rationality postulates  and individual contraction and revision functions can be uniquely determined by any of the several standard constructions  e.g. the epistemic entrenchment ordering construction. both the postulates and the constructions attempt to encapsulate the principle of minimal change. the magnitude of change may not be based on set inclusion measures; sometimes the most rational response to avoiding inconsistency is to forfeit more than the minimal number of beliefs  e.g. it may be better to retract several weakly held beliefs than to surrender a single strongly held belief. 
¡¡a revision  t j  attempts to change a theory t to incorporate a so that the resultant theory is consistent provided a itself is consistent. a contraction  t~¦Á involves the removal of a set of sentences from t so that a nontautological sentence is no longer implied. a withdrawal function  makinson  1  is a generalised contraction function in that it satisfies all but the most notorious postulate for contraction  namely recovery; the property t = cn t¦Á u a . it has been argued in the literature that recovery is not always appropriate for a limited reasoner  however it is one of the most important postulates for capturing the notion of minimal change when information is given up. 
1 	implementing belief revision 
for the purpose of developing an implementation of 
agm change functions  gardenfors and makinson's  work was a significant breakthrough. they showed that an epistemic entrenchment ordering  certain total preorder on the sentences in the language  can uniquely determine how the system will react to the pressures of impinging information. in order to develop computational models based on the entrenchment construction two obvious problems must be overcome: first an epistemic entrenchment ordering has to be propagated by the change function  and second a finite representation for epistemic entrenchment orderings is needed. 
¡¡we use partial entrenchment rankings1 as our representation of well-ranked epistemic entrenchment orderings  and we model iterated belief revision by propagating these rankings using a maxi-adjustment; a procedure described in williams . 
1 	partial entrenchment rankings 
finite partial entrenchment rankings will be sufficient for present purposes. they represent finite epistemic entrenchment orderings of ¡ê where the elements of a finite  a not necessarily closed  set of sentences are mapped to the natural numbers. 
definition: a finite partial entrenchment ranking is a function b from a finite subset of sentences in l into the 
¡¡¡¡1 partial entrenchments were defined in  williams 1   and essentially identical representations can be found in  dubios et al 1  rott 1  williams 1   and elsewhere. 
	williams 	1 

1 	automated reasoning 

	williams 	1 

1 	complexity 
the procedure maxi-adjustment b  a  i newb  returns a revised ranking newb for any allocation of computational time. the longer the algorithm runs the closer the ranking newb approximates b* ¦Á  i . 
¡¡first-order logics satisfy the conditions required of the underlying logic given in section 1  hence the agm framework and the proposed algorithm supports changes to rich knowledge bases  in principle. however  it is well known that satisfiability in first-order languages is undecidable  consequently nontrivial belief revision algorithms that are guaranteed to terminate cannot be constructed. the maxi-adjustment decision procedure described herein is an anytime algorithm  so it can be used to generate an infinite sequence of better and better approximations to revision and contraction functions. 
¡¡as noted in the previous section the maxi-adjustment procedure essentially consists of two main phases. 
¡¡the first phase is computationally easier than the second and if it is completed then we are guaranteed to satisfy the agm postulates for revision and withdrawal  and notably we have enough information to construct a contraction function  if desired. it is interesting to note that for query evaluations  such as is 1 € b* ¦Á  i   only the first phase need be carried out. 
¡¡the function degree is the workhorse of the first phase. computing degree b ¦Á  is np-hard. if a polynomial fragment of propositional logic is used  then computing degree is polynomial. our anytime algorithm uses a top-down strategy that  if interrupted will always err on the side of overestimating the degree of sentences which in turn will never lead to inconsistency. a purely bottom up procedure would not exhibit this behaviour. however a hybrid strategy that combined a top-down and a bottom-up binary search would be more efficient on average  than a purely top-down linear search for the degree of a  and if b has n natural partitions then it requires  log1 n  satisfiability checks  lang  1 . an interpolation strategy that used information about ranking's history  or information available from the application at hand would also improve the performance of the function degree. hybrid and informed techniques have been investigated in lang . if we adopt a hybrid algorithm for degree in our anytime algorithm then should the program be interrupted we simply use the most recent upper bound to calculate the resultant ranking. 
¡¡the first phase determines the most important core of the ranking to survive the change  the second phase refines it by maintaining as many other beliefs as possible based on the original ranking. the second stage of the maxi-adjustment is in a1  and hence solvable with a polynomial number of calls to an np oracle  c.f.  nebel 1  eiter and gottlob 1  . the worse case arises when all explicit beliefs are equally ranked. the computational cost decreases as the number of ranks increase. so the more discerning the agent the easier it is for him to modify his beliefs using a maxi-adjustment. this property concords with our intuition  i.e. it seems psychologically plausible  but not all revision strategies exhibit it. for example  ordinary adjustment which is based on the standard entrenchment construction does not. 
1 	automated reasoning 
1 methodological remarks 
1 contraposition 
the use of maxi-adjustment presupposes that the knowledge engineer is able to identify reasons. the inability to identify reasons simply means that more information than is perhaps intended is retained in practice. if 1 is a reason for ¦Á then 1 -  ¦Á should be placed higher in the ranking than a. using material implication in this way has an important ramification  namely contraposition of reasons  i.e. whenever ¦¡ is a  whole  reason for b  then b is a  whole  reason for ~ ¦Á. for example  if one of the reasons my hang-guilder is ascending is that the up-lift is sufficient to overcome the effects of gravity  then one of the reasons it is not ascending is that the up-lift is insufficient. consequently  reasons do not capture causality in a broader context. 
¡¡another effect of contraposition is that if 1 is a reason for a  then when an agent revises by adding - ¦Á he will  if only implicitly   baccept . maxi-adjustment can also be used to model applications in which contraposition of reasons is not an appropriate assumption. this is achieved by breaking down the changes to the ranking into more primitive operations  and composing a trans-
action on the ranking! 
1 some guidelines 
knowledge engineers and system designers are accustomed to the syntax sensitivity present in prevalent information modelling methods  such as  restricted  logical languages  entity-relationship models  conceptual graphs  etc. methodologies have been developed for these traditional techniques: they guide the development process to a faithful  hopefully optimal  representation of the application at hand. 
¡¡maxi-adjustment is also syntax dependent  and whilst a methodology for using maxi-adjustments is not yet available the following application independent guidelines have helped in the development of several belief revision applications. 
 1  important information should be explicit. 
 1  information should be in its simplest logical form. 
 1  the number of ranks should be maximised if incom-ing information is expected to be inconsistent with highly entrenched information. 
 1  conjunction can be used to bind information items together  e.g. if the application calls for ¦Á to be removed whenever 1 is and vice versa  then ¦Á   b can be used. if the conjuncts themselves are not explicit  or not derivable from other explicit beliefs then they will stand and fall together. 
 1  represent sentences that do not need to be bound as independent sentences  e.g. if ¦Á and 1 are not related then using ¦Á and 1 is preferable to the compound sentence a a 1. 
 1  irredundant rankings are preferable. 
 1  if the set {1   1 ...  1n  constitutes a reason for a 
 i.e. their simultaneous satisfaction would mean that q must hold   then the sentence 1  a1 a... a1n -  a is placed higher in the ranking than a. 
 1  subsumption at the same rank should be avoided  and should only be used to satisfy guideline  1 . 
guidelines 1  1  and 1 are related to data normalisation in database design; a process used to transform a database into a representation that minimises update anomalies. as is commonly the case with sets of guidelines  there are exceptions and some guidelines may be in conflict with one another for a particular application. for example  following  1  may lead to a redundant ranking which clearly offends  1 . 
¡¡methodologies will have to be developed to support the effective use of belief revision in real-world applications. their development will be facilitated through experience with implemented prototype systems out in the field. our aim is  not only  to develop a robust belief revision system but also to assist the user in making design choices. this is partially achieved in our system  williams and williams  1  by making as many of the consequences of a users ranking representation visible. for example beliefs are highlighted before being moved  changes can be stepped through  reasons can be queried for in advance  since they are determined by the current ranking   and rankings can be unwound and saved using commit and rollback mechanisms. rankings can also be modified hypothetically during development and testing. the anytime algorithm for maxi-adjustment is under development in the cin project: a project that is seeking to develop an intelligent information management toolkit. it offers a suite of sophisticated methods for default reasoning and belief revision. the system is currently founded on an objected-oriented design. the core of the belief revision system is implemented in c++ using a state-of-the-art tableau theorem prover  and a java based graphical user interface that provides facilities for dropping and dragging sentences up and down a ranking. several rankings can be manipulated simultaneously. 
1 	discussion 
iterated belief revision can be achieved by transmuting a partial entrenchment ranking. in this paper we described an anytime decision procedure for iterated belief revision. 
¡¡we discussed the complexity of our anytime algorithm. in essence  it possesses two main phases:  i  determine the degree of acceptance for the information to be moved down the ranking  and  ii  remove minimal sets of sentences at each rank that entail the information to be moved down the ranking. the first phase is computationally simpler than the second  and if the first phase is completed before the algorithm is interrupted then we are guaranteed to be able to identify a theory base whose closure satisfies the agm postulates for revision and withdrawal. furthermore  the ranking so far contains enough information to construct a theory satisfying the postulates for contraction. 
¡¡the proposed anytime algorithm has been used for several applications  and as a result of the experienced gained in using our system we were able to provide a domain independent protomethodology for developing belief revision applications based on maxi-adjustment. 
