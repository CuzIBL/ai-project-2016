 
　　　we present and analyse experimental r e s u l t s in the 	f i r s t 	extensive use of a theorem prover based 
on 	resolution 	by 	u n i f i c a t i o n 	and 	e q u a l i t y . i m p l i c i t 	use 	is 	made 	of 	e q u a l i t y axioms by the 
inference r u l e s rue and 	nrf 	to 	achieve 	i n c i s i v e r e f u t a t i o n s 	f o r 	e - u n s a t l s f l a b i l i t y . 	since 	a primary 	issue 	in 	automated 	deduction 	is 	the e f f i c a c y 	of 	convergence 	to p r o o f   we describe in d e t a i l the h e u r i s t i c s which 	were 	used 	to 	o b t a i n p r o o f s . 	a comparative t a b u l a t i o n w i t h the r e s u l t s of mccharen  overbeek and wos  who used u n i f i c a t i o n r e s o l u t i o n   	shows 	sharply 	reduced 	cumulative 
u n i f i c a t i o n 	counts. 
1 . 	i n t r o d u c t i o n 
       a primary reason f o r the f a i l u r e of binary r e s o l u t i o n r e l a t e s to the handling of e q u a l i t y   a 
       predicate which plays a c e n t r a l r o l e in most axiomatic systems. the use of the e q u a l i t y axioms in the input clause set leads to very long proofs which are unnecessarily cumbersome and paramodulation which leads to much shorter proofs presents problems of h e u r i s t i c search f o r the proper paramodulants which experimentors have not been able to surmount. 
       in   1   1   the author presented the theory of r e s o l u t i o n by u n i f i c a t i o n and e q u a l i t y in which the axioms of e q u a l i t y are incorporated i n t o the d e f i n i t i o n o f r e s o l u t i o n . i n c o n t r a s t t o paramodulatlon  rue r e s o l u t i o n does lend i t s e l f to h e u r i s t i c s which converge t o r e f u t a t i o n s and i t i s the purpose of t h i s paper to c a r e f u l l y study t h i s issue. 
　　　we w i l l f i r s t give a 	synopsis 	of 	the 	basic theorems 	and 	d e f i n i t i o n s 	of 	rue 	r e s o l u t i o n 	as presented in  and then proceed to the discussion of experiments and h e u r i s t i c search procedures. 
 1  a disagreement set of a pair of terms 
	 t1 t1  	is 	defined in the following manner: 
 1  if t 1   t 1 sre identical the empty set is the sole disagreement set. 
 1  if t1 t1 are not identical  the set of one element the pair   t 1   t 1   is the origin disagreement set. 
 1  if t 1   t 1 have the form 
1 
to a 
a 
that the 
choosing a disagreement set  the topmost and sometimes the bottommost according to a 
which are obviously not equivalent deduction*. if criterion we w i l l develop later in  1 . we instead use the equality axioms with unification resolution  each of the above one step deductions 
this 1 step proof becomes a 1 step proof when 
becomes an elongated sequence of 1 and 1 steps we use the equality axioms with unification 
respectively. 
resolution. the rue theorem prover deduced the above refutation in 1 seconds using a total of 
	the two important issues which remain are 	the 
	1 unifications. 	typically a 	1 	step 	rue 	proof 
selection of substitution and disagreement set when w i l l represent a f a i r l y sophisticated axiomatic 
we resolve complementary l i t e r a l s   for which there derivation which humans do not easily arrive at. 
is the theorem: 
1 

1. 	a comparative analysis 
　　　in evaluating the performance of an automatic theorem prover  it is always important to compare machine performance against human performance and in doing so to avoid extremes. we should not expect to capture in a computer algorithm the creative  analytical genius of an exceptional mathematician  rather we should be content to compare against astute human performance. we should require a theorem prover to prove theorems which astute humans find d i f f i c u l t to deduce. since the reader w i l l always consider himself an astute human  he can put the issue subjectively to test. 
1 
　　　at this level of performance  automated deduction has important applications in many fields  including robotics  the science of intelligent machines  and also data base technology 
which should be more than sophisticated collection schemes for explicitly stored data. 
　　　since 1 when resolution was introduced  we have accumulated substantial experience with machine deduction by resolution. as recently as 1  the computer transactions of the ieee contained two important articles of major implementations of resolution theorem provers. 
	in the maryland system of 	wilson 	and 	minker 
  the authors conclude with a very negative assessment of the efficacy of resolution: 
　　　 considering that the average proof attempt using the best overall proof procedure required 1 cpu seconds  our results are discouraging. even though most of the problems were relatively simple for a human to solve  the total cpu time required for the study cost more than $1. clearly such a theorem proving system is far from practical. 
       none of the inference systems tested enabled more than a marginal improvement in the overall power of unrestricted binary resolution. . . . we have been unable to determine the problem and proof procedure characteristics which either enable problems to be solved or prevent them from being solved.  
in contrast in the argonne system of hccharen  
overbeek and wos   the authors present 1 experiments ranging from t r i v i a l to quite d i f f i c u l t theorems  proven in diverse fields  together with some theorems in which their system failed. their experiments represent one of the most successful attempts in automatic deduction. they presented for each experiment the input clause set used as 
well as a systematic tabulation of the amount of computation required. this paper in singular fashion established a benchmark for other researchers to compare with and we have here used it as a basis of evaluation of rue. 
	we 	have 	conducted 	1 experiments taken from 
how and dealing with ring theory  group theory 	and 
boolean algebra. the heuristic procedures developed from these experiments have  thus far  proven effective. we state the comparative results across 1 experiments between mow and rue in table 
i. 

notes on table 1: 
 1  the rue theorem prover was exceptionally superior throughout.the ten boolean and ring theory experiments  and in group theory both theorem provers achieved impressive results. 
 1  the rue theorem prover was implemented in the pl/1 programming language and run on an amdahl computer. the mow theorem prover was implemented in assembly language and run on the ibm system 1. it is d i f f i c u l t to compare runtimes in diverse hardware and software environments  and we suggest total unifications as a valid measure of comparison. 
 1  since mow used a complete set of equality axioms in the input clause set of a l l these experiments and since they do not tabulate any paramodulatlon counts  it seems that they made l i t t l e successful use of paramodulatlon even though their paper states that this technique was incorporated in their system. 
 1  npr: no published reeult without implying that mow felled on these theorems. 
 1  mow ran ba and b1 as a single theorem 
	 x + xy - x  	a 	x x + y    x 
which negated becomes a+ab=a v a a+b f*a in the input clause set  and it is evident that the refutation of ~ b1 a b1  is simply the concatenation of the refutations for ~b1 and 
~b1 individually taken and as derived by rue. 
1 

 1  the same holds for ~ b1 a b1  whose proof is the concatenation of the rue refutations for ~b1 and ~b1 individually taken. 
 1  in proving g1 and g1  the rue theorem prover compared each new resolvent against each resolvent already in the refutation search tree in order to suppress duplicates and the overhead led to the very slow times 1 and 1 seconds. however  this duplicate removal can be implemented much more efficiently to reduce the runtimes considerably. for the most part  duplicate removal was not applied in the other rue theorems of table 1. 

　　　with rue a computer proved a l l of the above 1 theorems in 1 seconds which may be compared with the reader's own achievement. the brevity and lncislveness of the computer deduced rue proofs  can also be compared with the reader's own humanly deduced proofs. 
　　　the above represent f i r s t experiments with rue automated deduction  wherein the longest theorem proven is 1 rue steps  1 steps if using the equality axioms   and we w i l l now outline the heuristics which were derived and employed in these f i r s t experiments. 
	1. 	heuristic principles applied 
　　　the following are the primary heuristic principles which were developed during experimentation: 
 1  heuristic ordering by degree of unification 
 1  selection of the loweat level disagreement set not containing an irreducible l i t e r a l 
 1  heuristic substitution selection 
 a  complexity bounds relating to: 
 a  argument nesting 
 b  number of distinct variables in a resolvent 
 c  number of occurrences of the same constant or function symbol in a clause 
 d  maximum number of literals in a clause 
 e  maximum character length of a clause 
 1  purging redundancies by subsumptlon 
 1  demodulation 
 1  frequency bounds for the use of individual axioms in a refutation path and bounds on the consecutive use of the same axiom. 
　　　a l l of the above principles are syntactic in nature and apply generlcally to experiments performed.  1  through  1  ae rue specific but the remaining principles have commonly been used by resolution theorem provers. 
1 

　　for example  in the refutation of ab=ba stated in  1  which proves that a group is commutative if x*x   e  we used the input clause set: 

     note that we have added to the input clause set the symmetry variant of each axiom which enablea ua in this experiment to build in symmetry without introducing the axiom x1y v y-x. this technique was also used by now. 
　　　table 1 shows the unification acoring which took place for aucceaalve resolvents in the refutation of ab=ba. we place in parentheaea axloma having a common score and * above the axiom actually used in the refutation. we refer to lxioms by their index in the input clause set. 
     the relative ranking of the refutation axion in each acorlng la given by the sequence: 
1 1 1 1 1. the refutation axioms average to a relative position of 1 among 1 candidate axioms. 
　　　furthermore  if we write the refutation as i welghted-axloro sequence: 

we see that the minimum weight is 1 and that wc may disregard an axiom scoring below 1 in the refutation search. 
     we may now state our f i r s t principle ol heurlstlcally ordering the expansion of th  refutation search tree: 
1. apply axioms to a negative l i t e r a l in the order of higher degree of unlflcalon f i r s t and set a lower limit sdwmin below which we suppress or postpone the application of an axiom  search directive weight minimum  
1. furthermore  among axioms which qualify fo application  select the f i r s t splim candidates  search directive l i m i t   . 
1 
　　　in reviewing a l l the refutations in group theory  we found the sdwmin 1 or 1 applied. though the completeness theory specifies that a l l axioms for which w   1 must be used to preserve completeness  heurlstlcally w  - so specifies a subspace of search where we should expect to find the refutation. 
　　　furthermore  sdlim specifies an inner-subspace of the latter which is even richer in expectation. in the boolean algebra and ring theory experiments  sdlim 1 or a was successfully used. 
 1  selecting the lowest level disagreement set not containing an irreducible literal 
　　　typically in adding the negated*theorem to the input clause set  we introduce skolem constants and when it is evident that these constants are in effect arbitrary constants with respect to the input axioms  then we can conclude that inequalities on skolem constants like a=b are irreducible  i.e. we cannot deduce a-b from the 
axiom set. 
　　　for example  in group theory the negated theorem ab=ba introduces skolem constants a b  
which with respect to the axioms: 
ex-x  xe x  x~*x e  x x   - e   x y    xy z 
are arbitrary constants and we cannot prove from these axioms that a-b. we should never generate an inequality af*b in a disagreement set during a refutation search. furthermore  inequalities like  a~1a b-e which demodulate to irreducible l i t e r a l s   are also irreducible and can never appear in a refutation. 
this leads us to the following heuristic rule:  in an rue deduction  the disagreement set likely to be required by a refutation  is the lowest level disagreement set not containing an irreducible l i t e r a l .   
　　　in fact across 1 experiments containing 1 refutation steps  the above selection was always correct and what is more important led to proofs which did not require nrf. 
　　　the above rule heurlstlcally complements the s t r i c t rule specified by the completeness theory where we state that we must select the topmost viable disagreement set  which then requires us to descend to lower levels by nrf if necessary. 
 1  heuristic substitution selection 
　　　in the completeness analysis in   we establish that substitutions are to be performed only in variables at the f i r s t argument level of predicates in rue and only in variables at the f i r s t argument level of the outermost function in nrf. this qualification of the mgpu it required for completeness. it leads  however  to proofs with extensive use of the nrf rule  yielding much longer refutations requiring deeper search trees. these same proofs can always be expressed in shorter form without nrf steps  by using immediate substitutions at lower argument levels* 
　　　intuitively it is desirable to use an unrestricted mgpu  achieving a maximum degree of unification so that inequalities in a disagreement set are reduced in number. 
　　　it in fact occurs in a l l 1 refutation steps in 1 experiments performed that maximum unification as described below is the refutation substitution: 
1. first subsltute in a left-to-rlght scan only in variables at the f i r s t argument level. 
1. then in a second left-to-rlght scan  substitute in variables at a l l lower argument levels. 
     let us now apply both the notion of maximum unification and irreducible l i t e r a l s to our refutation of abffba in group theory. from the constants 

we define as irreducible l i t e r a l s : 

and augment this set with any l i t e r a l which demodulates to one of its members  using the demodulating substitutions 

　　　if in searching for a refutation of ab=ba  we heur1stleally choose the maximum unification mgpu and the lowest level disagreement set not containing an irreducible l i t e r a l   we obtain the refutation we have already stated in  1 . this proof which is specified by the heuristic theory is 1 steps compared to the 1 step refutation specified by the completeness theory which contains 1 additional nrf steps. 
1. completeness vs. 	heuristic theory 
　　　there s a polarity between completeness and heuristic theory  the latter tends to sacrifice completeness for the sake of efficiency which is crucial  and the former in giving the highest priority to the preservation of completeness tends to be seriously inefficient. it is important  

1 however  to elaborate both approaches  and we have dona this in  for coapleteness and hare for heuristics. 
	1. longest experiment 	performed 
	let 	us 	now examine the longest refutation in 
table 1  containing 1 rue steps  which proves in ring theory that xy -  -x  -y . the rue theoren prover deduced this refutation in less than 1 seconds employing 1 unifications in its heuristic search. the same proof with the equality 
ixloms would be a 1 step refutation. 

1 
