 
a simplified version of the hueckel operator was worked out to preserve a l l the advantages of the original one with a running time considerably shorter. its 
concept is based on the reinterpretation of the hueckel operator as a template matching method. this reinterpretation renders some theoretical and computational simplifications possible. as a result  an optimal edge-shaped template is constructed by linear combination of two suitably chosen original ones. the parameters of this optimal template characterize the edge segment found in a picture area. 
introduction 
　　　hueckel's operator for edge detection in pictures is one of the best tools which have been invented for this kind of tasks. in very noisy pictures its high effectiveness can be comparable only with the global optimization procedures e. g. by montanari and martelli  1    1   but without their drawbacks in processing time and memory requirement. the hueckel operator processes a picture block containing 1 points on pdp-1 in 1 msec  e. g. i f i t scanned for example a 1 by 1 point 
picture so that the blocks overlap by one thirds of each other  the processing time would be about 1 seconds. of course  by means of sophisticated edge-following methods this time can be reduced significantly  thus the applicability of this operator is not beyond the possibilities to process a real picture. these 1 msec are  however  rather large to look for some modifications based on i t s basic idea to speed up the operation  even by possible simplifications which preserve the 
excellent properties of the original one. 
　　　in this paper we present a method aiming at this by reinterpreting the principle of the hueckel operator and giving a modification of it based on our 
interpretation. 
hueckel's method in its original 
form 
　　　the original interpretation of the hueckel operator can be summarized as follows: 
a/ we seek for a function s on a d area in the input picture  which function has a constant b value on one side and 
1 

and others  1    1    1    1  have worked out several versions of this method and investigated them empirically. for example  perhaps the simplest templates for two-dimensional pictures are those of shirai  1  sketched in fig. 1. the first of them shows a maximum i f i t lies exactly on a vertical and the second on a 
horizontal edge. for making the method less noise-sensitive  one can take into account larger areas  e. g. 1 or 1 etc. 
　　　since hubel and wiesel  1  pointed out that the visual information processing system in mammals operates in a way very close to this method  at least for the local edge and spot extraction on the retina  template matching has a certain theoretical support. moreover  just this physiological achievement led deutsch to develop his template called slen /short line extractor neuron  1 / used for numerical character recognition. for real-time processing of real pictures  however  these methods do not produce so effective results as other ones  being though ad hoc without any theoretical suggestions. in the case of edge detection  if the shape and orientation of the template are fixed  the probability of good matching is little because the output value of the convolution decreases very sharply either because of the increase of the angle between the template edge and the real one or the curvature difference of them  1 . from this two main shortcomings follow. first  the system would not find certain  unluckily oriented edges even from the lineshaped ones. to surmount this difficulty  holdermann and kazmierczak  1  have presented a method with parallel application of several templates to the same picture area around a point. they took care also of noise elimination by averaging  and their output picture after this multiple template operation looked quite good in quality  but even their method could not avoid the following - second - difficulty: in the case of fixed templates the large 
majority of the required computer operations falls into the category of unsuccessful trials and the whole processing time may be too long  especially if the picture is not  angular  enough. the main reason of these shortcomings is obviously the rigidity of the templates applied. in contrast to e. g. holdermann and kazmierczak's eight templates  we would need only one of them; but that would be 
the best matching one. the question is how to find just this  optimal template*  i.e  how to solve the opposite problem to that of template matching: f i t t i n g the template to a fixed picture area and not the picture area to a/some fixed template/s/. let d be 
this area of the picture  t the set of a l l possible templates  and  the input 
two-dimensional grey-level function  then we seek  so that 
1 


the possibility of simplifying the hueckel 

　　　in hueckel's interpretation the basic aim  i. e. finding an edge  is reached by fittinga two-dimensional function to the input grey-level function in a picture area. consequently  a relatively large set of both the base functions and edge parameters is required  because it is obvious that no satisfying degree of fitting could be approached by a remarkably simpler base field and parameter vector /containing e.g. two or three functions or values respectively/ . if we are  however  considering the method as a template matching one  the fitting problem becomes unimportant and its requirements cannot be taken into account. 
　　　first  we may choose a two-dimensional parameter vector /c s/ instead of /c s r b d/ as the grey values of the two sides of the step function are irrelevant  and the exact location of the edge inside the d area can be computed in a very simple way once we have determined the edge d i rection. the direction is characterized only by c and s  as in the equation of the edge 
ex + sy = r 
c and s are just the direction cosines to the +x axis. 
　　　second  if we need only the edge d i rection  we may work with only two of hueckel's original templates h .  .h1  because i t seems well even intuitively /we will prove it later  of course/ that by the linear combination of h1 and h- the direction of the optimal template can be determined. by the direction of a template we mean the direction of the o-crossing of a h1 or h1 type function. 
　　　third  if we do not take care of the mathematical conditions of the fourier function fitting in a hilbert space - as these conditions determined the choosing of h ...h1 in hueckel's work /chapter 1/ the 1nly criterion in choosing our two templates can be the speed of computation which is very crucial in real applications. thus we can use both constant-valued template functions and a more convenient shape for the d picture area. the convenience of this shape means also the speed of computing c and s or any other quantities characterizing the direction. 
　　　the method we have got to by the above considerations will be set forth in the following section. it is essentially simpler and faster than that of hueckel  but as will be ssen from the examples presented later  it preserves all of its advantages in comparison to other methods. the computation consists of two steps. the first one is the determination of the edge direction by constructing an optimal template from two beginner ones by linear combination. just like in hueckel's method  a vast part of the extremizatlon problem is solved analytically and the number of the required arithmetical operations is small. the second step is the determination of the exact location of the edge in d by its two border points. it is solved by some simple logical rules and point reflections. 
description of our edge detection operator 

　　　the core of the method is based upon the following elementary theorem: 
theorem: let d denote the unit square  f. 

be the function being +1 above the subdiagonal of d  and -1 below i t   f1 be the function being +1 above the principial diagonal of d and -1 below it /see fig. 1  a  b/ and let f be a function being b+d above a line e in d  and b below this line. /see fig. 1  c or d/. then if a denotes the angle between the subdiagonal of d and e  the following equation will hold: 

1 


　　　the proof of the theorem will be presented in appendix b. the odd thing about the theorem is that the expression at the left side does not depend either on b and d or on the real place of the line but its angle. 
　　　by this theorem we are given a very pleasant tool to determine an edge in a l i t t l e part of the picture. the two integrals can be very easy and fast computed  and because of the integrations this method is of very low sensitivity for noises. /later we shall elaborate further considerations about this./ 
　　　in our work  we have chosen d to be a square consisting of 1 picture points. having supposed that there was a straight edge in the picture at d  by using the above mentioned theorem we could determine its place  i. e. its two endpoints in d. 
　　　to begin with we transform the value of the tangent to a more treatable form. we determine from the value of tg a how many picture points are the difference between the right and the left end of a 
　　　line in d  the angle of which with the subdiagona.1 is a. / i t is enough to deal with lines lying in the quarter of the plane shown on fig. 1  because if the edge lies in the other quarter  then by counting with jtg a|  after the whole process a reflection of the edge to the principial diagonal of d - i. e. its endpoints - gives the real edge./ 
　　　everything stated until now is valid both for pictures with two and for those of more grey levels. now we shall show the determining process of the real edge at first only for pictures with 1 grey levels and after that we shall show how to generalize that idea for pictures with more grey levels. 
　　　in the case with 1 grey levels the sum of the 1's in d divided by 1 shows  roughly spoken  up to what a height d is filled with ones. this means e. g. that i f the edge were horizontal  then the edge could be either the horizontal line at that height  or that reflected to the centre of d /for d could be filled with ones from its bottom or from its top/. but even if the edge were not horizontal  we could know what was the difference between its left and right endpoints' height  so we could determine the edge. if both the left and the right endpoints of this edge 
were inside of d then we had only to determine whether this was the real edge or we had still to reflect i t to the centre of d. 
　　　if one of the endpoints of the above obtained edge were not in d  it could be only by 1  1  or 1 points sticking out of d  because now already the edge we are working with lies in the plane quarter shown on fig. 1. but in these cases it is already very easy to determine the real 
edge. 
　　　for pictures with more grey levels we could use the same method if we knew b and d  because then the number of the points with greater grey level could be approximated by the following expression: 

resp. b+d. after this the above described 
method of finding the edge can be followed in the case with more grey levels as well. 
　　　by this method we have already found either the real edge in f or the same reflected to the centre of d. /see fig.1/ to determine which of them is the real edge  the following table shows a method provided that up to this time we have supposed in the steps that d was filled by the ones /resp. by b+d's/ from its top. the case a means that we have found the real edge while b means that still we have to reflect our edge to the centre of d. 

this method was implemented by a program on the assembly language of a 1 b i t microprogrammed minicomputer of 1 program instructions without any cycles. if there is an edge in d it needs 1 machine 
operations  i . e . about 1 usees. no floating point arithmetics are needed. 
　　　about the reliability of the method rough un.der-estim.ations show that supposing a noise with a binomial distribution with a mean value of 1 error points in a 1 square  the probability of the difference between the edge determined by this method and the real edge being not greater than 1 point anywhere  is over 1 %. 
　　　finally we present three examples for the working of the method. example 1 is the example shown in hueckel's article  1  

1 



graphic science and engineering  1  pp. 
1 /1/ 
 1  holdermann  f.; kazmierczak  h.: preprocessing of grey-scale pictures. computer graphics and image processing  
1  pp. 1 1 
 1  hubel  d.h.; wiesel  t.n.: receptive fields  binocular interaction  and functional architecture of the cat's visual cortex. j. physiol.  1  pp. 
1 /1/ 
 1  hueckel  m.h.: an operator which locates edges in digitized pictures. journal of acm  1  pp. 1 /1/ 
 1  hueckel  m.h.: a local visual operator which recognized edges and lines. journal of acm  1  pp. 1 /1/ 
 1  levine  m.d.: feature extraction: a surveay. proc. ieee  1  pp. 1-
1 /1/ 
 1  martelli  a: edge detection using heuristic search methods. computer graphics and image processing  1.  pp. 
1 /1/ 
 1  montanari  u.: on the optimal detection of curves in noisy pictures. comm. acm  1 pp. 1 /1/ 
 1  mcleod  i.d.g.: comments on  techniques for edge detection . proc. ieee  1  pp. 1 /1*/ 	
 1  nadler  m.: an analog-digital character recognition system. ieee trans  on electronic computers  ec-1  pp. 1-
1 /1/ 
 1  nilsson  n.j.: adaptive pattern recognition : a survey. 1 bionics symp.  dayton  1 
 1  rosenfeld  a.: picture processing by computer. technical report 1  univ. of maryland  computer science centre  college park  maryland /1/ 
 1   rosenfeld  a.: a nonlinear edge detection technique. proc. ieee  1  pp. 
1 /x1/ 
 1  rosenfeld  a.; thurston  m. : edge and curve detection for visual scene ana-
lysis. ieee trans  on computers  c-1  
pp. 1 /1/ 
 1  rosenfeld  a.; thurston  m.; lee  y.: edge and curve detection: further experiments  ieee trans  on computers  c-1  pp. 1 /1/ 
 1  shirai  y.: a step toward context-sensitive recognition of irregular objects. computer graphics and image 
processing  ♀  pp. 1-1 /1/ 
1 


   the analysis and representation of complex line drawings is treated and applied. a method for rating the complexity of drawings is developed and compared with the difficulties of human subjects in memorizing them. the problem of isolating and recognizing these memorized figures embedded in more extensive patterns is then investigated. differing types of embedment are defined by their effect on the original components of the memorized figures. degrees of embedment are calculated for each memorized figure and compared with experimental results. predictions are made for human difficulties in recognizing a simple figure under various conditions of embedment. 
introduction 

   the recognition of a familiar figure embedded in a more extensive pattern is not only an interesting perceptual task  but more nearly recreates the conditions under which most human perception is accomplished. thus  a critical test of any descriptive framework that hopes to simulate human performance is its ability to isolate and recognize figures embedded in a scene. for figures embedded in a complex drawing  isolation of the figure must precede identification. isolating embedded figures varies in difficulty  for both human and automated systems  depending on the extent to which the familiar figure has been incorporated into the drawing. if the component parts of the familiar figure survive intact  isolation of the figure is straightforward. this is a simple elaboration of the figure without a change in its structure. when the components of the familiar figure are merged  wholly or in part  into new components isolation becomes more difficult  sometimes virtually impossible. 
   this paper attempts to employ the methodologies of the pattern perception system  pps  to recognize familiar figures embedded in more complex line patterns. the pps representations are used in an attempt to measure the relative complexity of patterns as indicated by the difficulties of human observers in memorizing their structures and to predict the observer's ability to recognize a familiar figure embedded in an unknown one. a 
more intensive introduction to pps is available in references  1  and  1 . 
analysis of a drawing 

   pps analyzes line drawings into their constituent components or structural units. the analysis is not unique  but may be accomplished in several ways resulting in a different set of components. these components are intended to correspond to the way in which an observer might copy a drawing on paper in steps during which contact between paper and pencil is maintained for each component  with no backtracking or retracing. of course  one must question whether the resulting components make possible a descriptive structure that allows efficient processing of descriptions and corresponds with human structuring inferred from psychological experiments. the specific psychological evidence that served as the motivating influence on the design of pps is treated in  1 . the present paper investigates the suitability of the descriptive structure for identifying embedded figures. 
   the input to pps is a digitized array of 1 and 1 elements obtained from a line drawing by a modified form of the grid intersection method  1 . the trace algorithm proceeds from element to element recording its path as a series of bearings and applies junction heuristics when alternative paths are present. components are open or closed lines that together comprise the drawing and whose interrelationships form the basis for the representation and identification of the drawing. a junction occurs at any point where a choice is available to the trace algorithm  usually at the joining or intersection of two or more components. a free end is the termination point of a component where no junction is present. the types of junctions considered in pps are the t  k  y and x junctions. the drawing of figure 1 has been segmented into five components a  b  c  d and e. a is a quadrilateral inscribed in the quadrilateral b and together making the four k-junctions 1. the component c makes two t-junctions  1 and 1  with b  and c terminates at both. d and e make t-junctions  1  with c and terminate at the free ends 1 and 1. 

   two main objectives commonly influence the decisions taken by the trace algorithm at junctions -continuity and closure. continuity uses the various bearings available at the junction in deciding which components continue and in what direction and which terminate. this decision is based on minimization of bearing change between entering and leaving the junction of one or more of the components. on such a basis the decision at the various types of junctions are easily resolved as shown in figure 1. in separating the intersecting squares into two components the 
continuity criterion would be used  but for the squares touching at the corners continuity would yield one sel f-intersecting component. to 


this strategy is termed closure because it seeks to close the component being traced without regard for bearing changes. 
   a potential factor that may occur in the segmentation of a drawing is the outer boundary  which is a closed line that bounds the entire drawing. human subjects frequently select the outer boundary as a component  1   when one is present  especially if it also satisfies the continuous criterion at junctions or is itself a familiar shape such as a square or circle. these various possibilities are illustrated in the analyses of the drawing in figure 1. 

figure 1. decomposition of a figure by various tracing strategies. 
   closure produces four triangles in  a  with large changes in bearing at the k-junctions. a variant of closure that produces closed shapes bounding every elemental area is known as the elemental area trace  b  and is simply the outer boundary trace with a changed criterion of choice at the junctions. it involves the retracing of some lines and corresponds to outlining every piece of a puzzle. the outer boundary trace produces a square inscribed within another in  c   while continuity will give either  c  or  d  since the total bearing change at the k-junctions is the same in both. since the resulting components of  c  are more familiar or  simpler  figures than those of  d   it is the more likely analysis. the possible strategies at the various junction types are illustrated in figure 1. 

form the structural description. the components isolated by pps may be likened to the units used by human subjects when reproducing a pattern. each stage in the reproduction corresponds to an additional component. the most primitive level of analysis is the constituent features of each component  i.e.  straight lines and segments of varying curvature. the patterns of figure 1 are first segmented into components and these are then subdivided into features. each component can be represented generally by a feature code  which is merely the product of prime numbers that have been assigned to each primitive feature and other properties as follows. 

a square and a triangle would both have a feature code represented by 1 x 1 x 1 = 1 indicating that both are closed  contain straight lines and angles  but gives no information on the number of the respective features  their size or the sequence of their occurrence - thus  equivalent codes for the square and triangle. however  this code is quite sufficient to differentiate the following component from either of the above and to indicate the sole non-shared feature among them is the presence of a convex curve feature  since 1 = 1. then  to test any component for the presence of a feature or property listed above simply divide the code by the primary number 

corresponding to the feature and a zero residue indicates a positive result. the particular format employed is a product of the apl environment in which pps is presently implemented  but the philosophy of having a dual level of description where the initial level reduces considerably the search space for the more exact description is a basic consideration of pps  

structural description of a drawing 

   components resulting from the analysis are grouped into a hierarchy that represents the meaningful structural interrelationships among the components. this structure is flexible enough to allow additional components to be added or old ones removed and can represent a single figure or multiple figures comprising a scene. it also allows efficient processing of descriptions in such operations as matching patterns for correspondence. the construction of the description is treated in this section. 
   hierarchical structures are composed of multiple levels each occupied by one or more components. each component is designated by a hierarchical label  x y   indicating the yth component on the xth hierarchical level. the components are grouped about the first level of the hierarchy and are assigned levels on the basis of their relationship to it. when the first level is occupied by one component it is referred to as the reference component or with multiple components  as the reference group. the simplicity criterion is introduced as an initial guide in choosing a reference. the criterion chooses as reference the component that when acting as reference results in the lowest average hierarchical level for the structural description. a drawing is analyzed into components a  b  c  d  e  f  and g. figure 1 indicates two possible hierarchies. when structured with a as reference it has an average hierarchical level of 1  while the structure with c as reference has 1. the simplicity criterion indicates component a as the reference. although often coinciding with human judgement  it is only 

a guide that is often modified by factors such as the relative sizes and the shapes of the various components. of course  one structure can be translated into other possible variants if need be. if structures are to be compared and classified  a consistent method of representation is necessary. elaborations of a known pattern should not change the basic structure  nor should minor distortions  translations or rotations. these goals are accomplished in pps. the drawing of figure 1 illustrates the occurrence of a reference group  in this case the components a  b and c. they cannot be differentiated by the simplicity criterion and are symmetrically related one to the other. 
   the component or components acting as reference are assigned hierarchical level one. components sharing a junction with level one components are assigned hierarchical level two and  in general  components are assigned a level greater by one than the lowest level component with which they share a junction. this is illustrated in the draw ing of figure 1 which is analyzed into components 

component a is the reference and all components sharing a junction with it are level two  component f is on level three. 
   the structural relations between components are then characterized. the basic relation is between a pair of components that share a junction. the components are referred to as a junction component pair of form  k z   m n   where k and m are hierarchical levels. indices of the two components are given by i and n. the reference forms a junction component pair with each second level component in turn. pairs may also be formed between components on the same hierarchical level. the relation between components indicates the type of junction and the relative relationship of the second member of the pair to the first or  alternatively  of the referent to the referee. the junction code factors which represent these relations are 


　　the general applicability of these classifications to the human task should be readily apparent it is assumed embedment of type  c  is most effective and  a  is relatively ineffective. this 
method is applied to further results of djang to test its validity. the twelve complex figures the type of matching illustrated in figure 1 
shown in figure 1 were presented to observers who 


memorized their structure. each contains one of the formerly memorized simple figures of figure 1 embedded within i t . the occurrence of the simple figures as structural units in the reconstruction of the complex figures by the observers was noted and varied widely from figure to figure. these results prompted djang to conclude that  ... past experience plays an important role in our visual organization . the evidence indicated that the difficulty of recognizing embedded figures was related to complexity of both the masked-figure and the figure containing i t   although the relation was not explicit enough to interpret the results of the experiment or predict the results of further experiments. djang understood that the results depended on the  ... relative ease of dissolving the different test-figures into the simplefigures and the parts making up the camouflage . table ii indicates the ability of observers to recognize the embedded figure in each of the 
and defined in the previous section cannot be applied without modification when a figure is embedded by types  b  and  c  where some or all of the original components may have been incorporated into new components. at this point pps  like the human observer  adopts a search heuristic in which the complex pattern is taken apart and reconstructed in a variety of ways. pps tries the various trace strategies  yielding differing component sets  and attempts to spot a likely reference component from which to construct the embedded figure. 

condition  a  requires equality of feature codes between corresponding rows of the descriptions  while condition  b  requires equivalence in linkage fields between levels l-  and z. condition  c  is the junction equivalence for the two types of row elements. for topological equivalence condition  a  is relaxed to the presence of feature factors 1 and 1. for identity the hash coded features must be compared in each component for type  number  order and size. clearly the lesser degrees of correspondence are least subject to transformation. topologically equivalent descriptions may be rotated  stretched  bent  etc. and remain topologically equivalent as long as the junctions remain undisturbed. figure 1 illustrates three types of correspondence that may occur between figures. 

   the above matching algorithm is used as the basis of scene analysis and the isolation of embedded figures of type  a  as defined in the next section. the algorithm can be illustrated by reference to the matching components in the two descriptions of fig. 1. let the description of the pattern of fig. 1 be 1  and that of fig. 1 be 
d'  then for 	i - 1  
embedded figures - their isolation and recognition 

   the description ♀ of a line drawing may be composed of one or more separable figures. a description containing multiple figures is referred to as a scene. the identification of the constituent figures of a scene is naturally a more difficult problem than identifying an isolated figure. it involves both the segmentation of the scene into separate patterns and their assignment to pattern classes. normally this segmentation must be accomplished before classification can begin. however  pps performs both the separation and classification simultaneously by using the analysis-by-synthesis approach. that is  an identifiable figure is synthesized or constructed from components contained in d  until a definite classification is made - this is the first step in the analysis of d into its constituent figures. thus  the isolation is accomplished by a synthesis or clustering  of available components to construct pattern classes in the universe of pps. this synthesis can begin at the reference component of other  nucleation  components that display the properties of a likely foundation. 
   while a scene implies the presence of multiple patterns  an embedded figure indicates a known figure  rhidden  or camouflaged in a more complex pattern. this section investigates the ability of pps to recognize embedded figures and compares this to the ability of humans in similar tasks. a method  based on pps  is proposed for rating the difficulties involved in isolating embedded figures. 
   the ability of pps to extract or identify a familiar embedded or simple figure within a complex figure depends on the type of embedding. these degrees of  embedment  are distinguished by their effects on the original components of the simple figure and may occur simultaneously. the difficulty of achieving the isolation and identification of an embedded figure in pps is dependent on the survival of the components of the embedded figure. if the components remain the same after embedment  then isolation is relatively straightforward . 
a  simple figure given additional components 
1 without affecting the integrity of the original components  
contribution to complexity is the number of features contained in the figure and the number of hierarchical levels needed to structure the figure. these measures have been combined into  number of features x i  where n is the greatest 
hierarchical level. thus  features at the reference level contribute least to complexity. the actual pps structures used with those given by djang as the dominant organization used by observers  e.g.  figures 1  1  1  1  1 were organized by giving the outer boundary and filling in the details. the type of intersection also contributes to the complexity by allowing alternate organizations  self-intersection  t-junctions of a component with itself and y-junctions counting more heavily toward greater complexity. the third measure is the number of elemental areas or separate  pieces  of the pattern. these three measures are computed and combined as shown in table 1. remembering that the table is based on 
greater than or equal to three  the above scheme or a similar one would be able to predict complexity in controlled situations such as presented in the next section. 
identification by comparison of descriptions 

   this section formalizes the comparison of two descriptions and the various degrees of correspondence that may exist between them. the next section will apply this method to embedded figures 
   in matching descriptions to determine their correspondence in terms of structure and features  several degrees of correspondence are utilized  ranging from identity to topological equivalence. pattern matching in pps begins at the reference component and proceeds to greater levels of the hierarchy. the following makes this more definite 
d  the description of a pattern. 


1 


	1 	1 
where the entries for g and g simply restate the fact that  1  and  1  have no higher level referents. such components are called terminators an array consisting of each component acting in turn as referee with all of its referents listed  including feature and junction codes  forms the basis for the description of a drawing. when a referee has multiple referents  they are listed in the sequence they are encountered as the referee is traced  with the stipulation that closed components are traced in a clockwise manner. this is illustrated by the drawing of figure 1. this 

simply establishes some rule of representation to standardize processing and simplify comparisons. the above example indicates that the description of a closed referee with multiple referents may begin with various component pairs while retaining the role of an equivalent description. pps automatically sequences the referents of one of the descriptions when two drawings are being compared until a matching sequence occurs. this is necessary because component  1  of one drawing may correspond to component  1  of a matching drawing. 
   in addition to the feature code description of each component a more detailed description of every feature contained in the component  in sequence  is necessary. the feature code is simply an abridged version of this description. in the apl implementation of pps  these descriptions are hash coded and the indices are stored in column seven of the array. this seven column array is known as the description  d . the detailed feature description stored as hash code is required only when feature and junction code screenings have proved affirmative. thus  general characteristics are matched and used to eliminate non-corresponding patterns before a detailed match is attempted. only an identity match requires inspection of the hash coded features  while for topological equivalence the feature and junction codes are sufficient. 
   in figure 1 the drawing of figure 1 is given additional components and the two descriptions are shown with the matching indicated. this is the basis of detecting embedded patterns or simply familiar subpatterns. pps performs both the separation and classification simultaneously by using the analysis-by-synthesis approach. that is  an identifiable pattern is synthesized or constructed from components contained in the description until a definite correspondence is established. nonmatching components are simply passed over in the sequential search for matching components. this process is given a more formal basis in the following section. 
   the complexity of a pattern bears some relation to the number of individual features it contains  the number of components that comprise it and the number of different ways in which it can be organized. it is usually measured by observing the relative difficulties encountered by human subjects in memorizing and reproducing various patterns. the experiments by djang  1  will be used to illustrate the application of pps to interpretation of such measurements. 
   attempts to quantify complexity are made difficult by the possibility that the figure  or part of i t   corresponds more or less closely to a previously known or familiar figure. this usually reduces the complexity of a figure  although not always  1 . the observer will often try to find something familiar in a novel pattern to facilitate structuring and different observers will see different things. the initial analysis and representation of pps are based on a novel pattern assumption although the recognition of a known pattern class can cause a simplified restructuring of the representation. experiments by djang involved the presentation of simple figures which were memorized by the subjects and which subsequently occurred embedded in more complex figures. 

figure 1. description of fig. 1 is matched with the description of an elaborated figure containing i t . the matching components are indicated. 
   the twelve simple figures used by djang  along with their associated nonsense names  are shown in figure 1. table 1 indicates the complexity of each figure as measured by the average number of trials needed to be able to accurately reproduce the figure. let us see how a pps view of complexity will rank these figures. the first 

1 
1. djang  s. the role of past experience in the visual perception of masked forms. journal of experimental psychology  1  1  1. 
1. rosenfeld  a. and lee  y.h. a clustering 
heuristic for line-drawing analysis. ieee transactions on computers  august  1  1. 
   a distinction is required between  1  perceiving an embedded figure and using it as a natural structural unit  as was intended in the experiments of djang   and  1  deliberate search to isolate possible embedded figures. the fourth example under type  c  embedment will readily be admitted to contain the simpler figure  but perception of the embedded figure as a visual unit is highly unlikely. performance of humans in such tasks is highly variable often depending on their initial organization of the pattern which then becomes difficult to alter. 
