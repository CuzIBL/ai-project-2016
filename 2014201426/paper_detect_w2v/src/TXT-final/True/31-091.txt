 
in multiagent systems  interaction protocols are usually enforced by law. enforcement is problematic among computational agents  because they may operate under incomplete or different laws  the laws may not be uniformly enforced  and the agents can vanish easily. this paper presents an enforcement free method for carrying out exchanges so that both agents are motivated to abide to their contract. this is achieved by splitting the exchanged goods into partial exchanges so that at each step  both agents benefit more from the future of the exchange than from vanishing with the goods or payment. the conditions for such exchange are presented in general  and the maximum deliveries and payments-for any point in the exchange-are solved for. similar analysis is carried out for the case  where the agents' current actions affect their future contracts. strategic delaying is also discussed. the paper presents a fast algorithm that will find a sequence of independent partial deliveries in a way that enables unenforced exchange if such a sequence exists. this problem cannot be solved in polynomial time if the partial deliveries are interdependent. finally  the paper shows that the unenforced exchange scheme hinders unfair renegotiation.1 
1 	introduction 
in cooperative distributed problem solving  durfee et al  1   the system designer imposes an interaction protocol and a strategy  a mapping from state history to actions; a way to use the protocol  for each agent. in multiagent systems  sandholm and lesser  1c; 1a; 
1b; rosenschein and zlotkin  1: durfee et al.  1; kraus et a/.  1; wellman  1   the agents are provided with an interaction protocol  but each agent may choose its own strategy. this allows the agents to be constructed by separate designers and/or represent 
supported by arpa contract n1-j-1. t. 
sandholm also supported by the finnish culture foundation  honkanen foundation  and ella and george ehrnrooth foundation. the content does not necessarily reflect the position or the policy of the government and no official endorsement should be inferred. an early version of this paper appeared in a workshop  sandholm and lesser  1 . 
distributed al 
different real world parties. agents in such systems often act based on self-interest  and the protocols have to be constructed accordingly. an example interaction protocol is the auction  where some agents bid to take responsibility for a task  which is awarded to the jpwest price bidder. the bids are binding: if an agent makes a bid and the task is awarded to it  it must take responsibility for the task at that price. among real world agents  this protocol is enforced by law. 
¡¡such enforced protocols are problematic when used among computational agents. first  there may be a lack of laws for interactions of computational agents  or the agents may be governed by different laws-e.g. sited in different countries. it may also be the case that the laws are not strictly enforced or that enforcing them  e.g. by litigation  is impractically expensive. we would like the agents' interactions to work properly independent of fluctuations in enforcement. secondly  a computational agent may vanish at any point in time  e.g. by killing its own process. thus  the laws cannot be enforced unless the terminated agent represented some real world party and the connection between the agent and the real world party can be traced. for example  the telescript technology  general magic  inc.  1  follows the approach of strictly trying to tie each agent to its real world party. on the contrary  we analyze exchanges among more autonomous agents and study possibilities of exchange without enforcement  e.g. with unknown real world parties or no litigation possibility . in cases where this type of exchange is possible  it is clearly preferable to the strictly enforced mode of exchange due to savings in enforcement costs and lack of enforcement uncertainty. 
portant compared to the future has been suggested for example in  axelrod  1   
¡¡we propose an exchange strategy manager module to be added to each agent's architecture. this module is potentially different for each agent. its role is to schedule the agent's deliveries  or payments  in such a way that the opponent is not motivated to defect at any point in the exchange. this is in the agent's self-interest. the exchange strategy manager also provides the agent's negotiator module with information on whether a certain proposed contract can be carried out safely. unless protocol enforcement is guaranteed  the negotiator should only agree to contracts that can be executed so that the opponent is not motivated to defect at any point of the exchange. automated negotiation has been mostly studied with respect to ex ante rationality: what contracts seem desirable to the agents before they are carried out  sandholm and lesser  1b; 1c; 
1a; sandholm  1; rosenschein and zlotkin  1; kraus et a/.  1; wellman  1; durfee et a/.  1 . we suggest that contracts should also fulfill the condition of ex post rationality: abiding to the contract should be desirable to the agents at each step of the carrying out 
of the contract. ex post conditions were studied in multiagent planning without payments in  brainov  1 . 
¡¡this paper is organized as follows. section 1 handles one exchange in isolation. conditions for safe exchange are derived and an inherent restriction concerning the completion of the exchange is identified. section 1 takes the agents' future transactions into account in describing safe exchange in order to solve the completion problem. the role of time in an exchange is discussed in section 1. section 1 analyses the case  where the delivering order of ¡¡the fulfillment of a mutual contract can be viewed as one agent delivering and the other agent paying. we propose a method for carrying out such an exchange without enforcement. the exchange is managed so that for both agents-supplier and demander-at any point in the exchange  the future gains from carrying out the rest of the exchange  cooperating according to the contract  are larger than the gains from defecting. defection is equivalent to prematurely terminating the exchange by vanishing. for example  defection may be beneficial to a demander agent if the supplier agent has delivered much more than what the demander has yet paid for. by intelligently splitting the exchange into smaller portions  the agents can avoid situations where at least one of them is motivated to defect. we will call a sequence of deliveries and payments safe if neither agent is motivated to defect at any point in the exchange. the basic idea of enhancing cooperation by making the present less imindependent goods can be varied. a quadratic sequencing algorithm is presented that finds a safe sequence if one exists. section 1 studies sequencing of interdependent goods. section 1 describes the advantages of safe exchange with respect to unfair renegotiation  and section 1 concludes. 
1 	exchanging goods and payments 
our model analyzes exchanging goods-information  computation services  or other types-for payments. the exchange proceeds on two axis: the portion of goods of the contract delivered by exchange step n is called xn €  1   and the cumulative payment so far is pn g  1 pcontr . pcontr is the total payment specified in the contract. the agents can make simultaneous moves and they observe the other agent's moves so far. they value the goods x according to nondecreasing functions that are in equivalent units of payment p. the supplier's value function v  x  describes how much cost the supplier incurs by generating and delivering x. the demander's value function vd x  describes what the goods x are worth to the demander. trivially  vs  1  = vd 1  = 1. 
¡¡at any point in an exchange  an agent has the options of defecting or cooperating. defecting gives no added gains that have not already been received  when already accounting for the opponent's move on the current step of the exchange  and no added costs  so its net benefit is 1. therefore a net benefit maximizing supplier agent figure 1: left: example of safe exchange with continuous goods. middle: safe exchange of discrete goods possible. right: safe exchange of discrete goods not possible. 
¡¡if the agents do not know each other's value functions  they can use bounds they know. the supplier is safe using an upper bound for pmin x   i.e. a lower bound for vd l  and an upper bound for vd x . the deman-
¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡max der is safe using a lower bound for p  x . although the agents are safe using these bounds  even possible exchanges are disabled if the bounds are too far off. 
¡¡the next sections present an equilibrium study of when safe exchange can actually occur. the analysis is slightly different for discrete and continuous goods. 
1 	discrete goods 
discrete goods are goods that are inherently split into atomic chunks. such chunks cannot be further split  and we assume in this section that the delivery order of the chunks is fixed. for example in the traconet  transportation cooperation net  multiagent system  sandholm  1   agents representing dispatch centers negotiated over who's vehicles should transport 
   1  if equality holds  the agent is indifferent between cooperating and defecting. throughout this paper we assume that indifferent agents will cooperate. note also that throughout the paper we analyze only remaining payoffs  not total payoffs  because the already incurred payoffs are constant with respect to the remaining game. 
sandholm and lesser 


distributed al 


sandh1lm and lesser 


distributed al 


sandholm and lesser 

distributed al 

with continuous goods it can be carried out arbitrarily close to completion even if this is not the case. considering defection's adverse effect on future negotiations often enables completing the exchange. 
¡¡under the presented conditions on their discount functions  agents are motivated to carry out isolated exchanges immediately. time discounts reduce the viability of taking advantage of non-isolated exchange. in such cases  immediate moves can be forced by deadlines or lateness penalties. 
¡¡some domains allow goods to be delivered in different orders. the presented quadratic algorithm finds a safe ordering for independent goods if one exists. the problem cannot be solved in polynomial time for interdependent goods. finally  we showed that safe exchange helps prevent unfair renegotiation. 
¡¡in this paper we looked at totally safe exchanges  where each agent knew its opponent's value function  discount functions  and defection penalty  i.e. cost of making reputation worse . we explained how agents could use bounds for these if they are not exactly known. if the bounds were too far off  even possible exchanges were disabled. often it is the case that agents can estimate a distribution for each of these  although strict bounds are not available or they are too far off. using these distributions the agents can take a calculated risk of making moves that are unsafe with a certain probability. this approach of using distributions is also useful to the agent in trying to model the possibility of changes in the opponent's value function  discount functions or defection penalty that happen during the exchange due to the opponent interacting in its environment  getting other offers  contracts etc. . 
¡¡another approach is to try to bound ones losses by making the partial exchanges small enough so that even if the opponent defects  the loss will be within a bound. in both the probabilistic risk method and the loss bounding method there is a tradeoff between making the exchange safer by using small partial exchanges and minimizing partitioning costs  e.g. physical per part delivery costs  by using large ones. finally  either a probabilistic approach or a loss bounding approach can be used to address the risk of the opponent accidentally defecting- e.g. loosing contact due to a technical fault. 
acknowledgments 
we thank prof. neil immerman  umass comp sci  for the backward pass idea for algorithm 1  and prof. herb gintis  umass economics  for game theoretic comments. 
