
in this work  we define a new framework in order to improve the knowledge representation power of answer set programming paradigm. our proposal is to use notions from possibility theory to extend the stable model semantics by taking into account a certainty level  expressed in terms of necessity measure  on each rule of a normal logic program. first of all  we introduce possibilistic definite logic programs and show how to compute the conclusions of such programs both in syntactic and semantic ways. the syntactic handling is done by help of a fix-point operator  the semantic part relies on a possibility distribution on all sets of atoms and we show that the two approaches are equivalent. in a second part  we define what is a possibilistic stable model for a normal logic program  with default negation. again  we define a possibility distribution allowing to determine the stable models.
1 introduction
answer set programming  asp  is an appropriate formalism to represent various problems issued from artificial intelligence and arising when available information is incomplete as in non-monotonic reasoning  planning  diagnosis...from a global view  asp is a general paradigm covering different declarative semantics for different kinds of logic programs. one is the stable model semantics  gelfond and lifschitz  1  for definite logic programs augmented with default negation. in asp  information is encoded by logical rules and solutions are obtained as sets of models. each model is a minimal set of atoms representing sure informations  some facts  and deductions obtained by applying by default some rules. so  conclusions rely on present and absent information  they form a coherent set of hypotheses and represent a rational view on the world described by the rules. thus  in whole generality there is not a unique set of conclusions but maybe many ones and each conclusion is no longer absolutely sure but only plausible and more or less certain.
¡¡possibilistic logic  dubois et al.  1  is issued from zadeh's possibility theory  zadeh  1   which offers a framework for representation of states of partial ignorance owing to the use of a dual pair of possibility and necessity measures. possibility theory may be quantitative or qualitative  dubois and prade  1  according to the range of these measures which may be the real interval  1   or a finite linearly ordered scale as well. possibilistic logic provides a sound and complete machinery for handling qualitative uncertainty with respect to a semantics expressed by means of possibility distributions which rank-order the possible interpretations. let us mention that in possibilistic logic we deal with uncertainty by means of classical 1-valued interpretations that can be more or less certain.
¡¡the aim of our work is to introduce the concepts of possibilistic logic into asp in order to deal with uncertainty. this can be illustrated by the following example of a medical treatment in which a patient is suffering from two diseases. each disease can be cured by one drug but the two drugs are incompatible. the program p = {dr1 ¡û di1 not dr1.  dr1 ¡û di1 not dr1.  c1 ¡û dr1 di1.  c1 ¡û dr1 di1.  di1.  di1.} means that the drug dr1  resp. dr1  is given to a patient if he suffers from the disease di1  resp. di1  except if he takes the drug dr1  resp. dr1 ; if a patient suffering from disease di1  resp. di1  takes the drug dr1  resp. dr1  then he is cured c1  resp. c1  of his disease; the patient suffers from the diseases di1 and di1. from this program  two stable models {di1 di1 dr1 c1} and {di1 di1 dr1 c1} are obtained. however  it seems interesting for a doctor to evaluate the certainty of the efficiency of the medical treatment. so  it seems natural to combine the certainty degrees of rules allowing to determine the level of certainty of the conclusions.
¡¡this section continues with a theoretical background on possibilistic logic and asp. section 1 introduces possibilistic definite logic programs and their possibilistic models. section 1 extends our approach to possibilistic stable models for logic programs with default negation. last  section 1 links our work to some others in the same area and gives some perspectives.
possibilistic logic. possibilistic logic  in the necessityvalued case  handles pairs of the form  p ¦Á  where p is a classical logic formula and ¦Á is an element of a totally ordered set. the pair  p ¦Á  expresses that the formula p is certain at least to the level ¦Á. a possibilistic base is denoted ¦² = { pi ¦Ái }i¡Êi. formulas with degree 1 are not explicitly represented in the knowledge base since only beliefs which are somewhat accepted are useful. the higher is the weight  the more certain is the formula. this degree ¦Á is evaluated by a necessity measure and it is not a probability. thus  numerical values are not an absolute evaluation  like it is in probability theory  but induce a certainty  or confidence  scale. moreover  let us note that these values are determined by the expert providing the knowledge base or they are automatically given if  as we can imagine  the rules and their confidence degrees result from a knowledge discovery process.
¡¡the basic element of possibility theory is the possibility distribution ¦Ð which is a mapping from    the interpretation set  to the interval  1 . ¦Ð ¦Ø  represents the degree of compatibility of the interpretation ¦Ø with the available information  or beliefs  about the real world. by convention  ¦Ð ¦Ø  = 1 means that ¦Ø is impossible  and ¦Ð ¦Ø  = 1 means that nothing prevents ¦Ø from being the real world  ¦Ø is consistent with all the available beliefs  it is a model of ¦² . when ¦Ð ¦Ø    ¦Ð ¦Ø1   ¦Ø is a preferred candidate to ¦Ø1 for being the real state of the world. from a possibility distribution ¦Ð  we can define two different ways of rank-ordering formulas of the language. this is obtained using two mappings grading respectively the possibility and the certainty of a formula p: ¦° p  = max{¦Ð ¦Ø  | ¦Ø |= p} is the possibility  or consistency  degree which evaluates the extent to which p is consistent with the available beliefs expressed by ¦Ð  zadeh  1 ; n p  = 1 ¦°  p  = 1 max{¦Ð ¦Ø  | ¦Ø 1|= p} is the necessity  or certainty  degree which evaluates the extent to which p is entailed by the available beliefs.
¡¡moreover  given a base ¦²  only the possibility distributions respecting   p ¦Á  ¡Ê ¦²  n p  ¡Ý ¦Á are significant and called compatible. a possibility distribution ¦Ð is said to be the least specific one between all compatible distributions if there is no possibility distribution ¦Ð1  with ¦Ð1= ¦Ð  compatible with ¦² such that  ¦Ø ¦Ð1 ¦Ø  ¡Ý ¦Ð ¦Ø . the least specific possibility distribution ¦Ð¦² always exists  dubois et al.  1  and is defined by: if ¦Ø is a model of ¦²  then ¦Ð¦² ¦Ø  = 1 else ¦Ð¦² ¦Ø  = 1   max{¦Á | ¦Ø 1|= p  p ¦Á  ¡Ê ¦²}.
stable model semantics. asp is concerned by different kinds of logic programs and different semantics. in our work we deal with normal logic programs  interpreted by stable model semantics  gelfond and lifschitz  1 . we consider given a non empty set of atoms x that determines the language of the programs1. a normal logic program is a set of rules of the form: c ¡û a1  ...  an  not b1  ...  not bm. where n ¡Ý 1  m ¡Ý 1  {a1 ... an b1 ... bm c}   x. a term like not b is called a default negation. the intuitive meaning of such a rule is:  if you have all the ai's and no bj's then you can conclude c . for such a rule r we use the following notations  extended to a rule set as usual : the positive prerequisites of r  body+ r  = {a1  ...  an}; the negative prerequisites of r  body  r  = {b1  ...  bm}; the conclusion of r  head r  = c and the positive projection of r  r+ = head r  ¡û body+ r . if a program p does not contain any default negation  ie: body  p  =     then p is a definite logic program and it has one minimal herbrand model cn p . the reduct px of a program p wrt. an atom set x is the definite logic program defined by : px = {r+ | r ¡Ê p  body  r ¡Éx =  } and it is the core of the definition of a stable model.
definition 1  gelfond and lifschitz  1  let p be a normal logic program and s an atom set. s is a stable model of p if and only if s = cn ps .
¡¡note that a program may have one or many stable models or not at all. in this last case we say that the program is inconsistent  otherwise it is consistent. when an atom belongs at least to one stable model of p it is called a credulous consequence of p and when it belongs to every stable model of p  it is called a skeptical consequence of p.
¡¡let a be an atom set  r be a rule and p be a program  definite or normal . we say that r is applicable in a if body+ r    a and we denote app p a  the subset of p of its applicable rules in a. a satisfies r  or r is satisfied by a   denoted a |= r  if r is applicable in a   head r  ¡Ê a. a is closed under p if  r ¡Ê p a |= r. p is grounded if it can be ordered as the sequence hr1 ... rni such that  i 1 ¡Ü i ¡Ü n ri ¡Ê app p head {r1 ... ri 1}  . cn p   the least  herbrand  model of a definite logic program p  is the smallest atom set closed under p and it can be computed as the least fix-point of the following consequence operator tp : 1x ¡ú 1x such that: tp a  = head app p a  .
¡¡by this way  we can establish the next result that clarifies the links between the least model a of a program p and the rules producing it. we see that a is underpinned by a set of applicable rules  app p a   that satisfies a stability condition and that is grounded. these two features will be used in the sequel to define the core of our work: a possibility distribution over atom sets induced by a definite logic program.
lemma 1 let p be a definite logic program and a be an atom set 
a is the leasthead app p a  
herbrand model of p	app p a  is grounded
1 possibilistic definite logic programs
we consider given a finite set of atoms x and a finite  totally ordered set of necessity values n   1 . then  a possibilistic atom is a pair p =  x ¦Á  ¡Ê x ¡Án. we denote by p  = x the classical projection of p and by n p  = ¦Á its necessity degree. these notations can also be extended to a possibilistic atom set  p.a.s.  a that is a set of possibilistic atoms where every atom x occurs at most one time in a.
¡¡a possibilistic definite logic program  p.d.l.p.  is a set of possibilistic rules of the form: r =  c ¡û a1  ...  an.   ¦Á  n ¡Ý 1 {a1  ...  an  c}   x ¦Á ¡Ê n. the classical projection of the possibilistic rule is r  = c ¡û a1  ...  an. n r  = ¦Á is a necessity degree representing the certainty level of the information described by r. if r is a set of possibilistic rules  then r  = {r  | r ¡Ê r} is the definite logic program obtained from p by forgetting all the necessity values.
¡¡let us recall that a possibilistic logic base is a compact representation of the possibility distribution defined on interpretations representing the information. indeed  the treatment of the base in a syntactic way  in terms of formulas and necessity degrees  leads to the same results as the treatment done in a semantic way  in terms of interpretations and possibility distribution . in our framework  the same situation occurs as it is shown in the next two subsections. firstly  we define a semantic handling of a program that is defined in term of a possibility distribution over all atom sets. secondly  we provide a syntactic deduction process that leads to the same results as the ones given by the possibility distribution.
1 model theory for possibilistic definite logic programs
from a possibilistic definite logic program p  we can determine  as it is done in possibilistic logic  some possibility distributions defined on all the sets in 1x and that are compatible with p. let us note that there is a correspondence between interpretations in propositional logic and atom sets in asp. like in possibilistic logic  the possibility degree of an atom set is determined by the necessity degrees of the rules of the program that are not satisfied by this set. the satisfiability of a rule r is based on its applicability wrt. an atom set a  so a 1|= r iff body+ r    a and head r  ¡Ê1 a  see section 1 . but  we have to notice that the contradiction of a rule is not enough to determine the possibility degree of a set since  in asp  it is important to take into account the groundedness and stability notions  see lemma 1 . firstly  the set a = {a b} satisfies every rule in p = {a ¡û b.  b ¡û a.}  but it is not the least model of p because the groundedness is not satisfied. secondly  the set a1 = {a b d} satisfies every rule in p1 = {a. b ¡û a. d ¡û c.} but it is not the least model of p1 because d can not be produced by any rule from p1 applicable in a1. in these two cases  the possibility of a and a1 must be 1 since they can not be the least model at all  even if they satisfy every rule in their respective associated programs.
definition 1 let p be a p.d.l.p. and ¦Ð : 1x ¡ú  1  be a possibility distribution. ¦Ð is compatible with p if
  a 1  head app p  a     ¦Ð a  = 1
    app p  a  is not grounded   ¦Ð a  = 1
a is the least model of p    ¦Ð a  = 1
    otherwise ¦Ð a  ¡Ü 1   maxr¡Êp {n r  | a 1|= r }
¡¡the necessity degree attached to each rule defines only a lower bound  and not an exact value  of the certainty of the rule. so  as recalled in section 1  many possibility distributions are compatible with these degrees. but  we are only interested by the least informative one  that is the least specific one  whose characterization is given below.
proposition 1 let p be a p.d.l.p. then ¦Ðp : 1x ¡ú  1  defined by
1. if a 1  head app p  a   then ¦Ðp a  = 1
1. if app p  a  is not grounded then ¦Ðp a  = 1
1. otherwise
  if  r ¡Ê p a |= r  then ¦Ðp a  = 1
  otherwise 1 ¡Ü ¦Ðp a    1 and
	a	{	| a 1|	 }
is the least specific possibility distribution.
¡¡the definition of ¦Ðp ensures that it is compatible with p. the third item ranks the sets which may be solutions with respect to the weights of the falsified rules.
proposition 1 let p be a p.d.l.p. and a   x be an atom set  then
1. ¦Ðp a  = 1    a = cn p  
1. a   cn p     ¦Ðp a  = 1
1. cn p   1=     ¦Ðp    = 1   max{n r  |   1|= r }
r¡Êp
¡¡now  we can give the definition of inference that is  in the framework of asp  the evaluation of the necessity degree of each atom of the universe.
definition 1 let p be a p.d.l.p. and ¦Ðp the least specific possibility distribution compatible with p  we define the two dual possibility and necessity measures such that:
¦°p x  = max{¦Ðp a  | x ¡Ê a}
¡¡¡¡¡¡¡¡¡¡¡¡a¡Ê1x np x  = 1   max{¦Ðp a  | x 1¡Ê a}
a¡Ê1x
¡¡¦°p x  gives the level of consistency of x with respect to the p.d.l.p. p and np x  evaluates the level at which x is inferred from the p.d.l.p. p. this is closely related to the definitions of possibilistic logic. for instance  whenever an atom x belongs to the least model of the classical program its possibility is total.
proposition 1 let p be a p.d.l.p.  cn p   the least model of p  and x ¡Ê x then :
1. x ¡Ê cn p     ¦°p x  = 1 and x 1¡Ê cn p     ¦°p x  = 1
1. x 1¡Ê cn p      np x  = 1
1. x ¡Ê cn p    
	np x  =	min	{max{n r  | a 1|= r } | x 1¡Ê a}
a cn p   r¡Êp
1. let p1 be a p.d.l.p.  p   p1   np x  ¡Ü np1 x .
¡¡furthermore  the necessity measure allows us to introduce the following definition of a possibilistic model of a p.d.l.p.
definition 1 let p be a possibilistic definite logic program  then the set
     ¦°m p  = { x np x   | x ¡Ê x np x    1} is its possibilistic model.
proposition 1 let p be a p.d.l.p. then :  ¦°m p    is the least model of p .
example 1 let us take the following program p = { a. 1    b ¡û a. 1    d ¡û a. 1    d ¡û c. 1 }.
the least specific possibility distribution induced by p is null for every atom set included in {a b c d} except for ¦Ðp    = 1  ¦Ðp {a}  = 1  ¦Ðp {a b} =1  ¦Ðp {a d} =1 and ¦Ðp {a b d} =1  the least model of p  . so  we can compute the possibility of each atom: ¦°p a  = ¦°p b  = ¦°p d  = 1 and ¦°p c  = 1 and its certainty in term of necessity degree: np a  = 1  np b  = 1  np c  = 1  np d  = 1. thus  ¦°m p  = { a 1   b 1   d 1 } is the possibilistic model of p.
1 fix-point theory for possibilistic definite logic programs
definitions exposed in this subsection are closely related to what can be found in  dubois et al.  1 . but here  we adopt an asp point of view and thus we use atom sets instead of classical interpretations since the underlying possibility distribution is defined on atom sets.
definition 1 consider a = 1x¡Án the finite set of all p.a.s. induced by x and n.  a b ¡Ê a  we define:
a	b	{	{¦Á ¦Â}	a  x ¦Â	b}
proposition 1 ha vi is a complete lattice.
definition 1 let r =  c ¡û a1  ...  an. ¦Á  be a possibilistic rule and a be a p.a.s. 
  r is ¦Á-applicable in a if body r   =  
  r is ¦Â-applicable in a if ¦Â = min{¦Á ¦Á1 ... ¦Án} 
{ a1 ¦Á1  ...  an ¦Án }   a  1
  r is 1-applicable otherwise.
and  for a given p.d.l.p. p and an atom x  app p a x  =
{r ¡Ê p | head r   = x r is ¦Í-applicable in a ¦Í   1}
¡¡the applicability degree of a rule r captures the certainty of the inference process realized when r is applied wrt. a p.a.s. a. if the body of r is empty  then r is applicable with its own certainty. if the body of r is not verified  not satisfied by a   then r is not at all applicable. otherwise  the applicability level of r depends on the certainty level of the propositions inducing its groundedness and on its own necessity degree. firstly  the necessity degree of a conjunction  the rule body  is the minimal value of the necessity values of subformulae  atoms  involved in it. secondly  the certainty of a rule application is the minimal value between the rule certainty and the certainty of the rule body. this approach is similar to the resolution principle in possibilistic logic  dubois et al.  1 .
definition 1 let p be a p.d.l.p. and a be a possibilistic atom set. the immediate possibilistic consequence operator
¦°tp maps a p.a.s. to another one by this way: ¦°tp a  =  
then the iterated operator	is defined by
	¦°tp1 =  	and	¦°tp	= ¦°tp ¦°tpn   n ¡Ý 1	.
¡¡here  we can remark that if one conclusion is obtained by different rules  its certainty is equal to the greatest certainty with which it is obtained in each case  operator max . again  it is in accordance with possibilistic resolution principle.
proposition 1 let p be a p.d.l.p.  then ¦°tp has a least fix-point tn¡Ý1¦°tpn    that we called the set of possibilistic consequences of p and we denote it by ¦°cn p .
example 1 let p be the p.d.l.p. of example 1  then ¦°tp1    =    ¦°tp1    = { a 1 } 
¦°tp1   	=	{ a 1   b 1   d 1 } 	¦°tp1   	=
.	so 
theorem 1 let p be a p.d.l.p.  then ¦°cn p  = ¦°m p .
as illustrated and formalized above  our operator ¦°tp can be used to compute the possibilistic model of a p.d.l.p. this result shows the equivalence between the syntactic and semantic approaches in our framework  whereas in  dubois et al.  1  only a syntactic treatment of a p.d.l.p. is proposed.
1 possibilistic normal logic programs
1 possibilistic normal logic programs and possibilistic stable models
here  we extend our proposal to non-monotonic reasoning by allowing default negation in programs and we formalize the notion of possibilistic stable model. it extends the stable model semantics by taking into account the necessity degree in the rules of a given possibilistic normal logic program  p.n.l.p. . such a program is a finite set of rules of the form :
 c ¡û a1  ...  an  not b1  ...  not bm.   ¦Á  n ¡Ý 1 m ¡Ý 1 for which we just have to precise that  i bi ¡Ê x  all the rest being the same as for a p.d.l.p.  see the begining of section 1 .
¡¡as in the classical case without necessity value  we need to define what is the reduction of a program before introducing the possibilistic stable model semantics.
definition 1 let p be a p.n.l.p. and a be an atom set. the possibilistic reduct of p wrt. a is the p.d.l.p. pa = {  r  + n r   | r ¡Ê p body  r  ¡É a =  }.
definition 1 let p be a p.n.l.p. and s a p.a.s. s is a possibilistic stable model of p if and only if s = ¦°cn p s   .
¡¡by analogy with classical normal logic programs  without necessity values attached to rules  we say that a p.n.l.p. p is consistent if p has at least one possibilistic stable model. otherwise p is said to be inconsistent. furthermore when a possibilistic atom belongs at least to one possibilistic stable model of p it is called a credulous possibilistic consequence of p and when it belongs to every possibilistic stable model of p  it is called a skeptical possibilistic consequence of p.
example 1 we are now able to represent the example of the introductory section with some levels of certainty by p = { dr1 ¡û di1 not dr1. 1   dr1 ¡û di1 not dr1. 1    c1 ¡û dr1 di1. 1   c1 ¡û dr1 di1. 1   di1. 1   di1. 1 }. the two first rules express that for each disease we have an appropriate drug  these two drugs are incompatible  but their appropriateness is fully certain. the third  resp. fourth  rule expresses that drug dr1  resp. dr1  has an efficiency quasi certain  resp little certain  for the disease di1  resp di1 . the two last rules  some observations  represent that the diagnosis of the disease di1  resp. di1  is quasi certain  resp. almost certain . then  the two possibilistic stable models of p are { di1.1   di1.1   dr1.1   c1.1 } and { di1.1   di1.1   dr1.1   c1.1 }. so  the doctor can observe that he has an alternative. on one hand  he can give the drug dr1 and the patient will be almost certainly cured of the disease di1. on the other hand  he can give the drug dr1 and the patient will be cured of the disease di1 with a low certainty degree. however  if the doctor considers that disease di1 is very serious  maybe he will choose the drug dr1 even if the degree is lower. that is why it is interesting to keep the two stable models in which every conclusion is weighted with a certainty degree.
proposition 1 let p be a p.n.l.p.
1. let a be a possibilistic stable model of p and ¦Á ¡Ê n ¦Á   1  then  x ¦Á  ¡Ê a    ¦Á = npa  x .
1. let s be a stable model of p   then { x nps x   | x ¡Ê x nps x    1} is a possibilistic stable model of p.
1. let a be a possibilistic stable model of p  then a  is a stable model of p .
¡¡this result shows that there is a one-to-one mapping between the possibilistic stable models of a p.n.l.p p and the stable models of its classical part p . it shows that the decision problem of existence of a p.s.m. for a p.n.l.p. stays in the same complexity class as the decision problem of existence of a stable model for a normal logic program. so  it is an npcomplete problem. furthermore  it indicates an easy way to implement a system able to compute a p.s.m. of a p.n.l.p p. first  one can use a software  as smodels  niemela and si-¡§ mons  1  or dlv  eiter et al.  1   to compute the stable models of p . second  for every found stable model a  our operator ¦°tpa can be used to compute  in polynomial time  the corresponding p.s.m. ¦°cn pa  of p.
1 possibility distribution defined upon a normal logic program
in the previous definition 1 we have proposed a syntactic way to compute the possibilistic stable models of a p.n.l.p. by using the fix-point operator ¦°cn defined for a p.d.l.p. now  we examine the semantics that can be given to this framework by defining a possibility distribution induced by the necessity values associated to each normal rules. this distribution ¦Ð  over all the atom sets  i.e. over 1x  has to reflect the ability of every atom set to be a stable model of p  and that is achieved by the next definitions.
definition 1 let p be a p.n.l.p. and a be an atom set  then ¦Ð p is the possibility distribution defined by ¦Ð p : 1x ¡ú  1  and respecting:  a ¡Ê 1x ¦Ð p a  = ¦Ðpa a .
¡¡one can observe that definition of ¦Ð p can be paraphrased by:  the possibility for an atom set a to be a stable model of p is its possibility to be the least model of the program p reducted by a . this definition is natural wrt. the definition 1 of a stable model and is justified by the next result.
proposition 1 let p be a p.n.l.p. and a ¡Ê 1x be an atom set  then ¦Ð p a  = 1    a is a stable model of p .
example 1 the possibility distribution induced by the p.n.l.p. p = { a. 1   b. 1    c ¡û a not d. 1   d ¡û b not c. 1   e ¡û c. 1   e ¡û d. 1 } is null for every atom set included in {a b c d e} except for ¦Ð p {a b}  =
1  ¦Ð p {a b c}  = 1  ¦Ð p {a b d}  = 1 and ¦Ð p {a b c e}  = ¦Ð p {a b d e}  = 1  {a b c e} and {a b d e} are the two stable models of p  .
definition 1 let p be a p.n.l.p. and ¦Ð p its associated possibility distribution  we define the two dual possibility and necessity measures such that:
¦° p x  = max{¦Ð p a  | x ¡Ê a}
a¡Ê1x
n p x  = 1   max{¦Ð p a  | x 1¡Ê a}.
a¡Ê1x
proposition 1 let p be a consistent p.n.l.p. and x ¡Ê x 
1. x is a credulous consequence of p    ¦° p x  = 1
1. x is not a skeptical consequence of p     n p x  = 1
¡¡let us remark that if an atom x is not a credulous consequence of p then it does not necessarily imply that ¦° p x  = 1 as it is the case for an atom that is not a consequence of a p.d.l.p.  see proposition 1 item 1 . for instance  p = { a. 1   b ¡û not a. 1 } has only one p.s.m. { a 1 } so b is not a possibilistic credulous consequence of p. but  the possibility distribution is ¦Ð p    = 1 ¦Ð p {a}  =
1 ¦Ð p {b}  = 1 and ¦Ð p {a b}  = 1 so ¦° p b  = 1. this is because  with this program  b is not completely impossible. in fact  b is not a credulous consequence only because a blocks the applicability of the rule concluding b. so  in other words if we have a then we can not have b  but if a is absent then we can have b. since  the certainty of a is only 1  so the possibility of b is naturally 1.
1 discussion and conclusion
in this work  we have proposed a way to deal with logic programs taking into account a level of certainty for each rule. first  we have given two equivalent ways  a semantic and a syntactic one  for dealing with possibilistic definite logic programs. then  we have shown how to extend our framework to possibilistic normal logic programs in order to obtain what we called possibilistic stable models. in addition to this work  we have described in  nicolas et al.  1  an application of our proposal to deal with inconsistent normal logic programs. there are alternative formalisms for extending nonmonotonic reasoning with qualitative or quantitative weights. in  nerode et al.  1   annotated non-monotonic rule systems are introduced to affect on every piece of knowledge a weight representing a probability  an uncertainty measure  a
time  a place ...for instance for a logic program  it leads to rules like  c 1  ¡û  a 1   not b 1 . this approach is different to our since we put weights on rules and not on each atom in the rules. another divergence is the meaning of the weights : in our work we deal with uncertainty while they develop a formalism in which the semantic of weights is not established a priori. in  damasio and pereira  1a; 1b; dubois et al.  1; benferhat et al.  1; loyer and straccia  1; alsinet and godo  1  the reader can find different propositions about multi-valued or probabilistic logic programs  about possibilistic definite logic programs  about levels of certainty ranking atoms  but not rules  involved in a non-monotonic reasoning ...but  none of these works describes a formalism dealing with uncertainty in a logic program with default negation by means of possibilistic theory  both in a semantic and a syntactic ways. the closest work of ours can be found in  wagner  1 . but the approach is to reconstruct possibilistic logic by defining a multi-valued interpretation and a corresponding satisfaction relation and forgetting the notion of possibility distribution. then  he is not able to provide any result about the possibility of an atom set to be a stable model. moreover  the necessity  certainty  of a conclusion is not correlated to the possibility of the atom set. so  we think that this approach is far from the spirit of possibilistic logic.
¡¡in possibilistic logic  the necessity degrees are commonly interpreted as preferences between formulas  the more certain is a formula  the more preferred it is. since there is a lot of works dealing with preferences between rules in nonmonotonic reasoning  delgrande et al.  1   it is interesting to analyze our work when we consider that the necessity degrees on rules determine a preference order. if we look only on the area of asp  most of these works use the preferences expressed between the rules to make a choice between the different stable models to keep only the  preferred  ones. in other words  the priorities between the rules do not evaluate a certainty degree of the rules but are a tool to choice between contradicting rules. this differs from our work because  when several stable models exist  we compute the certainty of the propositions with respect to each stable model. but we do not try to eliminate some stable models since we consider they are alternate solutions. nevertheless  a future work analyzing in depth the links between our proposal and the preference handling in asp is envisaged  in particular with respect to the two general principles stated in  brewka and eiter  1 .
¡¡some direct  and without theoretical difficulties  continuation of this work is to precise the handling of strong negation in possibilistic normal programs. then  we also plan to develop a system to compute possibilistic stable models by interfacing it with existing systems able to compute classical stable models. furthermore  we will try to extend our approach to disjunctive logic programs and answer set semantics  gelfond and lifschitz  1 .
