 
we propose a framework for simple causal theories of action  and study the computational complexity in it of various reasoning tasks such as determinism  progression and regression under various assumptions. as it turned out  even the simplest one among them  one-step temporal projection with complete initial state  is intractable. we also briefly consider an extension of the framework to allow truly indeterministic actions  and find that this extension does not increase the complexity of any of the tasks considered here. 
1 	introduction 
while there are abundance of formalisms for writing action theories that incorporate explicit causal rules not only between actions and fluents but also between fluents  e.g. 
 baral  1; lin  1; thielscher  1; gustafsson and doherty  1; mccain and turner  1; zhang and foo  1; kakas et ah  1    and there are some implementations of causal action theories ilin  1; mccain and turner  1; kakas et al  1    there have been few formal studies of complexities of various reasoning tasks in these causal action theories. in this paper  we investigate this issue. we first study various reasoning tasks such as computing the precondition of an action  checking if an action theory specifies a deterministic action  performing temporal projection  and computing regression in a very simple causal action framework that is primarily aimed at representing deterministic actions. basically  an action theory for action a in this framework is just a finite set of action effect rules of the form 
is true  then action a causes / to be true 
and causal rules of the form 
 causes / to be true 
where l's are literals. 
¡¡surprisingly  even in this simple framework  one-step temporal projection problem with complete initial state in the following form: given a set of literals that completely determines the initial state  and an action a  determine if a given fluent will hold in the state resulted from doing in the initial state  is intractable. this compares with strips and adl  which are like this simple framework except that they do not allow causal rules  where problems like temporal projection and regression are easy. 
¡¡as simple as this framework may be  it nonetheless captures the computational core of causal action theories. indeed  we show that if one extends it to allow arbitrary formulas in both the right and left hand sides of the effect and causal rules:  1  this extends the expressiveness of the language  but  1  it does not affect the complexities of any of the reasoning tasks considered here. 
¡¡the rest of this paper is organized as follows. after some formal preliminaries  section 1   we present a framework for simple action theories in section 1. complexity results are presented in section 1. before presenting some related work and concluding  we briefly show in section 1 how our simple action theories can be generalized  without questioning the complexity results  in the general case . for space reasons  proofs are only sketched or omitted. 
1 	formal preliminaries 
let propps be a propositional language defined inductively from a finite set ps of propositional symbols  atoms   the boolean constants  true  and  false   and the connectives lps is the set of all literals generated from ps. for each formula var denotes the set of atoms occurring in 
we shall also consider two isomorphic copies of 
propps' 	proppst and 	prop 	each formula 
    resp. from pro.  resp. prop  is obtained by substituting in a uniform way in the formula propps every atom p ps by the atom  resp. 
 propositions indexed by t are used to express conditions about current situation  and those indexed by about the situation resulted from doing action a in the current situation. in the following  by an initial state formula we mean a formula from propps   and by a successor state formula we mean a formula from . finally  we shall consider the language and take advantage of it to characterize the ettects or action a. 
reasoning about actions and change 	1 ¡¡a truth assignment over ps is called a complete state. a truth assignment over pst is called a complete initial state  while a truth assignment over  is called a complete successor state. in order to avoid heavy notations  we shall identify each complete state s with the conjunction of literals s is the unique model of it. 
1 	simple action theories 
we shall first consider simple causal action theories. 
definition 1  simple action theory  a simple action theory for action  is an ordered pair  causal  where 
finite set of effect rules  of the following form: 

where l's are literals from lps  and i can also he the left side is understood to he a tautology when 
when  the effect rule is really an action precondition axiom about a. notice that for our purpose in this 
paper  we assume that  is the only action. 
  	causal is a finite set of causal rules of the following form: 

where l's are literals from lps. again  the left side is understood to he ¦Á tautology when 
¡¡such simple action theories are sufficient to encode actions with conditional effects. the ratification problem is addressed through causal rules  which represent static laws and express how fluents are related. while primarily targeted at representing deterministic actions  they can sometimes give rise to indeterministic effects when there arc cyclic causal rules such as 
   causal theories of this form are special cases of causal theories in situation calculus  lin  1   domain descriptions in action languages  giunchiglia and lifschitz  1   and other more general formalisms  e.g. imccain and turner  1; zhang and foo  1 . while these formalisms do not always agree on their semantics in the general case  most of them coincide on this special class. 
definition 1  completion  	the completion 
 simple  action 	theory  is the formula defined by 
1 
   as one can see  the construction of cf is similar to the way a causal theory is transformed to classical logic in ilin  1  and to literal completions imccain and turner  1; lifschitz  1 . in fact  all these approaches yield logically equivalent theories. 
1 complexity issues 
1 	executability and determinism 
several properties are of interest when dealing with action theories. first of all  there is the question of whether an action is executable in a given initial situation. 
definition 1  executability  	let 	be an action theory for 
action and let 	formula from 	propps-
is a positive instance of executability  the executability problem  if and only if for any complete state s that satisfies  there is a state s' such that 
¡¡whenever  is a positive instance of executability  ¦Á is said to be executable under is said to be fully executable if and only if it is executable under 
proposition 1 
/. in the general case  executability is  complete. 
1. under the restriction where is a complete state  executability is hp-complete. 
proof. 
1. membership is easy. hardness comes from the following poly-

1. comes directly from the fact that  when ip is complete  then ¦Á is executable under it iff the propositional theory is consistent. 
reasoning about actions and change 

proof: membership is easy. hardness comes from the following polynomial reduction from dnf-validity. let 
1 	progression 
there are two forms of the progression problem  also referred to as  one-step  temporal projection. the simpler one  in the form of a query about the effects of an action given some information about the current situation  can be described as a triple 
    is an action theory; 
  is a formula from propps representing the knowledge state before the action is performed; we assume that the action ¦Á is executable under 
   is a formula from propps we are interested in the truth value of which after the action has been performed. 
definition 1  progression  let  be an action theory and formula from propps such that    is executable un-
der 	let 	be 	formula from 	propps- 
positive instance  /progression  the progression problem  if and only if  holds in any possible complete successor state by action ¦Á of any complete initial state sf satisfying equivalently: 

   according to this definition  progression is really a twostep process: first make sure that the action is executable under the given condition about the initial state  and then compute the changes that the action will have under the given initial condition. we have shown that the first step is -hard in the worst case. the following proposition shows the complexity of the second step under various assumptions. 
proposition 1 we have identified the following complexity results   conp-c  stands for conp-complete . 
complexity 	of procirhsmon with causal rules no causal rules any . any v' conp-r conp-r 1 complete state conp-c p v' literal conp-r conp-c € complete stale + € literal conp-r p proof: 
1.membership to conp comes easily from the fact that positive instance of progression if and only 
1. in the case where is a complete initial state and there are no causal rules  
where for each when is a complete initial state  each can be evaluated in linear time to a truth value. this truth value is given to the corresponding since is executable under this will not lead to a contradiction  and a complete successor state is characterized by the values given to the literals it remains to check in linear time whether to determine whether the instance is positive or not. 
1. what remains to be done is showing conp-hardncss in these two eases: 
 a  there are no eausal rules and 	is a literal; 
 b  is a complete state and 	is a literal; 
	case 1: no causal rules  	is a literal. 
the proof comes from the following polynomial reduction from dnf-validity. let be any dnf formula and let m be the instance of progression defined by is executable under 
positive instance of progression. 
	case 1: 	complete state  
the proof comes from the following polynomial reduction 

¡¡our results about the complexity of executability and progression  taken together  are strongly related to a result in  turner  1   namely theorem 1 i   which says that one-stage conformant planning  without concurrency  is complete. indeed  checking that is a valid plan in this context amounts to checking that is executable in all possible initial states and that its progression satisfies the goal. by considering executability and progression separately  we see more clearly that hardness in turner's result is solely due to the hardness of executability. 
¡¡a second  perhaps a more difficult way of seeing the progression problem  is the following: given some information about the current situation  compute all possible successor states. formally  this looks like consequence finding: given a formula propps  compute the strongest successor state formula propps such that 
model-theoretically  this corresponds to finding all complete successor states such that there is a complete initial state that satisfies for which is consistent. 
as it turns out  this formula is the strongest necessary condition of under  lin  1 : 

reasoning about actions and change 	1 

proposition 1 	for-
there are  at least  two possible definitions for regression  each of which corresponds to a given need: deductive regression  also referred to as temporal explanation or weak preimage  and abductive regression  also referred to as strong 

preimage . 
definition 1  deductive regression  let  be an action theory and let  be two formulas from proppsis a positive instance of deductive regression  the deductive regression problem  if and only if 

¡¡similar to progression formulas  we can define deductive regression formulas: 
definition 1  regp given an action theory and formula from propps  the deductive regression for-
mula rcgo t i j  is the formula from propps  unique up to logical equivalence  such that is positive instance fl/deductive regression ij and only if 
	we immediately get that for any two formulas 	from 
propps  is a positive instance of deductive regression if and only if is a positive instance of progression. we also have: 
proposition 1 deductive 	regression 	is 	conpcomplete. 
definition 1  abductive regression  let  be an action theory and let be two formulas from proppsis positive instance o/abductive regression 
 the abductive regression problem  if and only if for any com-
plete state  implies s 
the corresponding search problem is defined by: 
¡¡thus  abductive regression amounts to finding the set of all complete initial states st for which all possible complete successor states w.r.t.   satisfy this means that we are interested in finding the set of states in which performing the action leads to states necessarily satisfying - provided that the action can be performed in them. this type of regression is useful for planning  i.e.  reasoning about the minimal conditions under which an action succeeds in reaching the goals. thus  is a positive instance of abductive regression if and only if implies the minimal conditions under which the action leads to the goal. 
¡¡this shows that the qualifications  deductive'1 and  abductive  are only related to the way initial states can be inferred  and not to the confidence we have in them to be satisfied. indeed  as far as reasoning is concerned  deductive conclusions can be taken for sure since deduction is truth-preserving while abductive conclusions cannot be taken for sure in general since abduction is only falsity-preserving. contrariwise to such a reasoning situation  initial states obtained through deductive regression are only possible ones given and it could be the case that performing action in s leads to a sucdoes not hold. contrastingly  initial 
obtained through abductive regression lead to suc-
¡¡abductive regression is computationally more expensive than deductive regression: 
proposition 1 abductive regression is complete. 
proof. membership is easy. hardness comes from the following polynomial 

1 	reasoning about actions and change 

 	e n t s built over new is a new 
and the following set of static causal 
 and no effect rule ; 

q is a positive instance of  is a positive instance of abductive regression. 	
1 	generalized action theories 
here we want to extend causal and effect rules so as to allow for any possible consequents  including disjunctions  while keeping the framework simple enough. 
definition 1  generalized action theory  	a generalized action theory 	for action  is an 	ordered pair   	causal  where 
  is a finite set of effect rules of the form pre where pre  post are formulas from pbdpps 
lps. 
  causal is j finite set of causal rules of the form left right l  where left and right are formulas 
from propps and l  lps. 
¡¡the completion consists now in writing down that every literal / persists if and only if there is no effect  action or causal  whose precondition is verified and on which / depends. more generally  rather than writing  there is no effect  action or causal  whose precondition is verified and on which / depends   we specify for each action rule the fluents l that are influenced and for which there should not be any frame axiom if the action rule is enabled. 
definition 1  completion  the completion cl eralized action theory is the formula defined by 
¡¡as for simple action theories  we assume that each symbol of ps occurs in so that the size of   is polynomial in the size of 
¡¡in the previous definition  gathers the preconditions of effect rules whose postcondition influences positively /  and similarly for the completion frame{l  means that if / is initially true and there is no active action rule nor any causal rule whose consequent part influences negatively /  then / persists after a is performed. 
¡¡by default  the set l associated with an action rule  resp. a causal rule  is the set of literals lit post   resp. lit{right   positively mentioned in the negation normal form of post  resp. of right  - an alternative  more refined possibility being the set of literals deplit post   resp. deplit right   on which post  resp. right  semantically depends  lang and 
marquis  1 . it is easy to show that the completion of  as defined above  definition 1  is equivalent to the com-
pletion given at definition 1 whenever - is simple  in that case  the default choice for l in each rule is considered  i.e.  l = whenever the consequent part of the rule is i . 
¡¡for instance  so to say that flipping a coin release head  we simply write holdingcoin one is holding the coin initially  then after the action of flipping it  we can neither infer head nor -head using inertia. 
¡¡due to space limitation  we cannot provide the full details here. in a nutshell  the main reasons why generalized action theories are interesting are twofold. on the one hand  we can prove that generalized action theories can be used to represent any nondeterministic action  associating a nonempty set of successor states to any initial state   while such a completeness property is not satisfied by simple action theories. on the other hand  the complexity of executability  de-
terminism  progression  deductive/abductive regression  from generalized action theories coincide with the corresponding complexity result for simple action theories in the general case. this shows that the gain in expressiveness offered by generalized action theories is not balanced by a complexity increase for any of these reasoning tasks. furthermore  this suggests that the simple action theories considered here constitute the computational core of causal action theories. 
1 	other related work 
iliberatore  1  investigates the complexity of reasoning about action in the language a igelfond and lifschitz  1   therefore he considers only deterministic actions without static causal rules. he shows the conp-completeness of the progression problem in language a  to be related to the right-upmost square in our proposition 1. leiter et ai  1  study the computational of many planning problems  including the progression problem as a particular case  using an action description language based on answer set semantics. 
¡¡ drakengren and bjareland  1; 1  investigate the complexity of checking the consistency of a scenario description in a temporal logic in the style of  sandewall  1 which shares some similarities with causal theories of action  although both the syntax and the semantics are different. no static causal rules are considered  but on the other hand  the language allows for explicit time and concurrency . checking the consistency of a scenario description is np-complete and falls in p under specific syntactical restrictions. 
¡¡reasoning about action has strong connections with belief update  and therefore  the complexity study of belief update operators is relevant to our concern. the update operators whose complexity is studied in leiter and gottlob  1; 

reasoning about actions and change 	1 

herzig and rifi  1; liberatore  1  do not consider static causal rules  but allow for expressing any effects  especially disjunctions. the complexity of checking whether 
             - where o is the update operator  mapping a logical tneory and a formula to a logical theory - corresponds to the progression problem1. 
1 	conclusions and future work 
the main contribution of this paper is the identification of complexity results corresponding to many reasoning tasks considered when dealing with causal action theories. it remains to be checked to what extent these results are changed when considering additional capabilities such as concurrency  as in igiunchiglia and lifschitz  1   or resources. 
¡¡because of the way the progression problem is stated  it was expected that for arbitrary description of the initial situation and arbitrary query about the successor situation  the problem is conp-complete. but when we first started studying the problem  we were really expecting that when  is a complete state  the problem would be easier; we were surprised that even in this case it turned out to be intractable. in retrospect  what happens is that even though both action effect rules and causal rules have very restricted form  the complete action theory  can be complex  and may not always be deterministic. an interesting question is then if we already know that the action theory is deterministic  would progression with complete initial state still be intractable  we do not know the answer at that stage. 
acknowledgements 
tha authors would like to thank the anonymous referees for helpful comments. the second authors work was supported in part by hk rgc cerg hkust1ie. the third author has been partly supported by the iut de lens  the universite d'artois  the region nord / pas-de-calais under the tact-tic project  and by the european community feder program. 
