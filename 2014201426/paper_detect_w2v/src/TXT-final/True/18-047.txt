 
　　the use of specialization hierarchies in model-based vision systems may cause problems with uniformity in representation and efficiency. the concept of a discrimination graph is introduced. such a graph facilitates the representation of hypothetical and ambiguous interpretations in a uniform and efficient way. we describe the implementation of mapsee-1  a sketch map interpretation program that uses discrimination graphs in combination with a hierarchical constraint propagation algorithm. 
1. introduction 
　　a key issue in computational vision is the proper mapping from image features to interpretations. image features are often highly ambiguous with respect to interpretation. as a result  alternative interpretations for a single feature have to be represented as hypotheses. these hypotheses are instantiations of scene objects and they can be represented by means of an interpretation graph in which each variable  node  represents a hypothesis and the arcs represent constraints between different hypotheses. in a computational vision system the number of hypotheses can be quite large. hence  the propagation of constraints over the interpretation graph can be a complex and cumbersome operation  because the addition of new hypotheses and invalidation of existing ones requires a continuous restructuring of the graph. 
　　most model-based vision systems use specialization hierarchies1 in an attempt to alleviate this problem. these hierarchies can be used to replace sets of elementary interpretations with a similar appearance in the 
image by a smaller set of more abstract interpretations. these interpretations are not only hypothetical  they are also ambiguous. they reduce the number of hypotheses that the system has to deal with. unfortunately  specialization hierarchies only offer a partial solution to the interpretation explosion problem. they are natural categorization schemes and many image features allow for interpretations that do not fit into such schemes. for example  a grassy area seen from low altitude could be farm land as well as a golf course and there is no specialization hierarchy that joins both concepts into one. 
l
　　the research reported in this peper was carried out in the laboratory for computational vision at the university of british columbia. 
1 for a review of different uses of specializations hierarchies  see  1  the use of specialization hierarchies may therefore cause some interpretations to be hypothetical  whereas others are both hypothetical and ambiguous. hypothetical interpretations are explicitly represented in an interpretation graph by means of different variables  whereas ambiguous interpretations are implicitly represented by means of a single variable. such a representation is not uniform. 
　　the efficiency of the system is also affected  in particular  with respect to constraint propagation. most images allow only one globally consistent interpretation for each image primitive. at the start of the interpretation process  however  each image feature has many possible interpretations  most of which are explicitly represented in the interpretation graph. once  more global constraints are found  most hypotheses have to be deleted from the interpretation graph. 
　　both the problems of uniformity and efficiency can be alleviated  if discrimination graphs are used. such graphs permit the representation of all interpretations  hypothetical or ambiguous  by means of a single variable which is never deleted from the interpretation graph  once it is constructed. the use of a hierarchical constraint propagation algorithm in combination with discrimination graphs further increases the efficiency of the system. we have designed a model-based vision system that uses discrimination graphs in combination with such an algorithm. this system has been implemented as a schema-based sketch map interpretation program. 
1. discrimination graphs 
　　the idea of discrimination graphs is based on the assumption that we can classify image features with respect to a particular characteristic  e.g. shape  texture  the result of which is a finite number of categories. as 
well  we assume that there is only a finite number of scene objects whose image appearance falls in a particular category. discrimination graphs are based on a categorization of object classes that belong to a particular image feature category. the source node of the graph is an abstract object class that intensionally represents all the elementary object classes described by a particular image feature category. the leaves of this graph are the elementary object classes. elementary object classes can belong to more than one image feature category. as a result  discrimination graphs can become tangled hierarchies with multiple source nodes. 
discrimination graphs differ from specialization 

1 j. mulder 
hierarchies in at least two respects. an abstract class often represents elementary classes that cannot be joined in a natural specialization hierarchy. as well  the tangled structure of the graph means that not all members of a 
subclass are automatically a member of a superclass as well  i.e. no universal implication . at the source nodes  discrimination graphs represent object classes which are unique with respect to a particular image appearance  but highly ambiguous with respect to interpretation. at the leaves  on the other hand  we find elementary classes which are unique with respect to interpretation  but ambiguous with respect to their physical appearance. 
     discrimination graphs permit the construction an interpretation graph in which each image feature is represented by means of a single variable. this variable is an instance of an abstract object class which intensionally represents the whole range of possible  elementary  interpretations for the feature concerned. the elementary interpretations can be represented explicitly as a set of labels in the domain of the variable  or  if we use discrimination graphs  implicitly by an abstract label. as the interpretation progresses  we can expect an invalidation of some of these labels. the variables  however  only represent information that is true for all interpretations. thus  invalidation of one label only requires its deletion or replacement. this can be done without changing the structure of the interpretation graph. as well  all interpretations  hypothetical or ambiguous  are now represented as labels in the domain of a single variable. 
1. mapsee-1 
     mapsee-1  the sequel to mapsee-1   is a 
     schema-based program for interpreting sketch maps. its schema-based format has been inherited from mapsee-1. each object class is represented as a list of attributevalue pairs. the attributes determine its internal structure and its relations to other object classes. for example  each class has a  components'* and  supercomponents  attnbute which determines its location in a composition hierarchy of objects. the object's location in a discrimination graph  on the other hand  is determined by its  discriminations  and  generalizations'1 attributes. an  instances  attribute lists the current instantiations of the object class. each instance of an object class inherits the attributes of its parent. a special attribute  label  is used to store the current interpretation of the instance. 
　　mapsee-1 interprets sketch maps such as the one in figure 1. both line segments and regions have meaning. line segments can be interpreted in terms of elementary object classes such as roads  rivers  shores  towns  mountains  and bridges  whereas regions can be land or water. the input consists of a set of plotter commands which indicate the exact location of each line segment in the image. 
　　the mapsee-1 control is subdivided into three stages: segmentation  image-to-scene mapping  and interpretation. a segmentation process results in the creation of sets of connected line segments  called chains  and regions. the chains form the image features that need interpretation. mapsee-1 has a fixed number of shape categories for describing chains. the image-toscene process observes the shape of each individual chain and selects a category in which the chain is placed. different categories are characterized by features such as closure  mountain-shape  bridge-shape  and blobs. 
discrimination graphs form a key feature in the 
mapsee-1 design. each shape category allows for many different elementary interpretations. the discrimination graphs are constructed such that there is a single  abstract  object class for the set of elementary classes allowed by each shape category. figure 1 shows a simplified example of a mapsee-1 discrimination graph. this graph would result from the existence of two shape categories. a closed chain depicts a coastline  lakeshore  or road. any other line segment depicts a road or river. the leaves of the graph are elementary object classes 
 e.g. lakeshore  road   the other nodes represent more abstract classes  some of which are unnatural  e.g. road/shore . all descendents of road /shore can have the same appearance in the image. the nodes in the graph with more than one parent can have different 
appearances in the image. a road  for example  may or may not be depicted by a closed line segment. thus  not all roads are road/shores  some may be road/rivers instead. 
　　the image-to-scene process instantiates the appropriate scene object for each chain. only one instance is created for every chain. a closed chain  for instance  gets represented by an instance of the class road/shore. the interpretation of this chain is represented by the  label  attribute of the instance. this label is also road /shore  which indicates that all of road/shore's successors in the discrimination graph are valid interpretations. the image-to-scene process also creates the beginning of the interpretation graph. the instances are the variables  their label the domain. finding the constraints between instances  however  is the responsibility of the interpretation process. 
　　this paper does not address the question of the construction of the interpretation graph. for such a discussion the reader is refered to . we therefore only discuss the component of the interpretation process that is concerned with constraint propagation. in mapsee-1 this process is called discrimination  and it uses the discrimination graphs. 
　　discrimination is an implementation of a network consistency algorithm called hierarchical arc consistency  h.a.c . this algorithm is a derivative of arc consistency as described in . it maintains consistency between labels in the domain of adjacent variables in a constraint graph. two adjacent variables are considered consistent if all labels in the domain of one variable are consistent with at least one label in the domain of the other. if this is not the case then the inconsistent label is replaced. in case of replacement the test is repeated for all variables adjacent to the one in the domain of which the replacement took place. h.a.c. assumes a hierarchical organization of the domain of each variable as is the case in discrimination graphs. if a label is inconsistent then h.a.c. will recursively replace it by one of its descendents in the hierarchy until a consistent descendent is found. 

j. mulder 1 
　　as an example  the road/short label of an instance becomes inconsistent if both regions surrounding the 
closed chain are constrained to be land. road/shore is valid only as long as all of its descendents  see figure 1  are valid. the new constraint invalidates the shore interpretation. h.a.c. replaces this label by using the principle of least commitment  introduced to computational vision by man and nishihara . first  road/shore is replaced by road and shore. next  the consistency of each of these labels is tested. consistent labels are kept  inconsistent labels are replaced by their successors. in this example  shore  lakeshore and coastline are all inconsistent. thus road is the only label that remains. a more detailed discussion of h.a.c. is provided in . 
　　mapsee-1 solves the problem of uniformity and efficiency as described in the introduction. competing interpretations are all represented as labels in the domain of a single variable. efficiency is achieved in several ways. first  invalidation of a particular label does not result in a structural change in the interpretation graph. second  the number of labels in the domain of each variable can be kept very small  thanks to the use of discrimination graphs and the principle of least commitment. specialization hierarchies do not offer this 
capability to such an extent. third  h.a.c. does not maintain an explicit administration of the compatibility between the labels of adjacent variables. only if a label change in a neighboring variable took place  will a variable test its labels. it will stop this test as soon as a compatible label is found in the domain of a neighbor. in interpretation graphs with competing interpretations represented by different variables  the compatibility between the interpretation of adjacent variables is represented explicitly. as mentioned before  most interpretations tend to be eliminated during the course of the interpretation process. 
1. conclusions 
　　we have described the concept of discrimination graphs as a uniform and efficient way for representing interpretations that are hypothetical and ambiguous. we have also described a hierarchical constraint propagation algorithm that uses discrimination graphs in an efficient manner to propagate constraints in an interpretation graph. discrimination graphs and hierarchical constraint propagation have been implemented in mapsec-1  a schema-based vision system that interprets sketch maps. 
