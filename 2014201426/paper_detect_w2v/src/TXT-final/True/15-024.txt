	industrial strength knowledge bases: 	issues and experiences 
thomas p. kehler  intelligenetics  inc.  	peter friedland  stanford university 
harry pople  univ. of pittsburgh  rene' reboh  sri international 
steve rosenberg  hewlett packard labs 

     recently we have entered an era of intense government and industrial interest in ai systems. in the development of robust ai systems  the role of the knowledge base is extremely important. a significant investment in knowledge base development w i l l be made over the next few years. consequently the adequacy of current techniques for the development and maintenance of large knowledge bases must be given c r i t i c a l review. like database development in the early sixties  knowledge base development issues are likely to dominate ai system development. these issues are likely to drive the development of practical techniques as well as the refinement theoretical approaches. 
knowledge base stability 
     development of a large ai system implies long terra commitment to the knowledge base. the cost of knowledge base development represents a significant fraction of the total cost of implementing an expert system. because such a significant investment is made in the knowledge base  s t a b i l i t y over time is an important issue. one question to consider is the susceptibility of knowledge bases to innovations in ai technology. 
     the experience of expert system developers has been that successful applications have resulted from limiting the problem scope and using primarily experiential or judgmental knowledge. limiting the scope of the system implies not only a domain limitation but also assumptions on how the system is going to be used. knowledge bases intended for expert decision making may differ from those intended for tutorial use. an issue is whether changing the intended use of a system w i l l adversely impact stability of the knowledge base. 
     competing with the notion of knowledge base s t a b i l i t y is the practical constraint that ai systems are developed by a process of evolutionary refinement. the two constraints of knowledge base s t a b i l i t y and development by evolutionary refinement imply tension between the degree of commitment to specific techniques for representation and reasoning in knowledge based systems. these constraints in turn raise questions about the architecture of knowledge base development tools: is the knowledge base development tool to be viewed as a   u t i l i t y package  or as an  integrated applications system   this particular issue has influenced design considerations in various systems. 
memory: uniform or structured 
     a second issue which must be considered is that of memory management for knowledge bases. if the virtual memory address space offered by the hardware is smaller than that needed for the knowledge base  a structuring of the knowledge representation is needed. only a few years ago  the limitations of timesharing virtual memories presented serious limitation to the development of robust knowledge bases. with the advent of personal lisp machines  this limitation has been removed... for now. 
     industrial strength knowledge bases are likely to grow large quickly. the need for extensive 
data in some applications intensifies the rate of knowledge base growth. do we leave the size limit question to hardware architecture or should we structure the memory in some way  clearly there are practical systems which require more than a 1 bit address space for a memory map. the virtual memory issue has largely been overlooked  with the hope that our knowledge bases w i l l not exceed the address space of the machine. 
integrity 
     from an engineering perspective  knowledge base integrity implies that interactions with the knowledge system w i l l be consistent over the scope of the application. inconsistency in the knowledge base becomes evident when a user enters territory not previously explored by the designer of the system. scientifically  considerable attention is being given to establish knowledge base integrity in terms of a well-formed epistemology. 
     most systems used today in industrial applications are built using an engineering approach. explanation f a c i l i t i e s are often used to debug knowledge bases. knowledge base debugging sessions are driven by performance specifications for the system. integrity of a system is reached by a step-wise process of testing and refinement. truth maintenance techniques developed which provide computational support for lines of reasoning. these techniques allow the system to trace the dependency of one fact on other facts. questions to be considered are: how can knowledge system building tools aid in achieving a consistent  robust knowledge base  

     current systems which use incremental development as a means of extending system capabilities suffer from a degree of f r a g i l i t y . when a user proposes an interaction not previously anticipated bthe system degrades in ungraceful ways. for a system to degrade gracefully the system must have a model of the limits of its expertise. in the past the semantics of a knowledge representationhas been an issue even for small systems. clearly developing domain semantics which can identify their own limits w i l l be a major issue for industrial applications of knowledge based systems. 
knowledge acquisition and the user interface 
     in order to extend the capabilities of a knowledge system  current technology requires new knowledge to be entered and debugged by the knowledge engineer or domain expert. this process puts a particular stress on the user interface. 
the bit 	mapped 	graphics display 	integrated with 
lisp programming environments has made it possible to construct highly interactive interfaces to knowledge bases. using graphics it is possible to represent knowledge in a way which is natural to the user  offering an extended vocabulary for representation. commonly used graphical representations of concepts may be directly represented. since the graphical representations are integrated with the lisp environment  it is possible to make the representation active  items may be selected and manipulated using graphical pointing devices such as the mouse. 
     the use of these techniques can potentially improve knowledge base u t i l i t y in a system. knowledge base building tools can use this potential by providing integration of graphical perspectives on knowledge with knowledge representation techniques. 
joint knowledge base development 
     most prototype knowledge systems have been developed based on the knowledge of a single expert. an alternative to the single expert has been establishing a consensus among several experts. broad use of commercial ai systems requires joint development knowledge bases by many experts. knowledge base building tools may aid in the process of handling alternative sources of 
knowledge and recognizing conflicts in knowledge base refinement by several contributers. 
     while personal workstations have been a great aid in providing a large virtual address space and an improved user interface  they have introduced the complication of distributed knowledge bases. working with distributed knowledge bases is of particular importance in the construction of expert systems where collaboration between experts and disciplines is an integral part of system use. 
	t. kehler et al. 	1 
interfaces to databases 
     expert problem solving often requires u t i l i z a t i o n of data organized in large data management systems. for example  a molecular geneticist planning an experiment w i l l make reference to the nih database on dna sequence data. many prototype systems have avoided the data management issue by limiting the scope of application. interfacing to data management f a c i l i t i e s is an integral part of many industrial al systems. consequently  a knowledge system is likely to require interaction with a database system. facilities integrating the knowledge based system with conventional database management systems are a likely knowledge base building tool. 
