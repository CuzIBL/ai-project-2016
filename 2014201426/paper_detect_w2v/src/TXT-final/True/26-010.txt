 
we discuss the indexing of cases for use in precedent-based argument. our focus is on how multiple  related indices into a case base of legal precedents are exploited by an argumentgeneration program called bankxx. this system's architecture and control scheme are rooted in a conceptualization of legal argument as heuristic search. although our framing argument as search is not discussed in detail in this paper  we describe the main features of this view to provide context for a discussion of an indexing scheme that facilitates argument creation. we describe five inter-related index types-citation  prototypical story  factor  family resemblance  and legal theory indices- and show how they can be used to access  view  widen  or filter a set of cases. the application domain is a u.s. federal statute that governs the approval of bankruptcy plans. 
1 introduction 
the thesis of this paper is that different access paths to information can be found by applying related types of indices in complementary ways and that composite indexing strategies can lead to improved case retrieval. we explore these hypotheses in the context of legal argument using a test set of five related index types into a case base of legal precedents. 
　　legal experts working in anglo-american jurisdictions index cases in a variety of ways  using: 
　　 1  traditional citation linkages between cases. a case cites the precedent cases to which it refers for support of the various legal propositions advanced. indexing services such as shepard's citations 
 shepard's  1  track the citations to many published cases. terms such as see  but see  and cf. are reserved to introduce precedents in precise ways that are specified in legal style manuals such as the blue book  bluebook  1 . see  ashley and rissland  1 . 
　　 1  recurring prototypical fact situations. generic cases or recurring fact patterns have been used in legal reasoning  gardner  1  as well as in other domains 
 kolodner  1 . if  for example  the current problem 
1 	machine learning 
involves a former student with large educational debts who files for bankruptcy immediately after graduating  a bankruptcy expert may recall previous student loan cases. in particular  knowing that a legal theory has successfully been applied to cases fitting a particular fact pattern provides a basis for creating analogies to justify applying that theory. 
　　 1  hypo-style dimensions. in domains where cases can be compared with respect to a stable set of discernible factors  the factors can be conceptualized and implemented as  dimensions   rissland  valcarce and ashley  1; ashley  1 . dimensions may be used to index and retrieve cases from a case base and to order precedents by their relevance to a problem situation as in the hypo and cabaret systems 
 ashley  1; rissland and skalak  1 . 
　　 1  family resemblance or prototypicality indices. measures of family resemblance and prototypicality originating in part from the psychological research of rosch can be used to create a conceptual  graded landscape of cases in which the highest peaks or most centrally located instances represent the cases with the greatest family resemblance rating  rosch and mervis  1; see also mccarty  1; bareiss  1 . given a case family  one can find member cases of varying degrees of prototypicality. given an individual case  one can assess the strength of its membership within a family. 
　　 1  legal theories. courts and advocates usually strive to provide a legal theory as to why a case should be decided a certain way. legal theories often explicitly specify factors or other features to be considered. knowing what cases have been argued under a theory is a means to access other cases  such as cases in which a theory was clearly held to control a decision. in addition  relations between legal theories themselves  such as refinement  permit  nearby  theories to be retrieved  along with the cases that apply them. 
　　 1  rules. there is no shortage of rules in the law  twining and miers  1 : statutes; agency regulations;  blackletter  rules  which are generalizations of case law found in restatements of the law; and the rules of a case  which state the holding of the case. each type of rule provides a means to access cases: for example  the cases leading to the rule  the cases elaborating the rule  and those following the rule. 
　　 1  domain taxonomies. commercial publishers have also developed indexing schemes  such as the key number system used in westlaw  west  1   in which legal topics are assigned key numbers. such schemes provide a useful taxonomy of the law and index legal opinions by the topics they address. 
　　 1  terms of art through dictionary  digest  and encyclopedia entries legal practitioners find cases that define  interpret  elaborate and refine the meaning of legal terms whose scope is often the source of litigation  c/.  dictionary-based reminding   schank  1  . 
　　each of these index types imparts its own emphasis or  view  on the case base and displays its own strengths and weaknesses as an indexing medium. in the next sections we discuss five of these indices in further detail - citation linkages  recurring prototypical fact patterns  factors  family resemblance  and legal theories - and show how they may be used in conjunction with each other to improve case retrieval1. 
　　in section 1 we provide a context for our discussion of indexing by describing how argument creation can be couched as heuristic search. we also provide a brief introduction to the domain in which we have instantiated our system  personal bankruptcy plans under chapter 1 of the u.s. bankruptcy code. in section 1  we discuss the particular indices used by our system  called bankxx. we show in section 1 how multiple  related indices can be used to overcome some practical problems in case retrieval - such as too many or too few cases retrieved - and provide examples of retrieval using bankxx's network of indices. we show how the composite use of related indices can outperform a single index. section 1 discusses related research and summarizes contributions. 
1 background 
1 argument formation as search 
one can view the generation of argument as heuristic search. at each stage in developing an argument  choices need to be made. should one seek a broad set of supporting cases  anticipate the best cases for the opposing side  or create a telling hypothetical  each choice takes the emerging argument to a new state of development. limited resources force the arguer to make choices about which avenues to pursue. 
　　in one implementation of argument as search  the search space would be the space of all arguments  the start state would be an empty argument  and the search operators would represent ways to advance the argument. however  our current system models 
1  we have previously addressed the role of rules as indexes to legal cases in  rissland and skalak  1  and  skalak and rissland  1 . 
argument as the emerging by-product of the search and research that an expert might perform in a space of domain knowledge. we perform search in domain space rather than in argument space in part because we are interested in modeling the legal research activities of attorneys and partly because the indexing fabric of the domain space is better understood. in our approach  domain space search identifies nodes that contain domain knowledge that can support an argument and collects the support in an argument data structure. 
　　in particular  this project uses classical best-first search  nilsson  1  in a domain space consisting of legal theories and of cases viewed in various ways. the heuristic evaluation function driving the search is based on a checklist of desired ingredients in an argument. the 1 argument desiderata implemented in bankxx include supporting cases  supporting legal theories  supporting citations  most on-point and best cases according to a factor analysis  classification of the case as a prototypical story  and favorable cases with the highest family resemblance rating. how supporting  most on-point and best cases are used in case-based legal argument has been investigated in hypo  ashley  1 . the argument desiderata are analogous to the higher level features often identified in applications such as game playing  e.g.   samuel  1 's  center control  or  piece advantage  . in the current bankxx implementation  each argument piece contains a functional predicate that determines if a case node can supply that useful piece of an argument. 
　　thus  bankxx's implicit control paradigm is search in the space of arguments. its explicit  implemented control scheme uses heuristic search in a domain space to create arguments through the exploitation of a variety of indices. 
1 the chapter 1 bankruptcy domain 
our system searches a domain network of cases and other legal knowledge to support arguments in favor of or against granting an individual relief from debts via a partial repayment plan through chapter 1 of u.s. bankruptcy law  1 u.s.c. ′′ 1 . 
chapter 1 was enacted to permit overwhelmed debtors with regular income to rehabilitate themselves by repaying part of their debt and having the balance discharged  thus allowing debtors a fresh start. 
1 description of bankxx 
　　the purpose of bankxx is to experiment with the connection between  a  argument generation realized as heuristic search and  b  case retrieval accomplished with a variety of indexing strategies. in this section we present details of the case representation and indexing schemes used in bankxx. in particular we describe how various case perspectives can be reflected in a partition of case memory into spaces of interconnected cases. 
	rissland  skalak  and friedman 	1 

1 case spaces 
the case base in bankxx consists of a semantic network whose nodes represent cases and legal theories  and whose labeled links represent connections between the nodes. we refer to this network as the case graph  which consists of case-graph nodes together with labeled link edges. 
　　case-graph nodes are legal cases represented:  1  as factual situations   1  as bundles of citations   1  as stereotypical stories or scripts   1  in terms of various legal factors  and  1  by the measure of their prototypicality. legal theories are also represented as case-graph nodes. 
　　the case graph is partitioned into spaces  similar to the partition of a blackboard application's working memory into spaces. each space contains case-graph nodes that represent cases  or legal theories  according to a particular perspective that has proven useful to human legal reasoners  figure 1 . nodes in the case graph are highly interconnected; in-space links connect objects within a space and cross-space links connect objects in different spaces. during search of the case graph  links are traversed by neighbor methods  operators that expand nodes in the graph by following either in-space links  cross-space links or a sequence of links. traversing a link is tantamount to using the link label as an index. 

　　we now describe each space of case-graph nodes  including its intra-space indexing links. cross-space links are discussed in section 1. 
　　fact situation space. fact situation case nodes encode legal cases as sets of facts. each situation is represented as a tree of frames implemented as clos instances. examples of frames at this level describe the proposed plan and payments  the debt  the debtor's income  and generic information about the case. this level  which is the level at which cases are input  is the surface level of factual description. cases at this level of representation are linked to each other through case citations  figure 1 . 
　　legal citation space. citation case nodes encode cases as sets of citations: those that are cited by a case and those  later cases  that cite it. citations include a citation signal that specifies the sense in which a case is cited. citation instances also include the west key numbers indexing the topics addressed in the case. citation instances are not linked to each other but 
1 	machine learning 
provide links to the citing case and the cited case in fact situation space  figure 1 . 

figure 1. a small subgraph of the case graph  showing cases and inter-case citation links. 
　　legal factor space. legal cases can be represented in terms of their values on domain dependent factors  rissland  valcarce and ashley  1;  ashley  1 . factors are derived features recognized by domain experts as strongly influencing a case's outcome. a factor compares cases as stronger or weaker with respect to the factor's perspective. in legal factor space  a case is represented by a vector composed of the magnitude of a case on each dimension. 
　　examples of factors in bankxx are the percent of disposable income that is allocated to payments under the plan  the length of proposed plan  and the portion of the debt that is attributable to educational loans. using a hypo-style analysis  ashley  1  the system creates links between factors and the cases to which they apply  figure 1 . 

figure 1. a small subset of the indexing links between domain factors and cases. 
　　legal story space. two of the bankruptcy story prototypes used by bankxx are:  1  the student loan story - student incurs educational debts and soon after graduating files for bankruptcy protection from his educational loan creditors  and  1  the dishonest debtor - debtor commits fraud or some other offense  a judgment is entered against debtor  debtor files for bankruptcy. 
　　bankxx does not link story prototypes to each other. exploiting such links would require an understanding of how stories can be related and  

ideally  an automated means to recognize them  e.g.  plot units  lehnert  1 . 
　　family resemblance space. we have begun to incorporate some of the research of rosch  who proposed a model of the internal structure of categories that is captured in the family resemblance hypothesis:  the most prototypical members of categories are those with most attributes in common with other members of that category and are those with least attributes in common with other categories   rosch and mervis  1  p.1 . while rosch proposed the family resemblance hypothesis as a cognitive structural model  we are experimenting with family resemblance as an indexing and processing model. bankxx can calculate the degree of family resemblance of a case to a given set of cases and select the cases within that family having the greatest family resemblance. for instance  the system can calculate the family resemblance of all student loan cases  and find the most prototypical. 
	legal theory space. legal 	theories are 
represented as a list of factors  see the discussion of legal factor space  that are necessary to determine how a theory applies to a case. legal theory nodes are linked by pointers that describe the relationships between them  figure 1   such as  overlaps with    rejects   and  agrees with.  in the next implementation  a legal theory node will specify how to combine the factors - for instance  via weighting - to apply the theory. legal theories have been culled from opinions by hand. 
1 cross-space case links 
in addition to the in-space links we have described  a variety of bi-directional  cross-space links exist. for instance  links exist between factors and legal theories that use those factors  and between story prototypes and cases instantiating them. 
　　we also have identified sequences of links that may be traversed serially to yield cases that satisfy a set of criteria. these multiple link pathways function as domain-dependent macro-operators  fikes  et al.  1 . examples are given in section 1. 
bankxx currently contains 1 bankruptcy cases 
 and the same number of factor analyses in legal factor space   1 inter-case citations using 1 citation signals  1 domain factors  1 legal theories related by 1 inter-theory links of 1 types  1 prototypical stories  and 1 measures of family resemblance. a mousesensitive graphical interface displays the case graph from user-specified indexing perspectives. 
1 control flow and system features 
the control flow of bankxx is straightforward in that it follows from our framing argument as classic heuristic search  as described in section 1. 
   the user inputs a frame-based description of a debtor's situation  including a description of the repayment plan and the debt. unless the user specifies a start node in the case graph  e.g.  a legal theory to be tested   the system begins by analyzing the problem in terms of its domain factors. after this analysis  which provides a starting node in legal factor space  bankxx begins search of the case graph. at each iteration in the search  a node is expanded by the neighbor methods and the generated nodes are placed on the list of open nodes; the case-graph node with the highest evaluation score is removed from the open list.  bankxx's evaluation functions are discussed in detail in  rissland  skalak and friedman  1 .  this best node is passed to the argument pieces  which attempt to use that node for support. search iterations continue until a user-provided space or time bound is exceeded  the time bound is measured in  billable seconds  in keeping with law firm time accounting  or until the open list maintained by the search algorithm is empty. the argument pieces are output in their final state  figure 1 . 
1 examples and discussion of retrieval using multiple indexing 
1 benefits of multiple indexing of cases 
because cases are embedded in a case graph rather than a discrimination tree  several paths to each case in bankxx's memory may be traversed  see also  e.g.  
 kolodner  1; turner  1   and this flexibility aids case retrieval in several ways. multiple paths to cases  found through the sequential application of distinct types of indices  can be coupled with case representations at different abstraction levels  and can 
	rissland  skalak  and friedman 	1 
yield a finer retrieval granularity. the use of multiple types of indices also increases the robustness of case retrieval in  real world  domains in which noisy cases can be indexed incorrectly. mis-indexing a case by one index does not render it inaccessible when other indices still provide a path. finally  from a cognitive vantage point  in a richly connected domain like the law people use a variety of indices for reminding or to access information  schank  1 . 
1 examples 
example1: retrieval of too many cases 
　　one desideratum of a legal argument is a legal theory that can be applied to support the desired conclusion. one use of multiple indices is to prune a set of theories  and the cases applying them  if initial retrieval probes return too many. this first example shows how to filter potential theories by using two distinct retrieval paths  which assures that the remaining theories will be relevant from at least two perspectives. 
consider as a new problem the facts of matter of 
akin  1 b.r. 1  bkrtcy. 1 : a graduate of the 
national college of business in rapid city  south 
dakota  filed a chapter 1 plan to discharge student loan and other debts. akin is in the system's case base  but we have removed it and its linkages so it can be used de novo as a problem for the system. 
　　to begin processing bankxx performs factor analysis on the facts of akin  constructs a claim lattice  and extracts the most on-point cases: baez  ashton  canda  hawkins  chura  ali and gibson. a claim lattice is a data structure that represents a partial order of cases by similarity  developed for the hypo program  ashley  1 . these seven most on-point cases are too many to base an argument on; it is desirable to reduce this group to a smaller set that are relevant from several indexing perspectives. 
　　next  one neighbor method of the system traces the links from each of these most on-point cases to the legal theories that are used by them. the gibson  canda and hawkins cases did not apply any recognizable theory  but the following theories were applied by the remaining cases: kitchens-kull-theory  old-bankruptq/act-good-faith-definition  flygare-theory  and estustheory. 
　　in this first access route  bankxx retrieved these theories by visiting in turn the following subspaces in case memory: fact situation space - legal factor space - fact situation space - legal theory space. 
to get to legal factor space  the current fact situation was analyzed for its applicable domain factors. in legal factor space  applying the factor representation of cases  the most on-point cases were extracted from a claim lattice. these most on-point cases exist in fact situation space; links from these cases are followed to the legal theories in legal theory space. 
　　bankxx's neighbor methods reveal another route to legal theory space. the story prototype of akin is student-loan: the unsecured debt is primarily student 
1 	machine learning 
loan debt and alan's fact pattern follows the usual script for debtors attempting to discharge student loans. the case graph includes links from the studentloan story prototype to the cases that have followed that script  yielding a list of student loan cases: severs  ponanski  marsch  gunn  estus  canda  ali  dos-passos  gibson  hawkins  makarchuk  owens and sanabria. 
　　from those cases bankxx retrieves the legal theories applied by them. most of the student loan cases do not espouse a particular theory  but the theories that have been applied are estus-theory flygare-theory principal-purpose-student-loan-disctor and owens-1-factors 
　　to recap  on this second route through the case graph  bankxx's neighbor methods provided the path: fact situation space - legal story space - fact situation space - legal theory space. in legal story space  the cases that follow the student loan script were identified  which brought the search back to fact situation space. links to the theories applied to those student loan cases were traced to arrive in legal theory space. 
　　there are now two paths to estus-theory and to flygare-theory  figure 1 . that these two theories have been found by two different lines of reasoning reinforces their importance: bankxx's neighbor methods are used to reduce the list of potentially useful theories to these two. 
　　the utility of composite indexing is borne out by comparing the actual judicial opinion in the akin case with bankxx's retrieved findings. in the akin opinion  the judge did apply estus-theory  one of the two closely related theories identified by bankxx. this example of sequential application of multiple indices also has identified a starting point for further legal research. the ali case is similar to akin from three perspectives: it is a student loan case  it is dimensionally most onpoint  and it applies the estus-theory. 
　　in this example  multiple indexing paths permitted partial resolution of the  too many  retrieval problem. too many most on-point cases and too many legal theories were retrieved by the first probes of the case base. following indices along useful paths filters the list of most on-point cases and reduces the list of previously applied legal theories to those that are relevant from several perspectives. 

figure 1. two paths  solid arrows and dashed arrows  from fact situation spacato legal theory space. 
example 1: retrieval of too few cases 
we consider in less detail a second example to illustrate that multiple indexing can provide recourse when an initial probe of the case base retrieves insufficiently many cases. in re chura  1 b.r. 1  bkrtcy. 1   involved a debtor who  as a bank teller  had handled a checking account on behalf of her disabled cousin debra. chura applied debra's welfare and social security payments to her own personal use. after a lawsuit  a judgment of $1 was entered against chura. chura filed for chapter 1 bankruptcy  and proposed a 1-month plan1 under which she would pay $1 in total to debra to discharge the $1 judgment. finding the support to argue for confirmation of such a plan on behalf of such a debtor presents a challenge. 
　　to see how bankxx handles this challenge  as in the previous example we remove the chura case and links from memory and take the facts of chura as a fresh problem situation. again  to get a toehold into case memory  bankxx begins with a factor analysis  and extracts the most on-point cases from a claim lattice: hawkins  rasmussen  owens  gunn  easley  gibson and akin. 
　　all but the owens case were decided for the creditors  but owens does not involve outrageous or illegal debtor conduct and is therefore clearly distinguishable from chura. thus the debtor has no most on-point cases for its side: insufficiently many cases have been retrieved. however  the obvious designation of this case as of the dishonest debtor factual prototype indexes into 1 dishonest debtor cases: rimgale  rasmussen  okoreeh-baah  brown  boyd  baez  schaitz and girdaukas. 
　　one neighbor method of bankxx then computes the family resemblance ratings of the dishonest debtor cases to find the most prototypical dishonest debtor case. in order to situate the current problem within family resemblance space  chura itself is included in the dishonest debtor category. the family resemblance measure of prototypicality reveals in fact that chura is the most prototypical dishonest debtor case. this high prototypicality measure supports analogizing chura with the dishonest debtor cases that were decided for the debtor  rimgale  okoreeh-baah and baez. 
　　finally  each of these three cases is linked to the legal theory applied in it: rimgale-theory  okoreeh-baahtheory  and all-the-facts-and-circumstances. 
examining each of these theories reveals that the 
okoreeh-baah-theory holds that the all the facts and circumstances should be taken into account  not just the debtor's unsavory pre-plan conduct. thus bankxx has found a theory and a case to support the debtor's side in chura  notwithstanding the difficulty of that task occasioned by the debtor's conduct. 
1  a plan typically lasts at least 1 months. 
1 related research and summary 
like the bankxx system itself  our line of inquiry relies on diverse precedents. bankxx uses a case base structure similar to conceptual legal retrieval designs in which a graph of cases and concepts with labeled edges captures influences and taxonomic information 
 e.g.   hafner  1    bing  1 ; see generally  mccarty  1  . 
   other case retrieval systems have organized case memory as a graph and permit multiple paths to a case  e.g.  kolodner's cyrus  . turner's medic  uses a case memory of linked discrimination nets  which allows multiple paths to diagnostic schemata. protos  bareiss  1  uses a fixed strategy for classification that takes advantage of three kinds of indexing knowledge. rose and belew's  scalir uses a variety of inter-case links including shepard's citation links and wesf s key taxonomy  but applies spreading numerical activation to search the network  rather than heuristic search. direct memory access parsing  dmap   martin  1   is a case-based architecture that uses a semantic network of case frames that is searched via a marker-passing algorithm to instantiate frames that are expected in the problem context. bankxx is similar to  owens  1   in that repeated probes to the case base take account of  revious memory probes.  bhatnagar  1  and branting  1  have applied a* search to the respective tasks of creating arguments and of matching fact situations and justifications to a graph that represents the current case. 
　　however  our focus differs from these diverse systems. we emphasize how related  multiple index types can rectify retrieval failures  and more generally  how the constraints of argument formation can be incorporated in a heuristic evaluation function that drives case base search. 
　　in summary  bankxx retrieves case and theory support for legal arguments. the indexing scheme used to find the bases for argument takes account of the different kinds of knowledge required for argument and the inter-connections between them. in our experiments  improved case retrieval results  1  when cases that are similar to the current problem from one vantage point are filtered to yield cases that are similar according to several perspectives  and  1  when a complementary indexing scheme is applied if other indexing methods have failed to retrieve sufficiently many relevant cases. our experience with the system is that complementary indexing methods can yield several paths to a case to improve case retrieval. future research will test the appropriateness of best-first search for controlling search of the case graph. 
	rissland  skalak  and friedman 	1 
acknowledgments 
this research was supported in part by the national 
science foundation  contract iri-1  and the air force office of sponsored research  contract 1. we thank matt cornell  kate sanders  elaine whitlock and barbara fell-johnson. 
