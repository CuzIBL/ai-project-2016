 
artificial creatures are autonomous mobile agents that have to react in real-time to sensors and plan and perform actions in the real world. current effective architectures for artificial creatures are behavior-based and use variants of the subsumption architecture. the paper proposes an extension to these architectures in terms of a layer which introduces cognitive capabilities to artificial creatures. this extension is frame-based and uses emergent frame recognition to determine which frame should become active. 
1. introduction 
the construction of artificial creatures has been put forward recently  particularly by brooks  as a new goal for ai. an artificial creature is an autonomous agent that is operating in the real world. it gets information about the environment through sensors  and not through symbolic tokens fed by a human  and it directly executes its actions in the world. the construction of artificial creatures poses a set of challenging problems which are central to intelligence but could be ignored in current knowledge systems research1. these problems include: 
  the symbol grounding problem: how can symbols used by a symbolic reasoner relate to real world objects. 
  the real time problem: how can signals from sen-sors be interpreted in real time  how can planning be performed under extreme time constraints  and how can the resulting plans be made reactive enough to cope in real time with unexpected circumstances. 
  the situatedness problem: how can behavior be defined so that it fits flexibly and dynamically with the situation being faced. 
  the programming problem: how can systems be built up in a modular fashion  i.e. how can new competences be added without having to revise earlier capabilities. 
the solutions so far proposed by brooks and his associates  brooks  1  constitute quite radical departures from traditional ai and are closer to earlier cybernetic models  braitenberg  1 . the main assuptions behind these solutions can be summarized as follows. 
  there is no attempt to build a full centralized symbolic model of the world. instead sensors are almost directly coupled to effectors in a distributed fashion. 
  sensor interpretation  planning  and execution are not put into separate components. instead they are organized around particular competences each of which is implemented by a particular behavior. 
  the behaviors are not explicitly controlled by a scheduler that reasons about when to do what  but they are linked in a network where one behavior may suppress immediately other behaviors. this way of organization is known as the subsumption architecture. 
  more complex behavior is not programmed expli-citly but emerges by the dynamic interaction of the simpler behaviors with the environment and among themselves. 
some effectively working artificial creatures have been demonstrated recently based on these principles. 
we have subjected these assumptions to experimental investigation in a project that is building an artificial creature for the barcelona science museum1. this creature  whose current prototype is nicknamed lola  must operate in real time in the hostile environment of a museum to welcome  entertain  guide  and instruct visitors  mostly children. the creature needs to exhibit intelligence  language communication  a particular character  and emotions. these cognitive capabilities need to be implanted on a firm basis of behaviors that include wall following  obstacle avoidance  target tracking  etc. the hardware of lola contains about a hundred sensors  various processors  a mobile base  and speech input and output. 
although the behavior-based approach gives us ways to handle the physical parts of the task  it is in itself not adequate for the other aspects. for example  there are no elegant ways to internally represent objects with their properties  behavior-based systems react directly to sensors and have no notion of an  object    there is no way to 
keep memory of past events and use that in action selection  it is not possible to classify situations into categories and decide on the basis of that what action to undertake  there are no  variables  which can be bound  filled  with arbitrary objects including objects that are not in view  therefore actions need to be represented for each possible instantiation or actions can only take place over objects or situations that are directly visible to the sensors. what seems clearly needed is an additional layer on top of a behavior-based layer that takes care of the more cognitive aspects. this layer nevertheless needs to remain grounded in the physical layers below it. it also needs to satisfy a number of requirements such as real-time performance and emergence of behavior. 
we are exploring a frame-based architecture  minsky  1  for the cognitive layer. this means that mechanisms like frames  slots  defaults  inheritance hierarchies  procedural attachment  and links between frames are available. frame recognition is the primary mode of operation: the frame s  that best fit the current situation are recognized and this triggers through procedural attachment the scheduling or the inhibition of behaviors at the behaviorbased layer. the choice of a frame-based architecture  as opposed to a logic-based or rule-based one  is motivated partly by the ability of frames to represent in a packaged way complete situations including the behaviors that are appropriate in the situation and the sensor/effector couplings. the availability of slots overcomes also the lack of variables in earlier behavior-based architectures. 
there is however a major unsolved problem in frame theory  namely how frames are supposed to be recognized. exhaustive search is clearly excluded in an artificial creature that works under heavy time constraints and has limited amounts of processing power and memory1. another approach assumes that a lot of domain-dependent heuristics are encoded. for example  the work of schank  et.al.  schank and riesbeck  1  on recognizing which scripts  i.e. system of frames  applies in a given story  typically centers around the introduction of domainspecific information to make the frame recognition problem tractable. this solution is not usable in the present context because  1  it would introduce extra memory usage and computation  and  1  it requires that the  right  heuristics are thought up by human designers and proheuristics   and inflexibility because there needs to be a prior categorization of the set of possible situations in order to express the heuristics. 
we have therefore developed a new approach towards frame recognition which is based on the principle of emergent functionality  steels  1 . no mechanisms are programmed in to help find the frame that best matches. instead  the most appropriate frame  i.e. the one whose slots best fit with objects found in the current situation  emerges as the winner after a dynamical process in which the different frames  fight  among themselves and interact directly with the world through behaviors and their associated sensors and effectors. this process has a gestalt-like quality. also it is completely reactive in the sense that if the situation in the world changes  frame activations change dynamically with it. 
the frame recognition system that is proposed in the paper constitutes a contribution not only to research on artificial creatures but also to frame theory in general. the emergent frame recognition system could be used also in story understanding  for example  in order to find the best matching frame system and the best fillers of all slots within the system. in this paper we concentrate however on the application to artificial creatures. 
the rest of the paper is in two parts. the first part develops the proposed frame recognition system. the second part discusses an example. some conclusions end the paper. 
1. emergent frame recognition 
1. initial definitions 
assume a collection of frames f. each frame f € f consists of an n-tuple f =  s1 ... sn . s = slot-name  slotfiller-descriptionx a slot-filler-description is a list of propositions1. 
assume also a collection of objects o. each object has a list of propositions describing the object. some of these propositions are causally connected to external or internal sensors. a proposition has a certainty c associated with  c 
is a real number between 1 and 1. new objects may be created at all times. new propositions may be added to an object at all times and the certainty c of a proposition may be changed at all times  for example under influence of sensors1 

grammed in. there are also some other disadvantages: brittleness  when appropriate heuristics are not present the system fails to recognize the frame   non-modularity  the addition of new behaviors requires revision of earlier 
van ackcn is one of the chief designers of the functionality. the contributions of maja mataric and rodney brooks in the startup phases of the project are gratefully acknowledged. jorge wasserman  director of the barcelona science museum  has been a champion of the project from the beginning. 
haustive search triggered the research on massively parallel computing in ai  fahlman  1 . but although there are now massively parallel computers  hillis  1  that can in principle do exhaustive search to find the best fit they are technologically too heavy for artificial creatures. 
1
¡¡¡¡ a future version of the theory will incorporate also descriptions with variables which would be local inside a given frame system 
1
 in the implementation operational on the robot  we assume a 
  fixed set of objects and a fixed set of propositions for efficiency 

reasons. 
1 	robotics 

frames have two types of relations between them: specialization relations  the isa-hierarchy  and interframe relations. two frames f1  f1 are connected by an isa-link if they share the same slots but f1 contains additional constraints on the fillers. for example  there is a general frame for object  with specializations for living and nonliving object living objects are further subdivided into group and single individual  single individual is subdivided into adult and child  etc. frame recognition typically proceeds in a top-down fashion. for example  it is easier to recognize that an object is present  using the infra-red sensors  than to recognize whether that object is a child  which requires a combination of pyro-sensors  pitch detection  and prior expectation . the fact that framerecognition is typically top-down is an emergent property however  simply because frames near the top of isahierarchies have less conditions and are therefore easier to satisfy than frames near the bottom of the hierarchy. 
interframe relations implement inhibition and enforcement relations between frames. for example  often a frame for an emotional state will be in direct competition with frames of other emotional states. thus the anger-frame and the happiness-frame inhibit each other  whereas the frustration-frame enforces the anger-frame. the interframe relations can also be used to implement expectations  for example a frame for an action may enforce a frame for the next action in a sequence   or weak forms of planning  a frame for an action enforces frames for actions that could make its preconditions true . 
besides a set of slots and objects filling these slots  a frame contains also a set of behaviors which take the fillers of the slots as parameters. these behaviors are identical to the behaviors found in subsumption architectures. for example  the dance frame has an associated behavior that causes the robot to dance  while still avoiding obstacles  etc. - the subsumption architecture remains in force at the level of behaviors . 
1. the theory 
the frame recognition system uses the metaphor of flow of energy in a network. every frame has a particular strength  called the frame-strength. it is a real number that indicates how well the frame fits with the present situation. the frame strength can also be viewed as an indication of how much energy  strength  the frame has. the initial strength comes from a partial fit of the frame with reality  for example  some of the slots could be filled  or from possible reenforcement through interframe relations. this helps the frame to pull other objects into its slots and to compete with adversaries for the same objects. as more objects fill the slots  or better fit the slots   the frame gains progressively more strength and is therefore able to pull even more. interframe relations further influence positively or negatively the frame strength. a frame has been recognized if the framestrength is greater than a certain treshold  close to 1 . when this is the case the behaviors associated with the frame are activated. 
we call the relation between an object and a slot a link. 
the frame strength is partly determined by the strength with which a particular object fits within a certain slot. this is called the link strength. we now first describe the influences on the link strength and then the influences on the frame strength which is based on the link strength of its constitutive slots. initially the frame-strength of all frames is set to a very low value  e.g. 1 . 
/. impact on link strength 
the link strength is determined in a series of steps: 
1. the initial link strength mj of the link j between an object o and a slot s of a frame f is based on the match between o and s. this match is a weighted sum based on how many properties are present and how high the certainty is of each property. it is similar to a perceptron-like decision process. let  
1. objects that fit in the same slot compete  figure la.    cj is therefore qualified as follows: 

where if is equal to a  global  parameter known as the inhibition factor which determines how big competitive influence is between objects competing for the same slot. furthermore 

where k ranges over all links from objects to the same slot s. 

figure 1. types of competition between objects in a slot. 
1. the link strength is influenced by the frame strength distributed proportionally over all slots in the frame leading to a qualified link strength sj: 

i ranges over all links coming out of the slot s of the same frame f. fs  is the current frame-strength. 
1. there is competition for link strength if the same object fits in more than one slot  figure lb.   leading to a qualified link strength qj. 

	steels 	1 

where i ranges over all links from an object o to any slot 
s. 
1. there is a small random factor for avoiding dead-lock situations when two objects fit equally well in the same slot of the same frame and all else is equal. 

1. frame strength is the sum of the best link strengths 

where m ranges over all slots in f and rm is the best r value for m. 
//. impact on frame strength. 
1. the frame strength fs is further qualified by the excitatory or inhibitory relations between frames: 

where j ranges over all frames related to f  ri j is the excitatory/inhibitory relation between i and j and n is the number of frames related to f. 
the computation keeps circling through the steps outlined above  starting with step 1  so that there is a continuous updating and interaction with the world. 
///. activation 
there are two types of frames depending on the associated actions. the first type  called a releaser-frame  has actions that have an impact in the real world  e.g. frames activating dancing behavior  exploratory movement behavior  etc. . the frame is recognized if the framestrength is greater than a certain treshold  close to 1 . when this is the case  the behaviors associated with the frame are activated and the frame itself gets a strongly reduced frame strength. note that the functions that call the behaviors have variables which are determined on the basis of the contents of the slots. thus there could be a frame for going towards a particular target. the associated behavior starts moving towards the target but the target itself is a variable based on which location fills the target slot in the frame. these frames are called releaser-frames because their operation implements the  releaser  behavior described by ethoiogists like tinbergen. a second type of frame has actions that change the internal state of the agent  for example  frames that recognize what kind of object is there or that determine the emotional state of the agent. these frames are continuously active  in the sense that they continuously update the features they have an impact on. 
1. justification 
the theory proposed above satisfies the general structure of systems with emergent functionality  steels  1 . we find the required feedback relation because link strength increases frame strength which increases link strength. how to find the best frame at a particular point in time is not programmed in but emerges by the dynamics which is at a level below the actual frames. this dynamics is influenced by the fit between a frame and the current situation and by the competition between frames. notice that default-handling follows as a side effect of the proposed dynamics  because the link-strength between the default filler and the frame is very weak and therefore easily overridden by an object that may also fill the slot. 
1. implementation 
various implementations have been constructed of the system proposed here1. one runs on a symbolics lisp machine and is essentially an environment for interactively exploring different frame systems. it includes a graphical interface and measuring apparatus to follow the dynamics. a frame language has been designed to make it easy to define frames. 
a second implementation has been developed to run on physical mobile robots. this implementation is written in c and downloaded on on-board processors. the frames are compiled into c datastructures. the emergent frame recognition system runs in conjunction with a behavior language similar to the one described by  brooks  1 . underlying the behavior language is a scheduler which schedules the processes implied by the finite-state machines defining particular behaviors. 
1. an example 
in this section an example is briefly discussed. the example is necessarily simple due to space limitations. we assume two releaser frames each describing a possible action. one frame is called communicate-move-request. it has slots for communicate-with  state  and goal. its associated action performs a communication through the speech output channel to produce a request to move out of the way. the matching state of the agent is described as talkative  in-a-hurry  etc. the goal state includes movingtowards-target. the other frame is go-around-object. it has slots for object  state and goal. the state includes features like frustration and exploring. the goal includes also the feature moving-towards-target. when this frame becomes active it causes a behavior to go around the object that is filling the object slot. there are other frame-hierarchies needed for the example  such as the hierarchy of objects displayed in figure 1. 

figure 1. frame hierarchy of objects. 

was implemented by piet ruysselinck. 
1 	robotics 

assume a situation where there are four objects: objectin-front  object-in-back  object-to-left and object-to-right. each of these is competing for the communicate-with slot in the communicate-move-request frame and the object slot in the go-around-object frame. the state of the agent potentially fits in the state slot of the communicate-moverequest and the go-around-object frame. the goal of the agent potentially fits in the goal slot of these two frames. the features associated with the objects and their associated certainties are as follows1: object-in-front: object  1   living  1   child  1   noisy  1   pushy  1 . object-in-back: clear  1 . 
object-to-left: object  1   non-living  1   big 
 1 . object-to-right: clear  1 . 
the state of the agent includes the following features: talkative  exploring  in-a-hurry 
the goal includes moving-towards-target 
the following simulation results list the evolution of the various link strengths and frame strengths after one sweep through the algorithm: 
 after step 1  
goal into goal of go-around-object is 1 
goal into goal of communicate-move-request is 1 state into state of go-around-object is 1 
state into state of communicate-move-request is 1 
object-to-right into object of go-around-object is 1 
object-to-right into communicate-with of communicate-move-request is 1 
object-to-left into object of go-around-object is 1 
object-to-left into communicate-with of communicate-move-request is 1 
object-in-back into object of go-around-object is 1 
object-in-back into communicate-with of communicate-move-request is 1 
object-in-front into object of go-around-object is 1 
object-in-front into communicate-with of communicate-move-request is 1 
 after step 1  
goal of go-around-object into goal is 1 
state of go-around-object into state is 1 
goal of communicate-move-request into goal is 1 
state of communicate-move-request into state is 1 
communicate-with of communicate-move-request into object-in-front is 1 
communicate-with of communicate-move-request into object-in-back is 1 le-1 
communicate-with of communicate-move-request into object-to-left is 1le-1 
communicate-with of communicate-move-request into object-to-right is 1e-1 
 after step 1  
goal into goal of communicate-move-request is 1 
goal into goal of go-around-object is 1 
state into state of communicate-move-request is 1 
state into state of go-around-object is 1 
object-to-right into communicate-with of communicate-move-request is 1le-1 
object-to-right into object of go-around-object is 1 
object-to-left into communicate-with of communicate-move-request is 1c-1 
object-to-left into object of go-around-object is 1 
object-in-back into communicate-with of communicate-move-request is 1le-1 
object-in-back into object of go-around-object is 1 
object-in-front into communicate-with of communicate-move-request is 1 
object impact from object-in-front into object of go-around-object is 1 
frame strength go-around-object is 1 frame strength communicate-move-request is 1 
the global evolution of the various frames is displayed graphically in the following figures. the first figure shows how the communicate-move-request frame gradually wins over the go-around-object frame. 


object of go-around-object into object-in front is 1o1& figure 1. evolution of frame-strengths. 
object of go-around-object into object-in-back is 1 
object of go-around-object into object-to-left is 1 
object of go-around-object into object-to-right is 1 
   1  these features are themselves connected to sensors  infra-red  sound  pyro  touch  etc.  or groups of sensors which themselves have specific certainties. 
	steels 	1 

the next figure shows the evolution of the strength of the links between the objects and the slots for the go-aroundobject frame. notice how the strength gradually diminishes for all of them. 

figure 1. evolution of link-strengths for go-around-object frame 
finally the following figures show the evolution of the link-strengths for the communicate-move-request frame. we see that the link-strength becomes progressively stronger. 

figure 1. evolution of link-strengths for communicatemove-request frame. 
1 	robotics 
acknowledgement 
this research is partly sponsored by the belgian government impuls program on ai and partly by nato grant crg1. hein saris has made valuable contributions to the contents of this paper. 
