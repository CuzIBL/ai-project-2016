 
　in this paper  we consider the problem of temporally coordinating the resource demands of a set of independent agents. we assume that resources are unreliable  making it necessary to retain imprecision in the execution times assigned to specific agent operations. to this end  a probabilistic model of resource allocation is developed for use in estimating the consequences of execution intervals  representing sets of possible resource allocation decisions . this leads to a probabilistic representation of requests for resource usage for which resource congestion constraints can be defined. we consider two applications of the framework: prediction of bottleneck resources and time bound scheduling. 
i coordinating resource usage in multi-agent planning 
　multi-agent planning involves coordination of the operations of a set of independent agents so as to achieve the goals of each individual agent. of central importance here is consideration of the possible interactions among agents  which can lead to situations of mutual advantage  in the case of cooperative agents  or interference  if agents have conflicting objectives and do not cooperate . research in multi-agent planning  1  1  typically assumes that the goals being pursued by agents relate strictly to the achievement of a certain state. emphasis is placed on determining  how  this state can be achieved in the presence of other agents. in time-constrained problem domains  however  the goals of agents often relate more to  when  a specific state can be achieved than  how . the problem of factory scheduling  which has been the context of our work  is perhaps an extreme example of this situation. parts must be produced for multiple orders  agents  to meet imposed deadlines  minimize production time and satisfy other factory objectives  and the primary source of interactions among agents is the need to share resources  e.g. machines  operators  tools . interactions among agents in this domain very rarely prevent achievement of each agent's desired state  i.e. the finished parts  but can significantly affect the circumstances under which this desired state is achieved  e.g. the finish date  the duration of the production process  etc j. dealing with these types of interactions is the subject of this paper. 
　assuming a cooperative planning framework  there is much to be gained by anticipating situations of resource contention and attempting to temporally coordinate requests for these resources. analyses of projected resource demands can guide individual agents in planning to achieve their goals  e.g. specific resources to avoid when possible . advance coordination of demands for heavily utilized resources can maximize the common utility of agent's plans  e.g. make the most efficient use of shared resources  . an important 

　*this research was supported in part by the air force office of scientific research under contract f1-k-1 and the robotics institute  and was performed while nicola muscettola was a visiting scholar in the intelligent systems laboratory of the robotics institute. 
stephen f. smith 
the robotics institute 
carnegie mellon university pittsburgh  pa 1 usa 
issue  of course  is the level of detail at which  deals  among agents concerning future resource usage should be made. while we might expect that precise temporal coordination of requests for each shared resource would lead to the best possible plans  such plans ignore the dynamics of the planning environment. resources are characteristically unreliable  e.g. susceptible to unanticipated periods of unavailability  sometimes fail to produce the desired effect  etc.   and consequently  advance commitment to a detailed course of action and timetable is of little use. agents should seek less precise agreements concerning resource access that can usefully guide plan refinement as the external environment allows and requires it. 
　less detailed agreements among agents require more abstract problem descriptions. to this end  we can formulate problems in which agent operations require capacity on aggregate resources  representing functional groupings of individual resources  over their expected durations  and we will assume in this paper that both the amount of capacity required by a given operation and its duration are fixed approximations of more detailed suboperation characteristics. we also assume that resource capacity is required throughout an operation's duration. as with the identity of the resource that will be used to perform a given operation  we would like to remain imprecise with respect to operation execution times. this  however  presents a difficult problem. classical deterministic scheduling methods  must make specific allocation decisions in order to take resource capacity constraints into account this defeats much of the purpose of abstracting in the first place since the resulting plans will designate a single point in the temporal dimension of the abstract solution space. we might consider generalizing these temporal constraints to delineate sets of possible allocation decisions after the fact. however  given the high degree of interaction between allocation decisions  it is difficult to imagine how this could be accomplished in any meaningful fashion. we might also consider reasoning with a coarser granularity of time at the aggregate level  e.g. time steps of hours instead of minutes   but this also introduces temporal imprecision in a fairly arbitrary fashion. 
　in this paper  we present an approach to reasoning with temporally imprecise requests for resource capacity  representing sets of possible allocation decisions  that provides a oasis for producing more meaningful aggregate plans. this is accomplished by adopting a probabilistic view of resource allocation and injecting randomness into the decision-making process. at the same time  we can describe characteristics of the stochastic allocation process that enable the definition of consistency constraints analogous to those that would result from a deterministic model. furthermore  we can bias the stochastic process to reflect the strategies and preferences of the actual deterministic allocator  i.e. the generator of final decisions for actual execution . 
ii probabilistic resource allocation 
　as stated above  we propose the use of a probabilistic model of resource allocation as a means of reasoning about sets of possible allocation decisions. we are interested in a 
	muscettola and smith 	1 
　
mechanism for evaluating an abstract  temporally underconstrained set of plans with respect to its expected requests for resource capacity. our approach is to develop a 
random model of the actual resource allocation process  ana to use the probabilistic characteristics of randomly generated allocation decisions as the basis for plan evaluation. in modeling resource allocation as a stochastic process  it is crucial tnat the random allocator take into account not only the restrictions specified in the abstract plan  but also the preferences and strategies of the actual deterministic allocator. thus  we will conceptualize the allocation process as consisting of a random start time generator  rstg  that stochastically selects a specific allocation for each operation in accordance with this larger set of constraints  which we will call the rstg-constraints. we will refer to the set of allocation decisions produced by rstg as the rstgallocations. 
a. constraining the random allocation mechanism 
we distinguish three different types of rstg-constraints: 
　1. temporal constraints - these constraints refer to the earliest start time and latest end time restrictions associated with each operation opr since we assume that each opi has a fixed duration  designated henceforth as bopp these constraints define the set of the possible start times for each opp sti opt   start times interval   an interval of time bounded by est op   the operation's earliest start time  and lst op   its latest start time** the temporal constraints  and consequently the st/s  associated with operations belonging to the sameplan must be mutually consistent. consider figure 1  where stl op1  is depicted in the context of a two step plan. in this case  est op1  must not precede r  in time  since stl op1  would otherwise contain allocation possibilities that would introduce a conflict similarly  ist op 1 must not precede t1 in time. these consistency conditions are precisely those that are maintained in many existing temporal planners  e.g.  . sti op  must also be consistent with currently imposed resource capacity limitations. such consistency conditions are discussed in section iv. 
　1. allocation strategy - this constraint dictates the sequence in which allocation decisions will be generated. it specifies a partial ordering of all the operations constituting the planning problem. for example  a plan by plan in priority order strategy dictates that all operations of a given agent's plan will be considered before those of any agents with lower priority. operations belonging to the same plan are ordered according to a given plan scheduling strategy  e.g. forward from the first operation . 
　1. preference 	constraints 	- 	these constraints define 

   to simplify the presentation below  we assume stl op  to be a connected interval. the framework can be easily generalized to accommodate a discontinuous set of possible operation start times. 
1 	reasoning 

figure 1: a two operation plan with op1 starting at time t1 
objectives and concerns that influence actual allocation decisions. as has been pointed out in previous research  1  1   we can model specific allocation preferences as real functions over time that estimate the relative desirability of various allocation decisions. for example  if an operation has a fixed due date with a delay penalty  we can express the tardiness constraint as a function that decreases after the due date at a rate proportional to the marginal tardiness loss. constraints on finishing early  e.g. factory holding costs  can be expressed similarly  with the utility function increasing until the due date is reached in this case. the formulation of other allocation preferences depends not only on problem characteristics  as do the above examples  but also on prior allocation decisions. a desire to minimize idle time between operations  for example  can be expressed with a utility function that decreases from the current earliest start time of a given operation onward. however  this constraint is meaningful only in the case of an op. that is preceded in the allocation strategy by one or more upstream operations in op's plan  and its exact structure can be defined only when actual allocation times have been determined for these preceding operations. nonetheless  all active constraints are known when making a specific allocation decision  and we can therefore obtain their combined  level of satisfaction . 
b. modeling the behavior of the random allocation process 
　we can derive  for each op the probability of it starting around a certain instant of time in sti op   expressed by the density pft oprt . this is of central importance to our approach  as we will see in section iii when we consider the representation of a resource's available capacity. here  we consider our model of the behavior of rstg and the 
derivation of 
　as allocation decisions are generated by rstg  it is quite possible that sti opt  for a given opi will become further constrained. in figure 1  for example  the decision to schedule op1 at r1 constrains rgst to start op1 after t1 we will refer to actual set of possible allocation times for op. at the point it is considered by rstg as astl pp   actual start times interval . since asti op  is a function of random decisions  its limits are themselves random variables. 
　rstg will select a start time in asti op  according to a choice rule  a density of probability that defines  for every point in asti op % the likelihood of the start time falling in its neighborhood. the choice rule is constructed to reflect the combined value of all active preference constraints according to the following criterion: 
　choice rule criterion: given two possible start times t1 and t1 if the value of the combined constraints at t1is c times that in t1 the likelihood of selecting t1 will be c 
　times that of t1 
 if astl op  is the interval we indicate the choice rule for opi with if v r  is the 
value in t of the combined active constraints  the choice rule 
criterion becomes 
　
　this completely determines the choice rule and together with the normalization condition for a density of probability we have: 

we are now ready to determine pst opt f  over sti op . 
first some notation. we will assume that the operations in a given plan are indexed sequentially from the first operation to the last. further  we will indicate with prec op   resp. foll{op   the set of operations belonging to the same plan as opi that both precede  resp. follow  it in the allocation strategy and precede  resp. follow  it in the plan. 
we distinguish three cases: 
1. both prec{op  andfoll op  not empty. 
asti op  is therefore determined by the start times generated for opr the operation with maximum index in prec{op  and opr  the operation with minimum index in foll{op . if these are respectively t1and t1 the left and right limit of astl{op  are given respectively by: 
	where 	indicate 	with 
pst{oprt1prt1  the conjunct density of probability of the start times of opl and opr to be respectively t  and tt we have: 

1. only one ofprec op  or foll op  empty. 
suppose prec op  is empty. then asti op  is always limited to the left by est op . we have: 

a similar expression holds if foll op  is empty. 
1. both prec op  and foll p  empty. 
we have trivially: 

　notable special cases follow from assumptions concerning the allocation strategy that are typical in scheduling/planning work. assume that the first and last operations in a given plan are indexed m and n respectively. if allocation decisions for the operations in the plan are generated sequentially starting from the first operation and moving forward  we have: 

　similar expressions hold if allocation decisions are made sequentially starting from the last operation and moving backward. moreover  these forward and backward formulas can be directly extended to strategies in which the operations in a plan are scheduled outward from some initial anchor  e.g. a bottleneck operation . 
ill probabilistic representation of capacity requests 
we can now represent the consequences of rstg-
allocations with respect to a resource's available capacity. from the resource's point of view  the capacity requested by an rstg-allocation is a discrete stochastic process  r opp . 
at any instant of time / the process can assume a value n the units of capacity needed for the execution of opr or a value 1  if the operation is not allocated over t. the instantaneous probabilities of these values are respectively: 
time t  r{resk t 

where q. is the set of operations allocated on the resource. 
　from the description of rstg in section ii  we see that distinct rstg-allocations on the same resource are statistically independent. rstg can indeed consider the effects of prior rstg-allocations in generating a particular allocation  but only indirectly through the currently posted rstg-constraints. given this statistical independence  it follows that if the number of allocations that overlap at time t is sufficiently high  we can approximate the first order distribution of r resk   with a gaussian random variable  with mpun and variance crivpn bv 

　we now need a way to compare the requests of capacity with that actually available  to detect or avoid possible situations of overflow. notice that if we wanted to prohibit rstg from generating overflow situations  we should post rstg constraints that would imply  once implemented  a very low load on the resources. however  since rstg is not intended to generate actual executable allocations but rather to evaluate constraints  we will adopt a less strict criterion that generalizes from deterministic methods for detecting capacity violations. we say that a resource is congested at time t if the probability of a high instantaneous request of capacity in t is greater than a fixed threshold . if c resk  is the actual capacity of resk and t is the congestion threshold  we can express the congestion constraint with: 

	muscettola and smith 	1 
　
　where denotes the cumulative distribution for a standard normal random variable. 
　we note in passing that in addition to detecting overflow situations  we can use this constraint to deduce the maximum instantaneous probability of a given request for capacity that does not induce an overflow  assuming constraints over the allocation of other operations have been fixed. this is discussed further in . 
iv applying the probabilistic framework 
　depending on what kind of rstg-constraints are specified and how they are posted  the probabilistic framework can have different uses. we describe two applications below. 
a. bottleneck detection 
　the opportunistic job-shop scheduling methodology described in  1  obtains notable advantages by first making allocation decisions at critical  i.e. bottleneck  resources. since bottlenecks can vary depending on the characteristics of the scheduling problem  this methodology requires a focusing mechanism that identifies potential bottlenecks from a specification of the current problem. 
　conceptually  we can define a probabilistic bottleneck detection mechanism as operating in two steps: 
1. assuming no interactions among agents  i.e. infinite resource capacity   rstg is used to produce a schedule for each agent in accordance with its personal constraints  e.g. due date . 
1. the consequences of these uncoordinated decisions are assessed with respect to available resource capacity. a resource will be considered a bottleneck during time intervals in which the congestion constraint of section iii is violated. 
　correspondent to this definition  the rstg-constraints posted for bottleneck detection will satisfy the following conditions: 
  since the goal is to analyze the effect of the initial temporal constraints of the problem  sti op  for a given opi will be the largest interval compatible with the release and due dates of the plan containing opr 
  independence among agents implies that the allocation strategy will not impose ordering relations between operations belonging to different plans. operations belonging to the same plan might be ordered according to some internal strategy  e.g. forward scheduling . 
  for analogous reasons  only preference constraints related to temporal aspects of plans  e.g. work-inprocess time  will be posted. 
　to see the advantage of this probabilistic mechanism  consider a deterministic counterpart. in this case  bottleneck analysis must be based on one potential shop schedule  e.g. the best possible schedule for each agent   and  consequently  the analysis is subject to idiosyncratic results  e.g. detected resource congestion might  in fact  disappear if one or more agent schedules where slightly altered . the probabilistic mechanism avoids this problem by considering the consequences of a set of possible solutions. 
b. time bound scheduling 
　another application is time bound scheduling  the establishment of temporal constraints on each operation that refine initial problem constraints  i.e. release and due dates  without committing to specific allocation times to identify a solution sub-space from which the final executable scheaule will be generated. in this case  we assume a scheduling 
1 	reasoning 
mechanism that iteratively adds  posts  rstg-constraints  e.g. fixes an ♀1  for a previously unconsidered operation on each iteration. rstg is used at each step to estimate the consequences of the constraints posted thus far  enabling the scheduler to avoid situations of resource congestion in its future decisions. 
　there are two ways in which knowledge of resource congestion can be included in the rstg-constraints: 
  in establishing a new sti op t time intervals in which resource congestion is already over the congestion threshold can be excluded. this consistency constraint is the analog of a resource unavailability constraint in deterministic representations of available capacity  e.g. 
 . 
  preference constraints can be introduced to weigh alternative allocations in asti pp   using a utility function inversely proportional to the level of congestion of the resource. 
v final remarks 
　we have presented a framework for evaluation and generation of abstract plans in resource-constrained problem aomains. our current research centers on the development of a computationally inexpensive implementation in the context of bottleneck detection. in particular  we feel that both pngg and pst can be reasonably approximated with piece-wise constant functions over time. 
