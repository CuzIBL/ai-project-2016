 
this paper describes a transportable natural language interface to databases  augmented with a knowledge base 
and inference techniques. the inference mechanism  based on a classical expert system's type of approach  allows  when needed  to automatically convert an input query into another one which 1s  semantically close . according to reseda's theory   semantically close  means that the answer to the transformed query implies what could have been the answer to the original question. the presented system integrates natural language processing  expert system and knowledge representation technology to provide a cooperative database access. 
i. nitroductoin 
   most of the existing natural language interfaces  nlis  to databases - too numerous to be cited - free the user from learning the cumbersome and difficult syntax of formal database query languages. still they impose a very strict semantic model  which corresponds to the way a real world domain is represented 1n a particular database  db . 
   it is therefore difficult to produce a  valid question  without being aware of the structure of the database concerned. this issue is the main concern of the saphri+reseda  euzenat et al.. 1a. 1b  research project at erli.* saph1r  normier  1  normier et al.. 1  our transportable  domain independent nll to databases  is in the course of being provided with a relatively general knowledge base  kb  and associated inference mechanisms. 
   before going into the technical details of this new system  let us show a typical problem that saphri+reseda will be able to handle. 
   suppose that you want to ask a question such as  who has ever been in the us   and that youn staff management database does not contain any information concerning the employees' excursions. suppose further that the db knows 
instead where each one of them was born and what their 
degrees are  
   using simple common sense knowledge  without accessing the database  we can tell the user that although we do not explicitly know who has been in the usa  we can nevertheless look for people born there and/or having an american 
degree. if the user accepts this proposal then we transmit the modified query to the dbms. 
  this research was supported in part by the  agence de 
informatique  research contract adi-1 
   figure i contains a simplified flowchart of our system capable of such rational behaviour 
+ * 
| 	natural language query i i 	i i | | 	general 	parsfr 	| | | |  domain independent but language dependent  | | i 	i i | deep predicate representation | |+ 	  	  .
ii 	i | 
i || 	/ does this have 뫢 	| || 	/a representation     yes query the db | 
|| 뫢 in the particular / 	| 
| | 		dc 	database r  	/ 	| 
| | 	 	/ 	i 
ii 	| no 	| 
|| 	| 	transformatoin mechansim | 	| 
i i i 	in the  reseda style  	| 	i 
|| |  uses a  general  knowledge 	base | 	  
i i 	i 	i 
|| a  different  deep predicate representation 	| 
i	i	i 	! 
figure 1 
   first of all the natural language    e french query is parsed and partially disambiguated  using structure 
rules  gross. 1  and a syntactical grammar of french in some cases the parser resorts to simple clarifying dialogues as the result of this analysis  a predicate representation is produced it carries the meaning of the user's query due to space limitations the parser will not be presented here 
   the. system has at its disposal a model of tne structure of the database being accessed  a special predicate calcuius description  close to the conceptual schema  so it 
can check whether this query is a meaningful request to the database if it is meaningful  then the syster translates the deep predicate representation into a corresponding formal query language formula  this is how our existing nli - saphir proceeds  currently we can produce qbe. sol  adadas and clio translations  

1 a. ogonowski 
모however  in many casts the query will not map directly onto the database. 
   instead of simply telling the user that his question 1s not  the question to ask   we will try to transform his request into something meaningful in the particular database and semantically close to the original request - this part of the system is based on g.p. zarri's reseda system  zarn. 1. 1a. 1b. 1c  we define  question1  to be semantically close to  questlon1  iff the answer to  questlon1  is implied by the answer to  question1 . 
iii. the knowledge base 
note that kb1 is not specific of a particular database  the system can use the same kb1n order to access different personnel databases of the same company. 
the model of the database itself  the most specific level of knowledge  is not included here since 1t does not take part directly in the transformation process. 
iv. types of knowledge. 
모모any one of the kbs mentioned above may contain two types of knowledge: factual knowledge and rules  represented in a formalism based on reseda . 

   to achieve this  we need of course the knowledge of what is  semantically close . 
모in the example presented above the system was able to transform the original question  because it knew that  if a person is born in a particular place then that person 
a. factual knowledge 
a fact such that  a university is in a city...   which 
is a piece of factual knowledge. 1s represented by the highlighted part of figure 1. 

must have been in that place at least for a short period of time . 
each kb1   kb1 couple is transportable  as 1s . as long as we do not switch to a completely different domain 

note that: 
a. this is a deep case representation with a limited num-ber of predicates   deep verbs  . 
b. the direction of the arrow is following reseda's con-vention. from a practical point of view the arrow indicates that the right-hand side schema is allowed to 
replace something that matches the left-hand side schema. conceptually 1t means that the information possibly retrieved using the right-hand side schema implies the information searched for. by the  original  left 
hand side schema. 
rules can place restrictions on variables  as is the case in reseda . for instance  the rule shown above could have required that  x  be a human being. this rule would then apply for  x 뫴 y . where  y  is known to be a teacher. the match  between x and y  1s made possible  because we have stored 1n the factual knowledge representation the fact that  teacher '1s a' human be1ng . 
   standardization rules are used to translate the parser's output  containing surface verbs  into a more canonical form. i.e. usable by transformation rules. all of the standardization rules belong to the kb1 level  as 
they are absolutely general. 
v. the inference engine 
   we are in the course of developping  december 1  a prototype version with an  exhaustive  engine. meaning that all the possible transformations are executed  with simple destructive chronological backtracking  until a representation is found. this approach is very close to the reseda inference engine  see zarrl. 1c. for a description of the later one  
   this simplistic approach 1s justified since our current knowledge base contains only  kb1  types of knowledge.** we are planning to move onto more sophisticated approaches  ex. choosing among several representations in the database of the same question  a.so...  after the prototype has been well tested. 
vi. conclusions 
   the presented nli system is designed to tackle issues such as transportability and  helpful understanding  of a naive user 
모모transportability  the first issue. has been examined in many research systems. however all of these seem to lack a clear distinction between different levels of transportability of the knowledge represented  ham-ans. hoeppner et al. . 1 seems to be an exception  
   in addition saphir+reseda 1s using general common sense knowledge  reference hemphill and rhyne. 1. describes a project where the use of schank's general formalism 1n db queries has been explored  but its goals seem to be more limited than ours . 
   the second issue is somewhat close to   cooperation  as defined in the co-op system  kaplan. 1  kaplan 
a. ogonowski 1 
however seems to consider only the case where the db produces a null answer. we believe his and our approach to be complementary. 
   our system uses rules to produce a db query  this 1s similar to a deductive dbms approach. however our rules are not formal and we never access the database in the course of transformation  because in most real world cases 1t 1s prohibitively expensive . 
