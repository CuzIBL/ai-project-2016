 
we have recast the problem of truth maintenance in a setting of algebraic equations over boolean lattices. if a method of labeling propositions to justify them according to some reasoning agent's constraints of belief happens to conform to the postulates of boolean lattices  the labeling system can be reformulated as an algebraic equation solving system. all truth maintenance systems known to us can be so reformulated. this note summarizes our investigations into the existence and structure of solutions of these algebraic systems. our central result is a unique factorization theorem for lattice equational systems and their solutions. our theoretical results are interpreted to compare various styles of truth maintenance and to reveal certain computational difficulties implicit in the algebraic structure of truth maintenance. 
	i. 	introduction 
lattice-theoretic truth maintenance is a single theoretical framework that subsumes various notions of truth maintenance  including the assumption-based justifications reported by de kleer  de kleer  1  de kleer  1a  de kleer  1b  de kleer  1c  and the nonmonotonic justifications reported by doyle  doyle  1a  doyle  1b  doyle  1 .and goodwin  goodwin  1  goodwin  
1  goodwin  1  goodwin  1 . our complete body of work on lattice-theoretic truth maintenance includes 
  an analysis of the algebraic structure of truth main-tenance 
  an investigation of the abstract and concrete compu-tational complexity of truth maintenance 
  a formal account of the embedding of other forms of truth maintenance in the lattice-theoretic paradigm 
in this note we focus on the first aspect  because of its intrinsic interest  and because this aspect is a precursor to the others. our express aim here is to present the latticetheoretic account of truth maintenance  cite the more im-
   *this work was partially supported by the defense advanced research projects agency  darpa  under usaf/rome air development center contract f1-c-1. views and conclusions contained in this paper are those of the authors and should not be interpreted as representing the official opinion or policy of darpa or of the u.s. government. 
portant algebraic results vis a vis this account  and interpret these results so as to cast a qualitative light on various computational considerations of truth maintenance. readers interested in other aspects of our theoretical work or our practical experience with an implementation embodying this theory are referred to  benanav tt a/.  1 . 
     the initial motivation for this work was the desire to unify in a single abstraction the truth maintenance paradigm of doyle and goodwin  and that of de kleer. the systems of these investigators can be viewed as constraint propagation mechanisms. given a disjunctive set of sets of premises and a set of  monotonic  deductive constraints  de kleer's atms tells a client problem solving system what things it is currently obliged to believe  assuming one or another of the sets of premises. doyle's and goodwin's tms's  on the other hand  tell the client problem solving system what things it is currently obliged to believe  given a single set of premises under deductive constraints  some of which may be nonmonotonic in nature.* our original intuition was that it should be possible to account simultaneously for multiple sets of premises and nonmonotonic deductive constraints.**'*** 
　　this intuition arose from the striking similarity observed between the computations of truth maintenance systems and the computations of global flow analysis 

   *a monotonic deductive constraint obliges a rational agent to believe its consequent  given that it currently believes all of its antecedents. a nonmonotonic deductive constraint obliges a rational agent to believe its consequent given that it believes all of its monotonic antecedents and none of its nonmonotonic antecedents. 
　 the intellectual challenge of unifying these two approaches to truth maintenance is sufficient motivation for proceeding. nonetheless  we note that de kleer  de kleer  1b   and morris and nado  morris and nado  1  are practically motivated to augment their assumption-based truth maintenance systems to support some form of nonmonotonic justification. in our approach nonmonotonicity will be  built-in  rather than  added-on . although we will not do so here  it can be shown that our conceptually parsimonious approach is at a computational advantage relative to the attempts of de kleer  and morris and nado. 
 ***we have recently been made aware of the work of mcdermott  mcdermott  1  whose perspective on truth maintenance has much in common with our own. indeed  his concrete solution to what we will eventually define as even equational systems appears to be identical to ours  though arrived at from a quite different point of departure. our investigation is broader in both the scope of equational systems investigated  and in the characterization of those systems' structures and solution spaces. 
that underly modern optimizing compilers  aho and ullman  1  hecht  1  schaeffer  1  waite and goos  1 . global flow analysis can be couched in the following terms: given the constraints imposed by individual program statements and their interconnecting topology  what facts is a reasoning agent  in this case concerned with programs  obliged to believe about the state of computation at various points in the program's control flow  in a sense the information propagation problem solved by global flow analysis can be viewed as the dual of the truth maintenance problem. the former assigns propositions to contexts established by various paths through a program. the latter assigns contexts of belief to propositions under various deductive constraints. there are two principal methods of solving information propagation problems. both hinge on solving systems of equations whose unknowns range over the domain of an algebraic lattice. the work that we will describe presently retains the idea of equations over a lattice  but for various technical reasons  principally nonmonotonic constraints  the solution methods used in global flow analysis are inappropriate. a rather different solution method has been developed. 
	i i . 	lattice equational systems 

   *in this report we assume b to be a recursive set  its operators to be total recursive functions  and its partial order to be a recursive relation. 
1 	reasoning 
once on the left-hand side of an equation. the equation on whose left-hand side s appears will be called the s equation  will be sub- or superscripted when it is useful to distinguish among various equational systems. unless the context is ambiguous  we will freely say 'system' without modifiers. a lattice equational system should be interpreted as encoding the way a reasoning agent's belief  or disbelief  in a collection of propositions entails belief in others. if is a lattice equational system such that the right-hand side of each equality is of the form where each xxj is an element of b or an unknown  possibly complemented   then is said to be in disjunctive normal form.* since we can transform any form into dis-
junctive normal form  we will usually treat forms over b and lattice equational systems as if they were in disjunctive normal form. 
   a solution to a lattice equational system   is a function  t  from the lattice unknowns into b such that if for each equation in the system  each unknown s in the equation is replaced by t s  the equation holds in b. moreover  t takes any unknown  s  not on the left-hand-side of some equation in into 1  and in that regard the system implicitly has the equation s = .1. we will interpret lattice equations as constraints. a solution  then  is a labeling of propositions with situation *. in particular  the situations are those in which a reasoning agent is obliged to believe the correspondingly labeled proposition given acceptance of the constraints imposed by the system. we will often subscript t' with the name of the system of which it is a solution. a justification of a disjunctive normal form lattice equational system  is an ordered pair  where s appears on the left-hand side of some equation in and x is a d'sjunct on the right-hand side of that same equation. also  s is called the consequent of the justification d and each conjunct of the disjunct x is called a nonmonotonic or monotonic antecedent of d depending on whether or not it is complemented. the sets of monotonic and nonmonotonic antecedents of d are respectively denoted a d  and a d . a justification  d  is valid with respect to a situation  a  and a solution  t  of an equational system if and only if  
   *we use disjunctive normal form for notational convenience. while its existence is required in establishing some of the formal results that we cite  it plays no essential role in lattice-theoretic truth maintenance computations. 
1. for every justification d  in   valid j1 - d r  
1. every unknown  s'  that is a monotonic antecedent of some d in is also the consequent of some justification d' in 
a solution to a lattice equations  system is well-founded if and only if it is well-founded with respect to the system at every lattice unknown mentioned in the system. 
　　we interpret justifications  validity and well-foundedness in the following way: validity describes the circumstances under which the consequents of a justification are to be believed given the belief status of the antecedents. a 
justification therefore constitutes an independent source of support justifying belief in a consequent. chaining justifications together constitutes a supporting argument. since we wish our arguments to be noncircular  we impose an additional condition  well-foundedness  to guarantee that state of affairs. 
　　let us first consider some uninterpreted equational systems  all taken to be over the boolean lattice  b  having at least two distinct elements: the system 

has one well-founded solution  	on the other 
hand  any of 	are also solutions  though not well-founded. the system 

the classical  odd loop  of doyle's tms  has no solutions  well-founded or otherwise. the system e1 

has one well-founded s	o	l 	the 
system 

the system 
has a single solution founded. finally  


 in  and ＼ as  out   it should be apparent to readers familiar with the tms's of doyle and goodwin how lattice equational systems correspond to their tms nodes and justifications. 
　　the correspondence with de kleer's atms is a little harder to convey  and we shall attempt only an approximation here.* we shall do this by actually interpreting a lattice equational system with respect to a toy application. imagine a simple series-connected circuit consisting of a voltage source  v  of 1 volts connected to resistor r1 at node n1  which in turn is connected to resistor r1 at node n1  which is connected to ground. the application is a program that diagnoses ground faults in electrical circuits. in its truth maintenance database it has the following system of equations  
the situations a  b i   and b1 respectively correspond to the assumption that the voltage source  v  and resistors  r  and r1  are working. s-  corresponds to the proposition that voltage at node n1 is held at 1 volts. s1 corresponds to the conjunctive proposition that the current into the resistor and node n1 is the same as the current out of the resistor  at node n1 and that the voltage drop across the resistor is the product of its resistance and the current through. 1 corresponds to the conjunctive proposi-

tion that the current into the resistor r1 at node n1 is the same as the current out of the resistor at ground and that the voltage drop across the resistor is the product of its resistance and the current through. finally  corresponds to the proposition that the voltage at node n1 is the product of 1 volts and the resistance of divided by the sum of the resistances of   and ~ the equations can now be interpreted as saying that the propositions associated with   and s1 hold whenever the corresponding assumptions can be believed. the proposition associated with 1 is believed whenever the propositions associated with  are believed. a solution to this sys-
tem will tell us the circumstances under which the various propositions are to be believed. since the well-founded solution is  a reasoning agent believes the propositions associated with in situations whose meets with  respec-
tively  	a b1 b1 	and . 
     in the foregoing examples we have made implicit use of the fact that any set of tms or atms justifications has equivalent renderings in the lattice-based formalization. for our last example we consider the classical problem of adding facts to or deleting facts from worlds or 
    readers interested in the precise details of encoding these other truth maintenance systems in the lattice-theoretic paradigm should consult  ben anav et a/.  1 . 
states. to begin with  we interpret situations as worlds or states. we have already asserted that every fact or proposition  p  has an associated unknown  say 1p. we will also posit additional unknowns  sa and sd  corresponding to the beliefs  respectively  that p has been added and that p has been deleted. consider now the system of equations 
. our interpretation of this solution is that a reasoning agent believes p just in case he believes himself to be in a world or state whose meet with a -b is not ＼. in addition  we can use the lattice partial order to encode inheritance among worlds. notice that the fact p will be added to any world  a' such that and deleted from any world  b' such that 
	i i i . 	the existence of solutions 
we have seen how lattice-theoretic truth maintenance is connected to some well known models of truth maintenance; we now turn to the challenge of actually solving truth maintenance problems is this new paradigm. we have already seen in   that solutions need not exist  but even if they do  as in         there may not be wellfounded ones. it is well known that general polynomial equations in rational coefficients cannot be solved by applying the operations of addition  multiplication  and rational root extraction to their coefficients  birkhoff and maclane  1  van der waerden  1 . by analogy we might ask about the solvability of lattice-equational systems by taking meets  joins  and complements of lattice expressions appearing in the equations. put another way  could it be the case that the equations are not solvable by applying the obvious operations to the available data  to answer this question we must first formalize our notion of the 'available data'. 
     a surface element of a lattice equational system e is an element of b that actually appears in e. the boolean lattice generated by meets  joins  and complements over the surface elements is called the surface lattice. an atom of the boolean lattice  1  is any element   l  such that there is no . satisfying 
a lattice is atomic if each of its elements is the join of atoms. if e contains only a finite number of equations  the number of surface elements is finite and thus the surface lattice is atomic. the atoms of this lattice will be called surface atoms. a surface solution is one such that for every lattice unknown  s  that appears in e  t s  is in the surface lattice. consider again the system  e1. note that it has many possible well-founded solutions  depending on the boolean lattice with respect to which the system is being interpreted  of which only two   and 
 are surface. our question posed in the 
last paragraph is answered by the following: 
1 	reasoning 
theorem i i i . l if a finite lattice equational system e over b has a well-founded solution  then  it has a well-
founded surface solution. 
thus we see that if there are any well-founded solutions at all  we are guaranteed that some of them can be computed by taking meets  joins  and complements over the available data. 
     thus far we have established a framework within which we can formally describe truth maintenance problems and within which solutions can be connected with the available data in the equations. for this framework to be truly useful we must provide a way of finding solutions other than by blindly enumerating candidates and testing them. suppose we could obtain a solution. how do we know that this is the only solution  or even the only surface solution  to convey some idea of the challenge of this problem consider the system 
this system has 1n well-founded surface solutions  s is always ＼ and we are free to choose ＼ or t as the value of each of the odd-indexed unknowns. the usual method of solving algebraic equational systems is by using substitution together with other  legal   with respect to the algebraic system in question  transformations to produce a new lattice equational system whose solutions are also solutions of the original. because of the algebraic nature of the meet and join operators there is no obvious way of effecting such a transformation. before introducing the more novel transformation that we will need  let us first formalize the notion of substitution that we will be using. 
     let e   be e less its s equation. systems will be presented always according to some fixed lexical order. this is possible since each system is obviously a recursive set. hence it is reasonable to speak of the n t h occurrence of the unknown  a  on the right-hand side of an equation in e. we define a local substitution  a.n as follows: if the s' equation is the locus of the n t h occurrence  then is e v together with a new s' equation wherein the n t h occurrence of s is replaced by the right-hand side of the s equation in  if there is no n t h then asnfl suppose there are k s's in e before the s equation  m in the s equation  and n after the s equation. the  global  substitution under s   o  e   is 
this transformation has the effect of replacing every righthand side occurrence of s  except those in the s equation  



solution. can we generate all of the surface solutions by varying the order of elimination  unfortunately the answer is no as can be seen by examining the following system  

only three of whose four well-founded solutions can be produced by varying the order of elimination. as suggested by the statement of the theorem  there are odd lattice equational systerns some of whose elimination sequences do not produce solutions. such a system is 

addressing either of the aforementioned deficiencies requires the separability results of the next section. 
iv. the structure of systems and solutions 
in this section we discuss some separability results for lattice equational systems. these results are of two classes: 
topological and algebraic. they are important because 
  they provide the machinery from which all surface solutions to all equational systems may be generated 
  they provide the basic perspective for analyzing the abstract complexity of the truth maintenance problem 
  they suggest concrete  divide and conquer  algo-rithms for solving the truth maintenance problem by 
- supporting  lazy evaluation  of the solution vis a vis any given unknown 
- supporting incremental update of solutions as justifications are added or removed 
- enabling parallel solution methods 


the utility of the previous theorem becomes clearer when we combine the computation of strongly connected subsystems of a system with reduction and minimization. since we need to do only substitutions through uncomplemented occurrences of unknowns in the original system in order to reduce it  the resulting system has exactly the same well-

1 	reasoning 

founded solutions as the original. reconsider now e1. if we minimize with respect to s and reduce again we get the reduced system: 

the system has now been separated into n + 1 strongly connected subsystems  each of which is disconnected from 

the surface solutions. in particular  all four of the wellfounded surface solutions of ♀1 can be produced by taking the goodwin projections with respect to the surface atoms  a and a  solving the two resulting systems   multiplying  the resulting solutions by a and a respectively  and  adding  the results. since each projected system has two solutions  the overall system has four. elsewhere  benanav et al.  we have shown the problem of solving general lattice equational systems to be np-hard in the size of the system. we see now how this might arise: using the algebraic results that we have cited can produce solutions at the cost of composing two potentially exponential processes  the projection by surface atoms and the finding of minimization and substitution sequences that actually produce a well-founded solution. 
	v. 	conclusions 
in the foregoing we have introduced a general model of truth maintenance couched in a lattice-theoretic framework. all of the truth maintenance systems familiar to us in the literature can be construed as solving systems of lattice equations. indeed  those systems can be properly embedded in our lattice-theoretic formalism. we introduced the fundamental transformations of substitution and minimization and showed how they could be used to produce solutions of even lattice equational systems. we have cited a number of theoretical results about the algebraic structure of truth maintenance systems and interpreted these results in terms of concrete examples. we have used these examples to illustrate how a given formal algebraic result either reveals some intrinsic difficulty  or how it can be used to computational advantage. finally  we sketched how our separation results can be used to generate all of the surface solutions of an arbitrary lattice equational system. the principal technical contributions of those aspects of our work on lattice-theoretic truth maintenance that we have presented in this paper are: 
  the formalization of truth maintenance in a way that properly includes nonmonotonic justifications and assumption-based justifications 
  the presentation of a point of view from which one can algebraically analyze the structure of truth maintenance problems and the construction of solutions to those problems 
  the motivation of the algebraic results with compu-tational and phenomenological interpretations 
though not the topic of this paper  it is also from this same lattice-theoretic point of view that we have carried out the analysis of the abstract and computational complexity of truth maintenance. 
