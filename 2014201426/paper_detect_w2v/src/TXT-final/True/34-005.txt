 
methods are introduced to decide the s o l v a b i l i t y of transformation problems. such methods may be applied to save some of the problem solving e f f o r t . supposit i o n for applying the stated methods is that information about the s t r u c t u r e of the problem space is a v a i l a b l e for detecting separated subsets of the s i t u a t i o n s e t . s o l v a b i l i t y of transformation problems is decided by means of systems of separated subsets of s i t u a t i o n s . for a class of problem spaces the detection of separated subsets of s i t u a t i o n s and the decision of s o l v a b i l i ty of problems are i n v e s t i g a t e d in more d e t a i l . 
i n t r o d u c t i o n 
the s o l u t i o n of transformation problems can be more easily found if information about the s t r u c t u r e of the problem space is a v a i l a b l e . such information may be for instance an evaluation function describing an approximation of the goal distance or an approximative d e s c r i p t i o n of the a p p l i c a b i l i t y sets of the operators  pohl / l / t banerji / 1 /   . 
s t r u c t u r a l information about the problem space may also be used to decide the s o l v a b i l i t y of any given problem. this saves f r u i t l e s s e f f o r t i n handling i n solvable problems. authors usually do not pay a t t e n t i o n to t h i s important question; one exception is the a r t i c l e by tiklossy and roach / 1 / . 
in the present paper there w i l l be given statements about the s o l v a b i l i t y of transformation problems in a problem space 
depending on s t r u c t u r a l properties of the problem space. 
in section 1 we s h a l l discuss questions of s o l v a b i l i t y of problems and give gener a l methods for deciding s o l v a b i l i t y in a problem space. 
section 1 contains the d e f i n i t i o n of a special class of problem spaces - the soc a l l e d binary - coded problem spaces. f i n a l l y   in section 1 we apply the gener a l methods stated in section 1 to binarycoded problem spaces* 
come general remarks on s o l v a b i l i t y of transformation problems 
let s be the f i n i t e nonempty set of situa tions of a problem space and f the f i n i t e 
nonempty set of 1-place operators over s. 
that i s   for each  where 

v.e want to investigate two important questions on s o l v a b i l i t y of transforma-
tion problems in problem spaces  s  f   . f i r s t l y   it is intereelinc to know whether e l l possible problems   s 1   s 1   in s problem space are solvable. problem spaces with this property are called totally-solvable problem spaces. econdly  we wish to formulate a method 
for deciding the s o l v a b i l i t y of any given problem. 
for investigation of s o l v a b i l i t y of t ransformation problems the concept of type-k-separatec' subsets of the s i t u a tion set s is introduced as follows: let s1 be an a r b i t r a r y subset of s. 
definition 1 : 

in the representation of a problem space as a directed graph a type-l-separated subset of s corresponds to a subset of nodes not being l e f t by an arrow and a type-1-separated subset of s to a subset 
* the e x p r e s s i o n m e a n s exactly the same as 
1 

of nodes not being arrived by an arrow. therefore  for instance  in the problem space presented in figure 1 {s1  s1} is a type-1-separated subset  {s1  s1} is a type-1-separated subset and {s1' s1} is a type-1-separated subset of s* 

using definition 1  the following theorem may be formulated on the total solvability of a problem space. 
theorem 1; a problem space  s  f  is not totally-solvable if and only if there is a nonempty proper subset of s which is a type-1-  type-1- or type-1-separated subset of s. 
proof:  suppose there is a non-
empty proper subset s1 of s which is a 
separated subset of one of the three types. obviously  in this case there 
also exists a nonempty proper subset s1 of s which is a type-l-1eparated subset of s. then the problem  s1  1  with and  is insolvable. 
　suppose  s  f  is not totallysolvable and let s1 be any situation in 
s. if there exists no nonempty proper subset of 1 which is a type-k-separated subset  k * 1  1  1  then we can show by induction that each  can be arrived from s1 by applying an applicable operator sequence. hence  a l l possible problems in  c  f  are solvable. this contradicts the assumption and completes the proof* 	q.e.d. 
theorem 1 implies that algorithms which detect type-k-separeted subsets may be used to decide the total solvability of a problem space. 
now to the second main question  the decision of the solvability of concrete problems. 
let s1 be a nonempty proper type-1separated subset of s. then a problem 
 s1 	 s1  	with 	' 	not 	solvable 
if 
analogous statements hold for type-1and type-1-separated subsets. 
let  be a set of type-
1-separated subsets of 1 then  for deciding the insolvability of a problem  s1  s1  in  s  f  we can use the following 
decision rule 1:  s1  s1  is not solvable if there is an  such that 
and 
similarly. decision fule 1 and decision rule 1 may be formulated for type-1- and type-1-separated subsets  respectively. 
on the other hand  if  is any set of 
 not necessarily disjointed  subsets of s then we define so follows  assuming k - 1  1  1: definition 1: 

is a consistent type-1-system of subsets of s. 
using a consistent type-k-system of subsets and the corresponding decision rule for deciding solvability of transformation problems  we comnonly detect only some of the insolvable problems. but about the solvability of the other problems in the problem space we know nothing. therefore  it seems to be necessary to introduce the concept of an admissible system of subsets. let  be any set of subsets of s  then we define  k = 1  1  1 : 
definition 1: 
is an admissible type-k-system of sub-
 sets of s if and only if for a l l s1  the following is true:  s1   s1  is solvable if and only if for a l l  holds condition ck  where c1  c1 
and c1 are defined as follows: 
c1: 
c1: c1: 
then  using admissible type-k-syeteme  we decide the solvability of a transformation problem  s1 s1  in the follo-
wing manner: we construct the set 
1 

graph are l a b e l e d by the i n d i c e s of the c o r r e s p o n d i n g o p e r a t o r s . 
an example of an admissible system of subsets v 'ill be given later in figure 1. the concept of using systems of subsets of s to decide s o l v a b i l i t y of transformation problems mey be generalized to 
using systems of type-different systems of subsets of 1  for instance to using a type-1-system and a type-1-system at the 
same time  this comes f rom the p o s s i b i l i -
ty that sometimes both some type-1-
ceprrated subsets and some type-1separated subsets are easy to detect end to describe  but the description of an 
admissible type-1- or type-1-cyctem of subsets of s is more d i f f i c u l t . 
in tht next section we w i l l introduce a special class of problem spaces - the so-called binary-coded problem spaces. 
with respect to the form of the applicab i l i t y conditions  subclasses of binerycodec! problem spaces may be defined. for 
instance  we define the claess of conjunctive binary-codec' problem spaces  celled b r i e f l y : conjunctive problem spaces  in the following menner: binary-coded problem spece of degree n 
is a conjunctive problem space of degree 
n if and only if a l l a p p l i c a b i l i t y conditions p. may be represented as 
consequently  the problem space of figure 1 is a conjunctive problem space* for later investigations it ic convenient to define a binary relation over the operator set f of a conjunctive problem space as follows if and only if 	. 
the class of disjunctive problem spaces may be defined analogous to the d e f i n i tion of conjunctive problem spaces. 
s o l v a b i l i t y of transformation problems in binary-coded problem speces 
since the situation components are binary the a p p l i c a b i l i t y sets may be represented 
by boolean conditions   a p p l i c a b i l i t y conditions   p 1   ...p n   where the situation components stand for variables. 
figure 1 shows a simple binary-coded problem space of decree a in graph representation. the edges of the presented in this section we w i l l state some solvab i l i t y theorems for binary-coded problem s pa c e s   
first we give a necessary d e f i n i t i o n . 
definition 1: 
a binary-coded prob.iem space of degree n  
	 s f'  	with the a p p l i c a b i l i t y conditions 
	p 1 ' ..... p n ' 	binary-1 

coded problem space of degree n   s  f  
with the a p p l i c a b i l i t y conditions p1  ................pn and only if for a l l i = 1  . . .   n the statement p1'- pi holds. 
　　　　to decide s o l v a b i l i t y properties it may be useful to approximate problem spaces. 
let     f'  and  s   f  be two binarycoded problem spaces of the same degree. then   s  f'  is called an underepproximation of   s   f   if  s  f'  is a subspace of   r   r   .   r   f'  is called an overapproximation of   r   f  if  r f f  is a subspace of   f'  using these definitions we state the following theorem  without proof : 
theorem 1: 
1* suppose  .  f'  is an underapproximation of  t  f . then the following is true: 
a  if  ♀  f '   is totally-solvable 
then  :  f  is also t o t a l l y solvable; 
b  for a l l s   s 1 e s: 
if   s .   s1  is solvable in  r  f'  then in   n  f   too. 
1. suppose   '   f*  is an overapproximation of     f   then the following is true: 
a  if  t  f'  is not totally-solvable 
then  r   f  is also not t o t a l l y solvable ; 
b  for a l l s 1 f 	
if   s -   s1  is not solvable in 
 t  f'  then also not in   r   f . 
suppose that a binary-coded problem space is described by applicability conditions in disjunctive normal form. then we obtain an underapproximation if we construct a set of new a p p l i c a b i l i t y conditions by taking only one conjunction f rom each of the original conditions to the corresponding new conditions. the resulting problem space is a conjunctive problem space. we obtain an overapproximation of the original problem space if we construct each new a p p l i c a b i l i t y condition as a disjunction which contains only one variable from each conjunction of the original corresponding condition. this resulting approximation is 1 disjunctive problem space. that i s   conjunctive problem spaces are suitable as underapproxima t ions of a binary-coded problem space and disjunctive problem spaces as overapproximations. therefore  with respect to theorem 1  solvability properties of binary-coded problem spaces can be investiga ted by analysing solvab i l i t y properties of these two important subclasses. 
in this paper we shall i l j u s t r a t e this analysis for conjunctive problem spaces 
1 


it is  possible to prove that the defined construction process yields an admissible type-1-system of subsets of s for a l l undirected conjunctive problem spaces if complete information about the a p p l i c a b i l i t y conditions is available. moreover  the construction of  can be realized very simply. especially the i d e n t i f i c a t i o n of an element of which should be replaced by two new elements is accomplished through simple coefficient matching. 
figure 1 shows an example of a conjunctive problem space and the construction of an admissible type-1-system for this problem spece. in figure 1 an expression like *1p means a c y l i n d e r set of situations. 
if information about the applicability conditions of a problem space is i n complete  then the described construction process yields a consistent but not necessarily an cdmissible type-1-system of subsets of s. 
conclusions 
insolvability of insolvable transfornation problems may be decided  for i n -
stance  by means of type-k-systems of subsets of the situation set  as defined in section 1. 
such additional expense in handling problems is profitable if it is exceeded by the saved amount of problem solving effort for insolvable problems. however  information about the structure of the problem space is necessary for detecting type-k-sepa rated subsets of situations. 

applicability conditions of the operators : 
 within f. 
the corresponding type-1-separeted sub 1et i s **1c. 
iteration of type-1-systerns of subsets yields: 

figure 1 
1 
