 nouns create contrasting new sorts that are subsorts of some abstract quality  and count nouns create contrasting subsorts of the file subject. 
relations are specified graphically by making connections between the fields in the relation he is specifying and other relations in the database. the graphic interface serves both to display and manipulate the relationships of the database. the heavy line indicates that a database join is to be performed between the two fields  and the dotted lines indicate which fields in the virtual relation 

p. martin et al. 1 
are carried over from the relations being joined. 
retrieved from the lexicon to produce a set of syntactically acceptable parses. 
1 . d i a l o g i c 
the grammar is a set of context-free rules annotated 
the component of the team system that takes an with constructors that enforce context-sensitive 
input sentence and produces a logical form is called syntactic constraints  and supply scores for the parses 
dialogic  grosz et al. 1 . dialogic comprises based on the a priori likelihood of a construction and on 
several phases  illustrated in figure 1. all of the domainthe composed likelihood of certain combinations. these 
dependent information it needs is in the conceptual scores are composed upward to the sentence node  
schema and the lexicon  domain-independent information yielding an overall sentence score. 	the score is used to 
for core vocabulary such as pronouns and prepositions is rank the resulting parses so that the syntactically  best  
already in these data structures before the acquisition . ones are tried first by the semantic translation process. 
figure 1 shows the top-ranked syntactic parse for our 
　we can illustrate the operation of dialogic by example sentence. considering an example sentence that could be asked in the employee database acquired in our previous example: 
what employees earn more than their manager's salary  

	figure 1: 	sample parse tree 
semantic translation 
syntactic operations 
in addition to the constructor functions  each rule of the 
 the diamond parser and the diagram grammar grammar also has another associated function called its  robinson 1  constitute the syntactic portion of translator. the translators are domain-independent  
dialogic. together they can analyze all common but they derive much of their behavior from the acquired 
sentence types in english  with the exception of sentences features and predicate structures associated with lexical using conjunctions . they are applied to the morphemes entries. they compute the predicate relations of the 

1 p. martin et al. 
sentence by using its syntactic structure and a set of semantic operations called the basic semantic functions  bsfs . this approach of decoupling these commonly conflated issues is important: by separating the parsing from the semantic translation  we allow independent development of the grammatical coverage and semantic capabilities. separating the semantic phase into translators that are close to the grammar and bsfs that are tied to the target formal theory achieves a 
similar independence  hendrix 1 . 
　the bsfs annotate the parse tree with noun groups  predicates  and quantified variables. the predicate relations are specified as logical form fragments  lffs . these are quantifier-free open formulas in the target logical form  moore 1 . the complete logical forms are a higher-order predicate calculus in which the restriction and assertion clauses of a quantified expression are asserted separately. 
　for our example query  translator calls to the bsfs build variables representing employees  managers  and salaries as the heads of the noun phrases. the translator calls for pronouns and definite noun phrases also collect the set of syntactically feasible coreferents of such phrases  hobbs 1 . in our example sentence  the pronoun 'them ' which is derived morphologically from 'their ' is assigned a variable that is marked as ambiguous among the employee and salary variables  the manager variable was previously ruled out on syntactic grounds . calls to other bsfs build the predications that relate these variables  expressing information such as the relationship between an individual employee and a salary. 
　the bsfs also resolve certain classes of ambiguities  and detect and reject some kinds of semantically inappropriate parses. the requirements on the argument types of most predicates arc used by the bsfs to check the semantic suitability of the proposed role fillers. the acquisition of domain-dependent predicates implicitly obtains the delineations that specify the sorts of their arguments. in our example sentence  the earn predicate requires an employee in the first argument position and a 
salary in the second. because a manager is a kind of employee  as indicated by the sort hierarchy   the delineation checking mechanism allows a manager to earn a salary too. if a parse had been chosen that reversed the order of these arguments  it would have been rejected. 
　when delineation checking detects an inappropriate sort  the bsfs have several options other than simply rejecting the parse: 
  if either the predicate or the role filler is derived from words that have alternative semantic interpretations  the remaining alternatives can be tried. 
  alternative candidates for the referent of a pronoun are likewise treated as semantic alternatives. in our example sentence  the 'them ' which is the pronoun part of the genitive 'their' is constrained to be some employee  rather than a salary  for example  by 	the 	delineation 	testing of 	the 	manager relation. 
  noun groups may be converted from their initial sort to a related sort that satisfies the delineation  backward coercion . backward coercion would recognize that 'salesman' is of sort job-title and hence could not be used with the salary-of predicate  which requires employee   and thus would replace it with the semantic equivalent of  an employee whose job-title is salesman.  
pragmatics 
　two further transformations must be applied to the parse tree: remaining ambiguities caused by vague predicates  e.g.  of  or semantic alternatives must be resolved  and quantifiers and similar operators must be assigned relative scopes. 
　the basic pragmatic functions replace vague predicates with more meaningful predicates derived from properties of the sorts of the arguments. during acquisition  the sorts of the fields of every relation are automatically entered in the conceptual schema as representing functions of the the subject sort of the relation. thus  because 'salary' is a field name of the employee file  its semantic sort salary is marked with the implicit predicate salary-of. inasmuch as the implicit predicate is not always the right replacement  delineation checking and other tests are used to make the decision. 
scope of q u a n t i f i e r s 
　quantifiers and operators such as negation and superlatives are distinguished from normal predicates because their arguments cannot generally be determined by simple composition. to determine the embedding of their arguments  or  equivalently  the correct relative scopes   team uses the structure of the parse tree to rank each permutation of the operators  eliminating those permutations that produce an ill-structured logical form  e.g.  one that uses a variable outside the region in which it is quantified . the choice between the existential and universal readings of 'any' in questions and negative contexts is also handled at this stage. legal interpretations are scored by a set of scope critics that judge specific aspects of the scoping. left-right ordering  the relative scoping strengths of the operators  and the tendency of 'any' to exceed the scope of at least one structure that syntactically surrounds it are exemplary of the information embodied in the scope critics. the summed scoping scores are used to order the possibilities  and the user is shown the result in the form of a very literal english rendering of the logical form. if team has succeeded  this rendering is a paraphrase of the original input sentence. 
　a post-processor applies a few minor transformations  and the result is a logical form that represents an unambiguous interpretation of the natural language sentence. the final process of team uses this logical form  the logical form for our example sentence is shown in the next section   and the acquired conceptual schema  and the database schema information to produce a database query. 
1. the schema translator 
the schema translator translates the logical forms of 
english sentences into database queries for the host database system. the current database system is soda  a relational database system embedded in lisp  moore 
1 . 
　the schema translator performs the following four tasks in sequence: 
1. it replaces logical form quantifiers by machineoriented quantification operators. 
1. it simplifies the logical form by expanding the definitions of derived predicates  virtual relations  and by removing predications implied by other predications in the logical form. 
1. it identifies and eliminates redundant occurrences of the same relation with the same key field. 
p. martin et al. 1 
 dept   manager  
the formulas above are merely definite clauses  with upper-case words denoting predicates  lower-case words denoting named variables  and ' ' denoting anonymous  don't care  variables. the notation is positional  with the arguments of predicates corresponding to the relation fields in the same positions in figure 1. 
　the first rule defines the virtual relation manager in terms of the two database relations employee and dept. these two relations are joined  in the relational sense  by the shared variable dept. 
　the second and third rules define the implicit virtual relations earn  a verb  and salary-of by projecting the relation employee over the 'name' and 'salary' fields. these virtual relations are not defined explicitly during acquisition  but correspond to the association of verbs and nouns to particular combinations of fields of a single relation. 
　the last three rules trivially define sorts associated with fields of employee and dept as projections of appropriate relations. 
the first fields of employee  name  and of dept 
 dept  are the key fields of those relations. 

1 p. martin et al. 

　note that all but the last step apply the inference rules created by acquisition to transform a formula into a simpler one that implies it. the last step merely entails a change of representation between two essentially equivalent languages. this deduction process effectively decouples the format of the logical form from the database query language and from the actual database. 
1. conclusion 
　we have constructed a natural-language interface that cleanly separates domain-dependent from domainindependent information. the domain-independent portion includes the parser and grammar  the semantic translators  the pragmatic and scope determining processes  the schema translator  and the basic vocabulary and taxonomy that form the initial state of the data structures subsequently modified by the acquisition process. 
　the information that is automatically acquired for each new domain includes: the lexicon; the conceptual schema  comprising taxonomy  predicate argument relations  and pragmatic markings; and the database schema  describing the mapping from predicates to database relations. 
　the current version of team already supports fluent interaction with multiple file databases and work is underway to extend its linguistic and database coverage  especially in the following areas: 
  acquisition of more complex verbs  such as verbs with multiple delineations  verbs that require special prepositions  verbs that do not translate into a projection of an existing noun relation  and verbs with sentential complements. 
  interpretation of aggregates  quantified commands  and commands to perform functions other than database access. 
  treatment of common forms of sentences that use conjunctions. 
  time and tense in dialogic and in the database. 
　earlier versions of team ran on a dec 1  implemented in a combination of interlisp  acquisition and dialogic  and prolog  schema translator . the current version runs on a symbolics lm-1 lisp machine  and includes its own prolog interpreter for the schema translation. although team is still under development and therefore has not yet been formally tested  it has successfully acquired a variety of databases. 
a c k n o w l e d g m e n t s 
　the development of team has profited from the efforts of armar archbold  barbara grosz  norman haas  gary hendrix  jerry hobbs  bob moore  jane robinson  daniel sagalowicz  and david warren. 
this research was supported by the defense advanced 
research projects agency under contract n1c-1. 
　the views and conclusions contained in this document are those of the authors and should not be interpreted as representative of the official policies  either expressed or implied  of the defense advanced projects agency or the u.s. government. 
