 
we present derivation proof procedures for extended stable model semantics. given program ii and goal g  g belongs to the well founded model of el iff there is a wfm-derivation for g in ii. likewise  given program ii and goal g  
g belongs to some extended stable model of ii iff there is a xsm-derivation for g in ii. correctness  completeness and soundness  of these procedures is discussed. example derivations are exhibited  as well as a simple prolog implementation that directly mirrors the procedures. 
1 	introduction 
well founded semantics  wfs   van gelder et a/.  1  adequately captures various forms of hypothetical reasoning  pereira et a/.  1c  pereira et a/.  1d  pereira ct a/.  1b  pereira et al.  1a  if we interpret the well-founded model  wfm  of a program ii as a  possibly incomplete  core view of the world  the extended stable models  xsms  specifying alternative complementary consistent views of the world  all of each containing the core wfm. 
　the paper is organized as follows: in section 1 we review well founded semantics. in section 1 we define wfm-derivations  discuss their correctness  and 
give examples. next  in section 1  we define xsmderivations and discuss their correctness. finally  in section 1  a prolog implementation is produced  directly reflecting the derivation procedures mentioned. more details can be found in an extended version of this paper  pereira et al.  1 . 
　by a logic program ii we mean a finite set of universally closed rules of the form:  where 
 h is an atom and the li's are literals. when n = 1  we also write  where t stands for an atom satisfied in all models. negative literals are expressed as 1 where a is an atom. we denote by lit ii  the set of literals in ground ii   the herbrand instantiation of program ii. we denote the well founded model of a program ii by w f m  ii   and an extended stable model  which may be the well founded one  by xsm ii . 
1 	the extended stable model semantics 
in this section we characterize the well founded and extended stable models of a program  based on  przymusinska and przymusinski  1 . alternative definitions of the well founded semantics can be found in  van gelder ct a/.  1  or in  przymusinski  1 . because the semantics is 1-valued  we begin by defining 1-valued interpretations. 
definition 1 a 1-valued herbrand interpretation i of a first-order language l is any pair  t; f   where t and f are disjoint subsets of the herbrand base h. t contains all ground atoms true in 1  f contains all ground atoms false in /  and the truth value of the remaining 
atoms  those in is undefined  or unknown . 
an alternative way to represent an interpretation / = 
can be where 
definition 1 the function can be recursively extended to the truth valuation function i : lit ii  -----  v defined on the set lit ii  of all literals of the language as follows  where a is a ground atom: 

definition 1 a non-negative program is a program whose premises are either positive atoms or the special proposition u. every interpretation i satisfies 
1  and so  u denotes the undefined  or unknown  value. 
theorem 1  generalization 	of 	 van 	emden 	and 
kowalski  1   every non negative logic-program has a unique least1-valued model. 

pereira  aparicio  and alferes 
　next we define the program transformation u/m  ii modulo m   which is a 1-valued extension to the 1-valued transformation in  gelfond and lifschitz  1 . 
definition 1 let ii be a logic program and let i be a 1-valued interpretation. by the extended gltransformation of ii modulo i we mean a new  nonnegative  program 1/i obtained from ii by performing the following three operations: 
  removing from ii all rules which contain a negative premise l =~a such that i l  = 1. 
  replacing in all remaining rules those negative premises l =~a which satisfy i l  = 1 by u. 
  removing from all the remaining rules those nega-tive l =~a which satisfy i l  = 1. 
　since the resulting program 1 is non-negative  by theorem 1  it has a unique least 1 valued model. we define t* i   a generalization of the t operator  gelfond and lifschitz  1   to be the 1-valued least model of 
ii/i. 
definition 1 a 1-valued interpretation i of a logic 

1 	derivation procedure for the well 
founded model 
now we present a derivation procedure such that given a program ii and a goal g the derivation succeeds iff g is in wfm ii . the procedure is defined over the ground instance of ii  the set of all ground instances of the rules in ii with respect to its herbrand universe. without loss of generality we can assume that ii has been already instantiated and thus consists of a  possibly infinite  set of propositional rules. 
definition 1 a positive  resp. negative  interpretation / is a set of positive  resp. negative  literals from lit h . 

program ii is called an extended stable model xsm of 
ii iff t*  /  = /. 
　in order to check if i is an xsm of a program we give a constructive definition of t* operator. for this purpose we define   a generalization of the van emdenkowalski operator  
definition 1 let ii be a non-negative program  i an interpretation of ii and a is a ground atom. then is an interpretation defined as follows: 
1 logic programming 

pereira  aparicio  and alferes 

most recent one in c  the rightmost . the condition g /jb in d1 and d1 means that if a tree has a node l  resp. ~  then it may have no node   resp. l . 
　we may think of the derivation rules as stating conditions for re-writing a literal  possibly by cancelation with a previous ancestor in the tree. for the well founded model derivation procedure the only possible cancelation of a literal with an ancestor is provided by rule d1. 
example 1 the 	wfm-tree 	for p given 	program is: 

example 1 the wfm-tree for  for the program below is: 

example 1 the wfm tree for  for the program below is: 

1 	properties of wfm-trees 
by definition wfm-trees are finite. the only type of leaf nodes in a wfm-tree are: 
1  a positive literal with no identical ancestor 
1  a negative literal with no identical ancestor 
1  a negative literal with an identical ancestor 
proposition 1 every branch from the root literal has at most one node with an identical ancestor. 
proposition 1 if a leaf node for literal l has an identical ancestor then l is a negative literal. 
proposition 1 if a leaf node for literal l has no identical ancestor and is a negative literal l = then there are no rules for h in ii. 
proposition 1 if a leaf node has a positive literal l then no node in the branch from the root literal to l has an identical ancestor literal  and there is a fact l in program ii. 
l e m m a 1  leaves are in the wfm  if t is a wfm g il  tree for g in ii then: 
1  a positive literal which is in a leaf node  and has no identical ancestor  is in wfm ii  
1  a negative literal which is in a leaf node  and has 
no identical ancestor  is in wfm ii  
1 	logic programming 
1  a negative literal which is in a leaf node  and has an identical ancestor is in wfm ii  
proof: 
1.1  if a positive literal l is in a leaf node  and has no identical ancestor  then there is a fact l in ii and facts are always in wfm ii . 
1.1  if a negative literal is in a leaf node  and has no identical ancestor  then there are no rules for l in ii. for an atom l such that no rules for it exist in ii   is in wfm il . 
1.1  if a negative literal  is in a leaf node and has an identical ancestor  we have: 

i.e. 	there is at least one chain from l to l  and possibly a rule for l  such as  1  in the program below: 

i.e. in ii there is a chain of positive literals l ... h ... l  and the well founded model contains 

note that for the model not to contain  by  1  all bi would have to differ from false. but in that case the tree named bi  in the figure above could not exist  nor the father node  
lemma 1 given a wfm-tree for g then  for any internal node literal h  if its immediate descendents d  ... d1 are in the well founded model  then ii is in the wfm. 
proofrthe proof follows easily from the observation that the only tree formation rules introducing descendents nodes are wfm-i.1 and wfm-ii.1 and the definition of 1-valued interpretation  cf. footnotes 1 and g . 
theorem 1  soundness of wfm-trees  let ii be a program and l a literal. if there is a wfm-tree for l then l is in wfm ii . 
proof: follows directly from lemma 1 and lemma 1 above. 
corollary 1 given program ii and literal g such that g wfm ii  then all literals in the wfm{g ii  are in wfm u . 
theorem 1  completeness of wfm trees  let ii be a program and l a literal. if l is in w f m   i i there is a wfm-tree for l. 
proof: appears in the extended version. 
1  if l has an identical ancestor a and all literals in the branch l to a are negative then n is a leaf  rule d1  dents the body of a different rule 
1  if  has an identical ancestor a with some positive literal in between  then tv is a leaf  rule d1  
x s m - i i if n is positive then: 
1  if there is a fact n in ii  then n is a leaf  rule d1  
1  the n immediate descendents are those literals b1 ... bn  such that a rule n b1 ... bn exists in ii  rule d1  
1  if n has an identical ancestor a  with some negative literal in between  then tv is a leaf 
 rule d1  
　a xsm-tree has two types of leaves not appearing in the wfm-tree  namely: i  positive literal leaf nodes having an identical ancestor and with some negative lit-
eral in between; and ii  negative literal leaf nodes having an identical ancestor and with some positive literal in between. 
example 1 although the program  has no wfm-tree it has the following xsm-trees  among others : 
　the soundness proof is similar to that of wfm-trees  but the equivalent to lemma 1 is now: 
lemma 1  leaves are in the xsm  li t is a xsm tree for g then: 
1.1  a positive literal in a leaf node  having no identical ancestor  is in some xsm  ii  
1.1  a negative literal in a leaf node  having no 
identical ancestor  is in some xsm u  
1.1  a negative literal in a leaf node  having an identical ancestor  is in some a'sm it  
1.1  a positive literal in a leaf node  having an identical ancestor and some negative literal in between  is in some x s m   i i   
1.1  a negative literal in a leaf node  having an identical ancestor and some positive literal in between  is in some xsm ii  
　proof: proof of 1 and 1.1.i  1.ii and 1.iii follows from lemma 1 and the fact that all literals in the wfm ii  are in all atsm ii . 
pereira  aparicio  and alferes 

acknowledgements 
we thank esprit bra compulog  no. 1   inic  jnict and gahinete de filosofia do conhecimcnto. 
