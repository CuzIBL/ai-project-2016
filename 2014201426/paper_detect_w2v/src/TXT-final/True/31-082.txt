 
we introduce a general framework for constraint solving where classical csps  fuzzy csps  weighted csps  partial constraint satisfaction  and others can be easily cast. the framework is based on a semiring structure  where the set of the semiring specifies the values to be associated to each tuple of values of the variable domain  and the two semiring operations  + and x  model constraint projection and combination respectively. local consistency algorithms  as usually used for classical csps  can be exploited in this general framework as well  provided that some conditions on the semiring operations are satisfied. we then show how this framework can be used to model both old and new constraint solving schemes  thus allowing one both to formally 
justify many informally taken choices in existing schemes  and to prove that the local consistency techniques can be used also in newly defined schemes. 
1 	introduction 
classical constraint satisfaction problems  csps   montanari  1; mackworth  1  are a very expressive and natural formalism to specify many kinds of reallife problems. in fact  problems ranging from map coloring  vision  robotics  job-shop scheduling  vlsi design  etc.  can easily be cast as csps and solved using one of the many techniques that have been developed for such problems or subclasses of them  freuder  1; 
1; mackworth and freuder  1; mackworth  1; montanari  1 . 
　however  they also have evident limitations  mainly due to the fact that they are not very flexible when trying to represent real-life scenarios where the knowledge is not completely available nor crisp. in fact  in such situations  the ability of stating whether an instantiation of values to variables is allowed or not is not enough or sometimes not even possible. for these reasons  it is natural to try to extend the csp formalism in this direction. 
　for example  in  rosenfeld et a/.  1; dubois et al  1; ruttkay  1  csps have been extended with the 
1 	constraint satisfaction 
ability to associate to each tuple  or to each constraint  a level of preference  and with the possibility of combining constraints using min-max operations. this extended formalism has been called fuzzy csps  fcsps . other extensions concern the ability to model incomplete knowledge of the real problem  fargier and lang  1   to solve overconstrained problems  freuder and wallace  1   and to represent cost optimization problems. 
　in this paper we define a constraint solving framework where all such extensions  as well as classical csps  can be cast. however  we do not relax the assumption of a finite domain for the variables of the constraint problems. the main idea is based on the observation that a semiring  that is  a domain plus two operations satisfying certain properties  is all what is needed to describe many constraint satisfaction schemes. in fact  the domain of the semiring provides the levels of consistency  which can be interpreted as cost  or degrees of preference  or probabilities  or others   and the two operations define a way to combine constraints together. specific choices of the semiring will then give rise to different instances of our framework. 
　in classical csps  the so-called local consistency techniques  freuder  1; 1; mackworth  1; 1; montanari  1; montanari and rossi  1l  have been proved to be very effective when approximating the solution of a problem. in this paper we study how to generalize this notion to our framework  and we provide some sufficient conditions over the semiring operations which guarantee that such algorithms can be fruitfully applied also to our scheme. here for being  fruitfully applicable  we mean that 1  the algorithm terminates and 1  the resulting problem is equivalent to the given one and it does not depend on the nondeterministic choices made during the algorithm. 
the advantage of our framework  that we call scsp 
 for semiring-based csp   is that one can just see his own constraint solving framework as an instance of scsp over a certain semiring  and can immediately inherit the results obtained for the general framework. in particular  in this case  one can immediately see whether a local consistency technique can be applied or not. this allows one also to justify many informally taken choices in existing constraint solving schemes. in this paper we study several known and new constraint solving frameworks  casting them as instances of scsp  and for some of them 


	bistarelli  montanari  and rossi 	1 


1 	constraint satisfaction 

bistarelli  montanari  and rossi 1 

stances of the scsp framework. more precisely  each of such frameworks corresponds to the choice of a specific constraint system  and thus of a semiring . this means that we can immediately know whether one can inherit the properties of the general framework by just looking at the properties of the operations of the chosen semiring  and by referring to the theorems in the previous section. this is interesting for known constraint 
solving schemes  because it puts them into a single unifying framework and it justifies in a formal way many informally taken choices  but it is especially significant for new schemes  for which one does not need to prove all the properties that it enjoys  or not  from scratch. since we consider only finite domain constraint solving  in the following we will only specify the semiring that has to be chosen to obtain a particular instance of the scsp framework. 
1 	classical csps 
a classical csp problem  montanari  1; mackworth  1  is just a set of variables and constraints  where each constraint specifies the tuples that are allowed for the involved variables. assuming the presence of a subset of distinguished variables  the solution of a csp consists of a set of tuples which represent the assignments of the distinguished variables which can be extended to total assignments which satisfy all the constraints. 
　since constraints in csps are crisp  we can model them via a semiring with only two values  say 1 and 1: allowed tuples will have the value 1  and not allowed ones the value 1. moreover  in csps  constraint combination is achieved via a join operation among allowed tuple sets. this can be modelled here by taking as the multiplicative operation the logical and  and interpreting 1 as true and 1 as false . finally  to model the projection over the distinguished variables  as the k-tuples for which there exists a consistent extension to an n-tuple  it is enough to assume the additive operation to be the logical or. therefore a csp is just an scsp where the c-semiring in the constraint system cs is scsp =  {1}  v  a 1 . the ordering  s here reduces to 1  s 1. as predictable  all the properties related to k-consistency hold. in fact  a is idempotent. thus the results of theorems 1 and 
1 apply. also  since the domain of the semiring is finite  the result of theorem 1 applies as well. 
1 	fuzzy csps 
fuzzy csps  fcsps   rosenfeld et a/  1; dubois et a/.  1; ruttkay  1; schiex  1  extend the no-
tion of classical csps by allowing non-crisp constraints  that is  constraints which associate a preference level to each tuple of values. such level is always between 1 and 1  where 1 represents the best value  that is  the tuple is allowed  and 1 the worst one  that is  the tuple is not allowed . the solution of a fuzzy csp is then defined as the set of tuples of values which have the maximal value. the value associated to n-tuple is obtained by minimizing the values of all its subtuples. fuzzy csps are already a very significant extension of csps. in fact  they are able to model partial constraint satisfaction  freuder and wallace  1   so to get a solution even when the problem is overconstrained  and also 
1 	constraint satisfaction 
prioritized constraints  that is  constraints with different levels of importance  borning et a/.  1   
　fuzzy csps can be modelled in our framework by choosing the c-semiring sfcsp =  {x i x e  1  l } max mm 1 . the ordering  s here reduces to the   ordering on reals. the multiplicative operation of sfcsp  that is  min  is idempotent. thus theorem 1 and 1 can be applied. moreover  min is adclosed for any finite subset of  1 . thus  by theorem 
1  any k-consistency algorithm terminates. thus fcsps  although providing a significant extension to classical csps  can exploit the same kind of local consistency algorithms. an implementation of arc-consistency  suitably adapted to be used over fuzzy csps  is given in  schiex  1   although no formal properties of its behaviour are proved . 
1 	probabilistic csps 
probabilistic csps  pcsps   fargier and lang  1  have been introduced to model those situations where each constraint c has a certain independent probability p c  to be part of the given real problem. this allows one to reason also about problems which are only partially known. the probability of each constraint gives then  to each instantiation of all the variables  a probability that it is a solution of the real problem. this is done by associating to an n-tuple t the probability that all constraints that t violates are in the real problem. this is just the product of all 1 - p c  for all c violated by t. finally  the aim is to get those instantiations with the maximum probability. 
　the relationship between pcsps and scsps is complicated by the fact that pcsps contain crisp constraints with probability levels  while scsps contain non-crisp constraints. that is  we associate values to tuples  and not to constraints. however  it is still possible to model pcsps  by using a transformation which is similar to that proposed in  dubois et a/.  1  to model prioritized constraints via soft constraints in the fcsp framework. more precisely  we assign probabilities to tuples instead of constraints: consider any constraint c with probability p c } and let t be any tuple of values for the variables involved in c; then we set p t  - 1 if t is allowed by c  otherwise p t  = 1 - p c . the reasons for such a choice are as follows: if a tuple is allowed by c and c is in the real problem  then t is allowed in the real problem; this happens with probability p c ; if in-
stead c is not in the real problem  then t is still alowed in the real problem  and this happens with probability 1 -p c . thus t is allowed in the real problem with probability p c  + 1 - p c  = 1. consider instead a tuple t which is not allowed by c. then it will be allowed in the real problem only if c is not present; this happens with probability 1 - p c . 
　to give the appropriate value to an n-tuple t  given the values of all the smaller k-tuples  with k   n and which are subtuples of t  one for each constraint   we just perform the product of the value of such subtuples. by the way values have been assigned to tuples in constraints  this coincides with the product of all 1 - p c  for all c violated by t. in fact  if a subtuple violates c  then by construction its value is 1 - p c ; if instead a subtuple satisfies c  then its value is 1. since 1 is the unit element of x  we have that 1 x a = a for each a. thus we get ii 1 - p c   for all c that t violates. 
　as a result  the c-semiring corresponding to the pcsp framework is sprob = {{x   x e  1 }  max  x 1   and the associated ordering  s here reduces to   over reals. note that the fact that p' is a-consistent means that in 
p there exists an n-tuple which has probability a to be a solution of the real problem. 
　the multiplicative operation of sprob  that is  x  is not idempotent. thus neither theorem 1 nor theorem 1 can be applied. also  x is not closed on any superset of any non-trivial finite subset of  1 . thus theorem 1 cannot be applied as well. therefore  k-consistency algorithms do not make much sense in the pcsp framework  since none of the usual desired properties hold. however  the fact that we are dealing with a c-semiring implies that  at least  we can apply theorem 1: if a pcsp problem has a tuple with probability a to be a solution of the real problem  then any subproblem has a tuple with probability at least a to be a solution of a subproblem of the real problem. this can be fruitfully used when searching for the best solution in a branchand-bound search algorithm. 
1 	weighted csps 
while fuzzy csps associate a level of preference to each tuple in each constraint  in weighted csps  wcsps  tuples come with an associated cost. this allows one to model optimization problems where the goal is to minimize the total cost  time  space  number of resources  ...  of the proposed solution. therefore  in wcsps the cost function is defined by summing up the costs of all constraints  intended as the cost of the chosen tuple for each constraint . thus the goal is to find the n-tuples  where n is the number of all the variables  which minimize the total sum of the costs of their subtuples  one for each constraint . 
　according to this informal description of wcsps  the associated c-semiring is swcsp =   r+  min + +oo 1   with ordering  s which reduces here to   over the reals. this means that a value is preferred to another one if it is smaller. 
　the multiplicative operation of swcsp  that is  +  is not idempotent. thus the k-consistency algorithms cannot be used  in general  in the wcsp framework  since none of the usual desired properties hold. however  again  the fact that we are dealing with a c-semiring implies that  at least  we can apply theorem 1: if a wcsp problem has a best solution with cost a  then the best solution of any subproblem has a cost smaller than a. this can be convenient to know in a branchand-bound search algorithm. 
1 	egalitarianism and utilitarianism: 
fcsp + wcsp 
the fcsp and the wcsp systems can be seen as two different approaches to give a meaning to the notion of optimization. the two models correspond in fact  respectively  to two definitions of social welfare in utility theory  moulin  1 : egalitarianism  which maximizes the minimal individual utility  and utilitarianism  which maximizes the sum of the individual utilities. 
　in this section we show how our framework allows also for the combination of these two approaches. in fact  we construct an instance of the scsp framework where the two approaches coexist  and allow us to discriminate among solutions which otherwise would result indistinguishable. more precisely  we first compute the solutions according to egalitarianism  that is  using a max-min computation as in fcsps   and then discriminate more among them via utilitarianism  that is  using a max - sum computation as in wcsps . the resulting c-semiring is sue = {{ / k  | l k e  1 }. max   min    1    1    where max and min are defined as follows: 

　that is  the domain of the semiring contains pairs of values: the first element is used to reason via the maxmin approach  while the second one is used to further discriminate via the max-sum approach. more precisely  given two pairs  if the first elements of the pairs differ  then the max - min operations behave like a normal max - min  otherwise they behave like max-sum. this can be interpreted as the fact that  if the first element coincide  it means that the max-min criteria cannot discriminate enough  and thus the max - sum criteria is used. 
　since min is not idempotent  k-consistency algorithms cannot in general be used meaningfully in this instance of the framework. 
　a kind of constraint solving similar to that considered in this section is the one presented in  fargier et al  1   where fuzzy csps are augmented with a finer way of selecting the preferred solution. more precisely  they employ a lexicographic ordering to improve the discriminating power of fcsps and avoid the so-called drowing effect. this approach can be rephrased in our frame-
work as well  yielding an instance where k-consistency algorithms can be applied. 
1 	conclusions 
in some of the instances considered  we have shown that the sufficent conditions for the application of kconsistency algorithms do not hold. however  this does not mean that problems defined according to such schemes are not easily solvable in some special cases. in fact  one can show that our general framework is always compatible with the notion of dynamic programming  which  in the case of classical csps with a thick-tree structure  reduces to that of perfect relaxation  montanari and rossi  1 . 
　we plan to extend our framework in order to take into account several dimensions of  preference . in fact  in practice one could want  for example  to minimize cost and time  while maximizing the level of confidence and some notion of probability. each of these desires could be 
	bistarelli  m1ntanari  and rossi 	1 
cast in one c-semiring as shown in this paper  and then the combination of the four c-semirings  which is again a c-semiring  can be used to model the entire solving scheme. however  more attention has to be put now in the choice of the  best  solutions  since the presence of several dimensions obviously increases the probability of tuple incomparability. 
