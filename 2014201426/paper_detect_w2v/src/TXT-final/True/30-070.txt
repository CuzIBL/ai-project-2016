 
there are fundamental limitations on using mental attitudes to formalise the semantics of an agent communication language  acl . instead  we define a general semantic framework for an acl in terms of protocols. we then argue that the proper role of mental attitudes is to link what an agent 'thinks' about the content of a message to what it 'does' in response to receiving that message. we formalise this connection through normative and informative specifications and demonstrate its use in communication between two bdi-style agents. 
1 	introduction 
the growing ease of network connectivity of computers provided the enabling technology for the agent paradigm. from the computing perspective  agents are autonomous  asynchronous  communicative  distributed and possibly mobile processes. from the ai perspective  they are communicative  intelligent  rational  and possibly intentional entities. 
　the common feature of communication has determined that some kind of message passing between agents is required. to provide inter-operability between heterogeneous agents  a commonly understood agent communication language  acl  is used: examples include kqml  finin et al.  1   arcol  breiter and sadek  1   and fipa's acl  fipa  1 . to ensure that it is commonly understood  a formal semantics for the acl is required. from the ai perspective  the semantics has typically been characterised in terms of speech act theory and framed in terms of the intentional stance  i.e. mentalistic notions such as beliefs  desires and intentions 
 cohen and levesque  1; breiter and sadek  1; fipa  1 . 
　an intentional normalisation of an acl semantics often involves the axiomatisation of the felicity conditions of searle and the conversational maxims of grice. grice's analysis of conversational irnplicatures was underpinned by the sincerity condition to support the co-operativity principle. for agents to converse cooperatively  e.g. for negotiation  co-ordination  etc.   the 
1 	distributed ai 
sincerity condition is a reasonable requirement  but is often hard-wired into the semantics as a feasibility precondition on performing a simple speech act  e.g. kqml tell and fipa inform. thus an agent believes what it says and only says what it believes. 
　however  by defining the meaning of a performative in isolation through an axiomatisation that implicitly expects the performative to be used in conversation  there is a risk of being exclusive. in isolation  we could motivate the behaviour of a sincere agent by the axiom: 
　　　　　　　　　　　　　　　　are respectively the beliefs  desires  goals  and intends modalities  and done is an operator on actions. this axiom therefore states that if the agent s believed and wanted another agent to believe  then 1 would generate the intention to inform . of 
after which action  may also come to believe alternatively we could define the behaviour of a 'rapacious' agent by the axiom: 
this axiom states that if .s desires  wants  and believes that doing a will achieve then will intend to do the same communication occurs  a is without s having an explicitly held 
　any formalisation of communication based on the mental states of the participants must deal with what is fundamentally a process of revision and updating of those states. it is unlikely that a single set of axioms will cover all eventualities because communication is inherently context-dependent. what works in one application may be inappropriate in another. furthermore  intentionality is concerned with agent internals and a communicative act is an external phenomenon: mental attitudes can only give a possible reason for and not the definitive meaning of the performative. therefore there are considerable limitations of intentionality as a basis for defining the semantics of an acl  cf.  singh  1  . 
　this paper develops an alternative semantic framework for an acl from the computing perspective  with an emphasis on protocols. mental attitudes are used now to link what an agent 'thinks' about the message content to what it 'does' in response to receiving that message. 

1 	a layered semantics 
consider the situation illustrated in figure 1. it shows two agents  each embedded in an environment  which partially overlap. however  rather than communicating by changing the environments  they can communicate by using speech acts and the acl protocols. 
agent  receiving a message  to add its interpretation of that content to its current information state; and for the speech act  the space of possible responses an agent may make  one of which it is committed to make. 
　for the specification that follows in this section  let c and a be sets of integers  and let  content.meanings  


figure 1: communicating agents 
we identify three layers of semantics here: 
i the content level semantics  which is concerned 
with interpreting and understanding the content of a message  and is internal to an agent; 
ii the action level semantics  which is concerned with replying in appropriate ways to received messages  and is external to the agents; 
iii the intentional semantics  which is concerned with making a communication in the first place  and with replying  and again is internal to the agent. 
we would argue that the current fipa acl semantics for example  is level 1  and because it is internal to an agent  its usefulness in standardisation lias been questioned  wooldridge  1; singh  1 . the only part of the communication that is amenable to standardisation is the observable tip of the iceberg: namely the communication itself. note that this properly includes ontologies  so that there may be a standard interpretation  but the actual interpretation of the content of the message is once again internal to the agent. 
1 	generic semantics for performatives 
we define a standard semantics for performatives by an input-output relationship at the action level  level  ii  above . we define the meaning of a speech act  as input  as the intention to perform another speech act  as output . in computing this functional relationship we can take into account the agent's mental state  without proscribing that state or how it should be implemented. 
　we base the relationship on how the object-level content of a message induces a change in the information state of the receiver  and how the meta-level action descriptor of a message  the performative itself  induces a response from the receiver. our proposal is that the semantics of performatives can be characterised in these terms  and that this is the semantics that should be specified for a standard agent communication language. this means specifying  for the content  what it 'means' for an and speech-acts be  respectively  possibly infinite sets of agent information states  the agent's interpretation of the content of a message  and speech acts. 
　an acl is defined by a 1-tuple where perf is a set of perfomative names  prot is a set of protocol names  and reply is a partial function given by: 
i  
for the fipa acl  for example  perf would be the set of all fipa acl performatives  and prot would be the set of all fipa acl protocols  used for negotiations  calls-for-proposals  etc.  for example: 

note we include a null performative which is a 'do nothing'  no reply  performative  cf. silence as used in smith et al.    and require an empty protocol no...protocol: agents can communicate using one-shot speech acts irrespective of a particular protocol. 
　each element of prot names a finite state diagram. then reply is a  partial  function from performatives  protocols and protocol states to the power set of performatives. this states for each perfomative  'uttered1 in the context of a conversation following a specific protocol  what performatives are acceptable replies. the reply function can be constructed from inspection of the protocol state diagrams  and vice versa  although more formal characterizations are possible  e.g.  kuwabara et al  1  . 
　this 1-tuple is standard for all agents using the acl. to fully characterise the semantics  we need three further functions which are relative to an agent a  and specify what an agent does with a message  not how it does it: 

here  adda is agent a's own procedure for computing the change in its information state* from the content of an incoming message using a particular performative 'uttered1 in the context of a particular protocol. adda then converts a's  a-type  information state into a new  a-type  information state  selecta is agent a's own procedure for selecting a performative from a set of performatives  valid replies   and from its current information state generating a complete speech act for this performative which will be its  intended  reply. finally  we require that agents keep track of the state of each conversation in which it is involved  and uniquely identify each conversation with some identifier  i.e. an agent may be involved in more than one conversation and uses the identifier to 
	pitt and mamdani 	1 

distinguish between them. conva then maps a conversation identifier onto the current state of the protocol being used to conduct the conversation.  note that fipa acl has message attributes  reply-with  in-reply-to and conversation-id  to serve such purposes  but they are not accommodated in the formal semantics.  
   an agent s communicates with  and communicates information to  an agent r via a speech act. this is represented by: 

this is saying that s does  communicates with  performative perf with content c in language l using ontology 1  in the context of a conversation identified by i which is following protocol p  at the time of sending tsnd. 
　define a function / which for any speech act sa returns the performative used in that speech act. the meaning of a speech act is then given by: 

this defines the meaning of the speech act by sender s to be an intention of receiving agent r to perform some other speech act. the performative used in the speech act as the response is selected from  it is constrained to be one of 
the performatives allowed by the protocol. the speech act is generated from r's information state at the time of selection  and the state of the conversation i according to the protocol p  using r's selectr function: where   own interpretation  content meaning  of the content c in language l using ontology o to its database at the time of receipt   
   note that for a speech act performed as part of a conversation identified by  both sending and receiving agents are expected to update their respective conv mapping from conversation identifiers to current state  as defined by the protocol . the sending agent will do this on performing the speech act  the receiving agent after creating the intention to reply. this means that after a message has been sent and before it has been processed  the two parties of the conversation will  for a while  be in different states  and this can be useful in error recovery as a result of lost messages  for example. 
   it is possible  with a little care  to describe fipa acl as a 1-tuple as defined above. fipa acl has a small set of basic performatives and just a few protocols  most with fewer than 1 states. howrever  more work is required for protocols where there are more than two participants  the sequence of speech acts is not simple turntaking  there are timing constraints which affect allowable replies  and so on. it may also be that a protocol  if 
1 	distributed al 
not infinite  may nevertheless have a 'very large' number of states. therefore a further generalisation of the specification may be required  by defining rules for generating speech acts between two players  i.e. a game . 
　to summarise  all agents should react to a speech act  and we try to constrain and predict the possible reactions with protocols. these  we argue  are the normative standard items: what an agent can do  not how it does it. adda and select a are specifying what agent a should do  
not how it should do it. however  even if an acl with a standard external semantics can be agreed  it is unlikely to be testable as the agents are complex entities. it does impose a requirement that agents involved in a conversation behave according to a protocol  but 'anti-social1 behaviour may not be immediately obvious and the history of communications needs logging  and a means of auditing  policing and accountability is required. standardising the protocols alone will not achieve this. 
1 	the proper role of belief states 
we have seen how an agent's information state  belief state  can be used to guide the selection of a response to a message  and this formed the core of our proposed semantics for the acl. this would be a normative specification. how then do agents choose which speech ads to perform in the first place  it is in answer to this question that speech act- theory  as originally conceived  and agent belief states  can contribute to an informative specification. we specify adda and selecta with respect to beliefs  desires and intentions  i.e. by giving an intentional semantics at level  hi  of section 1. 
for example  reconsider our 'sincerity' axiom: 

the 'logical operation' of this axiom is closely related to the bdi agent architecture of kirmy et al.   where the combination of beliefs and desires trigger intentions. as an informative specification  it guides agent developers as to the circumstances under which inform speech acts could  or should  be performed  but does not constrain them to use bdi architectures. 
we then provide  as an informative specification  that: 

which is to say that the basic intuition behind receiving  from a sincere agent  an inform message not in the context of any protocol  is just to add the content to the agent's information state. however  the implementation of adda for a particular agent a need not be so trusting  also it could do 'its own thing' in dealing with additional inferential effects  inconsistency  multiple sources of information  belief revision  non-monotonic logic   copies of  p  resource logics   and so on. 
　we illustrate this idea in the next section. we conclude this section with the observation that the extent to which agents wish to expose their behaviour by publicising their add and select functions  also defines the extent to which this behaviour can be verified. otherwise  all that is required  to be compliant to a standard  

for example  is that an agent should make an appropriate response to a particular input  as given by the reply function  and this can be verified with relative ease. 
1 	a b d i implementation 
in this section  we discuss an operational model of the 
bdi agent architecture as suggested in  kinny et al.  
1   enhanced to accommodate bdi-reasoning about agent-agent communication protocols based on the semantics described in the previous section. 
1 	the bdi architecture 
kinny et al 's  bdi-agent architecture consists of the modules illustrated in figure 1. here  the belief database contains facts about 'the world'; the desires module contains goals to be realized; the plan library consists of plans  which are sequences of actions which achieve goals; and the intention structures contains instances of those plans chosen for execution  and currently being executed . the interpreter executes intentions  updates beliefs  modifies goals  and chooses plans. 

figure 1: bdi agent architecture 
　the interpreter execution cycle is as follows: at time t: certain goals are established  and certain beliefs are held. event s  occur that alter the beliefs or modify goals  and the new combination of goals and beliefs trigger action plans. one or more action plans are selected and placed on the intention structures. an executable plan is selected and one step is executed  whereby the agent performs the action. performing the action changes the environment and may establish new goals and beliefs  and so the interpreter execution cycle starts again. 
　we now describe how we envisaged the bdi architecture working in conjunction with the acl semantics  for a pair of communicating agents. 
1 	a semantic specification 
consider again the communicating agents in figure 1. 
suppose they are telling each other when they have changed something in the environment in which they are embedded. to ensure that their perceptions of the environment are aligned  they will use a mutually agreed protocol  called datasync. this protocol is illustrated as a finite state diagram in figure 1. 
s: ack 
figure 1: datasync protocol 
　the idea is for one agent to inform the other agent  of changes in the environment  and for this other agent to agree the change  via the acknowledge speech act ack   or correct it via another inform speech act. 
　we can formalise this as part of our acl semantics as follows  by specifying  inter alia: 

　the reply function therefore specifies the acceptable replies to messages sent in the context of the datasync protocol. the protocol is initiated by an inform message  and terminated  with success  by an ack message. 
　ignoring for now issues like language  time  ontology and protocol  an agent designer could specify an agent a's behaviour for reacting to an inform message with content  from an agent s using the datasync protocol to be: 

　this is only an exemplary specification in a semiformal notation. note the formula  denotes the complement of formula  it treats each of the three cases: when the content of the inform is already known  new  or contradictory. the function  is a gloss on a's belief revision for contradictory statements  cf.  gathers  1    and we are not saying how the agent ensures its database is consistent  but there are algorithms for doing this  e.g. forward chaining . 
	pitt and mamdani 	1 

　this intentional reading of informing agent a of some information can be paraphrased informally as follows  where all replies are intuitively intentions  to be consistent with the acl semantics : 

   this is of course just one formulation: the treatment of new and contradictory information may not be treated in the same way  for example. it is also easy to refine such a specification to incorporate elements of trust. furthermore  since the sincerity condition is predicated on the notion of co-operation; and all speech acts involve the receiver recognizing an intention on the part of the sender  agents are free  but not forced  to make further inferences about the other agent's beliefs and intentions. different inferences may be more appropriate for particular types of agents in different kinds of application. 
　however  we can now appreciate the potential utility of intentionality for individual agents: indeed  we can even imagine  publishing' this behavioural interface in an open system. it then becomes effectively a social commitment on the receiving agent's part  ef.  singh  1  . the intriguing possibility then is that the 'standard' behaviour  sought by the fipa1 specification  could actually be an emergent property of the system. for now  we show how this specification operates in the communicating agents example of section 1  where each agent is  at least specified as  a bdi agent. 
1 	the semantics in operation 
in the plan library  we posit plan axiom schema of two types  which we call proactive and reactive. the two types of plan both generate intentions. the first type is the type of plan schema that triggers a dialogue  with the agent as the initiator of that dialogue. the second type is the plan schema that an agent uses to reply to messages that have been received  determining  for example  if there were a protocol  which possible responses would conform to the protocol. 
   we suppose that both agents have plan axiom schema in the plan library  which for agent a  where a could be sender s or receiver r  although it need not be the same for both  are: 

the first plan axiom schema is proactive and states that if agent a believes and has the goal that another agent r share that belief  the preconditions for action   then agent a will form the intention to inform r of  using the datasync protocol. the other two plan axiom schema are reactive and determine replies. the former states that after some agent i  has informed agent a of some information  if agent a believes the proposition and wants the original sender to believe this  then it will form an intention to reply with an acknowledgement. similarly  if the informed agent disagrees with the content it will inform the originator of this. it should be clear that the latter two axioms specify the decision making for response making in the datasync protocol if adda has been implemented as described above. 
   we now logically animate this specification for a sending and a receiving agent. for the sending agent .s  in its belief database there are facts  such as p  implicitly  and modal action schema. these state the beliefs that an agent will have after performing an action. for example  for agent  s  we could have: 
are any agent and formula respectively. the post-condition of the modal action schema specifies the intended rational effect of the action which the agent will believe after doing the action  if the agent later discovers it is not true1  it will need to do belief revision . this formula concerns the inform performative  irrespective of the protocol it is used in. 
　in the desire database  there are goals. for example  if the goal of s is for r to believe p  we have  
　beliefs and desires are used to trigger a plan action schema and create instances which will be executable plans. in the case of s  the following simple plan will bo placed on the intention structures: 

when the intention is chosen for execution by the interpreter  the intention is fulfilled  the belief state changes according to the appropriate instance of the action axiom schema  i.e.  the goal is discharged and withdrawn from the desire database  so we end up  in this case  with: 

this is the situation with agent s. for agent r  who receives the message  the database prior to receipt might have been entirely empty: 

1 	distributed al 

now it receives the message inform  r  p  datasync   the interpreter of r runs its procedure addr on this input and this database; being a new conversation  the protocol state is 1. if addr is implemented as specified above  

then r will add p to its belief database  p is not present and adding it is consistent   and generate the goal for the sender to believe that it believes it: 

from the reactive plan axiom schema in the plan library  after an inform r will have the intention to send an acknowledge or an inform. the bdi interpreter is effectively applying the selectr function  and as with the sending agent beliefs and desires are used to trigger a plan action schema and create instances which will be executable plans. the appropriate intention is placed on the intention structures: 

now we see that the meaning of the speech act is indeed the intention to reply with a valid performative in the context of a protocol  as specified in sections 1 and 1. 
1 	conclusions and further work 
with growing investment in open  agent-based system design and deployment  there is a need for software standards defining the interface between agents. the f1pa standardisation body is probably the most important recent development in the agents field and offers significant potential advantages for developers of open  heterogeneous  and interoperable agent systems. 
　however  there are considerable limitations of using mental attitudes for standardising the semantics of the acl  singh  1 . intentionality is concerned with agent  internals and a communicative act is an external phenomenon: mental attitudes only give a reason for and not the meaning of the performatives. they can give guidance to developers but may be too strong a constraint for heterogenous agents in varying applications. 
　the protocols specified by fipa can give purpose and meaning to individual performatives but only in the context  of a conversation that has an identifiable objective. however  there appears to be a growing consensus that conversations  protocols  and social context are the important factors to consider in defining an acl's formal semantics  singh  1; labrou and finin  1; smith et al.  1 . 
　our own experience of applying the fipa specifications suggests that interactions in a multi-agent system could be designed on the basis of the standard performatives and protocols. this work has gone one step further and formalised the normative use of performatives in specific protocols. furthermore  the relationship between what an agent 'thinks' about the content of a message to what it 'does' in response to receiving that message is formalised through informative specifications expressed in terms of beliefs  desires and intentions. 
　the semantic framework described here actually delines a class of acls. the challenges ahead then include: extending an acl specification with new protocols and performatives  and customising with intentional specifications for particular applications; describing conversation states by structures which are affected by speech acts; allowing for multi-party conversations; identifying a way for agents to publicise thier understanding and use of new performatives and protocols  so-called brown pages ; and providing a mechanism for agents to discover and learn a new dialect. the issues of social behaviour and time also need to be addressed as these are both significant factors in why and when agents communicate 
　in the meantime  we have submitted this work to fipa as a proposal for the acl semantics in fipa1. 
acknowledgements 
this research has been undertaken in the context of the 
uk epsrc/nortel networks joint funded project casbah  gr/l1  and the eu funded acts project mariner  ac1 . we are grateful for the constructive comments of the anonymous reviewers. 
