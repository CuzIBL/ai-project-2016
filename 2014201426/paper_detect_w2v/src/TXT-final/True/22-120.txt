 
the traditional crossover operator used in genetic search exhibits a position-dependent bias called the dcfining-length bias. we show how this bias results in hidden biases that are difficult to anticipate and compensate for. we introduce a new crossover operator  shuffle crossover  that eliminates the position dependent bias of the traditional crossover operator by shuffling the representation prior to applying crossover. we also present experimental results that show that shuffle crossover outperforms traditional crossover on a suite of five function optimization problems. 
1. introduction 
the selected knowledge representation serves as a strong learning bias: it defines the concept space to be searched by the learning algorithm  utgoff 1 . additional biases are often employed to direct search towards favored regions in the space. we show that unforeseen interactions between the representation and search mechanism can result in hidden biases that hinder search. we present an example where position dependent search biases interact with representations of identical expressiveness to yield different search behavior. the search mechanism we investigate is the crossover operator of the genetic algorithm developed by holland  holland 1 . 
　　　a genetic algorithm  ga  is a powerful general-purpose search method based on mechanisms abstracted from population genetics. the ga maintains a set of trial solutions called a population. it operates in cycles called generations that produce successive populations by survival-of-thefittest selection followed by genetic recombination. trial solutions are represented as strings called chromosomes that are usually coded with a binary character set. 
1 	machine learning 
　　　the two most commonly employed genetic search operators are crossover and mutation. crossover produces offspring  new trial solutions  by recombining the information from two parents in the manner illustrated in figure 1. it is the major exploratory mechanism of the ga. mutation prevents convergence of the population by flipping a small number of randomly selected bits to continuously introduce variation. 

　　　since its introduction  the ga has been the focus of research attempting to better understand its power  overcome its weaknesses  and apply it to problems calling for efficient and flexible search 
 grefenstette 1  grefenstette 1  schaffer 1 . much of this research has centered on representational issues; the effectiveness of the ga depends heavily on the chosen representation. in this paper we discuss one such issue  the positional dependence of string representations when traditional crossover is used  and present a new crossover operator  shuffle crossover  that eliminates it. we present experimental results that indicate shuffle crossover is superior to traditional crossover. we believe that the position dependent bias of the traditional crossover operator is an instance of a general knowledge representation problem: unanticipated search bias emerging from an interaction between the representation and search heuristics. 

1. shuffle crossover 
traditional one-point crossover operates by  1  randomly pairing two individuals   1  selecting a random position along the string  and  1  then exchanging the segments to the right of this position  see figure l . a side effect of this operation is that interacting bits which are relatively far apart on the string are more likely to be disrupted  separated  by crossover than bits which are relatively close together. conversely  non-interacting bits which are close together on the string are more likely to be treated by crossover as related components  i.e.  not separated  than bits which are far apart. 
　　　traditional crossover's bias in favor of short schemata  small clusters of neighboring bits  can be exploited by placing interacting bits next to each other on the chromosome when designing the representation for a particular problem. there are  however  problems with this solution. first  it may not be known which bits are related and which are not. in fact  the ga is most useful for large  complex  poorly understood search spaces where there is little or no a priori knowledge about which bits interact. second  a linear string may not allow all interacting bits to be placed close to each other if some of them also interact with other bits. third  the task is not simply to place interacting bits close to each other  but also to place non-interacting bits as far apart as possible. unfortunately  there is usually no way to position bits on a one-dimensional string so that their relative locations reflect their degree of expected interaction even when this is known. 
　　　hypothesizing that the positional bias of onepoint crossover is more likely to work against the ga than to aid it  we developed an alternative form of crossover  shuffle crossover  to eliminate the bias . shuffle crossover is similar to one-point crossover except that it randomly shuffles the bit positions of the two strings in tandem before crossing them over and then unshuffles the strings after the segments to the right of crossover point have been exchanged. thus  crossover no longer has a single  consistent positional bias because the positions are randomly reassigned each time crossover is performed. 
　　　shuffle crossover is similar  but not identical  to ackley's  uniform  crossover operator  ackley 1 . uniform crossover exchanges bits rather 
1. holland  holland 1  proposed the inversion operator to ameliorate the positional bias  but its use requires genes that can be interpreted independent of position. other crossover operators that have less positional bias have also been proposed  including two-point crossover  de jong 1  and punctuated crossover |schaffer and 
morishima 1|. 	see 	|eshelman  	caruana  	and 
schaffer 1  for a more complete discussion of the positional bias of various crossover operators. 
than segments  i.e.  for each bit position  bits are exchanged between the paired individuals with fixed probability p. the number of bits exchanged with uniform crossover follows a binary distribution. shuffle crossover can also be viewed as exchanging bits whose shuffled positions are to the right of the crossover point  however  the distribution of the number of bits exchanged is uniform  just as it is with traditional one-point crossover. this means that shuffle crossover preserves the same number of schemata as traditional crossover  although  of course  these will usually not be the same schemata . moreover  like uniform crossover  shuffle crossover overcomes the positional bias of traditional one-point crossover  but without introducing an additional parameter to define the bit exchange probability. 
　　　in order to exhibit the qualitative difference between traditional crossover and shuffle crossover  we devised two special functions which we call the plateau and trap functions . both functions consist of a series of thirty independent parameters  each represented by a 1-bit gene. the evaluation of the chromosome is the sum of the scores of the individual genes. in the plateau function each gene is given a score of four if all four bits are 1s  otherwise  a score of zero. in the trap function each gene is given a score of four if all four bits are o's  otherwise its score is determined by assigning one half point for each 1. thus  the plateau function is a series of independent all-or-nothing subtasks  whereas the trap function is a series of independent bimodal subtasks with partial credit leading away from the global optimum for the subtask. 
　　　these functions were designed so that the building blocks  the 1-bit genes  would be independent of each other  but so that the bits within a gene would interact. in order to exhibit the effect of positional bias  two representations for these problems were studied: adjacent  in which the 1 bits in each gene are placed next to each other on the chromosome  and distributed  in which the 1 bits in each gene are maximally separated  i.e.  the 1 bits of gene one were at loci 1 1 and 1  etc.  
　　　each of these functions was searched 1 times with both the adjacent and distributed representations using a population of 1 chromosomes  a mating rate  crossover rate  of 1 and a mutation rate of 1. these are values previously suggested as giving generally good search over a range of tasks  grefenstette 1 . each search was allowed a maximum of 1 trials  chromosome evaluations . the results of these experiments are shown in tables 1 and 1. note that the values in these tables reflect inverting  because our ga minimizes  and scaling the functions  so that the worst possible 
1. 	similar 	to 	ackley's 	functions 	of 	the 	same 	name 
|ackley 1 . 
	caruana  eshelman and schaffer 	1 
score is one and the best possible score is zero. 
table 1. the 1-bit plateau problem' 


　each cell contains the mean of the best individuals from 1 genetic searches  each to 1 trials. the standard error of the mean for all cells was less than 1. 
as expected  the ga using traditional one-point crossover does significantly worse using the distributed representation than it does using the adjacent representation because of the bias against long schemata. shuffle crossover  however  yields the same performance on both tasks with both representations; it has no length bias. 
　　　one interesting difference between the two functions is that traditional one-point crossover outperforms shuffle crossover on the trap problem using the adjacent representation  but shuffle crossover is better on the plateau problem than traditional crossover using either representation. although the trap function shows that it is possible for a task to be. constructed in such a way that the bias of the ga with traditional crossover works to advantage  we find that this is difficult to do in practice. 
1. empirical tests 
tests with the plateau and trap functions show how traditional crossover's position dependent bias can influence search performance. they also demonstrate that shuffle crossover eliminates this bias and can yield improved performance. both of 
1 	machine learning 
these results  however  were obtained with functions and representations devised to exhibit specific characteristics. in this section we attempt to determine if traditional crossover's defining length bias hinders search in practice  and whether shuffle crossover eliminates this bias without otherwise hampering search. to do this  we compare the performance of traditional crossover and shuffle crossover on the minimization of five scalar-valued functions used by de jong  de jong 1  to test the ga's performance on search spaces with a variety of characteristics. the test functions are summarized in table 1. to compare the two methods  we adopted an arduous but  we hope  unbiased methodology. the objective of this methodology is to determine the parameter settings that should be used to compare the two crossover operators on the test problems. 

grefenstette  grefenstette 1  found a set of 
ga parameters  crossover rate  mutation rate  population size  and scaling window  that were optimal or near-optimal on fl-f1 using traditional one-point crossover. unfortunately  we are unable to use the parameters he found because our experiments differ from his in four important ways. first  caruana and schaffer  caruana and schaffer 1  demonstrated the superiority of gray coding to binary coding for these functions; we now use gray coding in all of our experiments . second  we use an improved selection procedure devised by baker 
 baker 1  that was not available at the time grefenstette ran his experiments. third  grefenstette compared online performance at a fixed number of evaluations  1 . gray coding 
1. see |schaffer et al. 1  for a discussion of how genetic search is influenced by changes in the control parameters. 
1. for an extension of this work that shows mixing binary and gray representations is better yet  see  caruana  schaffer  and eshelrnan 1 . 
1. online performance is the average performance of all trials explored by the search. it is appropriate when every trial must be  paid for  during a search  de jong 1| 

improves performance enough that comparison at 1 evaluations is no longer interesting: on some of the functions  the searches consistently find the optimum before 1 evaluations. rather than try to find a new fixed number of evaluations at which to compare performance  we use the mean number of evaluations required to find the global optimum as our criterion  ackley 1 . to locate an optimal or near-optimal parameter set for this criterion for the suite of problems  one must compensate for the fact that the mean and variance of this performance measure will be different for each of the five functions; one must normalize for these differences. 
　　　we compensated for the relative difficulty of the different functions by first estimating how well a ga could do on each one independently. to do this  we used a meta-ga  grefenstette 1  to find the best parameters for each of the two crossover schemes on each of the five functions. this required 1 meta-searches. each meta-search considered mutation rates from 1 to 1  crossover rates from 1 to 1  and populations of 1 to 1 individuals.  we used the elitist strategy  scaling window = 1  and a modified ga that performs restarts - reinitializing the population with random strings - when 1 generations in a row fail to produce a new individual.  for each function we selected the performance of the crossover operator that worked best. the minimum average number of trials to find the optimum for functions fl-f1 were 1  1  1  1  and 1 respectively. 
　　　to locate the best single set of parameters for each crossover operator for the whole suite of functions  we performed a second set of meta-searches using a single performance measure that consisted of a weighted sum of the performance on each of the test functions: 

where perfi is the performance of the ga on functioni  i.e.  the number of evaluations required to find the optimum of that function  and weighty is the average number of evaluations required by the best ga for that function  above . this measure is attractive because it equalizes the importance of all functions by scaling them by their relative difficulty and by compensating for unequal variances. total performances near zero indicate that the ga is able to do as well on the test functions using a single crossover operator and parameter set as it could do using the best operator with a parameter setting optimized for each function. surprisingly  the two meta-gas found the same best parameter set for both crossover operators: population size 1  mutation rate 1  and crossover rate 1. 
　　　using these parameter values  each crossover operator was used to search each function 1 times. 
table 1 shows the average number of function evaluations required to find the global optimum of each of the five test functions as well as the mean total performance for each crossover operator. lower mean values suggest faster  more effective search. the table also contains the results of twotailed t-tests of the means obtained with the two crossover operators. the significantly better performers are shown in bold print in the table. 

　　　these results suggest that shuffle crossover is  in practice  generally superior to traditional crossover. shuffle crossover statistically outperformed traditional crossover on two of the five test functions and is not significantly worse on the other three.  finding two of the five independent tests favoring shuffle crossover is itself significant at the 1 level.  shuffle crossover's total performance is also better  though not statistically significantly so  than traditional lpt crossover's.  other experiments have consistently given shuffle crossover the edge over traditional lpt-crossover in total-performance.  
1. discussion 
inductive learning algorithms use bias in order to make learning more effective  utgoff 1   for example  biasing search towards certain regions of the search space is an important means of enabling efficient learning from a manageable set of examples. in the case of the ga  trials are allocated to clusters of genes based on their observed fitness. the ga's bias  as expressed in the schema sampling theorem  implies that an exponentially increasing number of trials will be allocated to sets of bits 
 schemata  occurring in the better performing indicaruana  eshelman and schaffer 1 

viduals. however  the ga using traditional crossover also exhibits a sampling bias that is sensitive to the position of genes on the chromosome. 
　　　it is recognized that the ga's positional bias  like most biases  can be detrimental if not properly exploited  but it has always been assumed that there are ways of exploiting it. in particular  genes that are thought to interact should be placed near each other on the chromosome. the assumption has been that for some classes of problems there are natural representations that are optimal or nearly optimal. for example  it seems natural to place all of the bits coding for a single numeric parameter next to each other as was done in the tests on fl-f1. unfortunately  it is not clear that this kind of representation will usually  or even often  be good. if the function exhibits behavior similar to a parity function  then traditional crossover's positional bias suggests that it would be better to group the least significant bits together. in fact  for parity problems  the natural representation of keeping the bits defining each parameter together is quite similar to the distributed representations used on the test problems in section 1. thus for parity-like problems the natural representation is likely to be one of the worst representations. 
　　　the results presented suggest that the natural representation probably is not often the best - or perhaps even a good - representation. any attempt to exploit traditional crossover's positional bias is in danger of being counterproductive because the obvious effects of the bias are counteracted by less visible  but still important  effects. caruana and schaffer noted a similarly opaque bias resulting from an interaction between representations  binary coding and gray coding  and the mutation operator  caruana and schaffer 1 . they used the term hidden bias to refer to the general class of biases resulting from unforeseen interaction between representations and search operators. the positional bias of traditional one-point crossover leads  we believe  to another instance of hidden bias. 
　　　the precise mechanisms by which traditional crossover's positional bias hinder search using natural representations is not intuitively obvious. we hypothesize that there are two undesirable aspects to the sampling bias caused by traditional crossover's favoring of short schemata. one of these is well known  the other is not. first  interacting clusters of bits that are far apart on the chromosome are less likely to propagate together. second  short clusters of non-interacting genes  i.e. not causally related to the good performance  but occurring by chance in better individuals  are less likely to be disrupted  contributing to premature convergence of the gene pool to suboptimal individuals. this later phenomenon we call spurious correlation. 
　　　we believe that it is the combination of these two effects that accounts for the behavior observed 
1 	machine learning 
on the test functions. the new shuffle crossover operator is designed to eliminate these biases by having a schema disruption probability that is independent of schema defining length. more generally  shuffle crossover provides for better sampling of interacting bits which are far apart  i.e.  long defining length  and more disruption of neighboring bits that are only spuriously correlated. it is true that shuffle crossover will also be more disruptive of neighboring bits that truly interact  but our data shows this to be a price worth paying. in the absence of information prescribing how to work in concert with crossover's positional bias  we recommend eliminating this bias altogether. our results indicate that eliminating this bias is relatively straightforward  incurs little computational cost  and is indeed beneficial. 
1. summary 
although the positional bias of the traditional onepoint crossover operator is well known in the ga community  little has been done to suggest how to work in concert with it. our experiments demonstrate that it may be harder to exploit this bias than had been thought  and that it may be more useful to eliminate it via shuffle crossover. our experiments indicate that shuffle crossover is often superior to  and probably not often worse than  traditional crossover for ga function optimization. we believe that our results apply to most domains where it is not obvious how to select a representation to take advantage of traditional crossover's positional bias. we also believe that the hidden bias resulting from the interaction between traditional crossover's positional bias and the representation is not alone  and that other hidden biases wait to be made less hidden and then exploited  if possible  or eradicated. 
