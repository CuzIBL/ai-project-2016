 
model-based diagnosis algorithms face a combinatorial explosion. to combat this explosion  this paper presents a fundamentally new architecture  implode  which constructs an abstract representation of the environment  the conflict  and the diagnosis spaces using a sensitivity analysis of assumptions. experimental results show that the most dramatic improvement is obtained for circuits which are the most difficult to diagnose using previous algorithms. moreover  typical sources of combinatorial explosion  such as reconvergent fanout  are a source of combinatorial implosion for implode. 
1 	combinatorial explosion 
model-based diagnosis engines  de kleer and williams 1; de 
kleer 1; reiter 1  face a potential combinatorial explosion of: 
1. the environment space  
1. the conflict space  
1. the diagnosis space. 
this paper presents a new architecture  implode  which requires neither a candidate generator nor checking candidates for consistency. implode uses a sensitivity analysis of assumptions to assign a criticality level to assumptions. implode keeps track of the assumptions* criticality level  and builds up an abstract representation of the environment  conflict and diagnosis spaces  using a database of: 
1. critical environments  
1. critical conflicts  
1. critical diagnoses. 
implode avoids the combinatorial explosion of previous generations of model-based diagnostic engines. experimental results show that the most dramatic improvement is obtained for the circuits which are the most difficult to diagnose using previous diagnosis engines. moreover  typical sources of combinatorial explosion  such as reconvergent fanout  are a source of combinatorial implosion for implode. 
1 	automated reasoning 
1 sensitivity analysis 
one of the earliest model-based diagnosis engines is sophie  de kleer and brown 1 . sophie utilizes a form of sensitivity analysis based on partitioning the set of assumptions supporting a prediction into two sets: 
1. the set of primary assumptions  p  
1. the set of secondary assumptions  s. 
sophie's criterion for determining whether an assumption is primary or secondary is based on a form of order of magnitude reasoning. an assumption which significantly contributes to the magnitude of the predicted value is primary otherwise it is secondary. in other words  the magnitude of the predicted value is extremely sensitive to its primary assumptions. one of sophie's rules which exploits this distinction restricts the hypothesis space as follows: // two environments and  support the same prediction  then all the components which belong to are exonerated. 
the intuition behind the rule is as follows. if an assumption which significantly contributes to the predicted value is violated  then the predicted value would be significantly different. thus  assumptions not in common between the antecedent primary assumption sets are exonerated. 
　sophie's use of sensitivity analysis for model-based diagnosis is based on a number of presuppositions which limit its generality: 
1. environment space: the criterion used to distinguish primary and secondary assumptions is specific to the domain of analog circuits. 
1. conflict space: the partitioning into primary and secondary assumptions is not extended to conflicts - sophie does not distinguish between primary and secondary assumptions in conflicts. 
1. diagnosis space: the exoneration rule is based on the single-fault assumption. 
1 critical environments and abstractions 
the assumption set a contains for every component 
 the description of the system to diagnose and the observation set are given by  effectively  a propositional theory t over a set of literals ♀. we presume that 1 is consistent. a node n designates a literal  that is an atom or its negation. 
　an environment e supporting a literal n is a set of assumptions such that: 


	raiman  de kleer  and saraswat 	1 

1 	automated reasoning 
searching for critical conflicts enables an architecture for model-based diagnosis which ensures the consistency of the candidates while bypassing the interpretation construction and context switching of conventional diagnostic algorithms. 
1 	critical probes 
for the purpose of this paper we assume that probing is the only kind of action available to differentiate among different diagnoses. we ignore component failure rates and cost of probes. the conventional  gde-like  approach to finding the probe which differentiates best among all the diagnoses is to determine the environments for the different nodes. 
　our strategy here is to focus on critical diagnoses and find a probe which differentiates best among the critical diagnoses. to identify this probe we would like to consider the nodes' critical environments. to justify ignoring the supersets of critical environments we show that once the diagnosis space is restricted to the set of critical diagnoses the critical environments possess the following entailment property: 
	raiman  de kleer  and saraswat 	1 

1. for any literal with more than one critical environment  suppress all but one by marking it inactive because of the chosen critical environment. 
1. apply resolution. 
　note that in this algorithm the number of critical environments for a node can never explode. even in examples  such as levels of alternating and/or gates  which cause exponential behavior for gde-like algorithms for single faults implode performs well. 
1 	implode example 
t  the initial set of clauses contains the models for all the components and connections. for example  the buffer b1 is modeled by the two clauses: 
		 1  
1 	automated reasoning 
1 	experimental results 
we have adapted our  de kleer 1  model-based diagnosis algorithm to implement implode. implode is sufficiently different  that an overall reimplementation would produce far more significant performance improvements. but we report preliminary results in the following table. this table provides the results on only a few instances of each circuit. all instances are examples which had been earlier determined to be the most difficult for the unoptimized focused algorithm  de kleer 1  and therefore the timings are far worse than average for those circuits. each run is of a single test vector and one symptomatic output. all of the circuits are from the test suite provided in  brglez et al. 1 . the timings are obtained on a symbolics xl 1  and include the setup time for running the experiment  which is now the dominant cost . the table has two columns. the first contains the timing for the algorithm of  de kleer 1  entitled  aaai1   the second one contains implode's timing. 

　implode shows the greatest improvement on the circuits with significant redundancy and reconvergent fanout-something extremely difficult for previous algorithms. for example  circuit c1 is a 1 by 1 bit parallel multiplier and manifests a great deal of reconvergent fanout. 
device gates aaa1 implode c1 1 1 .1 c1 1 1 .1 c1 1 1 .1 cl1 1 1 1 c1 1 1~ 	1 c1 1 1  	1 c1 1 1 1 c1 1 1 1 c1 1 1 c1 1 1 1 