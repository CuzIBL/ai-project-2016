 
this is a report of the application of the 
model generation theorem prover developed at icot to problems in the theory of finite quasigroups. several of the problems were previously open. in this paper  we discuss our theorem proving methods  related to those of the existing provers satchmo  manthey  bry  and otter  mccune   and note how parallel processing on the icot parallel inference machines was used to obtain high speeds. we then present and discuss our machine-aided investigation of seven problems concerning the existence of types of quasigroup. 
　the field of finite algebra is rich in problems suitable for computational treatment. in particular  questions about the existence of structures of given finite sizes may usefully be approached using techniques for theorem proving or for constraint satisfaction. perhaps the best known recent result of this sort is that of lam  thiel and swiercz  lam et al  1  showing that there is no projective plane of order 1. the present paper reports further research in the same tradition in which our tool was the icot theorem prover mgtp and in which we were able to obtain new existence and nonexistence theorems for certain interesting classes of quasigroup. it should be noted that mgtp is a general-purpose theorem prover not at all designed with quasigroups in mind. hence this application of artificial intelligence research to open mathematical problems was rather unexpected. we welcome it  however  as we feel that automated reasoning has reached the point where it can and should address the needs of researchers in other disciplines. 
1 	finite domain searching 
where a first order theory has finite models  a reasonable way to find some is to fix on a particular finite domain of objects and to search for interpretations of the function and predicate symbols as functions and predicates on that domain  constrained to make all of the axioms of the theory true. finite model generation may thus become a constraint satisfaction problem of the familiar sort  and may yield to the familiar techniques approprite 
1 	automated reasoning 
to such problems. to illustrate with a deliberately triv-
ial example  consider the theory of semigroups. this has only one axiom  an equation 

and has  of course  models of every cardinality. to find the semigroups of order 1  for instance  we fix the domain as consisting of three objects; the numbers 1  1 and 1 will do nicely. now we need to determine the value of x o y for each choice of x and y from the domain  giving 1 cases to determine and 1 possible values for each case. evidently there are 1 or 1 possible vectors of 1 values in this search space. the  good  ones are those which make true every ground instance of the associativity axiom such as  so each bad 
vector contains a set of  at most  four values which suffice to refute some such formula. for example  the four assignments 
together force  thus violating as-
sociativity. therefore the disjunction 

is one of the ground negative constraints of cardinality 1 which all good vectors must obey. 
　there are many methods of enumerating the vectors which do obey such a set of constraints. we used a backtracking search technique based on automated deduction with a clausal representation of the problem  as detailed below  but there is no reason why other styles of search such as that embodied in arc consistency or path consistency algorithms should not be employed to much the same effect. our concern in this paper is to report the method which was successful in practice  not to prove that it is the best method possible. 
　whatever techniques are used  some general heuristics are in order. firstly  whenever one of the ground negative constraints  as instanced above  is used to refute an attempt to build a model  it should be remembered somehow and the search control should ensure that it never again gets incorporated into a partial model candidate. the search will typically backtrack many times  but it should never do so twice for the same reason. secondly  it obviously pays to minimize the furcation of the search tree. hence where there is a choice as to which cell is to be given a value next  choose one with the smallest number of possible values  given the partial structure already in place . an early version of our program mgtp failed to do this and constructed over 1 million branches on problem qg1 below; after the heuristic was added  it branched just 1 ways on the same problem! thirdly  as is well known  most algebraic search problems permit early detection of some or all isomorphisms and by attending to these we may frequently cut down the search space by some orders of magnitude. in the cases treated below  we used a simple initial restriction of the problem to avoid searching a great many isomorphic subspaces. 
　naturally  we do not claim originality for any of these general search heuristics. indeed  they are rather wellworn. nonetheless  we wish to draw attention to them since they were essential to the success of our experiments and since it is still common to find such obvious points overlooked. 
1 	the program: m g t p 
1 	otter  satchmo and m g t p 
otter  mccune  1  is a very efficient first order theorem prover. it can be seen as computing the closure of a set of axioms under selected rules of inference. it works with two set of clauses called the usable set  u  and set of support  sos . in each step it moves a clause c from sos to u  generates immediate consequences of c in combination with with members of u and stores them in sos. essential to its strategy is the avoidance of possible regeneration of redundant consequences mainly by rejecting subsumable clauses instead of storing them  forward subsumption . it may also apply backward subsumption  whereby newly kept clauses are used to simplify the existing u and sos. it gives the option of various rules including resolution and some of its more powerful relatives such as hyperresolution and unit-resulting resolution  as well as a wide variety of equality reasoning facilities such as forms of paramodulation and demodulation. 
　satchmo  manthy and bry  1  can be seen as a specialized theorem prover for solving only range restricted problems  using the important technique of case splitting. range restricted problems are those which assure that all derived positive clauses are ground. case splitting  as is familiar  is a matter of treating clauses of a certain type  usually  as in satchmo  positive ground clauses  by assuming each of their literals in turn in order to reason by cases. it is thus fundamental to reasoning in the style of semantic tableaux. given range restrictedness  case splitting is safe from the problem of common variable handling between the split literals. like the prolog technology theorem prover described in  stickel  
1  satchmo takes advantage of prolog's optimization techniques by compiling clauses for runtime efficiency. 
mgtp  model generation theorem prover  is writ-
ten in the parallel logic programming language kl1. there are two versions of the program: mgtp/g for range-restricted problems and mgtp/n for  horn  nonground problems. see  fujita tt a/  1  for a description. the basic algorithm of mgtp/g is equivalent to that of satchmo  while that of mgtp/n is based on that of otter. both versions run sequentially on the psi workstations and also on the pim  parallel inference machine  developed at igot. for the algebraic problems considered in the present paper  only mgtp/g was required. satchmo's technique of compiling clauses into a logic programming language is adopted by mgtp naturally but not trivially. how mgtp/g uses the power of kl1 to maintain efficiency  fuchi  1; fujita and hasegawa  1l is outside the scope of this paper. this basic efficiency  is the one of the important sources of mgtp's success  even though without heuristics there is no hope of managing the combinatorial explosion. 
1 	problem representation and heuristics 
as in most artificial intelligence applications  heuristics appear to be very important in the attack on difficult model generation problems. all advanced uses of otter  such as solving the very difficult condensed detachment and related problems reported in  wos et a/  1   use weighting mechanisms for picking the next clause from sos. the simplest method of assigning weights to clauses is to count the constituent literals  and the next simplest is to count symbols. the latter is otter's default. more elaborate weighting techniques are of considerable interest  but are not the focus of the present paper. 
　heuristics for mgtp are in a sense similar to those for the otter. we used a weighting function of the number 
of literals in each clause  corresponding to the number of ways the search tree will branch. a unit clause has lowest weight of all. we then simply choose to split a clause of lower weight rather than one of higher. clearly  this is an implementation of the general principle alluded to in the last section  of minimising furcation of the search tree. in counting literals for this purpose  we omit any that could directly produce the empty clause by clashing with a negative clause. we also omit any literal l such that there exist clauses 

in the set u  since we can look far enough ahead to see that such l could be resolved away and will therefore generate only a dead branch. 
　of course such weighting methods may destroy completeness if the domain of the problem is infinite  but there are many ways to escape from this. for example  otter has the strategy of moderating its weight-directed search by letting every nth clause come from a breadth first search. for finite domain problems such as n-queen problems and the peiletier and rudnicki problems  however  a weight strategy such as ours does not endanger completeness. moreover it prunes an extremely large 
	fujita  slaney  and bennett 	1 
　the problem description for mgtp theorem prover is very simple  figure 1 . the search space of this naive representation is 1 branches. however the heuristics above succeed in reducing it to just a single branch. 
1 	parallelization 
　even though the heuristics dramatically cut down of search space  the hardest problem we solved had millions of cases in the search space as shown in section 1. such search can be split to several processes at any stage of case splitting  since only ground clauses are thus treated and hence no process needs to communicate with any other in order to solve its case. the or-parallelism natural to this problem is enough to exploit almost linear speed-up with 1 processors on the pim-m machine developed at icot. pim-m is a 1-dimensional square mesh mimd machine capable of up to 1 m append lips. 
we solved the hardest problem with 1 1 branches in a little under 1 hours by this machine. it would require over 1 days by a single processor. 
　for load distribution  a simple stochastic mapping function chooses relatively distant processors. the level of task distribution of these classes of problem has been shown to be close to optimal  figure 1   so we did not implement a further level of dynamic load balancing by observing and communicating each processor's load level. this achievement was based on a mimd machine with fine grain and low communication cost; on less advanced mimd computers it would not be so easy. 
1 problems and results 
1 	some quasigroup existence problems 
a quasigroup  denes and keedwell  1  is a set on which is defined a binary operation   such that the equations a x = b and y . a = b have unique solutions for all elements a and b. evidently  the multiplication table of a quasigroup defines a latin square. a quasigroup  like any other algebraic structure  is idempotent 
1 	automated reasoning 
figure 1: speedup on two problems on pim-m 
iff a . a = a for every element a. for the purposes of this paper  we are interested in two types of question regarding finite quasigroups: the existence of conjugateorthogonal  idempotent  quasigroups of certain orders  and the spectra of certain quasigroup equations. 
　where  q .  is any quasigroup  we may define on q some further operations oijk where i  j and k are distinct members of {1 1}. 


　we have investigated the following seven specific problems from  bennett and zhu  1 . the bold numbers in parentheses are those given to the open cases of these problems on pages 1 of  bennett and zhu  1 . 
1. establish the existence or nonexistence of a  1 1 coils v .  1  
1. establish the existence or nonexistence of a  1 1 coils i; .  1  
1. find a schroder quasigroup of order n. in particu-lar  find an idempotent one.  1  
1. find a quasigroup of order n satisfying stein's third law yx.xy - x. in particular  find an idempotent model.  1  
1. investigate the spectrum of  idempotent  quasigroups satisfying the identity  yx.y y = x.  1  
1. investigate the spectrum of quasigroups satisfying the identity xy.y - x.xy. is it restricted to n = 1 or 1  mod 1    1  
1. investigate the spectrum of quasigroups satisfying the identity yx.y = x.yx. is it restricted to n = 1  mod 1    1  
some brief explanations and comments are in order. for more detail on all of these problems  the reader is referred to  bennett and zhu  1 . 
1. the open problem is the case v = 1. otherwise  it is known that solutions exist for every positive integer except for 1  1 and 1. 
1. the problem of existence of  1 l 1 -coils v  has almost been solved. there are only four orders left undecided  namely  v = 1  1  1 and 1. solutions exist for every other positive integer except for 1  1  1 and 1. 
1. the identity xy.yx - x is known as schroder's sec-ond law  and quasigroups satisfying it are called schroder quasigroups. they are well known to be self-orthogonal. the spectrum of schroder quasigroups contains precisely the set of all positive integers n = 1 or 1  mod 1  except n - 1 and possibly excepting n - 1. interestingly  the idempotent schroder quasigroups have the same spectrum  with the additional exception of order 1. 
1. the identity yx.xy = x  stein's third law  also forces quasigroups to be self-orthogonal. its spectrum contains precisely the set of all positive integers n = 1 or 1  mod 1  except possibly n = 1. moreover  there exists an idempotent model of each such order except 1 and 1  and possibly 1. 
1. the spectrum of the identity {yx.y y - x was in-vestigated in detail in  bennett  1 . before the present research  it was known to contain every integer with the exception of 1  1 and possibly excepting {1 1 1 1}. the existence of idempotent models is in rather more doubt. the known exceptions listed in  bennett  1  are 1  1  1 and 1; there are 1 undecided cases  the smallest being 1  1 and 1. 
1. the spectrum of the identity xy.y = x.xy  some-times called schroder's first law  is not very precisely known. in  bennett and zhu  1  we report that it contains all integers n   1  where n = 1 or 1  mod 1   with the exception of n. = 1 and a list of 1 possible exceptions the smallest of which are 1 and 1 and the largest 1. we do not know whether the spectrum is restricted to n = 1 or 1  mod 1 . note that all quasigroup models of this identity are idempotent. 
1. the spectrum of the identity yx.y = x.yx contains all positive integers n = 1  mod 1  except possibly for n = 1. it remains an open problem to determine it more precisely. is it restricted to n = 1 
 mod 1   again  all models are idempotent. 
1 	results 
we present the results generated by mgtp for the seven problems detailed above. in each case we searched for quasigroups of given orders either showing that there exists no model or generating such of the models as were within the search space. some  but not all  isomorphic copies of models were omitted as a result of the search strategy. as stated in table 1  twelve of the cases were left as open problems in  bennett and zhu  1 . the order 1 case of problem qg1 had previously been solved by zhang  zhang  1l  and by us  slaney  1 . 
　in summary  the conditions defining these problems are as follows. 

in most cases the quasigroups were also stipulated to be idempotent: 
x   x = x 
　the elements of the domain for all models were taken to be the natural numbers 1 ... m where m is the order of the desired quasigroups. in order to avoid searching certain subspaces isomorphic to those already searched  we adopted the additional axiom 
a ＊ m  a - 1 
clearly this sacrifices no generality  and eliminates many isomorphic copies though not all. there are more effective ways of cutting out automorphs  which are the subject of some current and projected research  but we present the results of this section as evidence that our rough method works well enough for some non-trivial purposes. 
　figure 1 shows in each case the total number of backtracks  models plus failure branches  in the search tree  the number of solutions found and the time in seconds 
	fujita  slaney  and bennett 	1 


* previously open problem 
+ without assumption of idempotence 
figure 1: the results 
on pim-m with 1 processors. several features of the problems are apparent from the table of results. 
  the first problems we attempted were qg1 and qg1  for each of which we obtained new results as shown. it is clear from the branching factors and runtimes that these two are very similar in degree of difficulty for our program and that their complexity appears exponential. hence we feel that the order 1 cases are not feasible at present without some further insight into either the algebra or the algorithm. similarly  qg1 and qg1 seem to march together in degree of difficulty. 
  problems qgl and qg1 are especially difficult for our program at present. in neither case were we able to get close to the open cases. 
  not all of the previously open problems were par-ticularly hard. the clearest example is problem qg1  though the same is true of the small cases 
1 	automated reasoning 
of problems qg1  and qg1. this reflects the fact that most previous approaches had been by human mathematicians using analytic reasoning  whereas sometimes a machine aided exhaustive search is more effective. 
  where the result of the search is positive  a model being found  it yields the most satisfying kind of 
constructive proof  but where it is negative it yields no readily surveyable proof in the difficult cases. its only report is that it looked everywhere but found no model. while we feel that this is acceptable as a proof we also acknowledge that an analytic proof of the same result would be welcome. at the least  it would provide some deeper and less case-ridden reason to hold  for instance  that there is no quasigroup of order 1 in which  yx.y y = x. 
  the use of an advanced computer was essential to our success in the most difficult cases. the pim-m has 1 processors  so any search with fewer than 1 branches is too trivial to keep it fully occupied. this accounts for the fact that in some cases the increase in time as the problem size increases is less than the increase in the number of branches. where the problem size was sufficient to make parallelization worthwhile  however  almost linear speedup was achieved  since the or-parallel computation requires almost no inter-process communication. 
the new theorems are likely to be useful in research on the motivating problems from design theory  bennett  1 . already we have been able to use the positive result of qg1  that 1 belongs to the spectrum of the equation xy.y - x.xy  to improve the results of theorem 1 in  bennett and zhu  1 . from the list of possible exceptions  we can now show that all of 1  1  1  1  1  1  1  1  1  1  1  1  1  1 and 1 are in the spectrum. combining this with the computergenerated results  we now know that the latter does not contain 1  1  1  1  1  1  1  1 but that it does contain all other values of n = 1 or n = 1  mod 1  with the possible exceptions of 1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 and 1. the negative results are harder to use in this way  though they do help to focus the search for exceptions. 
we wish to remark that the order 1 case of problem 
qgl would be the most interesting to see solved  since a solution would confirm or remove the only remaining undecided order for the existence of a  1 1  -coils  ;   which is an extremely simple and natural construction. the order 1 cases of problems qg1 and qg1 would also be interesting  since a solution to either problem would similarly complete its spectrum. with respect to these problems  however  order 1 is too large for our current technique  as may be seen from the results in table 1  and so these problems remain open and just out of reach. the order 1 cases of qg1 and qg1 could probably be done  given many hours of computation time on pim-m  but there would be rather little point to such an exercise since the results are known. 
1 	appendix: further research 	