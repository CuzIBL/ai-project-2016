 
many real life optimization problems contain both hard and soft constraints  as well as qualitative conditional preferences. however  there is no single formalism to specify all three kinds of information. we therefore propose a framework  based on both cp-nets and soft constraints  that handles both hard and soft constraints as well as conditional preferences efficiently and uniformly. we study the complexity of testing the consistency of preference statements  and show how soft constraints can faithfully approximate the semantics of conditional preference statements whilst improving the computational complexity. 
1 	introduction and motivation 
representing and reasoning about preferences is an area of increasing interest in theoretical and applied al. in many real life problems  we have both hard and soft constraints  as well as qualitative conditional preferences. for example  in a product configuration problem  the producer may have hard and soft constraints  while the user has a set of conditional preferences. until now  there has been no single formalism which allows all these different kinds of information to be specified efficiently and reasoned with effectively. for example  soft constraint solvers  bistarelli et al  1; 
schiex et al  1  are most suited for reasoning about the hard and soft constraints  while cp-nets  boutilicr et al  1  are most suited for representing qualitative conditional preference statements. in this paper  we exploit a connection between these two approaches  and define a framework based on both cp-nets and soft constraints which can efficiently handle both constraints and preferences. 
   *this research was partially funded by afosr  grant f1-1  intelligent information systems institute  cornell university  and f1-1  muri grant on cooperative control of distributed autonomous vehicles in adversarial environments   darpa  f1-1  controlling computational cost: structure  phase transitions and randomization  and f1-1  confi guring wireless transmission and decentralized data processing for generic sensor networks   the italian miur projects napoli and cover  the asi  italian space agency  project ariscom and science foundation ireland. 
　soft constraints  bistarelli et al  1; schiex et al  1  are one of the main methods for dealing with preferences in constraint optimization. each assignment to the variables of a constraint is annotated with a level of its desirability  and the desirability of a complete assignment is computed by a combination operator applied to the  local  preference values. whilst soft constraints are very expressive  and have a powerful computational machinery  they are not good at modeling and solving the sort of conditional preference statements that occur in the real world. moreover  soft constraints are based on quantitative measures of preference  which tends to make preference elicitation more difficult. 
　qualitative user preferences have been widely studied in decision-theoretic al  doyle and thomason  1 . of particular interest are cp-nets  boutilier et al  1 . these model statements of qualitative and conditional preference such as  i prefer a red dress to a yellow dress   or  if the car is convertible  i prefer a soft top to a hard top . these are interpreted under the ceteris paribus  that is   all else being equal   assumption. preference elicitation in such a framework is intuitive  independent of the problem constraints  and suitable for naive users. however  the achilles heel of cp-nets and other sophisticated qualitative preference models  lang  1  is the complexity of reasoning with them  domshlak and brafman  1; boutilier et al  1 . 
　motivated by a product configuration application  sabin and weigel  1   we have developed a framework to reason simultaneously about qualitative conditional preference statements and hard and soft constraints. in product configuration  the producer has hard  e.g.  component compatibility  and soft  e.g.  supply time  constraints  while the customer has preferences over the product features. we first investigate the complexity of reasoning about qualitative preference statements  addressing in particular preferential consistency. to tackle the complexity of preference reasoning  we then introduce two approximation schemes based on soft constraints. 
　to the best of our knowledge  this work provides the first connection between the cp-nets and soft constraints machinery. in addition  for product configuration problems or any problem with both hard and soft quantitative constraints as well as qualitative conditional preferences  this framework lets us treat the three kinds of information in a unifying environment. finally  we compare the two approximations in terms of both expressivity and complexity. 

constraints 	1 


1 	constraints 

1 	consistency and satisfiability 
given a set of preference statements extracted from a user  we might be interested in testing consistency of the induced preference relation. in general  there is no single notion of preferential consistency  hansson  1 . in  boutilier et al.1   a cp-net n was considered consistent iff the partial ordering  induced by n is asymmetric  i.e. there exist at least one total ordering of the outcomes consistent with . however  in many situations  we can ignore cycles in the preference relation  as long as these do not prevent a rational choice  i.e. there exist an outcome that is not dominated by any other outcome. in what follows  we refer to this as satisfiability . it is easy to see that satisfiability is strictly weaker than asymmetry  and that asymmetry implies satisfiability. we will consider two cases: when the set of preference statements induces a cp-net and  more generally  when preferences can take any form  and may not induce a cp-net . 
　when defines an acyclic cp-net  the partial order induced by is asymmetric  boutilier et al  1 . however  for cyclic cp-nets  asymmetry is not guaranteed. in the more general case  we are given a set of conditional preference statements without any guarantee that they define a cp-net. let the dependence graph of ilarly to the graphs of cp-nets: the nodes stand for problem features  and a directed arc goes from contains a statement expressing preference on the values of 
xj conditioned on the value of xi. for example  the set  does not induce a cp-
net  the two conditionals are not mutually exclusive   and the preference relation induced by is not asymmetric  despite the fact that the dependence graph of 
　note that while asymmetry implies satisfiability  the reverse does not hold in general. for example  the set is not asymmetric  but it is satisfiable  the assignment acb is undominated . given such a satisfiable set of statements  we can prompt the user with one of the undominated assignments without further refinement of its preference relation. theorem 1 shows that  in general  determining satisfiability of a set of statements is np-complete. on the other hand  even for cp-nets  determining asymmetry is not known to be in np  domshlak and brafman  1 . 
theorem 1 satisfiability of a set of conditional preference statements is np-complete. 
proof: membership in np is straightforward  as an assignment is a polynomial-size witness that can be checked for non-dominance in time linear in the size of . to show hardness  we reduce 1-sat to our problem: given a 1-cnf formula 
f  for each c l a u s e w e construct the conditional preference statement:   this set of 
conditional preferences is satisfiable iff the original original formula f is satisfiable. d 
   'in preference logic  hansson  1   these notions of consistency as satisfi ability  and consistency as asymmetry  correspond to the notions of eligibility and restrictable eligibility  respectively. however  we will use the former terms as they seem more intuitive. 
　while testing satisfiability is hard in general  theorem 1 presents a wide class of statement sets that can be tested for satisfiability in polynomial time. 
theorem 1 a set of conditional preference statements vt  whose dependency graph is acyclic and has bounded node in-degree can be tested for satisfiability in polynomial time. 
clauses of the formula the proof of theorem 1 . however  when at most one condition is allowed in each preference statement  and the features are boolean  then satisfiability can be reduced to 1-sat  and thus tested in polynomial time. further study of additional tractable cases is clearly of both theoretical and practical interest. 
1 	approximating cp-nets with soft constraints 
in addition to testing consistency and determining preferentially optimal outcomes  we can be interested in the preferential comparison of two outcomes. unfortunately  determining dominance between a pair of outcomes with respect to a set of qualitative preferential statements under the ceteris paribus 

constraints 	1 

assumption is pspace-complete in general  lang  1   and is np-hard even for acyclic cp-nets  domshlak and brafman  1 . however  given a set of preference statements  instead of using a preference relation induced by use an approximation 
sacrificing precision to some degree. clearly  different ap-
proximations  are not equally good  as they can be characterized by the precision with respect to 
plexity of generating    and time complexity of comparing 
outcomes with respect to   . in addition  it is vital that    faithfully extends 	should entail 
call this information preserving. another desirable property of approximations is that of preserving the ceteris paribus property  we call this the cp-condition for short . 
　for acyclic cp-nets  two approximations that are information preserving have been introduced  both comparing outcomes in time linear in the number of features. the first is based on the relative position of the features in the cpnet graph  boutilier et al  1 . this approximation does not require any preprocessing of the cp-net. however  it is problematic when there are hard constraints. the second  based on ucp-nets  boutilier et al 1   can be used as a quantitative approximation of acyclic cp-nets. ucpnets resemble weighted csps  and thus they can be used in constraint optimization using the soft constraints machinery. however  generating ucp-nets is exponential in the size of cp-net node's markov family1  and thus in the cp-net node out-degree. an additional related work is described in lmcgeachie and doyle  1   where a numerical value function is constructed using graph-theoretic techniques by examining the graph of the preference relation induced by a set of preference statements. note that this framework is also computationally hard  except for some special cases. 
　here we study approximating cp-nets via soft constraints  scsps . this allows us to use the rich machinery underlying scsps to answer comparison queries in linear time. moreover  this provides us a uniform framework to combine user preferences with both hard and soft constraints. given an acyclic cp-net  we construct a corresponding scsp in two steps. first  we build a constraint graph  which we call sc-net. second  we compute the preferences and weights for the constraints in the sc-net  and this computation de-
pends on the actual semi-ring framework being used. here we present and discuss two alternative semi-ring frameworks  based on min+ and slo  soft constraint lexicographic ordering  semi-rings  respectively. in both cases  our computation of preferences and weights ensures information preserving and satisfies the cp-condition. we illustrate the construction of the scsp using the example in figure 1  which continues our running example from figure 1. 
　given a cp-net n  the corresponding sc-net nc has two types of nodes: first  each feature is represented in nc by a node vx that stands for a scsp variable with 
  second  for each f e a t u r e s u c h w e have a n o d e w i t h 
	edges in 	correspond to 
　　1  markov family of a node x contains x  its parents and children  and the parents of its children. 
1 	constraints 


constraints 	1 

ences  and guide the user to a consistent scenario. morover  we also plan to exploit the use of partially ordered preferences  as allowed in soft constraints  to better approximate cp nets. finally  we intend to use machine learning techniques to learn conditional preferences from comparisons of complete assignments. 
references 
 bistarclli e/a/.  1  s. bistarclli  h. fargier  u. montanari  f. ros si  t. schiex  and g. verfaillie. semiring-based csps and valued csps: basic properties and comparison. in overconstrained systems. 1. 
 bistarclli et al  1  s. bistarclli  u. montanari  and f. rossi. semiring-based constraint solving and optimization. journal of the acm  1 :1- 1  1. 
 boutilier et a/.  1  c. boutilier  r. brafman  h. hoos  and d. poole. reasoning with conditional ceteris paribus preference statements. in proc. of uazi-1  1. 
 boutilier et al.  1  c. boutilier  f. bacchus  and r. i. brafman. ucp-networks: a directed graphical representation of conditional utilities. in proc. of uai-1  1. 
 boutilier et al  1  c. boutilier  r. brafman  c. domshlak  h. hoos  and d. poole. cp-nets: a tool for representing and reasoning about conditional ceteris paribus preference statements  submitted for publication  1. 
 domshlak and brafman  1  c. domshlak and r. brafman. cpnets - reasoning and consistency testing. in proc. of kr-1  pages 1 1. 
 doyle and thomason  1  j. doyle and r. ii. thomason. background to qualitative decision theory. ai magazine  1 :1  1. 
 doyle and wcllman  1  j. doyle and m. wellman. representing preferences as ceteris paribus comparatives. in proc. aaai spring symposium on decision-making planning  pages 1  1. 
 fargier et al.  1  h. fargier  j. lang  and t. schiex. selecting preferred solutions in fuzzy constraint satisfaction problems. in proc. 1st european congress on fuzzy and intelligent technologies  eufit   1. 
 hansson  1  s. o. hansson. preference logic. in d. m. gabbay and f. guenthner  editors  handbook of philosophical logic  volume 1  pages 1. kluwer  1. 
 lang  1  j. lang. from preference representation to combinatorial vote. in proc. of kr-1  1. 
 mcgeachie and doyle  1  m. mcgeachie and j. doyle. effi cient utility functions for ceteris paribus p