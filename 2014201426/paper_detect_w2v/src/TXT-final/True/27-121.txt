 
we present a simple circumscriptive method for formalizing actions with indirect effects  ramifications   and show that  in several examples  all second-order quantifiers can be eliminated from these formalizations using existing techniques for computing circumscriptions. one of the two symbolic computation methods employed here is a generalization of predicate completion and the other is based on the scan algorithm. the simplicity of our new approach to representing actions is due to the use of the formalism of nested abnormality theories. 
1 	introduction 
solving the frame problem-the problem of representing succinctly what remains unchanged as a result of performing an action-is one of major challenges in the logical approach to artificial intelligence. this problem was one of the motivating factors behind the emergence of several nonmonotonic formalisms in the 1s. it has led  in particular  to the development of circumscription in  mccarthy  1  and  mccarthy  1 . circumscription is a syntactic transformation that expresses a minimality property of models. the idea was to solve the frame problem by postulating that  whenever an action is executed  the  difference  between the two states of the world  before and after the event  is minimal. however  the straightforward formalization based on this idea turned out to be inadequate  hanks and mcdermott  
1 . 
   in this paper  we present a simple formalization of actions using the framework of nested abnormality theories  nats   lifschitz  1   a formalism based on circumscription. the main feature of this framework is that the effects of various circumscriptions are confined to the parts of the axiom set called  blocks.  as a result  the circumscriptions that solve the frame problem become rather simple  and  in several examples  we will be able to eliminate all their second-order quantifiers using existing techniques for computing circumscriptions. these examples involve actions with indirect effects and  in one case  these effects are nondeterministic. one of the two methods for computing circumscriptions employed here is a 
1 	temporal reasoning 
generalization of predicate completion  lifschitz  1  and the other is based on the scan algorithm  gabbay and ohlbach  1 . 
　the idea behind the approach to the frame problem presented here is closest to that of winslett . the main difference is that winslett's formalization is in terms of theory update  and ours includes the full expressive power of the situation calculus. combining the ideas of  winslett  1  with the situation calculus is achieved by the use of nats. 
   another closely related direction of research is described in  lin and shoham  1  and  lin and reiter  1   central to the formalization presented there is a minimality condition formulated in terms of models. to obtain meaningful conclusions with their formalization  lin  shoham and reiter need to impose certain consistency conditions and on include certain  tree axioms   that impose a tree structure to the universe of situations . in contrast  the use of circumscription described in this paper allows us to dispense with the consistency conditions and the tree axioms. 
   also  this paper differs from earlier work in that we investigate the applicability of symbolic methods to computing the circumscriptions involved in the solution to the frame problem-an issue not considered by winslett or by lin  shoham and reiter. 
　the rest of the paper is organized as follows. in the next two sections  we review the notion of a causal theory introduced in  lin and reiter  1  and give a few examples. section 1 introduces the new formalization. in section 1  we illustrate via examples how the effect of circumscriptions can be computed by syntactic manipulations and using scan. in section 1  we relate this paper to action languages  gelfond and lifschitz  1  and indicate directions for future work. 
   for the terminology and notation related to circumscription  the reader is referred to  lifschitz  1 . 
1 	causal t h e o r i e s 
for clarity  we will present the new formalization in the context of a simple class of theories called  causal.  this class of theories is essentially the same as that defined in  lin and reiter  1 . 
　the formalism is based on the situation calculus  mccarthy and hayes  1 . consider a first-order language 

with object variables for situations and actions  and possibly variables of other sorts. in this section  by s we will denote a situation variable  by a an action variable  and by x  y tuples of distinct variables of other sorts. the nonlogical constants of the language are 
  binary function constant result; result a s  is the situation obtained by performing action a in situation s; 
  binary predicate constant poss; poss a  s  expresses that it is possible to execute a in situation s; 
  function constants  some of them possibly of arity 1  called action symbols; for an action symbol a  a x  is an action term; 
  predicate constants called fluent symbols; for a fluent symbol f  f x s  is an atomic formula. 
a language of this kind will be called a causal language. 
　two groups of axioms will be allowed in a causal theory- effect axioms  and  ramification constraints.  in order to describe the syntactic form that these axioms may have  we need the following definition. a formula Φ is a simple state formula if every occurrence of a situation term in Φ is an occurrence of the same variable s as the last argument of a fluent symbol. clearly  so  result and poss cannot occur in a simple state formula. 
　a set of axioms in a causal language is a causal theory if it consists of 
  some effect axioms of the forms 

 !  
where vf x  a  s  is a simple state formula  
  some ramification constraints  that are assumed to be simple state formulas that do not contain action terms. 
1 	examples 
we will now illustrate the definitions introduced so far with a few examples. the first example is reproduced from  lin and reiter  1 . 
e x a m p l e 1. consider a blocks world domain in which the only actions possible are painting blocks with different colours. to describe this domain  we first introduce an action term paint x y  that stands for the action of painting block x with colour y. the following effect axiom describes what this action does: 
poss paint x y  s  	colour  x  y  result paint x  y   s  . 
note that this axiom can be rewritten as pos$ a  s    a = paint x  y  colour x  y  result a  s    so that it will have the form of the effect axioms given in  1 . 
   the only ramification constraint that we have for this domain is that a block can have just one colour. this constraint is expressed by the simple state formula 
		 1  
　our intention is that  in view of the ramification constraint  the action of painting a block with a new colour should have the indirect effect of making the old colour disappear. 
example 1. the  murder mystery  from  baker  1  can be formalized by the effect axioms 

and the constraint 

example 1. consider a table divided into three sectors f  g and h. a block is always in exactly one of these three locations. there is an action a  which  if performed when the block is in location f  moves it out of that location. hence  after the action is performed  the block is in location g or h  but we do not know which. thus  this is a domain where the indirect effects are nondeterministic. 
　to represent this domain as a causal theory  we introduce three fluents f  g and h. the only effect axiom is 

the constraints are 

1 turning a causal theory into an abnormality theory 
in nested abnormality theories  as defined in  lifschitz  
1   parts of the axiom set can be grouped into 
 blocks  of the form 

where c1 . ..  cm are function and/or predicate symbols  said to be  described  by the block  and  are formulas. typically  some of these formulas contain the predicate constant ab. such a block corresponds to the circumscription of varied: 

there can b'. several such blocks in the theory. moreover  blocks can be  nested  in the sense that each Φ  can be itself a block. this possibility corresponds roughly to the use of priorities in traditional applications of circumscription. in this paper  we discuss abnormality theories with a particularly simple structure-the circumscription operator is applied in them only once  so that no nesting of circumscriptions is possible. the reader familiar with the idea of circumscription will find it easy to understand these examples without a detailed review of the general formalism. 
	kartha and lifschitz 	1 

　let us assume that the signature and the axiom set of the given causal theory t are finite. we will denote the set of fluent symbols of t by f  the set of its effect propositions by e and the set of its ramification constraints by c. the language of the abnormality theory tab corresponding to t includes  in addition to the variables of the sorts available in t  variables for  aspects.  aspects will serve as arguments of the abnormality predicate ab. this device  proposed in  mccarthy  1   allows us to distinguish between different kinds of abnormality: an object abnormal in one  aspect  can be normal in another. for every fluent symbol f of t  we will need a new function symbol aspf. 
for every fluent symbol f  tab will include the axiom 
　　　　　　fr x a s  = f x result a s     1  where fr   f-result   is a new predicate constant. these axioms can be viewed as explicit definitions of the constants fr. using these constants  the effect axioms 
 1  can be rewritten as 
here fr stands for the list of all predicates fr. 
　note the use of fr instead of result in the range of circumscription. the intuition behind this style of describing actions can roughly be explained as follows. when we use circumscription to determine the effect of an action a on a fluent in a situation s  the only two situations that are of interest are the situation s and the situation obtained by performing the action a in s-for instance  we do not want to consider the sequence of actions that lead to situation s nor do we wish to consider what happens afterward. the new formalization achieves this by  removing  the result function from the range of circumscription. in this part of the axiom set  we accept the local  theory update  view  as in winslett's work. 
　according to the semantics of nested abnormality theories  lifschitz  1   the block at the end of the axiom set stands for the axiom formed as follows. let Φ be the universal closure of the conjunction of all three groups of formulas included in the block. denote the circumscription 

             aspf x  = aspf y  d x = y for arbitrary pairs of distinct action symbols a  a' and for arbitrary pairs of distinct fluent symbols f  f'. we denote this set of formulas by una. 
the axioms of the abnormality theory tab are: 

1 	temporal reasoning 
1 	computing ramifications 
in this section  we illustrate via examples how existing methods for computing circumscriptions can be employed in conjunction with the formalization presented above. 
1 	completion 
in many case  it is possible to compute the effects of actions using the syntactic methods for computing cir-
cumscriptions from  lifschitz  1 . as an illustration  we will consider computing the circumscription from example 1 in some detail. 
　we will have occasion to use the following propositions from  lifschitz  1 . 

　lemma 1 shows that circumscription can be sometimes evaluated by a process similar to the predicate completion algorithm from  clark  1 . 
   let Φ be the conjunction of the universal closures of formulas  u    vi  and  vii  from the nested abnormality theory tab  section 1 . by the definition of the semantics of nested abnormality theories  the block at the end of tab stands for the formula bab c ab  where c{ab  stands for circ Φ;ab  colour r . by lemma 1  this circumscription is equivalent to the conjunction of Φ and circ 1colour Φ .1 using lemma 1  it is easy to eliminate the second-order quantifier in the formula 1coiour Φ. after a few simplification steps  we can use 
lemma 1 to show that  in the presence of axioms  i  iv   c ab  is equivalent to the conjunction of Φ and the following explicit definition for ab: 

   it follows that tab is equivalent to the conjunction of formulas  i - iv    vi    vii  and the result of substituting this expression for ab in  v . the result of this substitution is essentially the conjunction of all  frame axioms  that are needed in conjunction with the causal theory of example 1. we see that syntactic methods of computing circumscriptions can be employed to generate the necessary frame axioms. 
　the effect of the circumscriptions in examples 1 and 1 can be computed in a similar way. 
1 	s c a n 
scan  gabbay and ohlbach  1  is an algorithm for eliminating second-order quantifiers over predicate variables p1 .. .  pn in formulas of the form 1 .. pn Φ where Φ is a first-order formula. if scan terminates  then the resulting formula is equivalent to the original formula. 
   recall that c i r c  .a; p; z   the circumscription of the predicate p in formula a with the functions and/or predicates in the tuple z varied  is the sentence 
     1to simplify notation  we use colourr both as a predicate constant and predicate variable. 
  a l l x a l l y a l l xa a l l xs    -p asp x y  xa xs  	ft 	poss xa xs   	-   c x y xs  	 -  r x y xa xs    . 
  a l l x a l l y a l l xa a l l xs 	  
 poss xa.xs  	ft 	 xa = paint x.y    	-  r x y xa xs   . 
  a l l x a l l 	y1 	a l l y1 a l l xa a l l xs     r x yl xa xs  ft r x y1 xa xs   -  
 yl = y1   . 
  a l l xf a l l xa a l l xs  p xf xa xs  	-  ab xf xa xs   . 
 exists xf exists xa exists xs   -p xf xa xs  ft ab xf xa xs   . 
  a l l x l a l l y l a l l x1 a l l y1     p a i n t   x l   y l   = paint x1 y1   -      x l = x1  ft   y l = y 1         . 
  a l l x l a l l y l a l l x1 	a l l y1 	   asp xl yi  = 	asp x1 y1   	-      x l = x1  ft  yl = y 1         . 
  a l l x a l l y l 	a l l y1 	a l l xs    c x yl xs  ft c x y1 xs   -   yl = y 1       .   a l l x  x = x     . 
　in the above formulas  r stands for colour  and c stands for colour. the first three formulas are direct encodings of  v    vi  and  vii . the next two formulas express that p   ab. the next four are not a part of the circumscription formula; they are included to help scan simplify its output. of these  the first three are formulas  i    ii  and  hi  of the nat. 
　scan produces the following 1 clauses as its output  in 1 seconds on a sun 1 . 

1
 for more information on the implementation  see http: 
//www. mpi-sb.mpg.de/guide/start/ohlbach/scan/scan. html 
	kartha and lifschitz 	1 


   in the set of clauses above  the expressions beginning with $ are skolem constants introduced by scan in the process of converting the input into clauses  and the symbol i stands for v. 
   by unskolemizing  that is  appending an existential quantifier to  this set of clauses  negating them  conjoining them with the axioms outside the block and simplifying them  we can get an explicit definition of ab identical to the formula obtained in section 1  and consequently the frame axioms. 
   some of this process of simplification of the set of clauses and elimination of ab can be automated. for instance  to eliminate the redundant clauses  scan can be directed to try to derive each newly generated clause from the others for a fixed amount of time. in addition  scan can eliminate ab from the simplified set of 
clauses. 
the causal theory corresponding to example 1 is 

in these clauses  l stands for load  lo for loaded and lor for loaded r  al for alive and a i r for alive r. rewriting the first one as 

makes it clear that this a negative frame axiom for loaded. similarly  the second one can be rewritten as 

a positive frame axiom for alive. frame axioms of a similar and easy to comprehend form were generated for the other fluents also. 
　in example 1  scan was used to generate the frame axioms in a similar way. 
1 	discussion 
in  giunchiglia et al.  1   the method for representing actions from section 1 is used to define a translation from the high-level action language .ar to nats. in some ways  ar is more expressive than the language of causal theories from section 1; for instance  it includes nonpropositional fluents. in other ways  it is less expressive-in ar  actions have no parameters  such as x and y in paint  x  y . the main difference between ar and the language of causal theories  however  is that the former has a semantics  based on the notion of a transition function. the translation from  giunchiglia et al.  1  is complete relative to this semantics. 
　we have presented evidence that this approach to formalizing actions leads  in some cases  to the circumscriptions that can be evaluated using the predicate completion method or the scan algorithm. one of these examples  example 1  involves a  ternary state constraint  

1 	temporal reasoning 

in the sense of section 1 of  pinto  1  and thus is not amenable to the methods developed there for the generation of successor state axioms in the case when all constraints are binary. 
　our plans for the future include the development of an experimental program that uses scan for the completely automated generation of frame axioms. for this purpose  the simplification procedure used currently in scan will need to be enhanced. 
　the set of formulas produced by scan is equivalent to the formula input to scan  if the algorithm terminates. hence  even if we know that a given second-order 
formula is equivalent to some first-order formula  there is no guarantee that scan will ever find it. it would be interesting to isolate classes of action domains for which it can be proved that scan terminates when applied to the corresponding circumscriptive theory. 
acknowledgements 
we would like to thank enrico giunchiglia  fangzhen lin  norman mccain  ray reiter and hudson turner for useful discussions on the topic of reasoning about actions. special thanks to thorsten engel and hans juergen ohlbach for making the implementation of scan available to us. this research was supported in part by national science foundation under grant iri-1. 

