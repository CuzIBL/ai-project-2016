 
this paper proposes f b r l   a language for representing function and behavior with the primitives we identified and discusses its application to explanation generation. f b r l explicitly represents model of each component in a system in terms of two elements. one is a necessary and sufficient information for simulation of the component which we call behavior. the other is the interpretation of the behavior under a desirable state which the component is expected to achieve  which we call function. by identifying primitives necessary for the interpretation of the behavior in various domains  we can capture what function is and represent it by selection and combination of them. we also investigate the relation between function and behavior based on the primitives of f b r l . as f b r l can represent concepts at various levels of abstraction  it contributes to explanation generation by providing information for mapping behavior of a component to a term which represents its function. 
1 	introduction 
one of the main themes about model-based problem solvers is to establish a method for describing good qualitative models which are utilized for simulation of the target system  explanation generation  evaluation  diagnostic reasoning  design  etc. the concept of function and behavior play important roles in such model-based systems  because behavior is closely related to simulation task and function to inference tasks at the conceptual level. at the same time both of the two concepts together form core of the ontology to which human users and machines commit to share understanding and representation of the target models. thus deep analysis and understanding of the behavior and function is critical in the field of model-based problem solving. 
　one of the easiest ways of modeling a target system is to configure predefined components. although this approach is promising  it requires careful representation of function and behavior of each component in order to make it effective and reusable. it has been pointed out  
1 	qualitative reasoning and diagnosis 
however  that function and behavior are likely to be confused and mixed in each other in the process of modeling each component  de kleer and j.s.brown  1 . since such mixing lowers the reusability of the models  a modeling method has to separate them from each other carefully. 
   some researchers have dealt with functional modeling to date  de kleer de kleer  1  represents behavior of a component as a set  of input-output  relationship each of which represents causality among parameters of the component. he recognizes function of a component by selecting an input-output relationship from possible behaviors. the selection is an important element for identifying function of a component  but it is not sufficient. in some cases component has multiple functions while its behavior is unique. a heat exchanger is a good example. when it is built in a power plant as an evaporator  its function is  give heat energy to the water and maintain temperature of the output vapor'1. on the other hand  when it is built in a car as a radiator  same behavior is interpreted as  remove heat to prevent overheat . 
　chandrasekaraii chandrasekaran et a/.  1  proposes a framework for representing and utilizing functional models. the framework represents a functional model of a component by combining its subcomponents' behavior or function  which in tern represents behavioral or functional role of the component in a macroscopic view. consequently  the method allows behavioral models to become functional models by changing its grain size. 
　thus their definition of behavior and function are relative and does not represent an essential difference between them. an ideal method for functional representation should explicitly represent an essential difference between function and behavior. furthermore  the models represented by the method should be highly reusable. standing on these view points  those methods of functional representation proposed to date do not satisfy our needs. 
　the authors recognize several viewpoints from which we can capture difference between function and behavior. for establishing a new representation method which reflects our ideas about function and behavior  we first define both of them. behavior representation of a component is the necessary and sufficient information for simulating state change of components in a system. pa-

rameters which represent the states of components and constraints or causal relationships among them are included in the behavior representation. next  we can recognize an intended desirable state for each of components in a system. we call the state a goal. lastly  with necessary information  we can interpret the behavior of a component under its goal. for example  under the goal   temperature of coolant out to the next component does not exceed t t h r e a h o i d    behavior of a heat exchanger is interpreted as  to cool coolant   to prevent overheat of next component  engine . we call such interpretation result as function. 
　following the above discussion  we have developed a new functional representation language f b r l which has a rich vocabulary for function and behavior. the vocabulary consists of important terms for representing concepts about a portion of domain which we call domain ontology. in this sense  our work contributes to organizing domain ontology. f b r l represents a functional model as a behavior model plus ft  where ft stands for functional topping  a set of information necessary for interpretation of behavior. by collecting primitives enough for describing behavior and ft  f b r l enables us to describe various functional models by selecting some of the primitives and combining them. 
　furthermore  using f b r l functional models  an expert system can generate various types of explanations in terms of function level vocabulary  which is difficult for those systems without knowledge of function. such explanations have potential to help users understand a target system well. 
　this paper consists of two main parts. the first half discuss f b r l and the second half an application of f b r l to explanation generation with an example. 
1 	primitives to represent functional models 
to establish a framework for describing a functional model of components  we investigate several viewpoints to capture the behavior and ft  the additional information to interpret the behavior. in this section  we briefly discuss the viewpoints and primitives to represent them in order. 
　for designing a language  discussion about its formal semantics and meaning which we want to present by the language is necessary. this paper introduces f b r l with paying attention not to its semantics but. to the meaning  i.e. ontology of function and behavior. more details about the discussion are available in  sasajima et 
al  1b . 
1 	f o r m a t t o d e s c r i b e c o m p o n e n t s 
a template for describing behavior and function of a component is shown in fig.l. 
　the behavior of a component is represented by relations among input and output objects. in the template  it is represented by first seven attributes  from objects to qn-relations. other five slots represents necessary information for interpreting the behavior which we call ft. 
　we model function of a system as a composite of a set of sub functions of its subsystems. whatever the grain size of the subsystem may be  decomposition of a function into a set of behaviors is not allowed. after the decomposition a functional model of the system is represented as a set of hierarchically connected components. 

figure 1: template for describing a component 
1 	d e s c r i p t i o n o f b e h a v i o r 
for modeling each of the components  there are two ways of behavior representation. one is process-centered way which views how the substances under consideration are processed. the other is device-centered way which concentrates on input-output relations of a component. we employ the latter way and represent  each component as a black box which has ports for input and output. some components  e.g. a tank  have only ports for input and other components  e.g. a battery  have only ports for output. we call an input substance  in-obj'' and an output substance  out-ob j''. except the cases in which clear distinction is necessary  we use the term  coinpo-obj  to refer to one of those substances processed by a component. we treat substances  such as water  and energy  such as heat  which exhibit functionality of the component as compo-objs. description of them is based on object-oriented paradigm. 
1 	d e s c r i p t i o n 	o f f t 
in order to describe the function of components  we investigated the functional topping and obtained the primitives from five viewpoints:  l goal of the component  1 function type  1 focus on compo-objs  1 focus on streams among ports  1 necessity of compo-objs. these five items are explained in this subsection. 
goal of the component 
we recognize a desirable state to achieve for each component in a system and the term  goal  refers to the concept. example here is the heat exchanger in fig.1. a heat carried by higher temperature water represented by obji to lower one represented by obj1. a goal description  temperature of the output coolant obj1  does not 
	sasajima  etal 	1 

exceed five hundred degree centigrade  is an example of the goal. we represent such a desirable state by the predicate g state . 

anne m.keuneke classifies concept of the function into four types  such as to make to control  to maintain  and to prevent keuneke  1 . for our representation  we give informal definition to them together with a new type  to enable. 
to make: to set a parameter at a desirable value. 
to control: to shift a parameter of desirable value to another desirable one. 
to maintain: to keep the value of a parameter desirable for a certain period. 
to prevent: not to make parameters to take special values which represent no good states of the system. 
to enable: to help the function work by making its necessary conditions satisfied. 
　to make type function which makes parameters to be in a desirable range is the basis of all other functions. 
　function of a cooking stove  for example  is considered as to make temperature of a thing put on it to be more than a certain degree. if the aim of the stove is to boil a kettle of water  then the function to make is achieved when the temperature inside the kettle reaches one hundred degree centigrade. on the other hand  the function of an electric water heater with a sensing device which accurately makes the temperature of the water in it to be ninety five degree centigrade is to control. 
　function of a component which keeps desired state by to control function is to maintain. 
　a component whose function is to prevent watches and controls parameters not to go undesirable states for the system. function of a relief valve attached to a tank is to prevent explosion of the tank by watching pressure caused by substance inside the tank. the valve switches its behaviors: not to let the substance pass the valve out of the tank and to release the substance through the valve according to the pressure inside the tank. 
　function of a pipe which helps the liquid flow is a typical example of to enable. another example is a bias voltage of a transistor. 
focus on c o m p o - o b j s 
when we capture the main function of a component  we focus on a specific compo-obj's class. we represent such 
1 	qualitative reasoning and diagnosis 
a concept by the predicate 1-focus class of compoobj . example here is a wire. as a direct current is input  it lowers the potential and at the sametime it generates heat. when we interpret the behavior of the wire as that of a resister which lowers potential of input direct current electricity  focus is given to the electric energy and 1-focus electric energy  represents it. on the other hand  the same behavior is interpreted as that of an electric heater when we focus on the heat energy. 
focus on streams among p o r t s 
a component has several ports for input and output and streams of objects among them. a pipe  for example  streams of medium and energy are the same and it just enables the medium and energy pass from an input port to an output port and its function does not differ according to whether we focus on the input port or the output port. in other cases whose streams of medium and energy are different from each other like a heat exchanger  energy moves from a stream of medium to another and interpretation of a component's behavior depends on the stream on which we focus. we represent such a concept by a predicate s-focus in port out port . an example here is behavior of a heat exchanger which transmits heat energy from higher temperature fluid to lower one whose model is represented in fig.1. focusing on the stream of the lower one  represented by s-focus in1 out1   the behavior is interpreted as  to give heat energy to the fluid . on the contrary focusing on the higher stream   to take heat of the fluid . 
necessity of c o m p o - o b j s 
compo-objs which belong to the focussed class often exist at different ports of a component from each other. again consider a behavior of the heat exchanger in 
fig.1 which focuses on heat energy existing at the four ports. the heat exchanger can be interpreted not only as a heater giving the heat energy to the colder outobj obj1   but also as a cooler taking the heat energy of the hotter in-obj obj1  away. 
　difference between the two interpretations is caused by difference of the necessity of each heat energy at different port  according to the goal of the component. we represent a focused class of compo-obj is necessary at a port by the predicate need name of the port focused class  and not necessary by the predicate noneed name of the port focused class . when we interpret the behavior of the component in fig.1 as that of heater  obj1 is necessary at the port out1  thus need out1 heat is suitable. also when we interpret the same behavior as that of cooler  objs is not necessary at the port out   thus noneed outi heat is suitable. 
1 hierarchical classification of function and behavior 
we have thus far defined a format and primitives to represent a component captured from various viewpoints. using these viewpoints  we came up with a hierarchical organization of the concept of behavior and function whose portion is shown in fig.1. the tree represents an ontology of function and behavior. each node with a label represents a concept which can be represented by f b r l . thus by using this tree an expert system can 

　for example  a behavior of a component which deals with two in-objs and two out-objs  and shift a kind of energy from one stream to the other is represented by the term  shift . the concept of  shift  is refined into  convert  if the type of the shifted energy is changed into another one  for example from heat to electricity. otherwise it is refined into  transmit . 
　classifications at the first and the second level are based on those viewpoints used for behavior description and is domain- and context-independent. 
   let us focus on the stream which is source of the energy  represented by s-focus ini outi  where an object  medium  flows from in1 to o u t 1 and throws energy to the other stream. then the concept  transmit  is further refined into  take  since from the view point of the stream  its energy is taken by certain  transmitting  agent  e.g. a component. the concept  take  is refined into  rob  and  remove  if the component takes an energy which is necessary for the whole system or not. the latter case  for example  is represented by noneed outi class name of energy . the concept  remove heat energy which is not necessary for the system  is represented by a term  cool  one of whose instance is a radiator. 
　as discussed above  f b r l is rich in terms of concepts which represent function and behavior. this characteristic of f b r l plays an important role in explanation generation because we can map behavior of a component to a proper term which represents function of the component by using the tree. also each primitive of f b r l does not rely on a specific domain  it enables reuse of a model in another domain with a little modification. 
　furthermore  as demonstrated in this section  f b r l shows its potential to describe components at various levels of abstraction. 
1 an application of fbrl to 
explanation generation 
many model-based expert systems developed to date utilize only behavioral model of the target system. this is a major reason why they have difficulty in generating explanations at a functional level. applying f b r l model to those expert systems  we can generate various types of explanations. this section discusses a framework of explanation generation using f b r l model  typology of explanations  and an example of generating an explanation. 
1 	f r a m e w o r k for g e n e r a t i n g e x p l a n a t i o n s 
fig.1 shows a framework for generating explanations using f b r l functional models. 

figure 1: a framework for generating explanations 
　first  a designer or a knowledge engineer describes a behavior or functional model according to each goal of their tasks. the functional modeling support module helps them describe their models using the functional model library and the case base of functional models. 
　there are several methods of generating explanations which can be classified in terms of the timing  usage of the output explanations  and so on. our framework in this paper adopts a method for explanation generation that when a user inputs his question about the system of interest  it generates an appropriate explanation as an answer to the question. the explanation system has templates corresponding to various types of explanations. selecting one of the templates  simulating behavior of the target system if necessary  and synthesizing them according to some strategies which the authors discuss in  sasajima et a/.  1a   the explanation generator generates an appropriate explanations. 
   applying fbrl-built functional models to explanation task  we can generate various types of explanations which can not be generated by behavioral knowledge based systems. stevens and steinberg discuss typology of explanations stevens and steinberg  1 . with further consideration about the explanation classification from the view point of function and behavior  the authors discuss the following seven types of explanations for trouble shooting expert systems in  sasajima et at.  1a . 
function of a component in a system: 
this mentions functionality of a component. to help users understand the role of the component  
	sasajima  etal 	1 
the explanation mentions not. only the function of the component but also how the component contributes to the main function of the system in which the component is built. 
change of scope in explanation: 
in some cases a user may ask the system to generate explanations from a macroscopic view  and in other cases he/she want a microscopic explanation. in such cases  the generator has to cope with variable grain size explanation. 
occur a nee of a fault: 
a faulty state of a component equals to the state in which the component does not function properly. this type of explanation mentions the fault state using a functional model of f b r l . 
h o w   t o p r e v e n t   type component works: 
this type of explanation mentions functionality of a component whose function type is  to prevent . 
h o w an o u t p u t is generated: 
this type of explanation answers such questions which ask a reason why an output of a focused component is generated. 
w h y an expected o u t p u t is not generated: 
sometimes a simulation result differs from what users have expected before. this type of explanation answers such questions that ask a reason why an expected output is not generated. 
h y p o t h e t i c a l simulation: 
fault of a component can be represented by a parameter with an abnormal value. this type of explanation mentions a simulation result which indicates the effect of the hypothetical fault. 
　although we have designed a mechanism and templates for explanations of all of the above types  rest of this section describes how to generate an explanation about functionality of a component because of space limitation. 
1 	e x p l a n a t i o n o f f u n c t i o n a l i t y 
some users of an expert system are interested in function of a target system or its components. they may ask a question like  what is the function of the nuclear reactor in the nuclear power plant  . 
　to answer such a question  the system should show an explanation which explains the reactor in terms of function level vocabulary. the following is such an explanation  explanation 1  which is taken from  van amerongen and m.sc  1  pp.1 . the question is 
 how pressurized-water reactor works as a part of an atomic power plant     
explanation 1 	 van 	am.erongen 	and 	m.sc  	1  
pp.1  
this is the simplest form of thermal reactor  ...the heat absorbed in the core is transferred by means of a heat exchanger to the secondary circuit  where it is utilized to raise  steam which drives turbines  which in turn drive the generators for producing electricity. 
　as the example shows  explanation of a component's function should mention not only function of the component itself but also how the output of the component 
1 	qualitative reasoning and diagnosis 
contributes to the main function of the whole system. at the same time the explanation should mention only the main function of the system using appropriate terms each of which represents functional level concepts. for example  explanation 1 refers only five components among many components of the atomic power plant  and explains them by functional terms such as transfer  raise  and produce. 
   it is difficult to generate this explanation from behavior knowledge. the first reason is the difficulty of finding the causal chain of main function of the system. referring to the behavior knowledge  we can infer causal relations between the parameters  which in turn represent causal relations between components. even if a set of input and output of the system which represents main function is given  it is hard to find out one causal path which represents main function of the system. the difficulty appears especially when the system is complex and consists of many components  because in such cases the causal relations between the components can be represented by a complex graph which has a lot of candidate paths. selecting a right path from the candidates requires knowledge other than behavior. on the other hand  an f b r l model represents parameters which contribute to main function of the whole system using o-focus  s-focus and needs  and gives an appropriate clue for reasoning the main function. 
   the second reason is the difficulty of mapping a behavior to a right functional term. suppose a heat exchanger is used in two ways  for cooling system of an engine and for heating system of a room. in the former case  its behavior is interpreted as taking away the heat of the coolant of the engine. in the latter case  on the other hand  its behavior is interpreted as heating the air of the room. this difference comes from the range out of the behavior knowledge  since the behavior of the heat exchanger is the same. generation of explanations in proper functional terms requires representation of the knowledge for behavior interpretation  and ft of the f b r l meets this requirement. 
   here we briefly mention the procedure for generating an explanation about function of a component in a system. 
p r o c e d u r e 1 an outline for generating an exp l a n a t i o n for function of a component. 
1. focus on a component whose function is to be explained. 
1. mention function of the focused component. 
1. repeat stepl and stcp1 while there exist components which belong to the same level in structural hierarchy as the first component. 
note: referring to the value of needs s-focus and 
o-focus  this step does not mention function of components which do not contribute directly to the whole system's function. 
1. mention function of the next component which belongs to a level of one level higher in the hierarchy. 
1. repeat steps from 1 to 1 until it reaches the final output of the whole system. 
　furthermore  we adopt the following two rules to make the explanation natural and concise. 
1. rule for n a t u r a l explanation: let the component be the subject of the explanation until the explanation about the first component finishes. then  for explaining how the compo-obj output by the first component contributes to the function of the whole system  let the compo-obj be the subject  of each explanation. 
1. rule for concise explanation: first  explain about the  necessary  out-obj of the first component with the medium on which the outobj is output. next  until a component which changes the class of the out-obj appears  explain that the out-obj goes through the components each of which does not convert the class of the out-obj. 

figure 1: a model of an atomic power plant 
　according to procedure 1 with adopting rule 1 and rule 1 explanation of the function of the fuel rods in fig.1 is generated as explanation 1. those terms written in bold font represent functional terms. explanation 1 :function of the fuel rods in fig.1 
fuel rods generate heat energy in the reactor core subsystem. 
the heat energy is output to the sodium of the lry loop. 
the heat energy goes through the lry loop  the lry heat exchanger  the 1ry loop  and power generation subsystem. the heat energy is converted to the electricity by means of the power generation subsystem. 
　as discussed in this subsection  using a functional model represented by f b r l   we can simulate the main function of a system. referring to the result of the simulation  we can generate an explanation about function of a component of the system in terms of how the function of the component contributes to the main function of the whole system. as the generated explanation uses proper terms each of which represents function of a component  the explanation helps users understand more about the function of the component. 
1 	discussion 
in his work de kleer  1   j.de kleer proposes a method to use function of a system  which is derived from function of each component  to decrease ambiguous results of simulation. the method represents a component having more than one causal relation between input and output  where function of the component is decided by selecting one of the relations. his work enables us to represent the function to achieve desirable state  which is also achieved by our representation method as discussed earlier. furthermore  our method can explicitly represent functions which prevent system from falling into a 
no good state and side effects which may damage the whole system. 
　b.chandrasekaran  et al.  chandrasekaran e.t a/.  1  lwasaki et a/.  1  sembugamoorthy and chandrasekaran  1g  vescovi et a/.  1  capture behavior as a series of states of the system and function as to achieve an intended desirable state. the function is achieved by the behavior and the function of each component whose role is defined by the function of the system. since their representation of the function in  chandrasekaran e.t a/.  1  depends on the structure of the component of the system  description of the function of two systems differs from each other if their structure differs from each other. thus their representation method seems to be weak in terms of reusability of the description of function. on the other hand  our representation of the function of a component can be applied to wide range of components of the same input-output relations. an f b r l model also represents the function of a large system hierarchically. 
　in the above functional representation  sembugamoorthy and chandrasekaran  1   the function is described as achieving a desirable state. anne m.keunckc kcuneke  1l  classifies the concept of function into four types according to some conditions  for example  the method to achieve the function  the initial condition which raises the function  the length of the term in which effect of the function is hold  and so on. she captures function as attachment of implicit assumptions to a behavior  and employs a policy to seek for the primitives to represent the assumptions. her policy is close to that of us in this sense. our representation includes her classification and applies it to produce an abstract explanation of the function of a component. 
　in order to decrease the cost for diagnosis  a.abuhanna  et al. abu-hanna e.t al.  1l  propose a method to describe a functional model of a system at three levels of abstraction. we also regard that abstraction and conceptualization of a component have close relations to the function of the component  since the goal of a component is always abstract one to enable interpretation of its behavior at the knowledge level. thus we have investigated what primitives contribute to conceptualization of function and enumerated them  though they are not exhaustive. 
　m.pegah  et al. pegah e.t al..  1  apply the functional representation proposed in  sembugamoorthy and chandrasekaran  1g  to the f/a-1 aircraft fuel system  one of the large scale and complex systems  to achieve causal understanding of the system. our interest in application of this work goes to kc iil kitamiira et al  1   a model-based diagnostic shell which currently deals with a heat transportation system of a nuclear power plant including negative feedbacks among its components. 
	sasajima etal 	1 

1 	concluding remarks 
we have discussed f b r l . a function and behavior representation language and a vocabtilary for representing components captured from the viewpoints of behavior and function. an f b r l model consists of behavior model and information for interpretation of the behavior which we call functional topping  and each of them is explicitly represented. thus f b r l meets our requirement  to separate knowledge of function and behavior of a model  and contributes to promoting reusability of component models. as f b r l consists of taskand domain-independent primitives it further promotes reusability. for these reasons  we can say f b r l helps model builders describe appropriate component models for each of their purposes. 
   the potential of a functional representation method should be evaluated by not only the number of phenomena the method can describe but also the enhanced quality of a task by application of the model described by the method. for such an evaluation  we discussed seven types of explanations  and in this paper we presented an outline for explanation generation by means of f b r l models. as f b r l can represent various concepts of function and behavior  it enables model-based expert systems to generate explanations with appropriate functional terms. 
　w.swartout et al.  swartout et al.  1l  and t.r.gruber et al. gruber and gautier  1  show some techniques to explain the system's action and the knowledge which the system possesses. it goes without saying that a domain model plays an important role in each of the frameworks  however  discussion about what information should be included in the model and how it should be represented is not enough. although not exhaustive  we have discussed it more than their work in this paper and in sasajima et al.  1a . 
　currently we aim at applying our method to the diagnostic shell kc iii kitamura et al.  1  in two ways. one is to support users in model building and the other is to help users understand the process and result of a diagnosis by generating appropriate explanations. as for the explanation generation  explanation of occurennce of a fault in the model of a cooling system of a fast breeding reactor is implemented on unix workstation in common lisp. referring to an f b r l model of the target system  it generates what fault happened to the system in terms of function of each component  and the effect of the fault. 
as for the other types  implementation is in progress. acknowledgement: 
the authors are grateful to dr. 	akira endou and mr. 
shinji yoshikawa from power reactor and nuclear fuel development corporation for their help and comments on building a model of nuclear power plant. 
