 
　　　a two-dimensional trim-loss problem is considered in which the cutting is two-stage but there are constraints on the sequencing of the cutting of orders  	a method is developed in which problem reduction is used to generate a set of possible cutting patterns at each step and an heuristic choice made of a pattern from that set. 	the sequences of patterns produced  
although slightly sub-optimal as regards trimloss  f u l l y satisfy the sequencing constraints. 
1. introduction 
　　　the trim-loss  or cutting stock  problem arises whenever material manufactured continuously or in large pieces has to be cut into pieces of sizes ordered by customers. the basic problem is to so organize the cutting as to minimize the amount of waste  trim-loss  resulting from the cutting. 
　　　in the one-dimensional case order lengths of some material such as steel bars have to be cut from the stock lengths held by the supplier. gilmore and gomory  1  1  have formulated a linear programming solution of this problem  which also arises in the s l i t t i n g of steel r o l l s   cutting of metal pipe  and s l i t t i n g of cellophane r o l i s . 
　　　in the two-dimensional case the stock is held as large rectangular sheets from which smaller rectangles must be cut. work has been done on this problem by gilmore and gomory 
 1   who use a linear programming method  adamowicz and albano  1   whose method is one of dynamic programming  and hinxman  1   using a problem reduction method. 	hahn  1  considers the problem that arises when the stock sheets contain flaws  and gives a dynamic programming algorithm. 
　　　dyson and gregory  1  consider a problem arising in the f l a t glass industry in which the problem is not simply to determine a set of cutting instructions  known as cutting patterns  which minimize trim-loss  but to find a set which whilst leading to low trim-loss are also an acceptable sequence according to other operational c r i t e r i a . their method is to produce a 
minimum loss set of cutting patterns and then to find an acceptable way of sequencing them. this report describes an alternative approach to a similar problem  in which the sequencing and 
trim-loss c r i t e r i a are considered together  
1. statement of the problem 
the material under consideration is glass. 
each order received from a customer consists of a demand for specified numbers  demands  of pieces of each of one or more shapes  a shape being specified by i t s length  longer dimension  and breadth  shorter dimension . each order is designated by a code. if the order is for glass with high quality edges the f i r s t character of the code is   f   . we refer to these as type f orders and to the remainder as type m orders. 
　　　the cutting of the stock sheets is a two stage process  and corresponding to each stage of the cutting there is a stripping process  to produce edges of the required quality  that may be manual or automatic. during the f i r s t stage of the cutting the sheet is moving in the direction of i t s longitudinal axis and may be considered to have a  leading  and a   t r a i l i n g   edge with respect to this motion. the f i r s t set of cuts are perpendicular to the direction of motion and are cross cuts. the sub-sheets resulting from the f i r s t stage of cutting w i l l be cut into pieces according to the corresponding sub-patterns. 
     operational constraints on the design of cutting patterns due to the design of the 
cutting machinery impose: 
i  an upper bound on the number of shapes in 
a sub-pattern  
i i   an upper bound on the number of subpatterns in a pattern  
i i i   a lower bound on the distance of the f i r s t cross cut from the leading edge of the sheet  
iv  a lower bound on the distance of the last cross cut from the t r a i l i n g edge of the sheet. 
　　　the pick-off length of a sub-sheet or piece is i t s dimension in the direction of the length of the sheet from which it was cut  i t s other dimension being i t s pick-off breadth  see figure 1 . the stripping following each stage of cutting may be manual or automatic. this affects the reduction in dimensions of the i n i t i a l l y cut 
pieces by the stripping process. 
　　　the pieces resulting from the cutting and stripping process are picked off for despatch from one of four legs  a leg being a conveyor belt with i t s associated washing and handling f a c i l i t i e s . a l l the pieces resulting from the 
cutting of a sub-pattern must be routed to the same leg. the routing of pieces to legs must be consistent with the dimension constraints on the legs and also with the requirement that type f pieces must be picked off from legs with washing f a c i l i t i e s . there is a further restriction that pieces for not more than three different 
orders may be picked off any leg during the cutting of any one pattern. 
　　　the restrictions on the design of individual cutting patterns having been described it is now necessary to consider how a set of cutting patterns is used to provide instructions for cutting a l l the orders in an order l i s t . 
i n i t i a l l y a cutting pattern is selected. 

a p p l i c a t i o n s - 1 : hinxman 


it w i l l specify the size of stock sheet to be used and the order pieces to be cut from this sheet. for each shape  s  in the pattern  there is a number  n   such that if the pattern is repeated n times the demand for that shape 
w i l l be satisfied  whilst if the pattern is only repeated n -1 times this w i l l not be the case. 
the number of stock sheets cut to this pattern 
w i l l be the smallest of the ns ' s  
s 
　　　when this has been done the original order l i s t w i l l be converted to a new one reflecting the demands that have not yet been satisfied. a new cutting pattern is selected and the process repeated u n t i l a l l the demands have been satisfied. 
　　　operational costs connected with the picking off and packing of orders w i l l affect the choice of cutting patterns and the sequence in which they are used. suppose the use of a cutting pattern has just been completed. the next cutting pattern to be used should include a l l the shapes in the last cutting pattern the demands for which have not yet been satisfied. in addition  if there were any shapes  the demands for which were satisfied at the completion of use of the last cutting pattern  belonging to orders which include other shapes  the demands for which have not been satisfied  then such a shape from each such order should be i n cluded in the new cutting pattern. for each failure to make the appropriate inclusion the sequence break cost is incurred. 
　　　there is also an absolute constraint on the sequence of cutting patterns. if a shape belongs to a loose load order  which w i l l have a code starting with the characters  fd   then it must not be cut until demands for a l l larger shapes in that order have been satisfied. 
　　　table 1 shows the dimensions of the available stock sheets. 
table 1 
sizes of stock sheets 

1. the top-level state-space 
　　　the process of choosing and u t i l i z i n g cutting patterns described above can be represented in terms of a state-space  nilsson  1; chaps. 1  1 . the states are l i s t s of unsatisfied orders  and the operators are cutting patterns together with the number of times they are used. the start state is the original order l i s t and the goal state the empty order l i s t . we require to find the path between the two for which the combined cost of trim-loss and sequence breaks is minimal. 
　　　in order that the resources required by a program to compute a sequence of cutting patterns may be kept within reasonable bounds  backtracking must be restricted. a certain amount of time is allocated for the generation of possible f i r s t patterns. at the end of this time the  best  of the generated patterns is selected. the number of times it is to be used is calculated  the demands in the order l i s t are adjusted to take account of the pieces cut by the use of this pattern  and the adjusted order l i s t together with the f i r s t pattern defines the starting point for the generation of possible second patterns. the process is repeated u n t i l a l l the demands in the order l i s t have been satisfied. 
　　　this method of working corresponds to the development of a path across the state-space graph without backtracking. the generation of a subset of the possible cutting patterns at each step  done in the work presented here by a problem reduction technique  corresponds to partial development of the corresponding node  and the selection of the  best  pattern represents the application of an evaluation function. the evaluation function used in the present case combines a measure of the possibly avoidable trim-loss   i t can be determined that the cutting of some of the pieces included in the pattern w i l l unavoidably involve trim-loss  in the pattern  the  urgency   see section 1  of the pieces included in i t   the cost of sequence breaks that would occur at the present point in the sequence if it were used  and the possible costs of sequence breaks that might occur later in the sequence if it were introduced at this point. the evaluation function is not  in nilsson's terms  admissible   but has been 

applications-1: hinxman 
1 

chosen on the basis of experience as one whose use should not result in seriously sub-optimal solutions. 
　　　the quality of solutions generated w i l l be limited by the correctness of the partial development  whether the operator corresponding to the arc belonging to the optimal path from this node is generated  and the accuracy of the evaluation function  whether when generated the operator is correctly identified . 
　　　more complicated search strategies than the one adopted could have been followed. a wider ranging search of the top-level state-space might have been performed. this would have required the use of more computer time. alternatively the problem reduction at a node might have used information about the path on which the node lay  rather than simply information local to the node  to decide on reductions. this would require a great deal more information to be simultaneously present in the store of the machine. the method chosen was one in which it seemed that low computational costs would be paid for the finding of acceptably good solutions. 
1. problem reduction 
　　　when a problem reduction method is applied to a complex problem  this problem  or goal  is reduced by successive refinement to a number of simpler problems  subgoals  whose solutions  when taken together  can be combined to provide a solution to the original goal. usually there 
w i l l be more than one way in which the goal  or a subgoal  can be broken down into subgoals. it i s   of course  only necessary to solve the subgoals corresponding to one breakdown in order to solve the goal or subgoal from which they were generated. 
　　　a good general description of problem reduction methods is given by nilsson  1; chaps.1  1 . here w i l l be described only the structure of the method used in the present work. let g1 be the goal. then there is a set of actions  a 1   a 1   . . . } which may be taken towards achieving g1. after action aon has been taken go w i l l 
have been reduced to subgoal g  	aon followed on' 	on 
by the actions necessary to achieve gon w i l l achieve go. gon may be indivisible. in this case either' it can be achieved by some basic action  in which case a solution to go has been found or no such appropriate basic action exists  in which case there is no solution of go including a1n . if gon is not indivisible then it can 
be reduced to some action a- 	and a further sub-
onto 
goal gq   this process being repeated u n t i l an indivisible subgoal is defined. if no solution to any subgoal of a divisible subgoal can be found then that higher subgoal is i t s e l f i n soluble. 
this process can be represented graphically 
 see figure 1 . 	let gq be the root of a tree* then a1  a1      are represented as directed arcs connecting go with i t s successor nodes 
g1.  g1   . . a similar representation applying to the connection of these with their successors. a terminal node represents an indivisible subgoal. if it is soluble  i t s solution action can be associated with i t . this together with the labels of the arcs connecting it with g1 defines a solution of g1. if it is not soluble then an 
 insoluble  marker can be attached to i t . similarly an insoluble marker can be attached to a node a l l of whose successors are insoluble. 

＊ x denotes insoluble 
= yn denotes solution of indivisible subgoal 
thus g1 is solved by 
         a 1   a1 and y1 or a 1   a 1 1 and y1 . 
note that g1 is deduced to be insoluble by virtue of the insolubility of i t s successors. 
　　　this form of problem reduction  in which a l l the nodes of the problem reduction tree are or nodes  can be regarded as a state-space method  with start node an empty l i s t of actions to be taken to achieve the goal and goal nodes complete l i s t s of such actions. however  two features of the present work make it more desirable to consider it as a problem reduction method. f i r s t l y   
when a successor node of the tree is generated it contains a more complete l i s t of actions than i t s parent; the subgoal it specifies is less complex and the problem is indeed  reduced . secondly  
whereas in state-space methods the available operators usually have some similarity to each other  here there are very distinct classes of action that may be taken  depending on what part of the l i s t of actions remains to be completed. 
1. structure of the problem reduction 
applications-1: 	` 　　　each node of the problem reduction tree i n cludes in i t s label a subgoal description and the name of a function that is capable of generating a sequence of alternatives for the reduction of that subgoal. for a primitive subgoal such a reduction is a solution. let us refer to the occurrence of a function at a node as an instance of that function. 
　　　in an iteration of the problem reduction process  a node of the problem reduction tree is selected. 	the function at that node is invoked to give the reduction for the subgoal that is 
next in the sequence after those reductions that were generated by previous invocations of that function at that node. it w i l l either create a new node in whose label are included the subgoal resulting from the reduction and the name of the function to be used for reducing this subgoal  or report that the sequence of reductions has been exhausted. iterations of the process continue u n t i l what is regarded as an adequate number of alternative solutions of the goal have been generated. 
　　　it has been said that when a function creates a node it places a function name in its label. figure 1 shows the relationships of the subgoal processing functions in this respect. an arrow directed from one function name to another i n dicates that the label of the node created by the f i r s t may include the name of the second. where more than one arrow leaves the name of a function  this indicates that a choice of functions is made according to the features of the subgoal set up. 
figure 1 
hierarchy of subgoal processing functions 

　　　consider the situation that can occur for the generation of any cutting pattern other than the f i r s t . the previous cutting pattern may 
have included one or more sub-patterns that each included two shapes  pairs . 	if the demand for a shape belonging to a pair has not yet been satisfied  then there is a choice to be made as to whether it should belong to a pair with the same or a related partner in the proposed new pattern. 	the choices on the retention of pairings are made in used-pair-select. 
　　　there may be a number of shapes included in the previous pattern the demand for which has not yet been satisfied. 	some of these may have been included in the proposed pattern by choices made in used-pair-select. 	the choices as to which of the remainder should be included  and what their orientations should be  in the proposed pattern  are made in mid-shape-select. 
　　　there may be one or more shapes completed at the end of the use of the previous cutting pattern that belong to orders containing shapes the demands for which have not yet been satisfied. in mid-order-select the choices are made as to which shapes  if any  from such orders should be included in the proposed pattern  and what their orientations should be. 
　　　the choices made in mid-shape-select  midorder-select and most-urgent-piece-consider  are that shapes shall be included in a pattern in separate sub-patterns. each instance of subpattern-extend is concerned with one such subpattern and chooses whether it should include one. or two shapes. if the choice is for two shapes the choice of the second shape is made. 
　　　the choice of stock sheet size to be used by the proposed pattern is made in sttb-patterndesign-continue. 	a further sub-pattern may also be included in the pattern by this function. 
each instance of sub-pattern-continue-
known-sheet chooses whether a further subpattern should be included in a p a r t i a l l y completed pattern  and if so  what this sub-pattern should be. 
　　　in leg-allocate an allocation of subpatterns to legs is made if a possible one exists. if it does not  then the proposed pattern is ruled out of further consideration  otherwise an evaluation is made of the  merit  of the proposed pattern. 	the allocation of sub-patterns to legs is a primitive subgoal. 
1. heuristics 
　　　space does not permit the description in detail of a l l the heuristics used. some of the more significant ones w i l l be outlined here. 
1 orientations 
　　　for each shape a preferred orientation can be defined. for a shape which the constraints of the problem require to be cut with a certain orientation it is this orientation. for any other shape  a l l possible sub-patterns that could be formed including this shape are considered. the orientation in that sub-pattern 
within which there is least trim-loss is the preferred orientation. when the possibility of including a shape in a pattern is considered  it 
w i l l usually be with this orientation. the principle applied here is that if the trim-loss in each sub-pattern is minimized the overall trim-loss is likely to be minimized. 
1 urgency 
　　　the urgency of a shape reflects the desirab i l i t y that the shape should feature in the early cutting patterns of a solution sequence and is a function of i t s dimensions and demand. two cases are identified in which particularly high urgencies are assigned. 
　　　the highest urgencies are given to shapes with lengths above a certain l i m i t   since it w i l l be d i f f i c u l t to introduce these later in the 

applicatlons-1: hinxman 1 

sequence when sequencing desiderata lead to i n clusion in a pattern of several other shapes. 
       the next most urgent set of shapes are those which can only occur in leading sub-patterns. if such shapes were left until late in the pattern sequence  this might be forced to finish with patterns consisting only of leading sub-patterns  with consequent extreme trim-loss. 
       adjustments to urgencies are made in the light of sequencing considerations. for example  the largest shape in a loose load order w i l l have its urgency increased to exceed the highest urgency  as determined by the i n i t i a l calculations  of any shape in the order. this takes account of the fact that the smaller cannot be cut before the larger and therefore its own higher urgency would s t i l l not lead it to be 
introduced into an early pattern. 
1 forcing shapes in 
       the four subgoal processing functions at the top of the hierarchy are a l l concerned with giving direct consideration to the possible inclusion in the current pattern of shapes that are 
deemed at this point to be particularly desirable. 
       experience shows that once shapes from two different orders have appeared in the same subpattern they should continue to do so. usedpajr-select introduces such pairs into the proposed pattern. 
       sequencing desiderata mean that other shapes for which demand has not been satisfied should be introduced into the proposed pattern. mid-
shape-select w i l l introduce these shapes  and its f i r s t choice w i l l be to give them their preferred 
orientations  provided a look-ahead indicates that this w i l l not cause difficulties in midorder-select. 
       it is worth giving attention to several alternative developments of the partial proposals generated by these f i r s t two functions  so the search is organized in such a way that they are re-entered relatively less frequently. 
       choices made in mid-order-select complete consideration of the inclusions desirable for reasons of sequencing. the reasoning that led to the definition of urgency suggests that the most urgent shape remaining unsatisfied in the order l i s t should be specifically considered for inclusion.   this i s done by m1st-urgent-plececonsider. 
1 sub-pattern-design-continue 
       when sub-pattern-design-continue considers which size of stock sheet should be used  it does so in the light of the specifications that have already been made that sub-patterns containing certain shapes shall be present. for each stock sheet size the manner in which each sub-pattern can be constructed so as to include the stated shapes with minimum trim-loss is determined. the sheets are ranked on the aggregates of these minimum trim-losses  the lowest aggregate indicating the most preferred size. it is likely that a partial cutting pattern for which the trim-loss already unavoidable is low can be completed in such a way that the total trim-loss is low. 
       within a choice of stock sheet size a number of possible alternative additions of sub-patterns to the proposal may be generated. the evaluation of these alternatives takes account of the urgency of the piece it has been decided to i n clude in the sub-pattern  the trim-loss within the sub-pattern and  by means of a look-ahead  the likely amount of trim-loss in the pattern as a whole outside of the trim-loss in the individual sub-patterns. the evaluation also gives some preference to additions which keep the number of different shapes in the final pattern small as these w i l l lead to fewer complications in the 
pattern sequencing. 
1. results 
       a program using these techniques has been written in algol 1-r  woodward and bond  1  and tested on an icl1s against 1 sets of data. a typical data set is shown in table 1. the results from these test runs are shown in table 
1. 
       during the development of the program a considerable number of heuristics were  experimented 
with. 	these involved different methods of problem reduction  different orderings for the sequences of problem reductions  resulting in different subsets of the possible reductions being used  different ways of calculating the  urgency  of pieces  and different methods of evaluating the  best  pattern given a set of alternatives. 	some of these heuristics produced very good results with some sets of data whilst performing unacceptably badly on others. these results have been collated to produce column 1 of table 1. 	column 1 thus shows the known deficiencies of the program. 
       the execution time of the program depends on the size of the data set  the format of the output and whether the object code incorporates run-time checking. however  1 minutes may reasonably be regarded as an average execution time. no sequence breaks occur in any of the pattern sequences. 
1. conclusions 
       the program succeeds in producing sequences of cutting patterns with no sequence breaks  which was one of the design aims. in this re-
spect it would appear to be superior to that of dyson and gregory  1 . its trim-loss behaviour is known not to be optimal. however  on the test data used the percentage of the material lost as scrap never rose to 1% and the average discrepancy between the solutions produced and the known best solutions was 1% of the material used. whether the benefits of absence of sequence breaks outweigh the sub-optimability of the trim-loss behaviour would depend on the details of the industrial environment. 
applications-1: hinxman        heuristic information is embodied in the program in the urgencies  the evaluation of 
table 1 

patterns  the chosen problem reduction structure and the extent to which the problem reduction tree is developed. the greatest gains in performance would be likely to result from the improvement of the f i r s t two of these. 
acknowledgements 
　　　this research was supported by src research grant b/rg/1. the grant holder is dr. t. b. boffey. 

adamowicz  m. and albano  a.  a solution of the rectangular cutting-stock problem  ieee trans. systems  man cybernetics smc-1-1  1 . 
dyson  r.c. and gregory  a.s.  the cutting stock problem in the flat glass industry  opl  res. q.1  pp.1  1 . 
gilmore  p.c. and gomory  r.e.  a linear programming approach to the cutting stock problem  opns. res. 1  pp.1  1 . gilmore  p.c. and gomory  r.e.  a linear programming approach to the cutting stock problem part i i   opns. res. 1  pp.1  1 . gilmore  p.c. and gomory  r.e.  multistage cutting stock problems of two and more dimensions  opns. res. 1  pp.1  1 . hahn  s.g.  on the optimal cutting of defective sheets  opns. res. 1  pp.1  1 . 
hinxman  a . i .   problem reduction and the twodimensional trim-loss problem  aisb summer conference on a r t i f i c i a l intelligence and simulation of behaviour  pp.1  university of edinburgh  1. 
nilsson  n.j.   problem solving methods in a r t i f i c i a l intelligence   mcgraw-hill  new york  1. 
woodward  p.m. and bond  s.g.  algol 1-r users guide  h.m.s.1. london  1. 

applications-1: hinxman 
1 
1 

1 

1 









1 

1 



1 

1 

