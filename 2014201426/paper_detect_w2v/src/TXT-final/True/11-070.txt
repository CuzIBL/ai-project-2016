ions 
       the actual laboratory transformations are often nonspecific both in terms of the objects they act upon and the results they produce. this characterization of the domain transformations leads naturally to the use of abstract objects and transformations in planning experiments. the abstractions correspond to the conceptual entities and transformations of the geneticist and w i l l be an important part of the knowledge base. 
       similarly  the planning strategies used by the geneticist in creating a plan with these abstractions are important heuristics for the system. this encompasses a broad range of knowledge such as plan sketches for various contexts  design cost heuristics which predict the costs or transformations  and heuristics for evaluating the relevance and specificity of laboratory transformations to the current problem. 
1 	analysis example 
       one method of analysis planning consists of focussing i n i t i a l attention upon some feature of the problem and creating a model which emphasizes the attributes of that feature. in this example we i l l u s t r a t e how different attributes of dna can lead to different plans for the same experimental task. the problem is to discriminate between the two hypotheses: 
       hypothesis 1: the sample contains molecules with the sequence aaaaaaa... called poly a   where the length of the poly a sequence is at least t h i r t y bases. 
       hypothesis 1: the sample contains no such molecules. 
       the usual focus in such a problem would be the poly a sequence. 
       planl: one attribute of a long poly a sequence is that it w i l l have weaker hydrogen bonds than other regions. this knowledge is easily deduced from the fact hat a's form considerably weaker hydrogen bonds with t's than do c s with g's. exploiting this weakness leads to the idea of partially denaturing  breaking the weaker hydrogen bonds in  the molecules and looking for the resulting bubble shape under an electron microscope. 
       plan1: recognizing that an appropriate complementary base sequence would bind selectively to an embedded poly a region leads to a  probe  plan  a probe of radioactively labelled poly t  the complementary sequence  is obtained. the probe is mixed with the dna sample. finally  an observation technique is used to see if radioactivity has been incorporated into the dna molecules. 
       plan1: a final perspective makes use of the fact that the biological function of dna is to create proteins. in the case of poly a  the protein produced would be poly-valine. the experimental plan is to create proteins from the dna sample and test for the presence of polyvaline. 
	1 	representation of knowledge 
       we can summarize the knowledge which molgen w i l l use in experiment planning as follows: 
static knowledge- knowledge which is fixed during problem solving. 
 1  object: conceptual entities of the system like dna molecules  enzymes  samples  lab techniques. 
 1  action: world state transformations corresponding to the effects of laboratory techniques. 
 1  strategy/control: genetic planning strategies and general problem solving heuristics. 
dynamic knowledge- knowledge which can change during problem solving. 
 1  world state: a 	description 	of 	the simulated 	genetics 	experimental environment and measurements of i t . 
 1  planning state: a representation of the partially designed experiment and the activity of the problem solving process. 
       
applictions-1: 	mart in 
1 
       
       a similar classification of knowledge applies for many problem solving systems. besides representing objects and actions  a l l systems must represent problem solving strategies and states. these are often embedded in the program or control structure rather than being explicit entries in the knowledge bases. however  embedding knowledge in n this way this way may seriously impair the system s f l e x i b i l i t y flexibillity. changing  adding  or deleting an instance of any type of problem solving knowledge can have wide ranging effects on knowledge of a l l types throughout the system. in a large knowledge base  it is v i t a l for the system to assist the user in locating these effects. in addition  any system which w i l l be extended to work on new problems must have f a c i l i t i e s for adding new instances of each category of knowledge. 
1 cprpmon representation for all problem solving knowledge 
       to represent these types of knowledge  we adopt the use of a structured  object-centered knowledge base. this idea has recently been advanced for problem solving in krl  bobrow1  and for knowledge acquisition by teiresias  davis1 . building on the ideas  among others  of simula classes  dahl1   frames  minsky1   and smalltalk classes  goldberg1 . the main components of these representations  variously called  frames   
 units   or  schemata   can be thought of  following  davis1   as record definitions extended to support interrelationships and to accommodate attached procedures. we w i l l refer to them as  schemata    each schema w i l l be composed of slots with associated value or type specifications and attached procedures. all schemata w i l l be organized in a generalization/specialization hierarchy similar to that of other systems. associated with each schema w i l l be a model which summarizes the ways in which the various slots have been f i l l e d . these schemata and their associated models provide the knowledge needed by management routines for acquiring and updating the knowledge base and for many problem solving tasks. the issues involved in representing knowledge in such a schema system are similar to the issues when the representation is a semantic net. see  woods1  and  brachman1  for discussions of these issues. 
       a novel aspect of the design of the molgen knowledge base is the representation of a l l types of problem solving knowledge in a common formalism - as instances of schemata. procedural knowledge w i l l be represented in such a way that the system can easily inspect any procedure. the schema system provides a mechanism for breaking procedures into component parts which can be addressed separately  and are thus accessible to the system  see section 1 . this w i l l aid acquisition and use during problem solving. schemata for procedural knowledge are discussed more f u l l y below. 
       the information gathering process at the beginning of a problem solving session is similar to the process of acquiring new instances of domain objects and transformations. by using a uniform representation  the gathering of this i n i t i a l information from the user w i l l be handled by the same mechanisms which acquire genetic knowledge for the permanent knowledge base. 
1.1 	the 	schema hierarchy 	and the creation of 
       the geneticist classifies domain objects and processes according to their common properties. for example  a l l physical measurements are grouped together; a l l enzymes are grouped together; a l l chemical techniques are grouped together. the schemata w i l l be organized in a hierarchy that reflects these classifications. schemata w i l l be linked from most general to most specialized category  with specializations inheriting designated properties  slots restrictions on their values. 	attached 	procedures  	from 	their generalizations. 
       every individual entity in the system w i l l be created as an instance of some schema  known as i t s  prototype  . the instance w i l l inherit i t s set of slots from i t s prototype schema and from the generalizations of the prototype. the values f i l l i n g the slots must also obey the restrictions specified in the prototype and i t s generalizations. these values w i l l be instances of other schemata. for example  we might have a  growth medium  slot in the schema for  culture growth  which w i l l be f i l l e d by an instance of the schema   g e l   ; the  resolving power  slot of the schema for  electrophoresis   an analytical technique  might be f i l l e d by an instance of the schema for  real number . 
1.1 	grouping entities bv function 
       the geneticist's classification hierarchy does not always reflect the functions that domain objects have in common. for example  restriction enzymes and ligases are both classes of enzymes  but the former performs cutting actions on dna  while the latter performs sealing actions. from the point of view of seeking a tool to perform cutting during an experiment  restriction enzymes are more closely related to some physical methods than to enzymes such as ligase. functional relationships w i l l be represented separately from the classification hierarchy. the schema hierarchy is not meant to indicate a l l possible relations among entities or a l l possible ways in which something can be viewed. 
1.1 	derived 	models 	of 	typical 	instances 	of schemata 
       the teiresias program  davis1  maintained tabulations of the individual and joint occurrences of specific tokens within the premises and actions of each rule type. these tabulations were called  rule models . they were used to create expectations about the contents of new rules. models are derived from actual instances and record the values which have been entered in each slot of a particular schema. we w i l l use models for prompting the user for possibly missing information or to suggest default values. for example  the derived model for the   i n i t i a l world state  schema might note that eighty percent of the instances which mention ph of the sample also mention the concentration of magnesium ions. a user who creates an i n i t i a l world state mentioning ph but not magnesium concentration could be asked whether that should be included too  based on the correlation of occurrences. 
1 1 	uses 	of 	the sehema hrarchy 
       a major use of the schema hierarchy w i l l be to guide the acquisition of a l l types of domain knowledge. this use of the schema hierarchy is motivated by i t s use in the teiresias system. in the process of entering a new enzyme  a user w i l l be guided through the hierarchy  from objects to enzymes to a particular class of enzymes  u n t i l the proper prototype is located. if the necessary prototype does not exist  the system w i l l guide the user in creating it and inserting it correctly in the hierarchy. the prototype w i l l then give instructions to the system on how to prompt the user for information about the new instance  including documentation. the prototype also w i l l give instructions on how to incorporate the new instance into system l i s t s or tables as necessary. 
a p p l i c a t i o n s - 1 : 	m a r t i n 
1        a second important use of the schema hierarchy w i l l be for organizing retrieval of objects matching particular descriptions during problem solving. derived models can play a role in increasing the efficiency of this search process. by comparing the desired description with the s t a t i s t i c a l information in the model  a measure of the likelihood of finding an instance matching the description can be obtained. when a 
       match is unlikely  the search could be directed to another branch of the hierarchy. 
1 	schemata for procedural knowledge 
       one of the novel aspects of the design of the molgen knowledge base is the use of schemata to represent procedural knowledge. instances of these schemata w i l l be the  rules  that express transformational and problem solving knowledge. in most similar systems  the knowledge about rule types is generally in the program code. these rules range from general qlisp procedures to highly restricted formats. for example  teiresias expects a l l rules to be  if-then  rules. knowledge about the two named components of the rule  the premise and the conclusion  is in the control program. using this knowledge  the system can prompt the user for information to f i l l these components and can retrieve rules by reference to the content of the components. rather than express rules in a traditional production system format  we use explicit iteration statements  conditional statements and assignment statements. the granularity of the rules depends on the type of rule. rules expressing modification transformations w i l l be relatively large  reflecting the genetic process being modeled. planning rules w i l l vary in size from small traditional rules to more complex rules. our design extends teiresias' knowledge management capabilities of acquisition and content referencing to handle the complex types of rules. to do this we w i l l use the slot mechanism. one slot w i l l correspond to each component of a rule and may be f i l l e d by instances of other entities - that i s   oblects or other operations. this design is used for a l l procedures in the system from predefined system operations to the domain rules which w i l l be entered by the user. for example  the components of an iteration primitive  foreach  are described by slots corresponding to an iteration-list and an iteration-body. slots of domain rules correspond to domain relevant components as illustrated by the schema for detection techniques described in the next section. in both cases specialized schemata w i l l guide the f i l l i n g of the slots. 
       as a result of this representation paradigm  strategies can be written to retrieve rules by reference to the content of named components. this w i l l insure that rules are not incorrectly retrieved because of a faulty external descriptor. also  it w i l l be possible to retrieve a rule using a variety of patterns  rather than by lust a single name. content referencing is motivated by a need to associate a new rule with appropriate problem solving contexts without specifying those contexts at the time the rule is acquired. 
       rule retrieval by means of content matching may be very inefficient in a large system. in some instances we w i l l precompute retrieval by associating with each strategy rule a  ruleset  containing the rules it most frequently retrieves. each ruleset w i l l have an attached pattern which w i l l be checked against a newly entered rule to check whether it should be added to the ruleset. 
1.1 a schema for detection tecftnjqv g 
     an important class of actions in the genetics domain is what we term  detection techniques . the detection rule schema  see figure 1  summarizes molgen s representation for a class of laboratory techniques which measure roperties of dna structures. when a molgen rule or a particular detection technique is executed  
it w i l l transform a world state instance by recording the result of the observation. for example  a detection technique might increase the experimenter s knowledge about some of the topological features or the structures such as their length or substructures. this new knowledge must be added to the world state. 
       in this example of a domain transformation  we w i l l i l l u s t r a t e the kind of knowledge contained in the rule  the organization of the schema for the rule and the way that the creation of the rule as an instance of a schema lets it be retrieved in more than one way. 
       a simplified schema for detection techniques is shown in figure 1. the bookkeeping slots provide a place for documentation of the knowledge base. next are slots which must be f i l l e d when an instance of the schema  a specific detection rule  is created. adiacent to the slot names are type restrictions. the slots name those parts of the rule which are determined by the instances of the rule. in this example  there are three such slots: preparatory-method whose value is to be an instance of the preparatory-rule schema; minsample-size whose value is to be an instance of the mass schema; and feature-list whose value is to be a l i s t of instances of the dna-features schema. in acquiring an instance of the 
detection-technique schema  only these slots need be f i l l e d . an instance of the detection-technique schema is given in figure 1. the procedural part of the schema is contained in the form slot. the code in figure 1 in the form slot consists of the figure 1 code with the appropriate substitutions made for the named components. 
       the process of creating the prototype form is more complicated. it involves using the schemata for each of the component parts of the rule. 
1.1 	the observe operation 
an important part of the detection-technique rule is the operation  observe . observe is a function that makes world state changes that reflect an increase in the experimenter's knowledge at any point in the experiment. observe has two basic actions: f i r s t it must call the appropriate procedures to make an observation on one world state. then  it must make appropriate changes to the world state to reflect this observation. this p cess is guided by the schemata for the arguments of the function. in this case  each dna feature which can be observed w i l l have an associated pattern matching rule which can check for the feature in a given structure. for example  many of the dna-features w i l l be instances of the schema for dna-nucleotide-graph and these schemata w i l l inherit a pattern matching rule from their prototype which performs a subgraph matching process. this association of the pattern-matching procedure with the pattern to be matched is similar in philosophy to constructions in the smalltalk  goldberg1  system and w i l l help make the observe function quite general. 
1.1 	multiple access by 	means 	of 	content 
a p p l i c a t i o n s - 1 : 	martin 
1        decomposing a rule into accessible slots w i l l make it retrievable by content for different purposes. we w i l l i l l u s t r a t e this with the rule for electron-microscopy  figure 1   this rule is an instance of detection-technique schema. like other types of detection techniques  electron microscopy is used for detecting certain features in molecules. i t s a b i l i t y to detect features is limited by various constraints  illustrated in our simplified example by the slots min-sample-size and feature-list. the detection-technique schema  figure 1  emphasizes both how i t s instances are similar and how they differ. thus  in an experiment where two samples must be distinguished  a strategy rule might choose a detection technique which can work with a very small sample size if the sample material is precious. alternatively  if the sample is large  the detection technique which can recognize the broadest range of features might be desirable. 
1 	example schew and. instance 
-bookkeeping slots filled at schema creation- 
name: 	detection-technique 
generalization: laboratory-technique 
description:  rules for detecting structural features of dna  
---slots to be filled when creating an instance- 
preparatory-method: 	preparatory-technique 
min-sample-size: 	mass feature-list: 	list of dna-feature 
form: 
if ws-sample.size   min-sample-size 
then apply preparatory-method to ws-sample foreach structure in ws-sample.structures 
foreach feature in feature-list observe feature structure  
figure 1 
** schema for detection technique ** 
 comment on notation: the notation a.b refers to the contents of slot b of schema a.  
-bookkeeping slots filled at schema creation-
name: election-microscopy instance-of: detection-technique description:  technique for observing and measuring structural features.  -slots filled when rule was created- 
preparatory-method: 	protein-stain 
min-sample-size: 	1 microgram 
feature-list: 	 bubble  hairpin-loop  circular.single-stranded  double-stranded length ...  
form: 
if 	ws-sample.size   1 microgram 
then apply protein-stain to ws-sample foreach structure in ws-sample.structures 
foreach feature in 	 bubble  hairpin-loop circular ...  observe feature structure  
figure 1 
	**electron-microscopy 	rule** 
1 	procedural attachment 
       procedural attachment is a versatile mechanism for managing an object-centered knowledge base. the idea  bobrow1  is to associate the procedure which performs a particular operation with the specification of the data objects involved. in krl bobrow1   attached procedures are associated with the schemata for obiects and can be inherited by instances* the krl work emphasized the use of procedural attachment for general use in problem solving. in teiresias   slot-experts  played an important role in knowledge acquisition. in molgen. attached procedures can be activated when acquiring a new prototype or instance; during pattern matching; when trying to f i l l a slot during problem solving; after a slot has been f i l l e d : when accessing a value for a slot; and when printing values. an attached procedure can either be a complicated program as in example 1 below or a rule in the knowledge base as in example 1  we give a few examples of the use of attached procedures: 
acquisition of prototvpe or instance 
        1  special editors: acquiring schema instances from the user w i l l usually be guided by a general procedure interpreting from the schema what information the user must provide. however  some objects w i l l have f a i r l y complicated structures. for example  models of dna w i l l be graph structures with segments represented by nodes and chemical bonds represented by links. for these objects it w i l l be useful to attach special procedures to their schemata to guide acquisition. we have already built and tested such a program for acquiring dna structures. it is a picture-oriented editor and has proven easy for geneticists to use. 
        1  restriction experts: the schema hierarchy discussed in a previous section is based on a s t r i c t generalization/specialization relationship between schemata. this is reflected not only in the inheritance of slots but also in the inheritance of restrictions on the values for slots. we w i l l require that the value specification in the slot of a specialization be more restrictive than the value specification in the corresponding slot of the generalization. the question of whether one value specification is more restrictive than another is d i f f i c u l t to determine in a general way. for example  a l i s t specification is more restrictive than another if it is a subset of the l a t t e r ; a real number interval specification is more restrictive than another if i t s endpoints are contained within the other; in some cases a dna graph specification might be considered to be more restrictive than another graph specification if it contains the other as a subgraph. this variety of comparisons between value restrictions suggests that the restriction comparison should be associated with the schema for the data type being restricted. 
        1  pre-computing associations: the molgen knowledge base design has emphasized flexible content reference as a means for accessing domain transformation rules. this can be the basis for strategic selection of domain rules during the planning process and is motivated by a need to  1  index new rules to existing strategies and  1  permit new strategies to index existing rules in new ways. recognizing the inefficiencies of content referencing during problem solving  we w i l l pre-compute the indexing by associating rule sets with strategies. each rule set could have attached to it an attached procedure which would consist of a content referencing rule. these attached procedures could be activated whenever a new rule is added to the knowledge base to check for each rule set whether the new rule should be added to the set. other procedures attached to the ruleset w i l l check whether updating is necessary when a rule is deleted or modified. 
matching 
        1  subgraph matcher: another example of procedural attachment was discussed in the example of a detection-technique schema. in that example   observation  procedures were attached to features which could check a given structure for the dnafeature. because many of the features were instances of a dna-graph  they inherited their observation procedure from their generalization 
 in those cases  the observation procedure is a dna subgraph matcher . when filled 
a p p l i c a t i o n s - 1 : 	m a r t i n 
1         1  side effects: the attached procedure may also be a  rule  in the knowledge base which describes the result of changing the value of a 
       parameter. many properties or samples can be changed in numerous ways  and changing the properties can have many effects on the rest of the sample. for example  sample ph can be altered by the addition of a wide range of chemicals. once ph is changed  it can alter the activity of every enzyme in the sample and denature many structures  cause their hydrogen bonds to break . these changes of course can greatly affect the course of an experiment. it would be possible to associate the procedures to carry out the effects of changed ph with each of the chemicals that changes i t . alternatively  procedures might be associated with each structure or enzyme which could possibly be changed by ph  and these could check for altered ph whenever properties of the structure or enzyme were checked  changed  or used. neither of these alternatives appears to be as natural or efficient as attaching a procedure to the schema for ph. which carries out the appropriate alterations in world state whenever ph i t s e l f is changed. 
        1  plan critics: new world state conditions which may affect the plan could be detected by attached procedures which offer advice on how to alter the plan to take the conditions into account. such attached procedures could be called  domain specific plan c r i t i c s   . for example  suppose that sample temperature had been altered and as a result  certain structures had become denatured  the effect of denaturation being carried out by attached procedures as indicated above . a plan c r i t i c might be activated after the effects of temperature had been propagated through the world state. it might examine the new situation and conclude that the continuation of the plan required that the affected structures be renatured  hydrogen bonds resealed . it might be possible to provide the c r i t i c with specific repairs to specific problems. for example  it might know that if structures of a given type are denatured by raising the sample temperature  and if the ph is in a given range  then the structures can be renatured by adding a calculated quantity of a certain ion so that the plan can be continued. 
1 implementation 
       many of the u t i l i t y programs for accessing and modifying the knowledge base have been implemented  a special editor  edna  for acquiring and manipulating dna structures is completed and has been tested and used by geneticists. an i n i t i a l schema editor has been created. the i n i t i a l sets of genetic objects and transformations have been determined. 
       the f i r s t system w i l l carry out the task of experiment checking. this means that a set of input samples and a specific sequence of transformations w i l l be given. the system w i l l then simulate the sequence of transformations on the representations of the samples terminating with a final set of samples. the final samples can be compared with actual laboratory results as a test of the i n i t i a l hypotheses or of the accuracy of the transformations in the knowledge base. this f i r s t system w i l l be used for debugging the transformation knowledge base and by geneticists for comparing the predicted results from the molgen system against actual laboratory experiments. 
1 summary 
       the use of a representation language involving schemata and associated derived models has been extended to include a l l aspects of domain knowledge and strategy and heuristic problem solving knowledge. this uniform representation w i l l allow the extension of knowledge base management techniques for acquisition and retrieval of procedural knowledge. 
       as with any problem solving system  the success w i l l depend on the knowledge it has available. the purpose of our design is to create a system which can f a c i l i t a t e the process of transferring knowledge from the user to the system  and use this knowledge effectively in problem solving. 
1 	acknowledgments 
       other members of the stanford community have contributed time and ideas to the molgen project. we particularly want to thank bruce buchanan  
randy davis  ed feigenbaum  jerry feitelson  joshua lederberg  nils nilsson and terry winograd. 
1 bibliography 
bobrow d.g.   	winograd t. 	an 	overview of 	krl. a 
knowledge representation language. cognitive science no.1 vol.1  jan 1  
brachman 	r.j.  	what's in 	a 	concept: structural 
foundations for semantic networks  bbn report no. 1  october 1  
dahl o.j.  dijkstra e   hoare c.a.r  structured programming. new york: academic press  1  
davis r. applications of meta level knowledge to the construction  maintenance  and use of large knowledge bases. ai memo 1. computer science department  stanford university.  july 1  
feitelson 	j   . steflk 	m.j.  a 	case study 	of the 
reasoning in a genetics experiment. heuristic programming project memo hpp-1  working paper   may 1  
goldberg 	a.  	kay 	a.  	learning 	research group. 
	smalltalk-1 	instruction 	manual. 	xerox 
corporation  1  
minsky m. 	a framework for representing knowledge 
in p. in p. winston winston  ed.  the psychol. ogy ' of computer vision new york: mcgra 
stefik. m.j.  martin n. a review of knowledge basea problem solving as a basis for a genetics 
experiment designing system  cs report 1 computer science department  stanford 
university.  feb 1  
woods 	w.a.  	what's in 	a 	link: 	foundations for 
semantic networks  in representation and understanding  s i d l e s in cognitive science  
bobrow and collins  eds.   1  
       
a p p l i c a t i o n s - 1 : 	m a r t i n 
1 
