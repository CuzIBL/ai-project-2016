 
　　　the advent of advanced computer architectures for parallel and symbolic processing has evolved to the point where the technology currently exists for the development of prototype autonomous vehicles. control of such devices w i l l require communication between knowledgebased subsystems in charge of the v i s i o n   planning  and c o n f l i c t resolution aspects necessary to make autonomous vehicles functional in a real world environment. this paper describes a h e u r i s t i c route planning system capable of forming the planning foundation of an autonomous ground vehicle. 
　　　an effective route planner must address two levels of planning. at the high l e v e l   the planning algorithm usually exploits some form of map data to generate a global route which avoids mountains  valleys  and canyon areas. depending upon the map resolution  individual pixel path points at t h i s level vary from a representation area of 1 by 1 meters to 1 by 1 meters. at the low l e v e l   the planning algorithm must deal with local planning inside these individual path points so that obstacles such as trees  rocks  and holes may be avoided. 
　　　a consensus exists that global information in the form of a d i g i t i z e d t e r r a i n map is essential in the operation of an autonomous vehicle  at least at the global level of route planning   1 - 1   . the t e r r a i n map required must be capable of representing huge amounts of multidimensional data in a format easily exploited by the route planner. in order to make it suitable as a basis for real-time decision making during vehicle operation  the data should also be preprocessed into a more compact and manageable format. two interesting approaches to t h i s problem are the rule-based creation of a  composite map   and the transformation of a polygonal obstacle map into a relational graph database   1   . it is to the second concept that our current approach to preprocessing map data is more closely aiigned . 
　　　this paper describes a dynamic route planning and execution system called trek  tech route execution kale do scope . trek consists of four d i s t i n c t processing phases:  1  scene recognition   1  route generation   1  scene matching   1  and knowledge-based v a l i d a t i o n . each of these processes is discussed in the following sect ions . 
　　　the recognition of objects in an image is central to the concept of local route planning. given that a global route can be generated through a large area of t e r r a i n   scene recognition must be capable of interpreting the objects contained within the current fieid-of-view so that they may be avoided during the traversal of the actual t e r r a i n . without a capability to determine what is in its local environment  low level route planning would not be able to avoid threatening objects or objects obstructing the vehicle's path. 
　　　scene c l a s s i f i c a t i o n in the trek system exploits a hierarchical c l a s s i f i c a t i o n tree consisting of objects and regions divided into natural or manmade categories. efforts in scene c l a s s i f i c a t i o n to date have concentrated on detection and c l a s s i f i c a t i o n in video imagery. this work w i l l be extended to infrared imagery in the near future. 
　　　the goal of a route planning system is to analyze a l l available information to produce a route that is optimal in light of predetermined mission requirements. the trek route planning system consists of three stages: a  point generation  b  graph generation  and c  heuristic search. 
a. point generation 
　　　the trek system generates three d i f f e r e n t types of path points: two-sweep points  convex t e r r a i n points and crossover exposure points. the two-sweep point generation algorithm is a humanistic approach to t e r r a i n traversal assuming that the system possesses a map and a compass. the central idea of two-sweep is the assumption that the direction of the goal point can always be determined through 

simple geometry. the algorithm i n i t i a l l y scans forward from its current location u n t i l it locates the goal point or encounters an obstacle. the underlying heuristic is the simple strategy that a person uses when there is an obstacle in front that prevents him/her to go to the desired destination. the individual usually goes around the obstacle following its contour u n t i l the destination is v i s i b l e . this approach can be used both at the local and global level in route planning  but only the global application is discussed in t h i s paper. 
　　　the convex points of interest for an obstacle are defined as the set of points on the obstacle's boundary such t h a t : a  each point in the set is a convex point  b  for each point p in the set  p's curvature is a local maximum  and c  the set of points forms a convex polygon. 
　　　a set of convex points is generated for each obstacle in the t e r r a i n image. an obstacle is represented as a l i s t of  x y  coordinate pairs which define its boundary. this set of points does not have to be of a continuous nature  but it is assumed that the distance between adjacent points is uniform. 
　　　the combination of two-sweep and convex point routes produces an extensive route graph with a number of route segment intersections. these intersections or crossover points actually represent high t r a f f i c areas of maximum exposure. by connecting a l l crossover points with a iine-of-sight algorithm  a number of offensive route options are created. when merged with defensive path points produced by two-sweep and convex point generation  an unbaslsed route graph is generated. in t h i s mode the trek system is capable of non-military route planning as would be the case in a robot vehicle p a t r o l l i n g a 
　　　national park looking for stranded motorists. 
b. graph generation 
　　　a global terrain image graph based upon the aforementioned point sets is generated using a line-of-sight computation is made to determine if a path exists between individual obstacles polnts-of interest. a cost is then assigned to each edge in the graph. this cost is computed as a weighted function of distance  t e r r a i n   scenario threats and vehicle constraints as foi iows: 
f c  	- 	distance 	* w1 + 	tarrain 	* 	w1 	+ 
	threats 	* w1 + constraints * w1 
this c r i t e r i a edge graph forms the search space for the a* algorithm. 
c. heuristic 	search 
　　　once the search graph has been constructed  a suitable search procedure must be used to find an optimal route. 
j. gilmore and a. semeco 1 
given the expected size of the graph  	it 	is 
important to have cost estimate functions to help improve the efficiency of the search. 
　　　the a* algorithm was chosen as the h e u r i s t i c search mechanism in trek. a* is basically a b e s t - f i r s t tree search algorithm augmented to handle cycles and duplicate paths between nodes. if a recently discovered path to node n is found to be an improvement over a previous path to the same node  the pointer from n to its predecessor is updated and the improvement is propagated to other paths that have n as an intermediate node. 
     one of the most important aspects of an autonomous vehicle system is its a b i l i t y to maintain and follow the routes that it generates. if a vehicle is incapable of performing t h i s task. it w t l l eventually wander aimlessly through t e r r a i n that it can not recognize as nothing w i l l match its global map. for t h i s reason  an accurate scene matching algorithm must be 
incorporated 	into the system. 
	the 	symbolic processing nature of the 
trek system readily lends i t s e l f to a syntactic pattern recognition approach to scene matching as the goal in scene matching is to perform an image-to-image mapping  pixel correlation techniques are probably the most accurate method available. the d i f f i c u l t y for autonomous vehicle applications is that the local sensor image is guaranteed to have a d i f f e r e n t perspective than that of the global a l t i t u d e data map being matched. such a perspective invariant requirement is the shortcoming of most conventional scene matching approaches. 
　　　the key to determining and maintain the vehicle's position is to match objects and regions detected during scene c l a s s i f i c a t i o n to objects and regions in the map. this can be accomplished by representing each object and region as a c l a s s i f i e d point  constructing a 
　　　perspective invariant graph of the local image points  and comparing the local graph as a subgraph to be located in a global map graph which has been created in the same manner   1   . this time of a locai-to-giobai scene matching is accurate in l i g h t of obscurations and other possible t e r r a i n permutations and easily performed using a symbolic processing language such as lisp. 
　　　scene recognition  route planning  and scene matching information constitute the global database of the trek system. this information is processed by the system as a preliminary representation of the current vehicle environment. tasks or mission goals are provided to the system through communicating problem requirements via the control strategy. for a m i l i t a r y scenario  1 j. gilmore and a. semeco 
example mission goals would be as follows: 
primary goal: patrol zone 1 
secondary goal: neutralize intruders 
secondary goal: maximize s u r v i v a b i l i t y 
	secondary goal: maximize k i l l 	r a t i o 
trek interprets these mission requirements and determines the optimal mission parameters which are passed to the scene recognition  route planning  and scene matching algorithms. an i n i t i a l plan of action is then generated and represented in the global database. decisions the on v a l i d i t y of the scene interpretation and the current plan of action are made through knowledge base processing. the trek knowledge base contains three types of rules : scene r u l e s   mission r u l e s   and surv i v a b i l i t y r u l e s . 
　　　scene rules are used to validate and further interpret the information provide by scene recognition. in natural t e r r a i n images  object c l a s s i f i c a t i o n confidences can be enhanced through the u t i l i z a t i o n of positive and negative evidence provided by scene context. for example  
scene rule 1 
if 	 	an object is man-made and 
  1   it is on a road or in a f i e l d and 
	 	it has a high confidence of motion  
then   1   hypothesis the object is a vehicle  increase target confidence 
　　　mission rules interpret the generated plan in l i g h t of high level mission goals. for example  the detection of three threats w i l l generate a plan of action to engage and neutralize the threats based upon the previously entered mission plan. mission rules further analyzed the system goals by examining the requested s u r v i v a b i l i t y and k i l l r a t i o levels and creating a modified plan through system feedback. for example  
mission rule 1 
if 	  1   multiple threats are detected and 
  1   they are in a column and 
	 	they are in possess motion and 
  1   they are approaching an area that 
	w i l l 	maximize 	k i l l 	and 
s u r v i v a b i l i t y 
then   1   generate a defensive route to that area and 
  1   determine the threat time of a r r i v a l to that area and 
 generate an offensive route to maximize k i l l to be executed on threat a r r i v a l 
mission plans are also used to repair plans based on invalid interpretations or changes in a scene. 
　　　s u r v i v a b i l i t y 	rules 	are 	rules 	that maximize 	the vehicles chances of 	survival 
based on the interpretation of the current environment. for example  
survivability rule 1 
if 	  1   an object is detected and 
  1   avoidance w i l l delay accomplishment of mission goals 
then   1   determine 	its 	p r o b a b i l i t y 	of threat and 
 replan to avoid if threat is greater than  .1  
based upon the results of knowledge base processing  the control strategy w i l l feedback adjusted parameters to scene recognition  route planning  or scene matching algorithms for updated information  or execute the plan and communicate t h i s decision to the user for approvai. 
summary 
　　　this paper has presented a high level view of the trek t e r r a i n navigation system. trek   1   analyzes a d i g i t a l t e r r a i n map to generate a global route    1   performs scene interpretation to generate local routes  
 maintains a track of its position through scene matching  and   1   uses knowledge base processing to validate and improve preliminary plans in light of predetermined mission goals. the e n t i r e trek system was written in lisp on a 
symbolics 1 and is currently being enhanced to increase it visual recognition c a p a b i l i t i e s   broaden its interpretation of mission goals  and advance its temporal reasoning process. near term plans include the transportation of the entire trek system into a two functional mobile robots  possessing additional sensory inputs  that has recently been donated by ibm for research in materials handling and f l e x i b l e manufacturing applications. 
  1   meystel  a. and holeva  l .   ' ' i n t e r a c t lon between subsystems of vision and motion planning in unmanned vehicles with autonomous inteliigence  spie applications of a l   washington  d.c.  may 1. 
  1   m i t c h e l l   joseph s. b. and kelrsey  david m.   p lanning strategic paths through variable terrain data  spie applications of a l   washington  d.c.  may 1. 
  1   	denton  richard v. and froeberg  peter 
l.  appiicatlons of a r t i f i c i a l intelligence in automated route pianning  spie applications of a l   washington  d.c.  may 1. 
  1   kelrsey  d.m.  m i t c h e l l   j.s.  payton  d.w  and preyss  e.p. ''muiti-level path planning for autonomous vehicles'' spie applications of a l   washington d.c.  may 1. 
  1   gilmore  john f.  syntactic pattern analysis as a means of scene matching'' canadian society for computational studies of inteliigence saskatoon  canada  may 1. 
