 
we address the task of problem determination in a distributed system using probes  or test transactions  which gather information about system components. effective probing requires minimizing the cost of probing while maximizing the diagnostic accuracy of the probe set. we show that pre-planning an optimal probe set is np-hard and present polynomial-time approximation algorithms that perform well. we then implement an active probing strategy which selects probes dynamically and show that it yields a significant reduction in probe set size in both simulation and a real system environment. 
1 	introduction 
accurate diagnosis in a complex  multi-component system by making inferences based on the results of various tests and measurements is a common practical problem. developing cost-etfective techniques for diagnosis in such systems requires that high accuracy be achieved with a small number of tests. in this work we present a generic approach to this problem and apply it specifically to the area of distributed systems management. 
　the key component of our approach is an  active  measurement approach  called probing. a probe is a test transaction whose outcome depends on some of the system's components. diagnosis is performed by appropriately selecting the probes and analyzing the results. for distributed systems  a probe is a program that executes on a particular machine  called a probe station  by sending a command or transaction to a server or network element and measuring the response. the ping program is probably the most popular probing tool that can be used to detect network availability. other probing tools  such as ibm's epp technology  provide more sophisticated  application-level probes. for example  probes can be sent in the form of test e-mail messages  web-access requests  and so on. 
　previous work studied the problem of probe-selection  brodie et al  1    ozmutlu et al  1  and efficient diagnosis from probe outcomes using approximate inference in bayesian networks  rish et al  1   but the np-hardness of 
active probing system 

figure 1: active probing system. 
probe-selection and the idea of active probing were not considered there. 
1 	pre-pianned probing 
in pre-planned probing  given an initial set of probes  we want to compute the smallest subset of probes such that each system state will produce a different set of probe outcomes  allowing the state to be uniquely determined. 
proposition 1 probe-set selection is np-hard. 
proof: the proof is via a reduction from 1-dimensional 
matching  defined in  garey and johnson  1  . details can be found in  brodie et al  1 . 
　we implemented two approximation algorithms for preplanned probing - greedy  quadratic  search and subtractive  linear  search. greedy search starts with the empty set and adds at each step the  best  of the remaining probes - the probe which maximizes the information gained about the system state. computational complexity is quadratic in the size of the initial probe set. subtractive search starts with the complete set of available probes  considers each one in turn  and discards it if it is not needed. computational complexity is linear in the size of the initial probe set. neither algorithm is optimal in general - empirical results are provided below. 

poster papers 	1 


figure 1: algorithm for diagnosis using active probing. 
1 	active probing 
active probing  allows the selection of later probes to depend on the results of earlier probes. an active probing system is outlined in figure 1. probe-stations issue probes which traverse different parts of the network. the results of the probes are analyzed to infer what problems might be occurring. if additional information is needed in order to locate the problem  the  most-informative  probe  which provides the largest information gain about the true state of the system  is computed and sent. when additional probe results are received further inferences are made  and the process repeats until the fault is localized. the algorithm is described in figure 1. 
　active probing allows fewer probes to be used than if the entire probe set has to be pre-planned  though more complex inferential machinery is needed to support it. 

 b  large networks  simulations  
figure 1: active versus pre-planned probing results for randomly generated networks. 


1 	results 
simulation results  using randomly generated networks  are shown in figure 1a  small networks  and figure 1b  large networks  where finding the true minimum is impractical . the approximation algorithms for finding the smallest probe set perform well and are close to the true minimum set found by exhaustive search. it is also clear that active probing considerably reduces the size of the probe set when compared with pre-planned  or  passive   probing. 
　in figure 1  we report the results on a real network. this network  supporting e-business applications  includes many servers and routers  and its performance and availability depend on a number of software components. a set of 1 probes was manually selected by an expert. exhaustive search shows that the minimum number of probes is actually only 1 probes  a saving of 1%. greedy search returned 1 probes  while subtractive search found 1 probes. for active probing  figure 1c shows the number of probes needed for localization for each of the different single faults. the number of probes needed never exceeds 1 probes and averaged only 1 probes  a large improvement over the 1 probes used by pre-planned probing. 
figure 1: active probing averages 1 probes in a real application where pre-planned probing requires 1 probes. 
