
possibilistic logic offers a convenient tool for handling uncertain or prioritized formulas and coping with inconsistency. propositional logic formulas are thus associated with weights belonging to a linearly ordered scale. however  especially in case of multiple source information  only partial knowledge may be available about the relative ordering between weights of formulas. in order to cope with this problem a two-sortedcounterpartof possibilistic logic is introduced. pieces of information are encoded as clauses where special literals refer to the weights. constraints between weights translate into logical formulas of the corresponding sort and are gathered in a distinct auxiliary knowledge base. an inference relation  which is sound and complete with respect to preferential model semantics  enables us to draw plausible conclusions from the two knowledge bases. the inference process is characterized by using  forgetting variables  for handling the symbolic weights  and hence an inference process is obtained by means of a dnf compilation of the two knowledge bases.
1	introduction
information is often pervaded with uncertainty  and logics of different types have been developed for handling uncertain pieces of knowledge  some based on probability theory  others based on non-additive formalisms such as possibility theory. the lack of total certainty of a piece of information is then assessed by means of an evaluation that estimates the degree of certainty of the piece of information under the form of a precise value  or at least of a bound that constrains its value. for instance  a possibilistic logic expression of the form encodes the constraint   where is a proposition    and is a necessity measure  dubois et al.  1   with the intended meaning that p is certain at level at least .
　in this paper  only partial information is supposed to be available about the relative ordering between the weights of the formulas in the base. more precisely  propositional formulas are associated with symbolic weights  and a set of constraints on these weights is specified to express the relative importance of these weights. these weights may be compound symbolic expressions  e.g.  as the result of formal computations  involving maximum and minimum operations. for handling these symbolic weights  we propose an approach that uses a logical encoding of the weights. indeed  one may think of expressing that a piece of information is not totally certain  by stating that is true under some  unspecified condition  namely  things are not abnormal . thus  the uncertain statement can be written   which can be read   is true or it is abnormal  a  . then note that if one simultaneously asserts and   i.e. it is somewhat certain that is true and it is also somewhat certain that is false  can be derived from the two pieces of information  which expresses that in a way or another we are in an abnormal situation. in this paper  since will be used as an encoding of the possibilistic formula   may be a propositional formula if is a symbolic expression. for instance  the case of multiple abnormality situations for will be encoded by	.
　this suggests a way of dealing with propositional formulas with partially constrained weights in a purely logical setting. in possibilistic logic  formulas with a weight strictly greater than the inconsistency level of the knowledge base are immune to inconsistency and can be safely used in deductive reasoning. in the proposed approach  the weights attached to the inferred formulas are handled as symbolic expressions  as well as the inconsistency level of the base. a procedure is described which enables us to determine when the available information is enough for knowing if a symbolic weight is greater than another or not.
　the paper proposes a unified and general framework to represent and handle partially-constrained weighted formulas  using propositional logic. its main contributions are:
to encode available pieces of information using a propositional knowledge base . each symbolic weight is represented by a propositional expression . each compound expression is associated with a propositional formula  obtained by replacing maximum by a
conjunction  and minimum by a disjunction. an uncertain formula will be represented by a propositional logical formula   where and are built using two different sets of variables: and . intuitively  means that is uncertain  and its uncertainty degree is encoded by a logical formula	.
to encode constraints on symbolic weights with another propositional knowledge base . the inequality will be represented using material implication. the fact that is at least as large as   will be encoded by a propositional formula  i.e.   . maximum and minimum operations are also encoded here using respectively conjunctions and disjunctions.
to define an inference relation in order to draw plausible conclusions from and . this inference is sound and complete with respect to a semantics based on preferential models. it extends the possibilistic logic  where the constraints on symbolic weights induce a total preordering .
to characterize this inference process by  forgetting  variables of   and by  forgetting  negative literals from . the inference process basically comes down to infer from and the strongest positive formula  that does not contain negation symbol   denoted
　　　　　　  that only contains variables from . intuitively  represents the logical counterpart of the inconsistency degree of the knowledge base.
to use recent results on compilations  e.g.   darwiche  1   to compute plausible inferences. more precisely  the knowledgebase is first compiled into dnf.
these formats allow then to have a linear computationof
.
　after a brief survey of possibilistic logic in section 1  section 1 states the problem of reasoning from possibilistic formulas with partially constrained uncertainty weights. section 1 provides its purely logical counterpart as a two-sorted logic and defines a sound and complete inference process from the two knowledge bases encoding respectively the pieces of uncertain information  and the constraints on the uncertainty levels. the handling of symbolic weights in the inference process is then characterized in section 1 in terms of forgetting variables  and in terms of dnf  or d-dnnf compilation  of the knowledge bases. this section also briefly considers the case of totally ordered information corresponding to standard possibilistic knowledge bases.
1	brief background on possibilistic logic
we start with a brief refresher on possibilistic logic  for more details see  dubois et al.  1  . a possibilistic logic formula is a pair made of a classical logic formula and a weight expressing certainty. the weight of a formula
is interpreted as the lower bound of a necessity measure   i.e.  the possibilistic logic expression is understood as
　　　　. since	it is always possible to put a possibilistic formula under the form of a conjunction of clauses if . the basic inference rule in possibilistic logic put in clausal form is the resolution rule:	. classical resolutionis retrievedwhen all the weights are equal to 1. let be a knowledge base. the level of inconsistency of is defined as:
                          by convention	 . where	and	.
it can be shown that iff is consistent in the usual sense.
refutation can be easily extended to possibilistic logic.
proving from amounts to adding   put in clausal form  to   and using the above rules repeatedly until getting . clearly  we are interested here in getting the empty clause with the greatest possible weight  i.e.  . indeed  the conclusion is valid only if .
　semantic aspects of possibilistic logic  including soundness and completeness results with respect to the above syntactic inference  are presented in  dubois et al.  1 . semantically  a possibilistic knowledge base is understood as a complete pre-ordering on the
set of interpretations: iff and	and . thus is all the less plausibleas it falsifies formulasof higher degrees.
1	possibilistic logic with symbolic weights
1	representing beliefs
let be a set of propositional variables. let be a propositional language built from using the propositional connectors . let be a set of symbolic weights or variables. each symbol in takes its value in the interval .
　in the following  ordinary propositions are denoted by lower case letters symbolic weights are denoted by lower case letters from the beginning of the alphabet .
　let	be a knowledge base with symbolic weights  where expresses that is a believed with a symbolic weight . can be a compound expression  namely a max/min expression. more precisely  max/min expressions are obtained only using the two following rules: i  is a max/min expression  ii  if and are max/min expressions  then and are also max/min expressions.
example 1 let and be two propositional symbols. let be five symbolic weights. in the following  we will
use the following base:
 
to illustrate the main concepts of the paper. reflects that is asserted by two sources having reliability and respectively  while for it is unsure if the information should be considered as having reliability equal to or to .
1	representing constraints
constraints bearing on symbolic weights are described by a set of inequalities. a simple form of constraints is:   where and are elements of . these constraints restrict the possible values that and can take in .
　more generally  the set of constraints are inequalities between max/min expressions of the form: and
	and	are max/min expressions .
　note that any set of constraints can be equivalently rewritten into a canonical form:
and
　this follows from the facts that i  is equivalent to and   ii  is equivalent to and   and iii  max and min are distributive.
　in the following  we assume that constraints in are in this canonical form.
　given a set of constraints	  we are interested in checking whether a given equality	 	and	are max/min expressions  follows from this set of constraints.
definition 1 let a and b be two max/min expressions.
an assignment is a function that assigns to each symbolic weight a degree belonging to .
an assignment is a solution of if it satisfies each constraint of .
	follows from	if each solution of	is also a
	solution of	.
　the derivation of strict inequality can be defined recursively as follows. let and be two elements of   then follows from c iff follows from and
does not follow from  i.e.  there is no proof for  . now  let   ...      ...  be symbolic weights in .
then	is derived from
if there exist and such that . lastly  the derivation from of strict inequality between two general max/min expressions can be defined using the fact that this derivation is equivalent to a derivation of a set strict inequalities of the canonical form	  with 's and 's as symbolic weights.
example 1 with the base of the above example  we will also consider the following set of constraints :
　note that since does not belong to the reflexive and transitive closure of   we may consider using a closed world assumption that the inequality is strict. the same holds for other inequalities.
1	plausible inference and semantics
given a knowledge base with symbolic weights  is now a max/min expression of symbolic weights and the plausible inference of amounts to establish from that
.
here the weight	continues to be the top certainty level  i.e. 
.
　our semantics is based on preferential models. we use the principle of best-out ordering defined in  benferhat et al.  1   to derive from a partial pre-order on the set of interpetations  denoted by   in agreement with possibilistic logic. let   and be two interpretations. then:
   iff for each such that   there exists such that and follows from .
　then  a conclusion is said to be a plausible consequence of if is true in all preferred models  w.r.t.  .
　an important result is the complete and soundness result  namely :
proposition 1	follows from iff is true in all preferred models w.r.t .
example 1 let us consider the above example  where :
  and
given and we are interested to check if follows from and . let us compute . by definition  we have:
 1 
let us simplify this expression  with the help of the constraints in   we have:
  hence:
 1 
	we now need to compute	  we get:
it can be checked from that   since for instance .
1	propositional logic encoding of partially-constrained weighted formulas
in standard possibilistic logic  recalled in section 1   the weights 's are assumed to be known. in this section  these weights are only partially known. propositions are then associated with symbolic weights or variables. these symbolic weights are related by a set of constraints. the following subsections describe in detail the representation of uncertain beliefs and constraints  in a propositional logic setting. 1 encoding constraints
this subsection presents the encoding of constraints on the set of symbolic weights using propositional logic. in the following we associate to each symbolic weight of the knowledge base a propositional symbol denoted by the corresponding capital letter . we denote by the set of propositional symbols associated with  with  . let be the propositional language built from using the propositional connectors .
　one possible way to check if follows from is to use propositional logic  and encode as a set of clauses.
　given   its encoding in propositional logic is immediate. namely  a constraint is translated into in the agreement with the fact that and are lower bounds  of a necessity measure  and thus refers to the set of numbers and holds iff . the translationof
 into can be read as as  if the situation is at least very abnormal      it is at least abnormal       indeed  the greater   the more certain in   and the more exceptional a situation where is false .
　to refer to the maximum  max   we use the conjunction operator      namely max a b  will be encoded by . indeed  the tautology reflects . to refer to the minimum  min   we use the disjunctive operator
     namely min a b  will be encoded using . a clause will hence encodes a constraint . more formally  definition 1 let be a set of constraints. the propositional logic base associated with   denoted by   is defined by :
.
example 1 a total order is encoded by :
.
　the following proposition shows that inequalities induced from can be obtained using our propositional encoding:
proposition 1 let   and be two symbolic weights. then : follows from iff .
　this proposition can be easily generalized for any inequality of the form where and are max/min expressions  using remarks of section 1. namely any derivation of inequalities between max/min expressions  can be redefined in terms of derivations between symbolic weights. for instance 
it can be checkedthat follows from iff holds but does not hold.
　we call s-positive formulas the formulas built from by only using the conjunction and disjunction operator. for instance  is an s-positive formula  while is not an s-positive formula.
1	encoding uncertain information
as suggested in the introduction  the idea is to manipulate symbolic weights as formulas. thus  a possibilistic formula is associated with the classical clause where
means something as  the situation is abnormal . interestingly enough  this view agrees with the qualitative representationof uncertainty in terms of lower bounds of a necessity measure used in possibilistic logic. the following definition gives the propositional logic encoding of possibilistic knowledge base:
definition 1 let be a possibilistic knowledge base. let be a s-positive formula associated with  by replacing in the minimum with the disjunction  and the maximum by the conjunction . then the propositional base associated with   denoted by   is defined by : and is the s-positive formula associated with
1	characterizing plausible inferences
until now  we have shown how to encode in propositional logic uncertain beliefs and the constraints on weights associated with these beliefs. this section defines the notion of plausible conclusions that can be drawn from . the set is used at two stages: first it is used for simplifying the expression of the inconsistency degree  and then it is used to check  in the refutation  if the inconsistency degree of the augmented base increases.
definition 1 an s-prime formula of is an spositive formula  denoted by   such that i    and ii  there is no  not equivalent to
	  such that	and	.
	up to logical equivalence 	is unique.
　this definition allows to have a sound and complete inference relation with respect to the semantics given above. indeed  the following proposition shows that is the logical counterpart of .
proposition 1 let and . let be a propositional formula obtained from by replacing maximum by a conjunction  minimum by a disjunction  and the symbolic weights by their associated literals. then is logically equivalent to given in definition 1.
1	computing plausible inference using dnf formats
we propose a characterisation of plausible inference using the idea of forgetting variables  see for instance  lang et al.  1; darwiche and marquis  1  for more details . forgetting a variable from comes down to remove any reference of in .
definition 1 let	be a propositional symbol of	. then :
　　　　 resp.   is the knowledge base obtained from by replacing by false  resp. true . to forget a set of variables  we forget variable by variable  namely if denotes a set of variables  then:
.
it is also possible to only forget literals  atoms or negated atoms :
definition 1 let	be a literal. then :
　some properties of forgetvariable   darwiche and marquis  1    lang et al.  1    viewing a base as a conjunct of its formulas:
 1 
 1  if does not contain any varaible of a  then
 1  if	is a consistent conjunction of literals 	then
　　　　　　　　　　consists in removing the variables in from .
　forgetliteral satisfies  1  and  1  which is enough for the purpose of the paper. the following shows that getting is equivalent to first forget all formulas of the lan-
guage  and then all negative literals of
proposition 1 let negs be the set of negativeliterals in
	. let	. then	is
equivalent to
　this result is very important since it provides an efficient way to draw plausible conclusion from and . indeed  forgetting a variable  resp. literal  can be achieved in a polynomial time if knowledge bases are in some formats like dnf or d-dnnf  darwiche and marquis  1 . the procedure for checking if a proposition can be derived from and can be described as follows:
step 1: transform	and	into	and
step 1: put	into a dnf  or d-dnnf  form
step 1: forget variables of	from
step 1: forget negated atoms of	from	. this gives	.
step 1: put	into a dnf  or d-dnnf  form
step 1: forget variables of	from
step 1: forgetnegatedatoms of	from	.
	this gives	.
step 1: use proposition 1 and results of section 1 to check if p is a plausible consequence of and or not.
　forgetting a variable in a dnf amounts to forget it in each term  and forgetting it in a term amounts just to suppress the term. this clearly shows that this is polyomialin time. a similar procedure applies as well to d-dnnf format. this format known as deterministic  decomposable negation normal form has been proposed recently  darwiche  1  is a compact format  and has allowed the computation of generally intractable logical queries in time polynomial in the form size. an algorithm has been presented in  darwiche  1  for compiling conjunctive normal forms into d-dnnf directly. our approach can clearly take advantage of this format as well.
　let us illustrate the above procedure with the following example:
example 1 let us consider again example 1  where we have:	  and	let be the propositional symbols associated with symbolic weights
.
	step 1 : encoding	and
	the encoding of	in propositional logic gives :
	the encoding of	gives :
.
　step 1 : putting	into a dnf form we first put	in a dnf form  which gives :
step 1: forgetting variables of v
now we forget the two variables p and r of v. by using properties  1 - 1 ; and after simplification  we get:
note that this is exactly the logical counterpart of given by  1  in example 1  after remplacing  by minimum operation  by maximum operation .
step 1: forgetting negated atoms of
now 	let	us	forget	literals	from
. we get:
.
　again this is exactly the logical counterpart of the expression  1  given in example 1.
we are now interested to check if is a plausible consequence of and .
step 1 : putting in dnf form
the dnf form associated with	is:
step 1. : forgetting variables of v in
　step 1 : forgetting negative atoms forgetting negative literals of gives :
step 1: checking plausible inference
using results of section 1  it can be checked that is a plausible consequence of and   as we have already seen in example 1 that .
　we finish this section by briefly discussing the case where weights associated with constraints are totally ordered. let
                         . we assume without loss of generality that . the knowledge bases
	and	are :
  and
.
　let	be the result of putting	into a dnf form  and	be the result of forgetting variables of
and negativeatoms from . then for totally ordered weights  it is possible to compute a compiled base  as in standard possibilistic logic   denoted by   as follows: if the inconsistency degree of is  namely
	   then	is logically equivalent to
	if	is consistent  then
is logically equivalent to
.
　note that is under dnf form  and we have: is a possibilistic consequence of iff
example 1 let
. let	be propositional symbols associated respectively with the weights of the knowledge base
 namely	 . the two propositional bases are:
  and
the dnf associated with	is:
d =
let us forget variables of   and negative atoms from   we get :
which is equivalent to : now let us add to we get:
d =
now forgetting variables of s gives :
　　  from which it can be checked that is a possibilistic consequence of iff
1	related works
using abnormality predicates in a logical setting is explicitly underlying several non-monotonic formalisms such as circumscription  mccarthy  1 . the idea is then to minimize abnormality and circumscribe it to a minimal number of individuals. the use of abnormality propositional literals is different here. namely  no minimization process takes place  we are not dealing with exception-tolerant reasoning   and the symbolic weight attached to a formula can itself be a compound formula reflecting the complex conditions under which it holds that is true. what is proposed is more in the spirit of multiple source information  where the confidence of the information depends on the source  or on the topic  for instance.
　our representation framework for qualitative uncertainty does not require the knowledge of a complete pre-ordering of the different certainty levels attached to formulas. the uncertainty pervading a proposition may be either viewed as a precise notion  or as imprecisely stated by means of constraints that are opened to revision if new information becomes available. in both kinds of framework  one may only have a partial knowledge of the uncertainty. in the first case  uncertainty is handled under the form of absolute statements such as
　　　　 where is an uncertainty measure and is a proposition   or under the form of relative statements such as  where is a partial ordering encoding a plausibility relation expressingherethat the plausibility of is strictly greaterthan the one of   as discussed in  halpern  1 . then  adding the piece of information that entails leads to inconsistency since if entails classically  it is expected that the plausibility of is at least equal to the one of . however  note that in possibilistic logic and together with the inequality is a weaker statement that .
benferhat et al.  benferhat et al.  1  propose a semantic approach for reasoning with partially ordered information in a possibilistic logic setting. the logical handling of formulas with unknown certainty weights together with the constraints relating these weights presented here turns to be much simpler and computationally more tractable.
1	conclusion
the problem of reasoning with pieces of information having different confidence levels is raised by the handling of multiple source information. in case of partial information on the relative values of these levels  the problem becomes more difficult. an elegant method is proposed here for solving it  by rewriting the uncertain pieces of information in a two-sorted logic  and encoding the available information on the relative values of the certainty levels in a logical way. putting the two bases in dnf format and using forgetting variables techniques enable us to compute the symbolic counterpart of the inconsistency level of a knowledge base in a linear way  and then to draw plausible inferences. moreover  the representation technique that is used also provides a way for compiling a standard possibilistic knowledge base  a result analogous to the one obtained by darwiche and marquis  darwiche and marquis  1  for another type of weighted logic  the penalty logic  using d-dnnf format. this paper also briefly discusses the case of totally ordered weights  from which the number of extra variables  used to encode weights  and the number of extra binary clauses  used to encode the total ordering  necessary for the inference process is equal to the number of different weights used in base. the full development of a compilation of standard possibilistic knowledge bases in propositional logic is left for further research. besides  another potential expected benefit of the approach  is a contribution to the solution of the drowning problem in possibilistic logic. indeed  it can be checked that the symbolic inconsistency level of
　　　　　　　　　　　　  is	  where c does not appear  which should provide a way for finding out the  free  formulas in k that are not involved in any inconsistency conflict.
	acknowledgments:	the authors would like to thank
pierre marquis for his useful discussions.
