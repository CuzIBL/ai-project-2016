 
     a procedure is described for obtaining the description of solid bodies from a set of pictures taken from different vantage points. the bodies 
are assumed to be bounded by faces which are planar or quadric  and to have vertices formed by 
exactly three faces. the line and junction information provided to the program by the prepro-
cessor is assumed to contain defects such as missing lines or wrongly classified junction types. the procedure is able to build a description of the bodies in spite of a moderate number of such imperfections. use is made of a set o.f new grammar rules for line-drawing projections of curved and planar bodies. 
	1. 	introduction 
     in computer scene analysis a picture of a three-dimensional scene is converted into an array of pixels  with each assigned a number corresponding to the average grey value in that local area of the picture. a common scheme for preprocessing the array for scene interpretation is to extract lines that are believed to correspond to the bodies' edges. to interpret a perfect line description of a scene  a picture grammar must be supplied that is based on the common general properties of the scene's bodies. when the line description contains errors  as a result of preprocessor limitations   its parsing and interpretation becomes difficult if not impossible. in such a case  understanding of the scene can be gained by using a set of line structures  each possibly defective   extracted from pictures describing the scene from different vantage points  a scheme which is also useful for obtaining three-dimensional information about the bodies. 
     the scene'interpretation given in terms of edges  grouped first according to faces and then according to bodies   is most suitable for polyhedra  but can also be applied to curved bodies. this paper is restricted to the analysis of bodies with planar or quadric faces. the technique  however  could easily be modified to handle also bodies whose curved faces are close to quadric surfaces  and this includes a large subset of man-made bodies. 
     many papers were published in recent years dealing with polyhedral scene analysis  of which 
* this work was supported by the directorate of 
mathematical and information sciences  air force office of scientific research  under grant afosr 1. 
the papers by roberts   guzman   falk   
huffman   clowes   waltz  and ganapathy  are representative of the line of research that has been pursued. some researchers 
 contributed to the understanding of the process of perception by analyzing perfect  but unfeasible  line drawings. others used real data  slightly edited  with its imperfections  but restricted themselves to a set of known bodies. nearly all limited themselves to a single picture of the scene.  a restriction that led to many unnecessary difficulties . the work by underwood and coates  1  does utilize multiple pictures in the analysis of scenes of a single convex polyhedron - not to overcome data and analysis problems but merely to  have a look  at all sides of the body. 
     attempting to extend the work from polyhedra to even a restricted family of curved bodies increases the difficulties to an extent which may not be apparent at first glance. such an effort has been described by chien and chang . they analyzed perfect line drawings representing bodies with planar  conic  or cylindric faces  where no intersection of two curved faces was allowed. 
     in this paper we shall show how a program can be made to  understand  a set of bodies with planar or quadric faces  utilizing defective data extracted from a set of multiple photographs. no pre-knowledge of the bodies is assumed  but certain general properties of the scene - such as the existence of precisely three faces in every vertex - are stipulated. 
	1. 	basic assumptions 
     the terminology used has been adapted from that employed by woon and freeman  and clowes . 
     we impose the following restrictions: 1  every vertex in the scene is formed by exactly three surfaces and belongs to exactly three edges; 1  smooth transition between two different faces is not allowed  i.e.  the derivative must be discontinuous across the edge ; 1  the camera position is assumed to be  general .  for example  the projections of different vertices may not coincide in any picture ; 1  no limb passes through a vertex. 
     in accordance with the foregoing  junctions can have no more than three lines. they can be classified into the types w  y  v  t  a  and s. 
an example of each type is given in fig. 1 a . 
types y and w must be the projections of vertices. 

vision-1: 	shapira 1 

type t results from the covering of part of an edge or a limb by a face. types s and a are the projections of virtual vertices  intersections of edges and limbs . in a perfect line description v is also a projection of a vertex. 
       the scene data is assumed to be extracted visually from a set of real photographs. the data includes line information  as a set of points  and junction information consisting of coordinates and types. the data is expected to be  in addition to the geometric inaccuracies  defective in the sense that  1  visible lines or parts of visible lines may be missing   1  visible junctions may be missing   1  junctions may be reported incorrectly  v instead of y  w  t or s junctions . 
       we call a junction valid when it is a projection of a vertex. thus all y and w junctions are valid  all a  s  and t junctions are not valid  and the nature of the v junctions cannot be decided until more evidence is collected  as will be explained later . in those cases in which a preprocessor has d i f f i c u l t y in distinguishing between a t junction and a f l a t y or w junction  they can be included in the group of the undecided junctions. 
	1. 	cyclic order property 
       as already stated  every vertex belongs to exactly three edges. we define for these edges a cyclic order in the vertex   1   1     as the order induced by  walking around  the vertex in a clockwise manner  and numbering the edges in the order 1 1. if we trace out the edges of a boundary  we consistently change edges at the vertices  either always in a decreasing cyclic order or always in an increasing cyclic order. let us always choose to trace edges in an increasing order. then we shall traverse every edge in two different directions as we walk around the two faces that share i t   as illustrated in fig. 1 b . when a vertex's projection has three lines  their cyclic order is determined by the arrangement of the lines in the picture.  the clockwise sense of the cyclic order is preserved in a projection when the three edges are visible . however  when one line is invisible or missing  the cyclic order is not known. let us define the notation ab ac to mean that in junction a the line ac follows the line ab immediately in the cyclic order. then if a is a two-line valid junction  we have either the relation ab ac or the relation ac ab. 
       knowledge of the cyclic order at a junction is crucial to the assembly of the lines belonging to a single region. 	therefore it is important to have means for determining the cyclic order in a junction when the order is not given naturally. 
       we define a line assembly  la  as the directed path followed in tracing out the lines corresponding to a single boundary - or any continuous part of it - in increasing cyclic order. we denote an la in picture i by the ordered set of junctions a.i 1   aj.n visited in the course of 

for example in fig. 1 a  we have the la b c d a  b.  the la is shown as an arrowed line . the lines in b are thus forced to have the relation 
ba bc 

for example in fig. 1 b  we have the two distinct la's: e f c b and b a g e. they are distinct because of the cyclic order already established in junction b by rule 1. now by rule 1 the relation ef eg must hold in e.  this in turn establishes the la m f e g n 1 . 
¡¡¡¡¡¡a more complicated strategy may be adopted to force the correct order at a junction when these two rules cannot be applied directly. one assumes a cyclic order in the junction and tries to reach a contradiction by a sequence of inductive steps. if a contradiction is reached  the cyclic order opposite to the one selected is forced on the junction. for example  in fig. 1 c  we assume an order in junction r such that rq rn. then we can establish the la's p q r n g a d and d c f m p. they are distinct because of the existing natural order in d  and hence by rule 1 force in p the relation pq pm. at the same time we have the two la's r q 1 and 1 n r which are distinct due to the assumed order in r. by rule 1 the relation 1n 1q is forced in 1. this in turn establishes the la m f e g n 1  
q p m. 	now by rule 1 we must have in m the 

v i s i o n - 1 : 	shaplra 
1 

relation mp mf  which contradicts the natural order in m. this sequence of deductions was based on the assumption that the relation rq rn exists in r. the contradiction reached lets us conclude that the opposite relation  namely rn rq  must exist in r. this establishes the la 1 n r q 1 and  by rule 1  the relation 1q 1n in 1. we have thus been able to find the cyclic order in 1 of the original 1 unordered junctions. junction p remains unordered. the final ordering of the junctions is given in fig. 1 d . 
       a by-product of the foregoing is a new class of impossible objects  in addition to those described by huffman   1   . the objects can be identified as being impossible if their structure is such as to lead to contradictory cyclic order at their junctions  1 . 
	1. 	junction matching 
       to u t i l i z e the data from all pictures  we must know the parameters that relate each picture's coordinates to those of the other pictures and also to the universal coordinate system in which the final description should be given. these parameters are d i f f i c u l t to measure. some of them are measured indirectly and some are calculated by minimizing the sum-of-squares differences between the measured and calculated projections of a set of predetermined points. a detailed description of the parameter determination is given in   1   . 
       in order to arrive at a true description of the 1d scene in spite of the data imperfections  we compare the line structures from the given pictures  three in our case  against each other and use the information found in one picture to verify the information found in another. 
       let us start with junctions. we have two goals. one is to determine those v junctions for which there is enough evidence to assume that they are valid junctions. the second is to group  from the different pictures  junctions that are the projections of the same vertex. from here on in this section  whenever we use the term  junction   we shall mean a v  y  or w junction. 
       if two junctions in two different pictures are projections of the same vertex  they must obey certain geometric rules. let p.  cj  and a.   be 
the picture plane  the center of projection  and the projection of vertex j  respectively  for picture i. then for two pictures  i and j  c j   
	c	a	 	a n d 	a
 j' j   i   j ' j j are coptanar  and the lines c c j   c a j  and c.a. j intersect any plane p in three colinear points: c.   j. and j.   
	i 	jq 	lq 	j q ' 
respectively  fig. 1 . we shall call the line formed by these points a match line. thus if we re-project into the plane pq junvyion a. j from c  
junction a   j from c.  and c1 from c  we can check whether this condition is satisfied. two junctions from different pictures that satisfy this condition are said to be matchable. 
obviously  if a vertex i is in the plane of 
c .   c   and j  then a. t and a.   are matchable  i j i  * j  w 
and so are a.   and a. t. to resolve such ambiguities  we refer to the third picture  picture k. we require that ci  cj  ck be not colinear. then if ai.j  a.    and a    are the 
three projections of vertex j  the three different match lines on plane pq form a triangle whose vertices are j.   j     and j.  fig. 1 . we call the set of three junctions  from different pictures  that are matchable in pairs  a t r i p l e . by forming triples we can eliminate many pairs that are matchable but are not projections of the same vertex. however  even in the pure geometric case we may have three projections of three different vertices that form a t r i p l e   1   . 
       we are dealing here with data extracted from actual photographs; thus we must accept a.   and a.   as matchable even if j. 	is distant from the match line cijq jjq. by an amount less than some threshold. 	relaxing the colinearity require-
ment on the match lines increases the ambiguity of matching. 	the larger the threshold distance  the greater the number of ambiguous cases. 
       two matchable junctions that are the projections of the same vertex are said to match each other. a t r i p l e in which the junctions match each other is called a match t r i p l e . to establish matches  we find for every junction all matchable junctions in the two other pictures. then we form all the triples. to find the match triples in the set of all t r i p l e s   we must use some picture context. the kind of context we shall use is line connections between junctions. if we have three lines - each in a different picture whose ends form two t r i p l e s   the two triples are each considered to be a match t r i p l e .  the chance of naming a wrong triple as a match t r i p l e s t i l l exists but is now greatly reduced . 
       since it is possible that a vertex's projection will be missing in one or more pictures  it is desirable to establish matches between 
matchable pairs. naturally  more context must be used to establish a match on the basis of only a two-picture comparison. the pair match is done in two passes and only after the t r i p l e match phase is completed.  it reduces the number of free candidates and  therefore  the chance of error . we select a set of three junctions for which one of them - call it the middle - is connected by lines to the other two that are matchable to a set of three junctions connected  in the same way  in another picture. in the f i r s t pass we require that the middle junction be of type y or w and that the two lines have the same cyclic precedence in the two junctions. the three junctions are then assumed to match the three junctions in the other picture. in the second pass 

v i s i o n - 1 : 	shapira 
1 

we allow one or both of the middle junctions to be of type v and do not check the cyclic precedence   i t may be unknown for the v junction . the second pass is a l i t t l e more hazardous since we are unable to use cyclic precedence  but since it is carried out after most junctions are already matched  there is only a small chance of making an error. if one junction in a t r i p l e is matched to the other two by two applications of a pairwise match  we consider the t r i p l e to be a match t r i p l e ; that i s   we consider the remaining two as matching also. 
       every v junction that is matched to a junction in another picture is marked as valid. the 
match supplies additional evidence that the junction is a projection of a vertex. the validated v junctions are assigned a cyclic order  when possible  by applying the cyclic order rules. 
1 . l i n e matching 
       the matching of lines in different pictures poses d i f f i c u l t i e s because of data imperfections and because the number of lines between two junctions can vary from zero to three. matching is done for two pictures at a time for the lines terminating at matched junctions. there are three cases to be considered:  1  the two matched junctions are both 1-line junctions   1  one is a 
1-line and the other a 1-line junction  and  1  both junctions are 1-line junctions. for a 
detailed discussion of this the reader is referred to reference   1   . 
       when two junctions around which a match of lines is attempted are both cyclically ordered  a match of one pair of lines yields in turn the corresponding match of the successors in the cyclic order. also two lines in two pictures found to match to the same line in a third picture are declared to match each other. 
       when two lines of a cyclically ordered junction are matched to two lines of an unordered junction  the second junction can be ordered because its cyclic order must agree with that of the junction to which it is matched. 
       the line matching procedure makes it possible to detect missing connections between junctions. 	the lines around the junctions are assigned indices that agree with the cyclic order in ordered junctions  or re-assigned to agree if the cyclic order is determined at a later stage. 
	1. 	object formation 
       the collection of lines from all pictures that correspond to the boundaries of a single face will be referred to as a face group. clearly  every line that is not a limb belongs to two face groups. we build a face group by selecting a line  in any picture  that does not yet belong to two face groups. we then follow the la in a direction not previously followed  adding to the group every line traced and its matches in the other pictures. if the trace returns us back to the line from which we started  the trace is terminated - and this face-group generation is complete  assuming that the face has only one boundary. otherwise when we reach a line for which no next line in the la is available  we check whether an la trace can be continued from the line's match in another picture. the facegroup generation may thus proceed by  jumping  from one picture to another. if the process is blocked in all pictures  we return to the starting point and try to follow the la in the opposite direction  again  jumping  from one picture to another  if necessary  until the process is blocked again in all pictures. all s and a junctions encountered in the trace are remembered. when the process terminates  the limbs at these junctions are checked and if a limb's other end junction belongs to a line not yet in the facegroup  implying that another boundary of the same face has been detected   the trace resumes there. the limb lines are also added to the face group. 
       when all lines have been traced twice  further data recovery action is called for. this second-level data recovery can be carried out for the following three configurations  illustrated in fig. 1. 
1. two lines i and k in the same picture  with a valid junction in only one end of each  have been assembled into two face-groups m and n  k  i e m and k  i z n 
	action: 	combine i and k into one line. 
1. a line i with one valid end junction has been assembled into two face-groups m and n  and there is in the same picture a 1-line valid junction j with lines m and n  m e m and n e n. 
	action: 	extend the line l to junction 
j. 
1. there are two 1-line valid junctions i and j in the same picture with lines k  i and h  g  respectively  where k and h have been assembled into facegroup m  and i and g have been assembled into face-group n. 
action: create an  empty  line between the two junctions i and j.  an  empty  line is a line whose only known points are its end junctions and whose form has not yet been determined.  
       the data recovery actions utilize the property that two components assembled simultaneously into two face-groups must correspond to the intersection of the associated faces. there i s   of course  the possibility that the intersection is sectioned into several separate edges and that the two lines correspond to two different sections; but at this stage of the recognition phase  with no evidence to the contrary  we assume that they belong to the same section. 

v   s f o n - 1 : 	shapira 1 

¡¡¡¡¡¡each face group corresponds to a face of one of the bodies in the scene. after the facegroup assembly and second-level data recovery is completed  we are ready for the description of the objects. each object is a set of face-groups  with no common elements between two sets. eyery face group must belong to some set. a new object is formed by taking a face group that is as yet unassigned and recursively adding to it eyery unassigned face group that has a line in common with any of the face groups already in the set. 
¡¡¡¡¡¡we also wish to determine those face groups that correspond to curved faces. clearly  every curved face must manifest itself somehow  or we have no way for recogniziing it as curved. we know that whenever two face groups share  in at least one picture  a curved line  at least one of them must correspond to a curved face. it is also obvious that eyery face group that contains a limb must correspond to a curved face. thus to determine the curved face  we build  by means of a tree search  a minimal set of faces containing initially all those faces whose face groups have a limb  such that at least one partner  actually its corresponding face   from each pair sharing a curved line  is present in it. a procedure for extracting information about the nature of the faces and for getting the faces' equations is described in . 
	1. 	experimental results 
¡¡¡¡¡¡a scene that is typical of the kind considered for analysis is shown in fig. 1. three views are shown  each from a different vantage point. schematic descriptions of the three pictures are given in fig. 1. in the input data  the two non-limb lines of an s junction  which are actually parts of the same line  have distinct labels; however  later on one of these can be deleted. 
¡¡¡¡¡¡the procedure was able to validate 1 of the 1 v junctions in the junction-matching phase. after the line-matching process  all the junctions shown circled in fig. 1 had been cyclically ordered. data recovery action caused the  empty  lines  shown dashed in fig. 1  to be generated  as well as the line extensions marked by arrows. 
¡¡¡¡¡¡the final scene description reported by the program was given in the form of face groups  consisting of sets of triples of matched lines  for each of the 1 bodies in the scene. detailed results  as well as other scenes processed  are described in . 
	1. 	conclusion 
¡¡¡¡¡¡the objective of the research described here was to investigate techniques for the computer understanding of pictures of scenes. three principles guided the research:  a  no complete preknowledge of the scene's bodies should be assumed since that would limit the repertoire of bodies   b  the number of bodies should be unrestricted and merely some properties of the 
vls!on-1: 
1 
bodies should be prespecified which are sufficiently general to permit inclusion of all bodies likely to be encountered   c  since the input is to be gotten from photographs  the presence of a limited amount of data imperfections such as 
missing lines  wrong junctions  and geometric 
inaccuracies should be permitted. 
¡¡¡¡¡¡to achieve the objective  a set of multiple pictures of the scene was assumed to serve as the input data. new grammar rules needed for the analysis of these pictures were formalized. a procedure for establishing matches between features in the different pictures and for verifying doubtful features were devised  as well as procedures for eliminating wrong data and for recovering missing data. finally a procedure for assembling the analyzed data into sets  each describing a single body of the scene  was constructed  including the determination of the bodies' faces and their nature. a computer program based on this approach was written. the program was able  given real input data  to  understand  the photographed scene  and to yield a plausible description. 
