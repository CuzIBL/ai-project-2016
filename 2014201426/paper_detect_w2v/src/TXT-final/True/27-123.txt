 	represented as follows:1 

this paper considers the problem of specifying the effects of actions in the situation calculus using domain constraints. we argue that normal state constraints that refer to only the truth values of fluents are not strong enough for this purpose  and that a notion of causation needs to be employed explicitly. technically  we introduce a new ternary predicate caused into the situation calculus: caused p v s  if the proposition p is caused  by something unspecified  to have the truth value v in the state s. using this predicate  we can represent not only action-triggered causal statements such as that the action load causes the gun to be loaded  but also fluent-triggered ones such as that the fact that the switch is in the up position causes the lamp to be on. the former is convenient for representing the direct effects of actions  and the latter the indirect effects. 
1 	i n t r o d u c t i o n 
we consider the problem of formalizing the effects of actions in the situation calculus  mccarthy and hayes  1 . to motivate the needs for a notion of causality in this endeavor  let us consider the following problem. 
　imagine a suitcase with two locks and a spring loaded mechanism which will open the suitcase when both of the locks are in the up position. apparently  because of the spring loaded mechanism  if an action changes the statuses of the locks  then this action may also cause  as an indirect effect  the suitcase to open. 
　the problem of how to describe the spring loaded mechanism by a constraint and use it to derive the indirect effects of actions is an instance of the ramification problem  finger  1   which has been recognized as one of the central problems in reasoning about the effects of actions. in the situation calculus  the constraint that this spring loaded mechanism gives rise to can be 
    this research was supported by grants from the government of canada institute for robotics and intelligent systems  and from the national science and engineering research council of canada. 
		 1  
although summarizing concisely the relationship among the truth values of the three relevant propositions at any particular instance of time  this constraint is too weak to describe the indirect effects of actions. for instance  suppose that initially the suitcase is closed  the first lock in the down position  and the second lock in the up position. suppose an action is then performed to turn up the first  lock. then this constraint is ambiguous about what will happen next. according to it  either the suitcase may spring open or the second lock may get turned down. although we have the intuition that the former is what will happen  this constraint is not strong enough to enforce that because there is a different mechanism that will yield a logically equivalent constraint. for instance  a mechanism that will turn down the second lock when the suitcase is closed and the first lock is up will yield the following logically equivalent one: 

　so to faithfully represent the ramification of the spring loaded mechanism on the effects of actions  something stronger than the constraint  1  is needed. the proposal of this paper is to appeal to causality:  through the spring loaded mechanism  the fact that both of the locks are in the up position causes the suitcase to open. the goal of this paper is then to make precise causal statements like this  and show how they can be used effectively to describe the effects of actions. 
　this paper is organized as follows. section 1 briefly describes the version of the situation calculus used in this paper. section 1 shows in detail how the suitcase example is solved using causality. section 1 generalizes the method used in section 1 to a general class of theories. section 1 applies the method of section 1 to an example to further illustrate some of the fine points of our approach. to simplify our presentation  we shall defer discussions of related work  in particular that of  lifschitz  1  and that of  haugh  1   to section 1. finally section 1 concludes this paper. 
1
　　'we use the convention that in displayed formulas  free variables are implicitly universally quantified. see the next section for a precise description of the version of the situation calculus used in this paper. 
lin 
1 	the situation calculus 
we have already seen the situation calculus in action in the introduction section. we hope the notations used there are familiar and/or intuitive enough for everyone to follow. in any event  they are defined in this section. 
　the language of the situation calculus is a many sorted first order one. we assume the following sorts: situation for situations  action for actions  fluent for propositions! fluents  truth-value for truth values true and false  and object for everything else. 
　we use the following domain independent predicates and functions: 
  the binary function do - for any action a and any situation s  do a s  is the situation resulting from performing a in s. 
  the binary predicate holds - for any propositional fluent p and any situation s  holds p  s  is true if p holds in s. 
  the binary predicate poss - for any action a and any situation s  poss a s  is true if a is possible  executable  in s. 
  the ternary predicate caused - for any fluent p  any truth value v  and any situation s  caused p  v  s  is true if the fluent p is caused  by something unspecified  to have the truth value v in the situation 
s. 

for the purpose of this paper  it is enough to mention that they include the following unique names axioms for situations: 

1 	a n e x a m p l e 
consider again the suitcase example described in the introduction section. suppose that flip x  is an action that flips the status of the lock x. its direct effect can 
be described by the following axioms:1 
 1  
 1  
to perform flip x   the object x must be a lock: 
		 1  
where lock is a unary predicate symbol. we assume that li and l1 are two distinct locks: 
		 1  
the spring loaded mechanism is now represented by the following causal rule: 
		 1  
notice that this causal rule  together with the basic axiom  1  about causality  entail the state constraint  1 . notice also that the physical  spring loaded mechanism behind the causal rule has been abstracted away. for all we care  it may just as well be that the device is not made of spring  but of bombs that will blow open the suitcase each time the two locks are in the up position. it then seems natural to say that the fluent open is caused to be true by the fact that the two locks are both in the up position. this is an instance of what we have called fluent-triggered causal statements in the abstract. in comparison  causal statements like the effect axioms  1  and  1  are action-triggered. 
　this finishes describing our starting theory for the domain. to describe fully the effects of the actions  we need to add suitable frame axioms. our version of the frame axioms is: unless caused otherwise  a fluent's truth value will persist: 
  1  
for this frame axiom to make sense  obviously  we need to minimize the predicate caused. we shall circumscribe the predicate caused in the set of axioms introduced so far. we shall do so with all the other predicates  poss and holds  fixed  because we want to condition 
　　1 recall that  for instance  up x  s  is defined to be a shorthand for holds up{x   s . 
caused on them. it is easy to see that the circumscription  mccarthy  1  yields the following causation axioms: 
 1  
 1  
notice that these axioms entail the two direct effect axioms  1  1  and the causal rule  1 . in fact  they are obtained by applying the clark completion  to the predicate caused in these clauses. as we shall sec in the next section  this will be true for a general class of theories. 
   having computed the causal relation  we now use the frame axiom  1  to compute the effects of actions. it is easy to see that from the frame axiom  1  and the two basic axioms  1  1  about causality  we can infer the following pseudo successor state axiom  reiter  1 : 
 1  
from this axiom and the causation axiom  1  for the fluent up  we then obtain the following real successor state axiom for the fluent up: 

similarly for the fluent open  we have 
	poss a s  	  	{open do a  s   = 
	 up l1 do a s   	a up l1  do{a  s    v open s }. 
now from this axiom  first eliminating up ll do a s   and up l1 do a s   using the successor state axiom for up  then using the unique names axioms for actions  and the constraint  1  which  as we pointed out earlier  is a consequence of our axioms  we can deduce the following successor state axiom for the fluent open: 

obtaining these successor state axioms solves the frame and the ramification problems for the suitcase example. finally it remains to be shown how poss is computed. 
this is an instance of the qualification problem  mccarthy  1   and the standard default assumption one uses is that an action is always executable unless explicitly ruled out by the theory. in other words  we want to maximize the predicate poss in the theory we have so far  including the frame axiom and the causality axioms. 
to determine what policy we shall use in maximizing 
poss  we first have to be clear what we expect from the maximization. for us  after the maximization  we want  for each action a x   an action precondition axiom  reiter  1  of the following form: 

where Φ x  s  is a formula which refers to only the truth values of the fluents in s. in other words  the preconditions of an action should be expressed in terms of the truth values of the fluents in the current state. this means that we should maximize poss a  s  with holds p  s  fixed while allowing caused and holds p s'    s' to vary. model-theoretically  this means that an intended model is one in which the extension of poss a  s  cannot be made larger by changing the interpretation of the predicate caused and the truth values of the fluents at states other than s. 
　it turns out there is a procedure based on the clark completion for computing the maximization. the procedure is outlined in the next section. for this example  it yields the dark completion of  1 : 

having this action precondition axiom solves the qualification problem for the suitcase example. 
　this concludes our solution to the suitcase problem. the method used in this example can be generalized to a general class of theories  as we shall see in the next section. 
1 	the method 
the procedure we followed in solving the suitcase problem can be summarized as follows: 
1. start with a theory t that includes all the effect axioms and state constraints. 
1. minimize caused in t. let t  be the resulting theory. 
1. add to v the frame axiom  1 . 	let t  be the 
resulting theory.1 
1. maximize poss in t  to obtain the final action theory. 
clearly  the tractability of this approach depends crucially on the form of the initial theory t. in the following we consider a special class of theories for which the clark completion is enough to compute the result of minimizing caused and that of maximizing poss. 
　before we describe this special class of theories  we first define a terminology that will be used throughout this section. let s be a situation variable. we call a formula Φ $  a simple state formula about s if Φ does not mention poss  caused  or any situation term other than possibly the variable s. for example  
 mentions no situation term  and up x  s  a a = flip x  
     1  alternatively  instead of simply adding  1   one can minimize the formula: 
　　　　　　-  holds p s  	= 	holds p do a s    in the theory t'. see  lin and reiter  1 . 
lin 


where f is a fluent  and Φ s  a simple state formula about s. the causal rule  1  in the suitcase example can be rewritten straightforwardly as axioms of this form. for an example of a causal rule in which the predicate caused also appears in the left hand side of the implication  suppose that we add a new fluent called down to our suitcase example so that down x  s  is true if the lock x is in the down position. clearly this new fluent is an antonym of up  so one of them is caused to be true iff the other is caused to be false: 
c aused up x   true  s  = caused down x   false  s   caused up x   false  s  = caused down x   true  s . 
notice that adding the fluent down and the above causal rules to the suitcase example will not affect the causation axiom for the fluent up  although the minimization will no longer be computable by the clark completion  see step 1 . 
step 1. formalize all other domain knowledge by axioms of the form: 
		 1  
where c s  is a simple state formula about s. in the suitcase example  the axiom  1  will be included in this step. state constraints that are used to derive implicit action qualifications will also be included here. for instance  in the blocks world  the state constraint which says that a block cannot be on top of itself  will be included in this step. this constraint implies that the action stack x  y   which puts x on y  will not be executable when x = y. for more examples of such qualification state constraints  see  ginsberg and smith  1; lin and reiter  1 . 
　the above four steps yield a starting theory t about the dynamic domain of interest. of course  in addition to the axioms given in steps 1 to 1  t also contains the axioms given in section 1. the remaining steps apply nonmonotonic logic to t to solve the frame  the ramification  and the qualification problems. 
step 1. the goal of this step is to compute for each fluent f a causation axiom of the following form: 
		 1  
where is a formula which does not mention the predicate caused. 
　this is achieved by circumscribing the predicate caused in t with all the other predicates fixed. however  since all the axioms in t other than those given in step 1 and step 1 either do not mention caused or mention it negatively  by a standard result in circumscription  the circumscription of caused in t is equivalent to the union of t and the circumscription of caused in the set of axioms given in step 1 and step 1. but these axioms are definite clauses about caused. so the circumscription always has a unique minimal model. furthermore  if the theory t is stratified  then the circumscription can be computed using the clark completion. formally  we say that t is stratified if there are no fluents f1  f1 ...  fn such that f1 -  f1 -  ＊--  fn -  f1  where for any fluents f and f'  f' -   f  f depends on f'  if there is a causal rule in t such that f appears in the right hand side  and f' appears in the left hand side of the causal rule. for instance  the theory in the suitcase example is stratified because up -  open is the only dependency relation that holds for this theory. however  if we add the fluent down  and the above causal rules relating up and down  then the resulting theory will no longer be stratified because we'll have up -  down -  up. 
proposition 1 let t' be the union of the axioms in section 1  the axioms given in step 1 and step 1  and the clark completion of the predicate caused in the clauses given in step 1 and step 1. if the theory t is stratified  then t' is the result of circumscribing caused in t with the other predicates fixed  i.e. for any structure m  m is a minimal model of t iff m is a model of t'. 
　however  as it is well known in logic programming community  the clark completion may be too weak if there are cycles or recursion in the causal rule  1 . the following is an example of cycles: 

and the following an example of recursion: caused heap x   true  s   caused heap f x   true  s . 
this is only natural because the clark completion is first-order  but to capture cycles and recursion we need second-order logic. 

step 1. assume that for each fluent f we have computed a causation axiom of the form  1   the goal of this step is to compute for each fluent f a successor state axiom  reiter  1  of the form: 
		 1  
where Φ and Φ are simple state formulas about s. 
　this is achieved by replacing the occurrences of caused in the pseudo successor state axiom  1  according to  1   as we have done in the suitcase example. generally  we can obtain a successor state axiom for each fluent this way if the theory t is stratified: 
proposition 1 if t is stratified  then there is a simple rewriting procedure by which we can obtain a successor state axiom for each fluent using the causation axioms and the pseudo-successor state axiom. 
   having computed for each fluent a successor state axiom solves the frame and the ramification problems. successor state axioms are desirable because they have many appealing computational properties  see  reiter  
1    and are the foundations underlying much of the cognitive robotics research project at the university of 
toronto.1 
   we want to point out that even if we have computed for each fluent f a causation axiom of the form  1   it is not guaranteed that we'll have for each fluent a successor state axiom of the form  1 . this is due to cycles such as 
		 1  
and recursion such as the following transitive closure axiom: 

to handle recursion  we'll have to use second-order successor state axioms which are ones still of the form  1  but with the formulas Φ and Φ' allowed to be secondorder. however  cycles cause problems in this case. for instance  given  1   we'll have a causation axiom for open of the form: 

so the pseudo successor state axiom will yield something 
like 

which is not very useful. fortunately  there seems to be a sense that these cycles should never arise. some authors  for example shoham   have insisted that causation be anti-reflexive. in other words  the causes of a fact should never include the fact itself. so it is wrong to write causal rules like  1 . in any event  we have yet to see an example where this kind of cycle arises naturally. 
step 1. assume that for each fluent f we have computed a successor state axiom of the form  1   the goal 
1
　　see ftp://ftp.ca.toronto.edu/pub/cogrob/readme.html of this final step is to compute for each action a an action precondition axiom  reiter  1  of the form: 
		 1  
where Φ is a simple state formula. 
　for each action a  this is achieved by maximizing the relation poss a x*  s  with holds p s  fixed but caused and holds p s'  a s ' s allowed to vary. the precise definition of this maximization policy will be given in the full version of this paper.1 it turns out that there is a procedure to compute the result of the maximization using regression and the clark completion. the procedure is a generalization of that in  lin and reiter  1   and can only be outlined here due to the space limitation. but we'll see an example in the next section. 
　from each causation axiom of the form  1   deduce first the following two axioms by eliminating the predicate caused: 

where  v/true  is the result of replacing the free variable v in by true  and similarly for  v/false . now for each action a  apply regression to these axioms and the constraints  1  given in step 1 to generate all  nonvacuous  qualification axioms of the following form: 

where Φ is a simple state formula about s  and is not a consequence of the axioms we have so far. finally apply the clark completion to these axioms to obtain an action precondition axiom of the form  1 . 
so to summarize  we have: 
theorem 1 // the theory t given by steps 1 to 1 is stratified  then there is a procedure by which we can obtain a successor state axiom for each fluent  and an action precondition axiom for each action. the procedure is based on simple syntactic manipulations  and is provably correct with respect to our nonmonotonic semantics. 
1 	a n o t h e r e x a m p l e 
having described the general procedure in last section  we now apply it to an example involving walking and shooting. this example is of interest because it has a constraint which yields an indirect effect for one action  but an implicit qualification on another. 
　imagine an agent who can perform the following three actions: start-walk  end-walk  and shoot. we follow the seven-step procedure given in the last section. 
step 1. 	direct effect axioms: 
	poss start-walk  	s  
	c aused walking  	true  	do start-walk  	s  y 
	p oss  end-walk  	s  
	caused walking  	false  	do end-walk  	s    
	poss shoot  	s  caused dead  true  	do shoot  	s  . 
1
　　but see  lin and shoham  1  or  lin and reiter  1  for the definition of a similar policy. 
lin 



predicate in  elkan  1  continues to have an action argument  and the state argument is introduced only to help expressing complex preconditions. 
　whereas we treat causality as a predicate  geffner  and mccain and turner  treat it as modal operators. nonetheless  it seems that this work and that of  mccain and turner  1  have much in common. the causal theories of  geffner  1   however  are aimed at  general default reasoning. although  geffner  1  includes an example of how the general framework can be applied to reasoning about action  it is not clear if this can be done in general. in particular  it is not clear if a distinction can be made between ramification and qualification constraints in this framework. 
whereas we use causality as a primitive notion  
shoham   and iwasaki and simon  attempt to derive it from an acausal theory. in particular  iwasaki and simon consider deriving the causal relations from a set of acausal equations. it is not clear if this approach can be ported into the situation calculus. 
　pearl  argues about the need for a primitive notion of causality in general default reasoning. this paper obviously echoes the same theme. in fact  the title of this paper follows that of  pearl  1 . 
1 	c o n c l u s i o n s 
we have argued that acausal state constraints like  1  are not adequate for representing the indirect effects of actions  and proposed a solution using causal rules like  1 . by embracing causality  we are able to use only simple nonmonotonic formalisms for solving the frame  the ramification  and the qualification problems. this enables us to describe a general class of theories for which our approach is computationally tractable. in fact  we are currently working on a planner that can take as input causal theories of the form specified by steps 1 to 1 in section 1. 
a c k n o w l e d g e m e n t s 
my thanks to alvaro del val  norman foo  and yan 
zhang for stimulating discussions related to the subject of this work. this work owes much to ray reiter. in fact  it is an outgrowth of our ongoing discussions on the ramification problem and the situation calculus. i also thank g. neelakantan kartha  yves lesperance  vladimir lifschitz  norman mccain  and ray reiter for very helpful comments on earlier versions of this paper. 
