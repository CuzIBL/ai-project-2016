 
real-time situation understanding is a difficult problem  in that decisions must be made on a continuous basis with continuously changing data. an attractive approach to the problem is to match the current data set to a memory of script-like structures. partial matching to scripts enables powerful understanding and prediction  but requires robust uncertainty 
mechanisms to overcome 	inherent ambiguity 	and error. 
although powerful uncertainty techniques for dealing with time-relevant data have been developed  little with regard to the implications of the real-time problem has been presented. 
this paper discusses some of the special requirements for a real-time script belief function  and presents a derivation of such a function. finally  examples demonstrating the characteristics of the script belief function are provided. 
introduction 
     real-time situation understanding poses some unique problems for artificial intelligence systems. when presented with a continuous stream of input data  there is never a  complete data set  which can be exhaustively examined. rather  the best decisions which can be made at each point in time must be determined  making the best use of the data at hand. an example of this type of system might be a weather forecasting expert system  if it were required to continuously provide meteorological forecasts. another example could be a process-monitoring system  called upon to continuously provide information on what was happening within the process and what predictions could be made. 
     one useful framework for understanding such a stream of observations is a script-like  schank 1  paradigm. for lack of a better term  rather than the fairly specific definitions of scripts put forth by  schank 1   in this discussion  a script will be considered as any tirae-sequenced memory structure which describes a common sequence of events. for example  the script shown in figure 
1 describes the scenario of a person going to work  
1 	knowledge representation 

in terms of a sequence of simple observations  referred to as  script elements.  the script paradigm is attractive for the real-time situation understanding application because sequences of events  which alone provide l i t t l e useful information  can be matched to scripts in memory  to provide a synopsis of what seems to be taking place  and to provide predictive capability. because the matches are likely to be partial  and because error and ambiguity are ever present  it is important to utilize a robust uncertainty management scheme  to ensure that the best among viable matches is believed. 
     a number of interesting issues are apparent when dealing with a continuous stream of input data  which are not important when analyzing a static data set  or data which is not time-ordered. one important issue is a sensitivity to where in a script matching occurs. for example  consider a 
     script  such as figure 1  in which matches occur only in elements temporally late in the sequence. belief in this match would imply that the earlier element events did occur  but  due to uncertainty  were missed. now  consider a script with matches only early in the element sequence. belief in this match implies that the following elements probably will occur in the future. because of the constraints imposed by the real-time data connection  the later events indeed can occur  so clearly  the belief in the latter type of match should be higher. below  several possible approaches to belief management are reviewed with respect to special requirements of real-time script processing  such as the above. 
　　　one technique for choosing among script matches is to use an heuristic threshold value for the minimum acceptable number of matched elements  lebowitz 1   or to generate a weighting function for considering the numbers of observed and unobserved elements  bozma 1 . similarly  other systems rely on the knowledge engineering process to provide rules for how much to believe in a match  as a function of which elements are matched in the particular script  azarewicz 1 . such techniques have been successfully implemented in the referenced systems  but must be developed for each application domain. if the requisite information is available  these heuristic approaches may be effective. in many cases  however  a more general solution is preferable. 
     in the arena of plan recognition  issues similar to the script-matching problem have been addressed. an interesting approach to uncertainty in this area is evidential reasoning  fall 1  lowrance 1 . one technique for dealing with the temporal aspects of the problem is to provide  frames of discernment  in which mappings between compatible events can be made  lowrance 1 . one possible compatibility mapping is between adjacent elements of script-like structures. another approach is to consider observations as evidence with temporal extent  fall 1   manipulating the constraints between those extents to determine belief. unfortunately  because they were not explicitly concerned with the real-time issues of interest here  these approaches do not make use of the observation constraints available. for example  they are insensitive to temporal order of observations  overlooking the constraint mentioned above. 
	other research 	in plan 	recognition uses a 
logic-based approach  kautz and allen 1   in which a taxonomy of possible event sequences is made  used by a deductive process which selects likely conclusions. another approach uses the theory of endorsements  sullivan and cohen 1   wherein rules about what makes good or bad plan-matches are needed. currently  these methods also deal primarily with the compatibility aspects of matching  rather than with real-time issues. while they appear extensible for incorporating the necessary constraints  once those constraints are properly formalized  it is currently unclear how to proceed in this direction. 
　　　the approach presented in this paper  therefore  is to derive script belief functions which incorporate the relevant aspects of the real-time understanding problem. a probabilistic approach was selected  because conditional probability theory allows the desired constraints to be explicitly addressed  while maintaining a degree of rigor. when the resulting equations have been studied and understood  it is likely that the essense of the probabilistic approach will also be applicable to many of the above techniques. 
i i . the probabilistic script belief function 
     keeping the general characteristics described in the introduction in mind  a robust belief function can be derived  as shown below. in this section  an overview of the approach is presented.a complete derivation of the belief equations appears in the appendix. 
     the general approach used in the derivation is to consider the probability of each element in a script in terms of the confidence that it was observed  as well as in terms of the probability with which it appears in the knowledge base. the resulting belief function is 

	schaefer 	1 


1 	knowledge representation 

table 1. events detected in the world 
	time 	event detected 
1 at home 
1 going east 
1 at work 
1 eating food 
1 going west 
1 going south 
1 at store 
1 going north 
the matches. it is also an attractive alternative to requiring  script entry conditions   bozma 1  to be met  because  though unlikely  a late match 
may turn out to be the correct match  if noise or uncertainty is high. 
     at this point  the  day at home  script has 1% of its elements matched  but the  dynamic assumption  assigns it only a 1 score. this is because the probability of subsuming scripts  such 
as  commute to work   is quite high. 	the 	 static assumption  gives  day at home  a 	slightly 	higher rating because it knows that there is only one such subsuming script in the particular knowledge base. 
     later  the person is seen to be going east and arriving at work. at this point  the  commute to work  script is highly preferred  as it is a detailed script with significant matches. if the person would have gone west before arriving at work  however  the commute script would not have been preferred. 
     at time 1  when the person is seen to be eating  the  day at home  script has all elements matched  with a probability of 1  with either assumption  that all of its elements occur. however  the belief is s t i l l much smaller than for the  commute  script  because of the high probability of being subsumed. 
     after work  the person is seen to travel south toward the store. the static function immediately 
assigns a very high score to the  go to store  script  as no other contains similar elements. the probabilistic increase from the dynamic function is less dramatic  but in both cases  the  store  script is the highest believed as more time passes. 
     the above example demonstrates a case of several significant divergences between the  static knowledge base  and the  dynamic knowledge base  equations. this results because the scripts in the example knowledge base are very similar to each other  violating the  equal a priori probability  assumption in the probabilistic  dynamic  belief derivation. because of this similarity  the more exact belief function imparts less significance toa match if that match is likely to occur in numerous other scripts. although it did not adversely affect the predictions in the example  this is a relevant point to consider when contemplating this 
	schaefer 	1 
	iv. conclusions 	appendix i- derivation of the belief function 

     script-based reasoning is a powerful paradigm for understanding sequences of events  but to effectively deal with uncertainty and incomplete knowledge  effective belief-management techniques are necessary. 
     a temporally-ordered input stream  such as a 
     real-time data source  offers constraints on script confidence which  for accuracy and robustness  should be exploited by the belief-management system. unlike other approaches which do not explicitly address this issue  the probabilistic belief function presented in this paper is one effective way to take advantage of these constraints. 
     to verify the applicability of the approach  an implementation of the script belief functions has been developed. it is part of a system called pub  the martin marietta pattern understanding blackboard  a script-based situation assessment system. in example runs to date  it has provided satisfying belief assignment  as judged by human observers. additionally  statistical tests have been run to compare the approach to methods using only compatibility-checking evidential reasoning  similar to  lowrance 1  . although there is not room in this paper to adequately describe the tests  the simulations have so far indicated improvements in convergence time  especially as the typical script length increases. 
	several areas for further development 	of 	the 
script belief function are apparent. first the function ideally should take into account the focusing  if any  provided by the data-gathering portion of the system. for example  if most of the attention has  for a time  been allocated to a small part of the domain  matching may take place to scripts relevant to another part of the domain. such matches should be afforded more belief  as their probability of being observed was lower due to focus elsewhere. 
     another useful area for future work is an extension of the conditional probability techniques presented here into other uncertainty paradigms. for example  the dempster-shafer  shafer 1  approach used in some evidential reasoning systems  lowrance 1  offers a range of belief values  as well as the capability to assign belief to groups of hypotheses. an integration of the approaches  such as by modifying the  rule of combination  to include the new temporal constraints  could provide useful improvements to the script-belief methodology. similar real-time-conscious extensions to other paradigms could also benefit applications in which those paradigms are well-suited. progress in such areas promises to provide more robust and general tools for constructing script-based processing systems. 
1 	knowledge representation 
     to reduce the complexity of the 	presentation  some abbreviations are in order. 
let p kth  be the a priori probability of the occurrence of the kth element in the 
knowledge base. 
scripts k  be the number of scripts in the knowledge base with length k  
scripts-in-order k  be the number of scripts with elements 1 through k in the same order as the script being scored. 
the following a posteriori probabilities are assumed given the sensor inputs: 
let p k  be the a posteriori probability that elements 1 through k of the script will at some time occur in the proper order. 
p kth  be the probability that the kth element will occur. 
p kth by sensors  be the probability that sensor inputs indicate that the kth element has occurred. 
conf kth  be the confidence  supplied by an external observer  that the kth element has occurred  an estimate of p kth by sensors  . 
p script  be the probability that the abstract event described by the script is actually occurring. 
suppose that the length of the script being scored is n  and that there are #scripts in the knowledge base. 



	schaefer 	1 


1 	knowledge representation 
