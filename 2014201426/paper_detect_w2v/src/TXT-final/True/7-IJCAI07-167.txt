
in this paper  we propose quantminer  a mining quantitative association rules system. this system is based on a genetic algorithm that dynamically discovers  good  intervals in association rules by optimizing both the support and the confidence. the experiments on real and artificial databases have shown the usefulness of quantminer as an interactive data mining tool.
keywords: association rules  quantitative  numeric  attributes  unsupervised discretization  genetic algorithm
1	introduction
mining association rules that aims at finding strong relations between attributes has already long been studied  see for instance   agrawal et al.  1  . in that context  an association rule is an expression c1  c1  where c1 and c1 express conditions on the attributes describing the objects. the strength of such a rule is usually evaluated by means of statistical measures  as for instance the support and the confidence  defined as follows:
- support c   where c expresses conditions on attributes  is the number of tuples in the database that satisfy c. - support c1  c1  = support c1뫇c1  - confidence c1  c1  = support c1뫇c1 /support c1 
given two thresholds minsupp and minconf  a rule is strong  when its support is greater than minsupp and its confidence greater than minconf. discovering strong rules is usually a two-step process. the first step consists in mining the set of all frequent itemsets w.r.t. minsupp. the second step relies on this set to discover strong rules w.r.t. minconf.
mining association rules on both categorical and numeric attributes  also called quantitative association rules  has been less studied. basically  this task involves several problems:
모first  numeric attributes are usually defined on a wide range of different values. it is useless to work on all possible numeric values  as done for categorical values  because in most cases  a given numeric value will not appear frequently. a classical way to deal with numeric attributes is to divide their domains into intervals. this is called discretization. but  as already pointed out in  srikant and agrawal  1   choosing intervals for numeric attributes is quite sensitive to the support and the confidence measures: small intervals lead to low supports  thus for a rule a   b increasing b leads to a higher confidence whereas increasing a can either increase or decrease the confidence. a tradeoff has to be found to discretize  correctly  numeric attributes with respect to minsupp and minconf. for instance weight 뫍  1  can be frequent  but the rule weight 뫍  1  뫸
height 뫍  1 1  may have a higher confidence than the rule weight 뫍  1  뫸 height 뫍  1 1 . this shows that it is difficult to find a  good  discretization of numeric attributes  considering them individually. as a consequence  the classical two-step process for mining association rules  namely mining frequent itemsets and then extracting solid association rules is no longer appropriate  as well as the embedded traditional level-wise algorithm for mining frequent itemsets.
모therefore  mining quantitative association rules is not a simple extension of mining categorical association rules. since the search space is infinite  our goal is to find a finite set of interesting solutions  close to the optimal solutions. this explains why we have chosen to solve this search problem with metaheuristics  mainly genetic algorithms  holland  1 .
모in this paper  we consider that given a pattern for an association rule  finding  good  intervals for numeric attributes occurring in that pattern is an optimization problem and we propose quantminer a system that has been designed in that framework. in that system  constraints on rules  namely the attributes appearing in the left-hand side and in the righthand side  and possibly values for the categorical attributes  are specified by the user and for each possible rule template fulfilling these constraints  a genetic-based algorithm is then applied for learning  good  intervals optimizing a given quality criteria. let us emphasize on the fact that intervals for numeric attributes are thus dynamically optimized during the mining process  and depend on all the numeric attributes occurring in the rule.
모this paper is organized as follows: 뫫 1 gives the state of the art for mining quantitative association rules. 뫫 1 is devoted to quantminer  the algorithm we propose for mining quantitative association rules. experimental tests on real-life and synthetic datasets are described in 뫫 1. we conclude in 뫫 1 with a summary of our contribution and future directions.
1	related work
discretization-based approach a classical method to deal with numeric attributes is to perform a preprocessing step  discretizing  also called binning  numeric attributes into intervals before the mining task  see for example  lent et al.  1; miller and yang  1; srikant and agrawal  1; wang et al.  1  . this can be achieved by either using domain knowledge expressed by concept hierarchies  or automatic discretization methods  such as equi-depth and equi-width binning. nevertheless  this discretization is univariate  an attribute is discretized without taking into account the other attributes . to reduce the influence of prediscretization  most work in this approach use either clustering or intervals merging. however  this work remain sensitive to outliers and does not reflect the distribution of data.
distribution-based approach in a statistical approach proposed by aumann and lindell  aumann and lindell  1   the right-hand side of a rule can express the distribution of the values of numeric attributes such as the mean or variance  as for instance:
sex=female = height: mean = 1
뫇 weight: mean = 1
two kinds of rules are considered:
- a set of categorical attributes on the left-hand side and several distributions on the right-hand side  - a single discretized numeric attribute on the left-hand side and a single distribution on the right-hand side.
webb  webb  1  has extended this framework to other measures such as standard deviation  minimum  count etc. although quite interesting  the kinds of rules in these approaches have a very specific form and cannot handle several numeric attributes in the left-hand side of a rule.
optimization-based approach in this approach  numeric attributes are optimized during the mining process. the term optimization was first used by fukuda et al. in  fukuda et al.  1b . in their works  a very interesting optimization criterion  called the gain is proposed as a trade-off between support and confidence. it is defined by:
	gain a   b  = supp ab    minconf   supp a 	.
nevertheless  the main limitation of this work is that rules contain at most two numeric attributes  since it is based on a technique inspired from image segmentation to find an image region that produces an optimized association rule. rastogi and shim in  rastogi and shim  1  have proposed a support-optimization method  generalizing the work proposed in  fukuda et al.  1a; 1b  to handle disjunctions on one numeric attribute. their work has then been extended to a gain-optimization approach by brin et al.  brin et al.  1 . although these works allow disjunctions between intervals  the forms of the rules remain restricted to one or two numeric attributes.
모a quite different algorithm  named gar has been proposed by mata et al.  mata et al.  1 . the idea is to use a genetic algorithm in order to optimize the support of itemsets defined on uninstantiated intervals of numeric attributes. the fitness function of each individual  a k-itemset  depends on its absolute support  coverage  and 1 factors: 1 penalization factors are used to avoid getting the whole domains of the attributes and to avoid overlapping between itemsets with respect to the support and one factor to favor specific itemsets with many attributes:
fitness = cov    뷍   ampl     뷎   mark  +  뷃   natr 
the effect of these 1 factors can be adjusted with 1 parameters. the authors suggest then to use an apriori-like algorithm to mine association rules using these optimized itemsets. this approach has several drawbacks: it is limited to numeric attributes  only the support is optimized which does not guarantee to get rules with high confidences  and finally  intervals are static in the rules and thus do not care of the implication direction. this may miss a lot of interesting rules. more recently  an approach based on halfspaces has been suggested in  ruckert몮 et al.  1 . in this work  the left-hand and the right-hand side of an association rule contain a linear inequation on attributes  such as: x1   1 =  1x1 + 1x1 뫟 1. although quite original and useful in many applications  the expressiveness of such rules is restricted  and this approach cannot handle categorical attributes.
1	quantminer
quantminer is a genetic-based algorithm for mining quantitative association rules. in the following  an item is either an expression a = v  where a is a categorical  also called qualitative  attribute and v is a value from its domain  or an expression a 뫍  l u  where a is a quantitative attribute. quantminer works directly on a set of rule templates. a rule template is a preset format of a quantitative association rule  either chosen by the user or computed by the system. it is used as a starting point for the mining process1. for each rule template  the algorithm looks for the best intervals for the numeric attributes occurring in that template  relying on a genetic algorithm.
모more precisely  a rule template is defined by the set of attributes occurring in the left hand side and the right hand side of the rule. for each categorical attribute  the value is either defined by the user in the template  or computed by quantminer. in this case  let a1  ...  an be the non instantiated categorical attributes occurring in the template. quantminer computes the frequent itemsets built on a1  ...  an  i.e.  the set of instantiations v1  ...  vn such that a1 = v1뫇...an = vn is frequent and generate a rule template for each such instantiation. this leads to as many templates as the number of instantiations. note that this step is similar to apriori  agrawal et al.  1 .
  individual representation an individual is a set of items of the form attributei 뫍  li ui   where attributei is the ith numeric attribute in the rule template from the left to the right.
  initial population the initial population of individuals is generated as follows: in the first individuals  the intervals  li ui  represent the whole domain of the ith numeric attribute  and the following individuals encode intervals with decreasing amplitudes  length of intervals  until they reach a minimum support in the dataset. once the amplitudes are fixed for an individual  the bounds li and ui are chosen at random. this ensures to start with enough diversity in the initial population that model general and specific rules.
figure 1: crossover and mutation operators.
  genetic operators mutation and crossover  figure 1  are both used in order to transform a generation of individuals into another one  improving its quality. the crossover operator consists in taking two individuals  called parents  at random and generating new individuals: for each attribute the interval is either inherited from one of the parents or formed by mixing the bounds of the two parents. mutation works on a single individual and increases or decreases the lower or upper bound of its intervals respectively. moving interval bounds is done so as to discard/involve no more than 1% of tuples already covered by the interval.
  fitness function the fitness function used in quantminer is based on the gain measure proposed in  fukuda et al.  1b . if the gain is positive  the confidence of the rule exceeds the minimum confidence threshold   we take into account the proportions of the intervals  defined as the ratios between the amplitudes and the domains   so as to favor those with small amplitudes. moreover  rules with low supports are penalized by decreasing drastically their fitness values by the number of tuples in the database.   algorithm
모quantminer  algorithm 1  follows a prototypical genetic algorithm scheme. the inputs are the minimum support  minsupp   the minimum confidence  minconf   the population size  popsize   the number of generations  gennb   the fraction of population to be replaced by crossover  cr  and the mutation rate  mr .
we developed quantminer1 in java as a 1-step gui wizard allowing an interactive mining process. after opening a function fitness a   b  tempfitness = gain a   b  if tempfitness 뫟 1 then foreach interval i in a   b do
//favor small intervals
tempfitness * =  1-prop i  1
if support a   b    minsupp then
         //penalize low support rules tempfitness - = nbtuples return tempfitness
algorithm 1: quantminer
input: a dataset composed of nbtuples  popsize  gennb  cr  mr  minsupp  minconf
output: quantitative association rules r
select a set of attributes
let rt a set of rule templates defined on these attributes compute the set of frequent itemsets on categorical attributes in rt
r =  
foreach r 뫍rt do
generate a random population pop of popsize instantiated rules following the template r i=1
while i 뫞 gennb do
form the next generation of population by mutation and crossover w.r.t. mr and cr. keep popsize rules in pop with the best fitness
values i++
r = r뫋 argmaxr뫍popfitness r 
return r
dataset  the user can choose attributes  choose some rule templates specifying the position of items in the left-hand and/or right-hand side of the rule1  choose the optimization technique and set its parameters  launch the process  and finally display the rules with various sorting: support  confidence  rule-length  the user can save the mining-context  go back to previous steps  change the method  parameters  templates and restart the learning.
speciesattrminmaxmeanstddevrulesetosapw111sw111species= setosa1%
1%pl111sl111versicolorpw111sw111pl111species= versicolor1%
1%sl111virginicapw111sw111species= virginica1%
1%pl111sl111table 1: statistical distribution and some rules of the iris dataset

figure 1: example of rule as produced and displayed in quantminer. the top part shows the rule a 뫸 b followed by the proportion of each interval appearing in the rule in its corresponding domain. note that further support and confidence measures are given to assess the quality of the rule as for example confidence  a 뫸 b .모we have set the default parameters of the genetic algorithm to 1 individuals  1 generations  1% of mutations and 1% of crossovers. they have been chosen experimentally so as to produce approximately stable intervals from a run of the system to another one. to give an idea about execution time  with the default parameters  on a dataset of 1 tuples  quantminer can process on average one rule template/second. note that simulated annealing is implemented in quantminer as an alternative optimization method. our experiments have shown that simulated annealing is 1 to 1 times faster than the genetic algorithm  but generally the optimized intervals are much less precise and also sometimes cover the whole attribute domains.
1	experiments
we begin this section with an experiment on a simple dataset to illustrate our algorithm  followed by an empirical study on a real-life and synthetic datasets to assess the usefulness and the scalability of quantminer. our experiments have been performed on a pc amd athlon xp1+ with 1 mb main memory  running windows xp.
1	iris dataset
the iris data set  murphy and aha  1  is composed of 1 samples of flowers from the iris species setosa  versicolor  and virginica. for each species  there are 1 observations described by the attributes sepal length  sl   sepal width  sw   petal length  pl   and petal width  pw  in mm.
for instance quantminer has extracted  the descriptive association rules presented in table 1. the intervals produced are coherent with the normal distribution of the iris dataset. the rule 1  as displayed in quantminer  is presented in figure
1.
1	real-life dataset
we have also experimented quantminer on a real-life medical database donated by the stulong1 project to discover descriptive rules of the atherosclerosis disease. stulong is a dataset concerning a 1 years lasting study of the risk factors of the atherosclerosis in a population of 1 middle aged men. the patients have been classified into three groups: normal  risk and pathological. the database we have used has about 1 categorical attributes and 1 numerical attributes. each patient is described by his physical activities  drinking of alcohol  smoking  physical and biochemical examination  etc. in our experiments  we have focused on rule patterns such that the antecedent of the rule describes a population of patients  and the consequent gives a description of this population and vice-versa. here are 1 examples of discovered rules where alco cons is patient's alcohol daily consumption expressed in liter  toba conso gives the number of packs of cigarettes consumed daily  toba dura is the smoking duration in years  bmi stands for body mass index  the weight in kilograms divided by the square of the height in meters  kg/m1 . according to the world health organization the bmi falls into one of these categories: below 1 underweight  1 normal  1 overweight  1 and above obese:
death =
yes1 alcocons 뫍  1 1 
 :  & tobatobaduraconso뫍  1 뫍  1 1 1= 1%%
;: tobaconso 뫍  1 1 ;:1    & bmitobaalco& tobaconsconso뫍dura 1뫍.뫍1뫍 1  1 1. 1  1 .1 .1 1 = 
 ;group=r1%
1%alco	뫍	1
death = 1%
  & bmi
no	1%
모our results have shown that the atherosclerosis disease is strongly related to the overweight and the obesity commonly assessed by bmi. the intervals discovered by quantminer  see for example rule 1 and 1  are quite coherent with those given by the world health organization. as shown in these 1 rules  our experiments pointed out the big influence of tobacco consumption on the death of patients. typically  the patients who died have smoked a lot for a long time. some other risk factors emerged  such as a high cholesterol rate and blood pressure and the presence of skin fold above some muscles. the intervals discovered by quantminer were considered as relevant and interesting when presented to a physician of stulong. figure 1 shows the convergence of the process for a given rule template of 1 numeric attributes by considering the maximum fitness according to the number of generations. it shows also the execution time w.r.t. the number of numeric attributes.

statistics and epidemiology of charles university and academy of sciences  head. prof. rndr. j. zvarova  drsc . the data resource is on the web pages http://euromise.vse.cz/stulong. at present time the data analysis is supported by the grant of the ministry of
education cr nr ln 1b 1.'

figure 1: maximum fitness w.r.t to the number of generations for different values of cr and mr  left . execution time w.r.t to the number of numeric attributes  right 
1	synthetic datasets
we have tested the scalability and the sensitivity of quant-
miner to the minimum confidence threshold. for this purpose we generated several synthetic datasets1 for a person database in which each person is described by nine attributes: salary  commission  age  education  car  zipcode  housevalue  yearsowned and loan. attributes education and zipcode are categorical and the rest are numeric. we have projected our experiments in figure 1 where the optimization time of a template is given according to the number of tuples in the dataset and to minconf respectively. here  k indicates the number of numeric attributes in the rule template. for a given k  the execution time reported here is an average time of a number of rules having k numeric attributes. this number varies between 1 and 1 rules according to the templates. we have set the parameters of quantminer to the following:
gennb=1  popsize=1  cr=1  mr=1  minsupp=1 and minconf=1.

figure 1: execution time according to the number of tuples
1	conclusion
the problem of mining association rules in large databases involving both numerical and categorical attributes is not straightforward. this is due to the very great number of possibilities for discretizing numeric attributes into intervals whereas in categorical association rules  all possible rules are considered. actually  mining quantitative association rules is an optimization problem rather than being a simple discretization one. in this paper  we have proposed quantminer  a genetic-based algorithm for mining such rules in databases. unlike gar  mata et al.  1   quantminer gets highconfidence rules and do take care of the position of the intervals w.r.t the implication direction. our algorithm starts with a set of rule templates and then looks dynamically for the  best  intervals for the numeric attributes present in these templates. an optimization criterion based on both support and confidence is used to keep only high quality and interesting rules. in quantminer  the user is highly solicited in order to guide the mining process thus avoiding the discovery of hundreds of rules  as it is usually the case in association rule mining. our experiments have shown the usefulness of quantminer as an interactive data mining system and the pertinence of the intervals discovered by quantminer in real datasets. in future works  we plan to extend quantminer to handle disjunction between intervals.
acknowledgments
we thank the french geology survey  brgm  for supporting this work and teddy turmeaux for his help in the experiments. this work has been partly supported by a research contract from consolidated edison.
