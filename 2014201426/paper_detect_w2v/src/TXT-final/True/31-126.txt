 
to build systems that can deal with the individual differences of users  we need to represent a model of the user. such a user model can support interpretation of user actions and drive the system's actions. 
   this paper takes considerable care in defining the various notions of 'user model'. from this  we characterise the promise of user modelling in terms of the individualisation it offers. then we describe the challenges and benefits user modelling offers as a domain for research in many fields of artificial intelligence. firstly we do this in terms of the major subtasks that are critical to user modelling and then in the context of an example system that filters and customises multi-media objects. 
1. introduction - what are user models  
user models are important because they represent information about the user so that a system can operate more effectively. user modelling has been studied in many different communities such as: knowledge representation; planning; natural language understanding and generation; intelligent teaching systems; intelligent information retrieval. this paper explains the main ideas in this interdisciplinary research field and argues that ai researchers can find an exciting source of both problems and solutions in building user models. 
   because individuals have different knowledge  preferences and goals  there are many situations where customised treatment of the user  based on information in a user model  should offer advantages. there are also many challenging problems in achieving such customisation. 
   before discussing the various elements of user modelling  we define the two main types of user models. we will use the model of interaction shown in figure 1  derived from that of suchman  1 . the leftmost part of the figure shows the user's long term knowledge  beliefs  preferences as well as current goals  plans and tasks and whatever else may be relevant to the current interaction. they bring these to their interaction with a 
   machine. the user model is a set of beliefs about the user. in the case of human-machine interaction  this model is stored in the machine and represents a modest attempt to model salient aspects of the user  self  1 . in association with this set of beliefs there must be a set of 
1 	invited speakers 
processes that manage them: adding new information as it becomes available  dealing with inconsistencies and noise and inferring new information where this is possible. 
   to refine this notion  we return to figure 1. left of the dotted line is the user. this part of the figure is divided into two areas: userprivate and usershared. the critical distinction is that private aspects are not accessible to the machine  where shared ones are. so  for example  usershared includes the commands that the user has typed and other user actions afforded by the interface. the amount of information in userprivate is huge compared to this and typically includes aspects like intentions which are difficult for the machine to determine. 
   the middle part of the figure represents the machine's side of the interaction. we show the distinction between those aspects accessible to the user  machine shored and those that are not  machine pnvate. once again  machine sluired also called the system image  consists of 
just those aspects of the system that have been presented at the interface  the actions of the system. here too  machine pnmte is very large compared to what is available to the user. the bulk of the system's reasoning and knowledge is typically limited to machinepnvate.. 
   as described so far  the figure is faithful to suchman's original model. at the right we show a new element  the 'programmer' that created the machine's various models of knowledge. it may be that the 'programmer' is  indeed  a person who has encoded the information for the machine. alternately  it may be a program  possibly on a remote machine  that has been responsible for creating the machine's set of beliefs about the domain and user. we will discuss the processes involved in this in section 1. 
   to refine the notion of a user model  we now focus on machinepnvule. we introduce three different classes of models as shown in the figure. many user modelling systems actually intertwine these classes of models. we maintain the distinction as the problems and demands of each are somewhat different. it also helps in highlighting the common elements in different user modelling work. 
   we now describe the three classes of models in terms of an example: a system that gives advice about unix like uc  wilensky at al  1 . 
   at the bottom is mdomain the expertise model in the domain. for our example  this is expertise about unix. 
   this codifies the essential concepts in the domain and the relationships between them. in addition  it models goals and the unix actions that are the primitives of the plans for achieving these goals. this capacity to create and evaluate various plans for achieving a goal is also part of the domain expertise. the next class of model is musers domain* expertise about typical users in this domain. 
commonly this categorises users into expertise groups like beginner  intermediate and guru. it can also classify the domain knowledge correspondingly so that each aspect is categorised according to whether it is likely to be known by beginners  by intermediate users or only by gurus. note that it is natural for this knowledge of users to be tightly coupled to mdomain  the domain model. for example  the actions represented in mdomuin can be associated with particular classes of users in musersdonmn. 
   the third aspect of the machine's knowledge shown in the figure is mwdivlduah the model of a particular user. in our example domain  this would classify the user  perhaps as a novice. it would also represent additional information about this user: for example  they might seem to know some things that the 'typical novice' is represented as not knowing. in addition to such long term aspects as the user's knowledge  the machine may model the user's current goals and their progress toward them. also  it is typically at this level that we need to cope well with conflicting and noisy information about the user as well as temporal change. 
   the term 'user model' is widely  and confusingly  used for both the expertise about general users in this domain  musersihmtnn and the model of the individual  
mindividual- t h e research into muserdomain has been characterised by two main schools: one aims for cognitive validity and the other is ad-hoc and pragmatic. in modelling unix users  the former would model user's understanding of unix in ways that match the way those people actually think when they reason about tasks in that domain. so the guru model might be modelled in terms of quite different processes as well as concepts from the novice's. such cognitive modelling has been used by doane et al  1  with three quite different forms of model for each of the three muserdomain: novice  intermediate  expert. these reflect the different ways that users of varying expertise reason about the domain as well as their differing levels of knowledge of individual commands. 
in terms of figure 1  the cognitive models for 
 users domain claim some correspondence with the actual way that userprivale operates where pragmatic models are justified in terms of the empirically assessed effectiveness of the systems that use them. 
one of the widespread approaches for pragmatic 
	kay 	1 
representations of m usersdomain is the stereotype. this was introduced by rich  1  1  to capture the type of default reasoning that people commonly do when classifying people into groups with much in common. when we discussed the three classes of unix users  they constitute stereotypes which allow statistically useful initial assumptions about a user. it is to be expected that some  perhaps many  of these assumptions will prove to be invalid for any particular person in the class. the power of stereotypes is that they enable the system to take small amounts of information about the user and deduce much more from it quickly and cheaply. we will revisit stereotypes in sections 1 and 1. 
   the last aspect of the machineprivate is the user model based system that is driving the interaction. it has to manage the various models beneath it to achieve customised interaction as described in the next section. 
   to this point  the examples are from a domain dominated by representation of user's knowledge and goals since these are the usual concerns for a system like a unix advisor. consider another  very different example: a system that produces a customised hypertext 'newspaper'. in this case  mdomam could well represent many different aspects of the domain. for example  in a system that takes news items  selecting those of interest to the user  each news item may be modelled in terms of its content. 
the musersmonum can model the news preferences typical of various groups of users: for example  one for the sport addict  the financial investor  the wine buff and the like. in existing newspapers  we can view the various subsections  business  sport  international news  entertainment ...  as reflecting the stereotype for the readership of that section. the model of an individual  mindividuah might be in terms of a collection of these in addition to particular interests outside this set. it may also hold short term goals that affect interests. so  mindividual is reflected in the sections of a newspaper that interest the reader on any one day. for example  the person who is about to buy a house may develop strong but short term concerns about interest rates  taxation policy changes and property price trends. 
1. roles for user modelling in intelligent systems 
from the machine's point of view  interaction with users involves two main tasks: usershared -  machineprivate  the machine's interpretation of the user's actions at the interface and machine pnivate -  machine shared  the generation of machine actions. note that the latter incorporates the actions the system undertakes on behalf of the user  as well as the interface manifestations of them. 
   user modelling has the potential to assist in both of these. for example  in a natural language based interface  both these tasks can be quite difficult. it is not surprising that there is a considerable body of work where user 
1 	invited speakers 
models support both these transformations. see  for example  much of the work reported in kobsa and wahlster  1  and more recently in sarner and carberry  1 . in interpreting the user's actions at the interface  the user model can reduce ambiguities and constrain the problems of making sense of the user's utterances. 
   for natural language generation  in a system like zukerman and mcconachy  1  the user model enables the system to generate more concise discourse by omitting information the user already knows. in addition  the model enables the discourse planner to deal with incorrect inferences the user is likely to make. in paris  1   it drives the tailoring of descriptions so that they are comprehensible and helpful for users at various levels of expertise. 
   another impressive demonstration of the potential of user modelling for interfaces is in the work of goodman and litman  1 . they explored the way that domain constraints affect plan recognition and at the same time demonstrated how a user model containing plans can support advice generation  task completion  context-sensitive responses  error detection and recovery in a cad interface. we may expect that the leverage gained from user modelling can be significantly attributed to the complexity of the task of design and hence  the complexity of the total interaction with the cad interface. with increasing machine power  we can expect more systems to support such complex processes as design and we can correspondingly expect that user modelling will be invaluable in making such systems effective. 
   also  there has been very interesting work in managing both the structure and content of multi-modal interfaces by wahlster  wahlster 1; wahlster et al 1 . 
   intelligent information retrieval is natural area for exploiting the power of user modelling. for example  brajnik et al  1  support the user in the normally difficult task of formulating queries. 
1. roles for al in user modelling 
there are many roles for al techniques in support of user modelling. we use figure 1 to illustrate these. firstly  the various models in machineprivate must be represented. the special needs of user modelling make this challenging and interesting. 
knowledge representation 
   one of the most obvious demands of the knowledge representation for most user modelling tasks is that it cope well with noisy  changing  varyingly reliable sources of modelling information. this makes user modelling an excellent testbed for the many approaches for dealing with this type of situation: for example  plausible reasoning  non-monotonic reasoning and belief revision. 
it also poses some special problems that are generally neglected in knowledge representations. since the user model represents information about a person  it should ensure user control  access and privacy. it is also reasonable to demand accountability from the 'programmer' for the content of the user model. 
   the particular needs of user modelling are also set by the nature of the human reasoning that is to be modelled. so  for example  appelt and pollack  1  have used an interesting approach to assessing competing explanations in a manner that seems to be particularly suited to reasoning about mental states. 
   beyond this  there are many situations where the model of the user needs to represent misconceptions or alternate frameworks. this is common in modelling learners  greer and mccalla  1  where the recognition and correction of misconceptions may often be as important as modelling the preferred or correct 'knowledge' in the domain. 
   user modelling is a demanding area for knowledge representation. for example  as london  1  observes  it is common for planning research to be based upon assumptions like: a closed world; the user having correct  well formed plans without critical misconceptions; having a consistent goal and plan. these and many other simplifying assumptions are not appropriate where we model the knowledge of a user  especially one who is inexpert and learning. london was able to construct a representation for knowledge  intent and strategic activity and  from this create advice that was very consistent with that of a human expert. 
building muser domam 
   now we move to the many processes involved in user modelling. essentially  these need to construct the user models and update them. clearly these must be strongly linked to the choice of knowledge representation. consider the processes depicted as arrows onto m userdomain in figure 1. 
   there are two main types of such process. first  we can build from the knowledge of an expert on users in the domain. for example  to build a model of people who are learning a programming language  like pascal  we can draw upon the considerable psychology and education literature. so  we might use the bug catalogues developed in the work on proust  johnson 1 . more simply  we might just capture the expertise of someone who has had considerable experience in dealing with various users in the domain of the system. this approach requires knowledge elicitation from a domain expert as in construction of a typical knowledge based system. 
   the second means of constructing the collective models takes advantage of the other methods for knowledge acquisition. one might apply machine learning to a large collection of data about users in the domain to identify stereotypes. this approach seems very natural and promising but has been little explored. one case where it has been used is by orwant  to appear  where communities of users are dynamically identified so that any one user can be associated in varying degrees with many different 'stereotypical' communities of users. 
building mindividual 
   the transition from the 'programmer' to mdindividual is for the various sources of modelling knowledge that reside outside the current system and can contribute information about this user. these can potentially be extremely varied: they may be conventional databases of information about the user  observations of this user  possibly interpreted by various different programs  or they may even be individuals who know about the user  perhaps the user themself. 
   an important process could operate via some form of machine learning: there are many and varied sources of information to be exploited  as for example in the work of orwant  to appear . 
   the history of the user's dialogue with this system and related ones has the potential to provide much  invaluable input to m individual for a unix advisor  this would include the dialogue history from interaction with the advisor as well as the user's unix command use history. mining this type of data is interesting but difficult. it was used by 
cook and kay  1  to build detailed instances of 
m individual   
   the last source of information for mindividuul is within machineprivate. this is via the system that employs the user model and can contribute to it. in particular  this is the source of much status information about the user's current tasks  goals and actions. it is also the point at which the system performs diagnostic tasks. in stereotype based systems especially  the goal of this diagnosis is to assess the right stereotype s  to apply for this user as well as to record the ways that the user differs from these. 
   finally  we note that the user model based system needs to combine the three classes of models: domain  collective and individual user models. this process typically takes the categorisation of the user  for example  as a beginner from mindlvlduai and use the appropriate stereotypes from musersdomain along with the other relevant elements to build mindividual. 
1. an example system 
the above discussion has been largely couched in terms of the general application of user modelling. we now describe a current project that employs user modelling extensively at several levels to support customisation and filtering  kay and kummerfeld  1 . the current focus of the work is to produce a customised hypermedia 'newspaper'. the prototype was based on audio news and it 
	kay 	1 
   
filtered news items so that those most likely to interest the user were offered in the 'newspaper' for the user to listen to. we have also been working with hypertext with customisation at various levels: the form and content of the actual hypertext pages and the links between them. to achieve this  the hypertext is actually represented as a 'meta-hypertext'  a form ready to be customised. once the user model is applied to this  the actual hypertext is generated for the user. 
   the architecture supporting this is shown in figure 1. circles are data stores  boxes show transformations and the small variously-shaped icons are entities created by the transformation programs. we now describe the elements of this system that are critically determined by user modelling concerns. 
   first is the user model itself. this is represented as a um  cook and kay  1;kay  to appear  based model. a 
   critical aspect of this representation is its support for users to access their model and the values it holds. it can give customised explanations of the aspects modelled mdomain as well as justifications for the values from mindividua{. 
   the other  larger store is the publication centre which holds the objects that are to be selected or customised for many users. it has a collection of news items  as text  audio or video. as shown in the figure  these arrive at the publication centre as they are created by producers. some producers will lodge actual objects while others may send meta-objects. the simplest of these are descriptors that add value to the store. for example  they may be a very knowledgeable individual's ratings of the importance or merit of news items or  as we discuss below  from analyses of information about many users. equally  they may be machine generated from analyses of the news items. 
the prime actors in this system are programs that 
1 	invited speakers 
perform the filtering or customisation on behalf of the user. these are shown as virus-like attachments to the object store. they travel to the store and perform actions on behalf of the user they represent. they filter some classes of objects  sending these on to the user's local object store. from here  the user interacts with a browsing interface. 
   the user model is critical at all stages. the filter or customiser has two main parts: the method for filtering  or customising  and parts of m individual that will control this. since the user's interests and knowledge change over time  the filter or customiser needs to be generated repeatedly. the methods of the filter/customiser will change over time  too. 
   the other element of the system that makes heavy use of mindividual is the browser interface. this facilitates the user's exploration of the local object store. it also participates in additional filtering and customisation with parts of the user model not in the filtering or customising programs that were exported to the non-local object store.  these would be aspects the user considered to be sensitive  to be restricted to the local system only.  
   the last user modelling element of the system is depicted at the right. this is the stereotype constructor which analyse the user model data of the large numbers of filtering/customising programs at the publication centre. the aim here is that groups of similar users be identified. it also aims to identify opinion leaders  individuals whose preferences and interests are valuable for predicting many other users' preferences. this is an aspect that will become of considerable importance in the exploding field of support tools for filtering  retrieving and customising objects for individuals. 
   
1. summary 
the current reductionist model of computing research has meant that user modelling work has been highly fragmented and results that should be relevant for and from user modelling are not being transferred. 
   as the reader should have realised  user modelling needs to build on foundations from many of the major areas of ai: knowledge representations; automated reasoning; planning  including multi-agent planning; machine learning from its various schools; the various means for increasing the bandwidth between the user and the machine  especially natural language but also various aspects of perception and  of course  cognitive modelling. nor should the benefits flow one way. the particular needs of user modelling can offer constraints that define a special flavour for the tasks. 
   moreover  user modelling will demand greater cooperation between these subcommunities if we are to exploit individualisation of interaction with users. at present the literatures of the various subgroups of ai are remarkably disjoint. 
   one important exception to this is in the intelligent teaching systems community where there is a long tradition of user modelling  though typically under the title  student modelling  but continuing the use of this term for both m user domain and m individual . this community has actively explored and applied both cognitive and pragmatic modelling for building m usersdonmin. for example  anderson et al  1  use a cognitive modelling framework as the basis for a series of teaching systems that have been demonstrated to give impressive improvements in learning. 
   the student modellers have also used machine learning for building both m user domain and m individual. they have explored many  many approaches to representation of domains and user models. they have built systems embodying their ideas and commonly evaluated them. 
   it seems intuitively obvious that we deal well with another person when we treat them as an individual  customising our interpretation of their actions as well as generation of our own. it is easy to make assumptions about human-machine interaction based upon such intuitions. but they may not be sound. for example  brennan  1  performed an elegant experiment which suggests that when people think they are interacting with machines they use natural language differently from when they believe they are interacting with a person. moreover  significant parts of the hci community would contend that if we build our systems well - founded on a single  solid 
muser domain'we would not need muser or associated customisation. certainly  human-machine interaction is not symmetric: the two partners play different roles and operate differently. our interaction model of figure 1 highlights some aspects of this. in spite of these reservation which we should keep in mind  we consider that there are many systems that should perform more intelligently and effectively with user modelling. 
   in particular  we are poised at the beginning of an era when vast resources of information and knowledge will be available to users mediated by machines. the magnitude and variety of those resources pose problems with users being overwhelmed by the diversity and choice available. this is the type of domain where there will be benefits from user modelling in various roles such as those we are exploring in the approach of figure 1. 
   users are different. user modelling is the basis for a system to respond to those differences. we have offered a view of user modelling as a domain where many ai techniques are needed and where the particular demands and constraints of user modelling can be useful for many of the tools sought in ai. 
acknowledgements 
my thanks to alan fekete  bob kummerfeld and richard thomas for kindly reading drafts of this paper and making many helpful suggestions that have undoubtably improved the lot of readers who have made it through to this point. 
