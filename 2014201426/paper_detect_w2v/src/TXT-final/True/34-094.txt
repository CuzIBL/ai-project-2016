 

       the organization of a program for l i n g u i s t i c analysis of geometrical patterns is described. the program belongs to the system of pattern recognition for industrial drawings and objects  1 1  
       we started from the formalism suggested by evans  1 . in completing practical tasks  we have developed the methods of economical grammar construction  exact description of various geometrical relations between pattern elements and our program implementat ion. the program is written i n fortran with the use of the lidi-t 1 list processing system l 1  1 . 
       the grammar is represented by a stiit ic lint structure. geometrical relations and structural transformations of quantitative information  included in the sytitem  are implemented as a set of subroutines. the program algorithm to organize the analysis is grammar-independent  but the passing of the program control to the program segment s to process the quant i t a t i v e information is controlled by the grammar and vice-versa  i.e. the taking of information out of the grammar is cont r o l l e d by the results. of the processing of the quantitative information about the actual object  and by the given atrategy of the use of the grammar as w e l l   . 
introduction 
       the program is aspart of the software of the industrial pattern recognition system presented by t.vamos and z.vassy in their papers ci 1. the program variant running at present on the cdc-1 computer is used for the recognition of two-dimensional patterns  like those .shown on fig. 1 . 

geometrical relations between the pattern 
elements are complex and various: equivalence of end points of line segments and arcs  parallelness and perpendicul a r i t y of lines  equality and non-equality of lengths of segments and curvatures of arcs  a certain disposition of points with respect to a particular l i n e   etc. 
       the input information for the program is a list of the primitives of t he geo-
metrical pattern  viz. line .segment  hereinafter: l i n e     arc and small indefinite element   fig.1  . 

       the description of the primitive consists of i t s i d e n t i f i e r arid quantitative attributes: 

       an input l i s t in either obtained in the form of binary information from a small computer  c1  as a result of the feature extraction procedure on a real object   as to the obtention and organization of this list of .      or it may be a manually prepared list of primitive:; of an ideal geometrical object. 'j' h e 
       origin and organization of the input l i s t are not relevant for the working of the program. 
       the objec t may be described b y b e ginning with an arbitrary node and in an arbitrary direction. every primitive is supposed to be described only once. 
1        the analysis of the input l i s t is performed on the basis of grammar - the structural description of patterns   f a m i l i a r   to the computer. we have started from the formalism suggested by evans  1  and we have developed it in the sense of the p o s s i b i l i t y of the exact description of the various geometrical 
r e l a t i o n s between subpatterns   the econo-
mical construction of grammars and the program implementation. 
       the terminal symbols of the grammar correspond to the primitives of the patterns  while the non-terminal symbols correspond to the subpatterns. the nonterminal symbols l i k e the terminal ones huve quantitative characteristics  too. the rewriting rules have the following f o rm : 
       left-side non-terminal symboj i finite set of right-side terminal and non-terminal symbols  {relations between right-side symbols or between t h e i r quantitative attributes   definition of the quantitative attributes 	o f the left-;.; ide non-terminal symbol by the 
quantitative attributes of the right-side symbols    indication of the symmetrical quantitative attributes   * 
　　　　the geometrical relations permitted in the system and the operations to obtain the quantitative attributes of the nonterminal symboiti are described separately and interpreted in the system us sepainte program segments. their set can be conveniently extended as much as the system develops. 
       figure 1 describes a characteristic screw portion represented in fig.1. here the terminal symbol:; consist of lower case l e t t e r s   and the non - terrnina ones of capital letters. the quant itativ attributes of the left-side symbol:; are denoted by unsubscripted l e t t e r s   those of the right-side symbols by subscripted letters; the subscript indicates the ordinal number of the corresponding rightside symbol in the rule. the rules are n umbered. 
       the output of the program in the course of i t s operation as an independent program  e.g. to test new g r ammars   is the printing of the names of the patterns recognized by the program on the input l i s t as well as that of the description of the complete analysis tree. by using the program in system  only the end results are transmitted through the common data f i e l d for other programs. 
1 

of patterns  the grammar describing these patterns is an always used and unchanging information and is organized as a part of the permanent data s t r u c t u r e . fig. a shows the s t r u c t u r e of the grammar and fig.1b details the structure of a rule. appendix contains the detailed description of the c o n s t r u c t i o n of the grammar. 
　　　geometrical relations and operations for assignment of value to q u a n t i t a t i v e a t t r i b u t e s are interpreted as fortran l o gical funtions and subroutines respectively. the grammat ical rules are giving only the names of relations and assignment operations  further the description of actual parameters. the names of relations 

1 

and assignment operations are c o l l e c t e d i n two l i s t s analogous with each other  belonging to the permanent data structure fig.1 shows the organization of one of them. the so-called switching index is used for the a c t i v a t i o n of the respective program segment at the time of the running of the program. 

elements recognized by the program  ere w r i t t e n in the l i s t of the generated quantitative attribute sets   lgas   branching i n t o s u b l i s t s   corresponding to syntactic types  fig.1 . these s u b l i s t s are created and e x i s t i n g only for the running time of the l i n g u i s t i c analysis program. 

　　　the analyzer - the program of l i n g u i s t i c analysis - consists of the following subroutines: subroutine of the analysis according to the given r u l e   subroutine of the synthesis according to the given r u l e   subroutines for the organization of the work of program segments checking the geometrical r e l a t i o n s and r e a l i z i n g of assignment ope rat ions  strategy subroutine for the organization of the order of the analysis according to grammatical rules and a set of a u x i l i a r y subroutines. 
　　　the algorithm of analysis can be characterized as analysis by synthesis. the grammatical rules are numbered in an increasing h i e r a r c h i c a l order   bottom-up    i n the increasing complexity of pattern elements to be described . the algorithm consists of in format ion processing concerning the actual object on basis of grammatical rules considered in an increasing order of t h e i r numbers of t r i a l s to synthesize the l e f t - s i d e symbol  considering every possible combination of the already synthesized symbols  the syntactic type of which is i d e n t i c a l with the types given on the r i g h t - s i d e   and checking the f u l f i l m e n t of the geometri cal r e l a t i o n s required by the given r u l e . in the course of cross-recursion between the r u l e s   such a   l i n e a r   way of the algorithm is v i o l a t e d    loops  appear  i t s general t r e n d   however  does not change. 
　　　it must be noted that the greater part o f the algorithm i s made o f the subroutines of the analysis according to a given grammat ical rule on basis o f which it is easy to organize any other strategy of the order of the uses of grammat ical rules. 
　　　the quantitative attributes of the symbols synthesized during the working of the algorithm   i . e . of the pattern 

　　　the run of the program begins v i t h the permanent data structure p u t t i n g i n t o the memory followed by the reading of the input l i s t and i t s preprocessing  involving the location of the quantitat i v e attributes of the primitives in the three basic s u b l i s t s   l i n e   arc  undefined  of the l i s t of generated quantitat i v e a t t r i b u t e sets intended for i n f o r mation storage about the actual pattern. 
　　　fig.1 shows how the organization of the running of the program is imagined. here the l i s t s are drawn up by circular blocks and the program parts by rectangular ones. the transmission of i n formation about the actual object is shown by double directed lines and the transmission of information c o n t r o l l i n g the analysis is shown by simple directed l i n e s . by running the program-analyzer no modification taxes place on the permanent data s t r u c t u r e  grammar  m s t of names of geometrical relations /lnr/   l i st of names of assignment operations /lnao/   therefore we c a l l it permanent; the i n formal ion stored in it is used to c o n t r o l the analysis of information about the actual object. during the analysis a l o t of consecutive s t r u c t u r a l transformations are c a r r i e d out on the l i s t of generated a t t r ibute sets. 
　　　there are two st ages in the use of the program: 
　　　1/ creation of a permanent data structure  grammar  lnr  lnao   and programming of geometrical r e l a t i o n s and assignment operations. this part of the system can be changed and extended without l i m i t during the d e f i n i t i o n of the set of tasks to be completed with the help of the program. meanwhile the analyzer program i s l e f t unchanged  ine pei-
1 

manent data structure must be described in i.idi-1 input language  in parenthetical form  on cards. a very short program organize:; the input of the permanent data 
structure in the memory of the computer with the help of the 1i-1 input program. during the tost ing of the data structure t h i s shurt program calls at the end of i t s run the program-analyzer which perform:  the analysis; of an input l i s t . after mirvi'y of the result: -   of the carrying out of the analysis corrections can be made i n tin- description of the data structure. the correct  data structure is transferred on a disc in the form of binary information. 
       1 / use of the program for pattern recognition  fig.1 . for this purpose the data structure in directly transferred from the disc t. o the memory of the 
computer before the beginning of the run of the program-analyzer. 
appendix 

grammar 
       the rules of the grammar can be subdivided into two groups: 
       1 / huj es where there are only terminal symbols   e . g . rule n .in fig. 1  on the right ride; 
       i' / h u1e s where there arc only nonterminal symbols on the r i g h t side1  e.g. rules 1 - ; -i in f i g . 1   . 
       the rules of the f i r s t g r oup a r e p r o gr a mire1 d as preprocessing ＜ * input j i at because this  is a common basis to a l l grammars interestittf. us . the rules of t tie 

1 

second group are contained in the grammar which is a part of the permanent data structure for the actual set of tasks. such a subdivision simplifies the algorithm to a great extent as it is dealing with non-terminal symbols only. 
       numbering of grammatical rules: the rul t. are numbered sueh a way t hat every my mho   appears first. a:; a left. -side one . kxcept.ions arc only recursion:; across the rules  which are also permitted in the grammar . rules with identical left-side symbols get d i f f e r e n t numbers and enter the g r amm a r as separate rules. 
the structure of a rule i s shown on 
fig .1 . 
       each symbol in the l i s t of right-side symbols gets a number. the number!ng is completely arbitrary  but necessary for the unambi puous description of geometric relations between r.ymbojs   because the same rule may contain several symbols of identical syntactic type. for e v e ry symbol  there j ;  a list  of names of rel a t i o n s   which the symbol is bound to satisfy with respect to the preceeding riphf-side symbols  of the rule. for every relation in the rule is pi von the description of actual parameters of the relation. the following order is accepted f o r the description of parameters: every purameter is described by a pair of 
integer!; the f i r s t of which is the order 
t.umbe r of the r i. tf hi. - s i do symbol which must  satisfy this relation  while the second is t hi e number of that quantitative attribute of this symbol  the value of which is the actual parameter of the relation. 
　　　　the quantitative attributes of the symbols are i d e n t i f i e d with numbers { i . e . integers   at first because the values of the quantitative attributes of the picture elements are stored in linear lists   a t nodes whose names correspond to the syntactic type of these elements      fig.1   in a f i x order: 
e.g. first a  second b  etc.  thereafter because for the description of 
actual parameters in the grammar there are also used linear lists in which only integer-type variables can be stored. 
　　　a simple example explains the details of the construction of the rule- let us consider one of the rules of 
-gramma r   presented in fig.1. in the meta-i anguage of the description of grammars 
1 
be ferences 
 vamos t.  vassy z.: industrial pattern recognition experiment 
- a sintax aided approach. f i r s t international joint conference on pattern recognition. washington  oct. 1 - nov. 1. 1. 
ieee publ. 1-cho 1c pp.hk ~k1. 
 vamos t.  vassy 1.: restricted goal sintax aided pattern recognition experiment. 
	acta 	techn.acad.sci.h.tom /1/ 1. 
 evans  t.g.: a grammar-controlled pattern analyzer. 
ifip congress 1  appl.1. 
 evans  t.g.: grammatical inference techniques in pattern analysis. 
software engineering  1. 
 fidrich i . : lidi-1 mta sztaki tanulmanyok  reports     
1. 
f i d r i c h i .   uzsoky m.: lidi-1  
/a l i s t - o p e r a t i n g system on the 
 digttal department - v a r i a t i o n of the year 1. / mta sxtaki tanulmanyok  reports   1. 
vamos t.  vassy z.: the budapest 
robot - progmatic i n t e l l i g e n c e 
ifac world congress  boston-cambridge 
 
august 1*-1  1. 
1 
