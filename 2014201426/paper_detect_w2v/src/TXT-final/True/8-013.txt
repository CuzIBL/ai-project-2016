 
     a predetermined n e u r a l - l i k e function which makes a ternary l o g i c a l comparison to i t s neighbors in an array of s i m i l a r functions e x h i b i t s the a b i l i t y to categorize two-dimensional geometric patterns by the d i s t i n c t i v e n e s s of t h e i r shape d i r e c t l y . this property f i l t e r is but one of a family of s i m i l a r predetermined n e u r a l - l i k e functions which e x h i b i t gestalt recognition characteri s t i c s . 
     actual constructions of i n d i v i d u a l u n i t s and d i g i t a l simulation of arrays of these units have e m p i r i c a l l y supported the t h e o r e t i c a l foundation of t h i s work. the findings at t h i s time are p r e l i m i nary and are described here to inform the reader about the nature and scope of the work and the d i r e c t i o n in which f u r t h e r work w i l l proceed. 
     the author feels that the demonstration of a 
     n e u r a l - l i k e array with g e s t a l t - l i k e properties for recognizing patterns represents a step in demons t r a t i n g that the gestalt c a p a b i l i t y of the human being may be mechanistic in nature and can event u a l l y be implemented by a r t i f i c i a l means. the u t i l i t y of t h i s pattern recognition system is obvious for two-dimensional p r o j e c t i o n s . the economics of such a device as compared to other methods of r e c o g n i t i o n look favorable. thus  t h i s work not only indicates the t h e o r e t i c a l p o s s i b i l i t y of g e s t a l t - l i k e functions  but is expected to r e s u l t i n u s e f u l a p p l i c a t i o n s . 
introduction 
     the method of pattern recognition described here is one that is aimed at recognizing shapes and patterns d i r e c t l y from the p a r t i c u l a r features of each pattern as a u n i t and not necessarily the i n d i v i d u a l c h a r a c t e r i s t i c s of the p a t t e r n . this is accomplished through a n e u r a l - l i k e array of l o g i c a l f u n c t i o n s . this array d i f f e r s from the perceptron concept of rosenblatt*. it consists of predetermined functions connected in a regular array with 
i t s nearest neighbors. 
     the german word   g e s t a l t   is defined in webster's unabridged dictionary as  a s t r u c t u r e or systems of phenomena whether p h y s i c a l   b i o l o g i c a l   or psychological  so integrated as to c o n s t i t u t e a f u n c t i o n a l u n i t with properties not derivable from i t s p a r t s ; also the pattern or f i g u r e assumed by such a system . the work described here has been 
rosenblatt  f.  the perceptron of receiving and 
recognizing automation  report 1-1  kuenel 
aeronautical laboratory  i t h i c a   n.y.  jan. 1 aimed at recognizing patterns or geometrical f i g u r e s in two dimensions d i r e c t l y from the features of the 
patterns 	themselves. 
objectives 
     the primary objective of t h i s work has been to demonstrate that a group of neuron-like functions operating together can have a c a p a b i l i t y of sensing the form of a pattern in a gestalt mode. the demonstration of t h i s c a p a b i l i t y can provide e v i dence that evolutionary growth of physiological neuron structures leads to gestalt processes. 
     to demonstrate t h i s   one p a r t i c u l a r function   d i g i t a l comparison  has been examined in d e t a i l . the choice of t h i s function was made on an empiri c a l basis as no t h e o r e t i c a l means have yet been found that can pre-determine the effectiveness of any p a r t i c u l a r f u n c t i o n for pattern r e c o g n i t i o n . if an e m p i r i c a l l y selected function can provide the c a p a b i l i t y for gestalt pattern r e c o g n i t i o n   i t 
may be expected that other functions can also p r o vide it as w e l l as surpass i t   since extensive t h e o r e t i c a l work does not e x i s t   the i n d i c a t i o n of even rudimentary gestalt pattern recognition derived using an e m p i r i c a l l y selected function p r o vides a f i r s t step in t h i s d i r e c t i o n . 
     another primary objective is to construct a u s e f u l   low cost pattern recognition system that requires neither s e l f learning c a p a b i l i t y nor prescreening for normalization as to s i z e   o r i e n t a t i o n   shape  r o t a t i o n   shading  or varying de-
grees of backgound noise. the usefulness of such a system is obvious. i t s use in areas such as map reading  f i n g e r p r i n t a n a l y s i s   o p t i c a l scanning and many other applications are possible if the system can be r e f i n e d to a high degree. 
     a f i n a l o b j e c t i v e is the understanding of the methods by which l o g i c a l functions can be used to implement neuron-like action and constructs for 
determining the effectiveness of these techniques. the methodology used here has been to consider l o g i c a l functions that might be important in neural arrays  construct such functions and determine t h e i r a c t i o n i n d i v i d u a l l y and in arrays. thus  as opposed to a random or learning approach  the construction of the system is predetermined  traceable  and implies learning by the experimenter of the i m p l i c a t i o n s of the approach  not learning by the model or system i t s e l f . 

-1-

other work 
　　the work of rosenblatt1 and other workers in the perceptron field have considered arrays of neural-nets for pattern recognition. however  they are considering randomly connected arrays which have learning properties. 
   similary work has been done in feature detectors by babcock et a l 1 . they have considered logical one and two dimensional arrays of neuron-. like cells and logical functions for these cells such as exclusive or circuits which provide edge detection. other studies carried out by babcock  including differential geometry and logical calculus  have provided a preface to some of the 
work that is reported here. 
status of the present work 
the present work is only in its i n i t i a l stages. 
however  important results have been obtained that indicate that a gestalt process can result from the array of predetermined functions. therefore  it is felt that it is important to report the work at this stage of its completion  as well as to indicate the manner in which future work w i l l be pursued towards a final conclusion. 
formulation of the array 
predetermined neural functions 
   as opposed to attempting to develop analogs of actual neural functions  identification of functional characteristics of logical networks that 
might have important properties in neural arrays were considered. there are a great variety of logical functions from which to choose. however  the usual logical functions were avoided  since a large amount of work has already been accomplished with these. instead  functions that might be important from the physiological point of view were selected. 
deterministic functions 
　　because these functions are logical  they are expected to be deterministic. thus  the action of any array of logical functions in i t s e l f ought to be deterministic. however  where these logical functions interact with 
each other  it is sometimes d i f f i c u l t to understand the ensuing action of their 
rosenblatt  f.  principles of neurodynamics  washington  d. c  spartan  1 
babcock  m. l. et a l   some principles of preorganization in self organizing systems  technical report #1  contract #1  1   onr project #nro 1  office of naval research  1 june 1 
-1-
operation. mathematical and logical formulations may be made  but these are not always useful or descriptive. 
     however  in this case  as w i l l subsequently be duscussed  it was found that the logical functions that are considered here have a special property. they may be probabilistically dependent upon the time at which changes in the input of the system occur. this implies that while the logic of any given situation can be determined  the choice of combinational conditions of different alternate configurations is dependent upon the time upon which input changes occur with respect to a time reference. thus  the action of the network as a whole can be a probabilistic function of the time at which input stimuli are applied. 
     the i n i t i a l choice for a predetermined function was to investigate the concept of comparison. it was considered that an individual neuron in an array must do its work in concert with i t s neighbors. therefore  it must continuously compare its own action with that of its neighbors. one can then consider an array where every neuron is comparing its own action with others in terms of input signals presented 
to the array. 
the comparison function 
     the concept of comparison is basically an analog concept. two signals are compared with each other to determine if one is higher or lower than the other. this is illustrated in figure 1. a reference signal for comparison is shown on the abscissa and labeled 'c'; the unknown signal is shown on the ordinate and labeled 's'. if both the reference and the signal are the same  a comparison exists. however  a l l physical comparators have a f i n ite inaccuracy. this band of inaccuracy may 
be considered as the resolution of the comparator  and is shown by a region parallel to the locus of comparison points. if the coordinates of two signals occur in this region  it is said that the signals are identical in 
magnitude within the resolution of the system. however  outside this region if the signal is larger than the reference  there is a region of positive excursion of the output signal and symmetrically  if the signal is lower than the reference  there is a region of negative excursion. it is important to note that a l l three regions are of equal importance as far as information is concerned. the signals are either comparable in amplitude or they are different  and the direction of difference is indicated. thus  two kinds of information are simultaneously provided; namely the signals compare or don't compare  and if they don't compare  which direction the signal is with respect to the reference. 

signed ternary logic  stl  
     interest is in a digital function as opposed to an analog function. representation of a digital comparison must include both the concept of comparison and the concept of direction from the reference when no comparison takes place. this can certainly be represented in binary form by two bits of information with one state of the four possible not allowed. however  for the purpose of comparison  this seems to be an a r t i f i c i a l method of considering a digital comparison. a direct relationship with digital comparison is found when one uses signed ternary logic 1 . in signed ternary logic  there are three states: zero  minus and plus which may also be considered as zero  ' + ! ' and f - l ' . the use of the latter notation has been selected since it implies a f i n i t e signal level or amplitude for either a a+l* or ' - 1 ' condition. while signal levels may be higher than '+1' or ' - 1 '   they may be considered as logically limited in this value. 
     while ternary arithmetic and logic may be more d i f f i c u l t to manipulate  it is both usef u l for descriptive purposes and straightforwardly implementable in terms of hardware. it is used here primarily for its descriptive nature. 
     since binary and signed ternary logic signals are sometimes used together  we w i l l use the notation of left hand subscript 1 or 1 to indicate whether a signal is signed ternary or binary. the indifferent state   i . e .   no subscript  w i l l be considered that of signed ternary logic. 
logical comparator 
　　a functional diagram of a signed ternary comparator is shown in figure 1. two ternary input signals  namely the signal ' s' in the reference !c' are both shown as input to the function. the single output 'q' is also ternary. derivation of the truth table for this comparator is shown in figure 1 and proceeds as follows. if both the signal and the reference are the same  there is a comparison and the output of the comparator should be zero. thus  the conditions  1  1    +1  +1   and   - 1   -1  a l l have an output of zero. however  if the reference signal is zero and the input signal is ' + 1 '   then a comparison does not exist  the output is in the positive region of comparison and the output i s ' + l ' . if the reference signal is lowered to ' - 1 '   it is s t i l l in the same region and cannot go above the ' - l ' level. there is a symmetrical situation when the input signal is negative with the output ' - l 1 . the last case occurs when the input signal is ' 1 '   but the reference is '+1'   i . e .   higher than the input signal   therefore the output is in the negative region or '-l' and symmetrically '+1' when the reference signal is negative for '1' input signal. 
     examination of the truth table shows that the output is identical to input for a '1' comparison signal and the output is the complement of the comparison signal for '1' input. it is this logical function  the logical comparator  that has been the primary target of 
investigation. 
action under self feedback 
　　as implied in the paragraph on deterministic functions  the logical comparator can have a probabilistic choice of states. this occurs under conditions of self feedback. this occurs when the output is fed directly back into the reference input as shown functionally in figure a. under this condition  one stable and three dynamic states occur. this action can be seen by reference to figure 1. for the condition where the signal is '1' and the output is '1'  thus the reference input is ' 1 '     it can be seen from the truth table that the stable output state is the 'o' state. figure 1a shows the stable state when the input is ' 1 ' . if the input takes the '+l' state  the output must also be '+1' since the reference value is '1 i n i t i a l l y . however  the reference value then also becomes '+1' and a condition where both signals are identical occurs and the output changes to ' 1 ' . this repetitive process occurs with the time delay of the function becoming the determinant of the periodicity. this is shown in figure 1b  and is representative of a positive half-wave signal. for reference  this alternating plus w i l l be designated as a '+1* signal and is purely notational. if the output is a ' - 1 '   we have in the same manner a symmetrical negative alternating state and this is shown in figure 1c. however  a fourth state occurs if the input is set to zero when the comparator is an alternating state 
with a positive or negative value at the output. for example  assume the output is positive at the time the input signal is set to ' 1 ' . since the reference input is   + l ' and the input signal is ' 1'  the truth table shows that the output w i l l become ' - l ' . the '-l' output state is fed back to the reference signal. when the reference becomes '-l' and the signal ' 1 '   the output becomes   + l ' so in this condition we have a f u l l wave alternating signal as shown in figure 1d. for notation  this is called a '1' level state. 
these four states show action with direct 

grosch  h. r. j .   signed ternary arithmetic  
memo n-1  digital computer laboratory  
cambridge  massachusetts  may 1  1  feedback. other logical functions may be serially connected in the feedback loop to provide a large variety of conditions for feedback. use of this capability w i l l be subsequently discussed. 

unpublished internal memorandum. 
-1-

     it is evident from the above discussion that two separate states occur for the '1' input under 
direct feedback conditions. these are illustrated by figures 1a and 1d. the choice of state is dependent upon which part of a half-wave cycle as illustrated in figures 1b and 1c in which the i n put is set to ' 1 ' . if it occurs in the active 1＜ half-cycle  the condition is that of a f u l l wave alternating state. thus  the selection of the alternating states depends on which half of the period of the input switching occurs. as 
determined by actual tests of circuitry  the periods are approximately equal  providing essent i a l l y a binary choice as to state selected. 	if input switching is asynchronous  then there are two output states  equally likely  depending upon the time at which input switching occurs. 	for the synchronous case  the difference in delays in individual neuron circuits must be taken into account  but when these are accounted for  switching becomes a deterministic process. 
     as a result  the function is a purely logical element in which a probabilistic choice of states  depending upon input switching time  is an internal characteristic of the function. 
the ternary weigher 
     in order to make effective use of the proba b i l i s t i c nature of feedback in the logical comparator  useful logical functions may be placed in series with the feedback movement. a particular function  the ternary weigher  has been used. the purpose of this function is to allow each neuron to compare itself with its nearest neighbors. its function is to take a number of input signals and determine whether one type of input signal is predominant over others or 
whether they are equal. it is essentially a threshold circuit in which the ''1 state  a stable condition  occurs around the threshold point. the function of this circuit is shown in figure 1 for any number of inputs in diagram-
matic' fashion. figure 1 shows the truth table for a '1' input ternary weigher. as can be seen  it is simply an algebraic additive function of inputs. its simplest reduction to practice is that of a kirchkoff adder as shown in figure 1 
with balanced suppression to bound the '1' state. 
the logical comparison neural function 
     the logical comparison neural function essentially is one function in an array of such functions. consider a regular array of m rows and n columns that make up a matrix of neural functions. the 1th r o w a n d the j c   column w i l l be the function of interest. since the function w i l l be interconnected with its neighbors  they 
cannot be considered separately. 
the structure 
     the logical structure of the logical comparison neural function is shown in figure 1. the ternary logical comparator receives i t s signal  sij  from an input sensory level or from a preceedlng logical element. 	this 
-1-
signal is also fed out to i t s nearest neighbors in the matrix  which  in this case  are the four closest orthogonal neighbors. 	the reference signal comes from a ternary weigher in series with the feedback loop from the output of the logical comparator and also receiving the four input signals from the four nearest orthogonal neighbors in a symmetric manner. 
     in operation  the feedback loop w i l l only become active when the four input signals from the nearest neighbors sums to ' 1 '   ' + 1 '   or ' - 1 ' . therefore  the action of the local circuit becomes dominant only when its nearest neighbors are evenly divided or if '1* input states occur  resulting in '+1 or ' - 1 . since the four inputs from neighbors are a l l equivalent  only combinations and not permutations of input states are considered for the logical action of this function. for a ternary func-
tion of four inputs and one ou tput  excluding the feedback loop   there are 1 x 1 
possible logical connectives  and 1 input combinations. however  only a few of these are important and the remaining ones do not occur. first  consider for simplification the reduction of the condition of the four inputs from nearest neighbors from 1 cases to 1 cases of interest. this is shown in figure 1. the four signals are shown with various configurations of inputs for 1 cases. the algebraic sum of the inputs is shown and the condition of output is indicated with the letter 'l f indicating a saturated condition. a saturated condition implies that the feedback mechanism w i l l have no effect on the output of the weighing circuit. as a result  there are five output states which are to be considered. these are the ' 1 '   ' + 1 '   ' - 1 '   '-1l 1   and '-1l' states. when the output of the weigher of these values is compared with the input signal  there are fifteeen sets of conditions as shown in figure 1. first  the output is considered with the feedback loop open and this condition is shown in the third column. when feedback is applied as shown in the last column  it can be seen that this feedback has no effect on the 'l'  saturated  states. in region 1 for '1' signal inputs  the alternating state '1' is the only unusual one. in region '1' for positive input  the alternating half wave  +1  is the only unusual output. in region '1' for negative input  the alternating negative state  -1  is the only unusual one. 
     for the case where we have a binary input  only regions ''1' and '1* are of interest. that i s   we may ignore the '1' signal input state. this is the case when we have a photocell representing a light or dark exposure as the two conditions of input. here  light is represented by ' + 1 ' and darkness represented by ' - l *   
realizable circuitry 
　　circuits have been built that perform this function. there are a variety of methods 

for implementing this circuit  but one is shown here in figure 1 to illustrate one reduction to practice using complementary transistors. a photocell supplies an input signal. the inputs to the nearest neighbors along with the feedback from the output are fed into a complementing circuit with clamped output levels. the complementing circuit consists of two complementary symmetry transistors operating in a switching mode. the input signal is either a positive or negative level and is added  algebraically  to the output of the complementing circuit 
at the output mode. the feedback loop  using stabistor limiting to overcome output noise for the '1' state  is also shown. 
     the circuit could be produced by microelectronic techniques with many of these circuits on a single substrate already connected in the proper array form. 	other 
methods of implementation include magnetics 
and cryotronic devices. 
arrays of functions 
     as indicated above  these functions are connected with their nearest neighbors in an array of size  m x n. there are a number of possible interconnections in the array. the primary connection is that of the nearest orthoginal neighbors. 
the primary interconnection 
     the primary interconnection method is illustrated in figure 1 which shows how the array is interconnected to its nearest neighbors. the input signal for a particular ele-
ment enters the 's' input of the function and is deployed to the weighing circuit of the four nearest neighbors as well. each of the four nearest neighbors is thus providing signal to the weighing circuit. the purpose then of this array is to compare the input signal of a function with the input signals of i t s nearest neighbors. this has been the primary function studied although several others have been considered and tried. 
alternate interconnections 
     there are a number of alternate configurations for interconnection. some of those which have been considered are: 
1. interconnection to the nearest four diagonal neighbors. 
1. connection to a l l of i t s neighbors within area with weighing of further distant neighbors at lower values. the distribution of weights might be gaussian or some other distribution. 
1. interconnecting the output of the neighbor functions to the input of the reference signal. 
     only the diagonal neighbors have been tested at this time to any degree for these alternate configurations. 
properties of the array 
     the array of logical neuron functions has properties that are not apparent when the individual neuron is looked at. the purpose of this section 
is to look at the output characteristics of the array for given types of inputs to attempt to understand the characteristics of the array when patterns are applied to i t . the method of presentation w i l l be to show an input pattern in a matrix 
and indicate the output pattern that may occur. since the number of patterns that can be applied is large  only those which can easily i l l u s t r a t e the capabilities of the array w i l l be shown here. 
invariant ratios 
     the output of the array consists of signals from each element. each may have five states;  +1    +1    1    -1   and  -1 . when a pattern is applied to the input  a certain number of each type of output state occurs   i . e .   there may be 
1 members with '+1' states  1 with ' - 1 '   etc.  the ratios of these numbers with one another form relationships that are distinctive for each type of pattern  and remain invariant as the patterns are altered by linear an  1＜ rotational transformations  and for size and shading changes as well. the number of '1' outputs are ignored as these are rest states. this last condition makes the output ratios independent of matrix size as well. 
     some relatively invariant ratios are shown in figure 1. as patterns become more complex  simple  single invariant ratios do not always occur  but a set of ratios does. for example  for triangles there are six significant ratios  but these separate isoceles  right  and scalene triangles from one another and also indicate difference in shading. that i s   there is one ratio for a f i l l e d right triangle  another for a partially empty one  etc. 
     these ratios may be considered on a total screen basis or in a localized area. for localization  a second level of comparison functions can determine separation of multiple patterns. for example  a diagonal  +1  -1  indicates a corner  and a diagonal  +1  -1  indicates a diagonal line. 
     it is expected that ambiguities among different types of patterns  especially with multiple patterns  w i l l occur. however  the a b i l i t y to separate patterns into classes without ambiguity   i . e .   the classes are orthogonal sets  is not possessed by the human brain either. 
other configurations 
     there are a number of other configurations that can be tried to determine if pattern invariances also arise and how they differ from the i n i t i a l ones reported. two of these are the use of ternary i n puts where there is a gray signal designated by 1  and using diagonal neighbors as opposed to orthogonal 

-1-

neighbors to determine if rotation by 1＜ in this case is identical to the nearest neighbor case. the use of weighted neighbors   i . e .   bringing neighbors from the nearest points with one set of weights  diagonal neighbors with a second set  further neighbors with lesser weights  possibly a l l the way out to the parimeter for each pattern  is another possibility. this method implies a large array of interconnections which would probably be determined to correspond with some function of distance from the neuron. these functions might be gaussian  exponential  or simply discrete 
step functions. 
     of these  only an i n i t i a l look at diagonal neighbors and the '1' input case have been tried. the preliminary results are s t i l l inconclusive and connot be reported here. 
the method of utilization 
ratio detection 
     it is shown that the applied patterns cause characteristic action on the neural array where output has invariant ratios for different patterns. it is then necessary to provide a detector scheme for determining the value of the ratios. the f i r s t method considered is the simplest. it uses a single layer of photo-detectors with a single layer of neurons. the output of the neural functions are a l l connected together through an array of diodes and capacitors to separate positive  negative  ac  and dc signals from one another. this is illustrated in figure 1 and can be used for either the nearest neighbor  diagonal neighbor  or weighted neighbor case. thus  there are four outputs provided; either ' + 1 '   ' - l '   alternating minuses  -1  or alternating pluses  +1 . the '1' states are ignored. the amplitude of these signals are compared in terms of raties to determine the pattern output. this ratio detector has been used effectively and it does represent the simplest case of pattern detection. the method is simple but very powerful. 
successive arrays 
     the case for one layer of functional neurons feeding into a successive layer may also be considered. this is illustrated in figure 1 for n-layer detection. the layers may be identical or they may be different functions as required. the f i n a l detector in this system might be a ratio detector or some other device. 
parallel arrays 
     the case for parallel arrays is shown in figure 1. 	here  the input array is fed to multiple arrays of neural functions. 	for example  unit 1 might be the nearest neighbors  unit 1 the nearest orthogonal neighbors and unit 1 some other configuration. 	in this manner  higher degrees of rotation and combinations of functions might be taken into account. 
logical methods for further reduction 
　　the output of a neural logical comparator array might be directly fed to a second device for 
logical reduction based upon the output pattern directly. this logical detector would be set up to take a small number of patterns and pattern associations and further refine them for output identifications. the design of such a detector is in process. 
digital simulation 
   a number of different functional logical neuron have been constructed and tested. their operation is as predicted from the theory. however  as these are put together in arrays  it becomes expensive to build them unless no modification is anticipated. at this time in the project  the f i n a l configurations for these neurons have not been completely determined. therefore  it has been desirable to find a method where the system could be tested empirically  but changed easily for experimental purposes. a natural answer to this problem is the use of d i g i t a l simulation. such simulation has been implemented and operated. 
purpose 
   the purpose of the simulation is to allow the investigation of complete logical arrays of functional neurons  operating in the actual manner of the individual neurons. thus  a simulation of circuitry has been implemented  not a mathematical simulation. patterns can be applied to a matrix of sensors and logical neurons in a simulated mode with the outputs processed as though they had actually been implemented with circuitry. the f l e x i b i l i t y of the simulation allows the process to be changed by simply rewriting parts of the program. 
method of simulation 
the technique of simulation uses the general 
purpose system simulator  gpss/1  to simulate the action of each neuron in the array as well as the input detectors and the ratio output detector. input to the simulation is an xy matrix of symbols which represent the pattern. i n i t i a l l y this pattern has been inserted by punched cards. the type of pattern detected la also printed out using a ratio detector type of analysis. 
capability of the simulation 
   the present simultion allows input matrices of up to 1 x 1 to be examined. however  in practice  smaller size matrices have been used because processing time is proportional to the square of the size of a side of a matrix. processing time  including compiling time  of a 1 x 1 matrix is about 1 minutes. at present  the simulation is capable of simulating the orthogonal neighbors  diagonal neighbors  and binary and ternary inputs. 

-1an example of the printout of this simulation is shown in figure 1. 
　　an additional capability has just been implemented for use in the simulation. this addition allows input patterns to be drawn directly on a cathode ray tube  crt  with a rand tablet for input. the patterns put in through this direct access method are processed by the simulation program directly and the output arrays and detected pattern identifications are displayed directly on the crt as well as being printed out on the printer. this present implementation uses an ibm 1 computer for processing with the average processing time for a pattern in a 1 x 1 matrix of about 1 seconds. this program is faster than the card input program since the program is not recompiled each time it is used. this direct access method has only been recently developed and no significant amounts of data have been acquired at this writing. 
   about 1 patterns have been tried by the card input method including many of those worked out originally by hand for comparison purposes. a l l of these test cases gave results as expected. time delays for the various elements have been included in the simulation with a random variation about a mean to account for the dissimilarity of real circuits. thus  multiple arrays may be concatenated with one another with a l l of the alternating states acting in a realistic manner. 
summary and conclusions 
   a predetermined neural-like function which makes a ternary logical comparison to i t s neighbors in an array of similar functions exhibits the a b i l i t y to categorize two-dimensional geo-
metric patterns by the distinctiveness of their shape directly. this property f i l t e r is but one of a family of similar predetermined neural-like functions which exhibit gestalt recognition characteristics. 
   actual constructions of individual units and d i g i t a l simulation of arrays of these units have empirically supported the theoretical foundation of this work. the findings at this time are preliminary and are described here to inform the reader about the nature and scope of the work and the direction in which further work w i l l proceed. 
   the author feels that the demonstration of a neural-like array with gestalt-like properties for recognizing patterns represents a step in demonstrating that the gestalt capability of the human being may be mechanistic in nature and can eventually be implemented by a r t i f i c i a l means. the u t i l i t y of this pattern recognition system is obvious for two-dimensional projections. the economics of such a device as compared to other 
methods of recognition look favorable. thus  this work not only indicates the theoretical possibility of gestalt-like functions  but is expected to result in useful applications. 
-1-
