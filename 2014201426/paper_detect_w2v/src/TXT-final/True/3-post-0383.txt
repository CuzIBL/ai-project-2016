relational learning for email task management 
rinat khoussainov and nicholas kushmerick
department of computer science
university college dublin  ireland
{rinat  nick} ucd.ie
　
1 introduction and background
today's email clients were designed for yesterday's email. originally  email was merely a communication medium. today  email has become a  habitat   ducheneaut and bellotti  1 -an environment where users engage in a variety of complex activities. our goal is to develop automated techniques to help people manage complex activities or tasks in email. in many cases  such activities manifest the user's participation in various structured processes or workflows. the central challenge is that most processes are distributed over multiple emails  yet email clients are designed mainly to manipulate individual messages.
　a task-oriented email client would allow the user to manage activities rather than separate messages. for instance  the user would be able to quickly inquire about the current status of unfinished e-commerce transactions or check the outcome of recent project meetings. some process steps could be automated  such as automatically sending reminders for earlier user's requests. similarly  the email client could remind the user when her/his input is required in some activity.
　previous work in this area has mainly focused on two distinct problems: finding related messages and semantic message analysis. the goal of finding related messages is to group emails according to tasks and possibly establish conversational links between emails in a task  e.g. extract a task from email given a seed message  dredze  1  . note that tasks need not correspond to folders  folders can be orthogonal to tasks ; and conversations need not correspond to syntactic threads  users can use the  reply  button or the same subject to start a semantically new conversation .
　semantic message analysis involves generating metadata for individual messages in a task that provides a link between the messages and the changes in the status of the underlying process  or the actions of the user in the underlying workflow. for example   cohen et al.  1  proposed machine learning methods to classify emails according to the intent of the sender  expressed in an ontology of  email speech acts .
　our key innovation compared to related work is that we exploit the relational structure of these two tasks. the idea is that related messages in a task provide a valuable context that can be used for semantic message analysis. similarly  the activity-related metadata in separate messages can pro-

 
　　this research was funded by the science foundation ireland and the us office of naval research.vide relational clues that can be used to establish links between emails and group them into tasks. instead of treating these two problems separately  we propose a synergetic approach where identifying related emails is used to assist semantic message analysis and vice versa.
our contributions are as follows:
　 1  we propose a new method for identifying relations between emails  based on pair-wise message similarity. we extend the similarity function to take into account available structured information in email.
　 1  we propose a relational learning approach  neville and jensen  1  to email task management. we investigate how  a  features of related emails in the same task can assist with classification of speech acts  and how  b  information about speech acts can assist with finding related messages. combining these two methods yields an iterative relational algorithm for speech act classification and relation identification.
　 1  we evaluate our methods on a real-life email corpus.
1 problem decomposition and email corpora
in a non-relational approach  we would use the content of a message to assign speech acts  and some content similarity between messages to identify relations. in a relational approach to speech act classification  we can use both the message content and features of the related messages from the same task. for example  if a message is a response to a meeting proposal  then it is more likely to be a meeting confirmation or refusal. similarly  we can use messages' speech acts to improve relations identification  e.g. a request followed by a delivery are more likely to be related than two requests.
　therefore  we can identify four sub-problems:  p1  find relations in email using content similarity only  i.e. without using messages' speech acts ;  p1  classify messages into speech acts  semantic message analysis  using only the message content  i.e. without using information about the related messages ;  p1  use the identified related emails to improve the quality of speech acts classification for a given message;  p1  use the messages' speech acts to improve identification of relations  links  between emails. these four sub-problems can be combined into a synergetic approach to task management based on an iterative relational classification algorithm illustrated in figure 1.
we used the pw calo email corpus  cohen et al.  1 
for our study. it was generated during a 1-day exercise conducted at sri specifically to generate an email corpus. during
1: identify initial relations  p1  1: generate initial speech acts  p1  loop
1: use related emails in the task to clarify speech acts  p1 
1: use speech acts to clarify relations between emails  p1 
1: update messages relations
　1: update messages speech acts end loop
figure 1: iterative relational algorithm for task management
table 1: identifying relationsprecisionrecallf1p1no time decay  thresh. prune
time decay  thresh. prune
no time decay  threads prune1 1
11 1
11 1
1time decay  threads prune111p1using speech acts111this time a group of six people assumed different work roles  project leader  finance manager  researcher  etc  and performed a number of activities. each email has been manually annotated with labels linking it to other emails and also with labels showing the intent of the sender  expressed in a verbnoun ontology of  email speech acts   cohen et al.  1 . examples of speech acts are  propose meeting    deliver information . for this study we only use 1 most frequent verbs   propose    request    deliver    commit    amend   as speech acts. to perform experiments  we need to ensure our training and testing sets are unrelated. so we generated 1 non-overlapping corpora with messages received by 1 different users   user 1   1 emails; and  user 1   1 emails .
1 solutions and results
identifying relations without using speech acts  p1 . for each email in the corpus  we find the most similar preceding  in time  email using a pair-wise message similarity. our similarity functions takes into account not only the textual similarity between messages  but also the available structured information in email  such as send dates  and message subjects. the textual similarity is defined as the tf/idf cosine similarity between email texts. however  the terms appearing in the subject get a higher weight  since people often summarise email content in the subject making subject terms more important. similarly  related messages tend to be sent around the same time. so  two messages with a large send time difference are less likely to be related. we use the following formula: sim m1 m1  = cosine sim m1 m1    exp  α   norm time diff m1 m1    where cosine sim is the cosine message similarity  norm time diff m1 m1  is the time difference between messages divided by the maximum time difference  and α is a time decay parameter.
　there may be multiple pairs of messages with non-zero similarity in a corpus  however  not all are actually related. hence  we would like to be able to prune the links suggested by the similarity function. one way is to use some threshold value: if the similarity is below the threshold  the messages are not related. another way is to use email threads: messages from different threads are not related. table 1 compares different methods on the  user 1  corpus.
　identifying relations using speech acts  p1 . we treat the problem of finding related messages using speech acts as a supervised learning task. we assume that we have access to a
　training set  which provides the correct labels for both speech acts and message relations. the goal is to use this information to improve our performance on an unseen email corpus. from the given labelled email corpus  we produce a set of training instances as follows. for each message in the corpus  child   we identify the most similar preceding message  parent  using the previously defined similarity function. for each such pair of messages  we create one training instance with one numeric feature for the similarity between messages  and two subsets of binary features for each possible speech act  1 features in total . the first binary subset is filled with speech acts of the parent message: 1 if the message has this speech act  1 otherwise. the second binary subset if filled with speech acts of the child message. the class label for the instance is positive if the corresponding messages are related and negative otherwise. the resulting classifier can then be used to identify links in an unseen email corpus.
　to evaluate the potential for improvement from using speech acts  we tried to train and test a classifier on the same  user 1  corpus. we use the smo as our classification algorithm  platt  1 . as shown in table 1  using speech acts worked here as a more effective pruning method resulting in the increase in precision with only marginal loss in recall.
　classifying speech acts without related messages  p1 . as in the previous case  we treat the problem of email speech act classification as a supervised learning task. we use the standard text classification methods with bag-of-words document representations similar to  cohen et al.  1   and smo as the classification algorithm.
　classifying speech acts using related messages  p1 . we adopt here the relational learning terminology from  neville and jensen  1 . each email message is represented by a set of features: intrinsic features  derived from the content of the given message; and extrinsic features derived from the properties of related messages in the same task. to represent the intrinsic features of a message  we use the raw term frequencies as in p1. to represent the extrinsic features of a message  we use the speech acts of related messages. we want to know whether speech acts of  surrounding  messages can help in classifying speech acts of a given message. for each speech act  we produce a separate binary classification problem where the goal is to identify whether the message has this act or not.
　each message can be viewed as a response to its parent message and as a cause for its children messages. in addition to looking at the immediate ancestors and descendants of a message  we can also include features from several  generations  of ancestors and descendants  e.g. parents  grandparents  children  grandchildren . for each  generation  of related ancestor and descendant messages  we use a separate set of extrinsic features with one feature per each possible speech act. the number of generations included into extrinsic features is regulated by the depth of lookup parameters: one for ancestor messages and one for descendant messages  1 lookup depth means we use only intrinsic features .
we evaluated speech act classification using the human-
table 1: speech acts classificationancest./descend. lookup1111amend  p=1 111 v1commit  p=1 1111 vdeliver  p=1 11 v11 vpropose  p=1 111 v1request  p=1 1111 vfor all speech acts a do
train ca on the training set to classify speech act a using only intrinsic features
　train ra on the training set to classify speech act a using intrinsic+extrinsic features end for
train l on the training set to classify email links
/*problem 1*/
set relations in the test set using similarity function
/*iterative classification*/ for iteration =1...i do
/*problem 1*/
use classifiers ca to set speech acts in the test set
/*problem 1*/ theshold =1 for subiteration =1...k do for all messages m in the test set do
for all speech acts a do
obtain confidence for  m has a  using ra
　obtain confidence for  m has no a  using ra end for
end for
for all cases where confidence for  m has/has no a  is greater than threshold update speech acts of m threshold = threshold/1
　evaluate performance for speech acts end for /*problem 1*/
use l to find links between emails in the test set
　evaluate performance for relations end for
figure 1: iterative relational algorithm  detailed version 
annotated  correct  relations between messages and the correct speech acts for related messages on the  user 1  corpus. notice that using the correct speech acts for related messages does not mean that we use the class label of an instance among its features. each message uses only the speech acts of the related messages  but not its own speech acts. classification accuracy is not a good measure of performance on imbalanced data sets  so we use the kappa statistics instead  cohen et al.  1 . the results in table 1 are obtained in 1-fold cross-validations repeated 1 times for statistical significance testing  paired t-test .  v  marks statistically significant improvements over the base line  both lookup depths are 1 .
　iterative algorithm for task management  p1 + p1 + p1 + p1 . the results for p1 and p1 have demonstrated promise for our synergetic approach to task management. therefore  here we combine the described methods for solving p1-p1 into the algorithm shown in figure 1  which is a detailed version of the algorithm in figure 1 .
　in our experiments  we used the  user 1  corpus as the training set and the  user 1  corpus as the test set. to ob-

figure 1: speech acts classification  iteration 1
tain confidence scores for smo  we used the distance from the hyper-plane normalised over all test instances. we use the similarity function with time decay and threshold-based pruning to identify the initial links between messages  p1 . we repeated the inner speech act classification loop 1 times  k = 1  and the outer iteration loop 1 times  i = 1 .
　the initial links identification resulted in precision = recall = f1 = 1. it improved after the first iteration to precision=1; recall=1; f1.1  and remained the same after the second iteration. figure 1 shows how the speech acts classification performance was changing during the first main iteration. once the links improved after the first iteration  we were able to further improve the performance for the  request  speech act at the second iteration to kappa=1.
　discussion. our experiments demonstrated that:  1  structured features in email  such as message subject and send dates  can be very useful for identification of related messages and grouping them into email tasks;  1  the properties of related messages in the same task can be used to improve the semantic message analysis. in particular  the features of related messages in a task can improve the performance of the email speech acts classification;  1  the semantic metadata in messages can be used to improve the quality of task identification. in particular  taking into account speech acts of messages improves identification of links between emails.
　finally  our combined iterative classification algorithm was able to simultaneously improve performance on both speech acts and message relations. these results provide a good empirical evidence in favour of the proposed synergetic approach to email task management.
