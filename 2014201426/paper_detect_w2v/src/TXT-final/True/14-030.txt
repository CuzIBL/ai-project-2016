 	introduction 

dynamically quantized  do  spaces have been developed 
 o'rourke  in response to the need for high-precision  high-dimensional hough-like transforms.  ballard; sloan and ballard  their purpose is to cover a parameter space with a limited number of accumulators in such a way that fine precision is maintained where it is needed. 
o'rourke's solution to this problem is to maintain a binary tree of cells. each cell covers an n-dimensional rectangular region of the space. under certain conditions  the cell may be split along a particular dimension  and two sons created. under complementary conditions  sets of cells may merge. cell splitting is relatively simple  but the process of cell merging is quite complicated  for reasons which are explored extensively in  o'rourke . 
the solution presented here is based on a pyramid data structure  in which the number and connectivity  between fathers and sons  of cells is fixed. this data structure has the advantage that its resource allocation is fixed  and the cells and their connections may be reduced to a hardware implementation  e.g.  in vlsi.  the customary difficulty with the pyramid is that the boundaries of the cells  and hence the spatial resolution  are fixed  also. in this dynamically quantized pyramid  dqp   the boundaries of the cells are continually modified by means of a hierarchical warping process. essentially  each cell tries to track the mean position of data points in its part of the space. this estimate of the local mean is used to define the boundaries of the cell's sons. 
an experimental implementation has been built and subjected to various distributions  spatial and temporal  of data. the resulting quantizations are shown and discussed. 
the tradeoff between resource allocation and precision of result is a familiar one. the task of developing a histogram is an example. for a given range of data values  and a given precision with which we need to locate features of the histogram  e.g.  a peak   the usual procedure is to quantize the space uniformly  so that each cell covers a small part of the data space. all cells are of the same size  which is small enough to deliver an answer with the required precision. 
usually  the required precision determines the amount of resources  histogram cells  which are allocated to this task. sometimes  the precision we want cannot be achieved with the resources available. this is not often the case in one- or two-dimensional histograms. however  techniques which make use of histograms of high-dimensional data  four or more dimensions  are often resource limited. 
hough techniques 
hough techniques are based on the creation and subsequent analysis of n-dimensional histograms  usually called accumulator arrays.  the histogram cells tile a parameter space. local evidence  usually an edge element  in an image is mapped into this parameter space in a one-to-many fashion  generating a hypersurface in parameter space. thus  each piece of local evidence votes for a large number of possible parameter choices. when a feature of the type being sought  e.g.  a line  circle  or shape  is actually present in the image  these hypersurfaces will intersect  forming a peak in the histogram. 
this is an attractive paradigm for many low-level visual perception processes  ballard; sloan and ballard; o'rourke  but is computationally limited when the dimensionality of the parameter space becomes too large. the storage requirements for the histogram  accumulator array  become unreasonable  and the time required for generating all of the votes becomes excessive. 
1 

dynamically quantized spaces 
dynamically quantized  dq  spaces have been developed 
 o'rourke  in response to this need for high-precision  high-dimensional hough-like transforms. their purpose is to cover a parameter space with a limited number of accumulators in such a way that fine precision is maintained where it is needed. 
1*rourke's solution to this problem is to maintain a binary tree of cells. each cell covers an ndimensional rectangular region of the space. under certain conditions  the cell may be split along a particular dimension  and two sons created. under complementary conditions  sets of cells may merge. cell splitting is relatively simple  but the process of cell merging is quite complicated  for reasons which are explored extensively in  o'rourke . 
dynamically quantized pyramids 
the solution presented here is based on a pyramid data structure  in which the number and connectivity  between fathers and sons  of cells is fixed. this data structure has the advantage that its resource allocation is fixed  and the cells and their connections may be reduced to a hardware implementation  e.g.  in vlsi.  the customary difficulty with the pyramid is that the boundaries of the cells  and hence the spatial resolution  are fixed  also. in this dynamically quantized pyramid  dqp   the boundaries of the cells are continually modified by means of a hierarchical warping process. essentially  each cell tries to track the mean position of data points in its part of the space. this estimate of the local mean is used to define the boundaries of the cell's sons. 
a pyramid  tanimoto and pavlidis  is a full  balanced tree  in which each internal node has exactly 1n sons. for the purpose of spanning a parameter space  n is the dimensionality of that space. each node of the pyramid covers an n-dimensional rectangular region of the space  and divides this region into 1n sub-regions with an ndimensional cross-hairs. typically  this division is fixed at the center of the region. associated with each node is a count of the values entered within its boundaries. 
in a dynamically quantized pyramid  dqp   the position of the dividing cross-hain is stated in terms of a vector of percentages  rather than absolute position. the initial position of all crosshairs is  1 ... 1 . this is the same as the typical configuration of a fixed-boundary pyramid. to determine the absolute boundaries of a node / in a dqp  it is necessary to start at the root of the tree  which covers the entire space  by definition  and follow the path to /  calculating the absolute boundaries of each son node by applying the percentages associated with the father node to the absolute boundaries just calculated for the father node. 
the advantage gained is that a dqp may be hierarchically warped. consider a single node in the pyramid  e.g.  the root . when a value is added  the cross-hairs associated with the node is adjusted by moving it a small amount towards this new value. one way to do this is to take the weighted average of the position of the new value 
 weighted by a  and the old cross-hain position  weighted by la . this has the eftect of implicitly changing the boundaries  in absolute terms  of all of the nodes in the sub-tree rooted at this node. the value being inserted is then recursively added to the appropriate son. this will further warp the boundaries of the nodes in that sub-tree. 
the effects of this warping process are three-fold. first  the rectangular regions grow smaller near inserted values. each father node is adjusting its cross-hairs so as to evenly distribute votes among its sons. the resulting histogram tends to have the same number of votes in each bin. the information about the shape of the histogram is largely in the relative sizes of the bins. second  note that the configuration of the dqp is dependent on the recent insertion history. this is undesirable when the temporal sequence of insertions into the histogram is unimportant  or  worse  when it is based on some regular process  such as a raster scan of an image  which is irrelevant. on the other hand  when temporal sequence is important  as when the world is changing  this property provides an automatic focussing mechanism. finally  note that the previously inserted values  as represented by counts associated with each node  move around in the space. thus  the final counts may be wrong. this can be dealt with either by insisting that old votes fade with time as is appropriate in a changing environment  by separating the warping stage from the actual counting stage  or simply by accepting the inaccuracy. 
experimental results 
figure 1 shows the response of a two-dimensional dqp to a series of 1 samples taken from a single twodimensional gaussian distribution. figure 1 shows the response after 1 samples chosen from a second gaussian. figure 1 show the response when 1 samples from each of these two distributions were randomly intermingled. 
conclusion 
the preliminary experiments shown above indicate that the dqp shows promise as a solution to the spaceprecision tradeoff problem in multi-dimensional histogramming applications such as hough techniques. the space-efficiency is not as impressive as that demonstrated by  o'rourke   but this is offset by a relatively time-efficient insertion procedure. in particular  the dqp cannot ignore irrelevant dimensions of the space  and all nodes representing splits along these dimensions are essentially wasted. however  the fixed resource allocation and tree structure is ideal for hardware implementation  and certainly simplifies software implementation. 

the sensitivity of the dqp to the temporal sequence of votes can be controlled by manipulating the value of a  the feed-back parameter. when continuous tracking of moving peaks is desirable  use a constant value for a. when gradual convergence to a stable state is desirable  make ¦Á inversely proportional to the number of votes in the histogram so far.. when an initial training phase is to be followed by a final counting phase  leave ¦Á constant during the training phase and ¦Á=1 thereafter. 
