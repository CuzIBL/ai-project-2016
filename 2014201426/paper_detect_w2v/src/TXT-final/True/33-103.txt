some remarks on heuristic search algorithms 
lasz1 mero 
computer and automation i n s t i t u t e   	hungarian academy of sciences 

       i n t h i s communication the t e r m i n o l o g y and the n o t a t i o n s o f the paper o f m a r t e l l i  are used t h r o u g h o u t . a s i m i l a r t r e a t ment i s g i v e n i n the book o f n i l s s o n   1   . f a m i l i a r i t y w i t h a t l e a s t one o f these works is assumed to read t h i s paper. 
1 . a n improved v e r s i o n o f m a r t e l l i ' s a l g o r i t h m b 
       m a r t e l l i in h i s a l g o r i t h m b improved the c l a s s i c a l a l g o r i t h m a f o r f i n d i n g a minimal c o s t path in a graph u s i n g h e u r i s t i c e s t i m a t e s b y i n t r o d u c i n g a g l o b a l v a r i a b l e f which gives the g r e a t e s t r values achieved up to t h a t s t e p by a c l o s e d node. f is used to c o n t r o l whether the remaining c o s t s promised by t h e h e u r i s t i c e s t i m a t e s are i n accordance w i t h the p r o p a g a t i o n o f the a l g o r i t h m so f a r . a l g o r i t h m b uses the h e u r i s t i c e s t i m a t e s o n l y i f they promise to improve the g l o b a l f v a l u e   o t h e r w i s e i t uses o n l y the g - e s t i m a t e s . t h i s way a l g o r i t h m b avoids the p o s s i b l e e x p o n e n t i a l r u n n i n g time of the o r i g i n a l a l g o r i t h m a even if the c o n s i s t e n c y assumption does not h o l d . n e v e r t h e l e s s   some p a r t i c u l a r l y wrong h e u r i s t i c e s t i m a t e s can m i s l e a d the search o f a l g o r i t h m b   a s w e l l . f i g . 1 . d i s p l a y s a n example o f m a r t e l l i f o r which a l g o r i t h m a r e q u i r e s 1*1/ node expansion and a l g o r i t h m b r e q u i r e s o n l y 1/n*1 expans i o n s . 
       the improved a l g o r i t h m   l e t u s c a l l i t a l g o r i t h m b '   i s based o n the o b s e r v a t i o n t h a t expanding a node may r e s u l t in a p o s s i b i l i t y to improve the h e u r i s t i c e s t i m a t e of t h a t node  and perhaps a l s o of i t s son nodes. e.g. i n the graph o f f i g . l . a f t e r expanding node n  the h e u r i s t i c e s t i m a t e of n  could have been s e t 1 i n stead o f zero s t i l l m a i n t a i n i n g the upper bound p r o p e r t y o f the h e u r i s t i c e x t i m a t e   b u t t h i s change would have avoided s e v e r al reopenings of node n. performed b o t h by a l g o r i t h m a* and b. on t h e o t h e r hand  if 
e . g . 	t h e h e u r i s t i c e s t i m a t e o f r u 	/ a l s o i n 
the graph of f i g . l . / had been 1 instead of zero  after expanding n. the heuristic estimate of n  could have been set 1. 
this operation would have saved several reopenings  as w e l l . 
1 


1 

　　　if the complexity of a search algorithm is measured by the number of dist i n c t expanded nodes  this optimality property of a* w i l l s t i l l hold. but in our case the complexity of a search algorithm is measured by the t o t a l number of node expansions  and in this case the following theorem can be proved: 
theorem 1  let m be an algorithm for f i n d ing the minimal  cost path in graphs using the heuristic information attached to the nodes of the graphs. there exists an algorithms n and a graph g so  that algorithm n also finds the minimal cost path in a l l graphs and n requires fewer node expansions than m when applied to g.g 
　　　the proof of this theorem consists of a set of consecutive counterexamples r e s u l t i n g in a graph for which it is proved that at least one of i t s nodes must be expanded at least twice by an optimal a l gorithm. then an algorithm is constructed which also finds always the minimal cost path but expands each node of t h i s p a r t i cular graph only once. 
1. conclusions 
　　　an improved version of m a r t e l l i ' s a l gorithm b has been described. this algorithm can improve i t s heuristic estimates during i t s run. the improved algorithm never requires more node expansions than the o r i g i n a l algorithm  and i t s worst case 
behaviour is also at least twice better. furthermore  there are cases  when the o r i g i n a l algorithm requires o/n / node expansions for an n-node graph  while the improved version requires only 1/n/ expansions. 
　　　another result is that if the comp l e x i t y of the algorithm is measured by the t o t a l number of node expansions  no overall optimal search algorithm exists. 
　　　the proofs of the theorems stated in t h i s communication w i l l be given in a forthcoming paper  now in preparation. 
