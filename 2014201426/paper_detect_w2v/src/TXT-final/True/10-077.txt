 
diagrams are of substantial benefit to whisper  a computer problem-solving system  in testing the stability of a  blocks world  structure and predicting the event sequences which occur as that structure collapses. whisper's components include a high level reasoner which knows some qualitative aspects of physics  a simulated parallel processing  retina  to  look at  its diagrams  and a set of re-drawing procedures for modifying these diagrams. roughly modelled after the human eye  whisper's retina can fixate at any diagram location  and its resolution decreases away from its center. diagrams enable whisper to work with objects of arbitrary shape  detect collisions and other motion discontinuities  discover coincidental alignments  and easily update its world model after a state change. 
|  introduction 
diagrams are very important tools which we use daily in communication  information storage  planning and problemsolving. their utility is  however  dependent upon the existence of the human eye and its perceptual abilities. since human perception involves a  /ery sophisticated information processing system  it can be argued that a diagram's usefulness results from its suitability as an input to this powerful visual system. alternatively  diagrams can be viewed as containing information similar to that contained in the real visual world  the canonical entity the human visual system was presumably designed through evolution to interpret. from this latter perspective  diagrams are a natural representation of certain types of primarily visual information  and the perceptual system simply provides an appropriate set of database accessing functions. both these viewpoints underly the work described in this paper. 
the role of diagrams is explored in a computer problemsolving program  named whisper  which refers to diagrams during its processing. a strong case for computer use of diagrams as models for geometry has been made by gelernter  and as general analogical representations by sloman. hayes discusses the theoretical nature of these representations. whisper's high-level reasoning component  hlr   built along the lines of traditional procedural al problem-solving programs  has the additional option of requesting observations in a diagram. it does this by asking its  perceptual system  to  look at  the diagram 
with its parallel processing  retina . the questions that the perceptual system can answer are called perceptual primitives. if necessary  the hlr can also make changes to the current diagram. 
a major portion of this research was done at the 
university of british columbia and is fully described in the author's phd. theala funt 1 . 
l|t mechanism  ppff piaqram interaption 
the retina and perceptual primitives are designed to provide 
whisper with a new set of operations whose execution times are of the same order of magnitude as conventional machine instructions. to achieve this a high degree of parallelism has been incorporated into the system. the retina is a parallel processor  and the perceptual primitives are the algorithms it executes.  do not be misled by the term  retina ; it refers to a general system of receptors and processors for the early stages of perceptual processing  rather than implying any close resemblance to the human retina.  each perceptual primitive  when executed by the retina  determines whether some particular feature is present in the diagram. whisper's retina mixes parallel and sequential computation  so the features it can recognize are not subject to the same theoretical limitations that perceptrons  mlnsky and papert 1  are. 
1 the retina 
whisper's retina is a software simulation of hardware which  given the rapidly advancing state of lsi technology  should soon be possible to build. it consists of a collection of processors  each processor having its own input device called a receptor. as with the human eye  whisper's retina can be shifted to fixate at a new diagram location  also a feature of a program by dunlavey   so that each processor's receptor receives a different input from the diagram. this fixation facility is important because the resolution of the retina decreases from its center to its periphery. without being able to fixate  it would be impossible for whisper to examine the whole diagram in detail. economy of receptors and processors dictates the use of decreasing resolution.  a declining resolution is also a characteristic of the human eye.  each receptor covers a separate segment of the diagram and transmits a single value denoting the color of that region. the geometrical arrangement of the receptors and the area each covers is shown in figure 1. the  circles  in the figure are called bubbles  and they are arranged in wedges  rays emanating from the center  and ring   one of the concentric circles of bubbles . the resolution varies across the retina because a larger portion of the underlying diagram is mapped onto a 
bubble depicted by a larger circle. since the complete group of receptors is assumed to sense and transmit ail signals in parallel  fixations are fast. 
each retinal processor has direct communication links to its 1 nearest neighbors plus one additional link via a common databus connecting all the processors to a supervisory processor called the retinal supervisor. the communication topology has been restricted in this simple way to ensure a feasible future hardware implementation. 
the bubble processors are each small computers with 

promer*-sol v in -1 : 	runt u1 

independent memory. they all simultaneously execute the same procedure; however  each bubble does not necessarily execute the same instruction at the same time. in the current implementation  a call to the lisp evaluator simulates a processor; and lisp mapping functions simulate the parallel control structure. 
although the bulk of the processing of the perceptual primitives is done in parallel  there is also a small amount of sequential processing which is performed by the retinal supervisor. the retinal supervisor also directs the parallel processing by choosing which procedure the bubbles should execute next and broadcasting it to them. 

figure 1 
ii.1 the perceptual primitives 
each 	perceptual 	primitive 	detects 	a 	problem 	domain 
independent diagram feature. the hlr assigns these features interpretations pertinent to the problem it is solving. the current set of implemented perceptual primitives include ones to: find the center of area of a shape; find the points of contact between a shape of one color and a shape of another; examine curves for abrupt slope changes; test a shape for symmetry; test the similarly of shapes; and visualize the rotation of a shape while watching for a collision with another shape. 
the center of area perceptual primitive is an illustrative example of the general operation of the perceptual primitives. it computes the center of area of a shape relative to the origin defined by the center of the retina. for each piece  aa  of the total area we need to compute the x and y components of its contribution to the total area. dividing the vector sum of these contributions by the total area yields the coordinates of the center of area. since each retinal bubble receives its input from a fixed sized area of the diagram and is at a fixed location relative to the retina's center  each bubble can independently compute the components of its contribution to the total area. the bubbles whose receptors do not he over any part of the shape simply do not contribute. the retinal supervisor performs the summation and the division by the total area. a separate primitive computes the total area. it simply totals the area of all the contributing bubbles. if the computed center of area is far from the retina's center then its accuracy can be 
improved by fixating the retina on the estimated center of area and then recomputing. the decision to iterate is made by the retinal supervisor. the accuracy improves because more of the central  high resolution portion of the retina is used. 
the center of area is used for more than simply providing the center of gravity of the objects in whisper's problem domain. other primitives  symmetry  similarity  and contact finding  fixate on a shape's center of area before beginning their calculations. for example  if a shape is symmetrical its center of area will be on its axis of symmetry. 
another 	important 	primitive 	is 	visualization. 	what 	is 
 visualized  is the rigid rotation of a shape about the retinal center. while the shape is rotating the collision detection primitive can be called as a demon to watch whether the rotation causes the shape to overlap with another stationary shape. this is useful both in  blocks world  environments involving moving objects and in testing whether two shapes are equivalent under rotation. the process is termed visualization because it does not involve modifying the diagram  but instead is totally internal to the retina itself. it simply entails an organized and uniform exchange of information amongst neighboring bubbles. 
the geometrical arrangement of the bubble receptors is what facilitates the visualization of rotations. from figure 1 it can be seen that aligning the bubble centers along wedges results in a constant angular separation between bubbles of the same ring when they are from neighboring wedges  and that this constant is independent of the ring chosen. thus  to rotate a shape clockwise each bubble marked by the shape simply sends a message to its clockwise ring neighbor asking it to mark itself. the sender then erases its own mark. a collision is detected if a bubble receives a message to mark when it is already marked by a shape other than the rotating one. although the shape is rotated in sequential steps  the time required is still short because  i  there are  as a maximum  only as many steps to be made as there are wedges on the retina  currently 1 ; and  ii  all the message passing and collision checking occurs in parallel during each step. 
ii.1 the underlying diagram 
we began with the view that the retina is a special purpose parallel processor designed to detect diagrammatic features without saying anything about the precise nature of the diagrams themselves. with the retinal processor in hand  we can now see that the representation of the diagrams is unimportant as long as each bubble receives its correct input. this is analogous to a program which issues a read command without caring whether the input is coming from a card reader  a file  or a terminal. the method of mapping from the diagram to the retinal bubbles' input must be fast  however  because the retina is re-filled everytime it is fixated at a new diagram location. 
there are at least two different types of representing media for the underlying diagram. the first is the conventional medium of visible marks on a two-dimensional surface  usually paper. the map from diagram to human retina is accomplished by the lens of the eye focusing the incoming light. since there is simultaneous stimulation of the receptors  it is a very fast process. 

p r o b l e m - s o l v i n g - 1 : 	funt 
1 

the second possible type of diagram representation is similar to that used in generating computer graphics. the diagram is specified as a list of primitive elements  in graphics applications  usually line segment equations   in a similar vein  kosslyn  proposes that human visual imagery is in some ways analogous to the storage and display of graphics images. the parallel processing capacity of whisper's retina can be used to quickly map each primitive element into the proper bubble inputs. to mark ail bubbles lying on line segment  s  the retinal supervisor directs every bubble to determine independently if it is on s  and if so  to mark itself. since this simple test -- do a circle and a line segment intersect  -- is performed by ail bubbles simultaneously  the time required is independent of the length of s. the same method can mark all bubbles within any simple shape such as a circle  square or triangle in time independent of its area. regardless of the type of primitive element  the time taken to  draw  the diagram on the retina is  however  proportional to the number of primitives in its description. they must be processed sequentially. with the fast parallel processing of each primitive this should only pose a problem for very detailed diagrams. 
due to the lack of true parallel processing  neither of the above two types of diagram representations is used in whisper. instead  the diagram is implemented as a square array. each array cell denotes a point on a real world  pencil and paper diagram. 
1 the re-drawing transformations 
the re-drawing transformations are the procedures the hlr can call to change the underlying diagram. in whisper there are transformations for adding and removing lines  and for rigidly translating and rotating shapes. other non-linear transformations could be added if required. these redrawing procedures are of course dependent upon the representation of the diagram they modify  and the ease and efficiency with which they can be implemented could affect the choice of diagram representation. 

ih.1 the qualitative hlr 
the hlr is the top level of the whisper system. it is solely responsible for solving each problem; the diagram and retina are simply tools at its disposal. it consists of procedural specialists which know about stability  about the outcome of different varieties of instability  how to interpret each perceptual primitive  and how to call the transformation procedures to produce the solution snapshots. there are two types of instabllites - rotational and sliding. for clarity  sliding instabilities will not be discussed for the present. operation of the system follows the steps: 
 1  determine all instabilities 

iii. whisper in operation 
with the basic mechanisms for interaction with the diagram now understood  it is appropriate to see how they are used in the course of solving a problem. we will consider problems of the type: predict the sequence of events occuring during the collapse of a  blocks world  structure. the structure will be a piled group of arbitrarily shaped objects of uniform density and thickness. if the structure is stable  there are no events to describe; if it is unstable  then the events involve rotations  slides  falls  and collisions. whisper accepts a diagram of the initial problem state  and produces a sequence of diagrams  called snapshots  as its qualitative solution. a quantitative solution specifying precise locations  velocitites  and times is not found; however  deriving one from a qualitative solution should not be too difficult  dekleer 1 . 
figure 1 is a typical example of whisper's input diagrams. they all depict a side view of the structure. each object is shaded a different  color   alphanumeric value  so it can be easily distinguished and identified. objects' boundaries are also distinctly colored. the diagram depicts a problem  called the  chain-reaction problem   which is particularly interesting because the causal connection between objects b and d must be discovered. 
 1  pick the dominant instability 
 1  find pivot point tor rotation of unstable object 
 1  find termination condition of rotation using retinal visualization 
 1  call transformation procedure to modify diagram as determined in step  1  
 1  output modified diagram as a solution snapshot 
 1  use snapshot from step  1  as input and restart from step  1 . 
in what follows we elaborate on each of these steps. 
the diagram and retina are an invaluable aid to the hlr in discovering what stops an object's motion  and in accomplishing the necessary state change. the chain reaction problem demonstrates this. the stability specialist directs the retina to fixate at numerous locations while perusing the diagram  and from an analysis  discussed below  of the visible support relationships determines that b is the only unstable object. b will pivot about the support point closest to its center of gravity. the retina is fixated there  the top right corner of a   so b's rotation can be visualized. as the object rotates  two events are possible. it may 

problem-solving-1 : funt 
1 

collide with another object  or it may begin to fall freely. the conditions under which either of these occur are monitored during the visualization. from this simulation of b's rotation  its collision with d is discovered  and its angle of rotation and location of first contact with d are found. because of the coarseness of the retinal resolution  this angle of rotation is only approximate. this approximate value is used in conjunction with feedback from the diagram to refine the angle of rotation as follows. first the re-drawing transformations are called to produce a new diagram in which b is rotated by slightly less than the estimated value. the rotation is made on the short side so that b will not overshoot. the retina is then fixated on the anticipated point of collision so that the gap between the two objects can be examined. if there is none  then the update is complete; however  if there is  then b is rotated again until the gap is closed. the resulting diagram is output as whisper's first snapshot of the solution sequence. 
iii.1 motion discontinuities and experimental feedback 
there are several important observations to be made at this point. one is that discovering the reason for the interruption of an object's motion  accomplished so simply here for b through visualization  is generally found to be a very difficult problem. physics provides equations for object motions  but these equations describe a condition which theoretically lasts indefinitely. they do not indicate when new boundary conditions should take effect. certainly it is possible to design a set of special heuristics specifying when and where collisions are most likely to occur  e.g. below the rotating object . however  it is quite probable that the collision occuring in figure 1 would be overlooked  whereas 
whisper's visualization process would definitely detect it. 

whisper relies on experimental feedback to successfully update its diagram in its method of visualization followed by gap closure. this method is basically a pragmatic equivalent to the unfeasible experiment of rotating the object in the diagram by very small increments until a collision occurs. usually feedback is thought of in terms of a robot immersed in a real world environment. in whisper's case  however  the feedback is from a situation analogous to that in the real world - the diagram and diagram transformations - rather than from observation of actual falling objects  funt 1 . using this feedback whisper is able to find when and where discontinuous changes in an object's motion occur without being forced to use sophisticated  time-consuming   numbercrunching  algorithms for touch tests  fahlman 1   for arbitrary shapes   and avoids considering every object in the universe as a possible candidate for a collision. 
once whisper has produced the first snapshot  it is ready to compute the next one. ah the information the hlr needs for this is contained in the first snapshot diagram. thus to produce the next snapshot  the hlr takes its last output snapshot as input  and begins processing exactly as if it were working on a fresh problem. although some results derived while working on the previous snapshot remain valid  e.g. some contact relationships will still hold   many will be inapplicable to the new problem. it is easier to disregard this old information than to sort it out and update it  since the retina provides a fast and efficient method of fetching it from the new diagram. 
hi.1 subsequent snapshots of the chain reaction problem 
the analysis producing the second and third snapshots is very similar to that for the first. in figure 1  b's weight on d causes d to be unstable. its rotation is visualized with the retina fixated at the peak of c leading to the discovery of its collision with the table. the diagram is updated to produce the second snapshot  figure 1  which is again input for further analysis. b now lacks sufficient support  and topples to hit d again as shown in figure 1. the complexity of the problem rises sharply at this point  and whisper's analysis ends  as  i believe  would most peoples'. 
b and d could be shown to fall simultaneously  whisper currently does not  by rotating d only part of the way to the table before allowing b to catch up  and then iterating this process a few times until d reaches the table. 


p r o b l e m - s o l v i n g - 1 : 	punt 
1 


figure 1 
iii.1 slide problems 
unstable objects may also slide. although the basic outline of the solution process -- test stability  find termination point of motion  update diagram  output snapshot  restart with the output as input - is the same  there are some essential differences in handling sliding objects. the most important arises because it is not possible to visualize the slide of an object down an arbitrary curve. what whisper's does 
instead is examine the curve itself with its retina. 
a variety of conditions can terminate an object's slide. for example  there may be a sharp rise  a bump   a sharp fall  a cliff   or a hill which is higher than the starting point. also the object may slide into another object resting on or near the surface. whisper tests for these conditions by fixating at regular intervals along the curve. at each point it invokes the perceptual primitives relevant to each of the above conditions. there are some cases  for example when a plank slides off a box  when whisper examines the surface of the underside of the sliding object. 
when it finds the endpoint of a slide  whisper updates the diagram using the re-drawing transformations in a two step process. first  it translates the object to the new point  and then  if necessary  rotates it. a rotation is usually required  because if the curve is a not simple straight incline  the orientation of the object changes as it moves. whisper determines the magnitude of this corrective rotation by reestablishing  via rotation visualization  the contact relationships which existed between the object and the surface prior to the start of the slide. 
ml.1 benefit of the diagram during shde analysis 
in the curve examination and diagram update process  the diagram is vory useful to the hlr in the course of curve following  as well as providing feedback as it did in the case of rotations. the main pitfall in curve following is the possibility that two objects will coincidentally align so that a smooth curve is formed across them both. an object could then begin its slide on one object and continue sliding along the other as shown in figure 1. this emergent property of the curve must be noticed  and the two curve segments appended. in a system relying on an independent description of each object  this would pose a significant problem because one would require:  i  that it have a built in expectation that the situation might arise;  ii  that it continually check for the situation;  iii  that its check involve testing whether the first object touches any other object in the universe; and  iv  that it know how to amalgamate the two separate curve segment descriptions into a new curve description. for whisper there is no problem because two aligned surfaces of neighboring objects form a continuous curve in the diagram; whisper only has to look at this curve  rather than  in a sense  discover or construct it. 

hi.1 the stability test 
a full discussion of whisper's stability testing routines cannot be given in the limited space of this paper; however  we shall give an impressionistic view. rather than solve the problem with a sophisticated general method  as fahlman  did in his build system  whisper seeks qualitative solutions using rules corresponding to those a person untrained in physics might apply. the hlr has specialists which express rules like:  if an object hangs over too far  it will topple ; and  if an object and one of its supporters make contact along a surface  rather than at a single point  and if this surface is not horizontal  then the object will slide.  a frictioniess environment is assumed. 
overall organization of the stability test is based on the observation that a complete structure is stable if each of its independent subparts is stable whenever their supporters are stable. an independent subpart is any connected group of objects which is not supporting anything. for example  in figure 1 of the chain reaction problem the independent subparts are objects b  d  ab  and dc  but not a and c. thus the initial structure is broken down into smaller substructures whose stability as individual units is easier to test than the stability of the structure as a whole. when their stability is tested  b and ab are found to be rotationally unstable  while d and dc are found to be stable. since b is a subpart of ab  it is the dominantly unstable object  and therefore it is the one rotated. if ab were unstable  but b stable  then ab would be rotated  i.e. objects a and b would be rotated together as if they were a single object . 
incidentally  treating two objects like a and b as a single object ab is another example of a situation in which two descriptions must be amalgamated  it is a trivial task for whisper to amalgamate two object descriptions  since all it need do is interpret their two color codings as the same color. 
the stability test uses the diagram and retina to find contact relationships  centers of area  and slopes of contacting surfaces. the symmetry perceptual primitive is used to accurately establish that d in the chain reaction problem will balance. 

iv. conclusion 
whisper demonstrates the advantages and feasibility of using diagrams as an aid in problem-solving. a fundamental component of the system is a retina which blends sequential and parallel processing while limiting the quantity of processors and processor interconnections to a fixed  not too large number. by asking questions of the retina  the hlr is able to obtain the type of experimental feedback from the diagram which is normally expected only as a result of interaction with the real world. 
acknowledgment 
i have benefitted from the inspiration of raymond relter  alan k. mackworth  richard s. rosenberg  and gordon mccalla. 
this research was supported by the national research council of canada under grant a1  and through the author's nrc postdoctora* fellowship. 
