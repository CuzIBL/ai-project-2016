 
this paper introduces a new framework for extending consistent domains of numeric csp. the aim is to offer the greatest possible freedom of choice for one variable to the designer of a cad application. thus  we provide here an efficient and incremental algorithm which computes the maximal extension of the domain of one variable. the key point of this framework is the definition  for each inequality  of an univariate extrema function which computes the left most and right most solutions of a selected variable  in a 
space delimited by the domains of the other variables . we show how these univariate extrema functions can be implemented efficiently. the capabilities of this approach are illustrated on a ballistic example. 
1 	introduction 
this paper introduces a new framework for extending the domain of one variable in a consistent csp ' which is defined by a set of non-linear constraints over the reals. the aim is to offer the greatest freedom of choice of possible values for a variable to the designer of a cad application. for example  one starts from the knowledge of a solution and tries to widen the variations of a variable. this problem occurs in a large class of electro-mechanical engineering and civil engineering applications  where extending the domain of a variable permits the tolerance of any associated component to be enlarged  and therefore to lower the cost of this component. these problems are often under-constrained. so  what the user wants to know is a subset of the solutions. for these applications  classical methods  e.g.  1; 1    based on local consistencies and domain splitting  cannot ensure that a solution exists inside the arbitrarily 
1
　　 an introduction to csp and numeric csp can be found in  1; 1 . 
1 	constraint satisfaction 
small intervals they compute. moreover  domain splitting is ineffective if the solution set is not a finite set of isolated solutions but a collection of intervals. 
　the framework we introduce here allows one to enlarge the domain of a variable while preserving the consistency of the csp. sam-haroud and faltings  have proposed an approach for computing safe solutions of non-linear constraint systems. roughly speaking  they fill up the solution space with a set of consistent boxes1. their approach could be used to extend the domain of one variable. however  the underlying costs in computation time and space are exponential. 
the framework we introduce here is less general but it can be implemented efficiently. before going into the details  let us outline our framework in very general terms. the main steps of the right extension1 of the domain of a variable are: 
1. searching for a subset of the solution space; this solution space may be reduced to a single point; 
1. selecting of the variable the domain of which has to be extended; 
1. defining for each inequality of an extrema function that computes the left most solution of the selected variable in a space delimited by the domains of the other variables; 
1. finding the smallest solution of all extrema functions. 
the following example illustrates this process. 
    their approach is based upon a classical method used in graphical computing for image synthesis  composition of shapes  of scenes  known as the 1k trees. the key idea is to classify portions of space in three categories: the black shapes contain no solution at all  the gray shapes contain solutions  but also contain points which .are not solutions  and finally  the white shapes contain only points which are solution. the gray shapes are split into smaller one that are again classified into black  white and gray shapes; the decomposition process stops when the size of the shapes becomes smaller than a given value. 
1
　　throughout this paper  we will only consider the right extension since the left one can be computed in a symmetrical way. 

example 1 let us consider the behavior of an electrical shunt motor  the speed of which may be changed. the maximum speed can be up to 1 times the value of the minimum speed. we only consider two parameters of the motor: the torque    and the rotation speed n. the motor cannot use more than a given power : 
moreover  the motor cannot operate above a given speed and torque: 
we know that the motor is working efficiently for every tuple of values 
what we want to compute is the maximum range of values of the torque which is safe with this motor. in other words  we are looking for the maximum domain such that every tuple  is a solution of the constraint system. 
now  consider equation in the space delimited by . its left  most solution is the point defined by and n = 1; this point is obviously an upper bound of the. domain 

figure1: relation between tv and cu 
　an initial subset of the solution space can often be found by experimentation. note that the solution space may be reduced to a single point and the domains of the different variables mav successively be extended. the definition of the univariate extrema functions is a key point of our approach. optimal univariate extrema functions can trivially be computed for the so-called primitive constraints. for non-primitive constraints  the methods used for computing box-consistency  l  provide an efficient way to compute a safe approximation of univariate extrema functions. 
to define formally the extension of the domain of a variable  we introduce an  internal  consistency  named inconsistency  which ensures that every tuple in the carte-
sian product of the variable domains is a solution of the constraint system  i-consistency should not be mistaken with arc consistency or approximations of arc consistency   e.g. 1b-consistency   box consistency l  . those consistencies define regions containing all the solutions  and possibly tuples which are not solution  whereas i-consistency defines a region which is a subset of the set of solutions. figure 1 shows the relations between these different families of consistencies. roughly speaking  the smallest external box is the best approximation which can be computed by approximations of arc consistency over continuous domains. 

figure 1: relations between i-consistency and some partial consistencies 
　outline of the paper: section 1 introduces the notation and recalls the basics on csp over continuous domains which are needed in the rest- of the paper. section 1 is devoted to the description of the i-consistent extension process. extrema functions are formally defined and an efficient algorithm is introduced. section 1 outlines the capabilities of our approach on a ballistic example. 
1 preliminaries 
1 	notation 
we use the following notations  possibly subscripted: 
  x y z denote variables over the reals; 
  u  v denote real constants; 
  f g denote functions over the reals; 
  c denotes a constraint over the reals; 
　the next subsection recalls a few notions of numeric csp; details can be found in  1; 1; 1 . 
1 	interval constraint system 
a k:-ary constraint c is a relation over the reals. 

	collavizza  delobel  and rueher 	1 

acceptable values for denotes a set of constraints1. 
definition 1  k-box  a k-box of a k-dimension space defined by the cartesian product of intervals 
by construction  all the k-boxes are convex. 
1 	l o c a l consistencies 
local consistencies over continuous domains are based on arc consistency which was originally defined for finite domains. this section introduces two local consistencies that will be used in the rest of the paper. 

　davis    has studied the application of the waltz algorithm    over continuous domains and has shown important theoretical limitations. the waltz algorithm was then extended by faltings   1; 1   in order to deal with ternary constraints defined by continuous and differentiable curves. 
definition 1  set extension  let s be a subset of r. the approximation of s -denoted h u l l - is the smallest interval i such that 
1 	b o x - c o n s i s t e n c y 
roughly speaking  box-consistency  l; 1  is a local consistency over continuous domains which computes a safe approximation of the solution of each variable involved in a given constraint. 

　the essential point is that the variable x is boxconsistent for constraint  = 1 if the bounds of the domain of x correspond to the leftmost and the rightmost 1 of the optimal interval extension of 

1
　　　it is worthwhile to notice that the set of constraints c represents a conjunction of constraints that have to be satisfied. disjunctions may only occur inside a single constraint  e.g. the single constraint is equivalent to the disjunction 
1 	constraint satisfaction 
1 extension of the domain of a variable of a csp 
this section introduces the way a domain of a single variable can be extended while preserving consistency of the whole csp. we start by defining two local consistencies which are needed to characterize the extended domains. 
　next  we formally define the univariate extrema functions that actually compute the bounds of the iconsistent extensions of the domain of a variable. 
1 	e-consistency 
various approximations of arc consistency  e.g. 1b consistency  box consistency l   have been introduced for continuous domains  e consistency is the best approximation of the solution space which can be computed by these partial consistencies. for instance  e consistency corresponds to the  smallest external box  on fig. 1. more formally  e-consistency is defined as follows: 
  
　in other words  a csp p =  x d c  is e-consistent iff p' =  is arc consistent and v corresponds to the smallest box containing all values of d'. so  for inequality c  e-consistency on the corresponding equation ccqu  see section 1  yields a box which bounds the maximal extension that can be performed for any variable occurring in c. 
1 	i~consistency 
definition 1  i -consistency  

in other words  a csp p -  x d c  is i consistent iff v only contains tuples which are solutions. 

　ward et al.  have proposed four kinds of interval propagation. one of them is related to i-consistency. each interval  is labeled with one of these kinds: 
1
　　　note that we could also perform a fruitful i- consistent extension of to  1  with the new box. but this extension of is much smaller than the one we would have obtained if we had extended the initial box  .  would have been extended to  1  . in general  the result of successive extensions by i-consistency of several variables depends on the processing order of the variables. 


	collavizza  delobel  and rueher 	1 


　the algorithm in figure 1 directly follows from property 1. note that this algorithm is much simpler than the framework introduced by sam-haroud and faltings  to compute a local consistency. both algorithms select relevant extrema from all extrema including intersections between several curves and intersections between curves and interval extremities. however  in our case  the relevant extrema is simply the left most one since we start from an initial i-consistent box  so we know which portion of the space is a solution  and we extend only one variable domain to the right. this algorithm only searches for the left  most extrema  thus  it is linear if the extrema functions can be computed in constant time. the next section shows that the left most extrema can be computed very efficiently. 

figure 1: function i-extension 
1 	computing extrema functions 
optimal extrema functions for variable x of constraint c can trivially be computed if c is either a monotonic on x  or if dx can be decomposed in subdomains where c is monotonic on x. such constraints are usually called primitive constraints. the set of primitive constraints is infinite and includes the following constraints: {x = 

example 1 the constraint x1 = y is primitive: the right extrema function for x is : 
1 	constraint satisfaction 

　for a non-primitive constraint c  we will approximate the e-consistent box for cequ in the space delimited by 
domains  the methods introduced to compute box-consistency provide an efficient way to compute such a safe approximation of . the key observation is that extrema functions are univariate functions which can be tackled by the newton method implemented in the box-consistency. 
　　so  consider the i-consistent extension of for csp p =  a v c  and an inequality c to compute a safe approximation of the extrema functions for x of constraint c  we could just compute a box-consistent interval for x with regard box-consistency would yield an interval 
　as a matter of fact  a complete computation of boxconsistency is not required. the lnar procedure  ll  used in box-consistency finds the left most zero of the interval extension of the univariate function on x derived from  by replacing all variables but x by their domains. of course  when the function i-extension  see. fig. 1  uses approximations of extrema functions  the i-extension of the domain of x may not be maximal. 
1 	a ballistic example 
in this section  we give a small ballistic application which illustrates the capabilities of our system. the problem consists of finding the maximum mechanical tolerances when an object is launched in a uniform gravitational field  with an initial speed  which has an incidence 
 with the ground  see fig. 1 . 

figure 1: possible trajectories of the projectile 
　the strong requirement is that the object must fall inside a predefined interval. 
1 	modeling of the problem 
the initial speed and incidence of the bullet can be 



1 	computing i-consistency extension of 

the target is defined by the interval  1  1 . now  assume that the bullet falls on the target when   1  and v   1 1 . so the initial i consistent box is defined by : 
 o 
to the right by iconsistency  we have 
to check whether the box at the right of the i consistent box is i -consistent. thus  we have to find the left most bound of 
to find these bounds  we have used numerica  to compute box consistent intervals for  the left most bound of these intervals respectively are 1 and 1. so   can be extended by iconsistency to interval  1.1   see fig. 1 . 

figure 1: the ballistic constraints and boxes 
　now  consider the three dimensional version of this problem where the target is defined by a rectangular 

　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　-  x and the projection of y on the plane defined by y = 1. we know that the box defined by  - 
 1 1  and db =  1  is i consistent. 
to extend ft by i consistency  we have computed with 
 numerica the box-consistent intervals for the equations derived from the following inequalities : 
the left most bound of these intervals is 1; thus  can be extended by i-consistency to the interval  1.1 . 
1 	conclusion 
tins paper has introduced an effective framework for extending the domain of one variable in an already consistent csp. extending the domain of one variable is a critical issue in applications where the tolerance of a. component determines its cost. 
contrary to ward et al  we do not impose any restrictions on the form of the constraints. the approach suggested by sam-haroud and faltings  is more general since they do not know an initial solution but its computation cost is very high. the key point of our framework is the definition of univariate extrema functions which can be computed efficiently. an interesting way to explore concerns maximizing the size  or volume  of iconsistent boxes. 
acknowledgements 
thanks to gilles trombettoni for his careful reading and helpful comments on earlier drafts of this paper. thanks also to olivier lhomme  jean-paul stromboni and alexander semenov for interesting suggestions. 
