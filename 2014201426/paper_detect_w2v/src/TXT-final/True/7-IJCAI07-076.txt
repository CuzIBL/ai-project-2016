
we present the formal evaluation of a framework that helps students learn from analogical problem solving  i.e.  from problem-solving activities that involve worked-out examples. the framework incorporates an innovative example-selection mechanism  which tailors the choice of example to a given student so as to trigger studying behaviors that are known to foster learning. this involves a two-phase process based on 1  a probabilistic user model and 1  a decision-theoretic mechanism that selects the example with the highest overall utility for learning and problem-solving success. we describe this example-selection process and present empirical findings from its evaluation. 
1 introduction 
although examples play a key role in cognitive skill acquisition  e.g.   atkinson et al.  1    research demonstrates that students have varying degrees of proficiency for using examples effectively  e.g.   chi et al.  1; vanlehn  1; vanlehn  1  . thus  there has been substantial interest in the intelligent tutoring systems  its  community in exploring how to devise adaptive support to help all students benefit from example-based activities  e.g.   conati and vanlehn  1; weber  1  . in this paper  we describe the empirical evaluation of the example analogy  ea -coach  a computational framework that provides adaptive support for a specific type of example-based learning known as analogical problem solving  aps   i.e.  using examples to aid problem solving . 
　the ea-coach's general approach for supporting aps consists of providing students with adaptively-selected examples that encourage studying behaviors  i.e. metacognitive skills  known to trigger learning  including: 
1  min-analogy: solving the problem on one's own as much as possible instead of by copying from examples  e.g.   vanlehn  1  ;  
1  explanation-based learning of correctness  eblc : a form of self-explanation  the process of explaining and clarifying instructional material to oneself  chi et al.  1   that can be used for learning new domain principles by relying on  for instance  commonsense  or overly-general knowledge  to explain how an example solution step is derived  vanlehn  1 . 
 min-analogy and eblc are beneficial for learning because they allow students to  i  discover and fill their knowledge gaps and  ii  strengthen their knowledge through practise. unfortunately  some students prefer more shallow processes which hinder learning  such as copying as much as possible from examples without any proactive reasoning on the underlying domain principles  e.g.   vanlehn  1; vanlehn  1 . 
 to find examples that best trigger the effective aps behaviors for each student  the ea-coach takes into account: 
i  student characteristics  including domain knowledge and pre-existing tendencies for min-analogy and ebcl  and ii  the similarity between a problem and candidate example. in particular  the coach relies on the assumption that certain types of differences between a problem and example may actually be beneficial in helping students learn from aps  because they promote the necessary aps meta-cognitive skills. this is one of the novel aspects of our approach  and in this paper we present an empirical evaluation of the eacoach that validates it.  
　a key challenge in our approach is how to balance learning with problem-solving success. examples that are not highly similar to the target problem may discourage shallow aps behaviors  such as pure copying. however  they may also hinder students from producing a problem solution  because they do not provide enough scaffolding for students who lack the necessary domain knowledge. our solution to this challenge includes  i  incorporating relevant factors  student characteristics  problem/example similarity  into a probabilistic user model  which the framework uses to predict how a student will solve the problem and learn in the presence of a candidate example;  ii  using a decisiontheoretic process to select the example that has the highest overall utility in terms of both learning and problem-solving success. the findings from our evaluation show that this selection mechanism successfully finds examples that reduce copying and trigger eblc while still allowing for successful problem solving.  
　there are a number of its that  like the ea-coach  select examples for aps  but they do not consider the impact of problem/example differences on a student's knowledge and/or meta-cognitive behaviors. elm-pe  weber  1  helps students with lisp programming by choosing examples that are as similar as possible to the target problem. ambre  nogry et al.  1  supports the solution of algebra problems by choosing structurally-appropriate examples. however  it is not clear from the paper what  structurally appropriate  means. like the ea-coach  several its rely on a decision-theoretic approach for action selection  but these do not take into account a student's meta-cognitive skills  nor they include the use of examples  murray et al.  1; mayo and mitrovic  1 . finally  some systems perform analogical reasoning in non-pedagogical contexts  e.g.   veloso and carbonell  1    and so do not incorporate factors needed to support human learning. 
　in the remainder of the paper  we first describe the example-selection process. we then present the results from an evaluation of the framework and discuss how they support the ea-coach's goal of balancing learning and problem- solving success. 
example 
a person pulls a 1kg crate up a ramp inclined 1o ccw from the horizontal. the 
aal ownogr tkhme afnlo pour.l lhs ea  p1lklsg .i tb wloicthk  a 	pulling force is applied at an angle of 1 o
magnitude of 1n  applied at an 	ccw from the horizontal  with a magnitude angle of 1 o ccw from the 	of 1n. find the magnitude of the normal horizontal. what is the magnitude 	force exerted on the crate. of the normal force on the block  
we answer this question using newton's second law. 
   we choose the crate as the body.    a normal force acts on the crate.    it's oriented 1o ccw  from  the     horizontal 
figure 1: fragment of the ea-coach interface 
problem description: 	   example description: 
a workman pulls a 1 kg block... 	a person pulls a 1 kg  crate... 
solution fragment: 	solution fragment: 
	 pstepn :rule:normal 	structurally 	 esteprun l:e:normal 
a normal force acts on the identical a normal force acts on the block  superficial difference        crate  
 trivial 
	 pstepn+1 :	 estepn+1 :
rule:normal-dir 	structurally 	rule:normal-dir identical 
it's oriented 1o ccw  	it's oriented 1o ccw from  from the horizontal  	superficial difference     	the horizontal 
 non-trivial 
 figure 1: sample classification of problem/example relations 
1 the ea-coach example-selection process 
the ea-coach includes an interface that allows students to solve problems in the domain of newtonian physics and ask for an example when needed  fig. 1 . for more details on the interface design see  conati et al.  in press . as stated in the introduction  the ea-coach example-selection mechanism aims to choose an example that meets two goals: 1  helps a student solve the problem  problem-solving success goal  and 1  triggers learning by encouraging the effective 
aps behaviors of min-analogy and eblc  learning goal . for each example stored in the ea-coach knowledge base  this involves a two-phase process  supported by the eacoach user model: simulation and utility calculation. the general principles underlying this process were described in  conati et al.  in press . here  we summarize the corresponding computational mechanisms and provide an illustrative example because the selection process is the target of the evaluation described in a later section.  
1 phase 1: the simulation via the user model the simulation phase corresponds to generating a prediction of how a student will solve a problem given a candidate example  and what she will learn from doing so. to generate this prediction  the framework relies on our classification of various relations between the problem and candidate example  and their impact on aps behaviors. since an understanding of this classification/impact is needed for subsequent discussion  we begin by describing it. 
　two corresponding steps in a problem/example pair are defined to be structurally identical if they are generated by the same rule  and structurally different otherwise. for instance  fig. 1 shows corresponding fragments of the solutions for the problem/example pair in fig. 1  which include two structurally-identical pairs of steps: pstepn/estepn derived from the rule stating that a normal force exists  rule normal  fig. 1   and pstepn+1/estepn+1 derived from the rule stating the normal force direction  rule normal-dir  fig. 1 .  
　two structurally-identical steps may be superficially different. we further classify these differences as trivial or non-trivial. while a formal definition of these terms is given in  conati et al.  in press   for the present discussion  it suffices to say that what distinguishes them is the type of transfer from example to problem that they allow. trivial superficial differences allow example steps to be copied  because these differences can be resolved by simply substituting the example-specific constants with ones needed for the problem solution. this is possible because the constant corresponding to the difference appears in the example/problem solutions and specifications  which provides a guide for its substitution  anderson  1   as is the case for pstepn/estepn  fig. 1 . in contrast  non-trivial differences require more in-depth reasoning such as eblc to be resolved. this is because the example constant corresponding to the difference is missing from the problem/example specifications  making it less obvious what it should be replaced with  as is the case for pstepn+1/estepn+1  fig. 1 .  
　the classification of the various differences forms the basis of several key assumptions embedded into the simulation's operation. if two corresponding problem/example steps  pstep and estep respectively  are structurally different  the student cannot rely on the example to derive pstep 
i.e. the transfer of this step is blocked. this hinders problem solving if the student lacks the knowledge to generate pstep  novick  1 . in contrast  superficial differences between structurally-identical steps do not block transfer of the example solution  because the two steps are generated by the same rule. although cognitive science does not provide clear answers regarding how superficial differences impact aps behaviors  we propose that the type of superficial difference has the following impact. because trivial differences are easily resolved  they encourage copying for students with poor domain knowledge and aps meta-cognitive skills. in contrast  non-trivial differences encourage minanalogy and eblc because they do not allow the problem solution to be generated by simple constant replacement from the example. we now illustrate how these assumptions are integrated into the ea-coach simulation process. 

       figure 1: fragment of the ea-coach user model simulation via the ea-coach user model 
to simulate how the examples in the ea-coach knowledge base will impact students' aps behaviors  the framework relies on its user model  which corresponds to a dynamic bayesian network. this network is automatically created when a student opens a problem and includes as its backbone nodes and links representing how the various problem solution steps  rectangular nodes in fig. 1  can be derived from domain rules  round nodes in fig. 1  and other steps. for instance  the simplified fragment of the user model in fig. 1  slice t  pre-simulation slice  shows how the solution steps pstepn and pstepn+1 in fig. 1 are derived from the corresponding rules normal and normal-dir. in addition  the network contains nodes to model the student's aps tendency for min-analogy and eblc  minanalogytend and eblctend in slice t  fig. 1.
 to simulate the impact of a candidate example  a special 'simulation' slice is added to the model  slice t+1  fig. 1  assuming that the candidate example is the one in fig. 1 . this slice contains all the nodes in the pre-simulation slice  as well as additional nodes that are included for each problem-solving action being simulated and account for the candidate example's impact on aps. these include: 
- similarity  encoding the similarity between a problem solution step and the corresponding example step  if any . 
- copy  encoding the probability that the student will generate the problem step by copying the corresponding example solution step. 
- eblc  encoding the probability that the student will infer the corresponding rule from the example via eblc. 
 during the simulation phase  the only form of direct evidence for the user model corresponds to the similarity between the problem and candidate example. this similarity is automatically assessed by the framework via the comparison of its internal representation of the problem and example solutions and their specifications. the similarity node's value for each problem step is set based on the definitions presented above  to either: none  structural difference   trivial or non-trivial. similarity nodes are instrumental in allowing the framework to generate a fine-grained prediction of copying and eblc reasoning  which in turns impacts its prediction of learning and problem-solving success  as we now illustrate.  
prediction of copying episodes. for a given problem solution step  the corresponding copy node encodes the model's prediction of whether the student will generate this step by copying from the example. to generate this prediction  the model takes into account: 1  the student's min-analogy tendency and 1  whether the similarity between the problem and example allows the step to be generated by copying. the impact of these factors is shown in fig. 1. the probability that the student will generate pstepn by copying is high  see 'copyn' node in slice t+1   because the problem/example similarity allows for it  'similarityn'=trivial  slice t+1  and the student has a tendency to copy  indicated in slice t by the low probability of the 'minanalogytend' node . in contrast  the probability that the student will generate the step pstepn+1 by copying is very low  see node 'copyn+1' in slice t+1  because the non-trivial difference  'similarityn+1'=non-trivial  slice t+1  between the problem step and corresponding example step blocks copying. prediction of eblc episodes. for a given problem rule  the corresponding eblc node encodes the model's prediction that the student will infer the corresponding rule from the example via eblc. to generate this prediction  the model takes into account 1  the student's eblc tendency  1  her knowledge of the rule  in that students who already know a rule do not need to learn it  1  the probability that she will copy the step  and 1  the problem/example similarity. the last factor is taken into account by including an eblc node only if the example solution contains the corresponding rule  i.e.  the example is structurally identical with respect to this rule . the impact of the first 1 factors is shown in fig. 1. the model predicts that the student is not likely to reason via eblc to derive pstepn  see node 
'eblcn ' in slice t+1  because of the high probability that she will copy the step  see node 'copyn'  and the moderate probability of her having tendency for eblc  see node eblctend in slice t . in contrast  a low probability of copying  e.g.  node 'copyn+1'  slice t+1  increases the probability for eblc reasoning  see node 'eblcn+1' in slice t+1   but the increase is mediated by the probability that the student has a tendency for eblc  which in this case is moderate. 
prediction of learning & problem-solving success. the model's prediction of eblc and copying behaviors influences its prediction of learning and problem-solving success. learning is predicted to occur if the probability of a rule being known is low in the pre-simulation slice and the simulation predicts that the student will reason via eblc to learn the rule  e.g.  rule normal-dir  fig. 1 . the probabilities corresponding to the pstep nodes in the simulation slice represent the model's prediction of whether the student will generate the corresponding problem solution steps. for a given step  this is predicted to occur if either 1  the student can generate the prerequisite steps and derive the given step from a domain rule  e.g. pstepn+1  fig. 1  or 1  generate the step by copying from the example  e.g.  pstepn  fig. 1 . 

figure 1: fragment of the ea utility model 
1 phase 1: the utility calculation the outcome of the simulation is used by the framework to assign a utility to a candidate example  quantifying its ability to meet the learning and problem-solving success objectives. to calculate this utility  the framework relies on a decision-theoretic approach that uses the probabilities of rule and pstep nodes in the user model as inputs to the multi-attribute linearly-additive utility model shown in fig. 1. the expected utility  eu  of an example for learning an individual rule in the problem solution corresponds to the sum of the probability p of each outcome  value  for the corresponding rule node multiplied by the utility u of that outcome: 
eu  rule i   p known  rule i    u  known  rule i    p  known  rule i    u   known  rule  
since in our model  u known rulei  =1 and u known 
 rulei   =1  the expected utility of a rule corresponds to the probability that the rule is known. the overall learning utility of an example is the weighted sum of the expected learning utilities for all the rules in the user model: 
n eu  rule i    wi 
i
　given that we consider all the rules to have equal importance  all weights w are assigned an equal value  i.e.  1/n  where n is the number of rules in the user model . a similar approach is used to obtain the problem-solving success utility  which in conjunction with the learning utility quantifies a candidate example's overall utility.  
　the simulation and utility calculation phases are repeated for each example in the ea-coach's knowledge base. the example with the highest overall utility is presented to the student.  
1 evaluation of the ea-coach  
as we pointed out earlier  one of the challenges for the eacoach example-selection mechanism is to choose examples that are different enough to trigger learning by encouraging effective aps behaviors  learning goal   but at the same time similar enough to help the student generate the problem solution  problem-solving success goal . to verify how well the two-phase process described in the previous section meets these goals  we ran a study that compared it with the standard approach taken by its that support aps  i.e.  selecting the most similar example. here  we provide an overview of the study methodology and present the key results. 
1 study design 
the study involved 1 university students. we used a within-subject design  where each participant 1  completed a pencil and paper physics pre-test  1  was introduced to the ea-coach interface  training phase   1  solved two newton's second law problems  e.g.  of the type in fig. 1  using the ea-coach   experimental phase  and 1  completed a pencil and paper physics post-test. we chose a withinsubject design because it increases the experiment's power by accounting for the variability between subjects  arising from differences in  for instance  expertise  aps tendencies  verbosity  which impacts verbal expression of eblc . 
　prior to the experimental phase  each subject's pre-test data was used to initialize the priors for the rule nodes in the user model's bayesian network. since we did not have information regarding students' min-analogy and eblc tendencies  the priors for these nodes were set to 1. during the experimental phase  for each problem  subjects had access to one example. for one of the problems  the example was selected by the ea-coach  adaptive-selection condition   while for the other  static-selection condition   an example most similar to the target problem was provided. to account for carry-over effects  the orders of the problems/selection conditions were counterbalanced. for both conditions  subjects were given 1 minutes to solve the problem  and the ea-coach provided immediate feedback for correctness on their problem-solving entries  realized by coloring the entries red or green. all actions in the interface were logged. to capture subjects' reasoning  we used the think-aloud method  by having subjects verbalize their thoughts  chi et al.  1  and videotaped all sessions.  
1 data analysis 
the primary analysis used was univariate anova  performed separately for the dependent variables of interest  discussed below . for the analysis  the within-subject selection factor  adaptive vs. static  was considered in combination with the two between-subject factors resulting from the counterbalancing of selection and problem types. the results from the anova analysis are based on the data from the 1 subjects who used an example in both conditions  1 subjects used an example in only one condition: one subject used the example only in the static condition  another subject used the example only in the adaptive condition . 
1 results: learning goal 
to assess how well the ea-coach adaptively-selected examples satisfied the learning goal as compared to the statically-selected ones  we followed the approach advocated in  chi et al.  1 . this approach involves analyzing students' behaviors that are known to impact learning  i.e.  copying and self-explanation via eblc in our case. although this approach makes the analysis challenging because it requires that students' reasoning is captured and analyzed  it has the advantage of providing in-depth insight into the ea-coach selection mechanism's impact. for this part of the analysis  univariate anovas were performed separately for the dependent variables copy and eblc rates. copy rate. to identify copy events  we looked for instances when students: 1  accessed a step in the example solution  as identified by the verbal protocols and/or via the analysis of mouse movements over the example  and 1  generated the corresponding step in their problem solution with no changes or minor changes  e.g.  order of equation terms  constant substitutions . students copied significantly less from the adaptively-selected examples  as compared to the statically-selected examples  f 1 =1  p=1; on average  1 vs. 1 respectively . 
eblc rate. to identify eblc episodes  we analyzed the verbal protocol data. since eblc is a form of selfexplanation  to get an indication of how selection impacted explanation rate in general  we relied on the definition in  chi et al.  1  to first identify instances of selfexplanation. students expressed significantly more selfexplanations while generating the problem solution in the adaptive selection condition  as compared to in the static condition  f 1  1 =1  p=1; on average  1 vs. 1 respectively . we then identified those self-explanations that were based on eblc  i.e.  involved learning a rule via commonsense and/or overly-general reasoning  as opposed to explaining a solution step using existing domain knowledge . students generated significantly more eblc explanations in the adaptive than the static condition  f 1  1 =1  p=1; on average  1 vs. 1 respectively . 
pre/post test differences. with the analysis presented above  we evaluated how the ea-coach selection mechanism impacts learning by analyzing how effectively it triggers aps behaviors that foster it. another way to measure learning is via pre/post test differences. in general  students improved significantly from pre to post test  on average  from 1 to 1; 1-tailed t 1 =1  p 1 . however  because there was overlap between the two problems in terms of domain principles  the within-subject design makes it difficult to attribute learning to a particular selection condition. one way this could be accomplished is to 1  isolate rules that only appeared in one selection condition and that a given student did not know  as assessed from pre-test ; 1  determine how many of these rules the student showed gains on from pre to post test. unfortunately  this left us with very sparse data making formal statistical analysis infeasible. however  we found encouraging trends: there was a higher percentage of rules learned given each student's learning opportunities in the adaptive condition  as compared to the static one  on average  1% vs. 1% respectively . 
discussion. as far as the learning goal is concerned  the evaluation showed that the ea-coach's adaptively-selected examples encouraged students to engage in the effective aps behaviors  min-analogy  eblc  better than staticallyselected examples: students copied less and self-explained more when given adaptively-selected examples. this supports our assumption that certain superficial differences encourage effective aps behaviors. the statically-selected examples were highly similar to the target problem and thus made it possible to correctly copy much of their solutions  which students took advantage of. conversely  by blocking the option to correctly copy most of their solution  the adaptively-selected examples provided an incentive for students to infer via eblc the principles needed to generate the problem solution. 
1 results: problem-solving success goal the problem-solving success goal is fulfilled if students generate the problem solution. to evaluate if the adaptive example-selection process met this goal  we checked how successful students were in terms of generating a solution to each problem. in the static condition  all 1 students generated a correct problem solution  while in the adaptive condition  1 students did so  the other 1 students generated a partial solution; both used the example in both conditions . this difference between conditions  however  is not statistically significant  sign test  p=1   indicating that overall  both statically and adaptively selected examples helped students generate the problem solution. 
　we also performed univariate anovas on the dependent variables error rate and task time to analyze how the adaptively-selected examples affected the problem solving process  in addition to the problem solving result. students took significantly longer to generate the problem solution in the adaptive than in the static selection condition  f 1  1  =1  p 1; on average  1min.  1sec. vs. 1min.  1sec. respectively . similarly  students made significantly more errors while generating the problem solution in the adaptive than in the static selection condition  f 1  1 =1  p=1; on average  1 vs. 1 respectively .  discussion. as stated above  the problem-solving success goal is satisfied if the student generates the problem solution  and is not a function of performance  time  error rates  while doing so. the fact that students took longer/made more errors in the adaptive condition is not a negative finding from a pedagogical standpoint  because these are byproducts of learning. specifically  learning takes time and may require multiple attempts before the relevant pieces of knowledge are inferred/correctly applied  as we saw in our study and as is backed up by cognitive science findings  e.g.   chi  1  .  
　however  as we pointed out above  1 students generated a correct but incomplete solution in the adaptive selection condition. to understand why this happened  we analyzed these students' interaction with the system in detail. both of them received an example with non-trivial superficial differences that blocked copying of some solution steps  because the user model predicted this would trigger learning via eblc. this prediction is mediated by the model's assessment of the student's eblc tendency  to which we had assigned a generic prior probability of 1 for both students due to lack of more accurate information. this appeared to have been inaccurate for one of these students  who showed no desire to engage in any in-depth reasoning during the study  i.e.  likely had a very low eblc tendency . the other student  however  generated a number of eblc selfexplanations  indicating that inaccurate prior on eblc tendency was not the reason for suboptimal example selection in terms of problem-solving success. this student invested considerable effort and did learn some of the rules needed to solve the problem  as we found by comparing her pre and post-test answers on related questions . however  although the simulation predicted she would learn all the necessary rules and thus generate the full problem solution  she was unable to do so within the allotted 1 minutes  mostly because she sometimes required several attempts to infer a correct rule. we can't predict whether this student would have eventually generated a full solution or whether she would have become overwhelmed and frustrated by the process. there is a fine line between taking extra time to learn from one's errors  and floundering  i.e. engaging in too many trial and error attempts that obstruct learning. thus  even if students have good aps tendencies there is no guarantee that they will learn all the rules needed to generate a full problem solution. this suggests that the system could be improved by the addition of more explicit scaffolding of correct eblc to help students when they are floundering. 
1 conclusions & future work 
we have presented the evaluation of a framework that provides support for aps through its example-selection mechanism. this mechanism relies on a decision-theoretic approach to find examples that encourage effective aps behaviors while helping the student to generate the problem solution. to do so  the mechanism relies on the assumption that examples including certain types of superficial differences with the target problem discourage copying and thus encourage students to learn the underlying domain principles via eblc. this is in contrast to existing approaches for example selection  which present the student with the most similar example. the findings from our evaluation support our approach  by showing that choosing examples with appropriate differences triggers the effective aps behaviors. however  we also found that for some students  just using examples to trigger these behaviors may have detrimental side-effects  such as excessively increasing problem-solving time. thus  as our next step  we plan to explore if and how more explicit forms of scaffolding on the target aps behaviors may address this problem  as well as in general help students who have very poor aps tendencies. we also plan to integrate the ea-coach with two other its that target different phases of the problem-solving spectrum  i.e.  studying examples before problem solving  and pure problem solving without the aid of examples.  
