 
this paper presents a small vision system created to study minsky's theory of frame systems it is organized around a detailed semantic hypothetical model of the scene  which is capable of being structurally altered and adjusted to fit the visual data. visual data is gathered through a window  whose position is controlled by suggestions which arise from uncertain parameters of the hypothetical model 
introduction 
　　　　　　minsk y's theory of frame systems  1  offers strong advantages for a theory of perception  and this system attempts to study it. lt does not need to see the whole scene  but only fragments of it  and occlusion is no particular problem. at all times there is a detailed semantic model of the scene which  although it may be different from the final model  is at least consistent the rapport between the high-level semantic model and the low-level visual data is very close  without intervening layers of computation 
　　　　　　when a hypothesis is wrong  it is not discarded but is transformed in an orderly way into a more correct hypothesis  avoiding wasted effort. one tenet of the frame theory is that one may use dozens of different models linked in this way. the space of models that our system can propose is limited to wedges  blocks  and pairs of aligned blocks because there is no intermediate level of representation between solids and vertices that the system can sense the more shapes that get added to the repertoire  the more difficult it is to find ways to distinguish among them on the basis of vertex appearance so a lesson for the future would be to use descriptions organized around the notions of axis and section  as originated in the work of agin and binford. see holterbach  1  for a thorough discussion 
　　　　　　for a detailed account of the structure and operation of the system  see the author's forthcoming dissertation. 
system outline 
　　　　　　input data  to keep the system simple  was restricted to the isolated vertices of a hand-coded line drawing. the data is examined by a program called the fovea  which reports only vertices contained within a movable diamond-shaped window. each reported vertex consists of a point and the directions of its rays 
　　　　　　the basic operation of the system is to take vertices  one by one  and note their correspondence with points in an internal model of the scene this process is punctuated by occasional modifications to the model to accomodate the data. blocks appear out of nowhere  shrink and grow  sometimes split in two or turn into wedges when the system can see no more vertices  it moves its window  looking for the far corners of 
objects whose dimensions are yet unverified. 
　　　　　　the internal model for each block or wedge is a large actor  that is  a data object together with a procedure for accessing it  containing parameters for all of its corner points  principal directions  and dimensions it thinks of itself as a complete 1-d model of the object except that the numbers stored in its points  directions  and dimensions are those of its 1-d isometric projection 	each parameter has not only its value but an authority-flag  to record whether the value is known with any certainty or is merely default although the block contains over a dozen different parameters  it can be adjusted as a unit due to a complex system of constraint equations for adjusting default parameters 
　　　　　　the process of matching vertices to points of each object is organized around two additional kinds of actors  vertexmatching-objects and vertex-matches each block or wedge model contains a set of vertex-matching-objects  one for each point  which can compare a vertex to that point. if it finds a 
　　　　　　comparison  it constructs a vertex-match containing a comment about the quality or meaning of the comparison  such as  agree    stretch  meaning the object should be stretched   wedge  meaning it should be changed into a wedge  or  cut-after* meaning it should be divided in two. since each vertex will usually be comparable to more than one point in the scene  the best vertexmatch is chosen by sorting on the comment. the vertex-match also contains machinery to adjust or modify the model once it has been chosen if it is to make a large change in the hypothesis  it uses tabular transfer rules to guide it in setting up the parameters in the new hypothesis. 
　　　　　　it does not insist that hidden vertices or rays be invisible  and sometimes they're not  if the block is really going to be a wedge. 
　　　　　　although space does not permit greater detail  here is an outline of the contents of each type of actor: 
example - perception of a block-pair 
　　　　　　operation of the system in perceiving an aligned pair of blocks is portrayed in figure i. the initial fovea placement is provided by the user vertices are processed singly in any order. the first vertex  since there is no hypothesis to accept it  causes a 
　　　　　　
1 
　　　　　　
new block hypothesis to be created  complete with default points  lengths  and directions the second vertex establishes its x length. at this point  the parameters for the block hypothesis are the following: 

           the first vertex established point pz and all the directions  and caused all the remaining points to be adjusted consistent with the first point  the directions  and the default lengths the second vertex established point pxz  causing three other points and the x length to be adjusted. the authority-flag of the x length became  known  because the two end points were known 
           the third vertex matches against the same point as the second vertex  but with the comment  row-after**. a second block is hypothesized  al:gned with the first and butting up against it the fourth vertex establishes us x length and point pz. by proposing such pairs of blocks  we avoid the problem of hypothesized blocks intersecting in space. of course we can't completely prevent it  but neither can people. 
           having exhausted the visible vertices  the system asks all block or wedge hypotheses to generate suggestions. in the first block  since the y length is unknown  suggestions are generated to look for points pxyz. pyz  pxy  and py  which would establish that length. suggested locations to look for them are based on the default value of the y length and perturbations of that value. a suggestion is taken  the fovea moved  and more vertices reported. the fifth vertex establishes point pxyz. the hypothesis is adjusted and the y length and point pyz become known. due to global soft equality links placed between the respective y and z lengths of the two blocks  the second block is also stretched and adjusted. at this point  the parameters for the two blocks are as follows: 


　　　　　　after processing the remaining vertices  all of which agree  except for the t vertex  which is ignored   the uncertain z length generates another suggestion  which is taken  and the scene is finished. 
related work 
　　　　　　this system is most similar in spirit to those of roberts  1  and crape  1   in that the problem is to find a model that can be verified using fragmentary data. 
　　　　　　roberts' system was the pioneering work in machine perception of solids  and our system studies only a subset of his domain. his work was not extendible because his description of each object consisted of a homogeneous transform of a prototype solid. it could only make analog  not structural adjustments to its hypotheses  nor could it represent qualitative constraints  nor could it represent imagined intermediate results or use them to guide its processing. 
　　　　　　grape's is a more serious system than ours  and he has solved technical problems associated with using real image data. however  we are both addressing the same organizational issues and our system embodies significantly different answers. his system relies on the notion of standard views of objects rather than on whole objects. a standard view is recognized on the basis of a signature  my word  of connected line segments and associated vertices in other words  a signature must be a large enough subset of a standard view to distinguish it from other standard views  because a mistaken choice cannot be changed. this is not a picayune objection  but is characteristic of the content-free syntactic approach to perception. to make such a system see more types of objects  one must assemble a catalogue of subsets of standard views which grows much faster than the catalogue of object types 
　　　　　　our system differs from grape's in that the model is much closer to being an actual 1-d model of the scene  stating what kinds of objects are present  simple relations among them  and their precise dimensions in the image  despite occlusion . it can be more bold about hypothesizing the identity of objects on vertex evidence alone because there is no penalty for guessing wrong  as the hypothesis can be changed. 
　　　　　　all three systems suffer from a poorly chosen vocabulary of basic models  namely blocks and wedges. without going into detail  the problem is that these objects are effectively  defined  in terms of their lines and vertices  and these definitions are too complex the addition of more basic shapes so defined would make it more difficult for a perception system to discriminate among them  even if it is able to change its mind. a solution for this  as previously mentioned  is to use descriptions organized around the notions of axis and section  1 . 
1 
　　　　　　



