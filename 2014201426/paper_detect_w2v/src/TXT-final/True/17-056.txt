 
　　many expert systems are now being written which rely on highly-compiled  empirical knowledge for their reasoning power. model-based reasoning has significant theoretical advantages. i constructed two expert systems for the same domain  one using large-grained compiled knowledge  the second using model-based reasoning. the use of model-based reasoning resulted in improved knowledge accessibility and flexibility  and expanded problem-solving ability. 
　　many current expert systems rely on highly-compiled  large-grained knowledge  heuristics  empirical associations   rules of thumb   for their reasoning power. an alternative approach  model-based reasoning  uses a detailed model of the objects in the domain and the operations that act on those objects. the relative problem solving abilities of these two different types of reasoning have not previously been experimentally compared. i constructed two programs that solve problems in the same domain  with the same objectives  but each using a different reasoning method. genex  koton  1  and genex ii  koton  1  solve problems about the behavior of bacterial operons  a subfield of molecular biology. both pro-
this research was supported in part by the national institutes of health grant no. 1 p1 lm 1 from the national library of medicine  and in part by national institutes of health grant no. 1 p1 rr 1g-1 from the division of research resources. * these concepts are not strictly logically equivalent  but in current practice systems based on empirical or heuristic associations typically do express their knowledge in large-grained  compiled form. 
**the term operon refers to a genetic control system in which the activity of a set of structural genes  coding for metabolically related proteins required by the cell  is governed by the interaction of a regulatory protein with an adjacent region of dna  called the operator . in order for the operon proteins to be made  the enzyme rna polymerase must be able to bind to the dna at a specific site  known as the promoter. it can only do this if the operator  which overlaps the promoter  is not blocked by the presence of the bound regulatory protein. whether or not the regulatory protein binds at the operator depends on whether the cell needs to make more of the operon proteins. 
grams take as input a description of an operon  real or imaginary  and information on whether or not the genes of that operon are expressed  then attempt to deduce the biological control mechanism causing the observed behavior of the operon. genex uses large-grained empirical knowledge to solve problems  and genex ii uses modelbased reasoning. genex ii can solve a greater variety of problems and more difficult problems than genex. 
   the expert knowledge in the genex program consists of 1 pieces of knowledge relating observed phenomena to possible causes. each piece of information is highly compiled and  in general  incorporates several inference steps. 
for example: 
if the mutation is in the promoter 
and the gene is not expressed 
then possibly rna polymerase cannot bind to the promoter. 
　　genex performs well on many problems. however  the types of problems which it can be used to solve is limited. it can only be guaranteed to yield a correct solution for simple problems involving a prototypical operon containing at most one mutation. for some more difficult problems  involving more than one mutation  genex gives the correct answer  but for others  it gives an incorrect solution. this limitation may be attributed to the program's reliance on reasoning via empirical associations. 
　　in order to overcome the limitations of genex  genex ii was implemented. this program contains a description of each object and mechanism involved in operon control. for instance  
the binding-site of rna-polymerase is the promoter. 
a molecule m  binds to a site s  if s is the binding-site for m and m and s have complementary-conformations and nothing else is bound to s and m is free to bind. 
　　
1 	p. koton 
the expression of operon 1  initiates if part-of o  is p and p is a promoter and rna-polymerase binds to p. 
an operon o  is expressed if 
1 is initiated and 
1 is not attenuated and 
1 is transcribed and 1 is translated. 
　　this knowledge base  written in prolog  contains just over 1 clauses. the descriptions include the different parts of the operon  the role that each part plays in the functioning of the operon  how the parts interact  and how lower-level mechanisms combine into higher-level behavior. the knowledge base for genex ii contains essentially the same information that genex has  but the information that is  compiled into  genex is stated explicitly in genex i i . these descriptions enable the program to reach its solutions by constructing a model of the operon and simulating the processes that act on it rather than doing a match between the observed phenomena and the knowledge in the system  as genex does. 
　　genex ii can deal with two large classes of problems which genex was unable to solve: the combined effect of multiple mutations on gene expression  and problems involving non-prototypical operons. an example of the type of problem that genex ii can solve and on which genex fails is shown below. 
　　bacterium pedantia produces a protein  sporulin  that makes other bacteria sporulate. sporulin synthesis is inducible by chalk. in the absence of chalk a repressor produced by gene spor prevents expression of the sporulin structural gene spos. 
　　a variation carrying two mutations can be made in b. pedantia by recombination. most double mutants that carry both a constitutive spor and a constitutive spoo mutation  mutations in the regulatory gene and the operator of the spo gene that cause its product to be made continually  are constitutive  as expected. however  one particular double carrying mutations spor1 and spoo1 is anomalous: it produces sporulin only when chalk is absent spor1 is known to be missense  a missense mutation is one that changes the structure of the resulting protein . explain briefly how the repressor and operator are functioning in the double mutant. 
*this problem is from an mit undergraduate genetics exam. it has been simplified for this paper. the mil text of the problem can be found in  koton  1 . 
　　genex ii solves this problem by first noting that the mutations have introduced uncertainty about the three-dimensional shape of objects in the domain. complementarity of shape partially determines which objects can bind to which others. the program generates all possible pairs of shapes  in the abstract sense; i.e. to which other objects is this object's shape complementary  which are consistent with the mutations given and the observed behavior of the operon. one possibility it generates is that the regulatory protein has been mutated in such a way that only when it is bound to chalk can it bind to the operator. genex ii simulates the behavior of the operon under this set of circumstances. it reasons along the following lines: 
　　in order for the operon to be expressed  rna polymerase must be able to bind to the promoter. it cannot bind to the promoter if something is already bound there. because the operator overlaps the promoter  anything bound to the region where the operator and promoter overlap is bound to the promoter. the system then looks to see if anything can be bound to the operator. the hypothesis that only when chalk is bound to the mutated regulatory protein it is in the proper conformation to bind to the mutated operator  results in the system reaching the conclusion that in the presence of chalk  rna polymerase cannot bind and the gene product is not made. this is consistent with the observed behavior of the operon  and will be reported as a possible solution. 
　　when the same problem is given to genex  it recognizes that the spo gene is being repressed by chalk  and thus when chalk is present the gene product is not made. genex can not discover the mechanism by which this occurs  because this particular combination of mutations does not correctly match any of its heuristics. it partially matches two heuristics  one stating that the mutated operator cannot bind a normal regulatory protein  and the other stating that the mutated regulatory protein cannot bind to a normal operator  and can go no further. 
　　certainly  any given problem which is currently unsolvable by genex  or other systems which use compiled knowledge  could be solved by giving the program a new piece  or pieces  of information. however  this would improve the performance of the system only for that one type of problem. compiled knowledge captures domain knowledge as is; it does not capture the underlying model. because such programs solve problems by matching the current situation against a set of predetermined situations  the knowledge base anticipates situations that may arise. for small domains  it may be possible to enumerate every possible situation and encode a response for each one. in a large domain  it may be extremely difficult to 
**tbc program's complete solution is 1 pages long. interested readers are referred to  koton  1 . 
***this technique was used successfully in puff  kuns  1 . 
　　
predict every possible state of the system. in contrast  a system which uses model-based reasoning  such as genex i i   can generate new situations based on its underlying model of the domain. 
　　empirical  rules of thumb  often contain implicit preconditions. for example  one such rule in genex states that  deleting the operator results in increased expression of the operon.  the implicit precondition here  as it clearly must be in similar heuristics for other programs  is  all other things being equal.  if all other things are not equal  the validity of the conclusion is uncertain. im-
plicit preconditions can make it difficult  if not impossible  to determine the conditions for which a  rule of thumb  can be applied correctly. however  explicitly stating every precondition may be tedious - consider having to explicitly encode  all other things being equal  in a system with hundreds of components. 
　　another limitation of compiled knowledge is that the domain knowledge is contained implicitly  and thus is inaccessible. for instance  the genex rule shown above encodes the rule of thumb that a mutation in the promoter and a decrease in transcription of the operon suggests that rna polymerase cannot bind to the promoter. if given a problem that included a promoter mutation and a decrease in gene product  genex applies this rule and suggests that the promoter mutation caused the decrease in gene product. however  genex has no knowledge of the mechanism which makes this true  i.e. that the promoter is where the rna polymerase binds  if the promoter is deleted the polymerase cannot bind  and if the polymerase cannot bind the operon cannot be transcribed. this information is explicitly encoded in genex i i   as is illustrated above. the advantages of such increased accessibility have been extensively discussed in  swartout  1 . 
　　knowledge encoded implicitly is also inflexible. one piece of knowledge may be contained in any number of places in the system  so in order to change that knowledge it must be changed every place it is used. 
　　when model-based reasoning is used  the program creates its solution anew for each problem  based on its model of the domain  rather than relying on pre-compiled solutions. theoretically  the program should be able to solve any problem that is derivable from the model of the domain. 
　　as always  there are tradeoffs. model-based systems such as genex ii require a more complicated control structure to reduce the amount of search for possible solutions. the finely-grained knowledge in genex ii creates inference chains that are about four times longer than those generated by genex in the solution of the same problem. this results in a slower-executing program. perhaps the ideal system would use both empirical associations for 
p. koton 1 
speed and model-based reasoning for improved problemsolving ability and better understanding of its reasoning  as described by  barnett  1 . 
acknowledgments 
　　i would like to thank peter szolovits  who supervised the research on which this paper is based  and ramesh patil  who introduced me to many of the issues raised in this paper. 
