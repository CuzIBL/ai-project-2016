 
　　　the parser is part of a text understanding system in which structural ambiguity is a major problem. all components of the system use a 
message-passing control structure. a general advantage of this form of control is that it allows the flexible integration of diverse knowledge sources. the parser transmits sub-sentential constituents for semantic interpretation. a pseudo-parallel version of the left-corner parsing algorithm with top-down f i l t e r i n g is used. as blind transmission would send spurious constituents  a delay mechanism is used to queue constituents until all alternative analyses of a segment have been completed. 
i introduction 
　　　the parser is a component in a system that constructs a knowledge base from textual input. only the parser is discussed here; phillips and hendler  1  gives a plan of the whole system. 
	our 	corpus 	is 	descriptions 	of 	texas 
instruments* patents; a one-sentence fragment is shown in figure 1. 
a modulator comprising two transistors each having collector  emitter and base electrodes  means for applying a direct voltage across said emitter electrodes  a center-tapped source of alternating signals connected between said base electrodes  said collector electrodes being connected together and to the center tap of said source. 
figure 1: a patent description 
the phrase the  means for applying . . .   can be attached either to  a modulator comprising . . .   or 
to  two transistors each having . . .   the explosive effect of structural ambiguity makes it essential that such ambiguities be resolved quickly. text understanding systems that do not integrate the use of linguistic and domain knowledge have limited potential to handle such problems. 
　　　the parser has an a b i l i t y to dispatch various sub-sentential phrases for semantic interpretation as they are formed  thus permitting the elimination of meaningless parse paths. also note that the example  sentence  has the form of an np. the nature of the system permits representation to be constructed in parallel with syntactic analysis; thus meaning is extractable in spite of grammatical incompleteness. further  conceptual predictions can be used to guide parsing. 
ii design features 
a. accessing semantics 
　　　integrating syntax and semantics may be achieved by use of a common data structure as in semantic grammars  hendrix  1 . however  retaining the autonomy of components enables work in theoretical linguistics and knowledge representation  for example  to be directly u t i l i z e d . cascaded atns  woods  1  allow semantic critiquing of syntactic constructs. we would like to have a bidirectional flow of information: halliday and hasan  1  claim that cohesion is greater within paragraphs than across them. consequently we envisage a system that is more predictive when within a paragraph and more bottom-up near paragraph boundaries. semantically driven systems  schank  1  are less likely to perform well when trying to understand structurally complex texts. 
　　　our system integrates the use of descriptively autonomous components with an object-oriented  message-passing control structure  hewitt  1 . 
b. forming constituents 
　　　only noun phrases  verb groups  and clauses are transmitted by the parser. the f i r s t build entity concepts in knowledge  the second retrieve the case structures of event concepts  and the last are equivalents of completed case frames. 
　　　a parser that transmits phrases as they are formed will send many spurious constituents. for example  in the text of figure 1  there are  two    emitter and base electrodes   etc. lookahead is used in parsifal  marcus  1  for deterministic parsing  but many of the problems found in the patents are not addressed. 
　　　dispatching is controlled by counting the number of ongoing alternative analyses and delaying action until they have all terminated. then those constituents that are on s t i l l - v i a b l e parse paths are transmitted. 

c. depth- or breadth-first  
     the system has to know simultaneously the state of all alternative parses that start in any word position. a depth-first system cannot know if yet-to-be-tried paths will yield another analysis but a breadth-first system can be cogniscent of concurrent alternatives. a  pseudo-  parallel control structure is thus the appropriate environment for the delay mechanism. 
i l l the object-oriented parser 
a. 	the grammar:  local grammar  
     the grammar has a context-free phrase structure component augmented with constraints and percolation rules for passing feature values to the parent category  saenz  1   see figure 1. 

the grammar allows null realizations for nouns and noun phrases * . it also includes the clause rule: 
clause =  comp  np verb-group 
without any explicit objects. the dictionary entry for a verb form includes its type: transitive  ditransitive  etc. this feature is percolated up to the verb-group and the rule completed appropriately. 
     dictionary entries also contain the information used to translate syntactic relations onto meaning relations in the spirit of lexical-functional grammar  bresnan and kaplan  1 . 
b. 	the parsing algorithm 
     the algorithm is based on the left-corner algorithm with a reachability matrix  griffiths and petrick  1   which slocum  1  has shown to be efficient for long sentences  as are found in the patents. it is modified to a pseudo-parallel format for reasons mentioned earlier. 
* if the f u l l range of ellipsis were incorporated into the grammar  it may be so unconstrained as to approach worthlessness. this indicates an area where prediction could be useful in guiding a less permissive grammar. 
b. phillips 1 
　　　the system is implemented using the  flavor  system in zlisp  weinreb and moon  1 . a  constituent  flavor creates an object that is associated with a rule of the grammar. each constituent attempts to instantiate its rule and has methods for doing this. 

     active constituent.  from a list maintained by a scheduler  are sent the input word in order that they can advance their rule-state. if the next rule-segment is a terminal category an immediate match can be attempted. for 
non-terminal segments  subparse constituents **  are initiated. when an object successfully instantiates its grammar rule it will be linked to 
** the f i l t e r e d left-corner algorithm selects rules that are  reachable  from the parent category and have the category-to-be-matched as the f i r s t symbol of their rhs. 

1 	b. phillips 
higher level constituents. if the completed constituent has the category of the goal slot  it can f i l l that slot  np-1 into np-parent in figure 1. otherwise  following the left corner algorithm  it will create intermediate constituents. if there are recursive rules  then both actions take place  as is shown in figure 1  with np-intermediate being the intermediate constituent. 
　　　when a subparse f i l l s the parent slot  the parent's constituent makes a copy of i t s e l f   with the subparse inserted  to continue the analysis. a version of the constituent has to be l e f t to capture other subparses  e.g. np-intermediate in figure 1  that finish later. the subparse constituent and its copied context are recorded in queue  figure 1  of the original parent. the pristine constituent retains pointers to its copies in the continue variable  figures 1  1 . 
　　　optional rule elements will cause constituents to be set up to follow the alternatives. the alternate variable  see figure 1  points to a constituent that splits off in this manner. 
active and count  figure 1  record subparses. 
count is the number of structures that could f i l l the parent slot. this number will grow when optional elements cause subparses to s p l i t . it can also grow if intermediate constituents are created when an subordinate constituent is completed. the count will diminish when a subparse f a i l s   or is attached to a parent slot. when count becomes 1 the queued constituents are examined and only those on s t i l l valid parse paths are transmitted. 
　　　if self-embedding occurs  we do not want to wait until the top-level constituent is completed  
e.g. appraisal of np-1 should not await the completion of np-intermediate  figure 1. this implies that the delay mechanisms should be sensitive to levels of self-embedding. the levellers variables  figure 1  is used for this. the i n i t i a l level contains only items initiated directly from a non-terminal category. counting is only affected by constituents on the current level; self-embedded constituents are marked as being on the next level. when the f i r s t - l e v e l objects have all been accounted for  the count is reset with the next level's constituents and the process of attaching and elimination is iterated. 

figure 1: the role of ephemeral parents 
　　　count only records structures that will f i l l the non-terminal slot in the parent. however  within those structures transmittable 
constituents  the np in figure 1  may appear. 	for them ephemeral parents having the required counting capabilities  are used. 
　　　ambiguous attachment of constituents cannot immediately be resolved as a spurious constituents could be involved; it will be treated when the attachee is passed for interpretation. 
iv conclusion 
　　　the features of the parser should allow it to perform efficiently in the text understanding environment. however  following the findings of slocum  1   we need to be wary that implementation overhead does not outweigh theoretical advantages. 
