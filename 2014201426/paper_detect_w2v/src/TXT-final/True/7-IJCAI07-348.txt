
recent development of location technologies enables us to obtain the location history of users. this paper proposes a new method to infer users' longterm properties from their respective location histories. counting the instances of sensor detection for every user  we can obtain a sensor-user matrix. after generating features from the matrix  a machine learning approach is taken to automatically classify users into different categories for each user property. inspired by information retrieval research  the problem to infer user properties is reduced to a text categorization problem. we compare weightings of several features and also propose sensor weighting. our algorithms are evaluated using experimental location data in an office environment.
1 introduction
context-aware computing are gaining increasing interest in the ai and ubiquitous computing communities. to date  numerous approaches have been taken to recognize and model a user's external context  for example one's location  physical environment  and social environment  to provide contextdependent information. though  context  is a slippery notion  dourish  1   it is promising if we can recognize and adapt to aspects of users such as their activities  general interests  and current information needs  jameson and kruger  1 . such user models are useful for personalized information services in ubiquitous computing.
　recently  location information has become widely available both in commercial systems and research systems. devices such as wi-fi  bluetooth  low-cost radio-frequencytags and associated rfid readers  and ultrasound devices all provide location-based information support in various situations and environments. one early and famous project was active badge  want et al.  1 . since that work  numerous studies of users' activity recognition and location-aware applications have been developed using location and other sensory information in the context of ubiquitous and mobile systems  wilson  1; hightower et al.  1; ashbrook and starner  1; liao et al.  1; lester et al.  1; wilson and philipose  1 . in these studies  user models are sometimes implicitly assumed. for example  being in a laboratory might imply working behavior for laboratory members. while for different types of users such as guests for a campus tour  being in a laboratory implies sightseeing behavior. therefore  user modeling and behavior detection are mutually complementary: if we have a more precise user model  we can guess more precisely the user behavior  and vice versa. automatically obtaining a user model will bootstrap activity recognition in a ubiquitous environment to enable context-aware information services.
　toward user modeling for ubiquitous computing  several studies have been done in recent years. heckmann proposes the concept of ubiquitous user modeling  heckmann  1 . he proposes a general user model and context ontology gumo and a user model and context markup language userml that lay the foundationfor inter-operabilityusing semantic web technology. carmichael et al. proposes a usermodeling representation to model people  places  and things for ubiquitous computing  which supports different spatial and temporal granularity  camichael et al.  1 .
　this paper describes an algorithm to infer a user's longterm properties such as gender  age  profession  and interests from location information. the system automatically learns patterns between users' locations and user properties. consequently  the system can infer properties: it can automatically produce a user model of a new user coming to the environment. we show that some properties are likely to be inferred and others are difficult to infer. the algorithm is useful in various ubiquitous computing environments to provide user modeling for personalized information services.
　we address users' long-term properties  especially among many user-modeling dimensions. kobsa lists frequently found services of user-modeling  some of which utilize users' long-term characteristics such as knowledge  preference  and abilities  kobsa  1 . jameson discusses how different types of information about a user  ranging from current context information to the user's long-term properties  can contribute simultaneously to user adaptive mechanisms  jameson  1 . in the ontology gumo  long-term user model dimensions are categorized as demographics such as age group and gender  personality and characteristics  profession and proficiency  or interests such as music or sports. some are basic and therefore domain independent  whereas others are domain dependent.
our algorithm is so simple that it is applicable to many

figure 1: id-cobit and sensors
types of location data. inspired by research on information retrieval  we regard the problem of inferring users' properties as text categorization problems. support vector machine  svm  is applied to the problem with various feature weighting methods compared in the paper. our study is evaluated on empirical data obtained through one-week experiments at our research institute. we collected location data of more than 1 users  staffs and guests . the id-cobit system consisting of namecard-type infrared transmitters and sensors is installed in the environment to recognize users' location.
　the paper is organized as follows. the next section introduces the id-cobit system and describes location data. the proposed algorithm for user modeling from location information is explained in section 1. analyses of the results are made in section 1. we also propose measurements of sensor importance in section 1. related works and discussion are described in section 1. finally  we conclude the paper.
1 location information
in our research  location information is obtained using the cobit system. this section briefly overviews the id-cobit system and describes experiments to collect location data.
1 id-cobit
the compact battery-less information terminal  cobit   is a compact information terminal that can operate without batteries because it utilizes energy from the information carrier  nishimura et al.  1 . the id-cobit is a terminal integrating cobit with an infrared  ir  id tag and a liquid crystal  lc  shutter. figure 1 a  depicts an id-cobit  which is useful as a namecard holder. the id detector for id-cobit is a single detector type ir sensor  as shown in fig. 1 b . the sending cycle of a tag is about 1 s. the effective distance is 1 m. detailed specifications are available in  nakamura et al.  1 .
　the id-cobit system provides location-based information support in the environment such as exhibitions  museums  and academic conferences  nishimura et al.  1  users can download information depending on their location and orientation  mainly via voice information. the entire architecture is shown in fig. 1. although the id-cobit system has multiple communication channels  in this study we use only the ir led on an id-cobit and ir sensors in the environment. we specifically address obtaining locations of users without disturbing usual daily behavior.

figure 1: id-cobit system.

figure 1: sensor allocation map for a part of the fourth floor.
1 experiments
the id-cobit system is installed in an office environment of our research institute. location data were collected at aist tokyo waterfront research center  from february 1  1  mon  through february 1  fri . in all  1 sensors are installed at the first floor and the fourth floor. on the first floor  we have entrances  reception areas  lobbies  and lounges. the fourth floor is our main office  consisting of a research area and an administrative area. the sensor allocation map on the fourth floor is shown partly in fig. 1  which is about 1 square meters  or about a third of the entire covered area. every working staff member on these floors was delivered an id-cobit  which they continued to wear during the period.
　we also delivered id-cobits to and obtained location information of 1 guests who visited the institute temporarily during the period.
　after the experiments  we analyzed the location data. the detection instances of all sensors were 1 times: 1 times of staff  1 times of guests. the number was almost constant each day. on average  a staff member was detected 1 times; a guest was detected 1 times. because the location information and user properties of staffs are quantitatively and qualitatively better than those of guests  we use the staff information in this paper.
　for obtaining users' long-term properties  we manually surveyed user attributes for all staff such as age  work frequency  room  and whether they smoke or not. the user properties used in our study are shown in table 1. we chose demographic properties such as age and position  domain-dependent properties such as team and workfrequency  and user-specific properties such as coffee and smoking.
　we elaborate these properties considering usefulness in our domain and also versatility in other domains: first  age and
user propertyrangeageunder1  1  1  1  over1positionsc   full-time researcher  part-time researcher : technical-staff  temporary-staffteamresearch-group-a  -b  -c  -d  secretaries  administratorswork-
frequency  high  middle  lowcoffee   high  middle  lowsmokingyes  noroom+a  b  c  d  e  fcommuting++station-a  station-b	table 1: user properties.	  sc stands for steering committee.    because of the free time system of this work environment  working time and commuting frequency depend on the person.     how often one drinks coffee. + working room at one's desk. ++ two train stations on two lines are accessible from this institute.
position are important properties especially in japan; in the japanese culture  age and position make large differences in communication such as using respect language and behavior. as it is often inappropriate and impolite to ask a user about the age and position directly  it is useful for the system to infer such properties. team and work-frequency can be seen as users' interests in the research domain. because team organization is flexible in our institute  they reflect well the reseracher's interest. coffee and smoking are useful for guests. if the system can recognize that a guest likes coffee or smoking  it can suggest appropriate restaurants or cafes in break time. because we are often asked  do you like coffee or tea   or  do you smoke or not    in japan   it indicates the usefulness of the properties in our daily lives. lastly  room and commuting are for navigation. knowing the properties  the system can infer in which room a researcher might be  even if he does not wear the cobit   or recognize whether he/she goes home or not.
1 inference of user properties
in this section  we propose our algorithm to infer user properties based on their respective location histories. we first describe how to reduce the prediction problem of user properties into a text categorization problem. then  the feature design for machine learning is explained.
1 reduction to a text categorization problem
when a sensor detects a user  the sensorid and userid are obtained each time a sensor detects a user. counting the number of detections  we can build a matrix that represents how many times each sensor detects each user. we call it a sensoruser matrix. denoting the number of users as n and the number of sensors as m  the sensor-user matrix is an n〜m matrix w. we denote wij as the element of w  i.e.  the number of detections of user uj by sensor si. the illustration of sensor detection to a sensor-user matrix is shown in fig. 1.
　next  we consider user properties. for example  a user property of whether the user drinks coffee or not  the cof-

figure 1: illustration of sensor detection and the sensor-user matrix.
fee property  can be represented as {yes  no} or {1}. assuming that three users have the values yes  no  and yes for the property  we have the following table as a training set.
s1s1s1s1coffeeu1 u1 u1
1
1
1
1
1
1
1
1
1
1　then  when a new user u1 comes and the detection frequencies are observed  a prediction problem arises. is the coffee property of the user 1 or 1 
s1s1s1s1coffeeu111 　from the training set  classification can be learned using machine-learning techniques. if we take nearest neighbor method  the most similar one to u1 seems to be u1  though it depends on the similarity measure . therefore  the method outputs 1.
　this approach is justified using the following example: let us consider a situation in which sensor s1 is installed in front of a coffee server. then  frequent detection by s1 means that the user comes frequently to the coffee server  which might imply that the user likes coffee. we cannot know in advance which sensors are important for classification; they might be those in front of a coffee server  the ones in front of a vending machine  or those that are completely unexpected. in any case  classification is learned through sensor detection data and the performance is evaluated by k-cross validation or the leave-one-out method  where each part of the training data is used repeatedly as both initial training data and test data.
　the obtained problem closely resembles a text categorization problem. a documentis often represented by a word vector  or a bag of words  in which each word in the document is weighted by some word weighting; all structure and linear ordering of words in the document are ignored. the termdocument matrix  or a document-by-word matrix  manning and schu：tze  1   resembles our sensor-user matrix w in that we have n documents and m words in which each user corresponds to a document and each sensor corresponds to a word. in a text categorization task  categories are annotated to each document  which can be considered as user properties in our problem. the classification is learned and used to infer the category based on the word vectors. therefore  the usermodeling problem from location information is reduced to a  multi-label  text categorization problem under the proper assumptions and simplifications.
　text categorization is typically attained using several classification techniques. we employ support vector machine  svm  as a learner  which creates a hyperplane that separates the data into two classes with the maximum-margin  vapnik  1 . the svms offer two important advantages for text categorization: term selection is often unnecessary because svms tend to be fairly robust to overfitting. in addition  there is a theoreticallymotivated  default  choiceof parametersetting  joachims  1 . these benefits are also provided by our user-modeling problem.
1 feature design
in the context of text categorization  tf-idf is frequently used as feature weighting  which encodes the intuition that  i  the more often a word occurs in a document  the more it is representative of its content  and  ii  the more documents in the word occurs in  the less discriminating it is. in our studies  it is rephrased as follows:  i  the more often a sensor detects a user  the more it is representative of the user's characteristics  and  ii  the more users a sensor detects  the less discriminating it is.
　the tf-idf weighting function tailored to our case is defined as tfidf si uj  = freq si uj 〜idf si  where freq si uj  is the number of detections of users uj by sensor si. the idf sj  is defined as idf si  = log n/uf si   where uf si  is the number of users that sensor si detects  corresponding to document frequency . a sensor that detects many users has high uf si  value  and therefore a low idf si  value. in an extreme case  a sensor detecting all n users has a zero idf value as log n/n  = 1.
　aside from tf-idf weighting  several ways of feature weighting are possible. we compare typical weighting methods that are often used and compared in information retrieval. the following is a list of feature weighting methods that we use:
  frequency  number of detections : wij = freq si uj 
  binary:if freq si uj    fthre	where
　　　　　　　　1 otherwise fthre is a threshold. in this paper  we determine fthre = 1 through preliminary experiments.
  idf:if freq si uj    fthre
　　　　　　　　1 otherwise
  tfidf: wij = tfidf si uj 
　for the weights to fall in the  1  interval and for the vectors to be of equal length  the weight can be normalized by cosine normalization  given as wijnormalized =
.
table 1: classification performance depending on various feature weighting
f-value % recall % precision % freq111binary111tfidf111idf111n-freq111n-binary111n-idf111n-tfidf111　therefore  we have 1〜1 feature weighting methods  which are compared in the next section. we call those: freq 
binary  idf  tfidf  n-freq  n-binary  n-idf  and n-
tfidf. although normalized tf-idf  n-tfidf  is known to perform well for text categorization  different results are revealed in our user-modeling problem.
1 evaluation
for each user property shown in table 1  a categorization problem is generated. more exactly  because svm is fundamentally applicable to the two-classes problem  a problem is generated for each value of the property. for example  the age property can take five values: five classification problems are generated. we make positive and negative classes for each value  say under1  i.e.  those who are under 1 and those who are not. thus the obtained classifier will classify people into those who are under 1 and those who are not. the svm is used to learn the categorization and the performance is evaluated by leave-one-out. we employ a radius basis function  rbf  kernel  which performs well in our preliminary experiments. 1
　average performances on all categorization problems are shown in table 1. for example  if we use freq as a feature weighting  the recall is 1%  meaning that we can detect 1% of persons with a property having a certain value. as a baseline  we investigate the performance of the straightforward classifier that always outputs positive; f-value is 1% and precision is 1%. thus our methodis much better than the baseline. as for feature weighting  n-freq has the highest f-value  and n-tfidf is the second best. normalization seems to function effectively for either feature weighting: it might alleviate the difference of detection frequency among users that was caused by the difference on the working time or individual device/usage characteristics. depending on feature weighting  the performance varies as much as 1 points  thereby emphasizing the importance of feature weighting for user modeling.
　in text categorization  normalized tf-idf works well and normalized frequency does not compete  joachims  1 . in our case  n-tfidf performs well  but n-freq performs the best. thus the result is not completely identical to those in the text categorizationliterature. the reason can be considered as follows: compared to documents that have many functional words and popular words with less information  location data suffers less from such a problem. therefore  a naive approach using a normalized frequency might work well.
　generally  recall is about 1% and precision is less than 1%. however  we have much better results for a particular set of user properties. for smoking  room and commuting  the f-values are as high as 1%  1%  and 1% respectively with about 1% recall and 1% precision. the under1 and over1 values of age  most values of team  and high value of coffee are all more than 1 points greater than the baseline. some of them has more than f-values of 1% with 1% recall and 1% precision.
　in summary  some user properties  such as team and room  can be predicted effectively using solely location information. to some degree  age  coffee  and smoking are also predictable. position and workfrequency are difficult to predict.
　we investigated feature weights from the learned models and found that some sensors are unexpectedly important; if we take coffee property for example  the ones around a coffee server are of the fifth and ninth importance among all sensors. the most important one was that in front of a small table where people gather for break. some corridors are also recognized as important. surprisingly a sensor exactly in front of the coffee server was slightly negatively weighted; it may be because aroundthe sensor there is a copy machineand a door  thus the detection has little information for the property. these results show the limitation of our presumption for user behaviors and effectiveness of our approach.
1 sensor weighting
in actual use-cases  it is not always possible to prepare training data consisting of users' location histories and user properties. then  the question arises: is there a way to find out whether a sensor is useful for future user modeling in advance without training data  in the real world situation  we often change sensor locations depending on actual user behaviors. therefore it is useful if we can know the importance of sensors for future user modeling so that we can properly choose sensors to fix locations. this section describes an approach to measure the usefulness of sensors using only location histories. it is similar to keyword extraction for indexing documents for future retrieval.
1 importance of sensors
a sensor that does not detect users at all is almost useless  at least for user modeling purposes. therefore  one definition to measure the usefulness  or the importance  of a sensor is simply the total number of detections: its frequency of detection. alternatively  sensors that detect many different users might be important.
　the importance of a sensor is understood as follows: the user-modeling performance becomes better than the other sets of sensors if we have a set of more  important  sensors. in the context of information retrieval  several studies have examined finding good indexing terms for document categorization. better indexing terms improve categorization performance  mladenic et al.  1 .

figure 1: number of enabled sensors versus f-value.
　we compare several importance measures for a sensor derived from text categorization studies. the importance of sensor si is defined as follows:  i  overall frequency  to-
talfreq :  ii  total detected users  totaluser : w si  = uf si   iii  total tf-idf sum
 tfidfsum : these functions can be normalized and taking a summation over every user  denoted as n-totalfreq  n-totaluser  n-tfidfsum.
　in addition  we use another importance measure  called weighted frequency  w-totalfreq   following the intuition that a sensor that detects users who are detected by fewer sensors might be more important  as  iv  weighted frequency  w-totalf
log m/sf uj    where sf uj  represents the number of sensors that detect uj. this can be regarded as a tf-idf measure on the transposed sensor-user matrix. in summary  we have seven sensor importance measures.
1 comparison and results
assume that we tentatively disable all sensors and enable them one by one in decreasing order of sensor importance. eventually all sensors are enabled and the results will coincide in any case. however  if a sensor weighting method is superior to the others  the performance will improve faster. if sensor weighting is poor  the performance grows no faster than random selection of sensors does. this approach to evaluate feature selection is found in text categorization research  joachims  1; mladenic et al.  1 .
　figure 1 shows how the categorization performance changes over the number of enabled sensors. we used nfreq for feature frequency  and we used user properties that are shown to be predictable as shown in section 1. in the figure  the undermost line  random  is plotted by selecting sensors randomly: it is shown as a baseline. the best performanceis obtained by w-totalfreq and totalfreq. other methods such as totaluser  tfidfsum  and normalized series  n-totalfreq  n-totaluser  and ntfidfsum  are better than random  but not as much as the best two.
sensor weighting is beneficial in several situations: we can identify which sensors might contribute to user modeling before learning the user properties. we can move sensors with low importance to elsewhere. these configurations of sensor allocation yield better performance during future user modeling.
1 related works and discussion
hightower distinguishes symbolic location systems and physical positioning technologies  hightower and borriello  1 . our algorithm is applicable to symbolic location data. therefore  some preprocessing is necessary for physical positioning data. for that purpose  studies to cluster position data into significant locations  ashbrook and starner  1  are useful. anonymous sensors are applicable to our approach if they are used with id-sensors  as proposed in  schulz et al.  1 .
　we discard timestamps of sensor detection. we are aware that this is a crucial abstraction. nevertheless  we persisted in our approach for two reasons: first  there are numerous alternatives for convertingtimestamped sensory data into features. tailored heuristic rules might improve the results  but we want to retain simplicity in our algorithmto protect its general applicability to many location data and many domains. second  our algorithm is mainly inspired by works in information retrieval. we discard the ordering of sensor detections so that correspondence of the data structures is maximized. considering that we would have increasing amount of location data in the real world  simplicity and scalability of information retrieval methods are of great use. for example  in japan people use rfid cards when taking trains and shopping; almost every cell phone has gps and broad band communication. in this environment a vast amount of user location data is potentially available  which needs simple and scalable processing. however  we do not disregard the usability of timestamps; actually they have much information and can be used to improve our results. our contribution in this paper is to show a bridge between techniques in information retrieval and ubiquitous computing.
　our algorithm can infer user properties if given location data history. a promising application domain of our algorithm is event spaces  nishimura et al.  1  such as conferences and business showcases  and large-scale shopping malls. frequently  data mining of sales data is conducted using user demographic properties  which can be inferred by location data.
1 conclusion
this paper proposes a new method to infer long-term user properties from a user's location history. only the detection frequencyis used. machinelearning techniquesare appliedto learn the pattern. some user properties are well predictable. we also propose sensor weighting  which enables better allocation of sensors for future uses of modeling.
　the algorithms in this paper are inspired by information retrieval. because of the  proposed  structural similarity between sensor-user matrix and term-documentmatrix  we consider that many information retrieval techniques are applicable to sensory data. user modeling in ubiquitous computing research will contribute greatly in ai studies for modeling and recognizing human behaviors.
