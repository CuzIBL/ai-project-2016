   
in case-based reasoning  cbr  systems for product recommendation  the retrieval of acceptable products based on limited information is an important and challenging problem. as we show in this paper  basic retrieval strategies such as nearest neighbor are potentially unreliable when applied to incomplete queries. to address this issue  we present techniques for automating the discovery of recommendation rules that are provably reliable and non-conflicting while requiring minimal information for their application in a rule-based approach to the retrieval of recommended cases. 
1    inroduction 
in cbr recommender systems  descriptions of the available products are stored as cases in a case library  and retrieved in response to a query representing the user's known requirements. in approaches related to conversational cbr  ccbr   aha et al.  1   a query is incrementally elicited in a dialogue with the user  often with the aim of minimizing the number of questions the user is asked before an acceptable product is retrieved  e.g.  doyle and cunningham  1; kohlmaier et al.  1; mcsherry  1 .  
 increasing the efficiency of recommendation dialogues is also a major focus of research interest in critiquing approaches to navigation of complex product spaces  e.g.  burke  1; reilly et al.  1 . however  an aspect of product recommendation that appears to have received little research attention is the ability of experienced salespersons to make reliable recommendations based on minimal information and without engaging in a recommendation dialogue with the customer.  
 for example  an estate agent may recommend property x to a customer she knows to be interested in a 1-bedroom property in location a without asking about other requirements the customer may have. to be confident about recommending property x  the estate agent must take account of all features that may affect its acceptability as well as the relative merits of other available properties. her recommendation is essentially a prediction that property x is likely to be the most acceptable of the available properties regardless of the customer's unknown preferences with respect to attributes other than location and bedrooms.     providing cbr recommender systems with a comparable ability to make reliable recommendations based on minimal information is the goal that motivates the work presented in this paper. as we show in sections 1 and 1  basic retrieval strategies such as nearest neighbor are potentially unreliable when applied to incomplete queries because of their failure to take account of all features of a recommended case. to address this issue  we present techniques for automating the discovery of recommendation rules that are provably reliable and non-conflicting while requiring minimal information for their application in a rule-based approach to the retrieval of recommended cases. 
 in sections 1 and 1  we present a prototype system for rule-based retrieval of recommended cases and techniques for automating the discovery of identification rules that uniquely identify a case from its partial description. in section 1  we present techniques for the discovery of more reliable recommendation rules that we refer to as dominance rules. in section 1  a theoretical upper bound for the size of the discovered rule sets in our approach is established and confirmed by empirical results based on publicly available datasets. related work is discussed in section 1 and our conclusions are presented in section 1. 
1    recommendation rules 
given a case library representing a collection of available products  our aim is to automate the discovery of recommendation rules to support rule-based retrieval of recommended products. the rules targeted by our discovery algorithms are of the form if q then c  or q ¡ú c  where q is a simple query in the form of a list of required features and c is the case that will be retrieved in response to q. table 1 shows a small case library in the property domain that we use to illustrate the discussion. attributes in the example case library are location  loc   style  bedrooms  beds   and reception rooms  rrs .  
table 1. an example case library in the property domain.                                                                             
 	case no. 	loc 	style 	beds 	rrs 
                                                                          
 	1 c semi  1 two  	1 c terraced 1 three  	1 b semi  1 three  	1 a detached 1 two  	1 b terraced 1 three  	1 a detached 1 two  	1 c semi  1 three  	1 c semi  1 two  	1 b detached 1 three                                                                           
 our discovery algorithms are based on recommendation criteria that give rise to recommendation rules of different types. to ensure that the discovered rules are nonconflicting  we insist that for q ¡ú c to be a recommendation rule  c must be strictly better than any other case according to the underlying recommendation criterion. the recommendation criterion on which we focus in section 1 is that the recommended case is the only case that exactly matches the user's known requirements. a similar or weaker criterion is used in some cbr approaches  e.g.  doyle and cunningham  1; mcsherry  1 . we will refer to recommendation rules based on exact matching as identification rules.  
 given a query q over a subset aq of the case attributes a  we refer to |aq| as the length of the query  and define exact-matches q  = {c :  ¦Ða c  = ¦Ða q  for all a ¡Ê aq}  where for each a ¡Ê aq  ¦Ða c  is the value of a in c and ¦Ða q  is the value of a in q. we say that a given query q is a sub-query of another query q*  or that q* is an extension of q  if aq   aq* and ¦Ða q  = ¦Ða q*  for all a ¡Ê aq. we denote the relationship by writing q    q*. for any case c  we refer to the query qc such that ¦Ða q  = ¦Ða c  for all a ¡Ê a as the characteristic query for c. clearly for any case c and query q  c ¡Ê exact-matches q  if and only if  q    qc.  
definition 1. for any case c and query q  we say that q ¡ú c is an identification rule if exact-matches q  = {c}.  
 the length of a recommendation rule is the length of the query on its left-hand side  lhs . a recommendation rule q ¡ú c is maximally general  mg  if there is no proper subquery q¡ã of q such that q¡ã ¡ú c is also a recommendation rule  of the same type . to ensure that the discovered rules require minimal information for their application  we focus on the discovery of mg recommendation rules. as we show in section 1  the only mg identification rules for case 1 in our example case library are: 
 rule 1.  if loc = a and beds = 1 then case 1 
 rule 1.  if style = det and beds = 1 and rrs = two then case 1 
 by focusing on mg rules  we also aim to maximize coverage of the product space provided by the discovered rules. however  an important point to note is that an identification rule cannot simply be applied to any query that includes the conditions on its lhs without risking violation of the exact-matching criterion. for example  rule 1 does not apply for a user looking for a 1-bedroom property in location a if it is also known that she prefers a terraced property. however  if q ¡ú c is an identification rule and q* is any query such that   q   q*  qc  then it is clear that 
  
q* ¡ú c is also an identification rule.  
 
 in   rubric  our prototype system for rule-based retrieval of recommended   cases  a recommendation rule is applied only to queries that it covers in the following sense.  definition 1. a recommendation rule q ¡ú c covers a given query q* if q   q* and q* ¡ú c is also a recommendation rule. 
 for example  an identification rule q ¡ú c covers any query q* such that q   q*  qc. given a set of recommendation rules  and a query representing a user's known requirements  rubric checks through the rules and retrieves the case recommended by the first rule that covers the target query. if none of the available rules covers the target query  rubric simply abstains from making a recommendation.   
 our rule-based approach to retrieval is related to cbr approaches in which a decision tree is used to guide the retrieval of recommended cases  e.g.  mcsherry  1 . in such a decision tree  each path to a leaf node at which a single case is recommended is an identification rule. however  rule-based retrieval has the potential to provide greater coverage  as a decision tree constructed by standard partitioning methods can have at most one rule for each case  and some of the rules may not be mg.   
1    identification rule discovery 
our algorithm for the discovery of mg identification rules  mgirules  is shown in figure 1. subqueries is a list of all sub-queries  in order of increasing length  of the characteristic query qc for a target case c. each such subquery is a candidate to appear on the lhs of a discovered identification rule. for any sub-query q1 such that exactmatches q1  = {c}  mgirules adds q1 ¡ú c to the list of discovered rules and eliminates all sub-queries q1 of which q1 is a sub-query from the remaining list of candidate subqueries. 
 to illustrate the approach  figure 1 shows all subqueries of the characteristic query  a  det  1   two  for case 1 in our example case library.  the first identification rule to be discovered is rule 1  a  1 . following the elimination of the underlined sub-queries in figure 1  the only other identification rule for case 1 is rule 1  det  1  two .  
 with each case in turn as the target case  mgirules can be used to discover all mg identification rules in a given case library. the worst-case complexity of applying  
mgirules to all n cases in a case library with k attributes is o k ¡Á n1 ¡Á 1k  if n ¡Ý 1k. if n   1k  the worst-case complexity is o k ¡Á n ¡Á 1k .   
                                                                           algorithm mgirules c  subqueries  begin    rules  ¡û ¦Õ    while |subqueries|   1 do    begin 
       q1  ¡û first subqueries         deletions  ¡û {q1}    
       if exact-matches q1  = {c}        
	       then begin 	 
                    rules  ¡û rules  ¡È {q1 ¡ú c}                         for all q1 ¡Ê rest subqueries  do                      begin 
                          if q1   q1
                          then deletions  ¡û  deletions  ¡È {q1} 
                    end                 end  
       subqueries  ¡û subqueries - deletions   
   end    return rules end  
                                                 
 
figure 1.  algorithm for the discovery of all mg  identification rules for a target case. 
 
 it is worth noting that an identification rule q ¡ú c is excluded by mgirules only if it has already discovered an mg identification rule q¡ã ¡ú c such that q¡ã    q. as any query covered by q ¡ú c is also covered by q¡ã ¡ú c  the exclusion of q ¡ú c causes no loss of coverage in rubric. 

nil   
figure 1. identification rule discovery for case 1  in the example case library. 
 
 identification rules have the important advantage that recommendations can be justified on the basis that the recommended case exactly matches the known requirements of the user. however  a limitation they share with decision trees is their failure to take account of all features of a recommended case that may affect its acceptability. the extent to which this affects their reliability is likely to depend on the importance of the user's unknown  requirements.  
 for example  according to rule 1 in section 1  case 1 can be recommended to a user who is known to be looking for a detached property with 1 bedrooms and two reception rooms.  but given the importance of location in the property domain  case 1 is unlikely to be the most acceptable case if the user happens to prefer location b. in fact  case 1 now looks a better alternative in light of the user's preference for location b. in section 1  we present techniques for the discovery of recommendation rules that do take account of all features of a recommended case  including those with respect to which the user's preferences are unknown.  1    dominance rules 
as nearest-neighbor  nn  retrieval is a common approach to product recommendation in cbr  it is natural to consider nn rules as an alternative to identification rules. given a query q over a subset aq of the case attributes a  the similarity of any case c to q is typically defined to be:  
sim c  q  = ¡Æ wasima c q   a¡Êaq
where for each a ¡Ê a  wa is an importance weight assigned to  a  and sima c  q  is a local measure of the similarity of ¦Ða c   the value of a in c  to ¦Ða q   the value of a in q. when discussing actual similarity scores  we will divide sim c  q  by the sum of all the importance weights to give a normalized similarity score. as usual in practice  we assume that for all a ¡Ê a  1 ¡Ü sima x  y  ¡Ü 1 and sima x  y  = 1 if and only if x = y. we also assume that for all a ¡Ê a  the distance measure 1 - sima satisfies the triangle inequality. for any query q  we define most-similar q  = {c : sim c  q  ¡Ý sim c¡ã  q  for all cases c¡ã}. 
definition 1. for any case c and query q  we say that q ¡ú c is an nn rule if most-similar q  = {c}.  
 as in the case of an identification rule  an nn rule cannot simply be applied to any query that includes the conditions on its lhs. if q ¡ú c is an nn rule and q* is an extension of q then there is no guarantee that mostsimilar q*  = {c}. it is worth noting  though  that q* ¡ú c is an nn rule if q* - q   qc. clearly  any identification rule is also an nn rule. 
 	as we shall see  however  nn rules offer no obvious 
 
improvement over identification rules in terms of their reliability when applied to incomplete queries. again we use the example case library in table 1 to illustrate the discussion. the importance weights we assign to loc  style  beds  and rrs are 1  1  1  and 1. we define the similarity of two values x and y of a numeric attribute a to be 
x   y
1  where  for example  max a  is the max a    min a 
maximum value of a in the case library. our similarity measure for style is equivalent to applying our similarity measure for numeric attributes to the corresponding number of adjoining properties  det = 1  semi = 1  ter = 1 . finally  our similarity measures for location and reception rooms assign a similarity score of 1 if the two values are the same and 1 if they are not the same. 
 returning to our example in section 1 of a user looking for a detached property with 1 bedrooms and two reception rooms  we can now use rule 1 as an nn rule to retrieve case 1 as the recommended case. it can easily be checked that the cases that are most similar to the user's known requirements are case 1  1  and case 1  1 . but if the user happens to prefer location b  the most similar case in light of this unknown preference would be case 1  1 . in fact  case 1 is likely to be the most acceptable case only if the user happens to prefer location a  as a preference for location c would see case 1  1  emerging as the most similar case. 
 as this example illustrates  the reliability of nn rules  and nn retrieval  is open to question when applied to incomplete queries. however  one example of a reliable nn rule is:  
rule 1.  if loc = a and beds = 1 then case 1 
 it can be seen that the similarity of case 1 to any query that includes the conditions on the lhs cannot be equaled by any other case regardless of the user's preferences with respect to style or reception rooms. for example  case 1 reaches its maximum similarity of 1 if the user happens to prefer a detached property with two reception rooms  but these additional preferences also increase the similarity of case 1 from 1 to 1. 
 rules 1 and 1 are positive and negative examples of the type of recommendation rule we refer to as dominance rules. 
definition 1. for any case c and query q  we say that q ¡ú c is a dominance rule if most-similar q*  = {c} for all extensions q* of q. 
 as well as being more reliable  dominance rules provide more coverage than identification or nn rules. it can easily be seen that if q ¡ú c is a dominance rule  then q* ¡ú c is also a dominance rule for any query q such that q    q*. that is  a dominance rule covers any query that includes the conditions on its lhs. an important role in our approach to the discovery of dominance rules is played by the concept of case dominance proposed by mcsherry  as a basis for recognizing when recommendation dialogues can be terminated without loss of solution quality. 
definition 1.  a given case c1 dominates another case c1 with respect to a query q if sim c1  q*    sim c1  q*  for all extensions q* of q. 
 it can be seen that q ¡ú c is a dominance rule if and only if c dominates all other cases with respect to q. mcsherry  uses the triangle inequality to show that a given case c1 dominates another case c1 with respect to a query q if and only if: 
sim c1 q    sim c1 q    ¡Æwa 1  sima c1 c1  	  
a¡Êa aq
 we focus on the discovery of mg dominance rules q ¡ú c such that q   qc  where qc is the characteristic query for c. as well as reducing the complexity of the discovery process  this ensures that recommendations based on the discovered rules can be justified on the grounds that the recommended case exactly matches some of the user's known requirements  and that there is no other case that exactly matches those requirements. it can be seen from the following theorem that our exclusion of dominance rules that do not have this property cannot result in failure to discover dominance rules of the shortest possible length for a given target case.    
theorem 1.  for any dominance rule q ¡ú c  there exists a dominance rule q' ¡ú c of equal length such that q'   qc. 
proof. let q ¡ú c1 be a dominance rule and let q' be the query such that ¦Ða q'  = ¦Ða c1  for all a ¡Ê aq. to establish that q' ¡ú c1 is also a dominance rule  it suffices to show that c1 dominates any other case c1 with respect to q'. for any a ¡Ê aq  we know from the triangle inequality that: 1 - sima c1  q  ¡Ü 1 - sima c1  q'  + 1 - sima q'  q   = 1 -  sima c1  q'  - sima c1  q . so sima c1  q'  -  sima c1  q'  = 1 -  sima c1  q'  ¡Ý sima c1  q  - sima c1  q . as c1 dominates 
c1 with respect to q and aq = aq'  it can now be seen that: sim c1  q'  - sim c1  q'  ¡Ý sim c1  q  - sim c1  q  
  ¡Æwa 1 sima c1 c1  . it follows as required that c1 a¡Êa aq'
dominates c1 with respect to q'.   
 to convert mgirules to a new algorithm called mgdrules for the discovery of all mg dominance rules q ¡ú c for a target case c such that q    qc  it is necessary only to replace the condition underlined in figure 1 by the condition: 
c dominates all other cases with respect to q1 
 as in the case of mgirules  the worst-case complexity of applying mgdrules to all n cases in a product case library with k attributes is o k ¡Á n1 ¡Á 1k  or o k ¡Á n ¡Á 1k  depending on whether n ¡Ý 1k. 
1    discovered rules 
as might be expected  our algorithms discovered fewer dominance rules  1  than identification rules  1  in the example case library. however  the 1 dominance rules cover 1% of all possible queries in the example product space compared to 1% for the 1 identification rules  and 1% for a set of 1 decision-tree rules of the shortest possible length for each case. in this section  we examine the behavior of our algorithms when applied to case libraries of more realistic size. as the coverage gains provided by dominance rules are measurable only in finite product spaces  our analysis focuses on the number and length of the discovered rules.  
 it can be seen that for any case c  qc ¡ú c is both an identification rule and a dominance rule provided no other case has the same value as c for every attribute. two cases with identical descriptions in a product case library are said to be inseparable  mcsherry  1 . at least one rule of each type must therefore be discovered for a target case provided there is no case from which it is inseparable.  
 we now establish an upper bound for the number of rules that can be discovered by mgirules or mgdrules for a given target case.   
theorem 1.  for any case c  the number of mg recommendation rules q ¡ú c such that q    qc can never be more than kc k / 1    where k is the number of attributes in the case library and  k/1  is the integer part of k/1. 
proof.  first we note that if q1 ¡ú c and q1 ¡ú c are distinct 
mg recommendation rules such that q1  q1   qc  then  
aq1 and aq1 are incomparable subsets of a. for example  if 
 aq1  aq1 then contrary to our assumption q1 ¡ú c cannot be mg. the result immediately follows from sperner's  proof that the maximum number of incomparable subsets of any set of size m is mc m / 1  .   
 for a case library with 1 attributes  the maximum number of rules that can be discovered by our algorithms for a given target case is 1 c1 = 1. table 1 shows the corresponding limits for attribute numbers in the range from 1 to 1. however  we now present empirical evidence which suggests that the discovered rule sets tend to be much smaller in practice than their maximum possible sizes.   
 
table 1.  maximum rule-set size for a single case. 
                                                                            
 no. of attributes: 1 1 1 1  maximum size:  1 1 1 1 
                                                                           
 
 both of our experimental case libraries have 1 attributes  and include continuous as well as nominal attributes. based on the autompg dataset from the uci repository  our first case library contains the descriptions of 1 automobiles in terms of attributes one might expect to see in a recommender system for previously-owned automobiles  e.g.  year  origin  mpg . our second case library is travel  www.ai-cbr.org   a standard benchmark containing the descriptions of over 1 holidays in terms of attributes such as price  destination  and transport.  
 figure 1 shows the numbers of rules discovered by our algorithms over all  complete  cases in autompg and travel  apart from two inseparable cases in travel for which no rules were discovered. the largest rule-set size for any case  1  is considerably smaller than the maximum rule-set size for 1 attributes  1 . on the whole  the results for autompg and travel are remarkably similar  with fewer dominance rules than identification rules discovered in both case libraries. the average rule-set size of 1 for dominance rules in travel is based on a total of 1 discovered rules.  

  autompg       travel        autompg       travel       
	i rules	i rules	d rules	d rules
figure 1. numbers of discovered identification  i   and dominance  d  rules for each case. 
 
 table 1 shows the lengths of the identification and dominance rules discovered by our algorithms in autompg and travel. as might be expected  the discovered dominance rules are longer on average than the identification rules. in both case libraries  though  the discovered dominance rules provide clear benefits in terms of reducing the number of attributes whose preferred values must be known for a reliable recommendation to be made. these benefits are particularly evident in travel  with reductions in query length of up to 1%  and 1% on average  relative to queries involving all eight attributes.   
 
table 1. discovered rule lengths in autompg and travel.                                                                           
   	   	    min 
 	identification rules: autompg  	1  
 	 	 	  	travel            1   
 	 
  	dominance rules:   	autompg 	1  avg  
1  1  
1  max 
1 
1 	  	 
1 	   	 	 	        	travel 	1  1  1   
                                                                             
1    related work  
recent work by mcsherry  1a  provides a different perspective on recommendation rule discovery in which the discovered rules  one for each case  are used to describe the behavior of an existing recommender system in localized areas of the product space. for example  the discovered rules can be used to identify conditions in which a given product will be recommended by the system  or regions of the product space that are sparsely represented. however  the discovered rules may not be mg and there is no discussion of their possible use for rule-based retrieval.    burke and kass  propose a rule-based approach to retrieval in a system for case-based teaching of advertising sales techniques. in spiel  stories relating lessons learned by 
experienced salespersons are retrieved in response to a student's actions in a simulated sales environment. retrieval in spiel is opportunistic  conservative and non-mandatory; that is  stories are retrieved at the system's initiative and only if highly relevant to the student's current situation.  by design  our rule-based approach to retrieval is also conservative and non-mandatory  though it can easily be combined with nn retrieval of a less strongly recommended case if none of the available recommendation rules covers the user's known requirements. we also propose to investigate its potential role as an opportunistic and complementary retrieval strategy in recommender systems based on ccbr or critiquing approaches.  
 potential benefits include enabling recommender systems to recognize when recommendation dialogues can be safely discontinued without affecting solution quality. often in critiquing  for example  an initially recommended case is retrieved in response to an initial query entered by the user  e.g.  burke  1; reilly et al.  1 . in this situation  the existence of a dominance rule that covers  the user's initial query may be a good indication that a more acceptable case is unlikely to be found no matter how the user chooses to critique the initially recommended case.   given the importance of explanation in recommender systems  e.g.  herlocker et al.  1; mcsherry  1b   simplifying explanations of why a given product is recommended is another potential benefit in approaches that aim  but cannot guarantee  to minimize the length of recommendation dialogues  e.g.  doyle and cunningham  1; kohlmaier et al.  1; mcsherry  1 .  
1    conclusions 
aiming to improve the reliability of recommendations based on incomplete queries in cbr recommender systems  we have investigated two possible approaches to the discovery of recommendation knowledge to support a rule-based approach to the retrieval of recommended cases. while having the potential to provide greater coverage than decision-tree approaches and enabling recommendations to be easily justified  the identification rules discovered by our first discovery algorithm offer no obvious improvement in terms of their reliability when applied to incomplete queries. on the other hand  retrieval based on dominance rules is provably more reliable than decision-tree approaches and nn retrieval when applied to incomplete queries in that no competing case can equal the similarity of a recommended case regardless of the user's unknown preferences. 
