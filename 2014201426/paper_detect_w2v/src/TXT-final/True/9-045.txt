ion spaces* 
by 
earl d. sacerdott 
stanford research institute 
a r t i f i c i a l intelligence center menlo park  california 1 

abstract 
　　　a problem domain can be represented as a hierarchy of abstraction spaces in which successively finer levels of detail are introduced. the problem solver abstrips  a modification of strips  can define an abstraction space hierarchy from the strips representation of a problem domain  and it can utilize the hierarchy in solving problems. examples of the system's performance are presented that demonstrate the significant increases in problem-solving power that this approach provides. then some further implications of the hierarchical planning approach are explored. 
     key words: problem solving  heuristic search  representation  abstraction space  robot planning  hierarchical planning. 
introduction 
st 
　　　general purpose problem solvers  such as strips or gps 1 must do their work using general purpose search heuristics. unfortunately  by using such heuristics  it is not possible to solve any reasonably complex set 
of problems in a reasonably complex domain. regardless of how good such heuristics are at directing search  attempts to traverse a complex problem space can be caught in a combinatorial quagmire. 
     this paper presents an approach to augmenting the power of the heuristic search process. the essence of this approach is to utilize a means for discriminating 
between important information and details in the problem space. by planning in a hierarchy of abstraction spaces in which successive levels of detail are introduced  significant increases in problem-solving power have been achieved. 
　　　section ii sketches the hierarchical planning approach and gives motivation for i t s use. sections i i i and iv describe the definition and use of abstraction spaces by abstrips  abstraction-based strips   a modification of the strips problem-solving system that i n corporates this approach. section v describes the performance of the system. section vi discusses the impli-
cations of this approach for problem solving and for robotics. 
the work reported herein was sponsored by the advanced research projects agency of the department of defense under contract dahc1-c-1 with the u.s. army research office. 
references are listed at the end of this paper. 
	ii 	the motivation for using 
abstract ion spaces in problem solving 
　　　it was not quite f a i r to assert in the previous section that a complex problem domain is beyond the combinatorial capability of general purpose problem solverb. a problem solver deals not with the problem domain itself  but with some representation of that domain. 	so it would be more correct to state that a complex representation exceeds the scope of general purpose problem solvers. 
     unfortunately  a straightforward transcription of a complex problem domain w i l l yield a complex representation. however  a well-chosen transcription can lead to a simpler representation. by choosing such a simplifying representation  one can have the problem solver do its work in a context that is simple enough for some useful problem solving to take place. 
　　　in other words  the heuristic search through the simplifying representation w i l l be of sufficiently short 
duration that a goal state in the problem space can be reached. such a representation displays what mccarthy and hayes term  heuristic adequacy   
　　　attempts to achieve simplifying representations  such as the  macro operator   or macrop  of the strips problem solver 1 have heretofore tried to preserve  in mccarthy and hayes' terminology   epistemological adequacy ; that i s   the simplifying representations had to preserve a l l the detail that was needed to solve the problem at hand. a macrop simplifies the representation of a problem domain by providing a means of selecting at one time an entire sequence of primitive operators  linked in a semantically sensible manner. but it preserves every detail of the preconditions and effects of its constituent operators. 
　　　such simplifying representations can provide only limited enhancement to the power of a problem-solving system because of a somewhat dismaying fact; 	for a sufficiently complex problem domain  no epistemologically adequate representation can be heuristically adequate. 
　　　epistemological adequacy implies that every relevant detail is properly dealt with. but attention to detail is precisely what defeats heuristic adequacy. a good heuristic evaluation function w i l l enable a problem solver to reject most of the possible paths in a situation space. but if a l l the details are attended to  the evaluation function must be applied at a l l the 
nodes at which the details are affected. the combinatorics of the expanding search space w i l l enable the problem solver to solve only rather simple problems. 
     a superior approach to problem solving would be to search f i r s t through an abstraction space  a simplifying 

1 

representation of the problem space in which unimportant  1  	a set of operator descriptions-each action details are ignored. 	when a solution to the problem in in the problem domain is represented by an the abstraction space is discovered  all that remains  operator  for changing one model into an-is to account for the details of the linkup between the 	other. 	an operator is defined by a precon-steps of the solution. 	this can be regarded as a se- dition wff  an add l i s t   and a delete l i s t . quence of subproblems in the original problem space. for an 	operator 	to be applicable in a given if they can be solved  a solution to the overall prob- model its precondition wff must be satisfied  lem w i l l have been achieved. 	if they cannot be solved  the add and delete lists describe which wffs more planning in the abstraction space is required to a r e changed when an application of the opera-discover an alternative solution. t o r transforms the world model. polyab cites the importance of this approach for a problem is stated to strips as a goal wff. human problem solving. 	it has been used by computer strips must develop a sequence of operator applications programs to find proofs in symbolic logic1  ignoring that will lead to a world model in which the goal wff the nature of the connectives and the ordering of sym- is 	true. 	a gps-like means-ends analysis strategy1 is bols as details  and to detect edges in scenes1  using 
a shrunken picture with less detail . employed to generate the operator sequence. a  difference  between the i n i t i a l model and the the concept can readily be extended to a hierarchy 	goal model is extracted. 	strips determines which in-of spaces  each dealing with fewer details than the stances of which operators would reduce the difference; ground space below it and with more details than the the instance that most reduces the difference is se-ibstraction space above i t . 	by considering details 	lected. 	if it is applicable in the i n i t i a l state  i.e.  only when a successful plan in a higher level space its precondition wff is true in the i n i t i a l world gives strong evidence of their importance  a heuristic model   the operator is applied  and a new world model search process w i l l investigate a greatly reduced por- 	created. 	if the goal wff is true in the new model  tion of the search space. strips is done. if not  the difference between the new state and the goal state is extracted  and the process      the process of abstraction defined in section i i i is general in that it is not domain-dependent. but it continues  is highly structured and very dependent on the syntax if the operator instance that most reduced the of the problem domain. 	it is a f i r s t step  providing difference is not applicable in the i n i t i a l state   i . e .   no capability for a  representational shift  that would its drecondition wff is not provable in the world restate a d i f f i c u l t problem in terms that render its model   the precondition is set up as a subgoal wff. solution markedly easier. 	rather  it employs a series strips w i l l then try to develop a sequence of operator of representational nudges that increase the power of applications that will lead to a world model in which the heuristic search process over a problem space. the subgoal wff is true. if the subgoal is achieved  the operator instance can be applied as before. if 	i i i 	automated definition not  another operator instance is selected  and the of abstraction spaces process continues as before.      the following sections describe the abstrips sys- tem  a modification of the strips problem solver.1 abstraction spaces in the strips context a brief description of the aspects of strips that are for 	a 	practical problem-solving system  one would relevant to the discussion to follow is presented be- like to have an abstraction space differ from its low.* 	the reader is encouraged to see section ii of ground space enough to achieve a significant improve-ref. 1 for a brief but thorough summary of the opera- ment in problem-solving efficiency  but yet not so much tion of strips or ref. 1 for a f u l l description. 	as 
briefly  the representation of a problem domain    to make the mapping from abstraction space to ground space complex and time-consuming. with which strips deals consists of:      for the strips system  this criterion is met by having the abstraction spaces differ from their ground 	 1  	a world model-the world model is a set of spaces only in the level of detail used to specify the wffs in the predicate calculus  describing preconditions of operators. 	although the change in facts  e.g.  connects d1.r1 r1   or representation provided by this choice may seem i n t u i -	laws  e.g.  vrx ry dx connects dx rx ry  	 =  tively insufficient  it satisfies the criterion well. connects dx.ry.rx   of the problem domain. the world model can remain unchanged; there is no need to delete unimportant details from it because they can simply be ignored. no operators need be deleted in 
their entirety; if all they do is achieve details  they w i l l never be selected as relevant. any change to the *ln the interests of brevity and clarity  no further add or delete lists of the operators would cause the mention w i l l be made of the macrops in the strips sys- operators' effects to be very different in different tem. 	a macrop is the result of generalizing a previ- spaces. 	since the applicability of a particular oper-ously completed plan. 	most of its valid subsequences ator at some intermediate state might depend on any of operators can be extracted for use in further plan- effects of any previously applied operators  the map-ning. 	each such subsequence could be treated by ping of plans among spaces would be rendered too com-
　　　thus  an abstraction space in the strips context differs from i t s ground space only in the preconditions of its operators. the precondition wffs in an abstraction space w i l l have fewer literals than those in its ground space. the literals omitted w i l l be those that are  details  in the sense that a simple plan can be found to achieve them once the more   c r i t i c a l   literals have been achieved. for instance  consider a pushthrudr operator  which describes the effects of a robot pushing a particular object through a doorway into an adjacent room. in a high level abstraction space  the operator would be applicable whenever the object was pushable and a doorway into the desired room existed. in a lower level space  it would also be required that the robot and the object be in the room connected by the doorway with the target room  in a s t i l l lower 
abstraction space  the door would also have to be open. finally  in the original representation of the problem space  the robot would also have to be next to the box  and the box would have to be next to the door. 
　　　for abstrips to be able to discriminate among various levels of detail  each l i t e r a l within the precon-
ditions of each operator in a problem domain is assigned a   c r i t i c a l i t y   value at the time the domain is f i r s t defined. only the most c r i t i c a l literals w i l l be in the highest abstraction space  whereas in lower spaces less c r i t i c a l ones w i l l also appear. 
assigning critlcallty to the literals of a precondition 
　　　there are many possible approaches to the assignment of c r i t i c a l i t y values to the literals of an operator's precondition wff. they span a range from a manual assignment as part of the specification of the problem domain to a completely automatic assignment of c r i t i c a l i t i e s . 
　　　at one extreme  the definition of a problem domain could include an explicit specification of c r i t i c a l i ties  reflecting the deflner's intuition about the domain. for example  if one were to define a  turn on the lamp x   operator  he might say it was essential that / he a lamp. he might say it was very important to be in the room with the lamp  less important that the lamp's cord be plugged in  and s t i l l less important to be next to the lamp. specifying the c r i t i c a l i t y value of a l i t e r a l by a number preceding it in braces  one might define the precondition wff of the  turn on the lamp  operator as 

　　　at the other extreme  a scheme can be developed to perform an exhaustive analysis of the nl possible ordar-
ings of the n literals in a precondition in order to 
determine which literals can be achieved once other literals are assumed to be true. 	the results at this 
analysis can be used to specify the c r i t i c a l i t y values for literals of the precondition. 
　　　for abstrips  an intermediate approach to c r i t i c a l i t y assignment was adopted  a predetermined  partial  ordering of a l l the predicates used in describing the problem domain was used to specify an order for examining the literals of the precondition wffs of a l l the operators in the domain. first  a l l literals whose truth value could not be changed by any operator in the domain were assigned a maximum c r i t i c a l i t y value. then  each remaining l i t e r a l was examined in an order determined by the partial ordering. if a short plan could be found to achieve a l i t e r a l from a state in which all previously processed literals were assumed to be true  then the l i t e r a l in question was said to be a detail and 
was assigned a c r i t i c a l i t y equal to i t s rank in the part i a l ordering. if no such plan could be found  the l i t eral was assigned a c r i t i c a l i t y greater than the highest rank in the partial order. 
　　　for the domain including the  turn on the l a m p w operator  the partial ordering might look like the f o l lowing: 

　　　the type j! lamp  l i t e r a l could not be changed by any operator in the domain  and so it would be assigned a maximum c r i t i c a l i t y  1  in this case . the two inroom literals would be examined next  an arbitrary order can be chosen for literals whose predicates have equal rank in the partial ordering . they cannot be achieved from a state in which type 1 lamp  is asserted  and so they 
would be assigned a c r i t i c a l i t y greater than the highest rank in the partial order  in this case 1. plugged-in  ♀.  can be achieved from a state in which the inroom literals and the type l i t e r a l are true. it can be 
achieved by a plan to go to the lamp cord  pick it up  bring it to a socket  and plug it i n . so it would be assigned a c r i t i c a l i t y equal to i t s rank in the partial ordering  namely  1  similarly  a plan can be found to achieve nextto me.i  from a state in which the previously processed literals are true  and so it would be assigned a c r i t i c a l i t y of 1. 
　　　regardless of the method used to determine the c r i t i c a l i t y values  they define a hierarchy of abstraction spaces. the next section shows how such a hierarchy can be used to aid the planning process. 

　　　to take advantage of the hierarchical planning approach offered by the use of abstraction spaces  the abstrips system-whose flow of control is shown in figure 1-has a recursive executive program. this program accepts two parameters. the f i r s t is a c r i t i c a l i t y value indicating the abstraction space in which planning is to occur. the second is a l i s t of nodes front the search tree in the higher space  representing a skeleton 

1 

1 

plan. when a new problem is posed to abstrips  the external interface program sets the preconditions of a dummy operator to the goal wtt. the domain's maximum c r i t i c a l i t y   which was determined when criticalitieb were assigned  is retrieved. the executive is called with the c r i t i c a l i t y set to the maximum and the skeleton consisting of the dummy operator. 
　　　within the highest abstraction space  the executive plans to achieve the preconditions of the dummy step in the skeleton plan  i.e.  the main goal. when a plan is found  the executive computes the c r i t i c a l i t y 
of the next lowest space in which planning is needed  and it builds a skeleton of nodes along the path of the successful plan. 	the executive then invokes itself recursively. 	the new invocation solves in turn the subproblems of bridging the gaps between steps in the skeleton plan and of ensuring that the steps in the skeleton plan are s t i l l applicable at the appropriate 
points in the new plan. the final step in the skeleton is always the dummy operator  and so the final applicab i l i t y check ensures that the original goal has been reached. mien a l l subproblems have been solved  the executive invokes itself for planning in a s t i l l lower space. this recursion continues until a complete plan is built up in the problem space itself. 
　　　this search strategy might be termed a  lengthf i r s t   search. 	it pushes the planning process in each abstraction space all the way to the original goal state before beginning to plan in a lower space. this enables the system to recognize as early as possible the steps that would lead to dead ends or very inefficient plans. 
　　　if any subproblem in a particular space cannot be solved  control is returned to the process in its abstraction space. 	the search tree is restored to its state prior to the selection of the node that led to failure in the ground space. 	that node is eliminated from consideration  and the search for a successful plan at the higher level continues. 
　　　this failure mechanism is analogous to the automatic backtracking feature of the planner language. it has the major defect that when a failure of a lower level process is reported  the process and the context in which the failure occurred are no longer around for analysis. so abstrips relies heavily on being able to produce good plans at the highest level. 
　　　this requirement has led to two modifications to the search algorithm originally employed by strips. the f i r s t is an alteration of the evaluation function used to select which node in the search tree to expand next. strips emphasizes the estimated cost of achieving the goal from the given node and deemphasizes the 
cost of arriving at the node from the i n i t i a l state. thus  it has a tendency to find a slightly longer plan quickly  rather than the cheapest plan more slowly. but each extra step in a high abstraction space is likely to lead to many extra steps in the corresponding plan in the problem space. thus  for abstrips  the evaluation function has itself been made a function of the level of abstraction. at the highest level  abstrips gives equal weight to the cost of reaching a given node and to the estimated cost of reaching the goal from that node. this evaluation function changes incrementally as the level of abstraction decreases  
u n t i l it reaches the old strips function at the level of the problem space. 
　　　the second modification involves postponing the selection of one among several equivalent instances of a relevant operator. during the process of selecting relevant operators to reduce a particular difference  a partial instantiation of the operators' parameters 
may occur. for example  if the difference were that the robot was not in room 1  then the operator  go through a door into a room  might be selected and i n stantiated to  go through a door into room 1.  the preconditions of this operator would then be analyzed by the theorem prover to determine which door to choose. if several choices seem equally good to strips  1 e   the states in which the various choices can be applied 
are equally d i f f i c u l t to reach   then it would arbitrari l y pick a door. 
     for abstrips  alternative instantiations in an abstraction space might appear equivalent  and yet one 
choice might be substantially superior when further details are considered. so abstrips defers its decision when more than one equivalent  best choice  of a relevant operator is found. the partially instantiated relevant operator  e.g.   go through a door into room 1   is used in planning. when subsequent analysis in a lower abstraction space reveals a preferred instantia-
tion  that instantiation is then chosen. if this selection should eventually lead to failure  the other instantiations can s t i l l be chosen through the backtracking mechanism. 
　　　in summary  hierarchical planning using abstraction spaces in a  length-first  search technique postpones extending the search tree through the levels concerned with the detailed preconditions of an operator until it knows that doing so w i l l be highly effectual in reaching the goal  because the operator lies along an almost certainly successful path . by avoiding work on fruitless 
branches of the search tree  the technique achieves significant efficiencies in the formulation of complex 
plans. 
v examples of abstrips' performance 
     to clarify the issues raised and the way in which the abstrips system works  the system's performance is 
traced through some examples below. the abstrips system consists of some 1 bbn-lisp functions  which run as compiled code on a pdp-1 computer. all the examples presented were drawn from the environment of the stanford research institute mobile robot. the domain consists of seven rooms interconnected by doorways. operators have been defined that model the robot's ability to navigate to any object or location within a room  to push boxes within a room or through a doorway  to navigate through a doorway  to block a doorway using a box  and to unblock a doorway. in addition  f i c t i t i o u s operators have been defined to model the opening and closing of doors; these actions are beyond the robot's capabilities. in a l l   1 predicate calculus wffs have been defined as axioms to model the robot domain. 
       the definition of the domain is essentially identical to the one used for the examples in the latest report on the strips system.1 

1 

1 

instances were computed. the f i r s t of these  pushb  b1.b1   was examined. i t s precondition wff in t h i s abstraction space was true in the i n i t i a l s t a t e ; bo the operator was a p p l i e d . this resulted in a new state in which the robot  box1  and box1 were next to each other. the d i f f e r e n c e between t h i s state and the goal state was computed and found to be inr1m r1t  runi . two relevant operator instances were found  and the f i r s t   g1thrudr parl1 runi   was examined.  parl1 is an uninstantiated parameter.  i t s precondition wff in t h i s abstraction space  type runi room  a type  parl1 do1r  a ery c1nnects parl1 ry runi   was s a t i s f i e d when parl1 was i n s t a n t i a t e d to dunimys. so guthrudr dunimys runi  was applied  and t h i s generated a state ir which the goal wff was t r u e . figure 1 b  
depicts the search tree in the highest abstraction space. the p o s i t i o n i n g of the nodes suggests the correspondence to the nodes in the strips search t r e e . 
　　　a skeleton plan was b u i l t c o n s i s t i n g of the nodes at which the two operators were applied. the plan was: 
pushb box1 box1 ; gothrudr dunimys runi  
planning then began in the space of c r i t i c a l i t y 1. 
       the f i r s t subgoal was the precondition wff in t h i s a b s t r a c t i o n space of the f i r s t operator  pushb b1  b1 . the d i f f e r e n c e between the i n i t i a l state and the one in which the wff was true was inr1om robot  rpdp . operator instances relevant to reducing t h i s difference were gothrudr parl1 rpdp  and pushthrudr  robot par1 rpdp . the precondition wff of the f i r s t was tested  but it was not completely s a t i s f i e d . there were s t i l l differences inroom robot hmys  or inroom  robot rcuc  before gothrudr parl1 rpdp  could be app l i e d   i . e .   the robot was not yet in a room a d j o i n i n g rpdp . the pushthrudr operator was completely i n a p p l i cable because the robot is not a pushable o b j e c t . 
　　　then abstrips t r i e d to reduce the differences that would render g1thrudr parl1 rpdp  a p p l i c a b l e . four relevant operators were found. the f i r s t was gotkrudr 
 par1 rmys   	and i t s precondition wff was not s a t i s f i e d e i t h e r  the robot was not in a room adjoining rmys . the second relevant operator was g1thrudr par1 rclk   and i t s precondition wff was s a t i s f i e d when par1 was i n s t a n t i a t e d to dclkril. so gothrudr dclkril rclk  was 
a p p l i e d   producing a state in which gotkrudr dpdpclk  rpdp  was applicable. that operator was applied  p r o ducing a state in which the i n i t i a l subgoal  the p r e c o n d i t i o n wff of pushb b1 b1   was t r u e . the pushb operator was then applied. 
     then a new subgoal was set up  in which the precond i t i o n s of gothrudr dunimys runi  in t h i s space were t r u e . the difference between the current state and the subgoal state was inr1m robot rmys . g1thrudr par1  rmys  was selected as a relevant operator  and i t s preconditions were s a t i s f i e d when par1 was bound to dmvspdp. so gothrudr dmyspdp rmys  was applied  p r o ducing a state in which the subgoal was s a t i s f i e d . the operator associated w i t h t h i s subgoal  gothrudr dunimys  runi   was applied  and the goal state was again reached. 
figure 1 c  shows the search trees in t h i s space. 
the f o l l o w i n g new skeleton plan was b u i l t up: 
gothrudr dcxkril rclk ; gothrudr dpdpclk rpdp ; pushb 
 b1.box1 ; g1thrudr dmyspdp rmys ;gothrudr dunimys  runi . the planning process was then reinvoked in an a b s t r a c t i o n space of c r i t i c a l i t y 1. 
     the f i r s t subgoal  the precondition wff of the f i r s t step in the skeleton plan  gothrudr dclkril rclk   was 
not s a t i s f i e d in the i n i t i a l model. the difference was status dclkril open . an analysis showed that it could be eliminated by applying gotod dclkril  and then open  dclkril . this resulted in a state that s a t i s f i e d the f i r s t subgoal. so gothrudr dclkril rclk  was a p p l i e d . 
     each of the remaining subgoals of the process in t h i s a b s t r a c t i o n space were immediately s a t i s f l a b l e   and so each step of the skeleton plan was applied in t u r n   r e s u l t i n g in a state in which the o r i g i n a l goal 
1 was s a t i s f i e d . the skeleton plan produced was gotod  dcucril ; open  dcucril   followed by a l l the steps of the previous skeleton p l a n . figure 1 d  shows the search trees in t h i s space. 
　　finally  planning took place in the ground space  the space including literals of c r i t i c a l i t y 1. the 
f i r s t three steps of the skeleton plan were applied in turn. but the preconditions of gothrudr dpdpclk.rpdp  were not satisfiable in a state in which the robot had just come through dcikril. the difference was nextto  robot dpdpcuc . and analysis indicated that it could be eliminated by applying gotod dpdpclk   enabling gothrudh dpdpciic rpdp  to be applied. 
　　　the next subgoal  the preconditions of pushb box1  boxl   was not satisfied at this point. the difference was nextto robot box1   which could be eliminated by an application of the first relevant operator selected  gotob box1 . after p1shb b1 b1  was applied  the next two subgoals failed because the robot was not next to the appropriate door. an analysis similar to the one that occurred with dpdpc1x was performed  enabling abstrips to finish the plan with an operator to go to and an operator to go through dmyspdp and dunimys. 
　　　note that the planning in this space is just as if strips were given seven small problems to solve consecutively  without the benefit of macrops. the search trees for the ground space are shown in figure 1 e . the entire planning process for abstrips produced 1 nodes  1 of which were on the successful path in one space or another. this process required 1 of com-
puter time. this is less than one-fifth of the time required by the nonhierarchical strips. 
other exampleb 
       the set of tasks from the most recent report on strips1 was run on abstrips. the running times and the search trees are compared with those from the strips system in table 1. figure 1 plots the planning time as a function of plan length for strips and abstrips on an extended set of problems from the robot domain. 

1 
	vi 	further implications oi the use 
	of abstraction spaces 	in planning 
　　　this paper has shown how the representation of a problem domain as a hierarchy of abstraction spaces dramatically improved the performance of a problem solver. 	this section b r i e f l y considers the implications 
of such a h i e r a r c h i c a l representation for some other problem areas in robotics and problem s o l v i n g . 
learning task-specific knowledge 
　　general-purpose problem solvers have tended to be weak problem solvers. because the h e u r i s t i c s they use to guide the search through the problem space must be generally applicable  they are not especially powerful in any p a r t i c u l a r task domain. on the other hand  spe-
c i a l purpose programs to solve problems in a p a r t i c u l a r domain have been notably successful. the heuristic dendral program1 and the game playing programs display f a r more problem-solving power in t h e i r p a r t i c u l a r domains of competence than a general purpose problem solver could muster. this competence is derived to a large degree from the great amount of t a s k - s p e c i f i c knowledge that has been incorporated i n t o t h e i r search h e u r i s t i c s . 
　　　unfortunately  while these special purpose programs display i n t e l l i g e n t behavior w i t h i n t h e i r l i m i t e d domain  they are worth l i t t l e in any other domain. can a more 
generally i n t e l l i g e n t system be constructed t h a t   when presented with t a s k - s p e c i f i c knowledge  basic to which 
1 

is the d e s c r i p t i o n of the problem domain   	can incorporate that knowledge into i t s search h e u r i s t i c s   
　　　the process of automated d e f i n i t i o n of abstraction space o f f e r s a possible approach. by applying a general purpose problem solver to a p a r t i c u l a r domain in the most general manner described in section 1  a tasks p e c i f i c d e t a i l hierarchy can be b u i l t up. the a b i l i t y of a system to discriminate important considerations from mere d e t a i l s is an important aspect of task-
s p e c i f i c 	knowledge. 
　　　a f u r t h e r aspect of task-specific knowledge is the f a c i l i t y for negotiating those areas of the search space that are easily t r a v e r s i b l e . in the h i e r a r c h i c a l representation framework  easily t r a v e r s i b l e areas correspond to subproblems of achieving d e t a i l s   once the more c r i t i c a l aspects of a problem have been solved. 
　　　the alistrips system determines that a riven l i t e r a l is a d e t a i l when it has b u i l t a small nlan to achieve a state in which it is t r u e . that small plan can be saved as a macrop  to be used as the f i r s t - c h o i c e relevent operator whenever the d e t a i l needs to be achieved. the r e l a t i v e l y small number of macrops lormed in t h i s way  when added to the set of basic operators  constitute a 
　　　basic body of knowledge about how to solve problems in a p a r t i c u l a r task domain. 
planning with m u l t i p l e outcome operators 
　　　the use of a h i e r a r c h i c a l representation can g r e a t l y s i m p l i f y the process of creating conditional plans  plans with information gathering operators  and plans w i t h loops. this is because the outcomes of these operators are uncertain only to a p a r t i c u l a r level of d e t a i l . thus  in a higher abstraction space a simple s p e c i f i c a t i o n can adequately model the preconditions and e f f e c t s of the operators  although some of the effects may have to be described in terms of u n i n s t a n t i ated parameters. a drawback to t h i s approach is that  as noted in section i i i   the mapping of plans among spaces becomes d i f f i c u l t when the e f f e c t s of operators are abstracted  nevertheless  the s i m p l i c i t y of representation of these rather complex operators renders t h i s scheme a t t r a c t i v e . 
　　　as an example  in planning to drive to the a i r p o r t to catch a plane  one would use a  park the car  operat o r . such an operator might have the e f f e c t of   i f lot a is not f u l l   park inside lot a. else if lot b is not f u l l   park inside lot b. else drive around  and then park the c a r .   if one plans at a high l e v e l of abstract i o n to drive to the a i r p o r t   he does not consider the  park the car  operator in i t s f u l l complexity. rather  he considers an image of the operator in an abstraction space in which no uncertainties e x i s t . it might have the simple precondition a t   c a r   a i r p o r t   and might cause the clause p a r k e d - i n - l o t  car parameter1  to be added to the model. further planning could continue without considering as separate cases states in which parked-inl o t   c a r   l o t a  or parked-in-lot car lot b  were t r u e . 
an integrated robot system 
　　　a primary motivation f o r b u i l d i n g the strips system  and i t s o f f s p r i n g abstrips  was to build plans f o r a mobile robot. in the stanford research i n s t i t u t e robot system  the operator descriptions are models for actions that the robot can actually take. the actions modeled are termed  intermediate l e v e l actions   ilas . when they are executed  they invoke  low l e v e l actions   llas   which are concerned with i n i t i a t i n g and monitoring motion of the robot. those routines in turn pass commands t o   and receive information from  a program in a pdp-1 computer  which communicates with the robot i t s e l f via a radio l i n k . 
       the ground space as viewed by abstrips is in f a c t just another abstraction space from the point of view of plans b u i l t up from basic operations at lower l e v e l s . the problem solver can be extended to handle successi v e l y f i n e r levels of d e t a i l u n t i l a ground space is reached in which the only remaining d e t a i l s are to r o l l the robot around. this o f f e r s the e n t i c i n g p o s s i b i l i t y of a f u l l y integrated planning and execution system. but the i n t e r a c t i o n of planning and execution would r e quire that the plans that such a system b u i l t be d i f fered from the t r a d i t i o n a l form of plan b u i l t by problem solvers. 
　　　for a system that deals with complex problems in u real world  as opposed to a simulated one  it is undesirable to solve an e n t i r e problem with an epistemol o g i c a l l y adequate plan. there are too many reasonably l i k e l y outcomes f o r each real-world operation. the num-
ber of hypothetieally possible states of the world a t tainable by a p a r t i c u l a r plan w i l l grow exponentially 
with the length of the plan. most of the e f f o r t of such a system would be spent reasoning about world states that would never be achieved  and very l i t t l e of it would be spent moving the robot toward i t s roals. 
　　　it is desired that the system's planning e f l o r t s focus on reasoning about states of the world that are l i k e l y to be traversed in the course of robot execution. thus  the o v e r a l l planning should be roughed out in an abstraction space that ignores enough levels of d e t a i l so that the rough plan is f a i r l y c e r t a i n to succeed. 
　　　a few steps of the plan can be used as a skeleton  to which more detailed steps are added in a manner simi l a r to abstrips. these new steps are f a i r l y c e r t a i n to succeed at the level of d e t a i l to which they are s p e c i f i e d . even more detailed steps can be f i l l e d in for the beginning portion of this subplan  and the process can continue u n t i l a short subplun of low-level robot commands is b u i l t . these can be executed in sequence. any deviations between the actual state of the world and the hypothesized results of the subplan w i l l 
hopefully be mere d e t a i l s to the space that is an abs t r a c t i o n of the robot commands. thus  the remaining steps of the plan in t h i s space  as well as a l l higher spaces  are s t i l l on the solution path. 
　　　further b u i l d i n g and extending of the various subplans can then take place  including a new bottom-level subplan to move the robot. this subplan w i l l accurately r e f l e c t the precise r e sults of previous execution  and so it w i l l be f u l l y appropriate for achieving the u l t i -
1 mate goal. the process of a l t e r n a t i v e l y adding detailed steps to the plan and then actually executing some steps can continue u n t i l the goal is achieved. 
       if a grievous failure occurb at some point in execution and nondetalls in higher models no longer reflect 
the actual state of the world  subplans at affected levels of detail can propagate the failure up to an 
abstraction space in which the deviation from the predicted world model was a detail. replannlng can be initiated from this level of abstraction  thus reusing the results of as much as possible of the previous 
planning. 
       therefore  by using a hierarchy of abstraction spaces to mask uncertainties in the real world effects of planned operations  an effectively integrated robot planning and executing system can be created. by dealing with a hierarchy of short  simple plans  such a system will be able to cope effectively with truly complex problems. 
acknowledgements 
　　　the author is indebted to richard fikes  peter hart  and nils nilsson for their enthusiastic encouragement and intellectual support. the research reported in this paper was supported by the advanced research projects agency of the department of defense under contract dahc1-c-1 with the u.s. army re-
search office. 
