: the general problem of f i n d i n g minimal programs r e a l i z i n g given  program d e s c r i p t i o n s   is considered  where program d e s c r i p t i o n s may s p e c i f y a r b i t r a r y program p r o p e r t i e s . the problem of f i n d i n g minimal programs c o n s i s t e n t w i t h f i n i t e o r i n f i n i t e i n p u t - o u t p u t l i s t s is a s p e c i a l case   f o r i n f i n i t e i n p u t - o u t p u t l i s t s   t h i s i s a v a r i a n t of e.m. gold's f u n c t i o n i d e n t i f i c a t i o n problem; another c l o s e l y r e l a t e d problem is tne grammatical i n f e r e n c e problem . although most program m i n i m i z a t i o n problems are not r e c u r s i v e l y s o l v a b l e   they are found to be no more d i f f i c u l t than the problem of deciding whether any given program r e a l i z e s any given d e s c r i p t i o n   or the problem of enumerating programs in order of nondecreasing length  whichever i s h a r d e r   . this r e s u l t i s formulated in terms of k - l i m i t i n g r e c u r s i v e predicates and f u n c t i o n a l s   defined by repeated a p p l i c a t i o n o f gold's l i m i t operator. a simple consequence is t h a t the program m i n i m i z a t i o n problem i s l i m i t i n g r e c u r s i v e l y solvable f o r f i n i t e i n p u t - o u t p u t l i s t s and 1 l i m i t i n g r e c u r s i v e l y solvable f o r i n f i n i t e i n p u t - o u t p u t l i s t s   w i t h weak assumptions about the measure of program s i z e . gold regarded l i m i t i n g f u n c t i o n i d e n t i f i c a t i o n 
 more g e n e r a l l y    black box  i d e n t i f i c a t i o n   as a model of i n d u c t i v e thought. i n t u i t i v e l y   i t e r a t e d l i m i t i n g i d e n t i f i c a t i o n might b e regarded as h i g h e r - o r d e r i n d u c t i v e inference performed c o l l e c t i v e l y by an ever growing community of l o w e r - o r d e r i n d u c t i v e inference session 1 	automatic programming 
machines. 
key words and phrases: f u n c t i o n i d e n t i f i c a t i o n   minimal programs  l i m i t i n g r e c u r s i o n   i n d u c t i v e i n f e r e n c e   program l e n g t h measures  program p r o p e r t i e s   degree of u n s o l v a b i l i t y . 
1. 	introduction 
     a question considered by gold 	 was for what classes of computable 	f u n c t i o n s there e x i s t machines which succeed in 	  i d e n t i f y i n g in the l i m i t   	any member of the c l a s s . i d e n t i f y i n g a computable 	f u n c t i o n 	in the 	l i m i t consists of generating a sequence of 	 guesses   integers  	convergent to an index f o r the f u n c t i o n   successive guesses being based on successively l a r g e r p o r t i o n s of an i n f o r m a t i o n sequence which l i s t s 	a l l elements of 	the f u n c t i o n . 	an example of a p r a c t i c a l problem to which these concepts are r e l e v a n t is 	the l e a r n i n g problem i n p a t t e r n r e c o g n i t i o n . t y p i c a l l y an adaptive p a t t e r n r e c o g n i t i o n system is caused to   l e a r n   a mapping from patterns 	to responses by p r e s e n t i n g to it a sequence of 	l a b e l l e d p a t t e r n s   	i . e .   	p a t t e r n s w i t h 	t h e i r a p p r o p r i a t e responses. 	a l l of 	the machine's responses w i l l conform w i t h the desired mapping once it has 	i d e n t i f i e d t h a t mapping  	in the sense t h a t it has found an a l g o r i t h m 	  e q u i v a l e n t l y   	an index  	f o r i t . two of gold's main r e s u l t s were t h a t any r . e . class o f t o t a l r e c u r s i v e 	f u n c t i o n s 	i s i d e n t i f i a b l e in the l i m i t   	and t h a t the class o f t o t a l r e c u r s i v e 	f u n c t i o n s 	i s not i d e n t i f i a b l e in the l i m i t 	 hence also the class of p a r t i a l 	r e c u r s i v e f u n c t i o n s 	i s not i d e n t i f i a b l e 	i n 	the 	l i m i t   . 
     here a m o d i f i e d v e r s i o n of gold's problem i s considered. the f i r s t m o d i f i c a t i o n i s the replacement of i n f o r m a t i o n sequences by 

to some measure of program size. 	indeed  the finally  the point is emphasized in the use of small programs for inductive inference concluding remarks that limiting recursively is a recurring theme in the l i t e r a t u r e  see solvable induction problems  though s t r i c t l y for example refs. 1 ; allusion is usually  unsolvable  in general  are nonetheless with-made to the s c i e n t i f i c maxim knows as in the reach of mechanical procedures in the  occam's razor   according to which   i t is important sense described by gold  and that vain 	to do with more what can be done with even problems unsolvable in the l i m i t may be fewer  in accounting for known phenomena. regarded as solvable in a weakened sense by an the special importance of minimal programs expanding community of mechanisms performing   f i n i t e or i n f i n i t e    program descriptions  is also suggested by the work of kolmogorov which may specify arbitrary program properties.   1     martin-lof  and others  showing that 
descriptions which l i s t input-output pairs are the number of symbols in the shortest program then regarded as a special case. 	the second for generating a f i n i t e sequence can be taken modification is that iterated l i m i t procedures as a measure of the information content of the  it-limiting recursive functionals  are sequence  and this measure provides a logical admitted for program-finding  since finding basis for information theory and probability suitable programs in the non-iterated l i m i t theory. is impossible for many classes of program in the following the unsolvability of most descriptions. 	for this purpose k-limiting nontrivial program minimization problems is recursiveness is defined by straight-forward f i r s t noted. 	after establishment of some generalization of gold's concept of l i m i t i n g basic properties of k-limiting recursive recursiveness. 	the t h i r d modification is the predicates and functionals  it is shown that added requirement that programs found in the any program minimization problem is k-limiting  iterated  l i m i t be minimal according to some recursively solvable if the problem of determ-prescribed measure of program size. ining whether any given program satisfies any accordingly problems of this modified type are given description is k-limiting recursively called program minimization problems. solvable and programs are k-limiting r.e. 	in there are various reasons for an interest order of nondecreasing size. 	simple conse-in finding minimal-length programs. 	in work quences are that the problem of finding on grammatical inference closely related to minimal programs for f i n i t e functions is gold's i d e n t i f i c a t i o n problem  feldman  l i m i t i n g recursively solvable  and that the considers inference schemes which try to find problem of finding minimal programs for  good  grammars consistent with available arbitrary computable functions  given an information about a language. 	one measure e x p l i c i t l i s t i n g   	is 1-limiting recursively of goodness is the i n t r i n s i c complexity  or solvable  with weak assumptions about the size  of a grammar. 	in terms of the function measure of program size. 	lower bounds on the identification problem  this corresponds to d i f f i c u l t y of these problems are already known finding programs which are small according 	from 	the work of pager  and gold . 
l i m i t computations. assumed to be e f f e c t i v e l y enumerable in order 1. 	program minimization problems 	of 	n＜ndecreasing length. 	for example  the to f i x ideas  any programmable machine m number of elementary symbols in a program may be thought of as a 1-tape turing machine  provides such a length measure  with one tape regarded as input-output  i/o  in 	the 	f o l l o w i n g   obviously machine and tape and the other as program tape. 	one or length-measure dependent concepts w i l l some-both tapes also serve as working tape. a times be used without e x p l i c i t reference to a computation begins w i t h the f i n i t e - s t a t e p a r t i c u l a r machine or length measure. this control of the machine i n a unique s t a r t state should be kept i n mind for a correct i n t e r and w i t h a program on the program tape and an pretation of the r e s u l t s . 
input on the i/o tape. 	i f and when the machine 	a 	minimal 	program for a function o i s one h a l t s   	the 	i/o 	tape 	expression 	gives 	the 	out- whose length does not exeed the length any put. 	i t i s assumed that there i s an e f f e c t i v e 	otherr 	program for 1 . 	the problem of finding a 1 coding from tape expressions 	 same syntax 	minimal 	program  or a l l minimal programs  	for for both tapes  	onto the integers n. 	the 	a 	function o given a  possibly i n f i n i t e   	l i s t 
program  or i/o tape expression  corresponding of the elements of    is an example of a code number  index  x be written as ＊i.i. ~ pro to code number  index  x w i l l be w r i t t e n as x. program problem generally 
tc  . 	. 	.   	  	. . 	. . . 	. 	-   u   a program minimization problem is the problem if m eventually halts w i t h output z when 	r 	＊  	c 	e 	. - 	  	. .. 	- 	  . 	. 	- 	 .   of finding a minimal program 	 or a l l minimal supplied w i t h program x and input y  one may 1 　　　　　 m  .	m write 1   y  = z.  	tif m does not h a l t  .    	  	.   	. .   t j.  y  /    x 	x programs  	meeting the conditions l i s t e d in any 	-  . 	-  	m. 	.  	i.   i  program description  belonging to some class is undefined. 	thus m computes a p a r t i a l v    　　　　　　　 m .   - . . ＊   i function $ x w i t h program x. however  it w i l l of such descriptions. 	program descriptions                                         - 	. be convenient to think of x not merely as a are loosely defined as follows. 	suppose that 　　　　　　　　　　m program for tj    but as a program for any a 	 possibly i n f i n i t a r y   	l o g i c a l system is 	m 	- . qiven along with an i n t e r p r e t a t i o n based on a subset of $ 	. 	in other words  x is a program y                                  .            m  . for a function $ provided only that cp lyj = fixed m such that every wff in tne system 	    	= 	m  . 
 my  	for a l l y in the domain of  j ; 	*x y  expresses some program property 	  i . e .   every                                                         . . need not be undefined for y outside that wff is a unary predicate over programs . 	then                                                                      domain. if such an x exists for a given q    p the wfis comprising the system w i l l be called .     	  	 	 	 	 	.	 	* program descriptions. typically a program w i l l be said to be programmable  on m  . 	a 
machine on which a l l p a r t i a l recursive 
  
functions are programmable is universal. 
a program length measure assigns a non-
. 
negative i n t e g r a l length to each program such 
- 
that only a f i n i t e number of programs are o♀ 
any p a r t i c u l a r length. 	a length measure need 
  
not be r e c u r s i v e   though t h i s is a frequent assumption; furthermore  programs are often c-*- 	-* 
description might specify relationships between inputs and outputs 	  e . g .   p a r t i c u l a r input-output p a i r s     	s t r u c t u r a l properties 	  e . g .   	the number of occurrences of a p a r t i c u l a r symbol in the program   	operational properties 	  e . g .   computational complexity   or combinations of such properties. 	if 1 is a program d e s c r i p t i o n   a program x w i l l be said to r e a l i z e 1 if x 
  	  	p r o p e r f c y 	e x p r e s s e d 	b y 	j . 

be proved from the s-m-n theorem and the recursion theorem. 
     to demonstrate the unsolvability of a program minimization problem  for a universal machine   it is therefore sufficient to show that the descriptions concerned include an effectively enumerable  i n f i n i t e l y diverse set of i/o descriptions. this implies  for example  that the program minimization problem for the singleton functions  for the f i n i t e decision functions  and even for the decision functions of cardinality 1 is 
1 
unsolvable   whenever the length measure is recursive. 
for example  suppose the minimal programs are required to operate within a certain bound on the computational complexity  apart from an arbitrary additive constant. then it is clear that the proof of theorem 1 is applicable without change. 
     these unsolvability results do not mean that a l l interesting program minimization problems are entirely beyond the reach of mechanical procedures  as theorem 1 w i l l show. 
     the following definitions generalize the concept of limiting recursion introduced bv 
     pager  has shown that the last-mentioned problem is unsolvable even when the length measure is not recursive. further  he established the surprising fact that the minimization problem is unsolvable for a certain f i n i t e l y diverse set of decision functions  regardless of the length measure employed . 
     in view of pager's results it may be asked whether the requirement that the length measure be recursive is superfluous in 
theorem 1. the answer is no  although the requirement can be weakened somewhat . to prove t h i s   it is only necessary to specify some sequence of f i n i t e decision functions gold   1   . 


such that any program is a program for at most one of these functions  plus an arbitrary procedure for obtaining a particular program for each function in the sequence; then the length measure can readily be defined to guarantee the minimality of these particular programs. 
　　it is interesting to note that theorem 1 s t i l l holds for certain non-1 descriptions. understood  if there is a predicate p k-limitinq decidable on axn such that for sea  p 1 x  holds i f f a set of integers is k-limiting 
r.e. if it is empty or the range of a function 
1 
k-limiting recursive on n. o-limiting recursive is the same as recursive  and 1limiting recursive is abbreviated as limiting recursive. 
gold  also putnam  1 j  has shown that 

1 




so that g is  k+1 -limiting recursive. 
     roughly speaking  theorem 1 states that finding minimal programs is no more d i f f i c u l t than enumerating programs in order of nondecreasing length or deciding whether a given program realizes a given description 
 whichever is harder   where the   d i f f i c u l t y   of a k-limiting recursive functional is k. 
     theorem 1. given: a programmable machine m  a length measure such that programs are klimiting r.e. in order of nondecreasing length  and a set a of realizable  uniformly k-limiting decidable program descriptions. 
     then the program minimization problem for a is k-limiting recursively solvable. 
     proof: since programs are k-limiting r.e. in order of nondecreasing length  there is a k-limiting recursive function f which maps n 

     theorem 1. given: a k-limiting recursive length measure such that programs are kl i m i t i n g r.e. in order of non-decreasing length and a set a of realizable  uniformly k-limiting decidable program descriptions. 
     then the problem of finding a l l minimal programs realizing any 1ea is k-limiting recursively solvable. 


     now if the set of indices of the minimal programs realizing 1 is expressed by i t s canonical index 

where cp is the characteristic function of p  with p defined as in theorem 1  then application of lemma 1 shows i . to be kl i m i t i n g recursive on 
     note that because of the assumption in theorem 1 that the length measure is kl i m i t i n g recursive. theorem 1 cannot be regarded as a consequence of theorem 1. note also that any  k-1 -limiting recursive length measure satisfies the conditions of theorem 1  by theorem 1 . 
     theorems 1 and 1 are the main results of this paper. the remaining theorems i l l u s t r a t e their application. 
     theorem 1. for any recursive length measure  the problem of finding a l l minimal programs for f i n i t e programmable functions is l i m i t i n g recursive  each f i n i t e function is assumed to be specified by a program description which l i s t s the argument-value pairs of the function in any order . 


finding a l l minimal programs for any f i n i t e function is l i m i t i n g recursive. 
     theorem 1. given a recursive length measure and a machine m which computes total functions only  the problem of finding minimal programs for functions programmable on m is l i m i t i n g recursive  each programmable function is assumed to be specified by a program description which l i s t s the argumentvalue pairs of the function in any order . 

     gold had already shown that the problem of finding any programs {not necessarily minimal  for members of a r.e  class of total functions is l i m i t i n g recursive  and feldman 
 	remarked that this can be extended in an 
e 
obvious way to finding minimal programs when programs are r.e. in order of nondecreasing length. theorem 1 strengthens this result s l i g h t l y   as there are recursive length measures for which programs are not 
r.e. in order of nondecreasing length  e.g.  define  so that the sequence enumerates a r . e .   nonrecursive set without repetition . 
     theorem 1. for any m and any limiting recursive length measure  the problem of finding minimal programs for functions programmable on m is 1-limiting recursive  as in theorem 1  the problem is interpreted in terms of program descriptions  where any description l i s t s the argument-value pairs of a programmable function in any order . 

     note that it is known from the work of gold that the problem is not in general limiting recursive. 
     the theorem is readily generalized to descriptions which prescribe divergent computations for some inputs. the minimization problem remains 1-limiting recursive. 
1. 	remarks on induction and iterated limiting recursion 
     deduction is concerned with the derivation of particular conseauences from oeneral 
1 
premises  while induction proceeds in the opposite direction. the problem of finding an algorithm {minimal or otherwise  for a function  after inspection of some but not a l l values of the function  is clearly of the inductive type: the complete algorithm proposed on the basis of incomplete information expresses a generalization about the function sampled. non-trivial inductive problems are inherently  unsolvable  in the sense that no terminating procedure exists for generating  correct  generalizations; any unverified consequence of a proposed generalization may turn out to be in error. this motivated gold's d e f i n i t i o n of l i m i t i n g recursive predicates and functionals  which are more powerful than their non-limiting counterparts. he noted that a  thinker  employing a procedure for function  or  blackbox   i d e n t i f i c a t i o n in the l i m i t and using the current guess of a function's identity as a basis for goal-directed a c t i v i t y would be acting on correct information eventually. in this sense  therefore  some unsolvable problems are within the reach of mechanical procedures  the most general function i d e n t i f i c a t i o n problem  however  is 1-limiting recursive. can any mechanical system be conceived which in some sense  solves  a 1limiting recursive problem  not if attention is restricted to a single  thinker  generating a single sequence of guesses; however  suppose that instead of a single thinker  each of an ever growing number of such thinkers t d   t .   . . . with universal computational power observes the non-terminating sequence 
 y1'z1   y1  ......which enumerates some p a r t i a l recursive function o. at any time the i ' t h thinker t. regards as his best guess the shortest program   i f any  he has been able to find which  in the time available  has given correct outputs for inputs yo y1 an * either no output or a correct output for any other argument tested. it is clear that each thinker w i l l eventually be guessing a program for a subset of $; furthermore  a l l but a f i n i t e number of the thinkers w i l l be guessing programs for  j  eventually. in this iterated l i m i t i n g sense the expanding community successfully identifies *. of course there is no strategy effective in the l i m i t for deciding in general which thinkers are guessing programs for $ at any time. to interpret third-order l i m i t processes  one might envisage a growing number of expanding communities of the above type  each committed to a d i s t i n c t value of a certain parameter. at most f i n i t e l y many of the unbounded communities would in   general be  unsuccessful . similarly s t i l l higherorder processes could be interpreted. 
acknow1edgement 
     i am indebted to c.g. morgan for several stimulating and helpful discussions and to j.r. sampson for his many useful comments on the manuscript. i.n. chen's help on some aspects of the paper is also gratefully acknowledged. the research was conducted under a national research council postdoctorate fellowship. 
footnotes i 
 a code into t o t a l functions would also be used for a mixture of f i n i t e and i n f i n i t e descriptions; one d i g i t   say 1  would be reserved as terminator and a l l function values corresponding tp points beyond the end of a f i n i t e description would be set to 1. 
1 
 for the f i n i t e decision functions  note that the functions computed with any f i n i t e set of programs can be diagonalized to yield a f i n i t e decision function which requires a program not in the given set. to prove i n f i n i t e diversity for the 1-element decision functions  it is s u f f i c i e n t to show that no set of n programs can include a program for each 1element decision function whose arguments are in a fixed set of 1 integers; but for this many arguments at least 1 of the programs must give identical results { i f any   so that two unsymmetric decision functions are missed. 
1 
 functions are regarded as a special case of functionals. 
 the equivalence follows from the fact that f 1  is independent of n .   . . .   n     so that the iterated l i m i t of g must exist. 
1 
 this d i f f e r s from gold's d e f i n i t i o n   which expresses l i m i t i n g recursive enumerability in terms of l i m i t i n g semi-decidability. however  the definitions can be shown to be equivalent  for k = l   . 
 actually  feldman was concerned with  occams enumerations  of formal grammars  but the problem of finding minimal grammars for languages is essentially the same as that of finding minimal programs for decision functions. 
