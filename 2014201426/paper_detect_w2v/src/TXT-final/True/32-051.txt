 
in this paper  we extend and integrate previously reported techniques for resource constrained scheduling to develop a csp procedure for solving rcpsp/max  the resource constrained project scheduling problem with time windows  generalized precedence relations between start time of activities . rcpsp/max is a well-studied problem within the operations research community and the presence of a large set of benchmark problems provides a good opportunity for comparative performance analysis. our base csp scheduling model generalizes previous profile-based approaches to cumulative scheduling by focusing on global analysis of minimal conflicting sets rather than pairwise conflict analysis. this generalization increases the tendency for more effective conflict resolution. since rcpsp/max is an optimization problem  other ideas from prior work are adapted to embed this base csp model within a multi-pass  iterative sampling procedure. the overall procedure  called ises  iterative sampling earliest solutions   is applied to the above mentioned set of benchmark problems. ises is shown to perform quite well in comparison to current state-of-the-art procedures for rcpsp/max  particularly as search space size becomes limiting for systematic procedures. 
1 	introduction 
in recent years  csp scheduling research has been increasingly concerned with development of models for solving cumulative  i.e.  multi-capacity resource  scheduling problems. such models are important because they are much better matched to the requirements of many practical scheduling environments than traditional csp scheduling models. much of the work in this area has focused on constraint propagation techniques that exploit the structure of cumulative resource constraints  and are hence capable of stronger inference. less attention has been paid to development of effective heuristics for managing the scheduling search process. 
1 	planning and scheduling 　in this paper  we focus on this latter issue. drawing from previous work in resource-constrained scheduling  we develop a base csp resolution procedure for cumulative scheduling. our procedure proceeds by iteratively detecting and leveling  resource contention peaks   i.e.  periods where demand is projected to exceed resource capacity. the conflict selection and resolution heuristics used in our procedure to direct the search generalize those employed in previous  profile-based  scheduling approaches  replacing localized  pair-wise analysis of competing resource requests with more global analysis of minimal conflict sets. such extended analysis can be expected to lead to more informed resolution decisions. 
　our specific interest in this paper is application of this scheduling approach to the resource constrained project scheduling problem with time windows  rcpsp/max   a well-studied and difficult makespan minimization problem. to this end  extensions are developed to enable use of the base resolution procedure within a larger  optimizing  search process. below  we first define the rcpsp/max problem  section 1 . next  we describe elements of our composite rcpsp/max solution procedure  sections 1 and 1 . finally we report comparative performance results on a previously studied set of benchmark problems  section 1 . 
1 	the rcpsp/max problem 
the rcpsp/max scheduling problem can be formalized as follows: 
  a set v of n activities to be executed  where each activity j has a fixed duration . each activity has a start-time  and a completion-time  that 
satisfies the constraint 
  a set e of temporal constraints between activity pairs  of the form   
called start-to-start constraints  time lags or generalized precedence relations between activities . 1 
  a set r of renewable resources  where each resource  has a integer capacity 
   note that since activity durations are constant values  end-to-end  end-to-start  and start-to-end constraints between activities can all be represented in start-to-start form. 


　in  bartusch et a/.  1j  it is shown that finding a feasible schedule alone for rcpsp/max is np-hard. this difficulty is due to the presence of maximum separations  the rcpsp/max problem has been 
the subject of recent investigation within the operations research  or  community  yielding lower-bound analysis  heilmann and schwindt  1  and a number of branch and bound  b&b  solution procedures  e.g.  
 de reyck and herroelen  1; mohring et a/.  1; schwindt  1; dorndorf et a/.  1  . a problem generator progen/max  schwindt  1  has been made available on the web together with a set of reference problems  kolisch et a/.  1 . 
1 	constructing a feasible solution 
we begin by specifying a core csp resolution procedure for generating feasible solutions to instances of rcpsp/max. our approach follows the same general schema as other constraint-posting scheduling approaches  e.g.   cheng and smith  1; cesta et al  1a  . an initial  time-feasible solution is first computed  ignoring all resource constraints . resource constraints are then super-imposed and an iterative search is performed to resolve all resulting resource conflicts  i.e.  sets of activities competing for the same resource capacity over some time interval . on each iteration a particular conflict is selected to resolve  and one additional precedence relation is posted to eliminate the contention. the search continues until either a feasible solution is found  i.e.  all conflicts have been eliminated   or until an unresolvable conflict has been discovered  in which case the search fails . 
　clearly  one key to the effectiveness of this greedy search procedure will be the strength of the heuristics used to select and resolve pending conflicts. in this regard  our approach integrates ideas from a previously reported clique-based approach to resource reasoning  laborie and ghallab  1  to improve on previously developed heuristics for cumulative scheduling. a second way in which the effectiveness of above  partial  procedure can be enhanced is through the addition of backtracking or restarting mechanisms  which serve to broaden the search in the event of failure. exploiting the approach taken in  oddi and smith  1   we develop a randomized variant of our conflict selection heuristic and embed the core resolution procedure within a larger  iterative sampling search. before elaborating on the design of these aspects of our feasible solution generator  we first briefly summarize the constraint propagation machinery used to support the search. 
1 	constraint propagation 
a csp-based resolution procedure integrates two basic components: a search procedure responsible for refining the current csp by taking decisions on possible values for variables  and a constraint propagation procedure that  after each choice of the search  computes implications by updating the status of the csp and eliminating inconsistent values. in a scheduling problem like rcpsp/max both temporal and resource constraints can be sources of propagation: 
time constraints. our search procedure manipulates a temporally consistent network of time points  constrained initially by the set of temporal constraints identified in section 1 and further constrained as additional precedence constraints are posted during the search. path consistency in this network is dynamically maintained via all pair shortest path computation  making distance information between any pair of time variables available for use in focusing the search. 
resource constraints. we do not make use of resource constraint propagation as is done in some other recent approaches to disjunctive and cumulative scheduling problems  e.g.   nuijten and a arts  1; nuijten and le pape  1  . this form of deduction can be seen as complementary to our approach; it could be added in a transparent way to further prune the search space  and potentially improve reported results . this is one direction of current research. 
1 	esa: a basic resolution algorithm 
figure 1 specifies the basic  conflict removal  procedure used to generate a feasible solution  referred to as esa  earliest start algorithm . the algorithm accepts a problem instance  problem  and an upper bound on the overall makespan  horizon . it first computes an earliest start time solution that assumes  infinite capacity   problemest at line 1  and then attempts to incrementally transform this initial time-feasible solution into a resource-feasible solution. at each step  a resource conflict still present in the current solution is selected and resolved  by posting a precedence constraint that delays the earliest start time of one of the competing activities. 
contention peaks on resource profiles. given a 
time-feasible  earliest start time schedule   it is straightforward to identify time instants t where the resource capacity constraint of a given resource is violated. we say that there is a contention peak on resource  at time t if condition holds. intuitively  a contention peak on resource characterizes a conflict  
	cesta  oddi  and smith 	1 


identifying a set of activities that simultaneously require  but have a combined capacity requirement 
　　obviously feasible solutions do not contain peaks  and one possible way to transform estsol into a feasible solution is to detect and remove all peaks. this is the basic idea behind profile-based scheduling procedures  cesta et a/.  1a . a peak can be removed by  leveling  it  that is by posting one or more precedence constraints between pairs of activities contributing to the peak  such constraints are posted between the end-time of one activity and the start-time of the other to avoid overlap . in leveling a conflict  the choice of which pair s  of activities to order can be quite crucial to the quality of the solution  as it is possible to add precedence relations that do not have a strong peak leveling effect. for example  assume resource with capacity = 1 has a peak that includes the following activities  capacity requirements 
in brackets : . two pairs of ac-
tivities that might be selected for ordering are 
or . in the case of the combined requirement exceeds ck and hence any feasible solution 
must have at and a1 reciprocally ordered. alternatively  
an ordering of the pair  may or may not be essential to leveling the conflict. one observed shortcoming of previous profile-baaed approaches to cumulative scheduling has been their tendency to post unnecessary ordering constraints  following from the use of conflict selection and resolution heuristics that rely strictly on pairwise analysis of competing activities  cesta et a/.  1a . 
conflicts are minimal critical sets of activities. an alternative approach to conflict analysis that can overcome this problem has been proposed in  laborie and ghallab  1 . under this scheme  an activity  intersection graph  is constructed and systematically searched for particular cliques. such a clique is called a minimal critical set  mcs . it specifies a set of activities that simultaneously require a resource  with a combined capacity requirement   such that the combined requirement of any subset is . the important advantage of isolating mcss is that a single precedence relation between any pair of activities in the mcs elimi-
1 	planning and scheduling 
nates the resource conflict. 
　unfortunately  the exponential nature of the intersection graph search prohibits use of this basic approach on scheduling problems of any interesting size. in  cesta et a/.  1b   it is shown that much of the advantage 
of this type of global conflict analysis can be retained by using an approximate procedure for computing mcss. but the pragmatic cost of recomputing mcss across all resources at each iteration of the csp resolution procedure nonetheless remains high and significantly limits scalability. 
　in esa  we achieve an even better computational tradeoff by instead integrating the use of mcs analysis into a profile-based scheduling framework. on each iteration of the search  we first compute contention peaks  which is quadratic in the number of activities  to isolate those areas of the solution where conflicts  i.e.  mcss  should be computed. next we generate a set of mcss for each peak.  these two steps are embedded respectively in the resourcefeasible estbol  predicate and existunsolvableconf lict function of lines 1 and 1 in the algorithm description of figure 1.  the number of mcss contained in a given peak can still be quite large  in the worst case   and  accordingly  esa also utilizes an approximate  heuristic  scheme for computing mcss. 
computation of critical minimal sets. two heuristic sampling schemes for computing the set of mcss associated with a given contention peak p are evaluated in this paper: linear sampling and quadratic sampling. in both cases  the activities j p are first sorted in order of decreasing size of the./capacity requirements   e. largest first   to promote detection of the  most critical  mcss. the two schemes are summarized as follows: 
linear sampling. under this scheme  a queue q is used to select an mcs in p. activities j  p are sequentially considered  in sorted order  and inserted in q until the sum of the resource requirements exceed the resource capacity. at this point  the set q  the current mcs  is collected in a list of mcss and the first element from q is removed. the previous steps are iterated and mcss are collected until there are no uninserted activities in p. 
quadratic sampling. this scheme can be seen as an extension of linear sampling in which the second step is expanded as follows. once the current mcs has been collected  instead of immediately removing the first element from q  a forward search through the remaining uninserted activities in p is first performed to also collect all mcss that can obtained by dropping the last item placed in q and substituting with single subsequent activities in p until an mcs is still composed. 


conflict removal. lines 1 of the esa algorithm in figure 1 remove an mcs from the current solution. the basic steps involve selecting an mcs from the current conflict set  line 1   selecting a precedence constraint that resolves the selected mcs  line 1   and posting the constraint in estsol to perform temporal constraint propagation  line 1 . 
　the heuristics that govern both conflict selection and conflict resolution in esa are based directly on least commitment concepts previously utilized for other problems with maximum time lags  e.g.   cheng and smith  1; laborie and ghallab  1  . candidate mcss are ordered according to the temporal flexibility they contain  a function of the degree to which constituent activities can be reciprocally shifted in time . the less flexibility a mcs has  the more critical it is to resolve first. the greater the flexibility that is retained after posting a precedence constraint that resolves a mcs  the more desirable it is to post that constraint. 
　to quantify the notion of temporal flexibility  the heuristic estimator k suggested in  laborie and ghallab  1  is used. given a candidate mcs and a set  of precedence constraints that could be 
posted between pairs of activities in the mcs a' mcs  is defined as follows: 
where 	ranges from 1 to 1 and estimates the 
loss in temporal flexibility as a result of posting constraint pci and pcmin is the precedence constraint with the minimum value of cornmit pc . 
　note that k' mcs  takes on its highest value of 1 in those cases where only one specific precedence constraint can be feasibly posted to resolve the conflict. in general  the closer an mcs is to being unresolvable  the higher the value of k mcs . the conflict selection heuristic  selectconf lict  chooses the mcs with the highest k value  and the conflict resolution heuristic 
 selectprecedence  simply 
1 	randomizing esa 
the esa resolution procedure  as defined above  is a deterministic  partial  solution procedure with no recourse in the event that an unresolvable conflict is encountered. to provide a capability for expanding the search in such cases without incurring the combinatorial overhead of a conventional backtracking search  we define a random counterpart of our conflict selection heuristic  in the style of  oddi and smith  1   and embed the resulting  random-esa  procedure within an iterative sampling search framework. specifically  the heuristic employed by selectconf l i c t is modified as follows. we define an acceptance band   and consider as equivalent the set of 
mcss for which the conflict to be resolved next is randomly selected from this set  resulting in a non-deterministic yet heuristicallybiased choice. 
　figure 1 depicts the larger iterative sampling algorithm. it is designed simply to invoke the random-esa 

resolution procedure a fixed number  maxrestart  of times  rather than predicating any restarts on a failure to produce a feasible solution. given that the broader objective in this paper is makespan minimization  each restart provides a new opportunity to produce a differentfeasible solution with lower makespan. 
1 an optimization procedure 
though the restarting procedure just described does in fact retain the smallest makespan solution generated across calls to mresesa  its principal role is to produce a feasible solution relative to a given upper-bound horizon. in this section  we define an rcpsp/max optimization procedure based on use of this feasible solution generator  and relate it to previous or approaches to rcpsp/max. 
1 	the ises algorithm 
similar to other csp procedures for makespan minimization  e.g.   cheng and smith  1    we adopt a multipass approach; the feasible solution generator is repeatedly applied to solve problems with increasingly smaller temporal horizons  until it is no longer possible to find a feasible solution or until a lower-bound solution is found. 
　figure 1 shows the specific multi-pass version of the base esa procedure we have defined  called ises  iterative sampling earliest solutions . ises is composed of two basic steps. first  a feasible solution is found by invoking mresesa with a horizon value  maxh  much greater than the lower bound mko.  mk1 is the initial  infinite capacity  solution to problem . successive calls are then made to mresesa each time substituting the new best makespan found on the previous call as the new problem horizon. the iteration stops when either  1  a 
　call to mresesa returns an empty solution   1  a lower bound solution is obtained  or  1  a solution is returned which does not improve the previous best. 
1 	comparison to or approaches 
as previously noted  the work of  bartusch et a/.  1  investigates the mathematical properties of the problem and similarly characterizes the solution space using the temporal constraints. the notion of forbidden sets is introduced to represent resource conflicts  equivalent to 
	cesta  oddi  and smith 	1 


our definition of contention peaks. the paper also defines a concept similar to mcs  called reduced forbidden set . this is used to sketch a systematic b&b procedure which similarly starts from an infinite capacity solution and extends the set of precedence relations in the problem. unfortunately the computational analysis is quite limited. only small instances are mentioned and this approach has not influenced later or computational approaches to rcpsp/max. ises can be seen as an approximation algorithm based on the same ideas  even if it has evolved from other origins . 
　more recent b&b approaches have retained the idea of extending a time-feasible solution by adding precedence relations  but analyze the current solution differently. in  de reyck and herroelen  1  and  schwindt  1   peaks are considered in increasing chronological time order and  for each of them  a set of  minimal delaying activities  are detected for resolving conflicts. alternatively  esa does not depend on the chronological time order  but opportunistically acts on the more constrained part of the solution. other b&b algorithms work differently. for example  mohring et a/.  1  solves resource conflicts by increasing release dates  minimum time lags relative to beginning of the project  for certain activities instead of introducing precedence relations. a very recent proposal  dorndorf et a/.  1  obtained strong results using a combination of techniques: it couples a set of temporal and resource constraint propagation rules with a binary branching schema that exploits particular properties of the current partial solution to successively fix and/or delay the start-times of various activities. 
　approximate approaches are also defined in the or literature. one heuristic analysis  franck and neumann  
1  very recently obtained very good results on the rcpsp/max benchmark problems. despite being classified as a  priority rules  approach  this work uses a two step method:  a  a sophisticated decomposition analysis is performed to identify  critical sub-components  which can be scheduled independently  and  b  the scheduled sub-components  partial schedules  are integrated into one using a set of priority rules. note that the first step uses properties due to the presence of maximum time lags. with respect to ises this approach is deterministic and relies on a quite different analysis of the problem. 
1 	planning and scheduling 
1 experimental evaluation 
our experimental evaluation of ises focuses on two sets of reference problems taken from the rcpsp/max problem repository 1: 
problem set a. this is the benchmark problem set described in  kolisch et a/.  1 . it consists of three sets of 1 problems each  named j1  j1 and j1  with problems of 1  1 and 1 activities respectively and 1 resources. the only known results for this problem set to date have been obtained using the b&b procedure of  schwindt  1  
problem set b. this is the benchmark problem set introduced in  schwindt  1  and used by the recent b&b approaches mentioned in section 1. it consists of 1 problems with 1 activities and 1 resources  of which 1 are feasible and the rest are provably infeasible. for this set  lower bounds are known for each problem  heilmann and schwindt  1   providing a common reference point for measuring deviation from optimal solutions. 
both above problem sets were generated by progen/max  a flexible random networks generator 
 schwindt  1  that allows generation of project scheduling problems of varying structure  constrainedness and difficulty. however  due to differences in the generation parameters used in each case  there are important differences in the characteristics of the problems in each set. the parameter settings used to generate problem set a are closer than problem set b's to the settings which produce the  hardest possible  problems  franck and neumann  1 . in particular  the problems in set a exhibit higher levels of resource contention  i.e.  higher contention peaks  than those in set b  along with increased parallelism in project activities  i.e.  increased sequencing flexibiliy . given these properties  we can expect deeper search trees  i.e.  a larger search space  in solving problems from set a than for problems in set b  since a greater number of ordering decisions are needed to build up a feasible solution. hence  even though problem set b contains larger  1 activity  problems  the problems in problem set a are actually very challenging. 
1 	experimental design. 
results are obtained with ises on problem sets a and b using both linear and quadratic mcs sampling schemes. for all experiments  the randomization factor b in mcs selection is set to 1  so all mcss within the 1% of the maximum ranked are considered as equivalent. the number of restarts of the resolution procedure at a given horizon  maxrestart  is set to 1 and 1 for problem set a  and to 1 for problem set b. the maximum horizon 
maxh is set to 1x mk1 
　all algorithms compared to ises below have been implemented in c++ and run on a pentium 1 with an imposed time limit of 1 seconds per problem. our current 
　　1 available at ftp://ftp.wior.uni-karlsruhe.de/ pub/progen-max/pspmaxlib/ 

implementation of ises is in allegro common lisp and the reported results are obtained on a sun ultrasparc 1  1mhz . the  and lisp implementations are not directly comparable  but we have nonetheless imposed the same 1 second time limit. for problem set b we also compute the performance of ises for 1 and 
1 second limits to better understand the behavior of the algorithm. 
　given the non-deterministic nature of ises each problem is solved multiple times using different random seeds  similar to  nuijten and le pape  1  which also evaluates a random restart algorithm . we report two results:  1  the best result   obtained using the best result on any single problem over the n different runs  and  1  the average result  isesavg n    obtained using the average result on each problem over its n runs. 
1 	problem set a 
table 1 gives overall performance results on the j1  
j1 and j1 problem classes of problem set a for the best performing ises configuration  maxrestart=1  quadratic sampling  and the b&b approach of 
 schwindt  1   labeled . the first column  
{novp   is interpreted differently in the case of each algorithm: for   it indicates the number of problems solved to optimality; for ises  it indicates the number of problems for which the same solution as was obtained. the second column    gives the number of problems feasibility solved by both approaches. the last column  nimpr  makes sense only for ises  indicating the number of problems for which ises finds better solutions than . average ises solution times on j1  j1  j1 problems were 1  1 and 1 seconds respectively. 
we can observe the following: 
  on the smaller j1 and j1 problems the exact  procedure dominates ises  but on both 
the sets ises finds all feasible solutions. 
  on j1 ises finds 1 feasible solutions  on all runs  that elude  and  on average  improves on 
1 solutions produced by 
  as problem size increases  from j1 to j1  ises finds lower-makespan solutions than  on increasing numbers of problems. 
table 1 shows the relative deviation of the makespans produced by ises from those produced by b&b for both 
  with same configuration as 
above . we can see that: 
  the average deviation in solution quality across all problems is less that 1%. 
  the differential in solution quality progressively de-creases as problem size is increased. 
in table 1 we indicate the effects on solution quality of varying the mcs sampling strategy and the number of restarts on the j1 problem subset. it can be seen that increasing the number of restarts always has a positive effect  and that the more accurate  quadratic  sampling produces a significant improvement. 


　on balance  the comparative results on problem set a suggest that ises provides a scalable alternative to exact b&b solution procedures on  hard  rcpsp/max problems. it is worth mentioning that in  franck and neumann  1  results with similar size problems  number of activities in the range {1 1} with similar parameters for progen/max  are reported  and the heuristic approach proposed there compared quite badly with respect to b&b. 
1 	problem set b 
table 1 reports performance results for ises on problem set b using the same metrics originally used in the b&b study of  schwindt  1 . these include: 
   - the average relative deviation from the lower bound computed by using  heilmann and schwindt  1 ; 
   the percentage of optimal solutions found  i.e.  solutions that equal the best known lower bound or are proved optimal by a b&b ; 
   - the percentage of problems solved to feasibility. 
we compare the performance of ises  maxrestart=1  linear sampling  with all recently reported branch and bound approaches for rcpsp/max  including those of 
 de reyck and herroelen  1   labeled b&bdrh    mohring ct a/.  1   labeled    schwindt  

	cesta  1ddi. and smith 	1 


1   labeled   and  dorndorf et al  1   labeled . we also include the above mentioned heuristic procedure of  franck and neumann  1   labeled . in this case  no decomposition strategy/priority rule pair was found to outperform all others on all problems  so we include in table 1 the results obtained by using the best performing decomposition scheme and  for each problem  taking the best solution found by 1 priority rules. 
several observations follow from table 1: 
  ises is one of three approaches that is able to find all feasible solutions  1%  within a 1 second time bound. in this regard  ises outperforms   previously the best heuristic procedure known for rcpsp/max. in fact  ises also appears to be more robust than  across all 1 runs performed with ises  no more than 1 feasible solutions were ever missed on a single run. 
  all b&b approaches except find higher percentages of optimal solutions than ises. however  with regard to deviation from lower bound solutions  ises ranks third behind b&bd1 and b&bs1  and is in fact fairly comparable to with a 1 second time limit.  note that 
is influenced by the number of feasible so-
lutions found; solving the more difficult problems typically increases the deviation  dorndorf et a/.  1  . 
  contrasting the performance of ises at different time limits  significant improvement is obtained in increasing the time limit from 1 to 1 seconds but the further increase to 1 seconds achieves only limited further improvement. 
the clearly dominating procedure on problem set b is  of  dorndorf et a/.  1 . it is interesting to note that this approach exploits resource constraint propagation rules that could be straightforwardly added to ises. we are currently investigating this possibility. 
　the average solution times obtained for ises at each different time limit give some additional insight into its 
1 	planning and scheduling 

behavior on this problem set  and are as follows: 1 seconds  1 second limit   1 seconds  1 second limit  and 1 seconds  1 second limit . the fact that average solution times rise fairly slowly in proportion to increases in the time limit indicates that there are only a relatively small percentage of problems that cannot be efficiently solved. for example  in examining particular runs of ises  the percentage of solvable problems that require over 1 seconds for solution is seen to be 1%. 
　finally  table 1 indicates the performance effect of incorporating the more-comprehensive quadratic mcs sampling strategy with a 1 second time bound. in this case  the average solution time increases just slightly to 1 seconds  and as table 1 shows  there is virtually no improvement in solution quality. this ineffectiveness can also be explained by recalling the prior discussion of the characteristics of problem set b. the level of resource contention in these problems is only small to moderate  resulting in contention peaks that are relatively smooth and contain few mcss. accordingly  there are few mcss that are not found by linear sampling and a more accurate strategy adds very little. 
1 	conclusions 
this paper investigates the use of an iterative sampling procedure to solve rcpsp/max  a complex optimization problem. the ises procedure uses a combination of constraint-guided greedy search and randomization. the greedy search procedure utilizes analysis of  minimal conflict sets   mcss  to identify where additional ordering constraints are required to avoid resource contention. mcs analysis is integrated with least commitment principles related to retaining temporal flexibility to provide heuristics for focusing the search. randomization is introduced in a way that incorporates the bias of these greedy search heuristics. this provides a basis for smoothing the decisions of the deterministic algorithm and for broadening the search to include heursitically equivalent search paths in the space  thus enhancing the probability of finding better quality solutions. 
　a further contribution is represented by the approximate computation of mcss  which avoids the basic exponential computation and attempts to first select the most critical minimal conflicts at a low polynomial cost. 
　ises has been compared with the best existing approaches to rcpsp/max. it outperforms several systematic and heuristic approaches on different reference problem sets. in particular  ises is shown to perform quite well in situations where  due to problem characteristics such heavy resource contention  the search space is quite large and becomes a serious obstacle for systematic approaches. in this case  our non-systematic random ap-

proach demonstrates an advantageous trend in comparison to the best known systematic algorithm  in terms of both the number and the quality of the solutions provided  as problem size is increased. it is worth noting that our method relies mainly on its composite search strategy and heuristics  rather than on a set of propagation rules for early pruning of the search space. the addition of the latter could be an interesting direction for future research. 
acknowledgments 
authors would like to thank dr. christoph schwindt for creating the repository that made possible the experimental comparison described in this work and for giving prompt clarifications on its use. we also thank the various authors who have made available their updated unpublished works on this topic. amedeo cesta and angelo oddi's work is supported by italian space agency  by cnr committee 1 on information technology  project sci*sia   and cnr committee 1 on biology and medicine. stephen f. smith's work has been sponsored in part by the national aeronautics and space administration under contract ncc 1  by the us department of defense advanced research projects agency under contract f1-1  and by the cmij robotics institute. 
