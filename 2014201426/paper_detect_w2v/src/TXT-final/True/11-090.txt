ed only to a small number of classes - disease  symptom  etc. - used by the s i n g l e diagnostic cycle. 
       a f u r t h e r   nagging thought is the apparent o r t h o g o n a l i t y of the abstractions suggested by schank to those required to cast a l l data i n t o a p a r t i c u l a r s c i e n t i f i c model o r u s e r point o f view. w h i l e schank s e e k s a u n i f o r m way to r e p r e s e n t a l l k n o w l e d g e w h i c h i s p r o b l e m independent  a l l u s e f u l s y s t e m s a r c p r o b -
lem dependent - t h e i r special model of the problem is at the heart of what they have to o f f e r . to date  schank's abstractions have had l i t l e   if any  impact on knowledge based system - yet they do seem to capture important ideas about the r e presentation of knowledge. what is going on here  is it t h a t schank's techniques provide a l e v e l of g e n e r a l i t y to which we have not yet a s p i r e d   should not a s p i r e   or w i l l soon need to aspire  
observations on the development of expert knowledge-based systems  p. e. hart  
       the l a s t f i v e years have seen an accelerated i n t e r e s t i n a p p l i c a t i o n s o f a r t i f i c i a l i n t e l l i g e n c e with what to my mind are b e n e f i c i a l e f f e c t s both s c i e n t i f i c a l l y and p o l i t i c a l l y . the most immedia t e l y p r a c t i c a l of these applications use ai t e c h niques t h a t are well-understood. for example  the commercial p i c t u r e processing and word r e c o g n i t i o n systems a v a i l a b l e today are based d i r e c t l y on techniques developed in the l a t e s i x t i e s and e a r l y seve n t i e s . other a p p l i c a t i o n s   which may have e q u a l l y 

invited panel-1: amarel 1 

practical goals  require more profound use of the methods of a r t i f i c i a l intelligence. these applications are more interesting from a scientific point ofview  and i shall examine a few issues that they raise in the following. 
　　　among the most prominent of these application themes is the development of  expert knowledgebased systems.  these systems - dendral  buchanan  et al  1   mycin  shortliffe  1   internist  pople  et a l .   1  and others -- have forced ai technology ahead because of the need to represent and deploy substantial amounts of realworld  or domain-specific  knowledge. further  because the computer scientists involved in the design are usually inexperienced in the subject domain  there is a heightened need to develop methodologies for extracting relevant knowledge from those who are experienced. this is in sharp contrast to an earlier period of ai research  when the designer  programmer  and domain expert could be one and the same person. 
　　　an expert system under development at sri furnishes a number of instructive examples of how current applications efforts are advancing ai technology. we f i r s t briefly describe the systme  and then focus on some specific examples. prospector  duda et a l .   1; duda et a l   1  is a developmental system aimed at aiding geolo-
gists in their search for mineral resources. in some respects  the mineral exploration process is similar to the process of diagnosing diseases. a body of observations  often uncertain in nature  must be interpreted with the aid of a knowledge base that typically supports plausible reasoning but not s t r i c t logical inference. it is not surprising  therefore  that prospector bears some resemblance to existing medical diagnosis systems particularly to mycin. 
　　　domain specific knowledge is given to prospector as a set of inference rules of the form a implies b. two numbers associated with the rule measure the degrees to which a is necessary and sufficient for b. a prior p r o b a b i l i t y is also associated with the conclusion b. 
　　　the inference rules are represented internally as a partitioned semantic network along the lines suggested by hendrix. such networks when used in their general form have a l l of the expressive power of predicate calculus  and additionally encourage the exploitation of subset-element relations  inverted indexing on terms  and a number of other such features. we are currently using a pecialized form of semantic network with which we can easily represent both an important subset of predicate calculus formulas  and the inference rules themselves. 
　　　the top-level nodes of the network correspond to top-level hypotheses about the presence of the various types of ore deposits. lower-level nodes may correspond to directly observable geologic data  or to intermediate concepts that cannot be d i rectly observed but that can be inferred from observables. a principal task of the system is to i n fer probabilities for the top-level hypotheses on the basis of available observations. 
　　　the special characteristics of the mineral exploration process force the system designer to consider a number of issues that have not  to my knowledge  received much attention to date  but that could well have relevance to existing and future systems. 
questions of existence 
　　　the hallmark of exploration is the search for the existence of objects with specified properties. thus  the quintessential question for the user   i . 
e.  the geologist  is  can you find an object x satisfying p  x    the issue raised here by prospector is in interesting contrast to medical diagnosis systems  for which the existence of a culture  a test  or indeed a patient is eldom in question. on philosophical grounds  it is always hard to rule out the possibility of finding something yet undiscovered; on practical grounds  a committment to the absence of x sometimes needs to be made  leading to a need to handle the statement  there does not exist an x satisfying p x  . prospector currently handles this by denying the existence of any  realworld binding  for a formal object satisfying p. however  although this statement is logically equivalent to the statement  for a l l x not p x   prospector cannot handle the very simi l a r statement  for a l l x q x   except by 
setting q equal to not p. this stems from a representation that highlights the possible existence of objects  rather than one that stresses logical completeness. 
　　　problems of the existence of objects also lead to interesting choices about how to ask questions of the user. for example  a user may doubt  but not rule out  the existence of an x satisfying p x . if we want to ask him about other properties of x  we may find ourselves in the position of asking  does x which probably doesn't exist  but may   also satisfy q x    prospector handles this issue by simply resorting to a threshold probability for x below which x is deemed to be non-existent  but this expedient has l i t t l e theoretical j u s t i f i c a t i o n . 
antecedent reasoning 
　　　a typical consultation with a field geologist would begin by having the geologist t e l l the system about the significant geological features of the case  or  prospect  of interest. ideally  the system should be able to use this volunteered information to help it focus on hypothesesof interest. it is therefore  important to be able to reason in the forward direction from volunteered features to the top-level hypothese that they suggest  even weakly . the structure of prospector supports antecedent reasoning through the use of an explicit network representation of inference rules  and through the use of a taxonomy discussed below. it is interesting to note that pople's internist system accomplishes the same aim in a very different system framework. 
taxonomies 
　　　a surprising amount of geologic reasoning is done through taxonomies of objects. for example  chalcopyrite is a copper-iron sulfide  which is a copper sulfide  which may be significant evidence for a certain type of copper deposit. prospector easily handles such taxonomies using the semantic net mechanism. however  the current state of geology does not support the use of taxonomies indiscriminately since  for example  many rocks can be class-

invited panel-1: amarel 1 














1 



1 

1 

1 

1 

1 

1 

1 

1 

1 













