 
we study the complexity of model checking in proposit ional nonmonotonic logics. specifically  we first define the problem of model checking in such formalisms  based on the fact that several nonmonotonic logics make use of interpretation structures  i.e. default extensions  stable expansions  universal kripke models  which are more complex than standard interpretations of propositional logic. then  we analyze the complexity of checking whether a given interpretation structure satisfies a nonmonotonic theory. in particular  we characterize the complexity of model checking for reiter's default logie and its restrictions  moore's autoepistemie logic  and several nonmonotonic modal logics. the results obtained show that  in all such formalisms  model checking is computationally easier than logical inference. 
1 	introduction 
in recent years the problem of model checking has been widely studied in knowledge representation and at  levesque  1; halpern and vardi  1 . informally  model checking for a logical formalism l corresponds to the following problem: given an interpretation structure l and a logical formula does l satisfy  according to the semantics of 
   model checking has been convincingly advocated as an alternative to classical reasoning  i.e. logical inference. the main advantage of model checking lies in the fact that in general it is computationally easier than logical inference: for instance  it is well-known that  in firstorder logic  model checking is polynomial in the size of the interpretation structure. besides  classical1 application domains  like hardware verification   model checking techniques have been recently employed in the field of planning and cognitive robotics  cimatti at a/.  1 . 
　lately  model checking has been studied in some propositional nonmonotonic settings  cadoli  1; liberatoreand schaerf  1 . in particular   liberatore and schaerf  1  analyze the problem of checking whether a classical  propositional  interpretation  satisfies  a given 
1 	automated reasoning 
default theory  in the sense that such interpretation satisfies at least one extension of the default theory. 
　the results obtained show that for propositional default logic this kind of model checking is in general as hard as logical inference  hence the computational advantages of model checking over theorem proving do not seem to hold in the case of default logie. 
   the work presented in this paper originates from a different definition of model checking for default logic and several other nonmonotonic logics. such a notion is an immediate consequence of the fact that many nonmonotonic formalisms make use of interpretation structures  i.e. default extensions  autoepistemic expansions  universal kripke models  which are more complex than standard interpretations of classical logic  and which can be represented in a compact way by means of logical formulas. hence  we argue that model checking in such frameworks corresponds to verify whether a given interpretation structure of this form satisfies a nonmonotonie theory  according to the semantics of the formalism. e.g.  according to this notion  a model of a default theory is a default- extension  and model checking for propositional default logic corresponds to verify whether a given propositional formula represents an extension of a given default theory. hence  the notion of model checking in such nonmonotonic formalisms is peculiar in the sense that the interpretation structure is represented by means of a logical formula. 
　we thus provide a computational analysis of the above notion of model checking for several propositional nonmonotonic logics. in particular  we characterize the complexity of model checking in reiter's default logic  reiter  1   disjunctive default logie  gelfond et a/.  1   and for several syntactie restrictions of such formalisms; we also study model checking in moore's autoepistemic logic a el  moore  1   and in several other nonmonotonic modal logics  including mcdermott and doyle's  mdd  modal logics  marek and truszczyriski  1   the modal logic of minimal knowledge s1r;  halpern and moses  1   and the logic of minimal knowledge and negation as failure mknf  lifschitz  1 . 
　our analysis shows that the problem of model checking is easier than logical inference in all the cases examined: typically  model checking for propositional non-

monotonic formalisms is complete with respect to the 	any propositional formula equivalent to 	moreover  class   eiter and gottlob  1   while logical infer-	the propositional formula 	provides 
ence is typically complete in such logics. we also provide model checking algorithms for both default logic and several nonmonotonic modal logics. 
　in the following  we first briefly recall rcitor's default logic and moore's autoepistemic logic. then  in section 1 we analyze model checking in default logic  and a finite representation of an infinite structure  i.e. the extension . 
　in  gelfond et a/.  1  default logic has been extended to the case of disjunctive conclusions  in the following way. a disjunctive default rule is a rule of the form in section 1 we study model checking in nonmonotonic modal logics. finally  in section 1 we compare our approach with recent related work  and conclude in sec-
                                                                 where 1 and tion 1. junctive default theory is a pair 

1 	preliminaries 
we start by briefly recalling reiter's default logic  reiter  1 . let be the usual propositional language. a default rule is a rule of the form 
and d is a set of disjunctive default rules. the characterization of disjunctive default theories is given by changing  in a conservative way  the above notion of extension as follows. 

where  1 and   called the 	prerequisite   
 called justifications   and   called the conclusion  are all formulas from  a default tlieory is a pair where w  and d is a set of default rules. 
default theories in which each rule is of the form 　　the reduct. d e  wrt of a set of disjunctive defaults d is the set 

are called normal  i.e. the justification is equal to the consequence of the default . moreover  if each default is of the form  then the default theory is called supernormal. 
   the characterization of default theories is given through the notion of extension  i.e. a deductively closed set of propositional formulas. in the following  given a set of propositional formulas 1  we denote with the deductive closure of g  i.e. the set of propositional formulas logically implied by g. 
   let  and let d be a set of default rules. we denote with d e   and say that d e  is the reduct of d with respect to e  the set 
if 
d e f i n i t i o n 1 	 gelfond et al.  	1  	theorem 1  let  be a default theory  and let e 	e is an extension 	for  iff 	we and e is the minimal set closed under deduction and closed under the set d{e . 
   we recall that each extension is fully characterized by the set of conclusions of the default rules applied during this construction: in fact  it is easy to see that  for each extension of {d  w     there exists a subset g of the set of conclusions  of the default rules in d  which is denoted as con d   such that 
hence  each extension of a given default theory can be represented in terms of a propositional formula   or closed under deduction and under the set d e . 
　　we finally briefly recall moore's autoepistemie logic  ael . we denote1 with  the modal extension of with the modalitv a*. moreover  we denote with the set  of flat modal formulas  that is the set of formulas from  in which each propositional symbol appears in the scope of exactly one modality. 
definition 1 	a 	consistent set of formulas t 	from 
is stable expansion for t satisfies the following equation: 

where cnkd1 is the logical consequence operator of modal logie kd1. 
	given 	belongs to all the 
                                       notably  each stable expansion t is a stable set i.e.  i  t is closed under propositional 
consequence;  ii  if t;  iii  if t then - . we recall that each stable set s corresponds to a maximal universal s1 model such that 1 is the set of formulas satisfied by  see e.g.  marek and truszczynski  1  . 
　　with the term ael model for  we will refer to an  model whose set of theorems corresponds to a stable expansion for  in ael: without loss of generality  we will identify such a model with the set of interpretations it contains. moreover  each model corresponding to a stable expansion s of a formula can be characterized by a propositional formula such that is called the objective kernel of the stable expansion 1. as in the case of default logic   provides a finite representation of an infinite structure. 
	rosati 	1 

　finally  notice that  as in e.g.  marek and truszczyriski  1   we have adopted the notion of consistent autoepistemie logic  i.e. we do not allow the inconsistent theory consisting of all modal formulas to be a  possible  stable expansion. the results we present can be easily extended to this case  corresponding to moore's original proposal . 
　　we finally briefly introduce the complexity classes mentioned throughout the paper  we refer to  johnson  1  for further details . all the classes we use reside in the polynomial hierarchy. in particular  the complexity class  is the class of problems that are solved in polynomial time by a nondeterministic turing machine that uses an np-oracle  i.e.  that solves in constant time any problem in np   and  is the class of problems that are complement of a problem in  eiter and gottlob  1   also known as is the class of problems that are solved in polynomial time by a deterministic turing machine that makes a number of calls to an np-oracle which is logarithmic in the size of the input. hence  the class is  mildly  harder than the class np  since a problem in can be solved by solving ''few   i.e. a logarithmic number of  instances of problems in np. it is generally assumed that the polynomial hierarchy does not collapse  and that a problem in the class is computationally easier than a  hard or hard problem. 
1 	model checking in default logic 
in this section we analyze the complexity of model checking for propositional default logic. we start by proving that such a problem belongs to the complexity class to this aim  we define the algorithm dl-check  reported in figure 1  for checking whether a propositional formula  represents an extension of a default theory the algorithm first computes d ' the reduct of d with respect to  then computes a formula representing the extension of  d' w   and finally checks whether such a formula is equivalent to 
　　in the algorithm  we make use of the well-known fact that a justification-free default theory has exactly one extension. we denote as the propositional formula representing such an extension  which can be naively computed through a quadratic  in the cardinality of d'  number of np-calls  starting from 
	w and conjoining to 	the 
	of each default rule 	in d' such 
that is logically implied by ext  d' w  . correctness of the algorithm follows immediately from definition 1. 
lemma 1 let  d  w  be  default theory  and let f ♀. then  cn f  is an extension of  d w  iff dlcheck    returns true. 
　the computational analysis of the algorithm dlcheck provides an upper bound for the model checking problem in default logic. 
1 	automated reasoning 

figure 1: algorithm dl-check. 
theorem 1 let  be a default theory  and let 
 then  the problem of establishing whether cn an extension of 
proof sketch. first  we prove that it is possible to compute the formula ext  d'  w   through a linear number  in the cardinality of d'  of calls to an np-oracle  by using the following procedure: 

　then  based on the use of the above procedure for computing .  we show that the algorithm 
dl-check can be reduced to an np-tree  eiter and gottlob  1   which immediately implies an upper bound of  for the problem of model checking in propositional default logic. 	
　we now turn our attention to establishing lower bounds for model checking in default logic. we first prove that  such a problem is  hard even if default rules are normal. 
theorem 1 let  i   w  be a normal default theory  and let f  then  the problem of establishing whether cn f  is an extension of  z   w  is  hard. 
proof sketch. we reduce the -complete problem par-
ity sat   eiter and gottlob  1  to model checking for a normal default theory. informally  an instance of parity sat  is a set of propositional formulas   such that if  is not satisfiable then  for each is not satisfiable. the problem is to establish if the number of satisfiable formulas is odd. 
　given an instance of such a problem  in which we assume n odd without loss of generality  we construct the normal default theory 

where p' is a prepositional symbol not appearing in 

　　we prove that there is an odd number of satisfiable formulas in  iff true is an extension of  d  w . informally  this is due to the fact that the number of satisfiable formulas is even if and only if either all formulas are not satisfiable is not satsfiable  or  for some even i  it holds that is satisfiable and  is not satisfiable. now  the rules in d are built in such a way that  if this situation occurs  then there is a default rule which is applied  thus forcing knowledge of  in the extension. therefore  in this case true is not an extension for  d w . 
　the above property  together with theorem 1  immediately implies that model checking is -complete both for general prepositional default theories and for normal default theories. 
　then  with a proof similar to the previous one  it is possible to show that model checking is  hard also in the case of prerequisite-free default theories. 
theorem 1 let be  prerequisite-free default theory  and let then  the problem  of establishing whether is αn extension of hard. 
　again  the above theorem and theorem 1 prove that model checking is complete for prerequisite-free default theories. 
　we now turn our attention to supernormal  i.e. both normal and prerequisite-free  default theories  and prove that in this case model checking is computationally easier than for unrestricted default theories. 
theorem 1 let  d w  be α supernormal default theory  and let  the problem of establishing whether cn f  is an extension of  is conp-complete. 
proof sketch. as for membership in conp  we reduce the problem to a prepositional validity problem. the key property is the fact that  given 

cn f  is an extension of  d w  iff the following two conditions hold: 
1. for each 
1. w 
we prove that it is possible to encode each of the two above conditions in terms of a prepositional validity problem  through two polynomial transformation of the input. we thus obtain two prepositional formulas and such that condition 1. holds iff   is valid and condition 1. holds iff is valid. then  by simply using two dis-
tinct alphabets for the two formulas  it is possible to reduce the two problems to a single validity problem. 
　　hardness with respect to conp follows from the fact that propositions! validity of a formula / can be reduced to the problem of establishing whether / is an extension of 
figure 1: algorithm ael-check. 
　as for disjunctive default logic  the easiest way to characterize model checking is to exploit known correspondences between such a formalism and nonmonotonic modal logic mknf  lifschitz  1 . in particular  the existence of a polynomial embedding of disjunctive default theories in the flat fragment of the logic mknf makes it possible to shew that model checking is in 
 moreover   hardness follows from theorem 1 and from the fact that disjunctive default logic is a conservative generalization of default logic. hence  the following property holds. 
theorem 1 let  be α disjunctive default theory  and let.  then  the problem of establishing whether cn f  is an extension of  complete. 
　the above property and theorem 1 also imply completeness of model checking for prerequisite-free dis-
junctive default theories. 
　in table 1 we summarize the complexity results described in this section. each column of the table corresponds to a different condition on the conclusion part of default rules. 
　the results reported in the table  together with known complexity characterizations of the inference problem in default logic  for a survey see  cadoli and schaerf  1    show that model checking is easier than logical inference in all the cases considered. in fact  logical inference is already -hard  skeptical reasoning  or hard  credulous reasoning  for supernormal default theories  while model checking is always in 
1 model checking in nonmonotonic modal logics 
　in this section we analyze model checking for nonmonotonic modal logics. due to lack of space  in the following we only sketch our complexity analysis  and refer to  marek and truszczyiiski  1; lifschitz  1  for a formal definition of mdd logics and mknf: all the results obtained are summarized in table 1. 
	rosati 	1 


table 1: complexity of model checking for default  logic 

table 1: complexity of model checking for nonmonotonic modal logics 

we start by examining the case of autoepistemic logic. 
in figure 1 we report  the algorithm ael-check for checking whether a propositional formula represents an autoepistemic model of a modal formula. in the algorithm  true  represents the formula obtained from by replacing each occurrence of the subformula with true  while represents the formula obtained from by replacing each occurrence of the subformula with false. 
   informally  the algorithm iteratively computes the value of all modal subformulas  without nested occurrences of the modality  in  according to /  until all modal subformulas have been replaced by a truth value. the resulting propositional formula is compared with /  and the algorithm returns true if and only if the two formulas are equivalent. 
   correctness of the algorithm can be established by means of previous results on reasoning in autoepistemic logic  marek and truszczyriski  1 . 
l e m m a 1 	let 
is an ael model of 
   the above completeness of model checking in ael. 
t h e o r e m 1 	let 	then  the problem of establishing 	whether 	is an ael model of 	complete. 
proof sketch. membership in  follows from lemma 1 and from the fact that the algorithm ael-check can be polynomially reduced to an np-tree. hardness follows from the fact that it is possible to reduce an instance of the problem of model checking for prerequisite-free default theories to model checking in ael: the reduction is based on the correspondence* between the prerequisite-
free default  and the modal f o r autoepistemie logic. 
   it can actually be shown that model checking for ael is  hard  and thus  from the above theorem  complete  even under the restriction that the formula is flat  i.e. each propositional symbol in lies within the scope of exactly one modality. the proof of this property can be obtained through a reduction from pari t y   s at . 
1 	automated reasoning 
   a similar analysis allows for establishing the same complexity characterization for the problem of model checking in two well-known nonmonotonic modal formalisms of the mcdermott and doyle's  mdd  family  i.e. the nonmonotonic logics based on the modal systems sw1 and s1f  marek and truszczynski  1 . 
t h e o r e m 1 let then  the problem of establishing whether m =   is an s 1 f m d d model m o d e l   c o m p l e t e . 
   as in the case of autoepistemic logic  the above property also holds if wre restrict to flat formulas. 
   for modal logics based on the minimal kmowledge paradigm  we prove that model checking is harder than for the above presented nonmonotonic logics. in particular  it is a -complete problem. however  logical inference in such logics of minimal knowledge is harder than in default logic and autoepistemic logic  since it is a ii1complete problem both in m k n f and in s1g  donini et a/.  1; rosati  1 . hence  also in such formalisms model checking is easier than logical inference. we first  analyze modal logic s 1 g   i.e. the logic of minimal knowledge introduced in  halpern and moses  1 . 
t h e o r e m 1 let then  the problem of establishing whether is an s1g model of  complete. 
   interestingly  if we impose that the modal formula is flat  then model checking in s1g becomes easier. 
t h e o r e m 1 let then  the problem of establishing whether is an  model of  -complete. 
   the same computational characterization of model checking can be shown for the logic m k n f   i.e. the logic of minimal knowledge and negation as failure introduced in  lifschitz  1   which extends  with a second modal operator interpreted in terms of negation as failure. 
   comparing the above results with known computational characterizations of the inference problem in nonmonotonic modal logics  it turns out that model checking is easier than logical inference in all the cases consid-
ered. moreover  we remark that logical inference in the flat fragment of s1g; and m k n f is -complete. this 

implies that  for each of the cases reported in the table  if logical inference is -complete  then model checking is -complete  and if logical inference is -complete  then model checking is  complete. 
1 	related work 
model checking has been recently studied in some nonmonotonic settings  see e.g.  cadoli  1; liberatore and schaerf  1  . in particular  the work reported in  liberatore and schaerf  1  is the closest to the approach presented in this paper  since it deals with the model checking problem for prepositional default logic. 
　　the notion of model checking introduced in  liberatore and schaerf  1  for default logic corresponds to check whether a prepositional interpretation /  satisfies  a given default theory   in the sense that / satisfies at least one extension of . such a notion of model checking relies on the usage of standard prepositional interpretations  thus avoiding the need to resort to the representation of an interpretation structure in terms of a logical formula. on the other hand  a prepositional interpretation cannot be considered as a  model  of a default theory: in fact  model-theoretic characterizations of default  logic are based on possibleworld structures analogous to universal s1 models introduced for autoepistemic logic. hence  a prepositional interpretation is a component of an interpretation structure of a default theory. instead  our formulation of the model checking problem is based on the idea of checking a whole interpretation structure of this form against a nonmonotonic theory: in this sense  our notion is a more natural extension to nonmonotonic logics of the  classical  notion of model checking. 
　from the computational viewpoint  it turns out that liberatore and schaerf's notion of model checking is harder than the one presented in this paper. in fact  comparing table 1 with the results reported in  liberatore and schaerf  1   it can be seen that our formulation of model checking is computationally easier in almost all the cases examined  with the exception of normal and supernormal default theories  for which the complexity of the two versions of model checking is the same. 
1 	conclusions 
in this paper we have studied the complexity of model checking in several nonmonotonic logics. our results show that  as in classical logic  model checking is computationally easier than logical inference in many nonmonotonic formalisms. we have also provided algorithms for model checking in default logic and nonmotonic modal logics. 
　our results provide a positive answer to the question whether it is convenient to use  model-based  representations of knowledge in the case of nonmonotonic logics. it therefore* appears possible to use the analysis presented in this paper as the basis for the development of model checking techniques in knowledge* representation systems with nonmonotonic abilities. 
acknowledgments 
the author wishes to thank paolo liberatore for useful discussions about the subject of this paper. 
