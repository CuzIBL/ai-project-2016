 
we have addressed the problem of analyzing images containing multiple sparse overlapped patterns. this problem arises naturally when analyzing the composition of organic macromolecules using data gathered from their nmr spectra. using a neural network approach  we have obtained excellent results in using nmr data to analyze the presence of various amino acids in protein molecules. we have achieved high correct classification percentages  about 1%  for images containing as many as five substantially distorted overlapping patterns. 
1 	introduction 
currently known image analysis methods are not very effective when applied to images containing large multiple overlapped sparse patterns. such patterns consist of a small number of features dispersed widely in the image. the features are usually small in size: possibly no larger than a single pixel. such a classification problem is encountered when analyzing images obtained by certain types of nuclear magnetic resonance  nmr  
spectroscopy. 
   neural networks offer potentially promising techniques for such problems  but few successful results have been reported in the literature on the application of neural networks to such complex image analysis tasks. one possible approach is to use strong and whitehead's physiological model  which describes how humans can sequentially focus on each pattern contained in a complex image. their model is a discrete-event simulation of activities within human neurons. due to the complexity of human neurons this model has only been tested with small input images. 
　the selective-attention neural network of fukushima presents another approach for classifying overlapped patterns . the main problem in applying fukushima's approach for large images is the huge size of the required network. as many as 1 cells are needed for classifying patterns in a 1 x 1 image. since practical applications require processing considerably larger  1 x 1  images  the computational requirements using fukushima's model are too high. 
1 	learning and knowledge acquisition 
　we have developed a modular analyzer for the problem of analyzing images containing multiple sparse patterns. each module detects the presence of patterns that belong to one class in the input image. each module has two stages. the first stage is a feature detector based on clustering . for each class of patterns  cluster analysis is used to identify those regions of the input image where features of the patterns belonging to that class are most likely to be found. the second stage of each module is a backpropagation-trained feed-forward neural network  that performs the tasks of thresholding and classification. with this approach  we have been able to obtain very high correct classification performance  1%  on 1 x 1 images with noisy test data. 
　in the next section  we discuss the problem of analyzing multiple sparse patterns  describe some details of the nmr analysis problem  and discuss previous work on this topic. in section 1  we describe details of our system. experiments and results are presented in section 1. section 1 contains concluding remarks. 
1 	the problem 
the images we analyze may contain many different 'patterns'. each pattern consists of several 'features'. a feature may be a group of neighboring pixels  or perhaps just a single pixel. the locations of pixels may vary within a range determined by the feature. hence the pattern-matching process has to allow for variability of pixel locations. 
　figure 1 shows three images  each containing one pattern  of the same class  which consists of three features. each feature consists of a single pixel  indicated by a '+' symbol   which must occur somewhere within a known region  delineated by dashed ellipses in the figure . 

figure 1: three sparse patterns which belong to the same class. 


	overlapped feature 	overlapped feature 
	regions of one class 	regions of different classes 
f i g u r e 1: overlap of feature regions 
   in the applications that we are interested in  featureregions for different classes do overlap  as shown in figure 1. consequently  a feature may lie within featureregions of several classes. such a feature partially constrains the classification  although it does not permit us to decide unambiguously whether a particular class of patterns is present in the image. as noted by rumelhart and mcclelland   such problems are ideal candidates for neural network solutions. 
   a particular instance of this problem arises in the classification of n m r spectra. n m r spectroscopy is a powerful method for the determination of the three-dimensional structure of complex organic macromolecules such as proteins . proteins are long chains of smaller molecules called amino acids. approximately 1 different types of amino acids are commonly found in proteins. the first step in analyzing the structure of a protein is to determine its constituent amino acids. one type of n m r spectroscopy used for this purpose is called correlational spectroscopy  'cosy' . 
   the cosy spectrum of a protein is the result of the combination of the spectra of its constituent amino acids. the task of determining the constituent amino acids of a protein is therefore equivalent to the task of analyzing an image containing multiple sparse patterns. the training set for our analyzer consists of a number of sample spectra for each type of amino acid. these spectra were generated from information about the distributions of peaks for each type of amino acid  tabulated in . 
1 	d e f i n i t i o n s 
i m a g e 	r e p r e s e n t a t i o n : 	an input image is a twodimensional array of non-negative integers called 'intensities'. 	we will represent an image by a set p =where 	each 	triple 	pi 	= 
　the first two compoof each triple identify the location of a non-zero element in the input image  while the third  pi  tz  represents the intensity of that element. chemists refer to each such triple as a peak. 
   an image p may contain several patterns  disjoint subsets of p . each pattern is a collection of peaks associated with a certain amino acid class. the number of patterns contained in an input image is not known a priori. hence each image contains an unknown number of peaks 
 n . 
p a t t e r n d e s c r i p t i o n : in some cases  the same class may be identified by one of many different images. for instance  an amino acid c may give rise to t c 1  or t c  1 j 

figure 1: a class of patterns with two pattern templates. 
which are two different configurations. therefore  we define a set tc of pattern-templates for each class r  where each pattern-template t c  i  characterizes one configuration: 

	each 	pattern-template is a set of feature-templates: 

a feature-template f c j k  contains a complete specification for a feature wnich could occur in a pattern be longing to class c. feature-templates determine which features  peaks  are present in an input image: 

where r  c j k  is the center of a feature region and x c j k  is used to define how far the feature region extends around the center. as described in section 1  we obtain the values of r by cluster analysis and implicitly compute the values of a when a neural network is trained 
1 	c l a s s i f i c a t i o n p r o c e d u r e 
in this section  we describe our procedure for analyzing images with multiple patterns from c classes. 
m a t c h i n g a f e a t u r e - t e m p l a t e : this is the first step in pattern recognition. we must determine whether a peak in the input image matches a feature-template. 
we say that a peak pi 'matches' a feature-template 

where g  the 'error function'  is chosen to increase with 
distance  peaks with high intensity values {pi z  match a feature template even when they are positioned far from the location of the feature template 
 this is the reason for depicting feature templates with varying grey levels in figure 1. 
m a t c h i n g a p a t t e r n - t e m p l a t e : we say that an input image p 'matches' a pattern-template if for each feature-template there exists a unique peak such that p  matches  
c l a s s i f i c a t i o n : if an input image p matches a patterntemplate t c j   a pattern of class c is defined to be 

feature-regions computed 
input image to be analyzed 
from training set 

figure 1: overview of the classification process. 
present in the input image. the overall analysis task is to determine all the classes whose features are present in the input image  hence the above procedure is repeated for every class. 
an overview of the classification process is depicted in 
figure 1. in the example shown  the feature-regions for two classes are known to the analyzer. using this knowledge  the analyzer can determine whether a pattern of either class is present in the input image. 
1 	system description 
in this section  we describe a modular analyzer for the analysis of images containing multiple sparse patterns. an important aspect of our system is the use of a clustering algorithm to train feature detectors for each class. our use of the term 'feature detection' to identify spatial features in the patterns is to be distinguished from 
statistical parlance  where 'feature detection' may refer to the process of choosing the best set of variables to characterize a set of items  l . 
1 o v e r v i e w of t h e a n a l y z e r 
a block diagram of the analyzer is shown in figure 1. each module detects the presence of one class of patterns. the modules work in parallel on an input image  presented as a list of peaks . 
   each module consists of two stages. the first stage  called a clustering filter  transforms the image into a 'feature vector'. the second stage is a perceptron-like feedforward neural network. the clustering filter computes the values of the matching functions  while thresholding is done by the neural network. 
1 	learning and knowledge acquisition 

figure 1: block diagram of part of the modular analyzer. 

figure 1: use of clustering to find the expected locations of features. 
1 	c l u s t e r i n g 
in machine vision systems  clustering is often used for image segmentation . in our system  clustering is used to find the expected locations of features. we illustrate this with an example. let the training set for some class c consist of the three images in figure 1. each image 
contains one pattern  which is known to belong to class c. these images have been superimposed in figure 1. clearly  the features occur in three clusters. the center of each cluster is the expected location of a feature. 
   the procedure may be summarized thus: for each class c  create a set rc containing the locations of all features in an image created by superimposing all the training set images for class c. by applying a clustering algorithm to rc  we determine the expected location of each feature  i.e.  the cluster center. 
   we have investigated two clustering algorithms: the k-means clustering algorithm  and the lvq  learning vector quantizer  . we have found that the lvq performs better for our problem. a benchmarking study 

 feature detectors 

figure 1: clustering filter 
by kohonen et al.  also found that the lvq produced better results than k-means clustering on several classification tasks. 
1 	the clustering filter 
the role of each clustering filter  shown in figure 1  is to extract relevant information from the input image for one class of patterns. a clustering filter consists of a number of feature detectors. a feature detector is a processing unit activated by the presence of a feature  peak  in its receptive field  a specific region of the input image. the output of a feature detector is a real value which depends on the number of peaks present within its receptive field  the intensities of those peaks and their distances from the center of the receptive field. the output of a clustering filter is the 'feature vector'  each element of which is the  real-valued  output from one feature detector in the filter. 
　in a filter for class c  the receptive fields of the feature detectors should coincide with the feature regions of class c. for simplicity  we use feature detectors with fixed size receptive fields in our system. consequently  if a feature region is larger than the receptive field  several feature detectors are required to cover it. we use the lvq learning procedure to determine the position of each feature detector. 
　the output from a feature detector located at coordinate r  when presented with an image p - { p i   p 1   . . .   p n } is: 
	the kernel function chosen is 	where 
is a constant between 1 and 1. although all peaks in the image are fed to the feature detector  it will actually respond only to those peaks which are very close to r. this is because for the values of r that we have chosen  the reciprocal of the kernel function g x  drops to almost zero when x   1. therefore the feature detector only responds to peaks which lie within a radius of 1 pixels around its center  r. 
　as we noted previously  there are cases where two peaks sometimes occur very close together. we do not need to make any special provision for this situation. we use only one set of feature detectors to cover the combined feature region. the output from these feature detectors will be higher  but this is easily handled by the neural network. 
1 	the neural network 
although a clustering filter is trained to respond most strongly to patterns of a particular class  it is possible  due to overlap of feature-regions  that some of the detectors of one class may be activated when patterns of another class are presented. we use a feed-forward neural network to determine implicitly the appropriate thresholds for each pattern detector. this neural network is trained after the clustering filters of the first stage have been trained and set up. 
　for each class c  the neural network  of the corresponding module  must be taught to discriminate between feature vectors obtained from images containing a pattern of class c and feature vectors produced from images which do not contain patterns of class c. 
we use backpropagation  to train the network. 
backpropagation is a supervised learning algorithm in which a set of patterns to be learnt are repeatedly presented to the network together with their target output patterns. at the outset of a training session  the weights and biases are randomly initialized. for each pattern presented  the error backpropagation rule defines a correction to the weights and thresholds to minimize the square sum of the differences between the target and the actual outputs. the learning process is repeated until the average difference between the target and the actual output falls below an operator-specified level. 
1 	results 
in this section  we describe our experiments in training and testing the sparse image recognition system  and report the results obtained. 
1 	system parameters 
to substantiate our approach  seven modules were trained for the nmr protein analysis problem. each module can detect patterns corresponding to one amino acid. the final output from each module is a yes/no answer about whether the respective class  amino acid  is 
judged to be present. 
　from among 1 possible amino acids  we trained modules for seven amino acids whose spectra appeared to be the most complex  with more peaks than the others. but in training as well as testing the modules  we used data which included peaks from the other 1 amino acids as  well  and obtained good results in analyzing the presence of the seven amino acids for which modules were trained. this shows that an incremental approach is possible: upon building modules for the other 1 amino acids  we expect that our results will continue to hold. 
　table la lists the parameters of each module. the names of the amino acids along with their one-letter codes are listed in the first column. the second column is the number of feature detectors in the first stage of each module. the third column shows the number of hidden layer nodes in the neural network which comprises the second stage of each module. these were approximately the smallest number of nodes required for convergence 
of the network training procedure  obtained by experimenting with various values. 

table la: module parameters. 
   the training set consists of a total of 1 single-class images  with 1 for each of the 1 amino acids. the equation indicating how weights are changed using the error back-propagation procedure  1j is: 

in each module  we used a value of n - 1 for the learning rate parameter  and a value of a - 1 for the momentum coefficient. the target mean squared error  to terminate the network training procedure  was set to be 1. during training  the target output for the networks was set to be 1 when the required answer was 'no' and 1 when the required answer was 'yes'. weights in the network were updated only at the end of each 'epoch'  one sequence of presentations of all training inputs . table lb shows the number of epochs needed to train the lvq's and the feedforward  backpropagation  neural networks  for each module. 

table lb: number of epochs required for training. 
　to investigate the effect of varying the receptive field sizes of detectors  we trained two versions of each module with different values for r  the constant in the kernel function. when = 1  detectors have small receptive fields  whereas when = 1  detectors have large receptive fields. 
1 	e x p e r i m e n t a l results 
the goal of the experiments was to measure the correctness of overall classification when the system was presented with composite images containing several patterns of different classes. various experiments were performed to test our sparse image analysis system on composite images consisting of: 
 i  different numbers of patterns; 
 ii  with and without perturbations; and 
 iii  for detectors with different receptive fields and = 1 . 
1 	learning and knowledge acquisition 
   to illustrate the testing method  consider a composite image created by superimposing two images with patterns that belong to classes c and d. correct classification implies that this image should be classified 'no' by modules a  e  i  f and v and 'yes' by modules c and d. we measure the percentages of correct classification  testing the modules in this manner on various composite images. 
   in the first set of experiments  we generated 1 examples of each case: composite images containing 1  1  1 and 1 patterns respectively. in each set  the composite images were created by superimposing a randomly chosen set of images  each of a different class  drawn from the training set. the percentages of these images correctly classified by each module under different conditions are reported in table 1  for r = 1 and r = 1. 
   from table 1  it is clear that error rates increase with the number of images  patterns  in the input image. this is because the receptive fields of different classes of patterns overlap. hence patterns of one class may partially activate feature detectors for other classes. as the number of patterns in the input image increases  it becomes increasingly likely that a feature detector may respond to artifacts arising from a fortuitous combination of patterns belonging to other classes. this problem is further aggravated by increasing the size of the receptive fields  as shown in table 1. 

table 1: percentages correctly classified  when test images were random combinations of training set images. 

table 1: percentages correctly classified  with low noise. test images were random combinations of training set images with peak locations randomly translated by  -1  +l . 

table 1: 	percentages correctly classified  with high noise. 
test images were random combinations of training set images with peak locations randomly translated by  -1  +1 . 
   it is desirable to perform correct classification even in the presence of small errors or corrupted data. hence  

we tested our system with composite images produced by superimposing distorted versions of the training setimages to the system. 
　two series of experiments were performed  varying the amount of distortion in the test data  for small and large receptive fields  r = 1 and r = 1 . in one set of experiments  distortions were introduced by adding a random integer in the range  -1  +1  to the coordinates of the peaks. the results of these are summarized in table 1. in another set of experiments  the distortion was increased by adding random integers in the range  -1  1  to the coordinates of peaks. these results are summarized in table 1. 
　with the small receptive field system  r = 1   the combined effect of distortion and multiple patterns causes classification accuracy to deteriorate substantially. on the other hand  classification capabilities of the large receptive field system  r = 1  are less affected and degrade more gracefully with noise. this phenomenon may be contrasted with the observation that the small receptive field system performs marginally better on uncorrupted test data. 
1 	concluding remarks 
in this paper  we have addressed the problem of analyzing images containing multiple sparse overlapped patterns. this problem arises naturally when analyzing the composition of organic rnacromolecules using data gathered from their nmr spectra. using a neural network approach  we have obtained excellent results in analyzing the presence of various amino acids in protein molecules. we have achieved high correct classification percentages  about 1%  for images containing as many as five substantially distorted overlapping patterns. 
　the architecture of our system is modular: each module analyzes the input image and delivers a yes/no output regarding the presence of one class of patterns in the image. each module contains two stages: a clustering filter  and a feedforward neural network. an unconventional aspect of our approach is the use of clustering to detect spatial features of patterns. 
   we performed a number of experiments to measure the correctness of overall classification when the system was presented with composite images containing several patterns of different classes. we tried two versions of the system  one with small receptive field detectors and the other with large receptive field detectors. in both cases  we observed that the rate of correct classification decreased as the number of patterns in the image was increased. to determine the ability of the system to cope with variations in the patterns  images with random perturbations to the patterns were presented to the system in another series of experiments. in this case  we observed that the classification abilities of the large receptive field system are less affected and degrade more gracefully. 
　the classification process described in this paper is only the first step in the analysis of nmr spectra. it is of considerable interest to chemists to determine the precise association of the peaks in in the input image with different patterns. we are currently working on an extension to the system described in this paper to perform this task. we plan to refine the clustering algorithm to enable the use of feature-detectors with variable size receptive fields. we expect to improve performance by combining the evidence from multiple input sources  as is done in other nmr analysis methods. 
acknowledgments 
we gratefully acknowledge the assistance received from 
sandor szalma and 1st van pelczer of the nmr data processing laboratory  chemistry department  syracuse university. the images for the training set were generated by a program written by sandor szalma. 
