 level removed from the implementation considerations such as data representation. this clearly separates the two different functions of deciding what kind of change is needed and deciding how to implement that change. 
       in some ls's the functions of the c r i t i c have been left to the human who uses the system. for example. mycin/teiresias  h  uses a human c r i t i c   acting as evaluator  diagnostician  and therapist to suggest alterations to i t s rule base. 
1 	learning element 
       the learning element is an interface between the c r i t i c ana the performance element  responsible for translating the abstract recommendations of the c r i t i c into specific changes in the rules or parameters used by the performance element. 
       representations for learned information exhibit great variety. they include  for example production rules   parameterized polynomials t1   executable procedures   signature tables 
  stored facts   and graphs . the method of incorporating new learned information is dependent upon this representation  and even among systems which use similar representations  competing methods are found  contrast  for example   and  . 
       the extent to which the learned information is altered in response to each training instance is an important ls design consideration. in some systems . the learning element incorporates exactly the information supplied by the c r i t i c . were the same training instance to occur later  the response of the performance element would be exactly as the c r i t i c advised for the f i r s t occurrence. this type of learning is well suited to environments which provide perfect data and to systems with reliable c r i t i c s . under these conditions the ls w i l l converge rapidly to the desired behavior. if such a system were provided with an incorrect classification by the environment or less than reliable advice by the c r i t i c   however  it might commit i t s e l f to incorrect assumptions from which it is d i f f i c u l t to recover. systems which make less drastic chances to the learned knowledge on the basis of a single training instance are less vulnerable to imperfect information  but consequently require more training instances to converge to the desired behavior. many statistical ls's f a l l into this category . other systems consider several training instances at a time in order to minimize the effect of occasional noisy instances   1   . 
1 	blackboard 
       the blackboard of our model is a global data base which also functions as a system communications mechanism. it is similar to the concept introduced in the hearsay system . the blackboard holds two types of information: the information usually associated with the  knowledge base  in ai programs  and the temporary information used by the ls components. the knowledge base often contains the set of rules  parameter values  symbolic structures  and so on  
       
knowledge a c q . - 1 : 	smith 
1 
       
currently being used by the performance element. such information can be used as an aid to sophisticated instance selection if it is readily available. the temporary  system-oriented information includes  for example  the intermediate decisions made by the performance element in selecting a particular response. detailed criticism by the c r i t i c is dependent upon the availability of this information. 
       in many existing systems this information is not so clearly separated or defined. the communication links between functional components  especially  are often programmed directly. because the same information is required by many of the individual functional components of any ls  however  a blackboard is a more appropriate communications mechanism. 
1 	worses model 
       whereas the blackboard contains information that can be altered by the ls components  the world model contains the fixed conceptual framework within which the system operates. the contents of the world model include definitions of objects and relations in the task domain  the syntax and semantics of the information lo be learned  and the methods to be used by the ls. among task domain definitions are  for example  the rules of a game and the representation or inputs and outputs for the performance element. this part of the worjd model simply defines the task of the performance element  and the standard of performance  the evaluation function  to be applied by the c r i t i c . domain specific heuristics are also commonly added to the world model of ai systems to guide inferences made by the xls  e.g.  the blocks world heuristics of winston's program 1  . definitions of the syntax and semantics of information to be learned define the mode of communication between the learning and performance elements. 
       the assumptions and constraints from which the world model is composed are of critical importance in the design and characterization of ls's. although many of these assumptions are often hidden in the various functional components  the ls designer and user must both be aware of each of them. we believe that  where possible  world model constraints should be made explicit in order to allow for their modification during the design process. 
1 	multi-layer learning systems 
       although the world model cannot be altered by the ls that uses i t . the designer can alter its contents in order to improve ls performance. he often changes parameters and procedures of the basic ls after observing and criticizing its behavior for some carefully chosen training set. these alterations result in a new version of the 
ls  which is then tested on some training set  and so on. the designer views the whole ls as a system whose performance needs improvement  and he selects instances  criticizes performance  and makes changes accordingly. in other words  the designer's activities can be modeled by a system whose components are just those of figure e . this leads us to the concept of layered ls's  each higher layer able to change the world model  vocabulary  assumptions  etc.  of the next lower layer on the basis of c r i t i c i z i n g i t s performance on a chosen set of instances. thus  adjustments can be made to the world modej of some learning system ls1 by another learning system  ls1  which has i t s own functional components   c r i t i c   world model  etc. . in turn  it is conceivable that a blackboards of the various layers. the use of a blackboard in the single layer ls model was partly motivated by i t s attractiveness in the multi-layer context. 
       this multi-layer architecture can be differentiated from a hierarchical architecture. the latter involves only bottom-to-top propagation of information  whereas the former involves bidirectional information passing; that i s   the effects of adjustments made in a layer may propagate both to lower and higher level layers. 
       one existing ls which may be viewed as a layered system is the version of samuel 's program  which learns a polynomial evaluation function for selecting checkers moves  see appendix 1 for details . the lower layer  ls1  in this system adjusts the coefficients of a given set of game board features in order to improve performance of the move selection program. the second layer system  ls1  adjusts the set of board features used in the evaluation function in order to improve the performance of ls1. since ls1 is contained in ls1 as the performance element  a l l the assumptions necessary for its operation also belong to the ls1 world model. in addition  the ls1 world model contains assumptions about the set of allowable game board features and the standard for evaluating ls1 performance. 
       a single layer ls  then  can never move outside its world model to make radical revisions to i t s way of viewing the task to achieve a  paradigm shift   as discussed by kuhn . however  a shift in the conceptual framework of 
ls1 	could be 	made by 	a properly 	programmed ls1 
  we believe thai a layered approach such as that described above provides a useful system organization for learning at various levels of abstraction in complex domains. although there are examples of this kind of layering in the literature    no one has carried it as far as our model suggests  and it appears that we are just now reaching the point of understanding single layer learning systems well enough to consider developing more sophisticated systems. 
1 	summary 
       the proposed ls model provides a common language for characterization and comparison of different types of learning systems which operate in a variety of task domains. we believe the model is a useful conceptual guide for ls design  because it isolates the essential functional components  and the information that must be available to these components. 
       we have alluded to a number of desirable features for future learning system designs. first  the design should be modular and individual modules should correspond to the functional components shown in the model. the knowledge used by the system should be made explicit and collected  as much as efficiency considerations permit  in a world model component. the parts of the ls that are to be adjustable especially must be explicitly exposed. we have emphasized the importance of intelligent criticism  and suggested that active instance selection be further examined. finally  we have suggested a multi-layer architecture for learning at different levels of abstraction. 
	appendix 	i 
characterization of existing systems 
	in this 	appendix several existing 	ls's are 
       
third system  ls1  could adjust the world model of ls1  and so on. the designer constitutes the final c r i t i c   of course  operating above of the  top-level  ls. each lower layer constitutes the performance element of the next higher layer  and inter-layer communication is effected through the 
knowledge 
characterized using the framework provided by the model described in section 1. the systems selected are representative of several approaches to machine learning. because the blackboard contains information in a state of flux  i t s contents are not specified explicitly for the systems characterized below. 
a c q . - 1 : 	smith 
       

learning structural descriptions from examples. winston {1} 
purpose: learn to identify blocks world structures  such as arches and towers . 
environment: set of possible line drawing/structure-classification pairs. 
performance element: decides class of structures t o w h i c h the input structure belongs. uses a model of the structure class supplied by the learning element. 
instance selector: accepts training instances supplied individually by the user. 
critic: evaluation - compares the classification made by the performance element against the correct classification as supplied with each training instance. diagnosis - generates a comparison description pointing out differences between the model and the structure description. 
learning element: constructs a model of the class of structures under consideration. examines the comparison description supplied by the c r i t i c   and modifies the model to strengthen or weaken the correspondence between the model and the training instance. 
world model: representation of scenes as line drawings  method of translating line drawings to graphical descriptions  grammar for representing the learned information  domain-specific heuristics for resolving among possible changes to each structure class model. 
learning element: adjusts weights of linear polynomial to make move selection correspond to the c r i t i c ' s recommendation. 
world model: syntax of game board  form and features of linear polynomial evaluation function  method for adjusting evaluation function  and rules of checkers. 
ls1: 
purpose: improve the performance of ls1 by selection of a good set of board features. 
performance element: ls1. 
instance selector: the entire set of possible training instances is simply passed to ls1  via the blackboard . 
critic: evaluation - analyses the learning ability of ls1   i . e .   the ls1 performance element  with the current set of evaluation function features. diagnosis - singles out features which are not useful. therapy - selects new features from a predefined l i s t to replace useless features. 
learning element: 	redefines 	the 	current 	set of 
features as recommended by the c r i t i c . 
world model: the ls1 world model plus the set of featureswhich may be considered  and the performance standard employed by the ls1 c r i t i c . 
poker plaver. waterman  
purpose: learn a good strategy for making bets in draw poker. 
environment: set of a l l legal poker game states. 
performance element: applies the learned production rules to generate actions in a poker game  e.g.. bets. 
instance selector: selects each game state derived by play against an opponent as a training instance. 
critic: two versions of the program use two different c r i t i c s . in both cases the c r i t i c performs the following functions: evaluation decides whether the poker bet made by the performance element was acceptable. diagnosis gives important state variables for deciding the correct bet. therapy - provides the bet which the performance element should have made. in  explicit  learning the c r i t i c is an expert poker player   either human or programmed. in  implicit  learning  the evaluation and therapy are deduced from the next action of the opponent and a set of predefined axioms  while diagnosis is read from a predefined  decision matrix . 
learning element: modifies and adds production rules to the system. mistakes are corrected by adding a new rule in front of the rule responsible for the incorrect response. 
world model: rules of poker  features used to describe the game state  the language of production rules  heuristics for updating the rule base  the model of an opponent. 
       
checker plaver. samuel   
purpose: learn to play good game of checkers  here we discuss only the version of the program which learns a linear polynomial evaluation function by examination of moves suggested by experts   book moves  . 
environment: set of a l l legal game boards. 
ls1  lowest layer : 
purpose: learn a good set of coefficients for combining board features in a linear polynomial evaluation function. 
performance element: uses the learned evaluation function to rank plausible moves for a given board position. 
instance selector: reads instances from a l i s t of pre-defined game-board/recommended-move pairs. 
critic: evaluation - examines the ranking given to the book move by the performance element. diagnosis - suggests that the book move should be ranked above a l l other moves. 
model reference adaptive control. landau  
purpose: construct a  controller  which preprocesses inputs to an existing system  called the  plant  . the behavior of the combined controller-plant system is to mimic the behavior of a third system  called the  reference model   on the training data. 
environment: the plant to be controlled  and the set of possible inputs  including disturbances . 
performance element: the controller - a system whose output is used as input to the plant. its behavior is a function of the input signal  past i/o behavior of the plant  and a set of adjustable parameters. 
instance selector: accepts data sequence  as input to the controller  from the environment. 
critic: evaluation - applies a measure of performance which is some function of the arithmetic difference between the plant and reference model outputs. in some cases the reference model is mathematically defined  and can therefore be considered part of the c r i t i c . 
       
knowledge 	a c q . - 1 : 	smith 
1 
       
 in other cases the reference model is an actual system  and is considered part of the environment. 
learning element: modifies the parameters of the performanceelement  controller   depending on the performance measure supplied by the c r i t i c . 
world model: control theory assumptions  time invariance  linearity  etc.  and techniques  and the standard of performance embodied in the c r i t i c . 
