 
there are obvious reasons for trying to automate the production of multilingual documents. among them are the rapidly growing need for such documents  the high cost and low availability of good translators  and the fact that translators often need more time than is available to produce good multilingual versions. these problems are compounded when equivalent versions of a document are needed in not just two or three  but many  languages - as is often the case in europe  where there are now eleven official languages in the european community. 
this talk presents some recent developments in 
multilingual natural language generation  mnlg . these allow the automatic production of high-quality multilingual documents  while avoiding many of the well-known pitfalls of the more familiar alternative of machine translation  mt  - for example  the difficulty of information extraction from a source document and the danger of source-language bias. 
1 	introduction 
solutions from computational linguistics have long been applied to the problem of multilingual document generation an issue of growing concern to governments and international agencies  companies marketing multinationally and global information providers. despite the success of machine-aided translation  however  the problem of achieving high quality versions of documents in several languages within a reasonable time and at reasonable cost remains outstanding. 
　the need for  at least partially  automated multilingual documentation is to a large extent driven by the high cost and inherently slow production of professional manual translation. in dynamic global markets the reality often is that delays introduced by the extra time 
   *the work described in this paper is part of an ongoing collaboration at the itrl between the author and her colleagues richard power and roger evans. 
needed for translation can cost a company many thousands of dollars in lost sales. human translation has two further drawbacks:  a  the strong potential for introducing source language bias  and  b  the poor support for management and maintenance for manuallyproduced multilingual versions of the same document. 
　machine-aided translation brings a number of known advantages over human translation: lower production costs  higher translation speed  and improved maintenance support. nevertheless  the quality of multilingual documents achieved through machine translation is of an undeniably inferior standard than those produced manually and the problem of source language bias remains. 
　the root of the problems with the mt approach lies primarily in the underlying representations of the text. first  it is rarely an accurate reflection of the content of the source text; this makes it extremely difficult for the target texts to contain the same information as its source. second  it is very closely tied to the linguistic structure of the source text; this means that the structure of the target text is often more appropriate to the source language than to the target language. 
1 	symbolic authoring of multilingual documents 
symbolic authoring is a recent approach to the production of good-quality multilingual documents. the main difference between it and machine translation can be seen by comparing figures 1 and 1: instead of writing a document in one language and submitting it to translation into other languages  the 'author' uses a special editor to create the underlying meaning of the document  and it is this symbolic source that is rendered into text. the advantage of symbolic editors coupled with multilingual natural language generation systems is that  as with machine translation  the document production costs are lower and the production speeds are higher than for human translation. the advantage over machine translation is that it provides good support for document management and maintenance  the problem of source language bias is removed  since there is no source natural language text involved  and the resulting texts are high quality drafts. 
	scott 	1 


figure 1: multilingual documents through machine translation 
　symbolic editing allows the author to construct a nonlinguistic knowledge source which can be used for a variety of purposes. it is particularly attractive for natural language generation since it gives the author of the document explicit control over the meaning of generated text  leaving the rendition of this meaning up to the nl generator that receives it as input. this method of automatically generating text is especially useful for multilingual documents  since all language versions are derived from the same non-linguistic source and multilinguality can be achieved without language translation. 
　with this approach the author can guarantee that all language versions will have identical content. consistency is also guaranteed not only between documents but within them. although the same information may be mentioned in various different parts of the same document and its various language versions  it will have a single representation in the domain model; updating the texts becomes a matter of editing the domain model. by then regenerating the model  the updated texts are both internally consistent and pragmatically congruent across language versions. a growing number of systems make use of this new approach. 
 exclass is an intelligent support tool for personnel officers writing  bilingual english and french  
job descriptions. the user builds the job description by composing and editing conceptual representations; these representations are trees of concepts from a structured conceptual dictionary. concepts are presented to the user through diagrammatic trees with natural language labels  caldwell and korelsky  1 . 
 drafter-i is an authoring tool to support technical authors and software developers in writing  bilingual english and french  software manuals. the user directly builds the domain model  semantic knowledge base  describing the procedures for using a selected software application. as it is being constructed  the model is presented to the user through diagrams and fragments of text  paris et a/.  1 . 
1 	invited speakers 

figure 1: multilingual documents through symbolic authoring 
 gist is an authoring tool to support forms designers. it generates  multilingual english  german  italian  forms in the domain of social administration. the user's interaction with gist is very similar to that with drafter-i.  power and cavallotto  1 . 
 a tool to support inventors in the authoring of  english only  patent claims allows the user to build a semantic model of the invented apparatus by selecting  via multiple-choice menu options  the apparatus parts  their functions and relations to each other  sheremetyeva et al.  1 . 
　these systems all comprise one or more natural language generators coupled to an interface that supports the manual creation of the generator's input  i.e.  the authoring of the symbolic  conceptual  content of the output document . this interface is a type of knowledge-editing tool with a graphical browser  similar to the generic knowledge-base editor  paley  1  and the code1 knowledge management system  skuce and lethbridge  1 . graphical knowledge-editing tools have the advantage of allowing the author to edit knowledge directly rather than indirectly via text editing. 
　in principle  writers of symbolically-authored documents should be experts in the subject of the document  but they should not have to be linguists or computer scientists. although the systems described above do not require knowledge of linguistics or familiarity in any of the languages of the output texts  they do however require the user to be fairly highly skilled in areas of computer science and ai. for example  the graphical representation of the knowledge is often a network diagram; these cannot be understood and developed without training in such technical notions as 'object'  'attribute' and 'value restriction'. equivalent drawbacks hold for plan-based representations. empirical studies have shown that domain experts typically produce high error rates when using such graphical object-oriented modelling tools  kim  1 . 
　obviously  for symbolic authoring to be an effective alternative to machine translation  the author must be offered a more familiar representation of the knowledge be-

ing constructed- despite the well-known disadvantages of natural language as a knowledge representation language* there is strong evidence to suggest that text offers a clear advantage over graphics for understanding complex knowledge structures  petre  1 . this problem thus becomes one of how to achieve symbolic authoring with the advantage of a textual interface but with none of the disadvantages of textual interpretation that continue to hound machine translation. 
1 authoring multilingual documents with wysiwym 
this talk presents a new method of symbolic authoring we have developed that can be used by anyone familiar with menus and hypertext browsing  which we call wysiwym editing1  scott et al.  1; power and scott  1; power et al.  1 . using this method  the 'author' constructs the symbolic source  i.e.  the domain model  by selecting and expanding portions of a natural language text that is generated in his or her language of choice; each expansion updates the domain model  which is then regenerated in one of two modes: 
a feedback text: this is a specially constructed text with hypertext-like anchors that are the entry points to further expansion of the domain model. 
an output text: this is the polished text that the author is aiming to achieve. 
while in feedback mode  the author can perform routine editing operations such as cut  copy  and paste. in doing this  the author appears to be editing text  but this is illusionary: the operations are taking place on the domain model  which is then immediately re-described in generated text. 
　this method of editing a knowledge base kills two birds with one stone: the source is still a knowledge base  not a text  so no problem of interpretation arises; but the source is presented as a text  and so is easily understandable to the author. 
　figure 1 shows the architecture of wysiwym authoring of multilingual documents. the basic wysiwym system consists of three components: 
 a module for building and maintaining knowledge bases.1 
 natural language generators for the languages required. 
 a user interface which presents the feedback and output texts to the author. 
　at any point in the authoring process  and in either mode  the author can switch to another language. 

figure 1: architecture of wysiwym editing 
switching languages is equivalent to changing font in a text editor: it simply re-presents the very same content in a different way. 
　we have developed three authoring tools of multilingual documentation using wysiwym  in the domains of software applications  drafter-ii   patient information leaflets to accompany pharmaceutical products  pills  and explanations of legal reasoning in the field of maritime law  clime . 
1 	significance of wysiwym editing 
this method of writing multilingual documents provides several advantages over human translation  machine translation and over previous methods of symbolic authoring: 
wysiwym authoring allows a writer speaking one of the supported languages  but with no technical knowledge of linguistics or computation  to produce good output texts in all of them without the need for translation. 
 authors can understand feedback texts much better than they understand alternative methods of presenting knowledge bases  such as network diagrams. they require no formal knowledge of specialised knowledge representation languages or of the target languages  or any special training in a controlled language. 
 since the knowledge base is presented as a document  large knowledge bases can be navigated by the methods familiar from books and from hypertext documents  e.g.  content page  index  hypertext links  obviating any need for special training in navigation. 
 our experience has been that people can learn to write documentation with wysiwym within a few 
minutes.1 

l
we are now embarking on formal usability trials. 
	scott 	1 

since the knowledge base is presented in natural language  it becomes immediately accessible to anyone peripherally concerned with the documentation project  e.g.  management  public relations  domain experts from related project . system documentation  often a tedious and time-consuming task  becomes automatic. 
the knowledge base can be viewed and edited in any natural language supported by the system; further languages can be added as needed. when supported by multilingual generators  wysiwym editing obviates the need for all but the most trivial aspects of traditional language localisation of the interface to the knowledge base. 
 in contrast to typical expert systems  the knowledge base constructor need no longer be a knowledge engineer engaging in knowledge elicitation with a domain expert. in contrast to typical documentation scenarios  the author of multilingual documentation need no longer be a technical writer or translator. instead  the 'author' using wysiwym can now be the domain expert himself. 
 the style of the output text is achieved by tuning of the generators. new styles can be added at any time  e.g.  company house styles  terminology suitable for novices rather than experts . 
 wysiwym editing is ideal for facilitating knowledge sharing and transfer within a multilingual project. speakers of different languages can view and modify the knowledge base in his or her own language. 
 in many fields  documents  whether initially or after version updates  are the result of several authors. this makes it difficult to maintain consistency of content and style. with wysiwym authoring  such consistency is guaranteed both within and across all documents  whatever the target audience  e.g.  software maintenance manuals vs user manuals  drug leaflets for patients  doctors or pharmacists  and whatever the target language. 
　the crucial advantage of this method of automating the production of multilingual documents compared to machine translation is that it eliminates the usual problems associated with parsing and semantic interpretation. feedback texts with menus have been used before in the nl-menu system  tenant et al.  1   but only as a means of presenting syntactic options  guiding the user by listing the extension of the current sentence that are covered by its grammar. a similar approach has been used in the adaptive forms system  frank and szekely  1 . both make parsing more reliable by enforcing adherence to a sublanguage  but parsing and interpretation are still required. 
　of course  text-based interfaces to knowledge bases do not always provide the clarity of expression that can be achieved with knowledge representation languages. one of the questions we are currently exploring is what is the appropriate style for the feedback texts; since they 
1 	invited speakers 
are not required to be as elegant and fluent as the output texts  it seems appropriate to  for example  expect them to be free of ambiguity where possible  even at the expense of elegance. obvious places to start are co-reference specification  i.e.  should the feedback text clearly show all co-references by artificial means  e.g.  subscript indices  colour etc.; or should they be restricted to natural language  e.g.. using pronouns etc.   van deemter and power  1 . similar issues apply to the well known problem of scope of quantifiers  which can be difficult to express unambiguously in text. some of these problems  however  may not be easily resolvable in the feedback text without adding new non-textual interface devices which may eventually lead to such a complicated interface that we are no better off than if we had stuck to graphics in the first place. just where the boundaries of this tradeoff between clarity and ease of use lie remains an open issue. 
