 
　　　this paper looks at an a r t i f i c i a l i n t e l l i gence c o n t r o l program required for a system which accepts queries to a data base which consists of both data and program modules. using a problem solving approach  the data base s t r u c t u r e and the program modules specify the i n i t i a l world model. the operators consist of functions which look through sets in the data base and the actual program modules themselves. the goal is the query which requests data and/or processes. the c o n t r o l program determines the path which maps through the data base and the program modules in a manner 
which s a t i s f i e s the predicate calculus constraints and the g o a l . real examples of how this system is being used f o r a large scale data base is i n -
cluded. 
i n t r o d u c t i o n 
　　　this paper presents a problem in the data management area and demonstrates how that problem can be solved using an a r t i f i c i a l i n t e l l i g e n c e technique known as problem solving. the problem is that of determining a data path through a data base which consists of data and programs in order to determine the desired answer to a user's r e quest. the data structure is viewed as the i n i t i a l s t a t e   the queries provide the g o a l   and the various functions in the data base provide the operators which are used to map from the i n i t i a l state to the goal. this paper w i l l p r i m a r i l y be concerned w i t h describing t h i s problem and the development of i t s solution and then discussing the p a r t i c u l a r algorithm involved in the s o l u t i o n . the work presented here was a development made in the data management area and is not simply a new a p p l i cation developed for an a r t i f i c i a l i n t e l l i g e n c e algorithm. the f o l l o w i n g   then  is a description of the problem. 
　　　one of the many concerns facing organizations  both in the private and public sector  deals w i t h the need to analyze as w e l l as report information from t h e i r data bases. there is an increasing demand for these organizations to perform such planning functions involving f o r e c a s t i n g   simul a t i o n   and optimizations. the gpian  research project at .purdue university is concerned with developing a framework for a generalized planning system which w i l l help to s a t i s f y that demand. the system being developed w i l l provide the planner 
w i t h an environment consisting of data  programs for generating reports using this data  and a 
c o l l e c t i o n of models  programs  which can e a s i l y be used to analyze the data. the interface between the user and t h i s environment w i l l be englishl i k e i n t e r a c t i v e query language. the f o l l o w i n g is a b r i e f discussion of the major components of the 
cpian system. 	 figure 1  
andrew b. whinston purdue university 
	lafayette  	indiana 

　　　the user  1  interfaces to the system through an i n t e r a c t i v e query language known as the gpian/ qa   1   . the query system  1  accepts the user's request as stated in the query language  parses and v e r i f i e s the syntax  and stores the query in a standard matrix form. a l l of the tables used in the parsing are a c t u a l l y stored in the data 
base to permit each a p p l i c a t i o n to have its own set of keywords and operators. a more thorough discussion of the query language can be found in user's manual   1   and paper by haseman and whtnston   1   . 
　　　after the query has been parsed  the c o n t r o l program  1  analyzes the query and determines 
what action w i l l be required to answer the r e quest. these actions not only include generating c a l l s to the data base through the data manip u l a t i o n language  dml   but also include the execution of functions  programs  which w i l l operate on the data r e t r i e v e d v i a the dml c a l l s . this process w i l l be discussed in more d e t a i l in the next section of the paper  while the following is a description of the rest of the 
system. 
　　　the core of the system is a data management system  1  a  1     which is called the gplan/dms | 1    1   system. the dms was developed using the s p e c i f i c a t i o n s of the codasyl dbtg report  and 
w i l l support data structures which range from sequential f i l e s to complex network data structures. the data structure which is supported by the query language is a h i e r a r c h i c a l data s t r u c t u r e . the schema consists of a group of tables 
1 

which describe the l o g i c a l structure of the data base while the physical data is stored in the data base. the system generates the schema based on a user's description of the data structure using the data description language  ddl . the basic u n i t of data is known as an item-type  where a group of item-types forms a record-type. the user can also define set-types which generate an ownermembership r e l a t i o n between two record-types. the dml commands are used by the control program to search through the various set relationships to determine the desired data. 
　　　the f i n a l component of the system is a 
　　　c o l l e c t i o n of functions  programs  which w i l l perform various operations on the data involved. in general  we can have any c o l l e c t i o n of a p p l i cation programs. current implementation has the f o l l o w i n g : report generators  p l o t t i n g   simul a t i o n   and o p t i m i z a t i o n s . these functions r e ceive t h e i r input from f i l e s generated from the data base by control program and may return the output to the user as w e l l as store results back i n t o the data base. 
　　　using this introduction to the gpian system as background information  the f o l l o w i n g   then  is a description of the problem of how to design a c o n t r o l program to intermix dml c a l l s on the data base and functions on this data to answer more involved queries. this can be viewed as a path f i n d i n g problem. 
problem 
　　　the previous approach used to answer a query involves determining the shortest path through the data s t r u c t u r e which includes a l l the itemtypes which were requested in the query. for example  assuming the data structure as shown in 
figure 1a  the following query could be requested list reach-number and flow-rate. 
the algorithm would determine that the correct path would involve s1 and s1. assuming each reach contains three measurements of flow  the following response would be obtained: 
reach-number 
i 
1 
1 
1 
1 
1 flw-rate 
1 
1. 1 
1. 1. 1. 
	figure 1a. 	example set structure 
record 
r1 
record 
r1 
	record 	r1 
	item 	reach-number 	integer 
record 
r1 
	item 	flow-rate 	real 
record 
r1 
	item 	temperature 	real 
set 
so 
	owner 	system 
member 
r1 
set 
s1 
owner 
r1 
member 
r1 
set 
s1 
owner 
r1 
member 
r1 
set 
s1 
owner 
r1 
member 
r1 
set 
s1 
	owner 	r1 
	member 	r1 
figure 1b. 	ddl for above example and the derived data path would appear as follows 

as can be seen  if each set has only one owner record-type and one member record-type  the data path can be completely determined by the sets i n volved. extending the concept of currency as discussed in the codasyl report  the f o l l o w i n g is a d e f i n i t i o n of a current s e t : 
a current set is a set which is used to describe a data path required for answering a query. 
       one of the problems with t h i s approach of answering a query is that functions can only be attached at the end of a data p a t h ; in other words  a l l the data along the path is c o l l e c t e d and then passed to the f u n c t i o n . the f o l l o w i n g query cannot be answered using the above approach 
1 

w i t h o u t 	a s p e c i a l i z e d average 	f u n c t i o n : 
list reach-number and average  flow-rate  
t h i s query e s s e n t i a l l y r e q u i r e s t h a t a f u n c t i o n b e i n s e r t e d i n t o the data s t r u c t u r e   and t h e r e f o r e r e q u i r e s a r e s t r u c t u r i n g of the d a t a base. a second type of query w h i c h cannot be h a n d l e d w i t h the above approach i s : 
list reach-number  flow - rate   and temperature 
s i n c e t h i s r e q u e s t i n v o l v e s s p l i t t i n g a p a t h a t the l o g i c a l l e v e l . assuming t h a t the user s p e c i f i e s t h a t t h e r e e x i s t s a r e l a t i o n s h i p between flow-rate and temperature   s a y   a o n e - t o - o n e 
r e l a t i o n s h i p     the system s h o u l d b e a b l e t o answer t h i s q u e r y . 
       it was these two r e q u i r e m e n t s w h i c h lead to the development of a c o n t r o l program u s i n g a . i . t e c h n i q u e s . the f o l l o w i n g   t h e n   is a d e s c r i p t i o n o f the f o r m u l a t i o n o f the p r o b l e m i n terms o f the i n i t i a l s t a t e   the g o a l   and the o p e r a t o r s a v a i l a b l e t o t r a n s f o r m the i n i t i a l s t a t e i n t o the g o a l . i t i s assumed t h a t the reader i s f a m i l i a r 
w i t h p r e d i c a t e c a l c u l u s a s discussed b y n i l s s o n   1   and w i t h theorem p r o v i n g a l g o r i t h m s such as d i s c u s s e d b y f i k e s and n i l s s o n   1   . 
	i n i t i a l 	s t a t e 
       the purpose o f the i n i t i a l w o r l d model i s t o d e s c r i b e the i n i t i a l s t a t e o f the system i n terms of a group of w e l l - f o r m e d f o r m u l a s   w f f s   . these w f f s p r o v i d e a d e s c r i p t i o n of what the theorem p r o v i n g system is g i v e n as known's or t r u t h s . as a p a r t i c u l a r s o l u t i o n i s g e n e r a t e d   v a r i o u s o p e r a t o r s w i l l change o r modify t h i s i n i t i a l model t o r e p r e s e n t the c u r r e n t s t a t e a t t h a t p o i n t i n the s o l u t i o n . t h i s i s done i n terms o f genera t i n g a l i s t of those w f f s which should be removed from the i n i t i a l s t a t e   and those w h i c h should be added t o the l i s t . 
       in 	terms of the 	s p e c i f i c p r o b l e m addressed i n 	t h i s paper  	the 	i n i t i a l w o r l d model c o n t a i n s 
a d e s c r i p t i o n of 	the 	i n i t i a l 	data 	s t r u c t u r e as d e s c r i b e d in 	the data d e s c r i p t i o n 	language. 	the 
w f f s 	i n c l u d e 	d e f i n i t i o n s o f which v a r i a b l e s 	are i t e m - t y p e s   	r e c o r d - t y p e s   and s e t - t y p e s   	a s w e l l as a d e s c r i p t i o n of 	the 	i t e m - t y p e s which compose the v a r i o u s r e c o r d - t y p e s   	and v a r i o u s 	r e c o r d types w h i c h form the v a r i o u s 	set 	r e l a t i o n s h i p s . a d d i t i o n a l w f f s can b e 	d e f i n e d which w i l l p r o v i d e a d e s c r i p t i o n of the r e l a t i o n s h i p s such as was d i s c u s s e d p r e v i o u s l y w i t h 	the temperature and flow-rate p r o b l e m . 	these 	r e l a t i o n s h i p s 	can e i t h e r be d e f i n e d as an a d d i t i o n to the 	ddl  	or i n t e r a c t i v e l y b y 	the u s e r . 
       the w f f s which w o u l d d e s c r i b e the data s t r u c t u r e shown in f i g u r e 1 are as f o l l o w s : 
type  r   record  
type  r   record  
type  r   record  
	type   r 1   	record  
type   r 1   record  
	type  reach-number  	item  
	type  flow-rate  	item  
	type  temperature  	item  
type  so  set  
	type 	 s 1   	set  
type   s 1   set  
	type 	 s 1   	set  
type   s 1   set  
1 
type  rel  relati1nship  
	belong  reach-number  	r1  
belong  flow-rate  r   
belong  temperature  r   
	connect 	  s o   	system  	r1 
connect  s   r   r1  
connect   s 1   r   r1  
connect   s 1   r 1   r1  
connect  s1 r1  r1   
	1 	1 	1 
connect  rel  r1  r1  
status  s   on  
	status 	 s1 	off  
status   s     off  
status   s 1   off  
status  s 1   off  
　　　　　　　status  rel  off  where 	the f o l l o w i n g wffs are defined as: 
	type 	- define the type of a v a r i a b l e 
belong - define which record-type contains an item-type 
connect - define which records form a set or 	r e l a t i o n s h i p 
status 	- define whether the set or r e l a t i o n ship 	is c u r r e n t l y 	connected  determines path through data base  
two a d d i t i o n a l w f f s are required f o r determining uniqueness. the f i r s t states that a p a r t i c u l a r v a r i a b l e cannot be more than one type: 
	 v v v x v y  	 type v x  a  x 	y    
type  v y   
the second states that an item-type can only belong to one record-type: 
 v v v x v y  { belong  v x  a  x # y    = ~ 
belong  v y } 
specifying the goal 
       the goal is s p e c i f i e d by the user in terms of the query language. although the query can contain a r i t h m e t i c and l o g i c a l o p e r a t o r s   the p o r t i o n of the query which is c r i t i c a l to the cont r o l program is the item-types involved and any functions which are s p e c i f i e d to operate on those item-types. the goal e s s e n t i a l l y becomes a l i s t of item-types and f u n c t i o n s which must appear 
1 
a l o n g a s i n g l e data p a t h in o r d e r f o r the query to be v a l i d . 
	for 	the 	f o l l o w i n g q u e r y : 
plot the reach-number versus the average 
 flow-rate  
the goal w o u l d be to d e t e r m i n e a data p t h w h i c h c o n t a i n e d reach-number  flow-rate  average  plot. one p a t h  not n e c e s s a r i l y u n i q u e   which would s a t i s f y t h i s goal i s shown i n f i g u r e 1 . since many models can produce s p e c i f i c i t e m - t y p e s as o u t p u t s   the f u n c t i o n names may be i m p l i e d by the g o a l   r a t h e r than s p e c i f i c a l l y s t a t e d . a n example might be: 
	list 	least-cost-solution 
where t h i s query would imply the e x e c u t i o n of an o p t i m i z a t i o n program whose o u t p u t is a v a r i a b l e c a l l e d  least-cost-solution.  as the t e c h n i q u e i s f u r t h e r d e v e l o p e d   i t i s hoped t h a t g o a l s can b e i m p l i e d from o r d i n a r y e n g l i s h - l i k e q u e s t i o n s . i t s h o u l d b e noted t h a t t h i s d e f i n i t i o n o f goal i s s u b s t a n t i a l l y d i f f e r e n t from the concepts used in many of the s o - c a l l e d   q u e s t i o n and a n s w e r i n g   systems. the g o a l   i n our c o n t e x t   i s t o d e t e r m i n e 
the d a t a p a t h w h i c h w i l l s a t i s f y the d e s i r e d q u e r y . once t h i s data p a t h is d e t e r m i n e d   a separate a l g o r i t h m w i l l a c t u a l l y g o out and access the d a t a and e x e c u t e the f u n c t i o n s a l o n g t h a t p a t h f o r the d i f f e r e n t r e c o r d o c c u r r e n c e s . 
o p e r a t o r s 
　　　the operators are used to transform the i n i t i a l state t o the f i n a l s t a t e   which s a t i s f i e s the g o a l . 	these operators can be c l a s s i f i e d into two groups. 	the f i r s t group is used to connect and disconnect various set relationships in the data base to reach those item-types of i n t e r e s t . the second group relates to those functions which are stored in the data base and are used to operate on the data items. 	the format which w i l l be used to describe the operators are as f o l l o w s : 
a  name and parameters. 
b  preconditions: this expression must be evaluated as being true for e x i s t i n g state before t h i s operator can be a p p l i e d . 
c  delete l i s t : these wffs should be deleted from the current state of the system when t h i s operator is applied. 
d  add l i s t : these wffs should be added to the current state of the system when t h i s operator is applied. 
the following predicate w i l l be referred by the operators: 

the following function is used to determine the unique x f o r a given p. 

the predicate available determines if item-type p is a v a i l a b l e ; in other words  if item-type p c u r r e n t l y l i e s along a path which is  on . the record function determines which record-type x owns the item-type p. the f o l l o w i n g   then  are two operators which connect and disconnect the set s t r u c t u r e s ; 

　　　the l i n k operator is used to l i n k together two records in a set or l i n k together two records 
which form a r e l a t i o n s h i p . before a record can own a set or a r e l a t i o n s h i p   it must i t s e l f be owned by another record through a set r e l a t i o n ship. records which are owned through a r e l a t i o n ship cannot in turn own other records. the unl i n k operator is used to break the set and r e l a t i o n s h i p l i n k s . this operator w i l l not break a l i n k in the middle of the chain; in other words  it w i l l only remove records from the bottom of the path. 

1 

　　　the following operators are two examples of the kinds of functions which can be defined to 
operate on any data items: 
1  ave  p : average the value of p precondition: available  p  
	delete l i s t : 	status  s-ave off  
	add l i s t : 	connect  s-ave record 
 p  r-ave  status  s-ave  on  
1  p l o t   p     p     : plot pp 1  p 1   	1 versus p1 
precondition 
delete 	l i s t : 
add l i s t : available 	 p1 	a 
available:  p1  
status  s-plot off  
status  s-plot on  connect  s-plot  record  p1  r-plot  
connect  s-plot  record 
 p1  r plot  
where the above functions assume the following i n formation which was i n i t i a l in the i n i t i a l world d e s c r i p t i o n : 
type  s-ave function  
status  s-ave off  
type  r-ave  record  
type  p-ave item  
belong  p-ave r-ave  
type  s-plot function  
status  s-plot off  
　　　the t h i r d operator describes the average function which inputs one item-type and generates 
a new item-type called p-ave. when t h i s function is used  a new record is a c t u a l l y created in the data base. the fourth function is plot which i n puts two item-types and generates a p l o t as i t s output. since the r e s u l t of the plot function is only output  no new data structures are created by the plot f u n c t i o n . 
　　　the two operators just discussed are general functions which are designed to operate on any data items. another class of operators can be defined which requires s p e c i f i c data items rather than any data item. an example of t h i s type might be: 
	1  temp 	a temperature analysis routine 
	preconditions: 	available  temperature; 
	delete l i s t : 	status  s-temp off  
	add l i s t : 	status  s-temp on  
where the f o l l o w i n g would be included in the 
i n i t i a l 	s t a t e : 
type  s-temp function  
status  s-temp off  
this function could be requested by the simple query: 
temp 
examples 
　　　the following examples w i l l show how the previously defined operators may be used to determine the l o g i c a l data path through the data and the programs stored in the data base. the f i r s t example is the query mentioned p r e v i o u s l y : 
plot reach-number versus average  flcw-rate . 
one example of the sequence of operators which might be applied to the i n i t i a l world model to 
solve t h i s problem would be as f o l l o w s : 
function l i n k  s   l i n k  s1  unlink  s 1   l i n k  s1  
ave  flowrate  add l i s t 
status  s  1n  status  s1 on  
status  s1 off  
status  s  1n  
connect 
 s-ave r1  
r-ave  
status  s-ave  
on  delete 	l i s t 
status  s1  off  
status  s1 off  
status  s1 on  
status  s  off  
status  ave off  plot  reach-
number rave  connect 
 s-plot r   r-plot  
connect 
 s-plot r-ave  
r-plot  status  s-plot off  	status 	 s-plot  
on  
　　　the l o g i c a l structure t h i s query would generate is shown in figure 1. once t h i s path was determined  the data would be accessed and the functions  ave and plot  would operate on the collected data. 
　　　the second example would involve the following query: 
plot flcw-rate and temperature 
the query cannot be answered using the set r e lationships alone since these two item-types do 
not l i e along the same data p a t h . 	if the user were to define a r e l a t i o n s h i p as given in the i n i t i a l world model  then the l o g i c a l data path f o r the query would be generate'd as f o l l o w s : 

1 

function add l i s t delete l i s t l i n k  s1  status  s .on  status  s off  l i n k  s 1   status  s1 on  status  s1 off  l i n k  rel  status  rel on  status  rel.off  where the generated data s t r u c t u r e is shown in figure 1a. 
　　　the t h i r d example involves requesting a function whish w i l l operate on a s p e c i f i c set of data. for example: 
execute temp 
the functions which would be required are: 
function add l i s t delete l i s t l i n k 	 s1  l i n k 	 s1  
temp status 	 s 1 on  
status 	  s 1 n   1 
status  temp  on  status  s 1 off  
status  s 1 off  
status  temp  off  where the l o g i c a l data structure for t h i s query 
is shown in figure 1b. 
conclusion 
　　　the approach which was presented o f f e r s one possible s o l u t i o n to the complex problem of dynamic a l l y r e s t r u c t u r i n g a data base in order to respond to a user's query. the problem solving technique provides the unique c a p a b i l i t y of determining if the goal  query  can be obtained given the i n i t i a l 
world model. there s t i l l c l e a r l y remains several areas which need to be explored in more d e t a i l . one area involves t r y i n g to recognize  classes of queries  such that for simple requests  the t r a d i t i o n a l data path algorithm can be used  and for more involved requests  the problem solving approach should be used. another area involves the p o s s i b i l i t y of saving queries and t h e i r paths f o r future reference  thus providing a learning c a p a b i l i t y to the system. the f i n a l area is concerned w i t h placing more preconditions on the various functions to prevent such things as t r y i n g to average a group of names  and to perform other s y n t a c t i c a l checks. 

acknowledgement 
this work was supported in part by grant 
number 1 from the office of computing a c t i v i t i e s of the national science foundation. 
the authors are indebted to professors dave 
workman and bob bonczek of purdue university and jack buchanan of carnegie-mellon u n i v e r s i t y . 
bibliography 
1. j. f. nunamaker  d. swenson  and a. b. whinston   specifications f o r the development of a generalized data base planning system   proceedings of the natural computer conference  new york c i t y   afips press  june 1. 
1. w. d. haseman  a. z. lieberman  a. b. whinston  
generalized planning system/query system 
 gpian/qs    users manual  krannert school of i n d u s t r i a l a d m i n i s t r a t i o n   november 1. 
1. w. d. haseman and a. b. whinston   natural query language f o r h i e r a r c h i c a l data struct u r e s     krannert school of i n d u s t r i a l admini s t r a t i o n   november 1. 
1. w. d. haseman  a. z. lieberman  and a. b. whinston   generalized planning system/data 
management system  gplan/dms . users manual.  krannert graduate school of i n d u s t r i a l a d m i n i s t r a t i o n   december 1. 
1. w. d. haseman  j. f. nunamaker  and a. b. 

whinston   a fortran implementation of the codasyl data base task group report   proceedings of the f i f t h annual pittsburgh conference on modeling and simulation  a p r i l 1. 
1. codasyl committee  data base task group rep o r t . association for computing machinery  a p r i l 1. 
1. n. j. nllsson  problem solving methods in a r t i f i c i a l i n t e l l i g e n c e . mcgraw-hill book company  new york  new york  1. 
1. r. e. flkes and n. j. nllsson    s t r i p s : a new approach to the a p p l i c a t i o n of theorem proving to problem s o l v i n g     a r t i f l c a l i n t e l l i g e n c e 1  1   1. 
1 
