 
　　　the semantic interpretation system of visions receives a segmentation containing symbolically encoded regions  boundaries and endpoints. the model-builder consists of four major components: 1  multiple levels of representation for both the image-specific model and long-term general knowledge  1  a set of modular knowledge sources  1  a hierarchical modular strategy to control application of the knowledge sources  and 1  a tree representing the current state of search through the space of possible models. 
multiple levels of representation 
　　　a model can be viewed as a set of short-term instantiations of long-term general concepts relative to the current environment  williams and lowrance  1 . this suggests that visual knowledge should be subdivided into a short-term-imagespecific model and long-term general knowledge components. visual knowledge also includes information at many levels of abstraction  erman and lesser  1; hanson and riseman  1 . the primary levels of representation include frames of stereotypical situations  minsky  1   the objects in those scenes  the volumes and surfaces of those objects  and the regions  boundary segments and endpoints of those surfaces. an example of an instantiated element  short-term  in the model would be a node  1bji  representing an association between a region  rl  and a long-term general concept  trunk . 
processes as modular sources of knowledge 
　　　the model-building processes are viewed as modular knowledge sources  erman and lesser  1 . ks's are responsible for the generation/verification of hypotheses. typical ks's include attribute 
matcher  perspective  shadow  occlusion  shape  etc. ks application is controlled by the modelbuilding strategy in the search for a satisfactory model. 
hierarchical modular control strategy 
　　　the complexity of the image interpretation task  in general  necessitates the integrated application of many different processes. a hierarchical modular control structure  figure 1  provides a powerful tool for exploring the large number of potentially interesting strategies for using these processes. 
　　　a model-building strategy is a selected configuration of modules from the model-builder 
this work was supported by nsf grant dcr1. 
1 
a. hanson is a f f i l i a t e d with hampshire college  amherst  massachusetts 1. 
v i s i o n - 1 
library. the strategy must determine which model in the model search space to expand  which level of representation within the model is to be selected  and which theory   i . e .   node  at the selected level w i l l be expanded. 
　　　at each level of this hierarchy the hypothesis-test paradigm is implemented as a sequence of three types of control modules: 1  focusing on an appropriate aspect of the task  1  expanding that aspect by generating new hypotheses  and 1  verifying those hypotheses. each control module makes strategic decisions at i t s level determining which lower level control modules and/ or ks's to apply. for example  the model search space expander calls: 1  a model focusser  strategy to select a partially developed model from the search space   1  a model expander  strategy to hypothesize an incremental change to the partial model   and then 1  a model verifier  strategy to determine the correctness of a hypothesis . 
model search space 
　　　the current state of the search is represented as a tree of partially constructed models  where each node contains an incremental change from i t s parent node. in addition  a sketch of the history of construction for each model w i l l be stored. this history might include an indication of the ks's and the strategy modules primarily responsible for each hypothesis  as well as any portions of the model on which the decision was dependent. this information w i l l be used to caref u l l y analyze and understand the model construction process during system development. eventually it w i l l be used by the strategy in making i t s decisions. 
implementation 
　　　the representation and manipulation of both information and processes in the high-level portions of visions is supported by a system of data and procedural primitives. this system currently consists of a library of default control modules  a graph processing language  lowrance  1   and a relational data base  konolige  1 . a l l of these are implemented in alisp  konolige  1   
the umass version of lisp. 
