
finding models of logical formulas is a challenging problem. for first-order formulas  a finite model can be found by exhaustive search. for many structured problem instances  there is much isomorphism in the search space. this paper proposes general-purposetechniques for eliminating isomorphic subspaces  which can be helpful when the formulas have many predicates. the techniques are based on inherent symmetries in first-order clauses.
1	introduction
satisfiability checking  or model finding  is an important problem in logic and artificial intelligence. if restricted to the propositional logic  the problem is well-known as sat  and has been studied by many people. in this paper  we focus on first-order satisfiability problems. more specifically  we study how to find finite models of first-order formulas. we propose two methods which use symmetries to eliminate isomorphic subspaces and prune the search tree. one technique works row-by-row; the other one processes submatrices  based on ramsey numbers.
　symmetry breaking can be very helpful to improvethe efficiency of combinatorial searching. for example  it has played a key role in the solution of some previously open questions on quasigroups  fujita et al.  1 . but the technique used there is problem-specific. other researchers have studied more general methods for using symmetries to improve the efficiency of model finding. the least number heuristic  lnh   zhangand zhang  1 is such a technique. it works well on many problems  including the quasigroup problems . but it is not effective on predicates. the techniques proposed in this paper can remedy this weakness to some extent.
1	background
we assume that the reader is familiar with the basic concepts of classical logics  includingpropositionalandfirst-orderlogics . as mentioned earlier  this paper deals with the problem of finding finite models of first-order formulas. currently  there are some automated tools available for doing this. tools

supported by the nsf of china  no. 1 .like sem  zhang and zhang  1  search for the models directly  while othertools  like mace1  mccune  1   translate the problem into sat and use efficient sat solvers.
for simplicity  we assume that there is only one domain:
　　= 1  1  ...  .  but the methods can also be used on many-sorted formulas.  suppose there is a binary predicate    in the formulas. to give an interpretation for   we need to find an matrix  in which each entry  also called a cell  has a truth value  true or false .
　a set of ground clauses    is symmetric with respect to a set of domain elements  if remains the same under any permutation of the elements. when is obvious from the context  we also say that the elements are symmetric or interchangeable with each other. clearly  this is an equivalence relation defined on a set of domain elements.
　for convenience  we assume that all the domain elements are symmetric initially. we may think that there is only one equivalenceclass on the domainelements. this class includes every element of .
ramseynumbers
ramsey numbers are well-known in graph theory. for a pair of positive integers and      the ramsey number is the minimum number of vertices such that all undirected simple graphs of order contain a clique of order or an independent set of order .
　currently we do not know the exact values of many ramsey numbers. but we know that
for any  
	 1  = 1 	 1  = 1 	 1  = 1  ...
	 1  = 1 	 1  = 1
and obviously  for any	and  	.
1	row-by-row isomorphism elimination
suppose there is a model. let us consider an interpretation for . first look at the first row of the matrix  that is  the value of  for  . for these truth values  either of the following propositions must hold  but not both:
 1  at least	cells got the value true;  1  at least	cells got the value false.
here denotes the largest integer such that   and denotes the smallest integer such that .
　if  1  is true  without loss of generality  we can assume that the cells
take the value true. similarly  if  1  is true  we assume that the second half of the first row got the value false. so we have two subcases.
　the above kind of  divide-and-conquer  can be repeated until the size of the equivalence class is reduced to 1. and we can get many subcases.
　we call this technique the row-by-row rr  strategy. now we prove its correctness. let denote the set of ground clauses obtained by instantiating the first-order clauses using all the elements in the domain .
	lemma 1. suppose	 	  and
is symmetric with respect to   ...  . then any model can be mapped  under certain permutation of domain elements  to one of the following two models:
 1  a model in which   ...  are true  where ;
 1  a model in which   ...  are false  where	.
　theorem 1. if is symmetric with respect to   there is a model of in if and only if a model exists in one of the subcases.
　for a given row  there can be several ways of dividing the assignments into two subcases. for example  we could divide the assignments at the first row into these two subcases:
  1 	is true;  1 	is false  for every	. 1	a technique based on ramsey numbers
now we present a search strategy based on the ramsey numbers  which is called the rn strategy. it tries to determine the values of several submatrices  starting from the upper-left corner to the lower-right corner.
　if is commutative  i.e.  for any   then the matrix can be regarded as a complete graph whose edges are colored with true or false. when is greater than or equal to the ramsey number   there will be a complete subgraph with color true  or a complete subgraph with color false. without loss of generality  we can divide the model finding process into two subcases:
 1  for any	 	 	  	and	are
true.
 1  for any	 	 	  	and	are
false.
when is a bigger number we can apply this kind of  divideand-conquer  several times.
　if is not commutative  then     can be regarded as a complete undirected graph whose edges are colored with true or false. similarly  we can also divide the model searching process into two subcases:
 1  for any	 	  	is true.
 1  for any	 	  	is false.
to avoid repeated search  we can put the following condition on the first subcase: there is no	colored with false.
1	experiments
we have tested our techniques on several problems  including
pigeon-hole
ramsey number searching
steiner triple system
several programs are used  e.g.  sem  zhang and zhang  1   mace1  mccune  1  and the sat solver siege v1  http://www.cs.sfu.ca/ loryan/personal/ .
　experimental results show that  typically our techniques can reduce the search time by a factor of 1 to 1.
1	concluding remarks
for many structured problems  if they are specified naturally using first-order logic  the specification suggests a lot of symmetries which can be used to prune the search space. this paper proposes two techniques for using such symmetries. they are mainly aimed at predicates. one of them works row by row  and the other one processes submatrices from the upperleft corner to the lower-right corner. the two techniques may be regarded as complementary to the least number heuristic and its extension. they can be helpful to both first-order and propositional solvers.
　symmetries have also been studied in the sat community. for example  aloul et al.  aloul et al.  1  have obtained very impressive results on various problems in the eda field. they have implemented a software package called shatter which can add certain clauses to a sat instance to make it easier. such an approach typically has to search for symmetries in large cnf formulas. for some sat instances  the search may take a long time. compared with a propositional formulation  a specification in the first-order logic allows one to use symmetries without searching for them.
　in the future  we are going to study how to combine various techniques in a single framework. it is also interesting to comparefirst-ordertechniqueswith symmetry-breakingpredicates used for sat solvers.
