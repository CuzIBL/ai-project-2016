grasper: a permissive planning robot 
scott bennett 
sra corporation 
1th street north 
arlington  va 	1 bennett sra.com  1  1 gerald dejong 
university of lllinois/urbana 
1 north mathews 
urbana  il 	1 dejong cs.uiuc.edu  1  1 　
　execution of classical plans in the real world can be problematic. small discrepancies between a planner's internal representations and the real world are unavoidable. these can conspire to cause real-world failure even though the planner is sound and  therefore   proves  that a sequence of actions achieves the desired goal. the difficulty  of course  is that the planner's proof is contingent on its internal world model precisely capturing all relevant features of the external real world. this is seldom the case  particularly in robotics where uncertainties abound. small but unavoidable sensor errors preclude accurate knowledge of the state of the world worse  the planner's own characterization of the effects of its actions are themselves only approximations. realworld execution of a sequence of actions can introduce and quickly magnify inconsistencies with the internal micro world. 
　we have been investigating one response to this difficulty called permissive planning  bennett  1; dejong and bennett  1; 1   a machine learning extension to classical planning. our video presents grasper  a permissive planning robotic system that learns to robustly pick up novel objects. in permissive planning  machine learning techniques are employed to refine the planning algorithm based upon empirical observations of success and failure in the world. alteration of the planner is accomplished through planner bias adjustment. planner bias is an inescapable facet of classical planning. it refers to the preference that a classical planner exhibits when it produces one particular plan from among the  often very large  set of distinct plans it could in principle construct. in the grasper system  planner bias is ad-
justed through explanation-based learning of schemata which eclipse the native bias inherent in the conventional searching planner employed as the explanation engine. 
　the grasper system consists of a six degree of freedom prab rtx scara-type manipulator  an overhead camera  a frame grabber  and an ibm rt computer running lucid common lisp. grasper constructs plans to lift plastic pieces of a children's puzzle. no a priori models of the objects are given to the system. the 
   *this work was conducted at the beckman institute at the university of illinois at urbana-champaign. funding was provided through the office of naval research under grant n1-j1. 
pixel patterns from the camera are converted into simple polygons which serve as the object representations to the planner. these representations  like any internal representation of a real physical object  are flawed  being only approximations to the actual objects. grasper is given a conventional classical axiomatization for how ob-
jects can be surrounded  how closing the gripper applies a friction force between the fingers and the object  how sufficient friction establishes a grasp  how a grasped ob-
ject can be manipulated  etc. the axiomatization  like the represented sensory data  captures the real world only approximately: the represented coefficient of friction is not precise. operators that represent arm movement effects only approximate the motions they claim to perform. the forces that the robot fingers apply to a surrounded object also only approximate the operator's effects  and so on. 
　using its initial knowledge  a plan is constructed to lift a designated object. not surprisingly  the initial plan usually fails in the real world. following the principle of permissive planning  the planning process  rather than the represented domain theory  is blamed for the shortcoming. the planning bias is adjusted. through bias adjustment over several failures  the real-world effects of produced plans are made to conform to the projection of the original action sequence. the final pick-up schema can be interpreted as 1  squeezing harder than the world knowledge claims is necessary  1  selecting grasp points along faces which are more nearly parallel  1  selecting grasp points closer to the object's center of geometry than believed necessary  and 1  opening the gripper wider than believed necessary while approaching the tar-
get object. 
　a unique feature of permissive planning is that the planning algorithm rather than the underlying incorrect representations are adjusted to overcome execution failures. this is the dual of the more conventional approach which successively debugs the planner's domain knowledge  leaving the planning algorithm unchanged. as refined operator definitions and object representations become more elaborate  the complexity of the planning process can grow dramatically. one advantage of permissive planning is that the operator definitions and object representations remain as the implementor originally defined them. 
permissive planning is not conceived as a general solu-
	bennettand dejong 	1 
tion to all of the difficulties that arise in planning under uncertainty. however  it offers a unique set of advantages that can complement other approaches. 
