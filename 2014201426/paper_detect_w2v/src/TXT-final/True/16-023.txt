 
       l e x i c a l f u n c t i o n a l grammar 	 lfg  	is an attempt to solve problems t h a t a r i s e 	in 	t r a n s f o r m a t i o n a l grammar and atn-formalisms 	 bresnan  	1 . another powerful 	formalism f o r d e s c r i b i n g n a t u r a l 	languages f o l l o w s from a method f o r expressing grammars in l o g i c   	due to colmerauer 	 1  	and kowalski 	 1  c a l l e d d e f i n i t e clause grammars 	 dcg  	 warren  p e r e i r a   	1 . 	both formalisms are a n a t u r a l extension of context f r e e grammars 	 cfg . 
the aim of t h i s paper is to show 
- how lfg can be t r a n s l a t e d i n t o dcg 
- t h a t the procedural 	semantics of prolog provides an e f f i c i e n t t o o l 	f o r lfg-implementations in that i t allows 	the c o n s t r u c t i o n o f 	f u n c t i o n 	s t r u c t u r e s 
  f - s t r u c t u r e s   	d i r e c t l y d u r i n g the parsing process. i . e . 	it is not necessary to have a 	separate component which f i r s t d e r i v e s a set of f u n c t i o n a l equat i o n s from the parse t r e e   	and secondly generates a f - s t r u c t u r e by s o l v i n g these equations. 
i. 	l e x i c a l 	f u n c t i o n a l grammar 
       lfg c o n s i s t s of a standard context f r e e grammar 	 cfg  	annotated w i t h f u n c t i o n a l schemata  determining the assignment of grammatical 	f u n c t i o n s to the cfg-rules. 	the c r u c i a l elements of the theory are the grammatical f u n c t i o n s 	involved both in the r e p r e s e n t a t i o n of l e x i c a l 	items and in the 
cfg-rules. 	the grammatical 	f u n c t i o n s assumed in bresnan are c l a s s i f i e d in subcategorizable 	 or governable  	f u n c t i o n s   namely subj  obj  1bj1  obl comp  xcomp  and nonsubcategorizable ones  adj and xadj. 	the subcategorizable f u n c t i o n s are the only ones to which l e x i c a l items can make r e f e r e n c e . the r o l e of 	the grammatical 	f u n c t i o n s involved in the f u n c t i o n a l equations is 	to provide a mapping b e t -
ween surface c a t e g o r i a l s t r u c t u r e and semantic p r e d i c a t e 	argument 	s t r u c t u r e . 
       the encoding of f u n c t i o n assigning equations i n t o the cfg is done as f o l l o w s : 
        i  l e x i c a l e n t r i e s : a l e x i c a l item is a s s o c i ated w i t h one or more semantic p r e d i c a t e s   f o r i t s d i s t i n c t senses or meanings  together w i t h t h e i r argument l i s t s   which c o n s i s t s o f the s y n t a c t i c a l l y subcategorized f u n c t i o n s of the l e x i c a l form. 
this r e p o r t describes work done in the department o f l i n g u i s t i c s a t 	the u n i v e r s i t y o f s t u t t g a r t . 	i t was supported in p a r t by the german science foundation p r o j . ro 1. 

1 u. reyle and w. frey 
steps. 
       f i r s t a parse t r e e is generated using the cfg   i g n o r i n g the f u n c t i o n a l e q u a t i o n s   . 	secondly the f u n c t i o n a l 	equations associated w i t h 	the c a t e g o r i e s of 	the parse t r e e are i n s t a n t i a t e d . 	this produces a f u n c t i o n a l 	d e s c r i p i t i o n of the sentence which is a set of equations. 	f i n a l l y these equations are solved to produce an f - s t r u c t u r e . 

the a b i l i t y of l e x i c a l items to determine the f e a tures o f other c o n s t i t u e n t s i . e . government r e l a t i o n s   is handled by propagating up the t r e e the f e a t u r e s e t   which i s i n s e r t e d b y the l e x i c a l i t e m . this is done by the t r i v i a l equations * =   . in our example the f e a t u r e s of 'was' become the f e a t u r e s of the v  then of the vp and f i n a l l y of the s its e l f . this i s   f o r the f e a t u r e s i n g .   expressed i n the f u n c t i o n a l equations marked w i t h  *  . the uniqueness p r i n c i p l e guarantees t h a t the s u b j e c t of the sentence w i l l have the f e a t u r e s of the verb  see 
equations 	          . 
       because verbs impose s e l e c t i o n a l r e s t r i c t i o n s on t h e i r s u b j e c t   i . e . verbs are subcategorized f o r t h e i r s u b j e c t s   i t f o l l o w s from the completeness and coherence c o n d i t i o n s t h a t verbs govern t h e i r s u b j e c t s . more g e n e r a l l y   one can argue by the same reason t h a t l e x i c a l items govern a l l of t h e i r subcategorized f u n c t i o n s . 
       as our example shows there can be a r e l a t i o n of r e f e r e n t i a l dependance between an unexpressed subject and an expressed or unexpressed c o n s t i t u e n t . this r e l a t i o n i s c a l l e d c o n t r o l   the unexpressed subject the c o n t r o l l e d element and the c o n s t i t u e n t on which it is r e f e r e n t i a l l y dependend is the cont r o l l e r . in cfg it is assumed t h a t o n l y the soc a l l e d open f u n c t i o n s xcomp and xadj can denote f u n c t i o n a l l y c o n t r o l l e d clauses. 
i i . d e f i n i t e 	clause grammar 
       like lfg dcg are based on cfg's  t o o . dcg' s are the r e s u l t of a t r a n s l a t i o n of cfg' s i n t o a subset of p r e d i c a t e l o g i c   the s o - c a l l e d h o r n - c l a u ses. these horn clauses can be used as a prolog-
programme which f u n c t i o n s l i k e a top-down parser. dcg's d i f f e r from cfg's in the f o l l o w i n g three p o i n t s : 
       - c o n t e x t - s e n s i t i v i t y : the arguments of the prolog-functions which correspond to n o n - t e r m i n a l c a t e g o r i e s can be used to t r a n s p o r t and to t e s t c o n t e x t - s e n s i ti ve i n f o r m a t i o n . 
       - c o n s t r u c t i o n o f t r e e - s t r u c t u r e s d u r i n g the p a r s i n g process: s t r u c t u r e s can be b u i l t piecemeal  l e a v i n g u n s p e c i f i e d p a r t s as v a r i a b l e s . the s t r u c tures can be passed around  and completed as the 
p a r s i n g proceeds. the c o n s t r u c t i o n of t r e e - s t r u c tures need not be s t r i c t l y p a r a l l e l to the a p p l i -
c a t i o n of 	the corresponding r u l e s . 
       - i n c l u s i o n o f a d d i t i o n a l 	f u n c t i o n s o r c o n d i t i o n s o n f u n c t i o n s 	i n t o the c o n t e x t - f r e e r u l e s . 
i i i . dcg implementation of lfg 
       our c l a i m is t h a t u s i n g dcg as a prolog p r o gramme the p a r s i n g process of a sentence according to the lfg-formalism can be done more e f f i c i e n t l y 
b y doing a l l the three steps described above s i multaneously. 
       to do t h i s   we use the content of the f u n c t i o n a s s i g n i n g equations to b u i l d up p a r t s of the whole f - s t r u c t u r e d u r i n g the p a r s i n g process. 

u. reyle and w. frey 1 
	c a r r i e s a t t h i s p o i n t the 	information 	'buy' 
 *subj  *obj  t h a t is passed around during the parse  which step by step w i l l i n s t a n t i a t e the 
argument v a r i a b l e s . 	a simple check if the v a r i a b l e s are i n s t a n t i a t e d g a r a n t i e s coherency. 	the mechanism o f passing around p a r t i a l l y 	i n s t a n t i a t e d f - s t r u c tures by v a r i a b l e s accounts f o r agreement cons t r a i n t s and government. 
       to account f o r completeness the n o n - t r i v i a l case is t h a t one has to check f o r p o s s i b l e r e f e r e n t i a l dependencies between a c o n t r o l l e d e l e -
ment and the c o n t r o l l e r . 	that means t h a t if the f - s t r u c t u r e f 	is embedded in another f - s t r u c t u r e f1 	and the subcategorizable f u n c t i o n subj of f1 
has no f - v a l u e i t s value can be given by the value of the c o n t r o l l e r   i . e .   of a subcatego-
r i z a b l e f u n c t i o n occuring in f . we add to our dcg 
a d d i t i o n a l f u n c t i o n s which have as input the set of p o s s i b l e c o n t r o l l e r s and which compute the r e f e r e n t i a l dependencies espressed by the r u l e s of f u n c t i o n a l c o n t r o l .   s e e bresnan 	1 . 
       wo use lfg as base f o r the parsing component of our system described in frey  et a l .  1 . 
