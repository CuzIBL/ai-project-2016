 
a command entity  ce  is a goal-oriented intelligent agent specifically designed to command and control other agents. the ce niche  most often a military battlefield  is a complex  dynamic  adversarial environment in which a ce must balance the needs for thorough planning with the need for quick reactions to changing conditions. we describe the requirements of this environment  and how it constrains the design of ces. examples from several ce designs are used. the paper concentrates on the areas of planning  knowledge and teamwork. 
1 	introduction 
a command entity  ce  is a type of intelligent agent whose purpose it is to model the way a commander accomplishes an assigned mission by directing the actions of subordinate agents. a ce is  situated  in a simulation of a natural real-world environment  so the problem space of a ce is complex. the problem space includes goals  enemy situation  subordinates and peers  terrain  weather  and time. when tasked with a set of mission goals  the ce must analyze the mission in terms of these factors and plan a course of action that can accomplish the goals. then it must direct the execution of the mission  adapting to changing situations. application areas for ces include training  development of tactics and doctrine  and mission rehearsal. 
　following hayes-roth   we define niche as  a class of operating environments: the tasks an agent must perform  the resources it has for performing tasks  the contextual conditions that may influence its performance  and the evaluation criteria it must satisfy.  we further define ce niche as the niche occupied by a command entity. although military ces are the focus of this paper  the ce niche is not unique to the military. 
an example of a non-military agent in a ce niche is the 
    portions of this work were supported by darpa under contract daae1-c-r1  administered through army tacom  and contract n1-c-1  administered through navy nrad 
1 	planning and scheduling 
phoenix project  cohen et al  1   which has applied a real-time  adaptive planner to fighting forest fires. the phoenix command agent makes a plan for how to use it's assets  a hierarchical organization of fire-fighting agents  in a real-world environment  in the face of an adversary  the fire  whose actions are difficult to predict and can be deadly. another example is hayes-roth's   adaptive intelligent systems   applied to intensive care unitpatient monitoring. 
　the outward actions of a ce are requests and commands in a hierarchical command and control structure. although a lower echelon ce can actively sense the environment by reconnoiter or moving to good vantage points  most situational information comes to the ce via periodic situation and intelligence reports. this conceptual distance between the command agent and its sensors and effectors has implications for reliability of incoming data  and for the amount of time available for decision-making. since the ce is not omniscient  and is competing against an adversary that may be actively trying to cause the failure of mission goals  a ce must be able to react to problems encountered by its subordinates  sec. 1 . a more advanced ce can compensate for failures of its peers to achieve team goals in a cooperative mission  sec. 1 . 
　in the sections that follow  we investigate the niche of command entities to suggest constraints it offers to the computer modeler. section 1 measures the capabilities required for a ce along dimensions of functionality commonly associated with  agents . section 1 describes hrl's own canonical commander model  an example of a generic military ce. section 1 looks at planning architectures suitable for the command domain. section 1 explores the structure of military knowledge  and section 1 deals with requirements of teamwork. 
	goals 	time 
	enemy situation 	terrain & weather 
subordinates &  peers 
figure 1: problem space of a command entity 


figure 1: command entity's activities 
1 	commanders are intelligent agents 
although very different types of tasks are given to commanders at different echelons  ranks  and branches of the service  the skills of analysis and decision-making are very similar. the process of commanding a unit is summarized in a number of army field manuals as follows: 
1. receive the mission 
1. issue the warning order 
1. make a tentative plan 
a. estimate the situation 
   - analyze mission 
   - develop courses of action  coas  
   - analyze and compare coas; war-game b. expand selected coa into tentative plan 
1. initiate movement  and reconnoiter 
1. complete the plan  and issue the order 
 1. supervise  and refine the plan 
　at all levels of command '.here are basic analysis  decision-making  command and control skills common to a wide variety of commanders. figure 1 illustrates the activities of a ce. this matches hayes-roth's  description of the functions continuously performed by intelligent agents   typical ai agents  : 
  perception of dynamic conditions in the environ-ment  i.e. read sensors  check for messages  
  reasoning to interpret perceptions  solve problems  draw inferences  and determine actions  i.e. planning or action selection  if required  
  action to affect conditions in the environment  i.e. issue orders and/or move  
　hayes-roth characterizes a class of agent called  adaptive intelligent system  ais   that requires adaptation capabilities in addition to typical ai agent skills. aiss  like ces  occupy a niche that presents  dynamic variability in ... required tasks  available resources  contextual conditions  and performance criteria . she concludes that aiss must be able to adapt their strategies. two types of adaptation that are useful in a ce niche are: 
  perception strategy - how often to read sensors  and when an active perception plan is needed  e.g. to reconnoiter or to move to a vantage point  
  control mode - whether to call a quick reaction drill or do a full replan  depends on time and situation  
　table 1 describes a ce in terms of such a list of properties commonly used to define agents from franklin and graesser . a ce  like a typical ai agent  is reactive  goal-oriented and communicative. unlike  mobile  agents  it does not know about computer networks or network resources. the ce communicates for specific tactical reasons: to command  make requests  and report. military communications are quite structured  and there is no need to engage in free-form discourse. the military is very interested in being able to task synthetic combatants by voice  as in the usmc's leathernet project  clarkson and yi  1 . but the allowable input is still very structured  and can be translated into something a ce can understand  as a pre-processor to the ce. one type of adaptation that is not required in a ce is learning of tactics  sec. 1 ; standard knowledge acquisition methods are more effective. finally  flexibility and personality are very desirable features in a command entity  to make it act more unpredictably. but it must be possible to turn such features off for certain types of validation tests where repeatability is desired. 
　the typical ai agent does not have the powerful knowledge-based planning power to act as a command entity. in turn  ces are not mobile agents  and do not have special capabilities that would allow them to discover network resources. however  they are good at commanding other agents to do things  and could be used to command typical ai agents. 
in conclusion  a ce is more than a  typical ai agent . 
it requires knowledge-based planning and reasoning  and can benefit from adaptive perception and reaction strategies. distributed planning and negotiation capabilities may be required. mobility  meaning the capability for the ce code to migrate between computers via a computer network  is not part of the job description. 
agent 	property ce -note-reactive yes important autonomous semi-goal-oriented yes important continuously running process no communicative yes informative  
not chatty adaptive some see below mobile  on network  no flexible good must be controllable personality good must be controllable | table 1: properties of command entities compared to those of  typical ai agents  
	howard 	1 

1 	canonical commander model  ccm  
the  canonical commander model  is a synthetic commander developed by hughes research labs for the darpa command forces  cfor  program  hartzog and salisbury  1 . the ccm can be configured with different knowledge bases of tactics and doctrine to simulate different types of commanders. in the last three years the ccm has been used to command simulations of a u.s. army company team or a u.s. marine corps rifle platoon. the behavior of the ccm was validated by military experts for the army and marine corps. when there were questions about the behavior  the knowledge base could be inspected and rules traced back to interviews with the smes. 
　the main principle guiding the design is that knowledge must be kept out of functional code  because ces of all kinds use a common set of generic reasoning capabilities. 
　the ccm simulates all the basic skills enumerated in sec 1. it can analyze the situation and terrain  and plan a course of action to accomplish the mission goals. an industry-standard entity-level simulation known as modsaf is used to simulate the mission. the commander monitors the progress of the mission by reading situation reports  and can modify its plan in case of problems such as minefields or enemy ambushes. the ccm communicates in a structured command language called command and control simulation interface language  salisbury  1   which is similar to military messages. 
1 	considerations for planning 
 // is a bad plan that admits of no modification.  
 publius syrus. 1 b.c.  
　ces act in a niche with dynamic variability along every dimension of the problem space. the ce must plan to achieve multiple goals with real-world constraints in an adversarial environment. it must assume that initial assumptions about situations might prove wrong  and in addition that there exist opponents whose goal it is to actively work to cause failure of the ce's goals. 
　ideally  planning in an unpredictable  real-time domain should be done with a reactive planning system that combines perception  planning and action and guarantees a response in bounded time. but in practice  a computer planner is so much faster than a human that planning speed for this niche is not an issue. in fact  the lowest echelons have standing operating procedures  sop   usmc  1  for immediate reactions to such common problems as enemy ambushes and minefields. this tactical procedure is a drill that the troops know how to execute without direction from higher commanders  to get the troops into cover and returning fire. this gives the ce time to plan a strategic response. for example  if a usmc rifle squad is ambushed  it knows to immediately take cover and return fire. this gives the rifle platoon leader time to plan for reorganizing the squad  
1 	planning and scheduling 
calling in indirect fire from support elements  and deciding whether to continue to engage the enemy or withdraw  usmc  1 . 
　the task is the most primitive executable operation planned by a ce. a mission is a set of tasks that accomplish a strategic goal. when a mission is assigned to the ce  the order may specify one or more tasks to be accomplished during execution of the mission. for example  a unit might be ordered to take a certain approach route  or to pause and coordinate with another unit  during an attack mission. 
　all three of the development efforts in the darpa command forces  cfor  program  hartzog and salisbury  1; calder et al.  1; gratch  1; howard  1   and its precursor  the eagle program  salisbury and tallis  1   independently produced mission planners that decompose a mission assignment into a sequence of tasks  i.e. a course of action . this type of planner manipulates points in a search space of partially elaborated plans  and is sometimes known as a hierarchical task network  htn  planner. the following very brief description of planning can be supplemented by an excellent review of planning techniques in  hendler et al.  1 . 
　an htn planner starts with a plan composed of nonprimitive  abstract  actions and primitive actions. primitive actions are those that the system knows how to perform. the htn planner's main transformation step is task reduction  in which an abstract action is expanded into a partial plan composed of abstract and/or primitive actions. task reduction steps alternate with conflict resolution steps  erol et al.  1 . when the plan cannot be further reduced and all conflicts are resolved  the planning process is terminated. 
　the main alternative to htn planning methodology is partial order  po  planning. a po planning problem consists of an initial state  a goal state  and a set of actions  or operators . the po planner's main transformation step is to select a precondition of a step in the plan and add new steps or new constraints that satisfy it. a complete plan is a sequence of executable actions that can turn the initial state into the goal state. 
　kambhampati   comparing htn planning with partial order planning  shows that htn planning can be more efficient because it allows the user to control the solution space. this limits the search for acceptable plans. 
　the canonical commander model  ccm   sec. 1  uses the htn planning approach. the rules that guide the task decomposition process in the ccm enumerate an and-or tree  in which the or nodes require a decision. and nodes may or may not prescribe a certain ordering of the child nodes. should the planner reach a partial ordering of primitive tasks that cannot be resolved into a total ordering  it would have to backtrack to create a consistent plan. but in practice  it has been possible to structure the planning scripts for the ccm planner so that it has not been necessary to backtrack. in other words  using an htn planner  we have been able to control the solution space to such a degree that it has always been possible for the ccm planner to find an acceptable solution without backtracking. 
　in general  a planner for a ce niche must be able to plan to achieve a set of goals. approaches to solving such 
 conjunctive goal plans  are discussed in  hendler et al.  1 . in the ce niche  a set of goals can come from explicit tasking in orders in the form of multiple missions to be accomplished sequentially or explicit tasks that must be accomplished in pursuit of a mission. the order probably provides a sequence for the goals  or at least a priority may be implied by the wording of the order. other goals and constraints are implied by the explicitly assigned ones; for example  a task of occupying a suppressive fire position implies a movement task to get there. these will also imply a sequential ordering that makes them easy to plan. the most difficult planning challenge is to accomplish goals and constraints related to standing operating procedure and the obligations of teamwork  because it is more likely that the planner cannot use the linearity assumption. that is  the planner cannot plan for one goal at a time  and assume that the solution for one goal will not conflict with the solution of any other. nonlinear planners are able to deal with goal conflicts explicitly; chapman  l1  pulled together various approaches into a simple  provably correct domainindependent planner called  tweak . the ce niche is a constrained domain  and if goals and constraints from all sources can be expressed in the same format  they can be seamlessly integrated into the multi-goal planning and monitoring process. 
1 	it's how you play the game: military knowledge 
darpa's joint simulation system  jsims  mission statement includes training and use of computer simulations to help define doctrine  tactics  and operational requirements. this implies that it is important that a ce not only achieve its assigned goals  but also conduct the mission in a doctrinally correct manner. if a human company commander is using simulations of several subordinate platoon commanders to rehearse a mission and evaluate different courses of action  and the simulated subordinates do something unexpected  the human commander will want an explanation - not only for the human's understanding and training effect  but to maintain confidence in the simulation system. accurate acquisition of relevant tactics and doctrine is essential for both realistic behavior and meaningful explanation. 
　military doctrine and tactics have been developed over centuries and codified in a simple form that can be taught to soldiers of widely varying abilities. at the lowest echelons  reaction drills like those in the usmc battle drill guide  usmc  1  have been formulated for squad and platoon leaders. soldiers are trained in these basic skills until they become second nature. the battle drills are grouped into scenarios called  situational training exercises . but while the information is very helpful to the developer in understanding the military problem space  it is difficult  and undesirable  to develop rules directly from the manuals. while the manuals do have a disciplined structure  the organization is not always logical from a programmer's perspective. the programmer must study the manuals and become expert enough to reformulate the knowledge as needed for the application. 
　the command forces  cfor  program provides developers with military experts to identify the appropriate doctrine and tactics  and to validate the simulated behaviors. there are no established objective performance tests for this type of behavioral representation. in the cfor program  behaviors are evaluated subjectively on a pass/fail system  by military experts watching ce performance on different test scenarios. 
　ai planners work to refine a plan down to primitive actions or tasks  so it is natural for a developer to want an enumeration of these primitive tasks  along with allowable parameters. but military tasks are greatly dependent on context  1 . for example  it is natural for a designer of ces to want to use  move  as a primitive operation  parameterized by formation type and route. but the military experts we have dealt with have felt very uncomfortable when asked  for example  to relate a movement behind friendly lines to a movement across a  danger area . they prefer to talk about situations  or sets of tasks in context. this difference in conceptualization makes knowledge acquisition in this domain especially challenging. 
　the holy grail of ce designers is a system that can learn tactics and doctrine by watching an expert work. some recent attempts are in  krozel et al.  1; hille et al.  1; rajput et a/.  1 . but the complexity of the ce niche makes it difficult for a program to discern which contextual features contribute to making a decision  in all but the simplest scenarios. for example  although built on a well-developed learning architecture  soar   j.laird et a/.  1   learning of tactical/strategic knowledge has not been attempted in the rotor-winged air  rwa  ce  gratch  1  built for the cfor program. a good interviewing technique will more efficiently elicit the important decisions and the pertinent factors. 
　in the cfor program  developers used different strategies to incorporate the knowledge into their simulations. the army developers  calder et al.  1  embed knowledge derived from military experts into instances of object-oriented  constraint sets   cs   where each cs represents an abstract or primitive task. the rwa ce developers build the knowledge into the plan refinement operators used to refine its plan. 
in developing the ccm agent  sec 1  for the marine 
corps  we used an expert system approach. the ccm uses the modular knowledge acquisition tool  m-kat   goldman  1  to acquire knowledge and turn it into a rulebase known as  fuzzy tables . the m-kat approach to knowledge acquisition features an interviewing style that helps the expert to express the knowledge in 
	howard 	1 

ce type knowledge 	format hrl  ccm  army co tm 
usmc pit m-kat fuzzy tables saic army co/bn 
army fist constraint sets isi rwa co plan refinement operators j table 1: knowledge formats used in command entities 
a form that can be directly encoded. this can improve the efficiency of the knowledge acquisition process. the interviewing approach helps an expert to formulate the knowledge in a form that can be put directly into the knowledge base. 
1 	teamwork and theories of joint action 
military organizations are specialists in teamwork. 
breakdowns in teamwork can and do happen  and a breakdown in teamwork in a military mission can be fatal if team members are not able to compensate. most ce's are not capable of reasoning about teamwork  which require an explicit model of the key tasks each team member is going to accomplish in support of the team goals. with such a model it would be possible to detect failure in one of the key tasks  and reason about an alternate course of action. 
　if orders are well-written  they will spell out the commander's intent for the mission  that is  the desirable outcome  and list any constraints on each team members' movement  weapons fire  and time. as long as it doesn't violate the constraints  each team member can move and shoot at will  confident that it won't hurt another team member. a good order does not  micromanage  the mission  but there will be explicit information about when and where any team interactions will take place. if something goes wrong with one team member  the others have the information they need to reason about how to compensate. 
　an example of a breakdown in teamwork that was experienced in the cfor program was when a marine platoon leader commanded an attack on a prepared enemy position. the assault was to be supported by three fire support assets that were to begin firing upon command by the platoon leader. when the suppressive fire began  the leader's plan was to order the assault. however  if one of the fire support assets was unable to get to its support position  whether due to difficult terrain or attrition  the leader was unable to reason about a way to compensate; the rules required that all three fire support assets be in place and firing before the assault could be ordered. it is possible to get around this problem by adding more rules to the commander's knowledge database  but it is difficult to write the rules so as to generalize to other situations. furthermore  if the leader were to be isolated because of a breakdown in communication  more specific rules would have to be added so that the subordinates could adapt. 
1 	planning and scheduling 
　it is desirable to have a general method of reasoning about teamwork  with rules for adjusting the plan when teamwork breaks down. there are few implementations of theories of joint action. jennings'  implementation of the  joint intentions  framework in an industrial multi-agent setting was the model for tambe's  implementation in the air combat domain. if a team is to be able to act in a coherent manner even during unplanned events  jennings asserts that team members need to have sufficient knowledge of the problem-solving process. they must understand the mission goals and the roles of all team members. the common understanding of the domain  guidance given in the order  and rules for handling specific situations would all be used to define the latitude team members have in adjusting to difficulties in the mission. 
1 	conclusions 
a command entity  ce  acts in a very challenging  dynamically changing domain. the  ce niche  is more complex than the niche occupied by  typical ai agents . to act as a ce  a typical agent would probably have to have a more powerful planner  capable of working with a knowledge base. it is possible  and desirable  to use a hierarchical task network  htn  planner in the design of a ce. htn planners offer the user some control over the solution space  which can make them more efficient than partial order planners. the ce niche is mostly managerial  and does not require a planner with guaranteed results in bounded time. we characterized military knowledge  which is not easy to build into a simulation of this type. finally  the requirements for teamwork were briefly discussed. the canonical commander model  ccm  was used throughout the paper to illustrate some of the concepts. 
1 	acknowledgments 
the interest and support of cdr peggy feldman 
 darpa synthetic forces pm  and susie hartzog and jeff clarkson  nrad project managers  is greatly appreciated. hrl's command entity is the work of a talented team which includes craig lee and seth goldman  under the guidance of our program manager  david tseng. 
