
the need to represent mappings between different ontologies has been recognized as a result of the fact that different ontologies may partially overlap  or even represent the same domain from different points of view. unlike ontology languages  work on languages to represent ontology mappings has not yet reached a state where a common understanding of the basic principles exists. in this paper we propose a formal comparison of existing mapping languages by translating them into distributed first order logic. this allows us to analyze underlying assumptions and differences in the interpretation of ontology mappings.
1 motivation
the benefits of using ontologies as explicit models of the conceptualization underlying information sources has widely been recognized. meanwhile  a number of logical languages for representing and reasoning about ontologies have been proposed and there are even language standards now that guarantee stability and homogeneity on the language level. at the same time  the need to represent mappings between different ontologies has been recognized as a result of the fact that different ontologies may partially overlap or even represent the same domain from different points of view  bouquet et al.  1 . as a result  a number of proposals have been made for extending ontology languages with notions of mappings between different models. unlike for the case of ontology languages  work on languages to represent ontology mappings has not yet reached a state where a common understanding of the basic principles exists. as a consequence  existing proposals show major differences concerning almost all possible aspects of such languages. this makes it difficult to compare approaches and to make a decision about the usefulness of a particular approach in a given situation.
모the purpose of this work is to provide a better understanding of the commonalities and differences of existing proposals for ontology mapping languages. we restrict our attention to logic-based approaches that have been defined as extensions of existing formalisms for representing terminological knowledge. in particular  we chose approaches that extend description logics  dl  with notions of mappings between
{heiner|holger} cs.vu.nl
different t-boxes. the rationale for this choice is the fact that dls are a widely agreed standard for describing terminological knowledge. in particular  dls have gained a lot of attention as a standardized way of representing ontologies on the semantic web  horrocks et al.  1 .
approach and contributions
we encode the different mapping languages in an extended version of distributed first-order logic  dfol   a logical framework for representing distributed knowledge systems  ghidini and serafini  1 . dfol consists of two components: a family of first order theories and a set of axioms describing the relations between these theories. as most proposals for mapping languages are based on a subset of firstorder logic for describing local models and mappings with a particular semantics for the connections between models  these mapping languages can be expressed in distributed first order logic in the following way:
  restrictions on the use of first order sentences for describing domain models
  the form of axioms that can be used for describing relations between domain models
  axioms describing the assumptions that are encoded in the specific semantics of mappings
모encoding the different mapping approaches in first-order logic in this way has several advantages for an analysis and comparison of existing work. in particular it allows us to do a formal analysis and comparison of different approaches in a uniform logical framework. in the course of the investigations  we make the following contributions to the state of the art in distributed knowledge representation and reasoning:
  we show how the dfol formalism can be used to model relations between heterogeneous domains  proposition 1 
  we encode existing mapping approaches in a common framework  making them more comparable
  we make hidden assumptions explicit in terms of distributed first order logic axioms
  we provide first results on the relative expressiveness of the approaches and identify shared fragments
모the paper is structured as follows. in section 1 we introduce distributed first order logic as a general model for describing distributed knowledge systems. we explain the intuition of the logic and introduce its syntax and semantics. in section 1 we describe how the different mapping approaches can be encoded in distributed first order language. here we will focus on the representation of mappings and the encoding of hidden assumptions. in section 1 we compare the different approaches based on their encoding in dfol and discuss issues such as relative expressiveness and compatibility of the different approaches and conclude with a summary of our findings and open questions.
1 distributed first-order logic
this section introduces distributed first order logic as a basis for modeling distributed knowledge bases. more details about the language including a sound and complete calculus can be found in  ghidini and serafini  1 .
모let {li}i뫍i  in the following {li}  be a family of first order languages with equality defined over a non-empty set i of indexes. each language li is the language used by the i-th knowledge base  ontology . the signature of li is extended with a new set of symbols used to denote objects which are related with other objects in different ontologies. for each variable  and each index j 뫍 i with j 1= i we have two new symbols x뫸j and xj뫸  called arrow variables. terms and formulas of li  also called i-terms and i-formulas and are defined in the usual way. quantification on arrow variables is not permitted. the notation 뷋 x  is used to denote the formula 뷋 and the fact that the free variables of 뷋 are x = {x1 ... xn}. in order to distinguish occurrences of terms and formulas in different languages we label them with their index. the expression i:뷋 denotes the formula 뷋 of the i-th knowledge base.
모the semantics of dfol is an extension of local models semantics defined in  ghidini and giunchiglia  1 . local models are defined in terms of first order models. to capture the fact that certain predicates are completely known by the i-th sub-system we select a sub-language of li containing the equality predicate  denoted as lci  which we call the complete fragment of li. complete terms and complete formulas are terms and formula of lci and vice versa.
definition 1  set of local models . a set of local models of li are a set of first order interpretations of li  on a domain domi  which agree on the interpretation of lci  the complete fragment of li.
모as noted in  franconi and tessaris  1  there is a foundational difference between approaches that use epistemic states and approaches that use a classical model theoretic semantics. the two approaches differ as long as there is more than one model m. using the notion of complete sublanguage lc  however  we can force that the set of local models is either a singleton or the empty set by enforcing that lc = l. under this assumption the two ways of defining the semantics of submodels are equivalent. using this assumption  we are therefore able to simulate both kinds of semantics in dfol.
모two or more models can carry information about the same portion of the world. in this case we say that they semantically overlap. overlapping is unrelated to the fact that the same constant appears in two languages  as from the local semantics we have that the interpretation of a constant c in li is independent from the interpretation of the very same constant in lj  with i 1= j. overlapping is also unrelated to the intersection between the interpretation domains of two or more contexts. namely if dom1 뫌 dom1=   it does not mean that l1 and lj overlap. instead  dfol explicitly represents semantic overlapping via a domain relation.
definition 1  domain relation . a domain relation from domi to domj is a binary relation rij   domi 뫄 domj.
모a domain relation from i to j represents the capability of the j-th sub-system to represent in its domain the domain of the i-th subsystem. a pair hd d1i being in rij means that  from the point of view of j  d in domi is the representation of d1 in domj. we use the functional notation rij d  to denote the set {d1 뫍 domj|hd d1i 뫍 rij}. the domain relation rij formalizes j's subjective point of view on the relation between domi and domj and not an absolute objective point of view. or in other words rij 1= rji because of the non-symmetrical nature of mappings. therefore hd d1i 뫍 rij must not be read as if d and d1 were the same object in a domain shared by i and j. this fact would indeed be formalized by some observer which is external  above  meta  to both i and j. using the notion of domain relation we can define the notion of a model for a set of local models.
definition 1  dfol model . a dfol model m is a pair h{mi} {rij}i where  for each i 1= j 뫍 i: mi is a set of local models for li  and rij is a domain relation from domi to domj.
모we extend the classical notion of assignment  e.g.  the one given for first order logic  to deal with arrow variables using domain relations. in particular  an assignment a  provides for each system i  an interpretation for all the variables  and for some  but not necessarily all  arrow variables  as the domain relations might be such that there is no consistent way to assign arrow variables. for instance if ai x  = d and rij d  =    then aj cannot assign anything to xi뫸.
definition 1  assignment . let m = h{mi} {rij}i be a model for {li}. an assignment a is a family {ai} of partial functions from the set of variables and arrow variables to domi  such that:
1. ai x  뫍 domi;
1. ai xj뫸  뫍 rji aj x  ; 1. aj x  뫍 rij ai x뫸j  ;
an assignment a is admissible for a formula i : 뷋 if ai assigns all the arrow variables occurring in 뷋. furthermore  a is admissible for a set of formulas 붞 if it is admissible for any j :뷋 뫍 붞. an assignment a is strictly admissible for a set of formulas 붞 if it is admissible for 붞 and assigns only the arrow variables that occur in 붞.
모using the notion of an admissible assignment given above  satisfiability in distributed first order logic is defined as follows:
definition 1  satisfiability . let m = h{mi} {rij}i be a model for {li}  m 뫍 mi  and a an assignment. an i-formula 뷋 is satisfied by m  w.r.t  a  in symbols m |=d 뷋 a  if
a  m |= i:p x뫸j  뫸 j:q x 	iff	for all d 뫍 ||p||i and for all d1 뫍 rij d   d1 뫍 ||q||j
b  m |= i:p x  뫸 j:q xi뫸 	iff	for all d 뫍 ||p||i there is a d1 뫍 rij d   s.t.  d1 뫍 ||q||j
c  m |= j:q xi뫸  뫸 i:p x 	iff	for all d 뫍 ||q||j and for all d1 with d 뫍 rij d1   d1 뫍 ||p||i
d  m |= j:q x  뫸 i:p x뫸j 	iff	for all d 뫍 ||q||i there is a d1 with d 뫍 rij d1   s.t.  d1 뫍 ||p||i
figure 1: implicit quantification of arrow variables in interpretation constraints1. a is admissible for i:뷋 and
1. m |= 뷋 ai   according to the definition of satisfiability for first order logic.
m |= 붞 a  if for all i:뷋 뫍 붞 and m 뫍 mi  m |=d 뷋 ai 1.
모mappings between different knowledge bases are formalized in dfol by a new form of constraints that involves more than one knowledge base. these formulas that will be the basis for describing different mapping approaches are called interpretation constraints and are defined as follows:
definition 1  interpretation constraint . an interpretation constraint from i1 ... in to i with ik 1= i for 1 뫞 k 뫞 n is an expression of the form
	i1:뷋1 ... in:뷋n 뫸 i:뷋	 1 
모the interpretation constraint  1  can be considered as an axiom that restricts the set of possible dfol models to those which satisfy it. therefore we need to define when a dfol model satisfies an interpretation constraint.
definition 1  satisfiability of interpretation constraints . a model m satisfies the interpretation constraint  1   in symbols m |= i1:뷋1 ... in:뷋n 뫸 i:뷋 if for any assignment a strictly admissible for {i1:뷋1 ... in:뷋n}  if m |= ik:뷋k a  for 1 뫞 k 뫞 n  then a can be extended to an assignment a1 admissible for i:뷋 and such that m |= i:뷋 a1 .
모notice that  depending on whether an arrow variable x뫸 occurs on the left or on the right side of the constraint  x뫸 has a universal or an existential reading. figure 1 summarizes the different possible readings that will reoccur later. notationally  for any predicate p  ||p||i = tm뫍mi m p   where m p  is the interpretation of p in m.
모by means of interpretation constraints on equality  we can formalize possible relations between heterogeneous domains.
f
	invij	
odij=fij 뫋 fji 뫋 invijedij=odij 뫋 {i:x = x 뫸 j:xi뫸 = xi뫸}idij=edij 뫋 edji	rdij	=
	ipij	=
proposition 1. let m be a dfol model and i 1= j 뫍 i.
1. m |= fij iff rij is a partial function.
1. m |= invij iff rij is the inverse of rji.
1.  is an isomorphism between a subset of domi and a subset of domj. i.e.  domi and domj  isomorphically  overlap.
1. m |= edij iff rij = rji 1  is an isomorphism between domi and a subset of domj. i.e.  domi is  isomorphically  embedded in domj
1. m |= idij iff rij = rji 1  is an isomorphism between domi and domj. i.e.  domi is isomorphic to domj.
1. m |= rd  if for every constant c of li and lj  if c is interpreted in d for all m 뫍 mi then c is interpreted in rij d  for all models of m 뫍 mj  and vice-versa. i.e.  the constant c is rigidly interpreted by i and j in two corresponding objects.
1. finally m |= ipij iff mi =   implies that mj =  .
i.e.  inconsistency propagates from i to j.
1 modeling mapping languages in dfol
formalisms for mapping languages are based on four main parameters: local languages and local semantics used to specify the local knowledge  and mapping languages and semantics for mappings  used to specify the semantic relations between the local knowledge. in this section we focus on the second pairs and as far as local languages and local semantics it is enough to notice that
local languages in all approaches local knowledge is expressed by a suitable fragment of first order languages.
local semantics with the notable exception of  franconi and tessaris  1   where authors propose an epistemic approach to information integration  all the other formalisms for ontology mapping assume that each local knowledge is interpreted in a  partial  state of the world and not into an epistemic state. this formally corresponds to the fact that each local knowledge base is associated with at most one fol interpretation.
the first assumption is naturally captured in dfol  by simply considering li to be an adequately restricted fol language. concerning the local semantics  in dfol models each li is associated with a set of interpretations. to simulate the single local model assumption  in dfol it is enough to declare each li to be a complete language. this implies that all the m 뫍 mi have to agree on the interpretation of li-symbols.
모notationally  뷋 뷍 ... will be used to denote both dl expressions and fol open formulas. if 뷋 is a dl concept  뷋 x   or 뷋 x1 ... xn   will denote the corresponding translation of 뷋 in fol as described in  borgida  1 . if 뷋 is a role r then 뷋 x y  denotes its translation p x y   and if 뷋 is a constant c  then 뷋 x  denote its translation x = c. finally we use x to denote a set x1 ... xn of variables.
1 distributed description logics/c-owl
the approach presented in  borgida and serafini  1  extends dl with a local model semantics similar to the one introduced above and so-called bridge rules to define semantic relations between different t-boxes. a distributed interpretation for ddl on a family of dl languages {li}  is a
family {ii} of interpretations  one for each li plus a family {rij}i1=j뫍i of domain relations. while the original proposal only considered subsumption between concept expressions  the model was extended to a set of five semantic relations discussed below. the semantics of the five semantic relations defined in c-owl is the following:
definition 1   bouquet et al.  1  . let 뷋 and 뷍 be either concepts  or individuals  or roles of the descriptive languages li and lj respectively1.
	v	ii    뷍ij;
1. i |= i:뷋  뫸 j:뷍 if rij 뷋
	w	ii    뷍ij;
1. i |= i:뷋  뫸 j:뷍 if rij 뷋
1. i |= i:뷋  뫖뫸 j:뷍 if rij 뷋ii  = 뷍ij;
1. i |= i:뷋  뫐뫸 j:뷍 if rij 뷋ii  뫌 뷍ij =  ;
1. i |= i:뷋  뫸 	j:뷍 if rij 뷋ii  뫌 뷍ij 1=  ;
an interpretation for a context space is a model for it if all the bridge rules are satisfied.
모from the above satisfiability condition one can see that the mapping i:뷋  뫖뫸 j:뷍 is equivalent to the conjunction of the
	v	w
mappings i : 뷋  뫸 j : 뷍 and i : 뷋  뫸 j : 뷍. the mapping i : 뷋  뫐뫸 j : 뷍 is equivalent to i : 뷋  v뫸 j :  뷍. and finally the mapping i : 뷋  뫸 	j : 뷍 is the negation of the mapping v
i : 뷋  뫸 j : 뷍. for the translation we will therefore consider only the primitive mappings. as the underlying notion of a model is the same as for dfol  we can directly try to translate bridge rules into interpretation constraints. in particular  there are no additional assumptions about the nature of the domains that have to be modeled. the translation is the following:
c-owldfolv
i:뷋  뫸 j:뷍i:뷋 x뫸j  뫸 j:뷍 x w
i:뷋  뫸 j:뷍j:뷍 x  뫸 i:뷋 x뫸j v
i:뷋  1 뫸 j:뷍no translationwe see that a bridge rule basically corresponds to the interpretation a  and d  in figure 1. the different semantic relations correspond to the usual readings of implications. finally neg-
모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모v ative information about mappings  i.e.  i:뷋  1 뫸 j :뷍 is not representable by means of dfol interpretation constraints.
1 ontology integration framework  ois 
calvanese and colleagues in  calvanese et al.  1b  propose a framework for mappings between ontologies that generalizes existing work on view-based schema integration  ullman  1  and subsumes other approaches on connecting dl models with rules. in particular  they distinguish global centric  local centric and the combined approach. these approaches differ in the types of expressions connected by mappings. with respect to the semantics of mappings  they do not differ and we therefore treat them as one.
모ois assumes the existence of a global model g into which all local models s are mapped. on the semantic level  the domains of the local models are assumed to be embedded in a global domain. further  in ois constants are assumed to rigidly designate the same objects across domain. finally  global inconsistency is assumed  in the sense that the inconsistency of a local knowledge base makes the whole system inconsistent. as shown in proposition 1  we can capture these assumptions by the set of interpretation constraints edsg  rdsg  and ipsg  where s is the index of any source ontology and g the index of the global ontology.
모according to these assumptions mappings are described in terms of correspondences between a local and the global model. the interpretation of these correspondences are defined as follows:
definition 1   calvanese et al.  1b  . correspondences between source ontologies and global ontology are of the following four forms
1. i satisfies h뷋 뷍 soundi w.r.t. the local interpretation d  if all the tuples satisfying 뷍 in d satisfy 뷋 in i
1. h뷋 뷍 completei w.r.t. the local interpretation d  if no tuple other than those satisfying 뷍 in d satisfies 뷋 in i 
1. h뷋 뷍 exacti w.r.t. the local interpretation d  if the set of tuples that satisfies 뷍 in d is exactly the set of tuples satisfying 뷋 in i.
모from the above semantic conditions  h뷋 뷍 exacti is equivalent to the conjunction of h뷋 뷍 soundi and h뷋 뷍 completei. it's therefore enough to provide the translation of the first two correspondences. the definitions 1 and 1 above can directly be expressed into interpretation constraints  compare figure 1  resulting in the following translation:
glav correspondencedfolh뷋 뷍 soundis:뷍 x  뫸 g:뷋 xs뫸 h뷋 뷍 completeig:뷋 x  뫸 s:뷍 x뫸g the translation shows that there is a fundamental difference in the way mappings are interpreted in c-owl and in ois. while c-owl mappings correspond to a universally quantified reading  figure 1 a   ois mappings have an existentially quantified readings  figure 1 b/d . we will come back to this difference later.
1 dl for information integration  dlii 
a slightly different approach to the integration of different
dl models is described in  calvanese et al.  1a . this approach assumes a partial overlap between the domains of the models mi and mj  rather than a complete embedding of them in a global domain. this is captured by the interpretation constraint odij. the other assumptions  rigid designators and global inconsistency  are the same as for ois.
모an interpretation i associates to each mi a domain  i. these different models are connected by interschema assertions. satisfiability of interschema assertions is defined as follows 1
definition 1  satisfiability of interschema assertions . if i is an interpretation for mi and mj we say that i satisfies the interschema assertion
뷋 vext 뷍  if 뷋i   뷍i	뷋 1vext 뷍  if 뷋i  1	뷍i 뷋 뫖ext 뷍  if 뷋i = 뷍i	뷋 뫖1 ext 뷍  if 뷋i 1= 뷍i 뷋 vint 뷍  if 뷋i 뫌  inij   뷍i 뫌  inij 뷋 뫖int 뷍  if 뷋i 뫌  inij = 뷍i 뫌  inij 뷋 v1 int 뷍  if 뷋i 뫌  inij  1	뷍i 뫌  inij 뷋 1뫖int 뷍  if 뷋i 뫌  inij 1= 뷍i 뫌  inij
모as before 뫖est and 뫖int are definable as conjunctions of vest and vint  so we can ignore them for the dfol translation. furthermore  a distinction is made between extensional and intentional interpretation of interschema assertions  which leads to different translations into dfol.
interschema assertionsdfol뷋 vext 뷍i:뷋 x  뫸 j:뷍 xi뫸 뷋 1vext 뷍 뷋 1뫖ext 뷍no translation뷋 vint 뷍i:뷋 x뫸j  뫸 j:뷍 x 뷋 1vint 뷍 뷋 1뫖int 뷍no translationwhile the extensional interpretation corresponds to the semantics of mappings in ois  the intentional interpretation corresponds to the semantics of mappings in c-owl. thus using the distinction made in this approach we get an explanation of different conceptualizations underlying the semantics of c-owl and ois that use an extensional and an intentional interpretation  respectively.
1 -connections
a different approach for defining relations between dl knowledge bases has emerged from the investigation of socalled -connections between abstract description systems  kutz et al.  1 . originally intended to extend the decidability of dl models by partitioning them into a set of models that use a weaker logic  the approach has recently been proposed as a framework for defining mappings between ontologies  grau et al.  1 .
모in the -connections framework  for every pair of ontologies ij there is a set ij of links  which represents binary relations between the domain of the i-th ontology and the domain of the j-th ontology. links from i to j can be used to define i-concepts  in a way that is analogous to how roles are used to define concepts. in the following table we report the syntax and the semantics of i-concept definitions based on links.  e denotes a link from i to j and c denotes a concept in j. the only assumption about the relation between domains is global inconsistency  see above .
모in dfol we have only one single relation from i to j  while in -connection there are many possible relations. however  we can use a similar trick as used in  borgida and serafini  1  to map relations to interschema relations: each of the relations in ij acts as a rij. to represent connections it is therefore enough to label each arrow vari-
모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모모own able with the proper link name. the arrow variable x 뫸j is read as the arrow variable x뫸i where rij is intended to be the interpretation of ownij. with this syntactic extension of dfol  concept definitions based on links  denoted as e  can be codified in dfol as follows:
-connectionsdfol뷋 v  e.뷍모모모모모모모모모모모모모모모e i:뷋 x  뫸 j:뷍 xi 뫸 뷋 v  e.뷍e
i:뷋 x 뫸j  뫸 j:뷍 x 뷋 v뫟 ne.뷍i:vnk=1 뷋 x1  뫸 j:vnk1=h=1 뷍 xik e뫸  뫇 xk 1= xh뷋 v뫞 ne.뷍we see that like ois  links in the -connections framework have an extensional interpretation. the fact  that the framework distinguishes between different types of domain relations  however  makes it different from all other approaches.
모another difference to the previous approaches is that new links can be defined on the basis of existing links  similar to complex roles in dl. syntax and semantics for link constructors is defined in the usual way:   inverse    e u f i = ei 뫌 fi  conjunction    e t f i = ei 뫋 fi
 disjunction   and   e i =   i 뫄  j    ei  complement . notice that  by means of inverse links we can define mappings of the b and d type. e.g.  the -connection statement 뷋 v  e 뷍 corresponds to the dfol bridge rule 뷋 x  : i 뫸 뷍xi뫸j : which is of type b . similarly the connection 뷋 v  e 뷍 corresponds to a mapping of type d .
모as the distinctions between different types of links is only made on the model theoretic level  it is not possible to model boolean combinations of links. inverse links  however  can be represented by the following axiom:
	e	e 
i:y = x 뫸j 뫸 j:y 뫸i = x
	e 	e
j:y 뫸i = x 뫸 i:y = x 뫸j
finally the inclusion axioms between links  i.e.  axioms of the form e v f where e and f are homogeneous links  i.e.  links of the same ij  can be translated in dfol as follows:
	e	f
i:x = y 뫸j 뫸 j:xi 뫸 = y
we can say that the -connections framework significantly differs from the other approaches in terms of the possibilities to define and combine mappings of different types.
1 discussion and conclusions
the encoding of different mapping approaches in a common framework has two immediate advantages. the first one is the ability to reason across the different frameworks. this can be done on the basis of the dfol translation of the different approaches using the sound and complete calculus for dfol  ghidini and serafini  1 . as there are not always complete translations  this approach does not cover all aspects of the different approaches  but as shown above  we can capture most aspects. there are only two aspects which cannot be represented in dfol  namely  non mappings   i:뷋  뫸  j:뷍 in c-owl  뷋 1vint 뷍 etc. in dlii  and  complex mappings  such as complex links in -connection. the second benefit is the possibility to compare the expressiveness of the approaches. we have several dimensions along which the framework can differ:
arity of mapped items1 c-owl allows only to align constants  concepts and roles  1-arity relations   connections allow to align only 1-arity items  i.e.  concepts  while dlii and ois allow to integrate n-arity items.
positive/negative mappings most approaches state positive facts about mapping  e.g that two elements are equivalent. the dlii and c-owl frameworks also allow to state that two elements do not map  뷋 1뫖 뷍 .
domain relations the approaches make different assumptions about the nature of the domain. while c-owl and -connections do not assume any relation between the domains  dlii assumes overlapping domains and ois assumes local domains that are embedded in a global domain.
multiple mappings only the -connection approach supports the definition of different types of mappings between ontologies that partition the inter-domain relations.
local inconsistency some approaches provide a consistent semantics also in the case in which some of the ontologies or mappings are inconsistent.
we summarize the comparison in the following table.
int. constr.  cf. fig. 1 mapping typedomain relationaritylocal
뫐a b c d pos.neg.mult.c-owl뫄뫄뫄뫄het.1뫄ois뫄뫄뫄incl.ndlii뫄뫄뫄뫄emb.n-conn.뫄뫄뫄뫄뫄뫄뫄het.1모we conclude that existing approaches make choices along a number of dimensions. these choices are obviously influenced by the intended use. approaches intended for database integration for example will support the mapping of nary items that correspond to tuples in the relational model. despite this fact  almost no work has been done on charting the landscape of choices to be made when designing a mapping approach  and for adapting the approach to the requirements of an application. the work reported in this paper provides the basis for this kind of work by identifying the possible choices on a formal level. an important topic of future work is to identify possible combinations of features for mapping languages on a formal level in order to get a more complete picture of the design space of mapping languages.
