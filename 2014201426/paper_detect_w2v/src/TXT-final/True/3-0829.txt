
parthood  componenthood  and containment relations are commonly assumed in biomedical ontologies and terminology systems  but are not usually clearly distinguished from another. this paper contributes towards a unified theory of parthood  componenthood and containmentrelations. our goal in this is to clarify distinctions between these relations as well as principles governing their interrelations. we first develop a theory of these relations in first order predicate logic and then discuss how description logics can be used to capture some important aspects of the first order theory.
1	introduction
my car has components  for example  its engine  its oil pump  its wheels  etc.  see figure 1.  roughly  a component of an object is a proper part of that object which has a complete bona fide boundary  i.e.  boundary that correspond discontinuities in reality  and a distinct function. thus all components of my car are parts of my car  but my car has also parts that are not components. for example  the left side my car has neither a complete bona fide boundary nor a distinct function. my car is also a container. it contains the driver in the seat area and a tool box and a spare-tire in its trunk. containment is here understood as a relation which holds between disjoint material objects when one object  the containee  is located within a space partly or wholly enclosed by the container. in this paper  we study formal properties of proper parthood  componenthood  and containment relations and demonstrate how they can be representedand distinguishedfrom one other in formal ontologies expressed in languages of different expressive power.
　at first sight  these three relations seem to have quite similar properties. all three are transitive and asymmetric. the screw-driver is contained in my tool box and the tool box is contained in the trunk of my car  therefore the screw-driver is contained in the trunk of my car. and if an object  e.g.  a tool box  is contained in the trunk of my car  then the trunk of my car is not contained in that object. it is easy to see that the componenthood  see figure 1  and proper parthood relations are also asymmetric and transitive. due to their similarities these relations are not always clearly distinguished in ontologies such as  e.g.  galen  rogers and rector  1  or snomed  spackman  1 .
　however  there are important differences between these relations. there can be a container with a single containee  e.g.  the screw-driver is the only tool in my tool box  but no object can have single proper part. also the components of complex artifacts form tree-structures. thus  two components share a component only when one is a sub-component of the other.  it is because componentsform tree structures that tree graphs of component structures can be given in assembly manuals.  the parthood relation does not have this property: the left half of my car and the bottom half of my car share the bottom left part of my car but they are not proper parts of each other.
　ontologies are tools for making explicit the semantics of terminology systems  guarino  1 . in this paper we develop ontologies which explicate the distinct properties of proper parthood  componenthood and containment relations. these ontologies can be used to specify the meaning of terms such as 'proper-part-of' 'component-of' and 'contained-in'. we start by characterising important properties of binary relations and then study how these properties can be expressed both in ontological theories formulatedin first order logic and in ontologies formulated in a description logic.

engine heater	valves	oil pump	...	transmission	axle	...
figure 1: car components
1	binary relations
in this section  we define properties of binary relation structures that will be useful for distinguishing proper parthood  component-of  and containment relations.
1 r-structures
a r-structure is a pair     r   that consists of a non-empty domain   and a binary relation   1= r     〜  . we write r x y  to say that the binary relation r holds between the individuals x y （    i.e.   x y  （ r. we can define the following relations on   in terms of r:
dr=r= x y  =df r x y  or x = ydroro x y  =df  z （   : r= z x  & r= z y driri x y  =df r x y &   z （   : r x z  & r z y  for a given r-structure  the defined relations r=  ro  or ri may be empty or identical to r. for example  if r is the identity relation on    i.e.  r = { x x  | x （  }  then
r= = r = ro and ri =  .
1	properties of binary relations
an r-structure    r  may have or lack the properties listed in table 1. for example  for any   the identity relation on   is reflexive  symmetric and transitive. moreover  for any    r   ro is symmetric  ri is intransitive  and r= is reflexive. as pointed out above  on their respective domains proper parthood  componenthood  and containment are asymmetric and transitive.
propertydescriptionreflexive x （   : r x x irreflexive x （  : not r x x symmetric x y （  : if r x y  then r y x asymmetric x y （  : if r x y  then not r y x transitive x y z （  : if r x y  and r y z  then r x z intransitive x y （  : if r x y  and r y z  then not r x z up-discrete x y （  : if r x y  then ri x y  or  z （  : r x z  and ri z y dn-discrete x y （  : if r x y  then ri x y  or  z （  : ri x z  and r z y discreteup-discrete & dn-discretedense x y （  : if r x y  then
 z （  : r x z  and r z y wsp x y （  : if r x y  then
 z （  : r z y  & not ro z x npo x y （  : if ro x y  then x = y or r x y  or r y x nsip x y （  : if ri x y  then  z （  : ri z y  & not x = zsis x y z （  : if ri x y  and ri x z  then y = ztable 1: properties of binary relations
　we say    r  has the weak supplementation property  wsp  if and only if for all x y （   if r x y  then there is a z （   such that r z y  but not ro z x . as an example of a relation that has the weak supplementation property  consider the proper parthood relation on the domain  s of spatial objects    s  proper-part-of . in this structure proper-part-ofo is the overlap relation. wsp tells us that if x is a proper part of y then there exists a proper part z of y that does not overlap x. for example  since the left side of my car is a proper part of my car there is some proper part of my car  e.g.  the right side of my car  which is discrete from the left side of my car.
　another example of a structure that has the weak supplementation property is the componenthood relation on the domain of artifacts    a  component-of . here component-ofo is the relation of sharing a component. wsp tells us that if x is a component of y then there exists a component z of y such that z and x do not have a commoncomponent. for example  since the engine of my car is a component of my car there is some component of my car  e.g.  the body of my car  which does not have a componentin common with the engine.  see figure 1. 
 c1
figure 1: nested containers
　consider the structure   c  contained-in  with  c = {c1 c1 c1 c1 b1 b1} as depicted in figure 1. the block b1 is immediately contained in the container c1 which in turn is immediately contained in the container c1. b1 is contained  but not immediately contained  in c1. note that contained-in does not have the weak-supplementation property: b1 is the only entity contained in c1. thus  every entity contained in c1 stands in the contained-ino relation to b1.
　we say  r    has the no-partial-overlap property  npo  if and only if for all x y （  : if ro x y  then x = y or r x y  or r y x . the structure   a  component-of  has the npo property. as a representative example consider the substructure of   a  component-of  depicted in figure 1: two distinct car components share a component only if one is a subcomponent of the other.
　the structure   s  proper-part-of   on the other hand  does not have the no-partial-overlap property. as pointed out earlier  the left half of my car and the lower half of my car overlap partially. note also that containment structures  domains with a containmentrelation  often do not have the npo property: consider the tool box in the trunk of my car. it is also contained in my car. my car and the trunk of my car share a containee  the tool box   i.e.  contained-ino holds  but my car is not contained in the trunk of my car nor is the trunk contained in the car.
　containment structures are discrete. for example   c  contained-in  is up- and dn-discrete: if x is contained in y then either x is an immediately contained in y or  a  there exists a z such that x is an immediately contained in z and z is contained in y   and  b  there exists a z such that x is contained in z and z is immediately contained in y. similarly  the structure   a  component-of  is discrete. if x is a component of y then either x is a immediate component of y or  a  there exists a z such that x is a immediate component of z and z is a component of y   and  b  there exists a z such that x is a component z and z is an immediate component of y. again  figure 1 is a representative example.
　the structure   s  proper-part-of   is dense due to the existence of fiat parts  parts which lack a complete bona fide boundary   smith  1 . consider my car and its proper parts. my car does not have an immediate proper part - whatever proper part x we chose  there exists another slightly bigger proper part of my car that has x as a proper part.
　 r    has the single-immediate-successor property  sis  if and only if no x （   can stand in the ri relation to two distinct members of  . again  a representativeexample is the component-of structure depicted in figure 1. in the structure   s  proper-part-of  sis trivially holds since this structure has the density property and no immediate proper parts exist. but note that containment structures often do not have the sis property: consider again the tool box in the trunk of my car. it is also contained in my car. my car and the trunk of my car are distinct immediate containers for my tool box.
　 r    has the no-single-immediate-predecessor property  nsip  if and only if for all x y （  : if ri x y  then there exists a z （   such that ri z y  and not x = z. again  the componenthood structure depicted in figure 1 is a representative example for a structure that has the nsip property. again  in the structure   s  proper-part-of  nsip is trivially true since no immediate proper parts exist. but containment structures like   c  contained-in  lack the nsip property.
　given the properties in table 1 we can classify rstructures according to the properties of the relation r. in table 1 we list classes of r-structures that will be useful for modelling proper parthood  componenthood and containment relations.
r-structurepropertiespartial ordering  po asymmetric  transitivediscrete popo + discreteparthood structurepo + wsp + densecomponent-of structurepo + wsp  npo  discretetable 1: classes of r-structures
　finally  note the following facts about r structures:  f1  if    r  has the no-partial-overlap property then it has the single-immediate-successor property;  f1  if    r  is finite and has the single-immediate-successor property then it has the no-partial-overlap property;  f1  if    r  is up-discrete and has also the no-partial-overlap property  then    r  has the weak-supplementation property if and only if it has the no-single-immediate-predecessor property;  f1  if    r  is reflexive  then ri =  .
1	parthood-containment-component structures
the relations that we are interested in do not exist in separation but form complex structures involving more than one relation. the structure    pp cntin cmpof  is a parthood-containment-component structure if and only if:  i  the substructure    pp  is a parthood structure;  ii     cntin  is a discrete partial ordering;  iii     cmpof  is a component-of structure; and addition the following conditions hold:
 iv  if cntin x y  and pp y z  then cntin x z ;
 v  if pp x y  and cntin y z  then cntin x z ;
 vi  if cmpof x y  then pp x y ;
as an example of a parthood-containment-component structure consider the set   formed by all parts of my car and everything that is contained in my car. the substructure    cmpof  is depicted partly in figure 1.
　 iv  ensures that parts are contained in the container of the whole  e.g.  my head is part of my body and my body is contained in my car  so my head must also be containedin my car.  v  ensures that if a part of some whole contains something then so does the whole  e.g.  since my tool box is contained in the trunk of my car and the trunk is part of my car  my tool box is also contained in my car.  vi  tells us that componenthood is a special case of parthood  e.g.  since the engine is a component of my car  it is also a proper part of my car.
1 a formal ontology of parthood  containment  and componenthood
the formal theory developed in this section is presented in standard first-order predicate logic with identity. we use x y  and z for variables. leading universal quantifiers are generally omitted. names of axioms begin with the capital letter 'a'  names of definitions begin with the capital letter 'd'  and names of theorems begin with the capital letter 't'.
　we include the primitive relation symbols pp  cntin  and cmpof in the language of our theory. the intended interpretations are the relations pp  cntin  and cmpof respectively of parthood-containment-component structures.
1	axioms for pp
we introduce the symbols pp=  ppo  and define that pp= xy holds if and only if either pp xy or x and y are identical  dpp= ; ppo xy holds iff x and y share a common part or are identical  dppo .
dpp= pp= xy 《 pp xy ‥ x = y
	dppo	ppo xy 《   z  pp= zx … pp= zy 
we then include the axioms of asymmetry and transitivity  app1-app1  as well as an axiom  app1  that ensures that interpretationsof pp have the weak supplementationproperty  wsp .
app1 pp xy ★  pp yx
app1  pp xy … pp yz  ★ pp xz
app1 pp xy ★   z  pp zy …  ppo zx 	 wsp 
the theory that includes app1 as axioms is known as basic mereology  simons  1 . finally we add a density axiom to include fiat parts into our domain  app1 .
app1 pp xy ★   z  pp xz … pp zy 
models the the theory that includes app1 as axioms are parthood structures as defined in table 1.
1	axioms for cmpof
we introduce the symbols cmpof= and cmpofo and add the respective definitions  dcmpof= and dcmpofo .
dcmpof= cmpof= xy 《 cmpof xy ‥ x = y
dcmpofo	cmpofo xy 《   z  cmpof= zx … cmpof= zy  we then include an axiom of transitivity  acp1 .
acp1  cmpof xy … cmpof yz  ★ cmpof xz
corresponding to  vi  we add an axiom that ensures that cmpof xy implies pp xy  acp1  and can then prove that cmpof is asymmetric  tcp1 .
acp1 cmpof xy ★ pp xy
tcp1 cmpof xy ★  cmpof yx
　we introduce the symbol cmpofi and define cmpofi xy to hold iff cmpofi xy and there is no z such that cmpofi xz and cmpofi zy  dcmpofi . we then add an axiom that enforces that interpretations of cmpof have the discreteness property  acp1 .
dcmpoficmpofi xy 《 cmpof xy …
   z  cmpof xz … cmpof zy acp1cmpof xy ★  cmpofi xy ‥
   z  cmpofi xz … cmpof zy 
…   z  cmpof xz … cmpofi zy   from dcmpofi we can prove immediately that cmpofi is intransitive  tcp1 .
tcp1 cmpofi xy … cmpofi yz ★  cmpofi xz
we then add axioms that require that cmpof has the nopartial-overlap property  acp1  and that cmpof has the nosingle-immediate-predecessor property  acp1 .
acp1 cmpofoxy ★  cmpof= xy ‥ cmpof zx 
acp1 cmpofi xy ★   z  cmpofi zy …  z = x 
we now can prove that the the weak-supplementation principle holds  tcp1  and that nothing has two distinct immediate successors  tcp1 .
tcp1 cmpof xy ★   z  cmpof zy …  cmpofo zx  tcp1 cmpofi xz1 … cmpofi xz1 ★ z1 = z1
1	axioms for cntin
we introduce the symbols cntin=  cntino  and cntini and add the respective definitions  dcntin=  dcntino  and dcntini .
dcntin= cntin= xy 《 cntin xy ‥ x = y
	dcntino	cntino xy 《   z  cntin= zx … cntin= zy 
	dcntini	cntini xy 《 cntin xy …
   z  cntin xz … cntin zy 
we then include axioms of asymmetry  transitivity  and discreteness  act1 .
act1 cntin xy ★  cntin yx
act1  cntin xy … cntin yz  ★ cntin xz
act1 cntin xy ★  cntini xy ‥
   z  cntini xz … cntin zy 
…   z  cntin xz … cntini zy   
we add axioms  corresponding to  iv  and  v   parts are contained in the container of the whole  act1  and that if a part contains something then so does the whole  act1 .
	act1	pp xy … cntin yz ★ cntin xz
	act1	cntin xy … pp yz ★ cntin xz
we call the theory consisting of the axioms app1  acp1 and act1 fo-pcc. parthood-composition-containment structures are models of this theory.
1	representation in a description logic
description logics  dls  are a family of logical formalisms which are significantly less powerful than first order logic but which are  relatively  easily implemented on the computer  baader et al.  1 . the task of this section is to investigate to what extent and how fo-pcc can be approximated by a theory expressed in a description logic. for this task  we consider dls with different expressive capabilities  some of which are better suited than others for formulating properties of parthood  componenthood and containment relations. notice  that it is not the purpose of this paper to provide a complexity analysis for these dls.
1	the syntax and semantics of description logics
basic expressions in description logics are concept and role descriptions. concepts are interpreted as sets. roles are interpreted as binary relations. general rules for forming concept and role descriptions  based on  baader et al.  1   are given below. note  however  that specific dls typically allow for the formulation of some  but not all  of the complex concept and role descriptions listed.
　every concept name is a concept description  atomic concept     is the top-concept. 〕 is the bottom-concept. if c and d are concept descriptions then c u d  concept-intersection   c t d  concept-union   ゛ c  concept-complement  are also concept descriptions. every role name  r  is a role description  an atomic role . if s and t are role descriptions  then s u t  role-intersection   s t t  role-union   ゛ s  rolecomplement   s t  role-composition  and r   role-inverse  are also role descriptions. id is the name of the identity role. if c is a concept description and r is a role name then   r.c     r.c   and  = 1r  are concept descriptions. the semantics of the various constructors is given in table 1.
a terminology is a set of terminological axioms of the form
	.	.
c = d and s = t  called equalities  or c v d and s v t
 called inclusions   where c and d are concept descriptions and s and t are role descriptions. an interpretationi satisfies an inclusion c v d iff ci   di and s v t iff si   ti.
.
 see  baader et al.  1 .  it satisfies an equality c = d iff
i	i	.	i	i
c = d	and s = t iff s = t .
 ia   b 	 i =   〕i =  ;
 iia   c 	 c u d i = ci ” di  c t d i = ci “ di 
 ゛ c i =     ci;
 iii    r.c i = {a （   |   b   a b  （ ri … b （ ci }
 iv    r.c i = {a （   |  b   a b  （ ri ★ b （ ci }
 v   = 1r i = {a （   | |{b |  a b  （ ri}| = 1}
 via   c 	 s u t i = si ” ti  s t t i = si “ ti 
 ゛ s i =   〜     si;
 vii   s   t i = { a c  （   〜   |
  b   a b  （ si …  b c  （ ti }
 viii  idi = { a a  | a （  }
 ix   r  i = { b a  （   〜   |  a b  （ ri}
table 1: concept and role constructors with their semantics. i is the interpretation function and   is the domain of individuals.
1	stating ontological principles
let lwsp be a language that includes at least the constructors  ia  iia  iii  via-c  vii  viii  ix  table 1  . in this language we can state a dl-version of fo-pcc. in particular  if r is the name of a relation r then we are able to state in this language that r has the wsp property we are able to define the relation ri in terms of r  and we are able to state that r is a discrete  or dense  relation:
 wsp 
 def-i r  v r   ゛   r  t id     r t id  
.
ri =r u ゛  r   r  discrete r v ri t  r   ri u ri   r  dense r v r   rbut since lwsp is undecidable  schmidt-schau   1   it is importantto identifyless complexsub-languagesof lwsp that are still sufficient to state axioms distinguishing parthood  componenthood  and containment relations. otherwise the dl version of fo-pcc would have no computational advantages over the first order theory.
　let l be the dl which includes only the constructors  ia-b  iia  iii  vii  ix  and v  table 1   and in which the role composition operator  vii  only occurs in acyclic role terminologies
with inclusion axioms of the form r   r v r  s   r v r  and r s v r. unlike lwsp the dl l is decidable  horrocks and
sattler  1 .
　if r is the name of the relation r then we are able to state in l that r is transitive  r   r v r . moreover  in l we can very naturally represent dl-versionsof the axioms acp1 and act1. unfortunately  in l we are not able to state either that r asymmetric  that r has the wsp property  or that r has the npo property. also we cannot state a dl-version of the definition of ri in terms of r  as in def-i .
　let ri be an undefined relation name interpreted as ri in the r-structure    r   e.g.  as contained-ini in a containment structure . in l we are able to use this additional primitive to say that r has the no-single-immediate-predecessor property nsip  and the single-immediate-successorproperty  sis .
	 sis 	 ri.  v  = 1 ri. 
	 nsip 	
notice however that  since we introduced ri as an undefined relation name we do not know that the interpretation of ri is an intransitive subrelation of r unless additional axioms are included in the theory. in l we can state that ri is a subrelation of r but we cannot not say that ri is intransitive. notice also  that in l  we cannot say that r is irreflexive  r   id v 〕  since l does not include a constructor for the identity relation.
　let l゛idt be the dl obtained by extending l with the identity relation  viii   negation restricted to relation names  a restricted version of vic   and role union  vib . in this dl we can say that ri is intransitive  that r is asymmetric  and that r has the npo property.
 intrans ri   ri v  ゛ ri  asym r  v  ゛ r  npo  r    r  v r t id t r unfortunately  including role negation into a dl-language significantly increases the complexity of the underlying reasoning  lutz and sattler  1 . though l゛idt is less expressive than lwsp  we cannot state wsp or discreteness axioms or define ri  it is an open question whether l゛idt is decidable.  it is known though that alc-dls that include axioms of the form r   s v t1 t ... t tn are undecidable
 wessel  1 . 
1 describing parthood-composition-containment structures in l
we chose l as the dl to formulate an approximation of fopcc because l is decidable and does include the composition operator which is important for expressing interrelations between relation and for reasoning  particularly in biomedical ontologies   spackman  1; rogers and rector  1; horrocks and sattler  1 .
　we add the symbols cp  pp and ct as well as cpi  ppi and cti to l. the intended interpretations of these symbols are the relations cmpof  pp  cntin  cmpofi  ppi  and cntini of parthood-composition-containment structures. we then include the following axioms for cp and pp: component-of proper-part-of

	 a1  cpi v cp	 a1  ppi v pp
	 a1  cp   cp v cp	 a1  pp   pp v pp
	  v 〕	 a1 	 = 1 pp i .  v 〕
	 a1 	 cpi.  v  = 1 cpi. 	 
for ct we include a subrelation axiom and a transitivity axiom:
	a1 cti v ct	a1 ct   ct v ct
we include also axioms a1 corresponding to  iv-vi  in section 1.
a1 cp v pp a1 pp   ct v ct a1 ct   pp v ct
we call the theory formedby a1 dl-pcc. the sub-theory formed by a1 is similar to the theories proposed in  sattler  1  and  lambrix and padgham  1 .
　but  as discussed in the previous subsection  we are not able to add to dl-pcc the following axioms and definitions that are needed to constrain the models to parthoodcomposition-containment structures:  1  we are not able to state that cp  pp  and ct are asymmetric and irreflexive;  1  we are not able to state a discreteness axiom for cp or ct or a density axiom for pp;  1  we are not able to define cpi 
ppi  and cti in terms of cp  pp  and ct respectively;  1  we are not able to state the weak supplementation principle  wsp  for interpretations of pp.
　consider  1 . since dl-pcc lacks asymmetry axioms it admits models in which cp  pp  and ct are interpreted as reflexive relations. in those models cpi  ppi  and cti are all interpreted as the empty relation  making the axioms a1  a1  and a1 trivially true .  see also f1 in section 1.  for example the structure   c  identical-to  is a model of dlpcc  but not of fo-pcc  if we interpret cp  pp  and ct as identical-to and cpi  ppi  and cti as  . clearly  this model is not a parthood-component-containment structure.
　consider  1 . we included cpi  ppi  and cti as undefined primitives in dl-pcc and added axioms  a1  a1  and a1  that require their interpretations to be sub-relations of the interpretations of cp  pp  and ct. unfortunately  dlpcc admits models in which ppi and pp are the same relation  similarly for cp and cpi or ct and cti . consider figure 1 and interpret cp and cpi as the relation icr = { c1 c1   c1 c1 }  immediately-contained-in-theroot-container   and pp  ppi  ct  cti all as contained-in. then   c  contained-in  icr  is a model of dl-pcc  but not of fo-pcc . this particular kind of unintended interpretations of ppi and cti can be avoided by requiring that the interpretation of these relations are intransitive. however in l we are not able to require that a given relation is intransitive.
　consider  1 . the closest we can get to requiring that the interpretation of pp has the wsp property is to require that the nsip property holds  axiom 1 . however the nsip property is strictly weaker than the wsp property.1 consequently  dl-pcc admits models that would have been rejected by a theory including an axiom that requires wsp for interpretations of pp  e.g. fo-pcc . similar comments apply to  1 .
　these are strong limitations if the purpose of the presented theory is to serve as an ontology that specifies the meaning of the terms 'proper part of'  'component of' and 'contained in' rather than to support automatic reasoning in some specific and possibly finite domain.1 if the dl l゛idt is decidable we can get a better dl approximation of fo-pcc that is computationally tractable. but even a l゛idt version of fo-pcc will fall short of fo-pcc in expressivity since we cannot state wsp for pp.
1	conclusions
we studied formal properties of parthood  componenthood and containment relations. since it is the purpose of an ontology to make explicit the semantics of terminology systems  it is important to explicitly distinguish relations such as proper parthood  componenthood  and containment. we demonstrated that first order logic has the expressive power requiredto distinguish important properties of these relations. in description logics like l several important properties of these relations cannot be specified.
　dls are best used as reasoning tools for specific tasks in specific domains  as suggested in  sattler  1; 1; lambrix and padgham  1  . dls are not appropriate for formulating complex interrelations between relations. thus we need to understand a computational ontology as consisting of two complementarycomponents:  1  a dl based ontology that enables automatic reasoning and constrains meaning as much as possible and  1  a first order ontology that serves as meta-data and makes explicit properties of relations that cannot be expressed in computationally efficient description logics. the first order theory then can be used by a human being to decide whether or not the dl-ontology in question is applicable to her domain. moreover  meta-data can also be used to write special-purpose programs that phrase knowledge bases and enforce the usage of relations in accordance to the meta-data.
