
the mobile robotics community has traditionally addressed motion planning and navigation in terms of steering decisions. however  selecting the best speed is also important - beyond its relationship to stopping distance and lateral maneuverability. consider a high-speed  1 mph  autonomous vehicle driving off-road through challenging desert terrain. the vehicle should drive slowly on terrain that poses substantial risk. however  it should not dawdle on safe terrain. in this paper we address one aspect of risk - shock to the vehicle. we present an algorithm for trading-off shock and speed in realtime and without human intervention. the trade-off is optimized using supervised learning to match human driving. the learning process is essential due to the discontinuous and spatially correlated nature of the control problem - classical techniques do not directly apply. we evaluate performance over hundreds of miles of autonomous driving  including performance during the 1 darpa grand challenge. this approach was the deciding factor in our vehicle's speed for nearly 1% of the darpa competition - more than any other constraint except the darpa-imposed speed limits - and resulted in the fastest finishing time.
1 introduction
in mobile robotics  motion planning and navigation have traditionally focused on steering decisions. this paper presents speed decisions as another crucial part of planning - beyond the relationship of speed to obstacle avoidance concerns  such as stopping distance and lateral maneuverability. consider a high-speed  1 mph  autonomous vehicle driving off-road through challenging desert terrain. we want the vehicle to drive slower on more dangerous terrain. however  we also want to minimize completion time. thus  the robot must trade-off speed and risk in real-time. this is a natural process for human drivers  but it is not at all trivial to endow a robot with this ability.
모we address this trade-off for one component of risk: the shock the vehicle experiences. minimizing shock is important for several reasons. first  shock increases the risk of damage to the vehicle  its mechanical actuators  and its electronic components. second  a key perceptive technology  laser range scanning  relies on accurate estimation of orientation. shock causes the vehicle to shake violently  making accurate estimates difficult. third  shocks substantially reduce traction during oscillations. finally  we demonstratethat shock is strongly correlated with speed and  independently  with subjectively difficult terrain. that is  minimizing shock implies slowing on challenging roads when necessary - a crucial behavior to mitigate risk to the vehicle.
모our algorithm uses the linear relationship between shock and speed which we derive analytically. the algorithm has three states. first  the vehicle drives at the maximum allowed speed until a shock threshold is exceeded. second  the vehicle slows immediately to bring itself within the shock threshold using the relationship between speed and shock. finally  the vehicle gradually accelerates. it returns to the first state  or the second if the threshold is exceeded during acceleration.
모to maximize safety  the vehicle must react to shock by slowing down immediately  resulting in a discontinuous speed command. further  it should accelerate cautiously  because rough terrain tends to be clustered  a property we demonstrate experimentally. for these reasons  it is not possible to determine the optimal parameters using classical control techniques. the selection of parameters cannot be tuned by any physical model of the system  as the performance is best measured statistically by driving experience.
모therefore  we generate the actual parameters for this algorithm - the shock threshold and acceleration rate - using supervised learning. the algorithm generates a reasonable match to the human teacher. of course  humans are proactive  also using perception to make speed decisions. we use inertial-only cues because it is very difficult to assess terrain roughness with perceptive sensors. the accuracy required exceeds that for obstacle avoidance by a substantial margin because roughpatches are often just a few centimeters in height. still  experimental results indicate our reactive approach is very effective in practice.
모our algorithm is part of the software suite developed for stanley  an autonomous vehicle entered by stanford university in the 1 darpa grand challenge  darpa  1 . stanley is shown in figure 1. the grand challenge was a robot race organized by the u.s. government. in 1  vehicles had to navigate 1 miles of unrehearsed desert ter-

figure 1: stanley won the 1 darpa grand challenge by completing a 1 mile desert route in just under 1 hours. the algorithm described in this paper was the deciding factor in stanley's speed for nearly 1% of the race - more than any other constraint except the darpa-imposed speed limits.
rain. the algorithm described here played an important role in that event. specifically  it was the deciding factor in our robot's speed for nearly 1% of the competition - more than any other constraint except the darpa imposed speed limit. it resulted in the fastest finishing time of any robot.
1 related work
there has been extensive work on terramechanics  bekker  1; 1; wong  1   the guidance of autonomous vehicles through rough terrain. that work generally falls into two categories. one focuses on high-speed navigation. however  it requires that terrain maps and topology be known beforehand  shimoda et al.  1; spenko et al.  1 . the other analyzes terrain ruggedness in an online fashion by driving over it  sadhukhanet al.  1; brooks and iagnemma  1; iagnemma et al.  1 . however  vehicle speed is very slow  less than 1 mph. further  classification focused on terrain type  not roughness. our work combines the strengths of both categories: online terrain roughness assessment and high-speed navigation.
모successful obstacle detection systems have been built for high-speed autonomous driving  thrun et al.  1b; 1a; urmson et al.  1; 1; kelly and stentz  1 . however  as we mentioned in section 1  the precision needed for determining terrain ruggedness exceeds that required for obstacle avoidance by a substantial margin. thus  while these systems are excellent at detecting and avoiding static obstacles  they do not protect the vehicle from the effects of road roughness.
모some work has explicitly considered speed as important for path planning. for example   fox et al.  1  presents a method for trading off  progress  and  velocity  with regard to the number and type of obstacles present. that is  slower speeds are desirable in more cluttered environments. faster speeds are better for open spaces. this concept  applied to desert driving  is analogous to slowing for turns in the road and for discrete obstacles. our vehicle exhibits those behaviors as well. however  they are separate from the algorithm we describe in this paper.
모other entrants in the 1 darpa grand challenge realized the importance of adapting speed to rough terrain.

figure 1: we find empirically that the relationship between perceived vertical acceleration amplitude and vehicle speed overa static obstacle can be approximatedby a linear function in the operational region of interest.
for example  two teams from carnegie mellon university  cmu  used  preplanning  for speed selection  gutierrez et al.  1; urmson et al.  1; 1; nova  1 . for months  members of the cmu teams collected extensive environment data in the general area where the competition was thought to be held. once the precise route was revealed by darpa  two hours before the race  the team preprogrammed speeds according to the previously collected data. the endresult of the cmu approach is similar to ours. however  our fully-online method requires neither human intervention nor prior knowledge of the terrain. the latter distinction is particularly important since desert terrain readily changes over time due to many factors  including weather.
1 speed selection algorithm
our algorithm is derived in three steps. first  we derive the linear relationship between speed and shock. second  we leverage this relationship to build an algorithm for determining an appropriate speed. finally  we tune the parameters of the algorithm using supervised learning.
1 z acceleration mapping and filtering
the mapping between vehicle speed and shock experienced is fundamental to our technique. here  shock is measured by the amplitude of acceleration in the vertical  z-direction  of the vehicle's main body. the vehicle's speed is v and position along the path is p. the ground varies in height  zg p   pushing stiffly on the car's tires. the ground is modeled to be the sum of sinusoids of a large number of unknown spatial frequencies and amplitudes. consider one component of this summation  with a spatial frequency of 뷎s  and an amplitude az g 뷎s. due to motion of the vehicle  the frequency in time of zg 뷎s is 뷎 = v뷎s. by taking two derivatives  the acceleration  z몮g 뷎s  has an amplitude of v1뷎s1az g 뷎s and a frequency of v뷎s. this is the acceleration input to the vehicle's tire.

figure 1: filtered vs. unfiltered imu data. the 1-tap fir band pass filter extracts the excitation of the suspension system  in the 1 to 1 hz band. this removes the offset of gravity  as terrain slope varies  and higher frequency noise  such as engine system vibration  that is unrelated to oscillations in the vehicle's suspension.
모to model the response of the suspension system  we use the quarter car model  gillespie  1 . the tire is modeled as a connection between the axle and the road with a spring with stiffness kt  and the suspension system is modeled as a connection between the axle and the vehicle's main body  using a spring with stiffness ks and a damperwith coefficient cs. using this model  the amplitude of acceleration of the main body of the vehicle can be easily approximated  by assuming infinitely stiff tires  to be

where m is the mass of one quarter of the vehicle  and the magnitude of the acceleration input to the tire is taken to be v1뷎s1az g 뷎s  as described above. the resonant frequency of a standard automobile is around 1 to 1 hz. below this frequency  the amplitude increases from zero at 1 hz  slowly  but exponentially  with frequency. above this frequency  the amplitudeincreases linearly  approaching. modern active damping systems further quench the effect of the resonant frequency  leading to a curve that is nearly linear in frequency throughout  to within the noise of the sensors  which also measure the effect of random forcing disturbances.
모the frequency  뷎  is directly proportional to speed v  so the amplitude of acceleration response of the vehicle is also approximately a linear function of the velocity. now  by superposition  considering the sum of the responses for all components of the terrain profile at all spatial frequencies  the amplitude of the acceleration response of the vehicle  az몮  is the sum of many approximately linear functions in v  and hence is approximately linear in v itself. this theoretical analysis can also be verified experimentally as in figure 1.
모this approximation assumed infinitely stiff tires. in reality  the finite stiffness of tires leads to a higher frequency resonance in the suspension system around 1 to 1 hz  followed by an exponential drop off in az몮  to zero.
모although the acceleration is approximately a linear function of v  a barrier to the use of pure z-accelerometer inertial measurement unit  imu  data is that acceleration can reflect other inputs than road roughness. first  the projection of the gravity vector onto the z-axis  which changes with the pitch of the road  causes a large  low frequency offset. second  the driveline and non-uniformities in the wheels cause higher frequency vibrations.
모to remove these effects  we pass the imu data through a 1-tap  fir band pass filter to extract the excitation of the suspension system  in the 1 to 1 hz band. this band was found  experimentally  to both reject the offset of gravity and eliminate vibrations unrelatedto the suspension system  without eliminating the vibration response of the suspension.
모a comparison of the raw and filtered data is shown in figure 1. the mean of the raw data  acquired on terrain with no slope  is about 1g  whereas the mean of the filtered data is about 1g. therefore  solely for presentation in this figure  1g was subtracted from the raw data.
1 generating speed recommendations
our speed selection algorithm  the velocity controller  has three states. each road is assumed to have a speed limit  붺  in mph  that represents the upper bound on vehicle speed along that road. first  the vehicle travels at the speed limit until a road event generates a shock that exceeds an acceptable threshold  붸  in gs . second  it reduces speed such that the event would have been less than 붸. finally  it accelerates  at rate 붹  in mph/s  back to the speed limit.
모more formally  recall that  for a given rough segment of road  the shock experienced by the vehicle is linear with respect to speed. every dt seconds  the vehicle takes a reading at its current location p along the route. filtered shock z몮p and speed vp are observed. the optimal speed at p should have been
		 1 
that is  vp  is the velocity that would have delivered the maximum acceptable shock  붸  to the vehicle.
모our instant recommendation for vehicle speed is vp . notice that the vehicle is slowing reactively. reactive behavior has no effect if shock is instant  random  and not clustered. that is  our approach relies on one shock event  announcing  the arrival of another  momentarily. experimental results on hundreds of miles of desert indicate this is an effective strategy.
모we consider an observation. the algorithm incorporates these observations over time  generating the actual recommended speed :
		 1 
for our purposes  we also clamp vpr such that it is never less than 1 mph. we call the vpr series a velocity plan.

figure 1: the results of coordinate descent machine learning are shown. the learning generated the race parameters of .1 gs and 1 mph/s  a goodmatch to humandriving. note that the human often drives under the speed limit. this suggests the importance of our algorithm for desert driving.
1 supervised machine learning
we use supervised machine learning to select 붸 and 붹. some might argue we should select these parameters using explicit hardware lifetime calculations rather than matching a human teacher. however  an autonomous vehicle has hundreds of components. analyzing the effect of shock on each would require a great deal of time. it would also be costly - each component would have to break before we could determine its limit. we believe that matching a human's speed provides a useful and more efficient bound on acceptable shock.
모the velocity plan generated by a specific parameterization is scored against a human driver's velocity decisions at all p. the parameters are then iteratively modified according to a scoring function and coordinate descent.
모let vph be the speed of the human driver at position p. the objective/scoring function we wish to minimize is
		 1 
whereotherwise. the 뷍 term penalizes speeding relative to the human driver. the value 1 was selected arbitrarily. the 붸붹 1 term penalizes parameterizations that tolerate a great deal of shock or accelerate too slowly.
모for this experiment  a human driver drove 1 miles of the previous year's  1  grand challenge route. the vehicle's state vector was estimated by an unscented kalman filter  ukf   julier and uhlmann  1 . the ukf combined measurements from a novatel gps with omnistar differential corrections  a gps compass  the imu  and wheel speed encoders. the gps devices produced data at 1hz. all other devices and the ukf itself produced data at 1hz. all data is logged with millisecond accurate timestamps.
모we do not model driver reaction time  and we correct for the delay due to imu filtering. thus  in this data  driver velocity at position p is the vehicle's recorded velocity at position p  according to the ukf. the algorithm's velocity at position p is the decision of the velocity controller considering all data up to and including the imu and ukf data points logged at position p.
모the parameterization learned was  붸  붹  =  .1 gs  .1 mph/s . this is illustrated in figure 1. the top and bottom halves of the figure show the training and test sets  respectively. the horizontal axis is position along the 1 grand challenge route in miles. the vertical axis is speed in mph. for practical reasons we rounded these parameters to .1 and 1  respectively  which are essentially identical in terms of vehicle performance. the robot used these parameters during the grand challenge event and they are evaluated extensively in future sections.
모we notice a reasonable match to human driving. without the penalty for speeding  a closer match is possible. however  that parameterization causes the vehicle to drive too aggressively. this is  no doubt  because a human driver also uses perceptual cues to determine speed.
모notice that the speed limits are often much greater than the safe speed the human  and the algorithm  selects. this demonstrates the importance of our technique over blindly following the provided speed limits. notice also  however  both the human and the algorithm at times exceed the speed limit. this is not allowed on the actual robot or in the experiments in section 1. however we permit it here to simplify the scoring function  the learning process  and the idea of matching a human driver's speed.
1 experimental results
1 qualitative analysis
in our first experiment  we evaluate the algorithm on sections of off-road driving that we identify  qualitatively  as particularly easy and  alternatively  as challenging. the purpose of this experiment is to spot-check performance. we seek to verify that our algorithm  as tuned by the learning  does not drive too slowly on easy terrain or too fast on difficult terrain. we select two seven mile stretches from the 1 grand challenge route. the first stretch includes miles 1. this is very easy terrain consisting of wide dirt roads and dry lakes. the second includes miles 1. this terrain is very challenging: a narrow mountain road with a 1 ft drop on one side. both sections were graded  smoothed with a large plow  not long before the grand challenge event. based on video collected by the vehicle and by darpa  the mountain road is clearly much more challenging to drive. however  neither has obviously greater potential for vertical shock.
모figure 1 presents results from the first seven miles of the course - the easy example. in the figure  points represent a single shock event along the route. the vertical axis plots shock the vehicle experiences while driving the route with the velocity controller. the horizontal axis plots shock experienced driving the speed limits alone. we notice two things. first  shock above our .1g threshold is very rare. this reflects on the particularly straightforward driving conditions.
figure 1: each point indicates a specific shock event with both the velocity controller  vertical axis  versus speed limits alone  horizontal axis . there are very few high shock events on this easy terrain. the velocity controller does not reduce shock or speed much.
second  we notice that the shock experienced with the speed limits alone is  for all events  roughly the same as that experienced with the velocity controller. thus  because shock is linear with speed  the velocity controller did not significantly reduce speed on this easy terrain. this supports the idea that the algorithm  with the learned parameters  does not cause the vehicle to drive too slowly on easy terrain. figure 1 is the same type of plot  with the same axis ranges  as figure 1. however  here  we plot data from the more difficult segment  miles 1. in this terrain  poor perceptive sensing or loss of traction - both due to excessive shock - could result in total vehicle loss. the velocity controller is very active  lowering vehicle speed. the lower speed results in reduced shock  better traction  and generally more favorable conditions for successful navigation of this challenging terrain.
1 quantitative analysis
experimental setup
having verified the basic function of the algorithm  we now proceed to analyze its performance over long stretches of driving. for long stretches  it becomes intractable to compare algorithm performance to human decisions  as in section 1  or relative to qualitatively assessed terrain conditions  as in section 1 . therefore  we must consider other metrics. over long stretches of driving  we use the aggregate reduction of large shocks to measure algorithm effectiveness.
모however  to evaluate the reduction of large shocks  we cannot simply sum the amount of shock. extreme shock is rare. less than .1% of all readings  1 grand challenge  speed limits alone  are above our maximum acceptable shock  붸  threshold. thus  the aggregate effect of frequent  small shock could mask the algorithm's performance on rare  large shock. to avoid this problem  we take the 1th power   l1 metric   of a shock before adding it to the sum. this accentuates large shocks and diminishes small ones in the aggregate score.
figure 1: each point indicates a specific shock event with both the velocity controller  vertical axis  versus speed limits alone  horizontal axis . there are many high shock events on this difficult terrain. the velocity controller reduces shock and speed a great deal.
모whenever the vehicle travels along a road - regardless of whether under human or autonomous control - it can map the road for velocity control experiments. each raw imu reading is logged along with the vehicle's velocity and position according to the ukf. then  offline  each imu reading can be filtered and divided by the vehicle's speed. this generates a sequence of position tagged road roughness values in the units gs-felt-per-mile-per-hour. we use these sequences in this section to evaluate the velocity controller.
모we calculate completion time by summing the time spent traversing each route segment  ie: from pi to pi+1  according to the average speed driven during that segment. 1/dt is 1hz. because the velocity controller may change speed instantly at each pi  we track the velocities it outputs - for these simulations only - with a simple controller. it restricts the maximum amount of change in velocity between successive pi's  approximating vehicle capabilities. the limits are .1 mph for increases and .1 mph for decreases. we use the controller output for completion time and shock calculations.
time vs. shock for four desert routes
we consider the trade-off of shock versus completion time on four desert routes. see figure 1. the horizontal axis plots completion time. the vertical axis plots shock felt. both are for the algorithm normalized against speed limits alone. each of the four curves represents a different desert route: the 1 grand challenge route  the 1 grand challenge route  and two routes outside of phoenix  arizona  usa that we created for testing purposes. individual points on the curves depict the completion time versus shock trade-off for a particular set of  붸  붹  values. for these curves  붸 is fixed and 붹 is varied. the asterisk on each curve indicates the trade-off generated by the parameters selected in section 1. the fifth asterisk  at the top-left  indicates what happens with speed limits alone. we notice that  for all routes  completion time is increased between 1% and 1% over the baseline. however 


figure 1: here we show where the algorithm reduced speed during the 1 grand challenge event. the velocity controller modified speed during 1% of the race. height of the ellipses shown at the top is proportionalto the maximumspeed reduction for each 1th mile segment. numbers represent mile markers. simulated terrain at the bottom approximates route elevation.figure 1: here we plot the trade-off of completion time and shock on four desert routes. 붸 is constant  .1  and 붹 is varied along each curve. with the single set of parameters learned in section 1  the algorithm reduces shock by 1% to 1% while increasing completion time by 1% to 1%.
shock is reduced by 1% to 1% compared to the baseline  a substantial savings.
모it appears that the algorithm is most effective along the 1 grand challenge route. there are two reasons for this. first  we prepared for the 1 event along the 1 course. therefore  our algorithm is especially optimized for that route. however  the effect is mostly due to a different phenomenon.
모the 1 course had sections that were in extremely bad condition when this data was collected  june 1 . such extreme off-road driving was not seen on the other three routes. because the core functionality of our algorithm involves being cautious about clustered  dangerous terrain  it was particularly effective for the 1 course. this implies our approach may be more beneficial as terrain difficulty increases.
모finally  we notice occasional abrupt  unsmooth drops in shock in the figure. this is the result of a parameterization that is just aggressive enough to slow the vehicle before a major rough section of road. using the parameterization immediately prior did not slow the vehicle in time.
1 results from the 1 grand challenge
in figure 1  we indicate where the algorithm reduced speed during the 1 grand challenge. numbers and vertical lines are mile markers. we depict terrain at the bottom that approximates elevation data from the route. at the top of the figure  ellipse height indicates the maximum speed reduction generated by the algorithm for that portion of the route. for the purposes of this figure  the route was divided into 1th mile segments. log files taken by the vehicle during the grand challenge event indicate the velocity controller was controlling vehicle speed for 1% of the entire race - more than any other factor except speed limits.
모we notice that the algorithm was particularly active in the mountains and especially inactive in plains. we also notice that miles 1 - which we identified in section 1 as the most challenging part of the route - do not represent the greatest speed reductions the velocity controller made. this is because speed limits  given by darpa  were already low in those regions  and the amount of speed reduction is  of course  related to the accuracy of the original speed limit as a good speed guide.
1 discussion
speed decisions are a crucial part of planning - even beyond their relationship to obstacle avoidance and lateral maneuverability. we have presented an online approach to speed adaptation for high-speed off-road autonomous driving. our approach addresses shock  an important component of overall risk when driving off-road. our method requires no rehearsal or remote imaging of the route.
모the algorithm has three states. first  the vehicle drives at the speed limit until an acceptable shock threshold is exceeded. second  the vehicle reduces speed to bring itself within the threshold. finally  the vehicle gradually increases speed back to the speed limit. the algorithm uses the linear relationship between speed and shock to determine the amount of speed reduction needed to stay within the limit. this limit and the acceleration parameter from the third state are tuned using supervised learning to match human driving.
모experimental results allow us to draw numerous conclusions. first  our algorithm seems to be more cautious on more difficult terrain  although this is difficult to prove in the general case  figures 1 and 1 . second  by slowing  we can substantially reduce high shock events with minimal effect on route completion time  figure 1 . finally  the algorithm had significant influence on our vehicle's behavior during the 1 grand challenge  figures 1  1  1  and 1 . it reduced shock by 1% and slowed the vehicle in difficult terrain  all while adding less than 1 minutes to the completion time. the algorithm also had more influence than any other factor - except speed limits - on our robot's speed. finally  it generated the fastest completion time despite being fully automated  unlike some other competitors in the grand challenge  gutierrez et al.  1; urmson et al.  1; 1 .
acknowledgments
david stavens' doctoral study is supported by the david cheriton stanford graduate fellowship  sgf . the authors gratefully acknowledge the stanford racing team who helped make this work possible  especially michael montemerlo  hendrik dahlkamp  and sven strohband.
