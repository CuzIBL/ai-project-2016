ion - thus to compile a predetermined global shape into an amorphous cell program that instructs the cells to grow into the shape. in other words  starting from one cell  the cells continuously replicate into a configuration that geometrically approximates the input shape. 
　the global-to-local compilation proceeds in two phases: first  the input shape is decomposed into a semi-efficient packing of covering discs; second  adjacent discs are linked into a bidirectional network using a local  relative coordinate system   reference points  . this choice of representation permits the structure to be produced in the growing phase amorphously by cells whose internal program relies on the recursive execution of only two key primitives: locating the reference points of discs  and growing into a disc. the cells use replication  messaging  and competition - mechanisms inspired by cell differentiation and morphogenesis  lawrence  1; wolpert  1  - to achieve these primitives robustly. 
　the system compiles and grows any connected two dimensional shape. the size of the compiled cell program is linear in the number of covering discs of the shape. the growth process is robust to random cell-death. 
1 the model 
our objects of discourse are locally-interacting  asynchronous computing units  here referred to as cells. cells have a center location and a fixed radius r. a cell can replicate  and will place a given child between 1r and at away 


figure 1: compiled disc network with the spanning tree and the fully grown versions of a letter e shape. 
from its center. cells are identically-programmed  differing only by a limited amount of local state. they have limited computing power and are vulnerable to random death. they have no a priori knowledge of their positions or orientations. our model for a cell substrate is analogous to living tissue: cells are tightly packed  cannot move around nor can they overlap. 
1 	cell primitives and communication 
a cell can execute five basic low-level actions actions. it may: 
1. change its internal state 
1. emit gradient messages 
1. hand messages to immediate neighbors 
1. reproduce 
1. die. 
　a gradient message has a specified amplitude and carries a numeric id. amplitudes have an upper bound of 1 times the cell radius. just as chemicals diffuse in fluid  a gradient message's strength decays with distance from the source  nusslein-volhard  1 . in our model  the decay is linear  and without noise. the amplitude of a given message is known by all cells  thus the strength of a received message will determine the distance from the source. in this way  cells can accomplish differentiation through triangulation: after receiving gradients and observing distances from at least three nearby non-collinear cells  a cell can determine its position relative to the source cells. 
　a local message carries a fitness value  a reference point id  and a state bit. local messages are delivered only to immediate neighbors  or  touching  cells: cells within a fixed  short radius. there is always some local message exchange between immediate neighbors. note that the lack of noise in messaging is a simplifying and unrealistic assumption in amorphous computing. 
　the low-level actions are combined to form the following high-level actions: 
1. grow a disc of cells 
1. activate or deactivate a cell as a competitor for a role 
1. turn reference point role on or off 
1. hand over a role to a neighbor 
1. triangulate another set of potential role holders 
   high-level actions are always associated with a reference point role. reference points are cells that have been designated as  coordinates  of a local grid; these cells must exude gradient messages that allow nearby cells to triangulate their relative positions. reference point roles can be activated and deactivated in any cell. reference points will be discussed in great detail in sections 1 and 1. when such a role is activated  the cell enters a local competition for that role with other activated cells in its local neighborhood in an attempt to determine a unique role-holder for the given reference point. the details of the local competition are discussed in section 1. 
　the execution model of the cell is analogous to a turing machine. the cell transfer function takes the internal state and the messages heard  maps these into a sequence of highlevel cell actions  and translates these into a sequence of lowlevel cell actions. in each cell-step  the cell determines the next in the sequence of low level cell-actions  using the output of the transfer function  and then executes this action. 
　asynchronous execution is achieved by using 1 threads  and each thread cycles through 1% of the cells in random order. a scheduler ensures that any cell that is more than 1 cellsteps ahead of the average number of cell-steps will not be chosen for execution in the next cycle  and that any cell that is more than 1 steps behind the average will certainly be included. the rest of the 1% of the cells are chosen randomly. the difference in the number of cell executions between any two cells cannot exceed 1 *  1 + 1  = 1 cell-steps. 
1 	compilation 
in our system the two-dimensional shape is compiled directly into the cell program. the complexity of the program grows linearly with the complexity of the input shape - that is the number of discs the compiler covers the shape with. this approach differs significantly from models based on cellular automata  margolus  1   in which local rules are constructed empirically and creation of complex shapes would be intractable; and from those based on evolution  forrest and mitchell  1; mitchell et al  1b; 1a   in which the relationship between local and global behaviors is not well understood. 
　the compilation is a regular sequential  non-amorphous  procedure whose input is the pixel map of the 1 dimensional shape  and whose output is the amorphous cell program or transfer function. it operates in six simple stages. in the first stage  we select a disc-covering for the input shape. second  we form a graph using our discs for our vertex set  in which two vertices form an edge if they intersect. a spanning tree is then selected from this graph; pairs of discs will be called neighboring discs if they are connected in the spanning tree. 
　third  we locate the positions for reference points within each disc. in order to do this  we pick an arbitrary global orientation. then we find  along with the disc center  the north  south  east and west cardinal reference points  i.e. points on the circumference of the discs that lie north  south  east and west of the the disc centers  in each disc. we proceed to locate the intersection points of neighboring discs in the spanning tree. two problems can arise at this stage of the compi-
multiagent systems 
lation.  1  consider a neighboring pair of spheres  a  b . if the intersection points of a and b are too close to each other the reference points in a and b used for triangulating reference points of b may be almost collinear  which makes the outcome of triangulation procedure ambiguous. to remedy this  if this problem arises we locate an extra reference point called the temporary disc center.  1  if the center of disc b is not inside the fully grown disc a  there may be no cells where b's center is supposed to be. in order to place cells at j1's center location in the growing phase  a sequence of temporary discs are grown  whose centers hand over the temporary disc center role called line reference point to a better positioned neighboring cell as soon as there is one. during the compilation phase the first line reference point is located. sections 1 and 1 give a more detailed description of how the growth phase proceeds in these two cases. 
　fourth  we designate activating sets and deactivating sets for each reference point. an activating or deactivating set is a set of reference point messages whose combined presence and/or absence can activate or deactivate another reference point role. 
　next the  de activating sets are converted to boolean statements that specify exactly when a cell should consider activating or deactivating a reference point role. the boolean language is the heart of the cell transfer function. it contains only one primitive: a message from a reference point can be heard. the language has the usual and  or and not constructors  as well as two additional constructors: atjeast k  set  and at-most k  set . these express that at least  or at most  k of the statements in set must  may  be true. the primitives are combined  using the constructors  to form compound statements  thus forming a concise description of the complex geometric and logic relations existing among reference points. the boolean statements would  for example  compactly describe the following simplified scenario: a cell should consider competing for the north cardinal point role in disc b if: 
 it does not hear other north cardinal point messages from b  and  it hears a message from b's center  and  it hears at least three other cardinal points of disc b . a more complete example boolean statement is listed in section 1. 
　in the last  sixth stage of the compilation  we calculate the ideal message strengths associated with messages in the boolean statements. the latter distances  together with the compound boolean statements  make up the transfer function. 
1 	growing phase 
each cell executes the same cell program.the compilation procedure outputs this program from a given connected twodimensional shape. the program consists of the transfer function and an interpreter. the cell maps the combination of its internal state and received messages to a sequence of highlevel actions.the cell proceeds to translate the high-level actions into a sequence of low-level actions that determine  a  which messages a cell must prepare to send   b  whether the cell should produce a child   c  the internal state it must assume during the next cell-step. while over a long period of time all of the cells' average running speeds are the same  the cell-steps are not synchronized  and the expected duration of a step varies among cells. collectively  cells execute two major operations recursively:  a  growing a disc via cell replication  and  b  triangulating target cells that will assume reference point roles. 
　let's call line messages  and messages from disc centers and temporary centers  grow messages. in every cell-step of its existence  the cell listens for grow messages. if it detects one  it will attempt to reproduce  placing a cell in the surrounding empty space. it will suspend replication after 1 unsuccessful trials until there is a new opening in the surrounding area  i.e. until a nearby ceil dies. thus the gap in the shape left by a dead cell is filled by the offspring of the expired cell's neighbors. in case the cell does not hear any grow messages for 1 steps  the cell dies and is removed from the space. 
　in each cell-step the cell processes the gradient messages it hears  let us call this its in-message set. it selects the statements from the set of boolean statements stored in the transfer function that evaluate to true. to evaluate a boolean statement the cell should match its in-messages against the list of messages that are required to be present or missing by the boolean. each of the true boolean statements asserts that a reference point role should activate or deactivate in this cell. the cell makes the final decision of whether to  de activate as a competitor for the reference point role based on the proximity of the perceived strengths of the messages  that are required to be heard by the boolean  to the ideal message strengths stored in the transfer function. in the next cell-step the activated cell enters  and the deactivated cell exits  the competition for holding this role with other activated cells in its neighborhood. 
1 	local competition for a reference point role 
activated  or competing  cells keep track of 1 things: whether they have settled into a steady winner or loser state from the competing state; their own fitness value; the best received fitness value  a competing cell will send local messages to its neighbors with  a  the reference point id for which it is competing   b  a state bit showing whether it has stabilized  and  c  the best fitness value it observes  possibly its own . the cell's active neighbors will keep doing the same. thus if its fitness value is better than anyone else's  this value will spread accross its competing neighbors and its neighbors' neigbors  and so forth. if a cell has had a better fitness score than any of the fitness values it sees in the local messages for 1 steps  it stabilizes as a winner. this triggers all its competing neighbors to settle  end the competition  as losers  which will induce all their competing neighbors  and in turn their competing neighbors neighbors  and so on  to stabilize as losers. eventually  all the cells competing for this particular reference point role that can be reached via a sequence of immediate active neighbor relationships from the winner cell stabilize as losers. once a cell has stabilized as a winner  it becomes the holder of the particular reference point role for which the cells have competed. it instantly sends out the corresponding reference point gradient message. in the event that there is a topologically disconnected pocket of cells still competing for the same role  the presence of the reference point gradient will supress any further competition with lower leading score. if the gradient message or the winner disappears the passive loser cells resume competition for the reference point role until a new leader stabilizes. thus the competition never ends  but reaches equilibrium  and resumes competition as soon as the equilibrium is disturbed. the 1 step wait before a cell stabilizes ensures that the local messages with the maximum score have time to spread through the competing cells in spite of the asynchronous execution of cell-steps. 
　if various competing cells die  local competition will  with high probability  finish succesfully. we may consider the following cases. if a non-leading cell dies its loss does not 
disturb the outcome of the competition. if a non-stabilized leading cell dies  the neighboring cells will sense the absence of the local message with the winner state bit and will start broadcasting a special local message containing the reference point role. this will spread through the competing cells and restart the local competition for this particular role. it is unlikely that all the cells surrounding the now missing leading cell die before they could trigger a new competition. however  if this does occur  the rest of the competing cells that have stabilized in loser states will realize that the end of the competition for this role has not been followed by a corresponding gradient message from the winner in 1 cell-steps  and will automatically resume competition for this role. 
1 	triangulating the reference points of a disc 
assume that the fully grown disc a has a neighbor  disc b  that has not been grown yet. let's denote .1's center reference point a.c  cardinal reference points a.n  a.s  a.e  a.w   north  south  east and west respectively  and the intersection points with disc b  abjl and ab.i1. i will describe a possible sequence of reference point activation path that will lead to a fully grown b disc with its reference points in place. 
　an outline is as follows: first triangulate j1's center  b.c  then grow disc b  proceed to triangulate the cardinal points of b. once all the cardinal points of b have stabilized  triangulate the intersection points of b with its neighboring discs simultanously  and recursively do the same with b's yet ungrown neighbors. 
　in this section  we will consider the ideal case: when a contains b.c. using a's cardinal point gradient messages b.c can be located easily. in this case all cardinal points of 
b that lie inside a are triangulated using reference points of a. we need to consider three cases.  1  assume that there are at least two such cardinal points of b that lie in a. after these have stabilized  they  along with b.c are used to triangulate the remaining cardinals of b.  1  if there is only one cardinal  say b.e  in a then after this one has stabilized  first the opposite direction cardinal  b.w is located: b.e and b.c are used to find the cell in b that is furthest away from b.e  but is still in b. next the cardinal point that is closer to the intersection points abjl and ab.i1 is triangulated  using abjl  ab.i1  b.e  b.w and b.c. finally  the last remaining cardinal point of b is triangulated using the 1 other cardinals and the center of b.  1  if there is no cardinal in a then abjl  ab.i1  and b.c are used to locate the cardinals of b that are closest to a.c  then the opposite cardinals using the same procedure as described above. 
　the scheme described so far is the most preferred method of growth  i.e. the one followed when nothing is damaged. however  in the event that cells die unexpectedly  or if some of the cardinal points are covered by other complete discs  for example  the order may be different. this complex growth order is determined by a sequence of boolean statements in the transfer function of the cell program. consider the following simplified statement for activating b.n: 
and not b.n   
b.c  
	or at.least 	1 	 cardinalsan.disc b ; 
 opposite-cardinal-point-in-disc 	north 	b ; or map 
the cell will check if the statement evaluates to true on the presently observed in-message set. it finds the first boolean in the normal form that evaluates to true  which we will call the satisfied boolean. thus  in this example  it will most prefer to use  along with b.c  the 1 other cardinals of b to locate b.n  then b.s  then the two intersection points with a  or some other neighbors. if the first  most preferred boolean is not satisfied  that is  the messages that would satisfy it are not heard   perhaps because some cells died  it will try to use the second most preferred boolean  then the third  and so on. if there is no satisfied boolean  the cell will wait  thus the triangulation is unaffected by asynchronous execution of cell cell-steps. 
1 	handing down a reference point role 
if b.c is outside disc a  the cells in a proceed to triangulate the line reference point b.li midway between ab.il and ab.i1 on the circumference of a. as soon as b.li has stabilized  it starts exuding a temporary disc center message with range equal to the distance between b.li and ab.il. this induces cells in the range to reproduce. cells around 
b.li constantly communicate their fitness score for the role of b.c via local messages to the cell holding b.li. once a cell with a better fitness than that of b.li has showed up  b.li role is replaced by a temporary disc center role  b.t1. at the same time the cell holding this role sends a local message to the better scoring neighbor that turns on the role b.l1 in it. the latter cycle continues until a cell can find no immediate neighbor that scores better than itself for 1 cell-steps. at this stage the b.l role is turned off and the b.c role stabilizes in its place  the appropriate center gradient message is sent out  which in turn turns off all temporary centers in b. note that during this passing on of reference point roles the local competition procedure plays no part other than stabilizing 1.l1. the procedure is still robust because if a cell with a b.l role dies  and as a result  there are no more b.l  or b.c  messages observed by the cell  then the temporary center b.ti that hears no larger id b.tj temporary center message will turn into a b.li  and the handing down procedure restarts from that point. 
　the first disc is special as it cannot be grown by any other disc. the latter reference point role handing over procedure 
multiagent systems 


figure 1: center  cardinal and intersection reference points of discs a and b. 1: growing phase. grey cells are stabilized loser competitors  white cells are still competing for a role. black cells surrounded by white or grey cells are leading competitors or stabilized reference points. local competition for the intersection points  ab.i1  ab.i1  and b's center  b.c   1 ; growing disc b  1 ; local competition for south  b.s  and east  b.e   1  and north  b.n  and west  b.w   1  cardinal reference point roles in disc b; and the grown shape  1 . 
is used to pick the first  north  and the second  east cardinal points in the first disc. the orientation of the first north cardinal is chosen randomly and the orientation of the first east cardinal point will randomly choose between the east and west directions relative to the already picked north. on the figures these are externally forced to be up and left. 
1 temporary discs 
if the distance between ab.i1 and ab.i1 is too small relative to the radius of a or the cell size  or either of the radii are too small relative to the other one or to the cell size  then triangulation of the cardinals may be ambiguous. in these cases  if simple geometric checks confirm the ambiguity  a temporary helper disc  t  is grown. t's center  t.c is at the midpoint of the arc between ab.il and ab.i1 on a's circumference. 
after t.c has stabilized  if t does not cover b completely  t's intersections with jb  tbjl and tb.i1 are triangulated. the diameter of t is chosen such that the distance between tbjl and tb.i1 is large enough to avoid the original ambiguity. if t contains b  tbjl and tbj1 are picked on the circumference of t. in either case tbjl and tb.i1 are used in place of abjl and abj1 in all the above discussed procedures. once at least 1 cardinal points and the center of b have stabilized  t.c is turned off  and any cells that fall outside the ranges of all the presently existing grow messages die in 1 cell-steps. 
1 	overall robustness and simulation results 
one of the main goals of this research is to explore how the robustness of computing can be improved using spatial control mechanisms. we ask ourselves  to what types of failures  and to what degree of failure  is our system robust  furthermore  what imperfections can we introduce that will expose vulnerabilitcs in our system  
　let us consider the robustness of our parallel system in the face of random cell death  that is  if we continuously exterminate cells at random with a certain frequency. whether the shape can effectively continue to grow depends on the rate at which we cause cells to die. certainly  the rate of cell death can not be faster than the rate of regeneration. 
　all high level actions of cells  including local competition  role handing  triangulation  disc creation  can function in spite of a high death rate. the robustness of the competition procedure against cell death was discussed in section 1. let us discuss some of the other various aspects of how our system can accomodate cell death. 
　if a cell with a cardinal  intersection point  disc center or temporary center reference point role dies  its missing gradient message will trigger a new local competition among all the cells competing for the role  and this will eventually lead to the selection of a new reference point holder cell. if a linereference point dies  the role-handing down procedure will backtrack to the last still available line-reference point. if the first disc's center dies before the first disc's cardinal reference points stabilize a neighboring cell will resume the first disc center role. 
　if multiple reference points vanish simultanously  it is possible that an entire set of cells competing for a reference point role will stop competing for the role. this is very unlikely for two reasons: first  deactivation will take place only after the boolean statement of the satisfying set in the deactivating set has evaluated true for 1 consecutive cell-steps. therefore  some reference point role holders and thus their gradient messages will be missing for 1 steps. in this many steps  however  they will be replaced by new role holder cells  which will turn the booleans in the deactivating set false before they can take effect. second  each reference point role has multiple activating sets  each of which must be missing for the role to be deactivated. 
　in case such a deactivation occurs to a disc center  it will cause the cells only in this disc to die  after a 1 cell-step wait period. let's call the discs that can regenerate all their neighbors regenerating discs. the compilation is designed so that any disc with radius larger than 1 times the cell radius is a regenerating disc. assume a whole disc of cells has been destroyed because all the cells competing for the center reference point have died. as long as at least one of the regenerating disc neighbors of the missing disc is relatively unharmed  the disc will regrow under normal growth procedures. on the other hand  to make regrowth impossible  all disc centers and at least two of the cardinals of all regenerating disc would have to die  all in a very short amount of time. 
overall  our system is quite robust to random cell death. 
consider the following experiment. after there exist at least 1 cells  in each cell-step in which a new cell is created  a cell is randomly chosen and with 1% probability it dies. for every 1k cells that are created  on average k have died  so about k cells are left. that is  the number of live and dead cells will be approximately the same. several runs of this experiment have shown that  under these circumstances  the cells will still correctly approximate the compiled shape. 
　the system has been designed so that the shape can recover from two other types of failure. the first type is sudden massive cell death  that is  death to many cells at random locations accross the shape at once. the second is regional cell death where a contiguous patch of cells die at once. we are still investigating how well the system can recover from these failures. 
1 	future work 
as stated before  lack of noise in messaging is unrealistic; a natural next step would be to deal with this type of failure. furthermore  to match the robustness of live tissue  we would have to get rid of the assumptions of uniform cell size  immobile cells  linear  reliable and non-changing gradient decay function  the latter for real chemical gradients is exponential with exponent multiplier varying with temperature! . the present approach could prove interesting for the areas of reconfigurable robots and autonomous agents  butler et al  1 . finally  it would be worthwile to translate the current 1 dimensional program into a 1d shape growing implementation. 
1 	acknowledgements 
this research was supported by a national science foundation grant on quantum and biologically inspired computing 
 qubic  from the division of experimental and integrative activities  contract eia-1. the author would like to thank jacob abernethy  catherine chang  hal abelson  radhika nagpal and gerald sussman for their help. 
