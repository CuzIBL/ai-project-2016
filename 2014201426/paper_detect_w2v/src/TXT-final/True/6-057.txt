ion 

martin sachenbacher 
mit artificial intelligence laboratory 
cambridge  ma 1  usa sachenba mit.edu 
abstract 
automated problem-solving for engineered devices is based on models that capture the essential aspects of their behavior. in this paper  we deal with the problem of automatically abstracting behavior models such that their level of granularity is as coarse as possible  but still sufficiently detailed to carry out a given behavioral prediction or diagnostic task. a task is described by a behavior model  as composed from a library  a specified granularity of the possible observations  and a specified granularity of the desired results. the goal is to determine partitions for the domains of the variables  termed qualitative values  that are both necessary and sufficient for the task at hand. we present a formalization of the problem within a common relational  constraint-based  framework  present results regarding solutions to task-dependent qualitative domain abstraction  and devise methods for automatically determining qualitative values for a device model. 
1 introduction 
model-based systems  lhamscher et a/.  1; weld and de kleer  1   represent knowledge about the structure and behavior of a physical system in terms of a behavior model  and use it to support engineering tasks such as behavior prediction  diagnosis  planning and testing. when constructing model-based systems  one of the most difficult parts is modeling the device. a fundamental idea to support and facilitate modeling is to compose models from model fragments  that is  re-usable elements of knowledge about a device that can be organized in a library   falkenhainer and forbus  1  . this requires that model fragments have to be formulated  as far as possible  in a generic way and independent of their specific application context. however  it also means that information about the task a model will be used for cannot be anticipated in the model fragments. 
　but a model needs to be suited for the problem-solving task at hand in order to provide an effective and efficient solution to it. using always the most accurate and most detailed model available may make the respective problemsolving task intractable  or at least unnecessarily complex and 
1 
peter struss 
tu miinchen  fakultat fur informatik 
1 garching  germany struss in.tum.de 
resource-consuming. for instance  for the task of diagnosing a device in an on-board environment  it is crucial to have a model that focuses only on those aspects that are essential to the goal of discriminating between its normal and faulty behavior. any unnecessary details that are not relevant to this task impair its ability to meet the stringent time and space requirements of this application. in general  models straightforwardly composed from a library tend to be either inefficient  because they are overly detailed  that is  too fine-grained   or ineffective  because they are not detailed enough  that is  too coarse-grained  for the task they will be used for. 
　the approach pursued in this paper is therefore to automatically re-formulate a behavior model  after it has been composed  to a level of abstraction that is adequate for the specified task. we focus on the abstraction of the domains of variables  that is  the problem of deriving sets of meaningful qualitative values. although some work has been carried out on finding qualitative values within a specific context  such as simulation   kuipers  1    the general problem of characterizing and systematically deriving qualitative values for an arbitrary relational  constraint-based  behavior model is a relatively unexplored area. however  much of the work in qualitative reasoning about physical systems   weld and de kleer  1   relies on this type of abstraction. the resolution of a behavior model's domains has a strong effect on the size of the model  the efficiency of reasoning with the model  and the size of the solutions. furthermore  within an on-board or real-time setting  the number of qualitative values determines how many of the observations will be qualitatively different  and therefore it influences the frequency at which reasoning has to be initiated at all. 
1 example 
consider  for example  the system depicted in figure 1. the device is a simplified version of a pedal position sensor used in a passenger car. its purpose is to deliver information about the position of the accelerator pedal to the electronic control unit  ecu  of the engine management system. the ecu uses this information to calculate the amount of fuel that will be delivered to the car engine. 
　the pedal position is sensed in two ways  via the potentiometer as an analogue signal  and via the idle switch as a binary signal  the idle switch changes its state at a particular value of the mechanically transferred 
diagnosis 


pedal position. the reason for the redundant sensing of the pedal position is that the signals ; and are crosschecked against each other by the on-board control software of the ecu. this plausibility check is a safety feature of the system  in order to avoid cases where a wrong amount of fuel injected evokes dangerous driving situations. 
　assume we want to perform the plausibility check between the electrical signals and automatically by the means of a behavior model of the system. for the potentiometer model fragment  this requires a distinction in the domain of  that corresponds to the switching point of the switch. this is the only distinction in this domain that is required for the purpose at hand. 
　the problem is that this particular distinction cannot be anticipated in a generic model fragment of the potentiometer component  because it would not make any sense in a different structure. it is only the specific combination of the potentiometer and the switch together with the pursued task that requires this distinction. in contrast  other tasks such as control or design might require more detailed domains that would allow to relate the position of the switch to particular potentiometer voltages. 
　the problem is important  because it impairs the idea of using a model of the pedal position sensor as a common basis for different tasks. for engineered systems  it is typical that several tasks along the product's life cycle - such as failure modes and effects analysis  fmea   on-board diagnostics development  generation of repair manuals or workshop diagnosis - share a significant amount of common knowledge about the behavior of the system under consideration. it would be inacceptable having to manually create models from scratch that are tailored to each of these tasks. 
1 	task-dependent distinctions 
the example above has confronted us with the problem that simply picking model fragments from a library and composing the model is not enough. it is infeasible  in general  to anticipate the required granularity in the domains of variables. therefore  the ability to transform the domains to the right level of abstraction after composing the constraints of the model is a highly practical requirement. it means grouping together those domain values whose distinction is irrelevant for the task at hand. 
　the core idea of distinctions between domain values being redundant is captured by the concept of interchangeability  first proposed by freuder   freuder  1  . for a constraint satisfaction problem that consists of a set of variables  domains and constraints on these variables  two values val   val1 of a variable v are said to be fully interchangeable  if for any solution where v = vel1  substituting v = val1 produces another solution  and vice versa. that is  solutions involving val1  val1  are identical to solutions involving val1  val   except for the value val   val1  itself. 
　interchangeable values define equivalence classes on the domains of the variables  and grouping them together corresponds to an abstraction of the constraint satisfaction problem that exactly preserves the set of its solutions. freuder and sabin   freuder  1    freuder and sabin  1   already observe that interchangcability is related to abstraction and the formation of  semantic groupings  within the domains of variables. however  it is also known that in practice  interchangeability of domain values does not occur very frequently. 
　a model-based problem solving task  such as behavioral prediction or diagnosis  can be cast as an instance of a constraint satisfaction problem. however  it is particular in two respects: 
 1  the input consists not only of the model  but also of the observations that it is confronted with  such as measurements  hypothetical situations  etc. typically  observations are restricted because not all of the variables in the device model are observable  or because domain values cannot be observed beyond a certain granularity. 
 1  the output involves not all feasible assignments of domain values to variables  but only certain aspects of the solutions are required. typically  we might be interested in knowing whether values remain below or exceed a certain threshold  or what the values of mode variables of components are  for a diagnostic task   etc. 
the idea pursued in this paper is to generalize the basic principle of interchangeability  leveraging on this specific context of a model-based problem solving task. the notion of a task is captured as  1  observable distinctions that express what inputs to the problem solving process  for example  observations  can occur  and  1  target distinctions that express what aspects of the outcome we are after. they can be exploited to obtain so-called induced abstractions - domain abstractions that go beyond the low  generic level of interchangeability  but are still adequate for the given task. 
　we pursue the approach in the context of general  relational models that are not limited to restricted cases such as linear relationships or monotonic functions. a relational  or constraint-based  behavior model is a subset 

diagnosis 	1 that restricts the possible combinations of values for the variables v =  v1  v1 ...  vn   where dom vi  denotes the domain of a variable vi . we use join   projection  1   and selection  as operators on relations. 
　consider again the device shown in figure 1. assume that the domain is 
{ 1v 1v    1v 1v    1v 1v    1v 1v    1v 1v } 
for variables involving voltage and 
{1%  1%  1%  1%  1%  1%} 
for variables involving position  and that the only parameter in the system  posswitching  equals 1%. then the device can be modeled by a relation r that consists of 1 tuples: 

　observable distinctions reflect the measurement granularity or incomplete observability of variables. an observable distinction for a variable is expressed as a partition of its domain: 
definition 1  observable distinction  an observable distinction for a variable vi  denoted   is a partition of its domain dom v{ . 
a variable vi  is not observable at all if 	is equal to 
the trivial domain partition . for in-
stance  the fact that for the pedal position sensor  the control unit observes the signal and the signal can be 
expressed by the observable distinction 

whereas all other variables receive the trivial domain partition. 
　target distinctions reflect the granularity of solutions we are after. analogously to observable distinctions  target distinctions are expressed as domain partitions: 
definition 1  target distinction  a target distinction for a variable vi  denoted ntargi. is a partition of its domain dom vi . 
a variable vi is said to have no target partition  if ntarg i is equal to the trivial partition. for instance  the target distinctions for the pedal position sensor are determined by the goal to distinguish between the domain values for the variable vswitch  the plausibility check itself is not represented in the model : 

1 	domain abstractions 
a domain partition 1r  can also be understood as a domain abstraction 

that maps elements val from a base domain dom vi  to a 
transformed domain dom' vi  that consists of sets of values 
from the base domain such that . abstractions can be straightforwardly extended from single values to sets of values  by taking the union of the resulting sets. for two abstractions r  and is a refinement of if 

two abstractions t   ti ' are comparable  if ti is a refinement of ti or ti is a refinement of ti. we apply the notion of refinement and comparability equally to abstractions and domains. a vector of domain abstractions is denoted 

a domain abstraction t is a refinement of t'  if every r  is a refinement of ti. two abstractions t  t' are piecewise comparable  if every tit is comparable with ti. if a join operation combines two relations that are defined on different  but piecewise comparable domains  we define  for convenience  that the result is a relation over the finer domains. 
1 	qualitative abstraction problems 
given this representational apparatus  we can now formally define the problem of task-dependent qualitative abstraction. 
definition 1  qualitative abstraction problem  ixt r be a relational behavior model  obs a set of external restrictions  tobs a domain abstraction defined by observable distinctions  and ttarg a domain abstraction defined by target distinctions. the qualitative abstraction problem consists of 
finding an induced domain abstraction tlnd such that: 

 1   simplicity  if tind is a refinement of a domain abstractiontind' and tind' fulfills  i   then tind = tind'. 
　the first condition  adequacy  states that the abstracted model tin i r  derives a solution on the level of target distinctions  if and only if the original model r derives the same solution on the level of target distinctions. we require this to hold for all the possible external restrictions  actual observations  design specifications  etc.  on the level of observable distinctions. this guarantees that for any external restriction that can occur  the abstracted model will yield the same results as the original model. that is  if we apply rind before carrying out our problem-solving task  it won't affect the result because this abstraction incorporates all the distinctions that are necessary for this task. as a consequence  we can substitute the abstracted model tind{r  for the original model r in problem solving. 
　in general  there may be many domain abstractions that fulfill the adequacy criterion. in particular  the identical domain abstraction tid that retains all the distinctions in the model is an adequate abstraction according to the definition. however  among all adequate abstractions  we prefer those that are the  simplest  ones. simplicity of an adequate abstraction is defined in the second condition of definition 1. the approach taken is to select the abstractions that are coarsest in the sense that there exits no other adequate abstraction of 

1 	diagnosis 

which they would be a strict refinement  an abstraction that would further merge at least two of the qualitative values . a domain abstraction that is both adequate and simple incorporates only distinctions that are both necessary and sufficient according to the target and observable distinctions. it represents a level of abstraction that neither makes any unnecessary distinctions  nor abstracts away any distinctions that are crucial to solve the problem. definition 1 thus formalizes the problem of finding qualitative values for the domains of variables. compared to interchangeability  which is concerned with possibilities for abstraction within a single problem instance only  a qualitative abstraction problem  qap  describes a whole class of instances defined by a model relation  a set of external restrictions  and the task-dependent distinctions. interchangeability enforces that the set of solutions remains the same as for the original model. a qap generalizes  or relaxes  this basic principle and demands that the set of solutions remains the same but only on the level of target distinctions  and only for inputs on the level of observable distinctions. 

　obs-completeness means that all the possible observations on the level of observable distinctions can actually occur or have to be considered during problem-solving  consequently  induced abstractions can be derived without knowing the exact set dbs . sol-completeness means that all the possible solutions defined by the target distinctions can indeed be distinguished based on the model and the external restrictions. in addition  we demand that and are pieccwise comparable. note that this is not actually a restriction  because it can be established for any qap by possibly introducing additional variables that separate the target and observable distinctions. 
　intuitively  under these conditions  we expect that we have to keep all the target distinctions  because we need them to distinguish the solutions  but we can eliminate the distinctions between observations that would lead to the same set of figure 1 shows the resulting partition for the pedal position sensor example  given the observable and target distinctions stated in sec. 1  all variables except and vswitch have no distinction and have been omitted from the figure; values  1v 1v    1v 1v  and  1v 1v  for do not appear in r and have been omitted from its domain . 

figure 1: partition  for the pedal position sensor example. the partition consists of four elements numbered 1  1   . . .   1. applying theorem 1 yields the distinctions for vpot shown on the left-hand side of the figure. 
theorem 1  solution to qap  let qap be a qualitative abstraction problem that is obs-complete and sol-complete. let 
t
 f1 a t 	be the domain abstraction that aggregates the interchangeable values of a relation a  	that is  	two values  are combined if 

then the simplest domain abstraction that is a refinement of ttargi i and every domain abstraction 

is an induced abstraction for qap. 

solutions. if qap is obs-complete  the are given b y the possible subsets o
diagnosis 	1 

　consider again the device shown in figure 1. assume that the domain is 
     { 1v.1v    1v.1v    1v.1v    1v 1v    1v 1v } for variables involving voltage and 
           {1%  1%  1%  1%  1%  1%} for variables involving position  and that the only parameter in the system   equals 1%. then the device can be modeled by a relation r that consists of 1 tuples: 

　observable distinctions reflect the measurement granularity or incomplete observability of variables. an observable distinction for a variable is expressed as a partition of its domain: 
definition 1  observable distinction  an observable distinction for a variable vi  denoted  is a partition of its domain dom vi . 
a variable vi - is not observable at all if is equal to the trivial domain partition . for in-
stance  the fact that for the pedal position sensor  the control unit observes the signal vpot and the signal vswitch can be expressed by the observable distinction 

whereas all other variables receive the trivial domain partition. 
　target distinctions reflect the granularity of solutions we are after. analogously to observable distinctions  target distinctions are expressed as domain partitions: 
definition 1  target distinction  a target distinction for a variable vi  denoted  is a partition of its domain dom vi . 
a variable vi is said to have no target partition  if targ  is equal to the trivial partition. for instance  the target distinctions for the pedal position sensor are determined by the goal to distinguish between the domain values for the variable vswitch  the plausibility check itself is not represented in the model : 

1 	domain abstractions 
a domain partition  can also be understood as a domain abstraction 

that maps elements val from a base domain dom vi  to a transformed domain dom' vi  that consists of sets of values from the base domain such that val . abstractions can be straightforwardly extended from single values to sets of values  by taking the union of the resulting sets. for two abstractions and is a refinement o f i f 
two abstractions are comparable  if ri  is a refinement of is a refinement of ri-. we apply the notion of refinement and comparability equally to abstractions and domains. a vector of domain abstractions is denoted 

a domain abstraction r is a refinement of r'  if every r  is a refinement of . two abstractions are piecewise comparable  if every r  is comparable with r/. if a join operation combines two relations that are defined on different  but piecewise comparable domains  we define  for convenience  that the result is a relation over the finer domains. 
1 	qualitative abstraction problems 
given this representational apparatus  we can now formally define the problem of task-dependent qualitative abstraction. 
definition 1  qualitative abstraction problem  let r be a relational behavior model  obs a set of external restrictions  t1bs a domain abstraction defined by observable distinctions  and ttarg a domain abstraction defined by target distinctions. the qualitative abstraction problem consists of 
finding an induced domain abstraction tind such that: 
 1   adequacy  for all external restrictions 
 1   simplicity  if tind is a refinement of a domain abstraction tind' and fulfills 1   then 
　the first condition  adequacy  states that the abstracted model tind r  derives a solution on the level of target distinctions  if and only if the original model r derives the same solution on the level of target distinctions. we require this to hold for all the possible external restrictions  actual observations  design specifications  etc.  on the level of observable distinctions. this guarantees that for any external restriction that can occur  the abstracted model will yield the same results as the original model. that is  if we apply rind before carrying out our problem-solving task  it won't affect the result because this abstraction incorporates all the distinctions that are necessary for this task. as a consequence  we can substitute the abstracted model  for the original model r in problem solving. 
　in general  there may be many domain abstractions that fulfill the adequacy criterion. in particular  the identical domain abstraction rid that retains all the distinctions in the model is an adequate abstraction according to the definition. however  among all adequate abstractions  we prefer those that are the  simplest  ones. simplicity of an adequate abstraction is defined in the second condition of definition 1. the approach taken is to select the abstractions that are coarsest in the sense that there exits no other adequate abstraction of 

1 	diagnosis 

which they would be a strict refinement  an abstraction that would further merge at least two of the qualitative values . a domain abstraction that is both adequate and simple incorporates only distinctions that are both necessary and sufficient according to the target and observable distinctions. it represents a level of abstraction that neither makes any unnecessary distinctions  nor abstracts away any distinctions that are crucial to solve the problem. definition 1 thus formalizes the problem of finding qualitative values for the domains of variables. compared to interchangeability  which is concerned with possibilities for abstraction within a single problem instance only  a qualitative abstraction problem  qap  
describes a whole class of instances defined by a model relation  a set of external restrictions  and the task-dependent distinctions. interchangeability enforces that the set of solutions remains the same as for the original model. a qap generalizes  or relaxes  this basic principle and demands that the set of solutions remains the same but only on the level of target distinctions  and only for inputs on the level of observable distinctions. 

　obs-completeness means that all the possible observations on the level of observable distinctions can actually occur or have to be considered during problem-solving  consequently  induced abstractions can be derived without knowing the exact set dbs . sol-completeness means that all the possible solutions defined by the target distinctions can indeed be distinguished based on the model and the external restrictions. in 
addition  we demand that  are piece wise comparable. note that this is not actually a restriction  because it can be established for any qap by possibly introducing additional variables that separate the target and observable distinctions. 
　intuitively  under these conditions  we expect that we have to keep all the target distinctions  because we need them to distinguish the solutions  but we can eliminate the distinctions between observations that would lead to the same set of solutions. if qap is obs-complete  the are given by the possible subsets of for each tuple 
to be the solu-
tion it derives on the level of target distinctions: 
that obtain the same 
figure 1 shows the resulting partition for the pedal position sensor example  given the observable and target distinctions stated in sec. 1  all variables except and  have no distinction and have been omitted from the figure; values  1v.1v   1v 1v  and  1v 1v  for do not appear in r and have been omitted from its domain . 

figure 1: partition d r  r  / .   ttarg  for the pedal position sensor example. the partition consists of four elements numbered 1  1 ...  1. applying theorem 1 yields the distinctions for vpot shown on the left-hand side of the figure. 
theorem 1  solution lo qap  let qap be a qualitative abstraction problem that is obs-complete and sol-complete. let 
tfia
	 	be the domain abstraction that aggregates the in-
terchangeable values of a relation a  that is  two values 

then the simplest domain abstraction that is a refinement of t targi t and every domain abstraction 

is an induced abstraction for qap. 
　for the pedal position sensor example  theorem 1 derives three qualitative values for   see fig. 1 : 
{{ 1v 1v   1v 1v }  { 1v 1v j  { 1v 1v   1v 1v }}. 
the first qualitative value {1v 1v   1v 1v | corresponds to situations where  equals ground voltage  the third qualitative value { 1v 1v   1vj1v } corresponds to situations where  equals battery voltage  and the second 

qualitative value { 1v 1v } corresponds to situations where the position of the switch and  hence  the voltage of vswitch is ambiguous. 
　theorem 1 shows that the basic concept of interchangeability plays a central role in the determination of solutions to a qualitative abstraction problem. in particular  the problem of finding interchangeable values in a relation can be recast as a special case of a qap  where one distinguishes only empty from non-empty solutions: 
diagnosis 	1 

corollary 1  interchangeability as qap  let 	qap 	= be an obs-complete qualitative abstraction problem such that 	then 	is an induced abstraction for qap. 
　in general  however  the granularity of induced abstractions is different from the granularity of interchangeable valcan be either more coarse or more fine-grained than 
　　　the latter case occurs if target distinctions are specified between domain values that are interchangeable with respect to the model relation. 
　theorem 1 constitutes also a starting point for finding useful approximations of qualitative values. one approach is to use only necessary conditions for interchangeability. in order for two domain values to be aggregated by tfia  it is necessary that they appear in the same elements of 

proposition 1  approximate solution to qap  let qap be a qualitative abstraction problem that is obs-complete and sol-complete.be the simplest domain abstraction that is a refinement of and every domain abstraction 
then the induced abstractions are a refinement of 
　the approximation  considers only the projection of each a on the individual variables. this yields a granularity that is simpler than or equal to the induced abstractions. for the pedal position sensor example  the distinctions derived by are identical to those derived by theorem 1. obtaining is easier than determining tindi  because it involves 
only the projection and intersection of sets and does not require to determine the interchangeable values in a. however  because it considers only restrictions for individual variables  the approximation  is not adequate. in general  a restriction might lead to a different solution only if it is combined with additional restrictions for the other variables. 
1 aqua: a prototypic system for task-dependent domain abstraction 
the computation of induced abstractions for a qap involves  based on the results above  the subproblems of constructing the model relation r  computing the partition  and determining interchangeable values 
within the elements of this partition. 
　our prototypic system aqua  automated qualitative abstraction    sachenbacher  1   determines the relation r through structural decomposition of the constraint network that is defined by the set of model fragments it is composed of. the basic principle of structural decomposition   gottlob et a/.  1   is to transform a constraint network into an equivalent acyclic  tree-structured  instance. aqua then iterates over the partition elements of the observable and target distinctions and labels the tuples of the relation r that are consistent with the respective partition elements. since directional arc consistency is sufficient for establishing consistency in a tree-structured network  idechter and pearl  1    this step can be performed efficiently by local constraint propagation. this step yields the partition interchangeable values in the partition elcan then be found using the ba-
sic algorithm described in  freuder  1 . alternatively  the partition elements can be projected on the individual variables to obtain the approximate solution. aqua also performs further optimizations in that it can automatically remove redundant values  domain values that do not appear in any constraint  and eliminate variables that have no distinction at all. the decomposition step is independent of the particular task in terms of observable and target distinctions; hence  the resulting tree can be re-used for different combinations of observable or target distinctions. 
　aqua builds on components of an existing model-based reasoning framework that consists of a development system for composing a device model from of a library of model fragments  and a runtime system for performing behavioral prediction and diagnosis based on actual measurements for the device. using aqua  several tasks can be supported in the context of building model-based systems that arc often carried out manually or solved on an ad hoc-basis. the common theoretical basis is to find suitable domains for the variables in a model. however  in different contexts this basic task can have different interpretations  depending on what the terms variable and domain refer to  including magnitudes  modes of components  and deviations from reference behaviors  isachenbacher  1  . 
　in a larger  real-world application taken from the automotive domain isachenbacher et al  1   aqua was used to obtain abstractions of behavior models of a turbo control subsystem that involved several hundred  initially  realvalued  variables. the qualitative level of abstraction of the derived model was instrumental to meet real-time requirements  and allowed for keeping up with the rate of the measurements in an on-board diagnostic context. in this context  task-dependent abstraction proved useful as a precompilation method that guaranteed adequacy of the results. 
1 discussion 
while several pieces of work have addressed the problem of automatically deriving appropriate models   nayak  1; levy et al.  1; rickel and porter  1    the work presented here is distinctive in that it focuses specifically on the granularity  resolution  of the domain values  and uses relations and partitions as a common and concise representational framework. this has several important implications. 
1 	diagnosis 　the narrowed focus allows us to represent the space of possible candidate models implicitly and compactly as the space of possible domain partitions. in contrast   nayak  1; rickel and porter  1  define this space as the possible combinations of model fragments. candidate models are then defined by different choices  selections  of possible fragments. because in our framework  the difference between different candidate models is well-defined  by means of operators t i    we can in contrast take on the view of transforming  re-formulating  models instead of selecting them. the general relational representation subsumes both infinite and finite constraints  and is not limited to specific types of constraints and special-purpose reasoning methods. it allows 
us to capture the conditions for a solution in a single  concise formula  definition 1  and  more importantly  allows to determine the solutions analytically and in closed form 
 theorem 1 . in contrast   nayak  1; levy et ai  1; rickel and porter  1 all devise search procedures that start from an initial model and backtrack until they find a solution. in general  it can be said that our limited scope allows us to assume a less knowledge-based  more mathematical view of automated modeling. 
　qsim   kuipers  1    a system for performing qualitative simulation of device behavior over time  incorporates methods for refining the domains of variables by deriving new distinctions   landmarks   during the simulation process. however  except for signs  the mapping of qualitative values to their base domain is only partially known  since only information on the ordinal relationship and knowledge about values that must be assumed simultaneously   corresponding values   is provided. therefore  the derived distinctions can in general not be used to simplify the model. extensions of qsim that deal with semi-quantitative reasoning  berleant and kuipers  1   allow to further constrain the landmark values to numeric intervals  but are specific to the 
context of simulation  and the constraints are limited to algebraic relationships and monotonic functions. for the specific task of diagnosis  torasso and torta  torasso and torta  1  recently presented an approach for merging together behavior modes that are indistinguishable  given the granularity of the observations. however  the method does not incorporate a notion of target distinctions. 
　while the theory of task-dependent domain abstraction is applicable both to finite and infinite domains  an important area for future work is to efficiently derive induced abstractions for real-valued base models.  sachenbacher  1  outlines a method for iterative refinement of qualitative values given a real-valued base model.  struss  1  investigates cases where distinctions can be obtained for monotonic regions of real-valued functions. 
1 	conclusion 
the increasing complexity of engineered devices has lead to an increased demand for computer-supported behavior prediction  diagnosis  and testing. given the maturity and scale of model-based systems applications  the question of how to re-use behavior models is of growing interest. it has been shown that a model composed from a library cannot be expected to have a level of granularity suitable for different tasks right away. instead  the ability to re-formulate the model after composing it is a crucial requirement. we identified  within a common relational framework  fundamental properties of re-formulation that is based on abstraction of domain values. observable distinctions and target distinctions allow to capture important aspects of a task. they are the starting point for deriving qualitative values that are both adequate for the task and as simple as possible. our analysis reveals that the degree of domain abstraction that can be achieved is strongly dependent on the characteristics of the task. task-dependent qualitative domain abstraction is a contribution to further bridging the gap between quantitative and qualitative modeling  as it allows to express knowledge about component behavior without being committed early to a specific abstraction level of the domains. it can help to make model-based system more efficient and more cost-effective due to automating steps that are currently done by hand. 
