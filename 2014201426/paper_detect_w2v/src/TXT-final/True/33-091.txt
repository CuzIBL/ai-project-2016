 
　　　omega is a description system for knowledge embedding which incorporates some of the attractive modes of expression in natural language such as descriptions  inheritance  quantification  negation  attributions and multiple viewpoints. it combines mechanisms of the predicate calculus  type systems  and pattern matching systems. description abstraction is a construct which we introduce to extend the expressive power of the system. the logic foundations for the basic constructs of omega are investigated. semantic models are provided  an axiomatization is derived and the consistency and completeness of the 
i introduction 
     omega is a description system developed for knowledge representation and reasoning  1 . omega is a calculus of ascriptions rather then a ceteufua of predicetes as ordinary logic. the concept of 
description in logic  and in particular of definite descriptions  can be traced back to the works by frege and by russell  1 . logicians have always been bothered by the semantic problems raised by definite descriptions when none or more then one individual meets the description. therefore they have favored their elimination by showing how descriptions can be contextually replaced by means of other constructs  1 . 
　　　in omega we deal with indefinite descriptions such as the description   eman  . omega then  has more the flavor of a naive set theory. omega however anows many ways to build new objects  rather than the single set formation construct of set theory. omega is a type free system  in the sense that a single logical type is admitted  the type of descriptions. with omega we achieve the goal of an intuitively sound and consistent theory of classes which permits unrestricted abstraction within a powerful logic system. description abstraction is a construct provided in omega similar to set abstraction. abstractions add considerable expresaive power to a language  nevertheless such powerful constructs are likely to lead to inconsistencies or paradoxes. the rules for abstraction we present have been studied to avoid those problems. the proof of consistency that is provided in the paper is therefore significant to establish this claim. 
　　　the main goal of this paper is to present the logic theory omega  to introduce its models  derive an axiomatization and finally to show the consistency and completeness of the system. 
　　　we consider the study of s knowledge representation system as a logic system to be of fundamental importance. in thie way we isolate the basic deductive mechanisms from the intricacies of specific programming 
　this resaerch was supported in part through a grant tamoftvt* to t* mmctt initslatnqt laboratory of mit. 
tdt second author hat boon twpportod in part ay a talowanto of tha cowlato ntfonato 
- -＊ -  .. - . . . li and maria simi 
istituto di scierue deirinforrnqzione 
corso italia 1 
1 pisa  italy 
languages or implementations. the fundamental results obtained in this way can help us understand the basic mechanisms of reasoning on a knowledge base  and insure us of the soundness of the system. 
　　　as an alternative to symbolic logic  many knowledge representation systems use semantic networks  1  as their basic formalism. the term  semantic  in the name  semantic network  refers to the fact that the formalism was originally developed to represent the semantic information necessary to understand natural language. despite their name  the semantics of semantics network has never been satisfactorily developed. in the work by brachman . the ambiguities and inadequacies of semantics networks are investigated. a typical problem deals with the meaning and use of inheritance links. 
　　　in most cases the semantics of semantic networks is determined by the way the processing routines of application programs manipulate the information represented by nodes and links of the network. many authors consider semantic networks as embedded into first order predicate calculus  1   so the reasoning mechanisms are directly drawn from predicate logic. semantic networks can then be considered a convenient notation  i.e. an alternative syntax  tor expressing variable-free assertions of predicate calculus. the notation is convenient because it suggests an organization of the data base of assertions  highly suitable for mechanical manipulation. kowalski in  adopts this point of view  and also proposes an extension to the notation of semantic networks in order to express a more general class of formulas  including universally quantified variables. the class he suggests is the class of horn clauses  i.e. formulas of the kind: 
a i a a j - a n - e - a     
where all a  are positive atomic formulas. for this class of formulas a uniform proof procedure based on resolution performs reasonably well. however the expressive power is still limited  mostly because of the restriction in the use of negation. 
　　　by drawing such connections between semantic networks and predicate logic  one can argue that a semantics has been provided for semantic networks. however  many of the fundamental aspects of semantic networks  such as inheritance  remain unexplained. 
　　　other knowledge representation systems provide deductive mechanisms of their own. most often procedurally defined        1 . such deductive mechanisms are not formally investigated  so their logical soundness can be questioned. it is in fact the case that some of these systems perform unwanted or incorrect deductions. an example of this kind of problems is the so-called  copy confusion  effect reported by fehlman about his netl system. 
　　　in comparison with other knowledge representation systems  omega has increased expressive power deriving from including: 
  variables: this allows description of complex general relations  rather then isolated assertions; 
  quantification: both over individuals and classes  descriptions : 
 negation: this removes the major limitation of systems like prolog  based on the use of horn clauses; 
  abstraction: allows description of classes of individuals in terms of their properties. it is a very powerful construct  which allows for instance to define the concept of converse of a relation  that had to be given as primitive in . 
　　　we believe that recent proposals of parallel problem solving systems such as ether  will be suitable for implementing the reasoning mechanisms demanded by a rich system such as omega. for instance the ability to process concurrently proponents and opponents  of a same goal  is what is needed to appropriately deal with sentences containing negations. conversely  it is the provision of negative facts what makes the proponents/opponents metaphor profitable and effective. so far the limitations on the use of negation seem to have been dictated mainly by considerations related to sequential proof algorithms. 
　　　in this paper we present and develop the description system omega  as a logic system. the system we develop has some similarities with the one presented by r. martin in   even though we started with different aims and motivations. martin's system is proposed as a system of mathematical foundation  as an alternative to the classical theory of sets. however no result of completeness or consistency for that logic is presented. 
     a sound logical theory for omega is necessary as a formal concise specification for the algorithms that will carry out the reasoning process. results such as the correctness or the completeness of such algorithms can be established only with respect to the theory. properties and theorems about the theory can be exploited in the design of the proof procedure  as it was the case for the resolution algorithm in first order predicate logic. 
     we are leaving out from the present discussion other features of omega such as the calculus of attributions and of metadescriptions. 
　　　a version of omega has been implemented on the mit lisp machine by the authors and has been used to describe the base of active knowledge supporting an experimental system of office forms . a second implementation of omega is currently under development by jerry barber. a subset of omega is being used to describe two dimensional objects within the sba system by peter de jong . 
　　　our experience has proven that the axiomatization provides an extremely useful guideline in the process of implementation. 
ii descriptions and predications 
　　　this section is intended as an informal introduction to the theory omega. for more exhaustive presentation and examples we refer to . 
the simplest kind of description is the individual description  like: 
boston 
or 
paul 
here the names boston and paul are names describing individual entities. 
　　　an instance description is a way to describe a collection of individuals. for instance 
  man  
represents the collection of individuals in the class of men. 
　　　the most elementary sentence in omega is a predication. a predication relates a subject to a predicate by the relation is. for instance the predication 
           paul is  a man  is meant to assert that the individual named paul belongs to the class of man. predication can be used to relate arbitrary deecriptione. for instance tha sentence: 
            a man  it  a mortal  states the fact that any individual of claaa man is also an individual of class mortal. a fundamental property of the relation la is rranswvrty  that allows tor instance to conclude that 
           socrates/*  a mortal  from 
	socrates /a a man  	and 	 a man  1$  a mortal  
　　　the description operators *nd% or and not allow us to build mora complex descriptions  like in the following example:  a boolean  is  true or m$o  

note the difference between description operators and statement connectives in the following examples: 

where nothing is our notation for  the null entity . 
ill syntax 
　　　the language of the theory omega is presented hare using the kind of notation which has become standard in logic and denotational semantics. we list first the syntactic categories of the language. for each of them we show our choice of metavariables ranging on the elements of that category  that we will uae in the rest of the expoaition. 

　　　descriptions and statements are built from constants and variables according to the following syntax: 
	descriptions 	statements 

1 

d. 
1b 







component relationship. omega is a constructive set theory and has no axiom corresponding to the powerset axiom of classical est theory. the constructive nature of omega implies that it is possible to use the proof of a statement to determine a description which meets some requirements or is the answer to a question. 
ix conclusion 
     the results of this paper provide us with a solid base on which to build a theory of knowledge repreeentetion. 
　　　the system presented is powerful enough to express arithmetic  by following the construction of . the use of attributions as in  however increases the naturalness of the notation. there are a number of problems regarding attributions to be addressed such as: interaction between attributions  merging and inheritance; functional dependencies between attributions; contrasting uses of attributions  for instance attributions have been used to express part/whole relationships as wen as to express n-ary relations . in  a preliminary set of axioms for attributions was presented. a set theoretical model along the lines of the present work has to be defined in order to obtain a satisfactory full axiomatization of attributions. such sxiomatization will appear in a forthcoming paper . 
another important construct allowed in omega is the a-abetractkxv 
the axiomatizat on for this construct is similar to the axiomatization of the 
a calculus. this construct interacts nicely with the inheritance mechaniam of omega  allowing the same notation to be used for describing the type of a function aa well as for defining its values. 
     we have also investigated the problems arising from allowing selfreference in the language. in order to avoid logical paradoxes mke the her 
paradox  it is necessary to give up the rules of excluded middle  axiom s1  and contradiction  axiom 1 . this allows models where the value of a sentence can be neither true nor false. such solution follows the lines of the one suggested by viseer in . the logic can still be proved to be complete  but the proofs by hypothetical reasoning become more cumbersome. 
acknowledgments 
　　　can hewitt has been the leading force behind the developement of omega and its axiomatization. luce cardelli and giuseppe congo have thoroughly discussed our ideas in the early stages of this work. william dinger has provided constructive criticism and encouragement. we had several suggestions from jerry barber  who is involved in implementing omega  about the basic rules of deduction. 
