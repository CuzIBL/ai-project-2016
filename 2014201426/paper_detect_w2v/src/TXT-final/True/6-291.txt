towards domain-independent  task-oriented  conversational adequacy 
darsana p. josyula1  michael l. anderson1  and don perlis1 
 1  department of computer science 
 1  institute for advanced computer studies 
university of maryland  college park  md 1 
{darsana  mikeoda  perlis}ccs.umd.edu 

　humans are often able to communicate effectively to solve a joint task  even when they do not speak much of a common language  for instance  when buying a train ticket in a foreign country. although the conversation might not be fully fluent and error-free  the communication does not break down; instead  through clarifications  confirmations and inferences  the dialog can proceed towards solving the common task. key to this is the ability to note an error  or miscommunication   assess it  and address it. we believe that these principles of human dialog repair can be used to enhance the conversational abilities of task oriented interactive systems  allowing them to interact more smoothly with human users  perlis  purang  & andersen 1 . to this end  we are developing an agent that can act as an interface between the user and a task-oriented system  providing a bed for dialog correction and repair. 
　our agent  alfred  active logic for reason enhanced dialog  is built on a time-tracking  logical framework called active logic  elgot-drapkin et al 1; elgot-drapkin & perlis 1 . active logic works by combining inference rules with a constantly evolving measure of time  a  now   that can itself be referenced in those rules. as an example  from now t -the time is now  t -one infers now t+l . special rules governing the persistence of formulas in the database  including rules for disinheriting direct contradictions  along with a quotation mechanism which allows formulas to refer to one another  give active logic the expressive and inferential power to monitor its own reasoning  allowing it to watch for errors  such as mismatches between conveyed and intended meanings   note temporal conversational cues such as pauses that may signal a turn change  and to exert reasoned control over its past and upcoming inferential processes  including reexamination and alteration of beliefs and inferences. 
capabilities 
some of the capabilties that alfred currently has are as follows. 
1. understanding the use-mention distinction 
copyright  c  1  american association for artificial intelligence  www.aaai.org . all rights reserved. 
alfred is sensitive to whether a word is being used or mentioned  and interprets the relevant utterance accordingly. following  saka 1   we have chosen to characterize the use-mention distinction in terms of the possible ostensions of words. that is  we consider x is being  used   if the speaker intends to direct the thoughts of the audience to the extension of x; and x is being  mentioned   if he intends to direct the thoughts of the audience to some item associated with x other than its extension. see  anderson et al 1  for more details. the features that alfred uses to make this distinction are context  cues and meta-dialog. 
1. using meta-dialog 
alfred is capable of engaging in meta-dialog with the human user when necessary  in order to identify miscommunication problems and perform dialog repairs. 
1. learning new words 
alfred can learn new names that refer to already existing objects in the domain. it can also learn new ways to accept known commands. this feature can allow a given user to negotiate a more comfortable vocabulary for interaction  and helps to increase the vocabulary of the system as a whole. we are working on methods of structuring and manipulating conceptual relations to allow alfred to learn genuinely new objects and concepts. 
1. maintaining context 
alfred maintains the context of the ongoing conversation by keeping track of user intentions  interpretations of past utterances   needs and expectations. a  need  is created when there is some requirement  like determining the meaning of a word  that has to be met before the system can interpret a user utterance. an  expectation  is created when the system expects a particular kind of response from the user. 
1. identifying miscommunication 
intelligent systems demonstrations 	1 alfred recognizes miscommunication problems by looking for contradictions in its interpretations of the user's intentions  traum et al. forthcoming . 
1. connecting to different domains 
alfred functions as a kind of translator between human natural language and the specialized language of the task-oriented domain  and enhances the performance of the original system interface by incorporating a suite of dialog error detection and repair strategies. these can allow a dialog to continue even in the presence of various kinds of miscommunications. 
the upshot of this is that alfred can act as a natural language interface between a user and any taskoriented system as long as the specialized language of the task-oriented system is specified explicitly to alfred. this specialized language can vary from menu driven commands in the simplest case to natural language-like commands in a more complicated scenario. however  since the same principles and reasoning strategies are being used in each case to enhance the dialog  orienting alfred to a different domain is as easy as changing the files specifying the specialized language for that domain. 
example 
consider a task-oriented system whose domain is defined by the following objects and commands. 
  domain objects train: metroliner  northstar  bullet; city: baltimore  richmond  buffalo 
  domain commands 
send:  send train city  
　a stepwise example of command translation and intentional discernment follows: 
1. user types  send metro to baltimore ; the parser sends output to alfred 
1. since it is a request for an action  alfred first checks whether it is a command for the domain or for itself. 
1. since it is a domain command  alfred will get the structure of the command from the domain commands knowledge base. in this case  the command structure is send -  send train city   
1. alfred then tries to disambiguate the object references in the user utterance by finding the mapping from these object references to known domain objects of the types specified in the structure. 
1. since there is no direct mapping between  metro  and any existing train in the domain  alfred now  needs  the meaning of the word  metro . this  need  causes alfred to temporarily stop further interpretation of the utterance until this  need  gets satisfied. 
1. this  need  then causes alfred to introspect  to examine its existing knowledge base or try to reason  about the meaning of the word  metro . since it does not get an answer after introspection  it asks the 
1 
user:  what does 'metro' mean    and  expects  the user to provide the answer. this  expectation  helps in keeping track of the context of the conversation  which is essential for understanding the dialog state  and has particular use in helping distinguish whether a word is being used or mentioned in an utterance. 
1. the user says  metroliner . the expectation  above  helps alfred to interpret this elliptical utterance as   'metro' means metroliner . hence alfred would learn this meaning so that at any later point in time  if the user says  metro   alfred would be able to identify the correct referent by introspection. 
1. once alfred gets the meaning of  metro   the  need  created above is satisfied  which in turn causes the further interpretation of that user utterance. 
conclusion 
alfred can enhance the interactive capability of a task-oriented computer system by adding the ability to detect and recover from miscommunication problems  including ambiguous references  incompatible or contradictory user intentions  traum et al. forthcoming   and the use of unknown words. 
　this technology can already be usefully applied to current application domains  such as home-control software  and we expect that the techniques employed can be refined and extended to handle more sophisticated domains. 
