a general backtrack algorithm that eliminates most redundant tests 
john gaschnig 
dept. of computer science 
carnegie-mellon university pittsburgh  pa. 1 
　　　　we define a faster algorithm functionally equivalent to the classical backtrack algorithm for assignment problems  of which the eight queens puzzle is an elementary example  fillmore & williamson 1  knuth 1 . experimental measurements  figure 1  reveal reduction by a factor of 1 for the 1-queens puzzle  factor of 1 for 1 queens  in t  the number of pair-tests performed before finding a solution  i.e.  first solution . a pair-test in this case determines whether a queen on square   i j   j j   attacks a queen on square  1  j1  in c p u   seconds  net speedup is by a factor of 1 and 1 for 1and 1-queens  respectively. 1-queens was solved in 1 seconds on a pdp kl/1. the speedup can be attributed to the elimination of almost all redundant tests otherwise recomputed in many parts of the search tree  as indicated in figure 1  which shows the mean number of times  d  an arbitrary pair-test is executed. if d = 1 then all tests are distinct  no recomputation . note that each data point in the figures represents the mean over 1 or 1 problem instances that differ as follows: instead of instantiating queen 1  say  on square  1   then on  1  ...  then  1   these 1 squares are ordered randomly. a problem instance is defined by choosing a  legal squares ordering  for each queen. random ordering generally gives a smaller value of t  on the average  than the  natural  1 1 ... n ordering  for 1-queens  a factor of 1 smaller! . 
　　　　the algorithm exploits an advantageous time-space tradeoff and is defined below in general form by recursive sail procedure bkmark  swinehart & sproull 1 . the classical backtrack algorithm is defined the same  minus the underlined portions  except that  new var   in line 1 is replaced by  1  . the algorithm applies to any problem having nvars variables  1  for 1-queens   each variable xj having nvalsh  a priori possible values  1 squares for each queen  - one row of board   except 1 for queen 1 for symmetry reasons . an assignment vector 
assign 1:nvars  of values to variables is a solution iff 
pairtest1  assign i   j  assign j   	is 	true 	for 	all 
1   i   j   nvars  iff no queen can take any other queen . below  assign contains indices to the actual values. top level invocation for 1-queens takes the form 

tmp  - bkmarko  1  a  b  c  d  with array dimensions d 1:nvars  and c 1:nvars  l:k   where k is the maximum of the b i  values  -1 for 1-queens . initial values of a are irrelevant; c and d values are initially 1. bkmark returns 1  with solution in assign  or returns 1 if no solution exists. define pairtest for 1-queens and trace the execution  new vs. old versions  to see how it works.  suggestion: define an array values with same dimensions as mark  so that an element of values encodes a board location.  for brevity  the symbol st.ands for  comment . 

