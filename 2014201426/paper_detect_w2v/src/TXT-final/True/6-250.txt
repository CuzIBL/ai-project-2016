 
this paper demonstrates the applicability of automated reasoning to text processing  specifically to question answering. it is shown that the approach is feasible  effective  and scalable. a logic prover has been implemented and integrated into a stateof-the-art question answering system. 


figure 1: cogex architecture 

1 introduction 
automated reasoning has been applied to many application areas  wos 1   but little work was done towards applying it to text processing. the challenges faced when using automated reasoning for text processing are: logic representation of open text  need of world knowledge axioms  logic representation of semantically equivalent linguistic patterns  and others. 
　in this paper we argue that considerable progress was made in key areas of natural language processing and it is possible to implement logic provers for some specific nlp applications. one such application is question answering where the problem is to find exact answers to questions expressed in natural language by searching a large collection of documents  voorhees 1 . we have implemented a logic prover for qa  called cogex. integrated into a qa system  the prover captures the syntax-based relationships such as the syntactic objects  syntactic subjects  prepositional attachments  complex nominals  and adverbial/adjectival adjuncts provided by the logic representation of text. in addition to the logic representations of questions and candidate answers  the qa logic prover uses world knowledge axioms to link questions to answers. these axioms are provided by the wordnet glosses represented in logic forms. additionally  the prover implements rewriting procedures for semantically equivalent lexical patterns. with this deep and intelligent representation  cogex effectively and efficiently re-ranks candidate answers by their correctness and ultimately eliminates incorrect answers. in this way  the logic prover is a powerful tool in boosting the accuracy of the qa system. moreover  the trace of a proof constitutes a justification for that answer. 
1 logic prover inputs and outputs 
a logic form provides a one to one mapping of the words of the text into the first order logic predicates. the predicate names consist of the base form of the word concate-
nated with the part of speech of the word moldovan and rus 1 . an important feature of the logic form representation is the fixed-slot allocation mechanism of the verb predicates  hobbs 1 . 
　the term question logic form  qlf  refers to the questions posed to the question answering system in logic form. 
question: which company created the internet browser mosaic   
qlf: .organization at x1    & company nn x1  & create vb cl x1 x1  & internet nn x1  & browser nn x1  & mosaic nn x1  & nn nnc x1 x1 x1 x1  
　the term answer logic form  alf  refers to the candidate answers in logic form. candidate answers are provided by the question answering system  moldovan 1 . 
answer: in particular  a program called mosaic  developed by the national center for supercomputing applications   ncsa   at the university of illinois at urbana - champaign   is gaining popularity.... 

1 	poster papers logic representation of wordnet glosses a major problem in qa is that often an answer is expressed in words different from those in the question. world knowledge is necessary to conceptually link questions to answers. wordnet glosses contain a source of world knowledge. to be 
useful in automated reasoning  the glosses need to be transformed into logic forms. taking the same approach as for open text  we have parsed and represented in logic forms more than 1 wordnet glosses. 
　the question contains the verb create while the answer contains the verb develop. in order to prove that this answer is in fact correct  we need to detect and use a lexical chain between develop and create. wordnet supplies us with that chain such that: develop  make and make  create. 
nlp axioms 
in addition to world knowledge axioms  a qa logic prover requires linguistic knowledge. this is what distinguishes an nlp prover from a traditional mathematical prover. general axioms that reflect equivalence classes of linguistic patterns need to be created and instantiated when invoked. we call these nlp axioms and show some examples below. more details are presented in  moldovan 1 . 
1. complex nominals and coordinated conjunctions. an axiom is built such that the head noun of the complex nominal in the question implies the entire noun phrase: 
	all 	xl 	 mosaic nn xl  		internet nn xl  	& 
browser nn xl  & mosaic  nn x1   
1. appositions. an apposition implies that the two noun phrases in the apposition  stand for  each other.  ..italian andrea pfister   designer of the 1   bird cage   shoe... uses an apposition to describe the designer. an axiom is built to link the head of the noun phrases in the apposition such that they share the same argument. 
all xl1 x1 xl1 xl1 xl1 xl1 xl1 x1  italian nn xl1  & andrca.nn xl1  & pfister nn xl1  & nn.nnc xl1 xl1 xl1 xl1  & dcsigner nn xl1 &ofjn x!1 xl1 & 1 nn xl1  & birdnn x!1  & cage nn xl1   -  dcsigncr nn xl1  & of in xl1 xl1   
1. part-of relations in location questions. a location seeking question may have a candidate answer that identifies a location by referring to a part of the location. for example  an axiom is built to connect wyoming to its part: 
all xl x1 x1  corner  nn xl  & of in xl x1  & wyoming nn x1   wyoming nn xl   
1. attribute of relations in quantity seeking questions. an axiom is built to connect the quantity to its subject  redwood: all xl x1   quantity  xl  & redwood jmn x1   ofin xl x1   
1. translating words from noun form to verb form. axioms are built to link nouns with verbs. for example the noun seizure is linked to the verb seize  by filling the object with the tail of the predicate attached to seizure  and assigning the event argmuent to be the argument of the noun predicate for seizure. 
all x1 x1 x1  its prp x1 x1  & seizure nn x1  & of in x1 x1  
 seize vb x1 x1 x1   
1 control strategy 
the search strategy used is the set of support strategy  wos 
1 . axioms placed in the usable list are:  1  extended wordnet axioms   1  nlp axioms  and  1  axioms based on outside world knowledge  such as people and organizations. the inference rule sets are based on hyperresolution and paramodulation. 
   when the proof fails  we devised a way to incrementally relax some of the conditions that hinder the completion of the proof. this relaxation process puts weights on the proof such that proofs weaker than a predefined threshold are not accepted. 
1 results 
cog ex was implemented and integrated into a state-of-theart question answering system that participated in trec 1  moldovan 1 . all questions are attempted by the prover  but if the proof fails the qa system resorts to other answer extraction methods that were part of the system before the prover. thus  some questions are answered by the qa system without the prover  some only by the prover and some by both the non-prover system and the prover. the complete system answered 1 questions out of 1 trec 1 questions. of these  1 were answered by cogex. a careful analysis indicates that the qa system without logic prover answered 1 questions and the prover can answer only 1 additional questions for which the system without prover failed. table 1 summarizes these results. the added 
total number of trec questions 1 questions answered by the complete system 1 questions answered by cogex 1 questions answered only by cogex 1 questions answered without cogex 1 table 1: performance over 1 trec 1 questions 
value of automated reasoning to the qa system is 1%  or 1 . the failures of the prover are due primarily to the lack of linguistic axioms. 
acknowledgment 
this work was supported in part by the arda aqua int program. 
