 
a new knowledge-based security protocol verification approach is proposed in this paper. a number of predicates  functions  assumptions and rules are used to infer the knowledge of participating principals. these items are implemented with isabelle  which enables mechanical proving. this approach can prove protocols concerning interleaving protocol sessions and can prove the correctness of a medium-sized security protocol in a couple of seconds. the mechanical proofs of a number of important secure properties and then of the correctness of the needham-schroeder-lowe protocol are given as examples to show the effectiveness of this method. 
1 introduction 
to evaluate and verify security protocols in a systematic way  significant research work has been conducted in the area of designing formal methods for analysis of cryptographic protocols  and many good models have been proposed. generally speaking  all these methods can be broadly divided into two categories  namely state based methods and rule based methods. 
　state based methods model security protocols using finite state machines. they search the state space exhaustively to see whether all the reachable states are safe  paulson  1 . if some reachable state in a security protocol is proved to be unsafe  a flaw may be reported; otherwise  the protocol will be reported correct and safe. state based methods are usually complete and can find most flaws in protocols.  
　rule based methods formally express what principals can infer from messages received  paulson  1 . in these approaches  the protocols  the necessary assumptions and the goals of the protocols are formulated in formal logic. some specific properties of the protocols can be proved by using the axioms and rules of the logic. since rule based methods do not have to search large state space  they can normally converge quickly.  
　to gain effectiveness from state based methods and efficiency from rule based methods  we propose in this paper a new security protocol verification method  which is based on a knowledge-based framework. the method analyses the knowledge of participating principals and infers what they can know and can never know. it takes protocols concerning multiple interleaving sessions into consideration and can find flaws which are often overlooked by many rule based methods. unlike state based method  our method avoids searching large state space. by implementing the method in a mechanical reasoning platform  isabelle  nipkow et al.  1   it can be used to mechanically verify cryptographic protocols and can converge very quickly. the needham-schroeder public key authentication protocol  needham and schroeder  1  with lowe's fix  lowe  1  is analysed in this paper as an example to show the effectiveness and efficiency of our method. 
1 the knowledge based method 
our method focuses on the knowledge of all participators in the protocol. we describe their initial knowledge and infer what they can and cannot know with the progress of the protocol. in other words  it concerns the knowledge analysis of all participators. this method can be implemented in isabelle to enable mechanical verification. 
　all principals taking part in network communications can be divided into three categories: the server  the friends  and the spy. 
　random numbers chosen by principals serve as nonces to identify protocol runs uniquely and to avoid replay attack. every principal has some keys. all the nonces and keys are represented by natural numbers. 
　a message is a piece of information sent from one principal to another. a message consists of principals' names  nonces  keys  encrypted messages  signed messages  hashed messages  or a combination of these. it can be recursively defined in isabelle. 
 we define a number of functions and predicates. key functions map principals to their certain keys. function nonce of maps principals to their nonces. to determine whether a message is a part of another one  we introduce the function msg part. 
 the predicate know describes a principal's knowledge about a certain message. similarly  the predicate auth describes one principal's authentication state about another principal on a certain message  i.e.  whether the message is sent by the expected principal and is unmodified. 
 to describe cryptographic protocols  two action functions need to be introduced. one is send  representing that one principal sends a message to another principal. correspondingly  the other function is rcv  meaning that a principal receives a certain message from others. 
 our method is based on a number of assumptions  which are widely accepted by most researchers in this field. 
 we introduce a group of inference rules into the method to infer new knowledge from the old. all these rules can be divided into four categories: encryption/decryption rules  message combination/separation rules  sending/receiving rules and authentication rules. 
1 verifying needham-schroeder-lowe protocol mechanically 
to verify the needham-schroeder-lowe protocol  we first model it in our framework  then prove a number of important properties  and finally prove the security guarantees. 
 normally  the protocol can be formalised into three steps for all honest principals. the first step is an application of the send action function for sending a's nonce and name to b. the second step states that if the first step has been successfully carried out  principal b will correspondingly send a compound message consisting of a's nonce  its own nonce and name to principal a. similarly  the third step describes that if the second step has been successfully carried out  principal a will correspondingly send b's nonce back to principal b. 
　these steps are sufficient for honest principals  but not for the spy who does not necessarily obey the rules. therefore  we introduce four extra formulae. the first one is fake  stating that the spy may send messages it knows to others. another two formulae describe how honest principals respond to faked messages. the honest principals take the forged messages as protocol steps  and then respond them according to the protocol  as if they are legal messages. 
　to avoid interleaving attack  lowe introduced the receiving principal's name into step 1 of the protocol  lowe  1 . accordingly  we introduce the decline rule: if the name in the message is not the name of the sender  the receiving principal should decline the message and terminate the communicating session. 
　with above modelling  we first prove some properties before we prove the final guarantees for the two participating principals. 
　one of these properties is that if a principal knows a message m  and m1 is a part of m  then it should know the message m1 as well. due to the inductive definition of the data type message  we need to prove this lemma by induction. several subgoals have been produced after we apply the induction command. the subgoals concerning principal  nonce  key and encrypted  signed and hashed massages can be proved by using the implication introduction  conjunction elimination and conjunction introduction rules of higher order logic. for subgoals concerning compound messages  we design a rule to decompose and resolve them automatically. 
　the correctness of the needham-schroeder-lowe protocol relies greatly on the secrecy of the nonces used  and therefore the key point for proving the needham-schroeder-lowe protocol is to prove the secrecy of nonces. we have two lemmas  one stating that the spy will never see b's nonce  and the other describing that the spy will never see the content of the second protocol message  which is a compound message consisting of a and b's nonces and b's name. 
　we have to point out that the spy may intercept and know a's nonce. but it does not affect the secrecy of the second protocol message sent from b to a. 
　we now can prove the guarantees. the guarantee for b after step 1 is that b authenticates that a has sent b's nonce  encrypted by b's public key  to b and this message has not been modified by the spy. the first authentication rule is applied and three subgoals are produced. with above lemmas  these subgoals can be easily solved by isabelle. the guarantee for a can be similarly proved. 
1 conclusions 
in this paper  we have presented a new framework to prove the correctness of security protocols. we model the protocols and infer them by analysing principals' knowledge.   to improve the efficiency of security protocol verification  we implement our framework using isabelle. we have implemented all the data structures  functions  predicates  assumptions and inference rules in isabelle. with this implementation  we are able to prove the correctness of protocols mechanically. all the proving details are generated by isabelle  thereby saving users a significant amount of time. in addition  our framework also takes the cases concerning multiple interleaving sessions into consideration  making the method more powerful. 
　to show the effectiveness of our framework  we have used the needham-schroeder-lowe public key authentication protocol as an example. the example shows how to use the framework and its implementation. our implementation can prove the correctness of this protocol in a couple of seconds. additionally  most of the codes can be reused for similar applications. 
