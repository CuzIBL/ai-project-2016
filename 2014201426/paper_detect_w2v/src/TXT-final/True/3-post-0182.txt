ion
ugo galassi1  attilio giordana1  lorenza saitta1 and marco botta1
1universita¡ä amedeo avogadro  dipartimento di informatica via bellini 1/g  1 alessandria  italy
1universita¡ä di torino  dipartimento di informatica
c.so svizzera 1  1 torino  italy
{galassi  attilio  saitta} mfn.unipmn.it  botta di.unito.it

abstract
the presence of long gaps dramatically increases the difficulty of detecting and characterizing complex events hidden in long sequences. in order to cope with this problem  a learning algorithm based on an abstraction mechanism is proposed: it can infer a hierarchical hidden markov model  from a learning set of sequences. the induction algorithm proceeds bottom-up  progressively coarsening the sequence granularity  and letting correlations between subsequences  separated by long gaps  naturally emerge. as a case study  the method is evaluated on an application of user profiling. the results show that the proposed algorithm is suitable for developing real applications in network security and monitoring.
1 introduction
this paper addresses the task of discovering complex events  ces  occurring sparsely in long sequences. it is assumed that a ce is a partially ordered set of short chains  episodes  of atomic events  aes   interleaved with gaps  where irrelevant facts may occur. moreover  the presence of noise can make episodes hard to recognize. episodes are represented as strings of symbols  being a symbol the label assigned to an atomic event. in a recent paper  botta et al.  1   a method for automatically inferring a hierarchical hidden markov model  hhmm   fine et al.  1  from a database of sequences has been proposed. here  an improved version of the algorithm is applied to a non trivial application of user profiling in computer security.
1 user profiling
user profiling is widely used to detect intrusions in computer networks or in telephony networks. the possibility of automatically building a profile for users or for network services reflecting their temporal behavior would offer a significant help to the deployment of adaptive intrusion detection systems  idss   lee et al.  1 .
¡¡the experiments described in the following investigate the possibility of automatically constructing a user profile from the logs of its activity. the selected task consists in learning to identify a user from his/her typing style on a keyboard. the basic assumption is that every user has a different way of typing  which becomes particularly evident when he/she types specific words  or sequences of characters. the goal is not challenging the results previously obtained  bleha et al.  1; brown and rogers  1   but investigating the possibility of synthesizing automatically profiles from the activity logs. the specific application has been selected because the data are easy to acquire. in other words  if the methodology described so far succeeds in building up a hhmm for this kind of user profiling  it is likely that it will succeed in other cases as well. two experiments  described in the following subsections  have been performed.
1 key phrase typing model
in the first experiment  the goal was to construct a model for a user typing a key phrase  discriminant enough to recognize the user among others. a selected sentence of 1 syllables has been typed many times on the same keyboard  while a transparent program recorded the duration of each stroke  and the delay between two consecutive strokes. then  every repetition of the sentence generated a temporal sequence. four volunteers provided 1 sequences each  and  for every one of them  a model has been built up using 1 traces  for each user  as learning set. the four learned models have been tested against the remaining 1 traces. for each model ¦Ë and for each trace s  the probability of ¦Ë generating s has been computed using the forward-backward algorithm  rabiner  1 . then  s has been assigned to the model with the highest probability. the results reported only one commission error and two rejection errors  no decision taken   when a trace was not recognized by any one of the models.
1 text typing model
the second experiment addressed the more general problem of modeling a user during a text editing activity. a corpus of several paragraphs  selected from newspapers and books  has been collected. the total number of words was 1  and the number of typed keys 1. again  four users typed the entire corpus in several different sessions  without any constraint  in ordernot to modifytheir naturaltypingstyle. in this kind of application  a user model should be centered not on

figure 1: user profiling statistics. graphs  a    b    c  and  d  refer each one to a different user profile. the continuous line  pos  reports the scoring  measured in log odds  for the the sequences belonging to the profile. the dotted line  neg  refers to the sequences not belonging to the profile.
the specific words he/she types  but on the user typing style  which  in turns  depends on the position of the keys on the keyboard. therefore  a standard keyboard subdivision into regions  used in dactylography  has been considered. on this basis  keys have been grouped into 1 classes. in this way  transition from one region of the keyboard to another should be emphasized. afterwards  the sequences generated duringa typing session have been rewritten by replacing every character with the name of the class it has been assigned to. finally  long sequences deriving from an editing session have been segmented into shorter sequences  setting the breakpoint in correspondence of long gaps. the idea is that typical delays due to the user typing style cannot go beyond a given limit. longer delays are imputable to different reasons  such as thinking or changing of the focus of attention. in this way a set of about 1 subsequences has been obtained. for every user  a subset of 1 subsequences has been extracted in order to learn the corresponding model. the remaining ones have been used for testing. as in the previous case  the probability of generating each one of the sequences in the test set has been computed for every model. the results are summarized in figure 1  where the distribution of the scoring rate on the test sequences is reported for every model. the scoring rated is measured in log odds1. the continuous line  labelled  pos   represents the distribution of the scores assigned to the correct model  user   whereas the other one  labelled  neg   represents the distribution of the scores assigned to all other models  users   considered together . the sequences on the extreme left have been rejected. it is evident from the figure that sequences belonging to the model are well separated from the other ones. referring to the data in the test set  a monitoring system using the simple rule that  in a set of three consecutive sequences generated by a user at least two must have a score higher than '1'  would give a perfect discrimination of the legal user without rising false alarms.
¡¡it is worth noting that the results have been obtained as a
¡¡first shot  without requiring any tuning of the algorithm. this means that the method is robust and easy to apply to this kind of problems.
1 conclusion
an improved version of the algorithm  botta et al.  1  for inferring complex hhmm from sequences has been applied to a non trivial user profiling problem. even if this case study is just a preliminary investigation  the results are promising. in fact  the considered case is highly representative of many other similar problems found in intrusion detection systems  and the results show that hhmm is a suitable tool for building profiles. the methodology is effective  robust and easy to apply.
