propagation redundancy for permutation channels * 

c.w. choi and j.h.m. lee dept. of comp. sci. & eng. 
the chinese university of hong kong 
shatin  n.t.  hong kong sar  china 
{cwchoi jlee} cse.cuhk.edu.hk 
1 introduction 
finding a good model of a constraint satisfaction problem 
 csp  is a challenging task. a modeller must specify a set of constraints that capture the definitions of the problem  and the model should also have strong propagation. in other words  the model should be able to quickly reduce the domains of the variables of the problem  and the implementation of these propagators should be efficient  and the search space should not be too large. 
　a problem can be modelled differently from two viewpoints using two different sets of variables. in redundant modelling  cheng et al  1   we connect the two different models with channelling constraints  which relates valuations in the two different models stronger propagation behaviour can be observed. however  the additional variables and constraints impose extra computation overhead may outweigh the gain of reduction in search space. 
　in this paper we consider redundant models connected by permutation channels  which commonly arise when the underlying problem is some form of assignment problem. since each model is complete and only admits the solutions of the problem  each model is logically redundant with respect to the other model plus the permutation channel. in order to keep the benefits of redundant modelling without paying all the costs  we give a theorem which allows us to determine when we can eliminate constraints in the mutually redundant models that do not give extra propagation. due to space limitations  we state the theorem without proof. 
1 reasoning about domain propagation 
we consider integer constraint solving with constraint propagation and tree search. 
　an integer valuation is a mapping of variables to integer values  written let vars be the 
function that returns the set of variables appearing in a constraint or valuation. a constraint c defines a set of valuations solns{c  each mapping the same set of variables vars c . we 
   *we thank barbara smith and the anonymous referees for their constructive comments. the work described in this paper was substantially supported by a grant from the research grants council of the hong kong special administrative region  project no. cuhk1e . 
1 
　　　　p. j. stuckey dept. of comp. sci. & soft. eng. 
university of melbourne  1 
     australia pjs cs.mu.oz.au 
call solns c  the solutions of c. a constraint c is logically redundant with respect to a set of constraints c if  
　a domain d is a complete mapping from a fixed  countable  set of variables to finite sets of integers. a false domain d is a domain with d x  = for some x. a domain  is stronger than a domain i n  written 
is a false domain or for all variables x. the initial domain dinit gives the initial values possible for each variable  allows us to restrict attention to domains d such that 
d 	dinit. 
　we adopt the notion of propagation solver and domain consistency1 from schulte and stuckey . a propagator f is a monotonically decreasing function from domains to domains. a propagation solver for a set of propagators f and current domain d  solv f  d   repeatedly applies all the propagators in f starting from domain d until there is no further change in resulting domain. a domain d is domain consistent if d is the least domain containing all solutions of r in d. define the domain consistency propagator dom c  for a constraint c such that solv dom c   d  is always domain consistent for r. 
　for all domains  a set of propagator f1 is made propagation redundant by a set of propagators f   written  and is equivalent 
to fu written 	f1~f1  	if solv{fi  d  = solv f1 d . 
　it is well known that in general the domain propagation of a conjunction of constraints is not equivalent to applying the domain propagators individually. but there are cases where propagation of a conjunction is equivalent to propagation on the individual conjuncts. 
lemma 1 if c1 and c1 share at most one variable x  then {dom c1   dom c1 }  {dom{c1ar1 }. 
an atomic constraint is one of xi = d or xi  d where 
xi ♀ v and d is an integer. an atomic constraint represents the basic changes in domain that occur during propagation. 
　a propagation rule is of the form c  c where c is a conjunction of atomic constraints  c is an atomic constraint and  c. note our propagation rules are similar to the  membership rules  of apt and monfroy  except we allow equations on the right hand side. 
　a propagator / implements a propagation rule c each d  whenever  c  then r. 
'equivalently  hyper-arc or generalized arc consistent. 
poster papers 
　smith  first observes that the permutation channel makes each of the disequations between variables in either model propagation redundant. walsh  1   proves this holds for other notions of consistency. 
lemma 1  walsh  1   
　related to is the permutation channel function which is a bijection between atomic constraints in x to atomic con-
straints in y  	and 
       we extend to map conjunctions of constraints in the obvious manner  
　the fundamental theorem states that a constraint in y is propagation redundant if there exist a constraint in x when conjuncts with logically imply every propagation rules implemented by the constraint in y'. since is bijective  the theorem is valid when x and y are reversed. 

example 1 smith  suggests two ways to model the 
langford's problem as a permutation problem and how to combine them with the permutation channel. she points out that the so-called minimal combined model  which includes only x model and the permutation channel  gives as much pruning as the full combined model. this is proved in an ad hoc manner by choi and lee . we prove this formally using our generic approaches.1 

　　1 the complete description of the two permutation models for the langford's problem can be found in  choi and lee  1 . 
we have extend our approach to other types of channelling constraints and lead to significantly faster models that do not increase the search space. although we have illustrated the use of the theorems herein by hand  the approach can clearly be automated. we can constructs the propagation rules automatically using the approach of abdennadher and rigotti . we are interested in extending the work to reason bounds propagation. another direction is to study a weaker  notion of propagation redundancy which allows removal of constraints without affecting the search space given a specific search heuristic. 
