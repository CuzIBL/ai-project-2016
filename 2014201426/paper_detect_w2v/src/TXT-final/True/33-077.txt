 
an experimental system  aypa  for automatic 
yellow pages assistance is described. the system  which operates in the domain of automobiles  automobile parts  and related objects  reads the user's request in simple english  analyzes it and represents it in terms of the system's conceptual primitives. from this  the system tries to figure out the intent of the request and formulate a yellow pages query. it paraphrases the request back to the user in english and searches its data base for the relevant yellow pages categories. the system serves as a research vehicle for experiments with its various components and user interfaces. 
	l 	introduction 
   this paper describes an experimental system  aypa  for automatic yellow pages assistance. the system  which operates in the domain of automobiles  automobile parts  and related objects  reads the user's request in simple english  analyzes it and represents it in terms of the system's conceptual primitives. from this  the system attempts to infer the intent of the request and formulate a yellow pages query. it paraphrases the request back to the user in english and searches its data base for the relevant yellow pages categories. 
   we view this work as a research in natural language access to databases      1 . in order to provide natural language access to a database we have to create an extensive structure  external to the database  which can serve as a bridge between the concepts used by people in talking about the items in the database and the 
database organization. 
   the program aims at performing the following type of interaction with the user: 
user: my windshield is broken  help. 
aypa: i understand that you want to replace the windshield in your car. where are you located  user. hamilton and stuyvesant in springfield. 
aypa: mere are some establishments near you that might be able to help you: 
* the work described in this document was performed while the author was at bell laboratories  murray hill  n.j. 1. 1. al dubin auto & plate glass works: 1 stuyvesant av.: 1 
1. allstate glass co.: 1 hamilton blvd.: 
1 
let us analyze the kinds of  intelligence  aypa must have in order to produce the above behavior. first  it has to extract from the user's request that the user has a car  and that the windshield in this car is broken. second  aypa must infer that the user wants to replace the windshield. we call this kind of processing request analysis. request analysis requires:  1  an ability to extract information out of natural language input and express it in some language independent representational system;  1  knowledge about objects and actions and their relationship  e.g.  the knowledge that windshields are car parts made out of glass  that glass parts are not repaired but replaced  etc. ;  1  knowledge about the intentions of yellow pages users  e.g.  if the user informs the system that he has a damaged item  he probably wants to repair it   and finally   1  the inferential capabilities to reason about the user's intentions. 
   at the second stage of request processing  which we call request answering  the system must be able to fin the relevant entries in the yellow pages and select some that are in the vicinity of the user. 
ii the knowledge ba1e 
aypa uses the new york telephone manhattan 
yellow pages data base in which entries for individual businesses are grouped into categories such as:  automobile dealers.-new cars   or  glass-
automobile  plate  window  etc.-dealers.  each entry contains the name of the business establishment  its address and its phone number. each category has an identifying number  e.g  av1 is  automobile dealers-new cars .  
   aypa's semantic and pragmatic knowledge is stored in the form of a hierarchical associative network which we call ypnet. a fragment of this net is shown on 
fig. 1. 
   the core of the net consists of nodes which represent generic concepts such as *car  'person  
 repair  etc.  and links which define the relationship 

1 


among concepts in aypa's world. there are two major kinds of links in ypnet: vertical  hierarchical  
and horizontal  associative . vertical links represent the hierarchical organization of the nodes in the net. the vertical links are the usual ones: isa  is a  which goes from a more specific concept to its generalizations  and ref  refinement  link which goes from a general concept to its refinements  1 . 
   every node in ypnet is considered to be a frame with various attributes. for example  'repair has attributes actor and object. the actor of  repair must be a 'person and is called a repairman with a corresponding node 'repairman. horizontal links in ypnet link frames and their attributes. 
   information contained in the network is used by aypa in four ways: 
  retrieval of an item from the net  e.g.  actor of 'repair . 
  verification of a predicate  e.g.   is a mechanic a person    i.e.   isa 'mechanic 'person  = 
true or false . 
  finding a concept which relates two given concepts  e.g.  'carrepair relates 'car and 'repair . this is used heavily in the language analysts. 
  finding the nearest concept with a given property. for example  finding the nearest concept which corresponds to a yellow pages category. 
i l l request analysis 
   request analysis begins with a process which takes a natural language sentence and produces an expression representing its meaning. we call it conceptual analysis 1 . we use a modified version of conceptual dependency  cd  notation l1| as our representational system  using primitives from aypa's knowledge base. 
   the conceptual analyzer used in aypa is written in the general framework described in  1 . it is a dictionary-based production-like system. this is essentially a rule-based system with rules dynamically assembled from information contained in the dictionary  syntactic frames  and most importantly  ypnet  which is the repository of the system's semantic and pragmatic knowledge. 
a. immediate inferences 
consider the following example: 
my windshield is broken. i have a 1 ford. 
having analyzed a sentence  aypa activates all the inference rules indexed by the head of the conceptual expression. there are two rules stored under the concept 'damage which underlies such verbs as  to brc k    to dent   to smash   etc. their content can be paraphrased in english as: 
rule la: if i  the physical state value of an object is equal to -1  damaged  and 1  the user's goal has not been asserted 
then assert the user's goal to repair the object. 
rule lb: if i  the physical state value of an object is equal to -1  destroyed  and 1  the user's goal has not been asserted 
then assert the user's goal to replace the object. 
thus  aypa tentatively asserts that the user wants to repair his broken glass-autopart.  this goal will later be changed to  replace .  if a different goal is explicitly mentioned later  it will replace this one. 
b. goal finding end sharpening. 
   when all of the user's request has been read  aypa goes to the next stage which we call goal finding. at this stage  the system checks if the user's goal has been asserted at the input stage and if it hasn't  aypa tries to infer it using its general rules for inferring the user's goal. there are several such rules and here is one example: 
rule 1: if 1  there is a physical object in the short term memory not controlled by the user 
then assert the user's goal to buy the object. 
controlled in the above rule means either owned. rented  or occupied. if the user simply says:  car   aypa  using rule 1  will assume that he wants to buy a car. if the user says:  my car   aypa will not assume that he wants to buy a car since he already has it. 
   after the goal-finding stage  the system has a 
   conceptual expression representing the system's idea of 

1 

the user's goal. this expression may still be too general by comparison with the user's real goal. for example  when the user says:  1 want a car  the system asserts that the user's goal is to control  buy or rent  a car. if the user says:  i need a garage  the system asserts that his goal is to control a garage. in reality  the first request usually means buying while the second renting. we could ask the user for clarifications at this point  but this may be annoying especially when the circumstances and the object strongly imply a preferred way of controlling it. thus  we need another stage of request processing which we call goal-sharpening. this is done by activating the goal-sharpening rules stored under the conceptualization heads. 
c. goal-elaboration. 
   having found and sharpened the conceptual expression that represents the system's idea of the user's goal  aypa goes into the last stage of request analysis which we call goal elaboration. at this stage  aypa goes through all the concepts in the goal conceptualization and tries to fill the remaining gaps in them. consider  for example  the following request: 
   my carburetor is broken. i have a 1 ford fairmont. 
the system decides that the user wants to repair a broken carburetor but  before the goal-elaboration stage  it did not associate the carburetor and the user's fairmont. since there were no other cars mentioned  
aypa assumes that the broken carburetor is a part of the user's fairmont. 
goal elaboration ends the request analysis stage. 
now the system expresses in english what it thinks the user's goal is and goes into the request answering stage 
iv request answering 
   answering a user's request may be a complicated process which requires both specific knowledge about information organization of the yellow pages  and  normal  pragmatic inferences  for example:  if you want to find an object part and do not find it  try to find the whole object.  the yellow pages categories cover the world in a patchy and inconsistent way. for example  the yellow pages user who wants to repair a carburetor should know that the category associated with a car part is relevant to both buying and repairing of the part and look under  carburetors . this information is implicit in the assumed model of interaction between the user and the yellow pages and must be made explicit if we want to use it. this is not limited to car parts. implicit assumptions are made about nearly every yellow pages category. businesses and professionals arc assumed to perform actions usually associated with them  physical objects are assumed to be repaired  bought  sold  or rented. we have made these assumptions explicit by attaching specific search rules to the concept nodes and to the user's goals. 
v some facts and conjectures 
   the work described in this document was an experiment in trying to identify the knowledge needed for an intelligent yellow pages assistant. the program was used as a vehicle for experiments with various algorithms of conceptual analysis  associative network organization and searches  and user interfaces. the network consists of 1 concept nodes  1 of which have yellow pages pointers. the total number of links is 1. 
the natural language part has a vocabulary of about 1 words. this is a long way from a full-scale yellow pages assistance system which would require 1 categories. however  although we have experimented with a very small fraction of the yellow pages  about 1%   we have almost completely covered the area of auto buying and repairing. there is no reason to think that other parts of the yellow pages would give a significantly greater branching factor for the network. 
   the natural language part is by far the most difficult and critical in the whole project. however  its development crucially depends on the development of the associative network since the language analyzer takes most of its information from there. in fact  we have experimented with an interface which knows next to nothing about english syntax but combines the meanings of the words in the user's requests directly using the network. this produced an imperfect but very usable interface which we used for testing the network itself. 
