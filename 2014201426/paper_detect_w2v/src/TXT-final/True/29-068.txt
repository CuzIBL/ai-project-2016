 
this paper presents a technique  called genh  that automatically generates search heuristics for scheduling problems. the impetus for developing this technique is the growing consensus that heuristics encode advice that is  at best  useful in solving most  or typical  problem instances  and  at worst  useful in solving only a narrowly defined set of instances. in either case  heuristic problem solvers  to be broadly applicable  should have a means of automatically adjusting to the idiosyncrasies of each problem instance. genh generates a search heuristic for a given problem instance by hillclimbing in the space of possible multi-attribute heuristics  where the evaluation of a candidate heuristic is based on the quality of the solution found under its guidance. we present empirical results obtained by applying genh to the real world problem of telescope observation scheduling. these results demonstrate that g e n h is a simple and effective way of improving the performance of an heuristic scheduler. 
1 	introduction 
employing heuristic methods to solve intractable constrained optimization problems like scheduling often suffers from narrowness in the range of problems to which they can be effectively applied. to overcome these limitations  researchers have sought to develop more adaptive approaches to problem solving; e.g.   gratch and chien  1 . adaptive heuristic problem solving delays the selection of an heuristic strategy until some information can be obtained with respect to which strategy is expected to perform most effectively in solving a problem instance or class of instances. for problems which require a solution to satisfy a set of constraints  the  best  heuristic is typically one which is expected to allow the problem solver to most efficiently converge on a solution. for example  the approach exemplified by soar  laird  et a/.  1  uses traces of past problem-solving efforts to refine heuristics in order to speed up the search for a solution. however  other criteria besides problem 
planning and scheduling 
solving efficiency for heuristic selection are possible. for scheduling and other constrained optimization problems  quality of solution may be a more crucial metric with which to compare and select heuristics. 
　this paper proposes a technique  genh  for automatically generating heuristics for solving scheduling problems. g e n h generates a search heuristic for a given problem instance by hill-climbing in the space of possible multi-attribute heuristics  where the evaluation of a candidate heuristic is based on the quality of the solution found under its guidance. genh has been successfully applied to the problem of scheduling telescope observations using the associate principal astronomer  or apa  drurnmond  et a/.  1   a system developed at nasa ames research center. given a set of telescope observation requests supplied by the user of the apa  genh solves the problem instance using several  versions  of the apa scheduler  where the versions differ only in the search heuristic employed. adding genh to the scheduling process incurs acceptable computational overhead  is accurate  i.e.  converges to a better solution more often than previously employed techniques   robust  solves a wide range of problem instances   sim-
ple  is based on a simple algorithm easily integrated into the scheduling process   and potentially generalizable to other problem domains. following a brief summary of the problem domain and the apa scheduler in section 1  we present a description of the genh method  section 1  and a summary of experimental results  section 1 . we then discuss related research  section 1   future research  section 1  and conclude  section 1 . 
1 	telescope observation scheduling 
the input to the apa observation scheduler is a set of requests  expressed using the automatic telescope instruction set  or atis   boyd  et a/.  1 . each request is composed of a sequence of telescope movements and instrument commands  as well as scheduling constraints and preferences. an observation request is said to be enabled on a given night if all its constraints are met. the enablement intervalis the duration of enabled time for a request. the enablement interval is determined by the observation season  as well as factors such as position of the moon on a particular night. for further details on this domain  see  bresina  et a/.  1; drummond  et a/.  1 . 
　the atis standard also specifies an heuristic dispatch policy which can be used to select the next observation to execute. the policy is expressed as four selection rules: priority  number-of-observations-remaining  nearest-to-end-window  and file-position. the rules are applied in the sequence given to the currently enabled observations; each rule is used to break ties that remain from the application of those that preceded it. if the result of applying any rule is that there is only one group remaining  that group is selected for execution and no further rules are applied. since there can be no fileposition ties  the dispatch policy is deterministic. 
　atis dispatch is a robust scheduling method that has been used fairly successfully for several years to schedule automatic photoelectric telescopes at fairborn observatory before the development of the apa.  see  henry  
1  for a performance evaluation of atis dispatch.  the dispatch decisions are determined purely locally  without look-ahead; by contrast  the apa uses a searchbased scheduler  for apa scheduler details  see  bresina  et al  1; edgington  et ai  1  . 
　the scheduler's search space is organized chronologically as a tree  where the root node consists of the world model state at the beginning of the night. each arc out of a search tree node represents an enabled request. the purpose of the search heuristic in the apa scheduler is to determine which of the enabled requests to select to extend a partial schedule. in the experiments conducted here  selection is  greedy ; i.e.  the schedule extension with the lowest  = best  heuristic score is chosen. because each extension of a partial schedule is feasible  there are no failure nodes. the task of the apa scheduler is to find a sequence of observations that achieves a good 
score according to the user-defined objective function. 
　because the apa scheduler does not employ backtracking in its search for a schedule  it is not relevant in evaluating heuristics to compare the computational cost incurred  i.e.  number of states expanded ; differences in the cost of applying different heuristics are marginal. hence  in our experiments the sole performance metric is in terms of schedule quality according to the domainspecific objective function. in collaboration with astronomers  we defined the following three objective function attributes which describe preferred characteristics of telescope observation schedules. 
1. airmass quality. measured in terms of where in the sky the observations were taken. closer to the meridian means lower airmass  hence better observation conditions; closer to the horizon means higher airmass. 
1. conformity to  season track . roughly  a season track is an ideal  path  of movements a telescope should take through the night from west to east. this is expressed as a mapping from local time to telescope pointing angle. 
1. priority. it is usually impossible to observe all the requests on a given night  so prefer observing the more important request  i.e.  those with lower priority numbers . 
in the experiments reported here  the objective function used to evaluate complete schedules is the weighted summation of these three attributes  with each attribute assigned an equal weight of 1. the attribute values were first scaled  so that equal weighting does imply equal importance within the objective score. 
　as with the objective function  a search heuristic used by the apa scheduler is based on a set of attributes  
 for the experiments conducted here  
this set contains the three objective function attributes listed above  as well as the following two attributes which were derived from the second and third rules of the atis dispatch policy. 
1. fewest runs. prefer requests that have been observed the least number of times - a fairness issue. 
1. least time left in enablement window. prefer requests whose enablement interval is smallest  in particular  those requests that are about to become unobservable for the rest of the night. 
　for each attribute  there is a domain wa   of possible weight assignments. in this application  each wa  is the real unit interval  1 . an heuristic is the weighted summation  as in the objective function  the attribute values are first scaled. the space of possible heuristics can be viewed as the  uncountably 
infinite  set  hence  exhaustive search of this space is impossible. 
1 	the genh technique 
genh adds to the apa the capability of selecting an effective search heuristic based on the specific characteristics of a problem instance. the input to genh consists of an objective function  the set ah of heuristic attributes  an observing night  and a set of requests that are enabled sometime during that night. the output from genh is the best heuristic found as the result of a search through the space of heuristics defined by ah- genh employs a hill-climbing approach to conduct a focussed exploration of sh the following factors control this search: 
1. a seed to initialize the search; 
1. a tuning procedure  based on a weight adjustmentfunction; and 
1. a termination 	condition. 
　the pseudo-code for a generic genh heuristic selection algorithm for observation scheduling based on these factors is displayed in figure 1. first  genh initializes a seed heuristic as a  head start  for hill-climbing. the algorithm then iteratively tunes the heuristic by conducting a hill-climbing search through sh  always selecting the best improvement to the currently best heuristic  besth. the procedure select adjustments generates candidate improvements  and the procedure bestscore selects the best improvement from these candidates. 
	morris  bresina  & rodgers 	1 
input: r  set of observation requests; ah  set of heuristic attributes; ob  objective function. 
output: besth  best heuristic found begin besth = seed ob a r   bestscore {besth}  r  ob  besth  score ; initialize boundary variables; until some boundary condition is exceeded do h = select adjustments besth ; bestscore h  r  ob  h  bestscore ; if bestscore   score then 
score = bestscore  besth = h; endif 
reset boundary variables; 
return besth end 
figure 1: genh heuristic selection algorithm 
　the result of a single call to select adjustments is a set h of candidate heuristics formed by adjusting the weights of different subsets of besth's attributes. the procedure bestscore has input variables comprised of h  r  a set of requests  problem instance   and ob  a userdefined objective function. for each candidate heuristic  bestscore invokes the a pa scheduler to find a schedule via greedy heuristic search. each resulting schedule is scored using the objective function  ob  and bestscore returns the best scoring heuristic  h  among the set of candidates along with its score  score. if the returned h is an improvement over the current best heuristic  i.e.  score is better than bestscore   then h becomes the new besth and the improvement process is repeated. 
　the termination condition for g e n h is determined by boundary conditions  chosen empirically  for a set of global variables. one boundary variable establishes the size of the weight adjustment in the tuning algorithm. this value is decremented until some limit is reached. 
another pair of variables establish the upper and lower bounds of possible weight values of attributes. the interval defined by these bounds shrinks during genh's search. eventually  a condition is reached in which tuning produces no changes to the value of besth  at which time boundary variables are reset to exceed their limits  whereupon the algorithm terminates. 
　in the remainder of this section  we discuss the seed selection and weight adjustment modules of this algorithm in more detail. it has been noted that the ability of hillclimbing algorithms to produce good solutions seems to depend upon the ability to provide a good  head start  on hill climbing. this is achieved using a pre-processing stage to produce an initial assignment which is  close to a solution   morris  1 . we isolated the seed selection component of g e n h and empirically investigated different methods for selecting a seed heuristic. here we only discuss the one method used in the experiments reported in section 1. 
planning and scheduling 
　this seed method roughly  mirrors  the weights assigned in the given objective function. the intuition behind this approach is that applying the objective function to a partial schedule is a reasonable predictor of the score of the complete schedule. one potential drawback is that attributes which are more  global   e.g.  schedule fairness  tend to not perform as well a local heuristic; however  such attributes should get weeded out during the weight adjustment phase. 
　in this seed method  those candidate heuristic attributes in the objective function are initially assigned the same weights as in the objective and the additional attributes are initially assigned a very low weight. these initial weight assignments are then normalized so that they sum to 1. this requirement that weights sum to 1 is also maintained during the weight adjustment phase. this constraint is not imposed by the apa scheduler; rather it was applied here simply to avoid redundancy in the exploration of sh   
　a weight adjustment method systematically adjusts values to a weight vector we sh in the direction that most improves the performance of the scheduler. the ad-
justment mechanisms that we have explored are inspired by optimization methods in operations research  in particular  by methods for selecting multipliers for solving lagrangian relaxation problems  fisher  1 . as with seed selection  we empirically investigated a range of ad-
justment methods which vary in the size of the heuristic search space explored; however  here  we only define the one used in the reported experiments. 
　this robust tuning method generates a candidate improvement to besth by adjusting the weights on a pair of attributes  increasing one and decreasing the other. hence  with this method  a single call to select adjustment returns a set of a x  a - 1  candidates. the size of each weight adjustment is determined by the values of the boundary variables  which diminish rnonotonically as the method is applied. the result is that as better heuristics are found  smaller regions of sh around besth are explored. eventually  no significant changes are made to the currently best heuristic  at which point the search terminates. 
　there is no guarantee that this weight adjustment method ever eventually converges to an optimal heuristic; however  the next section demonstrates that this tuning method works well in practice over a wide range of problem instances. 
1 	experiments with genh 
experiments were conducted to test the hypothesis that automatically adapting the heuristic to the problem instance with g e n h will result in higher quality solutions than scheduling with a fixed heuristic approach. genh's heuristics were pitted against the atis dispatch policy  and they were pitted against using the objective function as the search heuristic. the reason for the former comparison is that for this application  atis dispatch is the gold standard; the reason for the latter comparison is 


figure 1: performance improvement of g e n h over atis dispatch  at left  and over the objective function as a greedy search heuristic  at right . improvement is measured in terms of the standard deviation of each jd's qdf. 


figure 1: the standard deviation of each jd's qdf  based on the objective function scores of 1 randomly generated schedules; these are used in figure 1 to express the performance improvement. 
that using the objective function as the greedy heuristic is a standard approach to try in a search-based system. 
　the apa system maintains an extensive log of previous scheduling problem instances; this database was used for empirical evaluations of different versions of genh. the experiments reported here test the one genh version described in the previous section and use a set of sixty problem instances over the interval of days  expressed as julian dates  jds    1 . this allows for a range of problem characteristics in the test suite due to changes in the stars' relative positions  as well as in the phase and location of the moon; hence  they are sufficient to challenge the adaptive capabilities of genh. 
　the results of these comparative analyses are shown in figure 1. if we express performance improvement in terms of the difference between the objective function scores  then it would be difficult to interpret the significance of the improvement. to overcome this problem  we employ the expected solution quality  esqj methodology  bresina  et al  1  and express the improvement on a jd in terms of the standard deviation of that jd's quality density function  qdf . a qdf is a statistical 
estimate of the expected density of schedules within different quality ranges and is based on the objective function scores obtained via iterative sampling. the qdf standard deviation measure better indicates the significance of the improvement  and also takes into account the varying  relative  problem difficulty over the set of instances. for our experiment  each jd's qdf is based on 1 randomly generated schedules; figure 1 plots the standard deviations of the sixty qdfs. 
   from the left plot in figure 1  it is clear that greedy search with genh's heuristics outperforms atis dispatch. the right plot shows the comparison between using a fixed heuristic  the objective function in this case  versus adapting the heuristic for each problem. furthermore  since the seeding method used in these experiments starts genh's search with an heuristic very close to the objective function  the plot also illustrates the amount of improvement that the tuning method was able to achieve. only on five of the sixty problems was genh unable to make any improvement upon the objective function as a greedy heuristic: the consecutive jds  1 . on ten of the problems  genh makes a substantial improvement of over 1 qdf standard deviations. 
　figure 1 illustrates the heuristics generated by genh by plotting each attribute's assigned weight for the sixty problems. as is clear from the five plots  there is significant variance in the heuristics considered best by genh  indicating that genh did find relevant differences in the characteristics of the problem instances. 
　although these results cannot be used to infer that genh produces optimal schedules for the telescope observation problem  the results confirm that automatic adaptation of the scheduling heuristic for each problem improves the quality of schedules over non-adaptive ap-
	morris  bresina  & rodgers 	1 


figure 1: the heuristics generated by gen h illustrated by the weights assigned to each of the five candidate attributes. 
planning and scheduling 

proaches for this domain  which was the primary purpose of these tests. 
　genh is easily integrated into the apa system as a preprocessing module. furthermore  adding genh to the scheduling process is not prohibitively costly; we found that the particular version of genh presented here took five to ten minutes to terminate. 
1 	related research 
genh resembles systems such as palo  greiner and jurisica  1  which contain a mechanism for modifying a problem solver based on experience obtained from previous activity. the palo algorithm incrementally produces a series of problem solvers  called problem elements or pes  such that each element of the series is statistically likely to be an improvement over its predecessors over an ensemble of problems. pe selection is accomplished via a hill-climbing search in which candidates are evaluated using a performance cost function. 
　composer  gratch and chien  1  uses statistical hill-climbing to explore a space of heuristics. a candidate heuristic is adopted if it increases the expected performance of solving problems over a suite of problems. the adaptive version of the hybrid scheduler lr1  incorporating both integer programming and constraint propagation  settles on a particular combination of heuristics after a training period. a utility function assigns positive values to heuristics that minimize computational effort. 
　the g e n h algorithm also bears a resemblance to the family of local search algorithms  also known as repair search or iterative improvement  for solving constraint satisfaction problems  csps  and optimization problems  minton  et al.  1; morris  1 . local search algorithms explore the space of candidate solutions  sometimes including invalid solutions  by performing local modifications to the current solution. at each step  the local solution modification that results in the greatest cost reduction  with respect to the given cost function  is selected. this process continues until a solution is reached in which no local changes can reduce the cost further. with g e n h   of course  the goal is not to solve the problem  but rather to select an heuristic with which to subsequently solve the problem. 
1 	future research 
a number of refinements to g e n h are planned. at the time this work was carried out  the apa scheduler used a deterministic greedy search; this same scheduler search strategy was used in genh to evaluate candidate heuristics. however  more recently  the scheduler's search strategy has been modified to incorporate heuristic-biased stochastic sampling  or hbss   bresina  1 . hbss stochastically explores the search space in the  neighborhood  of the greedy solution. the balance between heuristic adherence and exploration in hbss is parameterized by specifying a ranking function and a bias function. at each decision point during search  these functions are used to assign selection probabilities to the different choices; a weighted stochastic selection is then made according to these probabilities. by varying these functions  hbss encompasses a family of search algorithms of which greedy and random search are extreme members. 
　the current version of the apa scheduler first generates a schedule via atis dispatch  then performs a number of samples of hbss; each sample generates a schedule. the best schedule found during these two search phases is then communicated to the telescope controller for execution. the evaluation metric for candidate heuristics used by genh should be correlated with how the heuristic is used during solution search. we plan to compare  in terms of apa scheduler performance  genh's current evaluation metric based on greedy search with one based instead on  greedy sampling . greedy sampling is an instance of hbss in which all the choices tied with respect to the best heuristic score are assigned equal selection probabilities and all other inferior choices are assigned a zero selection probability. hence  at each decision point  a random selection is made among the equally best choices. 
1 	concluding remarks 
this paper has presented genh  an approach to adaptive problem solving in the telescope observation scheduling domain. genh adapts to the idiosyncrasies of a given problem instance by generating an effective scheduling heuristic. genh performs a hill-climbing search through the space of possible heuristics using a series of local modifications to a seed heuristic. an innovative aspect of this work is the attention paid to user-defined  solution quality-based measures of heuristic performance  rather than performance measures based on search time to a solution. during genh's search  each candidate heuristic is evaluated by employing the heuristic to find a schedule and then scoring the resulting schedule with the user-defined objective function. 
　the research that led to genh was initially motivated by the idea that the role of a domain expert should be limited to constructing the domain-specific objective function; by contrast  the task of constructing the search heuristic is more appropriately performed by the system that generates the schedules. before genh  it was up to the user to carry out a  generate and test  exploration in the space of heuristics in order to find a satisfactory one. this is a time-consuming and difficult process  one that the user was not likely to repeat very often. however  as evidenced by the empirical results presented above  the heuristic that performs well for one day's scheduling problem may not do so well for the next one. 
　genh represents progress in the automation of the schedule optimization process. experiments conducted using genh in the telescope observation scheduling domain demonstrate significant improvements over scheduling without adaptive heuristic selection  with little computational overhead incurred. 
	morris  bresina  & rodgers 	1 

acknowledgments 
thanks to mark drummond  will edgington  and keith 
swanson for their assistance with the a pa and for their support of the work reported here. thanks also to john allen and lina khatib for helpful comments. 
　the first author was supported by the nasa-asee summer faculty fellowship program. the third author was supported by a nasa-ames research center summer student fellowship. 
