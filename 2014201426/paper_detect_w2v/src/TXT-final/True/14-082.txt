 
　　　formal d e f i n i t i o n s of data structure mappings are given and are used to transform r e l a t i o n a l algebraic formula into data base access procedures which search a formally defined data structure. especially  a h i e r a r c i c a l data structure is introduced to represent a set of relations which are inherently h i e r a r c h i c a l . a r e t r i e v a l procedure using data accesses along a two level hierarchy is obtained from an o r i g i n a l formula on f l a t relations by applying equivalence transformation rules and data representation mappings. 
1. introduction 
　　　during the latest decade  data base theories and data structure theories have been developed independently. in data base area  much research has been concentrated on r e l a t i o n a l data base theories. as far as query processing is concerned  many logical query languages as well as deductive query evaluation systems have been proposed. query optimizations and processing based on r e l a t i o n a l algebla have also been investigated by many researchers. 
　　　on the other hand  theoretical researches on data structure have been developed in the f i e l d of program correctness studies  hoare 1 . recently   hansson 1  developed a framework to formally define data structures and prove correctness of programs manipulating them. 
　　　in t h i s paper  we w i l l combine the above two theoretical approaches and put them in a framework of data abstraction theory. namely  we regard relations as objects of an abstract data type and r e l a t i o n a l algebra as i t s associated operations. furthermore  we formally define data structures and represent relations by them. our f i n a l goal is to transform r e l a t i o n a l algebraic query formulas into data base access procedures which search the defined data structures. especially  we consider to represent a set of relations which are inherently hierarchical by a hierarchical data structure. we show that a r e t r i e v a l procedure using data accesses along a two level hierarchy can be obtained from an o r i g i n a l formula on f l a t relations by applying equivalence transformation rules and data representation mappings. 
1. relation and relational algebra 
　　　f i r s t   we define the r e l a t i o n a l data base formally. 
d e f i n i t i o n let d l   . . .   d n be n domains  not necessarily d i s t i n c t   of elements and a l   . . .   a n be n i d e n t i f i e r s which are associated with d l   . . .   d n respectively. a r e l a t i o n r on the set of i d e n t i f i e r s { a l   . . .   a n } is a subset of the cartesian product dl x. x dn ai is called an a t t r i b u t e of the r e l a t i o n r. the r e l a t i o n r on the a t t r i b u t e set { a l   . . .   a n } is denoted by 
r   a l   . . . a n   . 
　　　we use a  b   . . . for a single a t t r i b u t e and x  y   . . . for a set of a t t r i b u t e s  including the n u l l set . 
d e f i n i t i o n a r e l a t i o n type r a1 ... an  on the a t t r i b u t e set { a l   . . .   a n } is a set of a l l relations on the set { a l   . . .   a n } . 
　　　a r e l a t i o n r al ... an  is an element of the r e l a t i o n type ir a1 ... an . a conceptual schema which determines the logical data structure is defined by a set of r e l a t i o n types. in t h i s paper  we regard hierarchical data organizations to be matters of internal schema  which determine the physical data structure. 
　　　fig. 1 shows an example of a r e l a t i o n a l data base where the conceptual schema is the set {emp emp  l o c     room roora#  s e c t   } . 
　　　next  we define the r e l a t i o n a l algebraic operations    codd 1    reiter 1     . 
d e f i n i t i o n let r a x  be a r e l a t i o n . then  the projection ii of r with respect to a is a r e l a t i o n given by the equation 
	ii  r  	= 	x:ez  z x  e r } 
a 
where 	% 	represents 	the 	sequence 	of 	values 

1u 

　　　fig. 1 displays the logical structure of the data base given in fig. 1. this diagram is a backman diagram and uses arrows to indicate one-to-many mappings   backman 1  . one-to-many mappings correspond to hierarchical relations and the arrows represent the access paths in hierarchical data bases; namely  subordinate data are retrieved by specifying the superordinate data and the access path between them. 
     fig. 1 shows an example of a concrete tree structure which has the logical structure given in fig. 1. traversal from the root node in fig. 1 corresponds to retrieval along access path  a  in fig. 1. given a piece of section information  we select an appropriate arc and follow it to reach the set of roora#'s which belong to the section. 
　　　let us assume that each set of room#'s forms a relation distinctively. we denote a set of room#'s under the selector  sect = ai  as room.ai room# . this relation can be defined by a selection followed by a projection as follows: 
room.ai room#  
		  1 - d 
     if we regard ai to be a variable  then the above formula defines any relation under any selector. 
1 

1 


1 


1 

1.concluding remarks 
　　　in t h i s paper  we have represented a set of subrelations by a formally defined l i s t structure and generated a data r e t r i e v a l procedure which manipulates the structure given a higher level r e l a t i o n a l algebraic query formula. 
　　　the idea that we represent relations instead of tuples or values in tuples is closely related to the data abstraction concept. we do not care the detailed structure of each r e l a t i o n   which is another lower level problem to be solved separately. 
　　　we also have shown that during the transformation of relational algebraic formulas into data structure manipulation procedures  simplifications due to the structure are performed. we think t h i s s i m p l i f i c a t i o n process is very important in data abstraction theory. 
　　　 yonezawa 1  has attacked a similar problem to ours in the frame of f i r s t order logic. yonezawa has achieved a very neet method to generate recursive procedures for recursively defined queries. 
　　　further consideration is needed to see whether our methods can be applied to the recursive case or not. we also plan to apply our methods to the network case. 
acknowledgement 
　　　the auther is grateful to drs. osamu i s h i i and akio tojo for the opportunity to make the present study and to the staffs of the information systems section and especially to dr. akinori 
yonezawa of tokyo i n s t i t u t e of technology for their stimulus and helpful discussions. 
reference 
1.  backman 1  backraan  c. 	w. 	 data 	structure 
diagrams   database  acm sigbdp newsletter   1   1   1  1. 
1.  codd 	1  	codd  	e. 	f. 	 relational 
completeness 	of 	data 	base sublanguages   in data 
base systems  ed. r. rustin   prentice-hall  1  1. 
1.  furukawa 1  furukawa  k.  on i n t e l l i g e n t access to data bases   etl research report no. 1  1   i n japanese . 
1.  hansson 1  hansson  a. and tarnlund  s. a.  a natural programming calculus   proc. sixth ijcai  1  1. 
1.  hoare 1  hoare  c. a. r.  proof of correctness of data representations   acta informatica 1  1  1. 
1.  reiter 1  reiter  r.  on closed world data base systems   in logic and data bases  eds. h. gallaire and j. minker   1  1. 
1.  yonezawa 1  yonezawa  a.  a method for synthesis of data base access programs   research 
report no. c-1  department of information science  tokyo i n s t i t u t e of technology  1. 
1 
