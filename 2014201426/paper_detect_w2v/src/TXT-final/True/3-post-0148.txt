 programs such as finite-state programs  which are expressive enough from the standpoint of theoretical computer science. moreover  to make our model checking system practically efficient  we use symbolic model checking techniques. thus  a finite-state program in our approach is represented in a symbolic way.
1 symbolic representation of interpreted bdi-agents
we formally define a  symbolic  finite-state program with n agents as a tuple p =  x 牟 x  而 x x1  o1 ﹞﹞﹞ on   where x is a set of system variables; 牟 is a boolean formula over x  called the initial condition; 而 is a boolean formula over x ﹍ x1  called the transition relation; and for each i  oi   x  containing agent i's local variables  or observable variables. given a state s  we define agent i's local state at state s to be s ﹎ oi. we may associate with p an interpreted system ip =  r 羽  called the generated interpreted system of p.
﹛for convenience  we may use p 牟 而  to denote a finitestate program with n agents  x 牟 x  而 x x1  o1 ﹞﹞﹞ on   if x and o1 ﹞﹞﹞ on are clear from the context. given a finite-state program p 牟 而  with n agents  we define an agent's internal program  over p 牟 而  as a tuple 牟1 p 牟1 p 牟1 牟 牟 ＿ 而 而 for j = 1 1
an agent's internal program is exactly related with an agent's mental state. thus  we define a  symbolic   bdi-program with n agents as a tuple pa =  pk p1 ﹞﹞﹞ pn   where pk is a finite-state program with n agents and for each agent i  pi is agent i's internal program over p. we use ipa to denote the corresponding interpreted bdi-system.
1 model checking obdi logic
theorem 1 given	a	bdi-program	with	n	agents
pa	=	 pk p1 ﹞﹞﹞ pn  	suppose	that	pk	=
 x 牟 x  而 x x1  o1 ﹞﹞﹞ on  	and	for	every	i 
. then  for every ltl formula   and agent i  the following are valid in ipa 
 1. bi      x   oi  g p 牟1i 而1i     忙   牟1i 而1i  
 1. di      x   oi  g p 牟1i 而1i     忙   牟1i 而1i  
 1. ii      x   oi  g p 牟1i 而1i     忙   牟1i 而1i   where 忙   牟 而  is a boolean formula built from   牟 而 by using quantifications and fixed-point operations lft and gft.
﹛remark that theorem 1 provides a reduction of obdi to ltl  while proposition 1 in  su  1  gives an obddbased method of model checking ltl formulas. the complexity of our reduction of logic obdi to ltl is pspacecomplete. however  because quantifications of boolean functions and fixed-point operators can be dealt with in any obdd package  the reduction can be based on obdds. in fact  we implemented a prototype of the obdi model checker using cudd  a very influential obdd package developed by fabio somenzi  and achieved some preliminary experimental results.
1 concluding remarks
in this work  we have explored computationally grounded modal logics that characterize the internal attitudes of an agent-its beliefs  desires  etc  beyond s1 axioms and carried out a methodology on symbolic model checking for general bdi-agents.
