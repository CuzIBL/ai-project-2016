   language generation: the linguistics component 
david 1. mcdonald 
mit artificial intelligence lab. cambridge  mass. 1 
　　　speaking is the result of two processes: first  deciding what to say  and than  datarmining how that can ba said using a natural language  in this case english. the second is a linguistic process  which begins with intentional messages formed by the first process  adds audience and discourse information  and produces fluent  situationally appropriate english utterances as output. this note reports on a theory and program developed for that process  in particular  an english generation grammar  procedural lexicon  and translation process have been designed and implemented as the program mumble  which has been tested by replicating several existing programs improving their capabilities. this work was initially presented in . it has since been completed and is described in detail in  
capabilities: 
　　　using mumble has two principle benefits. 1  programs which incorporate it are freed from concern with the details of english grammar  thus simplifying their processing by allowing them to use whatever internal representation is most comfortable while they determine the content of what they should say - their message. 1  it becomes possible to use the constructions of fluent english in a general  theoretically motivated fashion. for example  mumble can select from the full range of nominal descriptions: from pronouns  through noun phrases with relative clauses  to nominalized clauses  depending on the program's intent and the current discourse context. mumble can employ sophisticated methods in constructing major clause structures: topicalization  extraposition  tag-questions  appositives  etc.. such methods are viewed as strategies for conveying particular intentions  such as degree of conviction or special emphasis  that go beyond the  standard  content of the clause. redundant phrases are dealt with automatically  by ellipsis  or by the dropping of obvious function words. strictly grammatical details are implemented automatically  such as the morphological distinctions between instances of the same relation in functionally different roles  e.g. modifier  principal relation  object of a predicate . 
characteristics of the design: 
　　　linguistically  language generation is seen as a process of translation from a message given in one representation - that of the speaking program - to the equivalent message represented in english. messages are taken as consisting of a set of intentional features and annotated pointers to the program entities the message refers to: objects  predicates  machine states  etc. the features encode the effects that the message is intended to have on its audience. several effects may be desired in the same message. for example  to  ask a question    express an assumption   and  describe e relation from one element's point of view   ere combined in:  the red block supports the green block  doesn't itr. much of of the linguistics component's skill consists of knowing how to simultaneously realize such sets of intentions as grammatical english utterances. 
         possible message elements  or their categories  are entered in a lexicon - the interface with each main program. the bulk of each entry is a procedure for constructing its english description. such procedures  called composers  can vary the descriptions they produce according to context in the message  linguistic restrictions derived from earlier decisions made during the translation  and the content of the discourse so far. this sensitivity is possible because the grammar - the possible constructions and syntactic configurations of the language - is designed as a collection of distinct entities/procedures which can be annotated by conditions on their use  and reasoned about directly. the obfuscating details of their eventual implementation in phrases are handled automatically. for example  because all composers are annotated with the sort of phrase they construct  e.g. adjective vs. verb phrase   planning can be done  e.g. of where an element can be positioned  without incurring the often unnecessary overhead of actually constructing the phrase. 
         a data driven control structure permits the grammar to produce the requisite translation directly  without superfluous construction  backup  or extensive buffering. first the message is examined and a skeleton syntactic plan of the target utterance constructed then the plan is traversed and refined top-down and left to right  executing composers for locally describabte message elements embedded in the plan as they are reached. active background processes  structured by the plan  perform all required grammatical operations  e.g. agreement  subordination  insertion of function words . 
