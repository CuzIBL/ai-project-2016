 
　　current problem solving systems are constrained in their applicability by inadequate world models. we suggest a world model based on a temporal logic. this approach allows the problem solver to gather constraints on the ordering of actions without having to commit to an ordering when a conflict is detected. as such  it generalizes the work on nonlinear planning by sacerdoti and tate. in addition  it allows more general descriptions of actions that may occur simultaneously or overlap  and appears promising in supporting reasoning about external events and actions caused by other agents. 
1. introduction 
　　current problem solving systems are constrained in their applicability by inadequate world models. in particular  in most systems  the model of time is such that actions must be considered to be instantaneous  and only one action can occur at a time. this is the case in statespace based systems such as those of fikes and nilsson   as well as in other systems based on the situation calculus  mccarthy  1 . in addition  these systems can only consider domains in which changes are made only as a result of the planner's actions  and the goals that can be described are confined to a single time instant. thus  one couldn't express a goal such as  put block a on b  and then later move a to c.  
　　recent work has extended these models in a few directions. sacerdoti   for example  allows for partial ordering of actions in his plans  but retains a simple world model. as a result  actions are still viewed as instantaneous  for two actions either occur simultaneously or one must be strictly before the other. no possibility is allowed that actions might overlap in any way. mcdermott  allows constraints on the solution of a problem of the form:  don't violate goal x during the solution.  vere  allows events not caused by the planner provided that there is a reasonable estimate of the date at which the event will occur. 
　　the preparation of this paper was supported in part by the defense advanced research projects agency under grant n1k-1  and in part by the national science foundation under grants 1st 1 and mcs-1. many thanks to rich pelavin and henry kautz for comments on the initial drafts. 
　　we propose a formalism that incorporates these extensions and relaxes most of the other restrictions discussed above. the world model consists of all the planner's knowledge of the past  present  and future  expressed in a temporal logic. in simulating the effects of an action  the state of the world is not updated temporally as in previous systems. instead  the planner's knowledge  primarily the predictions about the future  are updated. to draw a loose analogy to state-space based planners  the states in this model are states of the planner's knowledge and are independent of the temporal aspects of the world. 
　　given this approach  a plan is a collection of assertions viewed as an abstract partial simulation of the future  including actions the planner intends to take as well as other predicted actions  events  and states. in a coherent plan  most but not necessarily all of these events and states are causally related. a goal is a partial description of the world desired. this description is not confined to a specific instant of time. it might consist of a sequence of states  e.g.  get block a on b  then later get a 
　　on c   restrictions  e.g.  never let on b c  be true   or any other set of facts expressible in the temporal logic. 
　　we will not suggest any new methods for problem solving here. our current concern is simply to investigate the consequences of the more general world model. in fact  we consider it a major asset of this representation that it can be used with existing problem solving methods  e.g.  means-end analysis  decomposition  etc. . we will discuss some issues in this area later in the paper. 
we will use a strips like action formalism  as in 
 nilsson  1    except that the preconditions and effects will be temporally qualified. the temporal representation used is that described in  allen  1 . the basic unit is that of a temporal interval  and intervals can be related by any of seven primitive relations and their inverses. these are summarized in figure 1. 
usually  the precise relationship between two intervals is not known. in such cases  we can express a disjunclion of the primitive relations. for example  the fact that intervals a and b are disjoint can be expressed by asserting that a is before  meets  is met by  or is after b. this is generally summarized with the notation: 
a    m mi    b. 
　　

figure 1: the thirteen possible relationships 
　　another complex relationship that will be useful later is the notion that one interval a wholly contains another interval b. we shall assert a contains b as an abbreviation for 
a  di si fi  b. 
　　a computationally effective inference procedure has been developed based on constraint propagation. there is not space to discuss it here  but see  allen  1 . the inferences made by this system are simply those derivable from the transitivity behavior of the relations. a typical 
example of such an inference rule is: 
if a during b and b meets c then a is before c. 
all of the examples following have been implemented and run in a prototype planning system. 
ii. a simple example 
　　this problem consists simply of stacking three blocks into a tower. there is one type of action required: that of stacking two blocks. nilsson  formalizes stack as follows: 

note that the deletion information is implicit in the temporal annotation. the precondition clear y   for instance  is constrained to terminate at the end of the slacking action. this is not the only form of precondition expressible in our system. we might have preconditions that overlap the action  continue after the action  or even hold during a part of the action. 
　　when the temporal intervals associated wiih an instance of an action are added to the temporal reasoner  other relationships are automatically derived. tor instance  from the fact that sxy finishes cy and sxy meets oxy  the relation cy meets oxy will be inferred. in the examples below  we shall only mention such inferential behavior if it is crucial to the example. 
　　'the problem is to take three clear blocks a. b  and c  on a table and construct a tower with a on b and b on c. the initial description of the problem consists simply of the initial state and the goal state. introducing interval i for the time of the initial stale  and  j for the goal stale  we can describe the situation as follows: 

　　planning is initiated on those assertions that have no causal explanation. tor the purposes of this paper  this means that the assertion is not the effect of an action nor true at the initial time i. thus we have two subgoals to achieve: on a b  and on b.c . we use sacerdotfs strategy for conjunctive subgoals  and attempt to achieve each goal independently. the stack action is applicable for achieving goals of form on x y . thus we will introduce two stacking actions. 
　　'the action stack a b  is added with its effect on a b  set to hold over oab. this results in the following new facts being added  facts irrelevant for the example are omitted : 

　　
　　introducing the action stack b c  over time she for the goal on b c  yields a similar set of constraints  namely 

　　the problem solver  besides adding these action descriptions  also adds further constraints based on the structure of the domain. there are two constraints relevant here. the first is a general constraint imposed by the temporal representation  and the second is specific to the blocks world. 
　　when we assert that a proposition p holds over a lime interval t  t is assumed to be the largest possible interval over which the proposition holds. this means that two intervals associated with the same proposition cannot meet or overlap  otherwise they would be identical. this results in our first general constraint: 
the proposition constraint: two intervals associated with the same proposition are equal  or one is strictly before the other; in other words  if p holds over tpl and tp1  then tpl      =  tp1. 
　　in our present example  there are three intervals associated with the proposition clear b . using the above principle  we may add the facts: 

the temporal reasoner combines these constraints with those already derived from the action definitions and may derive stronger constraints. in particular  it derives: 

using the facts that cbl contains 1 and sab    mi  i to gel sab  d f   mi oi  cbl  and then combining this with sab finishes cb1 to derive that cbl cannot be after or met-by cb1. the details of how this is accomplished are not important here. suffice it to say that  *  is simply a logical 
consequence of the facts added so far. 
　　the other constraint arises from the observation that in the blocks domain a block cannot simultaneously be clear and have another block on it. thus we have: 

　　using this rule  the problem solver adds a set of constraints between the times for all clear and on propositions. the one relevant for this example arises from the interaction of clear b  and on a b : 
j. allen and j. koomen 1 
       cb1  m mi      oab which given the existing constraints becomes 

this was derived since on a b   over oab  must hold in the goal state  whereas clear b   over cb1  must hold before the goal state. 
　　once  **  is derived  an ordering is imposed between the times of the two stacking actions. in particular  given 
     and the fact that cb1 meets oab  it is inferred that 

since we also have from the action definitions that 

we have that sbc must complete before sab completes  i.e.  sbc    o m s d  sab. if we wish to add a constraint that only one stacking action can be done at a lime  i.e.  sbc      m mi  sab  we then have stack b c  occuring before stack a b   i.e.  sbc    in  sab. 
　　in the noah system  such orderings between actions was accomplished using a special-purpose program called the resolve conflicts critic. this procedure  however  did not guarantee to make the correct ordering decision if the actions were simply required to be disjoint. tate  extended this approach by introducing backtracking to cover such cases.. in both systems  a conflict had to be resolved by picking a specific ordering. our system allows one to defer that choice as long as possible as it can simply note that the actions must be disjoint. thus the same advantages for delaying the binding of variables by posting constraints in stefik  are achieved in the area of action ordering. in addition  it is satisfying to see this behavior arising simply as a logical consequence of the formalism without resorting to special purpose techniques. 
iii. planning overlapping actions 
　　we can now outline the problem-solving system in more detail and then present an example that forces us to reason about overlapping actions. the planner uses hierarchical action descriptions mirroring the approach of sacerdoti . in the example below  we shall see that when the two overlapping actions are decomposed  their subactions must interleave to produce a solution. 
　　as mentioned in the introduction  we view planning as reasoning about a simulation of the world extending into the future. goals are simply facts in the simulation that are required to hold but have no causal explanation. the problem solver continually repeats the process of finding causal gaps and eliminating them with new proposed actions. some causal gaps  however  can be eliminated by making additional assumptions about the simulated world. for instance  assume that proposition p holds over times tpl and tp1 such that tpl    =  tp1. now  if p holding over tpl has a causal explanation but 
　　
p holding over tp1 does not  we appear to have a causal gap. hut we can eliminate this gap if we assume that in fact tpl - tp1. if we can eliminate all causal gaps by collapsing such intervals  we have a completed plan at the current level of abstraction. 
　　given the abo e discussion  we can summarize our problem solver as follows: 
repeat the following two steps until done: 
1  examine the simulation description for causal gaps. if there are none  or they all can be eliminated by collapsing intervals  we are done. otherwise  the facts without causal explanation become the new set of subgoals. 
1  solve each subgoal independently by introducing a new action. add any 
constraints derived from the proposition constraint and the domain constraints. 
　　this algorithm will produce a complete plan at one level of abstraction. the plan can then be refined by adding the decomposition of each action to the simulauon and repeating the process described above. 
   the following example uses a blocks world in which the table is so small that it can only support one block. the robot has multiple arms and can hold multiple blocks at a time. the problem is to transform a stack with b on 

　　there are a few important things to note about this definition. clear x  must hold prior to the move action and after the move action  but does not hold while the action is occurring. the clear t  precondition specifies that t must be clear sometime during the move action  but need not necessarily hold at the start of the move. in other words  this allows the possibility that block l will become clear its a result of some other event while the move is in progress. this condition could be ignored at this level of abstraction  but including it eliminates the possibility of planning a move over a time where the block could not possibly be cleared. the generality of our representation allows us to specify such constraints without having to add the full detail of the decomposition  or alternatively  waiting until the decomposition is done to find the problem  finally  the effect on x t  begins to hold prior to the completion of the move. at that time  the blocks are stacked but the robot is still grasping the top block. 
　　the actions of picking up a block and putting down a block are defined as follows: 
　　
a and a on c into a stack with a on h and it on c. 
　　
j. allen and j. koomen 1 
a block can only be on one block at a time: 
　　
domain constraint 1: i or any x y z  on x y  is disjoint from on x z   assuming that y is not equal to z.; 
a block can only have one block on it at a 
time: 
domain constraint 1: for any x y /  on x y  is disjoint from on z y   assuming that x is not equal to /. 
　　we can now trace the planning procedure. the initial stale is described by the facts on b a   on a c  and cffar b  holding over the intervals obc  oac  and cbl  respectively. fach of these intervals contains the initial time i. the final state is described by the fact on a b  and on b c  holding over gab and obc. both of which contain g. 
　　in step 1 of the planning algorithm  two causal gaps are discovered  corresponding to the two facts on a b  and on b c . solving each independently in step 1  two move actions are introduced with their preconditions and effects  namely move  a b z  over mab/ and move b c y  over mbcy. the z and y are uninstantiated parameters in the actions to be considered as existentially quantified variables. once all the domain constraints are added  the temporal reasoner infers that move  b c y  must complete before move a b /  completes  i.e.  mbcy 
   d m o s  mabz. this is derived from the fact that on a b   an effect of m1vf a b 1 conflicts with 
clear b   an effect of move b c.y' . since on a b  holds over the final time g  cffar b  must hold before that. 
　　step 1 of the planning algorithm is repealed on this new world description. it is noticed that by collapsing oba with oby  thereby binding v to block a   and oac with oaz  binding z to block c   a plan is produced that is fully causally connected. when the new constraints that oba equals oby and oac equals oa/ are added  the temporal reasoner concludes that move  b c a  overlaps move  a b c   i.e.  mbcy overlaps mabz. thus we can summarize the plan at this level of detail as shown in figure 1  where time increases from left to right. 
　　this plan can be further elaborated by expanding the overlapping movf actions using their decompositions and the definitions of the subactions pickup and putdown. once this is done  and the domain constraints have been asserted  the subactions will be constrained to be in the interleaved order shown in figure 1. 
　　most planners' that exploit decomposition as a search technique have depended on the assumption that the actions to be decomposed are disjoint  and therefore their decompositions are independent of each other. using the temporal world model  this restriction can be relaxed  as the above example demonstrates. we can exploit the efficiency of planning by decomposition without restricting the range of problems that can be solved with the technique. 
iv. current areas of research 
a. controlling temporal reasoning 
　　the constraint propagation algorithm used in our temporal reasoning system is based on the transitivity of temporal relations. in any realistic application of this reaoning system  however  there will usually be a great many intervals with temporal relations defined between them  and the addition of a single assertion may have extensive effects throughout. running the second example on our timelogic system  with 1 intervals defined  1 task-specific and 1 domain constraints were explicitly asserted. these caused 1 additional constraints to be propagated  only a few of which are  interesting.  although the algorithm only runs while constraints are being further refined and hence activity tends to die down after a while  each newly introduced relation tends to be propagated through the entire system. once a new interval x is asserted to lie after y  then it follows immediately that  for every interval z in the universe such that y lies after z  x also lies after z. 
　　it is clearly desirable to restrict this essentially exponential growth by somehow limiting the scope of constraint propagation. one way we are currently exploring is the use of a hierarchy of reference intervals  allen  1 . we can group various intervals together by asserting their relations to a given reference interval. then any constraint propagation occurs strictly within the group and its reference interval. relations between intervals across groups can be deduced from the relation between their respective reference intervals. 
　　
　　a number of difficulties have arisen in the use of reference hierarchies  the principal one being the handling of explicitly asserted constraints between intervals with differing reference intervals. simply asserting the relation does not result in any constraint propagation within either group because the original pair is not from a single group. for instance  in our second example  the interval for the 
move operation could well serve as a reference interval for the pickup  holding  and puton intervals. clearly  any relation between pickup and hoi ding is not of interest outside this group. however  the domain constraints often introduce relations across reference groups. we are currently investigating various automatic ways of restructuring the reference hierarchy. obviously  simply merging two reference groups when their members are found lo interact quickly leads to a total flattening of the hierachy in even as small a problem as our second example. 
b. temporal durations 
　　one ability that becomes feasible in this new framework concerns reasoning about temporal durations. since actions take time in this model  we can consider how long they take and use this knowledge in plan construction. this is an important necessary step in designing planners that operate in more realistic domains. the temporal reasoner already can reason about durations. relative information can be asserted  e.g.  interval a takes two to three times as long as interval b   as well as ranges on precise scales  e.g.  interval c takes 1 to 1 minutes . this system uses constraint propagation to derive the effects of new duration knowledge. duration can also affect interval relationships  for example  if the system derives the fact that interval a takes less time than interval b  it adds the constraint that a cannot contain b. similarly  the interval reasoner may constrain the duration reasoner. 
　　using this work  we hope to build a problem solver in a fairly complex domain  such as cooking or scheduling. c a general model of plan reasoning 
　　because we only considered simple problems above  many details of this planning algorithm could be ignored. these need to be addressed to realize the full benefit of the approach. we shall outline two problems that are 
currently under consideration. 
　　problems arise when a complete causal explanation cannot be constructed simply by  collapsing  intervals together. in such cases  there may be alternate sets of assumptions  each producing a different set of causal gaps. in these cases  an arbitrary decision must be made by the planner. once this decision is made  the assumptions motivating it can be removed restoring the world description to its most general case. we currently are examining different strategies for implementing this technique. 
　　the other major problem area involves reasoning about future  or past  events  including actions by other agents . currently  the existing formalism can express and reason about arbitrary future events  but cannot reason about interfering with them. thus we can plan to interact with future events  but cannot change them. reasoning about changing future events  such as preventing an event  requires an ability to change our predictions about the future. 
　　our approach to this problem is to develop a crude but workable model of hypothetical reasoning  and then use this general mechanism to reason about hypothetical futures. we prefer this approach over that of mcdermott   who introduces branching futures into his temporal logic. this is because a hypothetical reasoning ability is required for other purposes besides planning  and once such an ability is present  our simpler temporal model is sufficient. in addition  this framework will allow us to reason about other agents' plans from observing their actions  e.g.   allen and perrault  1  . since time 
only branches into the future in mcdermolt's logic  it cannot support such reasoning about the past 
v. summary 
　　we have specified a world model for problem solving using an interval-based temporal logic. the formalism is notable for the following reasons: 
-- it allows more general action descriptions than have previously been allowed. in particular  actions may lake time  and their descriptions are not limited to simple precondition and effect descriptions and decomposition. 
- it allows more general goal descriptions  and more complicated worlds in which to achieve the goals. in particular  goals are not restricted to a single time  and future events may occur which will affect the planner's behavior. 
the action ordering is more general than the nonlinear planners of sacerdoti and tate. in particular  actions may overlap  and when conflicts are detected  this method does not have to resort to arbitrary orderings as in sacerdoti  or backtracking as in fate  as required in certain situations. 
　　
