probabilistic inference specified processed propositional last many accepting specification inference operate mostly propositional poole inference case paperwe inference operates specified generalizes undirected graphical show superior propositional inference probabilistic inference widely employed artificial intelligence accept specification requiring propositional redundant must specified last many accepting specification haddawy subrahmanian kersting raedt friedman pfeffer poole anderson richardson domingo laskey theoretic framework halpern inference mostly propositional dealing instantiated parameterized specification relevant propositional domain costly unnecessary medical population infected disease probability death person person disease answer probability someone disease propositionalization instantiate know population size answer much shorter time devise answer considering manual devising process missing date receive automatically answer like computional waste step poole proposes elimination poole lifted deal receives specification parameterized stand instantiation eliminates much cheaper eliminating instantiation poole work type elimination operation call inversion elimination explained sometimes carefully elimination ordering case orderingexists inversion elimination step introduces need type elimination counting elimination cost putting operation capable dealing probabilistic operates resorting propositional also show comparing propositional motivation probabilistic dependency subset propositional dependency refers affect markov network involving epidemic sick epidemic sick epidemic sick fact type mean boolean binary omitted assumed else stand readable epidemic sick sick death practical hold many requiring propositional repeat time modulo time wish keep track population sick distinct sick john sick mary epidemic sick john sick john death john epidemic sick mary sick mary death mary render specification unnecessarily redundant inference separately even exploited dealing keep case person help need used time case answer sick john sick mary procedure manually tailored time consuming natural around recurring parameterized succint epidemic sick person sick person death person person word capital typed semantics simply propositional formed instantiation poole call parameterized parfactors semantics inference namely regular propositional inference propositionalized overkill death john john instantiation person john ignoring also sick person person instantiation benefit parfactor death person somedeath considering tree width propositionalized graphical population size fact answered time population size desirable lifted inference inference instantiates parfactors mentioned parameterized specification probabilistic inference inference generating propositionalized form regular propositional inference system like spook pfeffer benefit lifted inference also deterministic parfactors sick roommate sick diabetes person person john person mary instantiation satisfying diabetes person instantiation person distinct john mary semantics semantics poole markov network specified parameterized also markov network richardson domingo parfactor triad representing instantiation tuple atom assignment atom restrict finite finite prevents parfactor sick roommate sick note committed construction used simply type allowed multivalued binary regular undirected graphical joint probability distribution assignment randomvariables instantiation atom parfactors ground atom instantiation parfactors parfactors joint distribution ground atom instantiation parfactors assignment substitution tuple atom instantiation tuple assignment parfactor parfactors atom parfactors implicitly assumed standardized renamed used parfactor inference inference ground atom representing calculate marginal probability involving issued parfactors representing summationoverall assignment shorthand side calculating summation brute force intractable independency efficiently propositional procedure fove parfactors shatter intersect eliminate fove procedure parfactors shattered intersect procedure eliminate parfactors fusion parfactor procedure parfactors ground atom elimination elimination poole calculates marginal dividing marginalization main contribution fove work eliminating maybe atom respective step fove eliminating atom effectively eliminating grounding lifted cost sometimes grounding fove correctness show fove work want eliminate atom step resulting instantiation subset parfactors parfactor reduce marginal marginal fewer rvrv rvrv calculating parfactor inversion elimination counting elimination preferable depend domain word size explained impossible atom favorable size propositionalization find next subsection replaced parfactor operation fusion explained thus left expressing parfactor parfactors shattered explained main property shattered parfactors atom grounding identical disjoint matter explained inversion counting elimination explained inversion elimination inversion elimination assumes unary enumeration shattering renaming parfactor tuple atom distinct note name inversion elimination also note assignment parameterized elimination depend grounding assignment parameterizedrandom much essential work summed correspondence instantiation poole eliminates inversion elimination make clear contradiction trying answer type type neither suitable inversion elimination answer eliminating inversion counting elimination find atom satisfying inversion elimination resort counting elimination counting counting elimination done atom remaining atom consequently ground find atom find smallest cost size note counting elimination justified inversion eliminable proper remaining atom ground last term defines counting elimination parfactor calculate term counting assignment grouping assignment moment fact atom mean note word matter many assignment assignment induce vector induce vector also vector assignment inducing multinomial coefficient case binary assignment case atom enumeration respective grounding also atom grounding identical disjoint satisfied shattered parfactors also atom identical unifiable also granted shattered parfactors also atom leaving case false enumeration assignment composition assignment tuple assignment calculated choosing many made fashion atom simply unless committed know beginning know case make case made must identical unifiable stated reasoning vector counting assigments case atom satisfied reduce case multiplying away violating multiply vector away parfactor calculate parfactor removal restriction vector simply describing restricted forequationalformulaswithout functionsymbols simplified equational quantifier multiplying away operation domain size sophisticated counting minimize fusion parfactors replaced parfactor crucial step replace happens instantiation parfactor instantiated many time preserve shattering elimination atom guaranteed fact parfactors shattered poole parfactors shattered pair atom hold grounding identical disjoint counting elimination pair atom parfactor must identical never instantiated assignment call pair atom satisfying proper pair parfactors shattered ground atom hold atom parfactors shattered overlap identical violating parfactor shattered even instantiated assignment violating shatters parfactors work repeatedly identifying pair improper pair breaking parfactors parfactors instantiation inducing proper pair done unification determining grounding improper pair coincide breaking parfactors unified atom rewritten identical parfactor improper pair unifier break parfactor rewritten parfactor improper pair unification yield parfactor broken rewritten empirical http cogcomp time lifted propositional inference domain answer death epidemic epidemic sick else sick death inversion elimination show tree width propositionalized treated linear graph lifted inference answer procedure shatter parfactors atom improper atom pair come parfactor normalize normalize shatter procedure normalize parfactor pair atom unified replace normalize shattering time answering death epidemic epidemic sick else sick death inversion elimination time answering counting elimination counting elimination case propositional inference taking long noticeable lifted inference time showed correctness lifted firstorder probabilistic inference case expressive inference made much cheaper abstracting away dealing whole believe type essential expressive probabilistic system knownin automatic eliminating inversion counting elimination counting elimination potentially much inversion elimination expect occurrence practical case believe much counting investigating line many remain natural probability also binding also adapted pfeffer koller work friedman friedman getoor koller pfeffer learning probabilistic ijcai page halpern halpern probability proceeding joint artificial intelligence page detroit computing answer death epidemic million propositional grounded tree width cheap lifted linear graph infinite richer infinite also hentenryck scheme practical counting elimination seems particularly good relatively high cost also regularity proving particularly parfactors wisely complexitystudy also amongother guiding elimination ordering much gain lifted come presence indistinguishable domain exactly argued chavira practical work simply base benefit inference indistinguishable replaced approximately much practical great practical lifted inference much suitable answer lifted acknowledgment like thank vasin punyakanok zimak reviewer helpful comment arda answering intelligence aquaint grant force laboratory grant darpa real
