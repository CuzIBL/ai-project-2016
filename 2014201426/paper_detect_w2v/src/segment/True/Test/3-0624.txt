determining statistical physic guiding backtrack heuristic pcomplete successful oftenuse globalconstraints capture derives polytime combined used guide heuristic give main family many combinatorial artificial intelligence operation discipline cast satisfaction interested combinatorial existence much literature devoted subject past thoroughly studied many combinatorial enumeration answer orponen roth darwiche statistical physic burton steif lebowitz gallavotti guiding backtrack heuristic find csps horsch kask refalo latter sought repeatedly progress best keep runtime trade computing centered give proposes inherent derive polytime combining consistency domain scope filter belong thus avoiding useless many family removed time even globally visible consistency domain projecting consistency maintains exploited tuples intend show little work sufficient close even consistency counting csps even restrict binary thus intractable work bulatov dalmau characterizes tractable csps restrictive practical counting boolean csps best studied subclass birnbaum lozinskii binary csps exponential time angelsmark jonsson backtrack kask adapts joingraph propagation extending valueorderingheuristic csps choosingthe assignment give largest optimized binary well refalo proposes generic heuristic assignment reduction remaining cartesian domain promising magic latin benchmark necessarily binary csps heuristic rely benefit computation rest revisits family providesolution explores give work looking proceeds list usual origin regin examines derived throughout domainconsistent unless stated domain smallest largest xmin xmax mean binary many consistency binary form mohr henderson maintains counter simply counter domain stand counter domain consistency witness counter arithmetic binary counter maintained consistency arithmetic binary relies semantics take knowing xmin ymax sufficient remove inconsistent couple simply enumerate done naively time domain maintainedin sorted reasonableassumption enumeration done time pointer domain ltcard containing domain computing ltcard find make incremental storing smallest removed decrease removed decrease decremented sometimes domain maintained simplifies computation derive closed form ymax xmin ymax xmax xmin ymax xmax xmin xmax ymin clearly preceded equally applies adjustment counting equality disequality comparatively straightforward remember domain consistency achieved intersection incremental time temporal reasoning binary adapted handle linear many feature linear form stand usual operator consistency enforced fast weak form reasoning domain filtered yield poor consistent domain admits seven even size cartesian totally lowered high actually well studied name linear diophantine inequations ajili contejean adapted finite system linear diophantine inequations form belonging knapsack trick adapts dynamic build acyclic graph ghaii hxii size time path node goal node correspond pointed enumerating enumerating path time linear size graph xaixi path traversing ghaii hxii interestingly lift nonnegativity restriction coefficient expense graph size represents magnitude aixi finite domain commonlyknown practical constrains note arbitrary relationship potentially cartesian relationship exactly many tuples consistent improves domain size regular membership deterministic finite automaton regular constrains belong regular recognized pesant consistency build directed acyclic graph used trick knapsack reported well path corresponds counting represents overhead consistency regular path traversing corresponds taking beldiceanu contejean subset take subset possibly taking maintained consistency relationship filter domain taking derive make replaced domain remains replaced domain remains assignment take assignment cmin cmax subset identifying many assignment totaling assignment putting give cmax worst case exponential preferable sometimes replace size tout size cmax cmax note identical domain coincide size cartesian mutual exclusion cardinality besides concerned repetition alldiff force take make time take former alldiff counting case perfect matchings bipartite graph computing permanent adjacency matrix graph know alldiff exactly polytime permanent jerrum time remains prohibitive even getting reasonable challenging nevertheless regardless know possibility remain generalize considering distinct domain domain domain properly contained alldiff computing taking term time probably much data maintaining case domain simplifies hinted consistency alldiff computes bipartite graph graph successive transformation alternating path unmatched vertex alternating transformation revers edge path belonged vice versa necessarily size costly established transformation away fast matchings equivalently alldiff applying transformation succession also avoid matchings distinct transformation fact identical happen successive transformation distinct safe resulting distinct take matchings bipartite graph identifying take time linear size graph enumerating path done time alldiff able adapt idea gave rise consistency network flow network flow residual graph circuit graph lead flow idea decompose singleton examines used collection subset scope singleton subset pairwise disjoint corresponds case singleton cardinality domain case singleton boundsgives upperboundon numberof find smallest used computation fixed excluded emerge guide heuristic also robust heuristic finer generic heuristic refalo size worse cartesian domain heuristic kask also good heuristic firstfail failure early centered guided left smallest recognizing failure necessarily admitting tightness also ratio size cartesian domain measuring tightness onto ratio stress poor propagated filtered domain identifies consistency tightness also serve heuristic focusing exhibiting worst tightness smallest ratio ideal ratio corresponds perfectly captured domain illustrate analyse coloring coloring european country belgium denmark france germany luxembourg netherlands country sharing border color country associate letter represents color five color legal coloring cardinality cartesian domain initially overestimate slightly noticing four country pairwise adjacent alternate alldiff yielding alldiff particularly high arity quickly good csps tightness alldiff indication latter analyse coloring country regardless country legal coloring decrease five fold color interchangeable true fixing minus ratio remaining refalo thus country colored cardinality cartesian domain column column domain solns solns solns comparing coloring column note cartesian particularly alldiff latter also closer true away away cartesian rostering next rostering daily must carried respecting labor regulation planning horizon carried demanding wish balance workload representing workload link main corresponds load enforcing workload work imposed roster regular automaton possibility deciding size part tightness help size size mean part probably view used attractive tightness difficult precise significantly size cartesian domain baseline argued looking csps whole help guide heuristic counting family tightness combine efficacy consistency step many remain main family investigated left scheduling packing cumulative diffn routing close computational cost simplest investigated mentioned computing made incremental repeatedly backtrack done whole usefulness settled answer come part empirical evidence computational need realistic acknowledgement philippe refalo work sparked idea thank regin referee constructive comment work partially canadian natural council grant
