distributed optimization dynamic utility propagation inspired network show extend arbitrary topology pseudotree arrangement graph linear message maximal size induced width pseudotree backtracking type magnitude fewer message deal arbitrarily formulated optimization satisfaction well distributed satisfaction discsp studied yokoo yokoo attracted distributed satisfaction owned agent systematic discsp derived form backtracking silaghi yokoo meisels zivan hamadi paradigm asynchronous distributed optimization integrating propagation adopt modi optimization much harder discsp goal find best thus requiring exploration goal distributed minimize message find backtracking centralized system little memory distributed best backtrack control rapidly distributed backtrack message worst case even parallel exponentially many kasif thus resulting exponentially many message serious drawback distributed real optimization also noted maheswaran lead believe paradigm dynamic discsp incrementally computes linear message message grow exponentially size parallelism kschischang satisfaction decoding acceptable compromise combine style exploration fixed message size distributed fashion network show extend arbitrary topology pseudotree arrangement graph formulated optimization satisfaction utility allowed tuples disallowed tuples utility maximization assignment utility rest structured optimization procedure tree optimization graph prof induced width theoretically aproaches discrete multiagent optimization mcop tuple domain finite much utility deal unary binary arity also expressed term little modification mcop allowed goal find assignment maximizes utility node neighbor distributed optimization network network optimization kschischang dtree petcu faltings dtree agent send util message utility vector parent child node send vector optimal utility achieved subtree rooted plus compatible vector leaf node valuation inspecting neighbor initiate process node relay message process wait util message child respective subtrees disjoint summing computes much utility give whole subtree rooted parent enables exactly much utility achieved subtree rooted taking compatibility thus send util message also optimal root node optimal utility incoming util message pick optimal send message child informing upon receipt message parent node able pick optimal previously stored optimal parent child finished correctness well fact linear message linear memory pseudotree arrangement distributed optimization network cyclic graph need arrange graph pseudotree arrangement graph pseudotrees arrangement graph rooted tree vertex property adjacent vertex graph fall branch tree pseudotrees investigated mean boost freuder freuder quinn dechter schiex main idea relative independence node lying branch pseudotree parallel branch show pseudotree refer rest tree edge solid line back edge dashed line part spanning tree call path graph entirely made tree edge connecting node please note arrangement pseudotree tree path branch tree node handler dark node also parent node node hierarchy pseudotree node tree edge child node node pseudotree node tree edge node node pseudotree node node node hierarchy pseudotree node tree also pseudotree inverse hold tree traversal graph node distributed leader election fine lack procedure creation tree refer reader like barbosa hamadi dpop phase agent establish pseudotree used phase next phase util propagation dtree please refer formal rest util phase util propagation dtree util propagation leaf pseudotree propagates pseudotree tree edge easy agent identify leaf pseudotree must tree edge tree network util message sent node parent dependent subtree rooted respective node link part tree node parent message message clearly dependent target link node network pseudotree message sent node parent also depend parent happens connecting sending node message utility subtree rooted dependent parent backedge must take dependency sending message dynamic come play optimal utility subtree tuple assemble message hypercube dimension target backedge handler send dtree dpop message travelling network dtree dimension linear domain size target dpop message dimension target combining message dimensionality receives message child message dimension target dimension dpop distributed pseudotreeoptimization procedure network dpop agent phase pseudotree creation elect leader elected leader initiate pseudotree creation afterwards know phase util message propagation leaf node utilxi utils send message utilxi activate util message handler phase message propagation activate message handler utilmessage handler utilxk utilxk util message child arrived ifis root send alue else utilxi utils send message utilxi message agent view optimal agent view send optimal agent view utils parent dtree vector utilxi utilxi assemble hypercube utilxi vector totaling dimension utilxi util message sent dimensionality need send message parent considers optimal utility tuple achieved note target message collapse dimension think process cross message resulting hypercube dimension followed axis retains optimal utility tuples optimizing collapsing message dimensionality decrease util message reach target occupies dimension message handler target optimizes outgoing message loos respective dimension take initially message message arrives influence part tree optimize away simply choosing best parent normal dtree process thus back edge handler case extra dimension message travelling back edge tree path back edge propagation phase dtree parent message node receives parent also util message parent sends sends sends construction message linear util message node linear size message edge edge construction also linear message good message thus size util message largest util message produced width pseudotree induced ordering used dechter dechter page describes obtaining induced width build induced graph take traversal pseudotree ordering graph process node recursively bottom node processed parent induced width parent node induced graph dechter width tree actually influence width backedge induced width construction induced tree easy backedges width overlap edge respective handler width combine thus width size maximal overlapping distinct handler util propagation message size varies largest message dimension seen dimension message backedge handler encountered propagation travel eliminated message arrives maximal dimensionality maximal overlap distinct handler thus maximal dimensionality induced width exponential size message necessarily resource induced width width message message size serialize message letting handler valuation sequentially message customizable size workaround exponential memory renouncing exactness propagating valuation schiex schiex note fact pseudotree arrangement mainly used procedure optimization good distributed branch ddbb distributed deepening adopt synchronous branch distributed breakout procedure worst case exponential pseudotree arrangement basically longest branch root leaf instantiated sequentially tried bayardo miranker shallow pseudotrees logarithmic induced width intricate heuristic like freuder quinn maheswaran adapted distributed also noted exhibit worst case exponential width graph induced pseudotree ordering arnborg show arnborg ordering graph traversal graph good easy distributed coupled fact pseudotree irrelevant mean work well ordering ring node ordering graph yield pseudotree height back edge thus induced width backtracking time exponential linear message size exponential translates explosion message exchanged system dechter dechter fattah induced width pseudotree height thus theoretically well pseudotree pseudotree ordering fair aproach message worst case find proper tradeoff size message transmitted system usual distributed message synchronous find optimal linear case message synchronous time height pseudotree util propagation propagation also maximal message size sensor network sensor grid testbed bejar briefly target sensor allocate sensor target resource allocation bejar satisfaction relatively sensor target intractable optimality grid sensor target maheswaran corridor composed area sensor located vertex sensor vertex need focused respective topology grid sensor observe time test adopt mcop corridor capital letter dpop dramatic reduction message case magnitude even test test test test mlsp mlsp dpop dpop adopt message sensor allocation explanation linear message regarding size message graph induced width basically intersection corridor thus employ linear message part intersection message dimension case fact give arbitrarily kind meeting scheduling experimented distributed meeting scheduling hierarchical tree node agent peav maheswaran agent time meeting participates timeslots mutual exclusion imposed agent equality imposed agent meeting unary agent show much time meeting utility agent find schedule maximizes utility show scale size message message linear size fact subproblems denser rest message virtual message actually transmitted network largest optimization distributed agent meeting largest reported maheswaran agent meeting adopt conclusion work distributed optimization utilitypropagation extends tree propagation like dtree work arbitrary topology pseudotree linear message largest exponential induced width pseudotree agent meeting message message size dpop test meeting scheduling reduces domn backtracking domw node domain size induced width pseudotree loose hold retains linear message practice even magnitude fewer message aproaches message size real sending message preferable sending message much overhead implied magnitude show able handle effectively arbitrarily practical linear message width pseudotree work investigate heuristic width pseudotrees acknowledgement like thank rina dechter radu marinescu insightful jonathan data sensor network meeting scheduling simulation michael schumacher valuable comment early work funded swiss foundation
