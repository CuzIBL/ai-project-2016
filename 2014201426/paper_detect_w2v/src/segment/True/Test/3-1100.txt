coordinating agent optimization pose incentivecompatibility rationality thus weaker manipulation made impossible high probability computational observe real life manipulation impossible manipulation predicted sufficient show randomization scheme make predicting outcome hard thus form coordination many practical selfinterested agent coordination joint resource allocation scheduling planning formulated optimization thus extend optimization discrete optimization mcop tuple agent domain finite allowed giving utility choosing subset give agent mcop assignment satisfies maximizes agent utility expressed note domain agreed upon agent hand specified agent necessarily mcop allocating public network train pipeline network network graph connection agent connection time link time domain agent enforce successive link time agent agent serve transportation link thus agent utility able link agent want find combined assignment maximizes utility combinatorial optimization npcomplete thus exactly many case optimality high probability find close optimal consideration need addressed rationality incentivecompatibility individually rational best agent participate utility agent participates high agent participate optimization incentivecompatible agent maximizes utility protocol find truly optimal protocol mean agent reporting truthfully thus also speaks truthful clearly incentivecompatibility meaningful mcop achieved auction vickrey clarke grove seminal work ephrati rosenschein applying agent coordination optimization game practical mcop form laffont also provably optimal nisan ronen many practical optimization optimization thus weaker manipulation hard computational uncertainty make computationally intractable outcome untruthful thus rendering uninteresting agent structured framework mcop boundedrational show incentivecompatibility achieved step address avoiding speculation succession step network resource allocation show framework optimal mcop computationally infeasible also neighborhood find good necessarily optimal reasonable computational cost widely used optimization particularly well studied satisfiability gsat procedure selman framework mcop procedure localsearch selectinitialsolution askrelations repeat agent payment termination procedure manipulates assignment vector initially selectinitialsolution assignment satisfies asks agent utility relative assignment utility assignment zero open utility assignment influence optimization proceeds iteratively chooseneighbours assignment close possibly selecting generating assignment vold assign domain consistent rest vold step iteration assignment localchoice chooses assignment optimize combined utility also computes vector payment agent must make receive step iteration payment zero derived iteration continues termination utility agent step avoid getting stuck optimum procedure significantly randomization kirkpatrick selman mean occasionally localchoice chooses even decrease agent utility procedure work agent accurately utility side payment agent motivated truthfully valuation wellknown game laffont mcop incentivecompatible individually rational optimal must kind nisan ronen provably optimal thus make maintaining rationality thus replace weaker computational rule manipulation agent agent rational examine declaring utility probability rational agent predict utility gain untruthful utility rational incentive compatible varying parameter made arbitrarily close work conitzer sandholm protection manipulation case manipulation computation mean agent real computational agent rational sufficiently high step randomization step carried localchoice made straightforward generalize neighbourhood alternative sufficiently localchoice systematic optimization procedure call assignment optimal agent utility declared agent agent normally incentive excessive utility gain preferred impose preferred thus optimal agent call counter tendency imposing side payment utility mentioned side payment rationality optimal payment agent payment damage decrease utility gain presence remaining agent note optimized utility agent thus cgtax never thus payment agent leave surplus randomization randomization simulated annealing kirkpatrick inspired cooling spin glass studied systematically particularly satisfiability gsat selman turned gwsat selman walk probability force clause ignoring clause also affected randomization eventually find optimal high probability walk step gwsat leave step adopt scheme left optimization step turn good take belonging agent show randomizing simultaneously payment balance rationality agent surplus returned violating property reduces utility gain also creates incentive whatever receives gain randomization make scheme balanced simply paying payment surplus agent excluded optimization step agent chooses seen compensating agent loss utility incur consequence left optimization affect property agent best utility truthfully follow outcome payment equally good know excluded make truthful ephrati rosenschein giving surplus agent call agent uninterested agent applies even uninterested agent uninterested agent optimization selecting excluded agent faltings case utility loss excluded agent thus individually rational agent participate fact matter payment scheme used step lead reduction agent utility must agent rationality violated occasionally make move susceptible getting stuck optimum thus scheme rationality step whole improves utility agent mean process whole individually rational agent systematically disadvantaged randomization expectation scheme individually rational agent confirmed simulation rationality satisfied agent incomplete guaranteed find optimal thus pointed nisan ronen give manipulating agent utility truthful effectively manipulation capable predicting utility outcome utility loss incurs carrying manipulation step show sufficiently high probability arbitrarily close prediction computation agent manipulating agent accurate declared agent access oracle promising manipulation remaining task show manipulation actually utility truthful predict utility considering probability utility agent idea high probability need grow exponentially size thus size exceed computational rational agent show argue examine fraction probability mass success manipulation fraction utility distribution give utility symmetry factored sufficient sample subset desired confidence prediction manipulation mean utility loss agent step manipulation need succeed probability give utility utility distribution translates fraction probability mass need examined note parameter size thus examine corresponds fraction probability mass next show high probability probability mass distributed grows exponentially size discovered successive simulation size possibility randomization make outcome hard predict neighbourhood excluded agent make randomization easy analyze randomization outcome regarded case neighbourhood case choosing lead choosing thus cancelling randomization also neighbourhood placing randomization allowed manipulating agent make symmetry make randomization ineffective fortunately excluded agent well reasonable independence manipulating agent excluded render randomization invalid find optimum able reach eventually come close optimum remain much subspace nearly optimal give show arbitrarily high probability probability reaching exponentially decreasing many independence hold practice next show discovered successive simulated initially grows exponentially eventually stabilizes optimal outcome thus fails discover importantly discovered grows exponentially size muliplies size thus growth simulation size exponential growth size even reach convergence need consideration probability mass distributed subset show considering probability resulting step probability branch branch probability experimentally showing process branching thus high probability probability mass distributed independence give stopping probability probability agent examine certainly well computational agent analyzed relatively seems clear probability mass spread size thus boundedrational parameter size network resource allocation allocating track train network operator avoid collision graph allocated operator train time transporting good feasible route take route modelled mcop task domain agent route task london manchester agent path transportation network used utility gain step london birmingham manchester london birmingham manchester network modelled binary pair task route rule assigning overlapping route agent operator profit declares task route simulated task agent used observe property branching probability rationality want show protocol straight show escape randomization thick line stochastic thin line strict dashed line stuck optimum reach half utility thus scheme seems avoiding interested probability computational agent utility localchoice generates branch probability mass thus took histogram iteration satisfied show interested utility agent rationality show utility agent process agent task round seen agent utility stable round conclusion optimal coordination selfinterested agent practice essential property meaningful optimization work ephrati rosenschein applicability provably optimal optimization thus work real life manipulation uncertainty risk uncertainty make difficult manipulator predict consequence manipulation thus make manipulating uninteresting uncertainty randomization escape optimum analyzed scheme randomization sufficiently creates uncertainty simulating sufficient part outcome quickly surpasses computational real computational agent addressed optimization note rely payment thus suitable asynchronous distributed limitation mcop agent thus impossible trading agent control ownership good limitation ensures payment never leave deficit covered excluded agent rationality seems satisfied high probability analyze rationality property scheme probabilistic nonmanipulability weakness scheme parameter need varied guaranteed boundedrational size much high manipulation even suitable randomization cryptographic hash acknowledgement work funded swiss foundation
