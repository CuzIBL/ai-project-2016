prover elementary truth transformation give protocol produced system trying cantor carried mainly summer describes prover truth transformation proving domain elementary deductive system protocol produced prover trying draw conclusion prover prover mathematical many item mathematical viewed applying item mathematical form proven evaluates recursively evaluated item evaluating evaluates turn match item process match evaluated system match ever find item replaces memory lost evaluates item subexpression evaluated simply returned sometimes case need item domain handle item handle item match evaluated item match belief true match substitution returned item previously item restricting free item disadvantage extra force minimize dicated style automatic prover system quine book domain domain domain propositional free simply domain domain nothing quine system roman letter used subdomain greek letter used informed reader recall rule item mathematical item used many bledsoe provers boyer moore used lisp recursive rule induction rule aubin also used much mathematical also used mathematical domain brown prover item item theoretic prover twelve listed english translation prov brown brown switch come back branch instantiate conclusion automatic prover domain elementary protocol behaviour proving wish stress fast compact seen took cantor noted prover compiled lisp bobrow acknowledgement thank bernard meltzer robert kowalski raymond aubin many enlightening scholarship awarded edinburgh grant council
