caching symmetry powerful pruning innovative efficiently combining branch type optimization significantly reduces overhead dynamic ordering employed exploitation dynamic symmetry symmetry previously combined superior integration caching branch test density life show idea yield gain satisfaction backtracking break disjoint part consisting make assignment resulting consist disjoint subproblems subproblem subproblem call disjoint subproblemscreated assignment assignment independently combined worst case exponential yield computational gain insight exploited recursively bayardo pehoushek darwiche park gelder sang dechter amir mcilraith yield reduction worst case tree width graph scope darwiche produced tree many node tree caching reuse rest caching worst case darwiche bacchus dalmao pitassi practice sang caching case requirementsare flexible caching used correctness thus cache many practical morespace caching proceed prune cache item exhausted caching impose overhead best optimization marinescu dechter counting sang static ordering used much overhead eliminated data darwiche dynamic ordering yield reduction size tree overhead marinescu dechter nevertheless overhead even practical benefit dynamic caching dynamic ordering contribution representing data call template template thus caching considerable template also cache access template indexing template also efficiently final contribution automatically detecting symmetry template detected template symmetric discovered symmetry mapping symmetric thus template symmetry encodes symmetry make computing template symmetry much cost computing symmetry template symmetry make cached used symmetric well yield reduction size explored show integration branch caching caching requiring stored cache done marinescu dechter sequel expand background behind template show exploited achieved benefit empiricalresults test problemof maximumdensity life background concentrate optimization decomposable template used componentcaching caching counting optimization specified tuple domain assigns assignment goal find assignment maximizes time satisfies decomposable decomposed subfunctions dependent subset scope also dependent subset scope unified treating mapping satisfying assignment violating assignment thus unified simply maximize augmented like regard tuple hard encoded term note equally decomposed cast task maximization task backtracking node tree corresponds assignment assignment broken disjoint subset isolated assignment formalization idea tailored tuple assignment subject tuple satisfies strict subset isolated rest assignment mention instantiated none node node assignment made remain unassigned unassigned assignment isolate consideracopwithvariables anodenwherejust made computing node accomplished detecting graph undirected graph node uninstantiated edge node node node node scope ofgn componentatn ifandonlythereexistsaconnectedcomponentc ofgn isthesetofvariablenodesinc thesetofobjectivenodesofc aretheassignments madetotheinstantiatedvariablesoftheseobjectives verified realizing achieved incrementally stopping connection follow precisely also finalized note also instantiated node isolated node node instantiated form assignment instantiate supposeinourexamplewenextassignn sothatonlythetwoassignments beenmade isunaffectedbythenewassignment isnowsplitinto twocomponents ables justasinglefullyinstantiatedobjective andthatthe componentxy doesnotcontainsm initsassignment seteventhoughitsparentcomponentxyn computation benefit assignment evaluated assignment note assignment thus assignment sufficient instantiate yielding numeric maximal achieved assignment assignment assignment achieves maximal note instantiated instantiated note also examining assignment rest ignored bethesetofassignmentsmadeata node andlet bethesetofcomponentsat themaximalvaluethatcanbeobtainforanycompleteset ofassignments tothevariablesofthecop suchthat atanyleafnodeinthesubtreebelow furthermoreacompleteassignment unionedwithasolutionforeachcomponenti fact computationally mean independently computational applying recursively template idea template used template idea arising template exploited algorithmically mentioning identical must assign fact containing differ consequence also differ maximized subject differing template identical formally template disjoint dependency assignment generates template template assignment disconnect rest seeninthepreviousexample componenttemplateincludes template node backtracking graph note mention instantiated actually identifies template node template assignment template detected time data template template cache data used efficiently node letabethesetofassignmentsmadeatnode andlett instantiatesallof thevariablesint andnoneofthevariablesint isoneofthecomponentsat isthesubsetofa thatassigns thevariablesint efficiently instantiated node lazy watch moskewicz test unassigned triggered know form node template removed size remaining graph identify node triggering size yield time template triggered need access node template cache used also stored template stored never seen default subtree node backtrack updating template accessing finite domain assign thus defining many template never encountered branch pruning hash code hash suitable storing sparse data inourpreviousexample whenweset forthefirsttime wecreateanewtemplatetab whichrepresent immediatelycreated searchproceedsoverthevariablesa andb returningtheupperandlowerboundsofcomponent undertheinstantiation theseareboundson themaximalvaluethatcanbeachievedbytheobjectivesin overallpossiblevaluesforaandbsubjecttom theseboundsarestoredinthetemplatecacheas asboundsindexedbythe assignmentm ifweassign laterinsearchwithaandbstill unassignedthentab istriggeredandtheboundsonthenew thenthecachedupperandlowerboundscan bereusedatthisnewsearchnode template symmetry computational template automatic symmetry template symmetry template template symmetry template thus amortize symmetry computation many automatic symmetry cost reduce cost symmetry confine symmetry symmetry formally symmetry template onto mapping assignment evaluated identical evaluated assignment otherwords keep dependency template separated preserve template template fixed assignment dependency assignment aresymmetricunderthemapping mean reused automatically symmetry template graph isomorphism constructing graph template graph property template graph representationsare graph isomorphicif template symmetric sense graph isomorphism vertex graph providesthe variableto symmetry mapping template graph isomorphism graph automorphism case nauty mckay puget surprising even graph isomorphism utilize symmetry proceed template construct graph nauty used canonical isomorph symmetric previously cached template graph isomorphs hashing find isomorphic template near time isomorphic template utilize invertible mapping produced nauty symmetry utilize symmetry avoid allocating cache mark symmetric symmetry continue transparently rest code read remap access symmetric thus able utilize stored many template symmetric symmetry earliest template mean utilized many symmetric weset forthefirsttime wecreateanewtemplate isthesametype thenthegraphrepresentationoftab willbethesame andanisomorphismbetweenthetwo templateswillbethefound inthiscasemappingvariable willpointtothecache oftemplate underthemapping ifwecreate aninstancewecanthenusethecachedresults notethatintheoriginalcop ifnandmare notexchangablein thenthissymmetrydoesnot ourmechanism candetectdynamicsymmetries unfortunately restriction prohibit presenting template graphical mention many utilizes nauty coloured graph graph symmetry keep dependency template separated exploitation fact exchangeable colour symmetric caching show utilize idea recursive integrated branch find template also abort computation soon discovers even computation aborted routine best able termination line storing produced computation integration branch stored template cache symmetric template cache branch inevitably template many time aborting updating work proceed efficiently utilizing stronger marinescu dechter branch find template contained graph consisting foreach foreach foreach template caching branch template give soon discover cache used default used trying unsolved even line template case instantiated assignment onlb case achieved case actually capture case well case procedure line case going computation aborted bounding make resetting decompose line done template triggering triggered template removed graph remaining form template template uninstantiated form template template evaluated containing template upon automatic symmetry template line identify template line abandon assignment line time componentsfails reach need reach exceed line finished achieved line exceed inputed case continue trying remaining assignment achieves need even reset line attempting next assignment tried note computation succeeded achieving ubfor line propagation also employ propagation hard prune domain necessarily lead domain pruning simply reduce iteration line proved intuition behind pruned propagation violate hard thus make seen part avoided branching pruned optimal thus pruned part miss optimal part part explored continue propagation used computes optimal showing cached template remain even domain unassigned propagation seen realizing template correspond maximization assignment unassigned subject fixed dependency pruned violate hard arisen pruned maximization template maximization unpruned template cached template remain highlight subtely template template triggered stored cache cached domain singleton propagation forced explained cached case triggered must treat singleton domain propagation differently empirical tried density life mdsl larrosa morancho niso density stable configuration conway game life grid cell dead alive implicitly surrounded dead cell cell live stable surrounded live cell dead stable surrounded live cell goal find stable configuration cell live cell larrosa morancho niso employ extensive entirely generic effectiveness boolean representing cell unary cell assigning live cell dead cell hard cell assigns stable cell neighbour unstable mdsl propagation hard prune domain pentium memory time tested branch ordering heuristic domain size plus degree dynamically remaining heuristic biased toward completing column started grid tends encourage chose domain plus degree heuristic branch solves separately template cache template branch template template template cache caching branch extends activating template cache symmetric caching branch extends automated symmetric template extends automorphisms well symmetry automorphisms also nauty tell template utilize cached automorphicinstances well symmetric template size node time node time node time node time node time node time node searched time show relative term node searched time yield branch decreasing size tree take time overhead overhead quickly recouped reduction tree achieved employ caching reduce size tree heuristic show template triggering detecting time show overhead detecting make activating storage template decrease size correspondingdecrease time make symmetric template decrease size automorphism template symmetry template gain also automated symmetry overhead rate symmetry rate symmetry largest case size cached never pruning cache conclusion incorporates caching symmetric cache mitigating much computational cost template reduce cost dynamically also caching template also symmetry detected make computation amir mcilraith amir mcilraith reasoning proceeding reasoning bacchus dalmao pitassi bacchus dalmao pitassi algothims bayesian inference focs bayardo pehoushek bayardo pehoushek counting proceeding aaai aaai darwiche darwiche recursive conditioning artificial intelligence dechter dechter graphical school california irvine larrosa morancho niso larrosa morancho niso practical applicability bucket elimination case artificial intelligence marinescu dechter marinescu dechter optimization
