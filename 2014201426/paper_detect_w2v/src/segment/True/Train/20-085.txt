incremental prover murray shanahan cambridge laboratory cambridge england affair reasoning axiom computing consequence derivable axiom prover explores used efficiently slightly axiom prolog throw away must explored scratch time axiom matter little affect robot affair propagating affair affair updating part affected leaving rest frame hayes dennett used formalism affair consist axiom inferred affair bringing axiom economical propagate consequence inferred regenerate scratch concerned show prover built work axiom definite clause inferred goal clause answer substitution prolog kowalski resolution horn clause prover goal clause definite clause refutation form goal clause empty clause resolving clause head unifies leftmost literal refutation generates binding answer substitution many clause head unify work council great britain leftmost literal prover refutation refutation discovered answer substitution extant prolog backtracking choosing clause bottom explored prover throw away substitution resolution tried successful deletion clause straightforward database operation time refutation goal clause explored scratch characterised repeated presentation goal clause slightly definite clause explored slightly modified definite clause overlap considerably circumstance economical employ incremental prover maintains dependency showing answer substitution take definite clause consequence propagated dependency answer substitution regenerate answer substitution scratch burden computation shifted incremental modification dependency definite clause modified answer substitution lookup clearly viable resulting must outweigh overhead recording dependency propagating consequence outline construction incremental resolution horn clause prover maintenance dependency incurs acceptable overhead incremental exploited maintenance system doyle dekleer maintain dependency consistency restored modification area concentrated like prolog dependency sort also used maintenance system dependency directed backtracking used prolog bruynooghe pereira shanahan incremental operation goal clause definite clause dependency clause clause substitution refutation many operation modifying part clause permit finer grain incremental modification extend naturally incremental modification dependency goal clause also incorporate negation failure dealing infinite tree exploration transition corresponds resolution step possibly backtracking goal clause definite clause explored passing substitution clause explore extra subsequence inserted answer substitution superset clause deletion explore subsequence removed substitution subset complicated deletion clause clause subtract case maintained explored propagating consequence changing thus obtaining propagating consequence changing thus obtaining substitution depend subsequence subsequence depend clause answer dependency clause dependency deletion clause must bring subsequence depend giving deletion must bring deletion substitution depend giving also dependency backtracking took exhaustion clause clause must bring restoration clause exhausted restored resumed thus generating subsequence inserted giving possibly producing substitution giving resumed continues reached dependent newly clause reasoning corresponds goal clause resolving clause conveniently list clause clause resolved practise simply list pointer database clause clocksin alshawi list tree mirror note node tree child clause dependency mentioned must maintained tree answer dependency clause dependency dependency leaf tree kept path root leaf constitutes refutation answer substitution indicated clause list kept node tree clause list maintained node tree childrens root node clause cost dependency tree list kind resolution step time expense storage overhead proportional deletion clause proceeds node clause dependency tree downwards removed removal node node deleted dependency clause dependency threaded tree removal node preceded deletion list leaf reached leaf refutation answer substitution deleted cost deleting clause proportional subspace existence proportion resulting adopting incremental correspondingly proportion negligible extra cost cost clause proceeds like node dependency reprsented restored resumed area reached explored backtracks past node restored tracing back root tree forming list node path root node goal clause generating goal clause resolving subspace thus explored explored anyway overhead adopting incremental cost storing dependency plus cost retracing path root deletion depend proportion newly explored reconstructing time made cost storage overhead recording whole binding incremental capable deletion definite clause confined outermost part tree near leaf confined branch tree wide also clause deletion clause followed clause case confined near root tree leaving peripheral foliage untouched finer grain incrementality avoided duplicating work done affected area difficult scope must remove part tree dependent replaced clause whilst branch node grown replace removed clause branch grafted back onto lead failure growing binding consequence must propagated rest tree pruning growing grafting process clause failed match match whilst match fail tree lifted replaced time offshoot replaces branch grafted grown offshoot incomplete brief incremental prover embedded horn clause planner kowalski kowalski planner affair goal representing affair planner built goal clause bowen kowalski incremental note suffice deletion clause bring axiom representing planner incremental prover propagate consequence demonstrate property computation lookup property also demonstrated prolog metalevel well formalism prolog used incremental goal cient keep entirely distinct copy expense copying clause obviate incremental arises deletion represents labelling node tree axiom node child part tree dekleer gation subject
