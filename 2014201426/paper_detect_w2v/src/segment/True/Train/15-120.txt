prolog inclusion assertion equality unification term unify syntactically attempted equality used term term unification succeeds binding introduced equality significantly improves prolog sophisticated data passing partially instantiated data extends multiuse arithmetic modification prolog straightforward computational overhead extra linguistic equality probably play role system prolog horn clause resolution resolution procedure prolog equality successor able unify succesor adapted lispbased prolog system kahn equality unification modified unification term fails assertion looked term unification procedure equality term binding term natural prolog extend expressibility generality prolog principally fall datatypes opportunity partially specified data former turn surprisingly augment prolog flexibility typified smalltalk potentially much major area greatly passing partially instantiated data alternative enumeration binding turn prolog computational overhead introduced eliminated compilation equality paramodulation rule proving literature chang datatype rational datatype equality rational term made functor numerator denominator distinguished used equality axiom assertion numl time time usual rule deciding rational augmented unification rule work unify unification fails establish goal demonstration succeeds unification succeeds binding fails unify succeed unification succeeds unify prolog briefly explained term lisp list functor remaining literal prefaced goal posed system succeed computation continues binding trail undoing backtracking told system match rational kind wish decide assertion numerator denominator uninstantiated succeeds unifying numerator prof multiplicative relationship must hold equality hold little succeed time also wish datatype rational assertion rule work prolog equality comparing term beginning functor goal unify goal head assertion succeed binding goal succeed automatic type conversion extensible datatypes generic operation equality gain modularity kornfeld tages generic operation structuring like smalltalk contribution computing fact whole automatically inherited subclass operation data datum decided time compile time paradigm paradigm message passing system receive message role played term role message formal analog structuring accomplished assertion subclass relationship indicated assertion containing term term body assertion relationship regular polygon four side side prolog want computing area regular polygon done functor side goal area unify head area assertion show term functor term functor succeed goal succeed prolog long side equilateral triangle area area kornfeld goal succeed also area assertion kind ellipsis interfere goal asking area triangle show triangle ellipsis circle saying ellipsis answering circle sense flexibility achieved objectoriented prolog able leave many computation undetermined computation objectoriented instantiation time true term goal unified indeterminate side unified assertion triangle succeed unify triangle fanciful term perimeter area equality assertion expressing fact perimeter closed area circle instantiated circle used circle functor code unlikely part practical left undetermined take long esoteric generality equality idea efficiently briefly partially specified desirable feature prolog deal partially instantiated data look partially instantiated data stand subset herbrand universe prolog able freely control prolog remotely like successively binding ground consideration remainder unification also prolog sussman preceded find inclusion equality prolog extends possibility passing partially instantiated data case significantly replacing enumeration ground term backtracking case make convenient enumerate binary functor arbitrary partially specified term uninstantiated term introduced must hold term subset herbrand universe term represents expressed term uninstantiated execute goal uninstantiated succeed binding represents unify unified unified unification succeeds succeeds five term instantiate succeeds instantiated neither uninstantiated term succeeds instantiated assertion declares term something item kornfeld preponderance impure instantiate data passed evaluablc warren work prolog evaluable true prolog instantiated goal able bury impure evaluable inside logically sound arithmetic impossible practical sense binding ground term wish term alternative enumerating binding network formalism borning sussman steele clark arithmetic successor practical kornfeld goal pred instantiated long list uninstantiated pred true case prolog succesive list alternative instantiated upon instantiate effectively save list item consideration checked clear characterize term preferable seem tool distinct compatible extralogical control annotation clark many uncomfortable flat style prolog opposed lisp lisp composition need glue successive computing area polygon straightforwardly augment prolog equality distinguish plus plus make sense prolog unify functors temperature converter relationship fahrenheit centigrade scale time like executable nakashima equality assertion invocation prolog construct understood declarative procedural sense thus precise procedural semantics care must exercised defining procedural semantics avoid infinite loop unacceptably wasteful yield system sense sufficient desirable property compiler precompute failing unification fail time property find practical restriction unification equality assertion assertion used match unifier goal form equality head unify goal assertion head recursive goal lead infinite computation avoid term goal counterpart head assertion functors must unification recursively equality assertion equality match unification prolog succeed normal prolog unifier consideration herbrand survey equational siekmann saabo unifier properly handle case introducing backtracking unification looked seem compelling route understood hierarchy paradigm unifier view consideration critically view functors must functor assertion thus assertion grouped much assertion grouped tation match term neither assertion match fail quickly assertion series derivation ensue potentially costly compiler much eliminate term relatable figuring functors statically code neither functor reached assertion definitely unified hash failure discovered quickly equality backtracking overhead failure conclusion experience date encouraging modification make equality done evening paradigm explored datatyping partially instantiated term natural feature impinge prolog hopeful paradigm equality emerge experience gained developing system composition musical specie counterpoint area music studied extensively century precise rule system paradigm developing system partially instantiated term used pitch instantiated note must pitch unification process partially instantiated pitch intersect backtracking avoided bibliography attardi simi consistency completeness omega enth joint artificial intellgence vancouver august borning simulation laboratory xerox parc july chang mechanical proving academic clark feature clark tarnlund academic ingalls system fifth annual symposium kornfeld tucson arizona january kahn feature unpublished manuscript nakashima prolog feature marseille september siekmann universal unification classification equational automated deduction york june sussman winograd charniak manual artificial intelligence laboratory memo sussman steele artificial intelligence laboratory memo november warren edinburgh artificial intelligence
