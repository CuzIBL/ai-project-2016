quantified boolean quantified automated planning even quantified boolean theoretically automated reasoning thoroughly investigated universal quantifier representing many computational propositional satisfiability reasoning procedure quantified boolean straightforward kind identify universal quantifier main area made effectiveness collection planning structured lead dramatic many computational conveniently formulated classical propositional many satisfaction form planning many property belong translation satisfiability classical propositional many plausible outside efficiently satisfiability propositional many harder forced restriction make lose practically belong hierarchy many determining quantified boolean meyer stockmeyer computing radius covering code mcloughlin many nonmonotonic gottlob form abduction eiter gottlob determining dimension probability schafer like satisfiability used applicable hierarchy procedure give good translation investigated partly procedure translation planning rintanen work determining truth quantified boolean quantified boolean planning preliminary quantified boolean form propositional prefix universal existential quantifier propositional occurring placing propositional truth recursively truth connective true false connective true true true true true false quantifier quantify procedure decide unit true else false determines quantified boolean procedure davis case main quantified boolean also correspond universally quantified prefix constrains tree main procedure sketched take true quantifier prefix represents prefix prefix clause literal empty clause false subprocedure unit simplification unit resolution unit subsumption unit fixpoint clause unit subsumption retains unit clause clause pruning procedure branching dependent inversion quantifier prefix branching quantified outermost quantifier structured case many onlv clause also quantified quantifier exhaustive unit propagation yield prohibitively induce tree leaf node potentially difficult pruning reasoning quantified outermost quantifier unit propagation detecting failed literal fourth reduces computation going valuation universally quantified quantifier look also valuation valuation valuation also idea call inversion quantifier assign valuation failed literal unit propagation anbulagan must evaluating inversion applicable quantifier code outline quantifier inversion code call main procedure made unit clause literal quantifier rintanen sampling sampling choosing valuation nevertheless turned trying valuation unit propagation help wrong valuation call sampling many node tree valuation covered exhaustively sampling best combined unit propagation choosing branching detecting failed literal separately code outline sampling code inserted call unit main procedure failed literal unit propagation detecting failed literal anbulagan also quantified quantifier proceeds literal clause unit propagation empty clause literal existential complement literal must true clause literal universal false quantified case also occurrence clause universal yield failed literal ordering prefix clausal form failed literal literal clause unit propagation unit clause universal seem false lemma maintain graph describing dependency edge clause node tree recursive call main procedure made noticeable well structured true universally quantified occupy case ratio universal normally tree leaf traversed clause universal evenly tree leaf traversed mean decrease tested planning quantified boolean handle closest anbulagan sato slower quantified boolean fixed clause mitchell propositional clause choosing negating probability presence clause existential asymptotically false gent walsh probability clause universal literal clause complementary existential literal universal literal high quantified gent walsh clause existential literal test prefix prefix varying parameter proportion universal prefix clause proportion universal increased cent step ratio step cent universal quantifier quantifies quantifier runtimes runtimes runtimes quantifier proportion universal difficult runtimes presence inversion sampling turn structured affect little node tree test disabled test depicted runtime parameter runtimes ultra workstation processor time accurate smallest measurable unit time millisecond depicts proportion true parameter rintanen ratio phase transition true false show runtimes full failed literal partitioning clause show runtimes full failed literal runtimes partitioning peak difficult obvious partitioning universal show failed literal dramatic partitioning clause reduces computation dramatically many universal ratio partitioning clause disjoint considering valuation universal take much time structured translation planning rintanen form planning identification operation reach goal successfully test propositional satisfiability kautz selman planning plan work circumstance constructed plan chooses time operation planning plan goal planning sent circumstance plan work runtimes planning encode existence plan taking four block configuration goal configuration evaluated separately column identifies column give propositional clause fourth column give truthvalue fifth give runtime enabled sixth give runtime inversion disabled seventh sampling disabled eighth failed literal quantifier disabled ninth partitioning clause sampling sample sample universal inversion valuation case disabling pruning lead runtime mulae relatively case partitioning clause decrease runtimes expect many structured decrease none used none hour sampling inversion four evaluated hour work automated reasoning quantified boolean investigated kleine blining resolution rule quantified boolean time procedure quantified horn clause vail give time procedure quantified clause cadoli extend procedure handle quantified boolean cadoli generalize familiar davisputnam procedure pure literal rule universal rule concludes clause existential false employed testing clause universal literal deleted satisftable true cadoli test node tree seems many universal ratio beneficial like cadoli hour also parameter varying like reported much difficult cadoli easy evaluated runtimes cadoli bigger runtimes conclusion work work systematic computational property arising planning automated verification improving accordingly degree freedom analyzing wider best reduction exhaustive handling universal quantifier applicable relatively case runtimes planning acknowledgement funded deutsche forschungsgemeinschaft thank referee comment marco cadoli access
