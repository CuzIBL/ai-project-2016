longstanding goal planning generalize plan replanning reduce planning time tackle domain tractable planning framework markov process rmdps rmdp representing generalize plan specified term multiagent agent optimized relative sampled subset linear sampled suffices close achievable optimizing show generalizes plan successfully significantly loss relative planning demonstrate real strategic game planning optimize plan agent fixed many agent face lifetime experience help well even replanning agent play strategic game freecraft game open warcraft game game agent faced many must control agent unit skill defeat opponent resource gold wood unit peasant collect resource build footman fight enemy unit barrack used train footman composed block differ term layout type unit resource like agent learn experience playing enabling tackle replanning like agent generalize deal planner idea longstanding goal markov process reinforcement learning freecraft strategic domain peasant barrack castle forest gold mine footman enemy even planning challenging unclear translate domain assign mdps freecraft even case mapping insight many domain term domain task domain freecraft task peasant footman enemy rmdp probabilistic framework rmdp domain schema suite domain specifies dynamic depend rmdp domain subfunctions domain thus freecraft approximated term peasant footman gold thus subfunction subfunction subfunctions domain subfunctions diately determines domain used acting thus subfunctions subset replanning optimality criterion evaluating classbased distribution show optimized linear also learn optimizing relative sample encountered agent sampled suffice construct close obtainable distribution show automatically discovering subclass system administration task freecraft task show successfully generalize importantly also obtains significantly planning handle markov process defines system dynamic template task domain domain defines instantiated framework domain schema specifies also domain doni assignment freecraft domain peasant footman gold peasant task domain waiting mining harvesting domain case speasant task schema also specifies link representing link domain link peasant linked barrack barrack gold wood resource link relate many enemy many footman schema also specifies link take fixed throughout time thus link specifies containing peasant peasantl barrack peasant barrackl dynamic rmdp also schema schema specifies take eral doni wait mine harvest build also transition specifies probability distribution next linked barrack time step task peasant build wood gold transition conditioned peasant linked barrack thus must compact specification transition depend unbounded deal idea aggregation freecraft aggregator probability transition unbuilt built built peasant task build also simplicity dependency complicates planning significantly represents contribution enemy specifies enemy dead dead rmdp uniquely defines ground factored transition specified usual dynamic bayesian network factored thus system time vector defining subset part instantiation corresponds ground transition dynamic specifies dependence time time parent linked peasant parent time time barrackl peasant goldl woodl transition thus probabilistic planning thus enemy time dead enemy remains ground rmdp specifies time step agent must ground simply parallel multiagent domain step ground vector case degree parallelism also simplicity presentation multiagent case freecraft assignment unit freecraft tactical domain simplified freecraft schema illustrated unit participate game footman enemy domain healthy wounded footman link enemy thus transition footman depend enemy footman enemy dead probability footman wounded significantly footman attack enemy thus footman selects enemy consequence link exponentially joint assignment exponential unit freecraft multiagent also exponential agent thus exponential exponential linear infeasible address subfunctions case factored linear used thus associate subfunction simply depend subfunction enemy enemy associate numeric assignment enemy richer associate pair even subset closely thus omit lack linear adapted joint assignment transformation free time parameter exponentially guestrin koller parr hereafter show case exponentially efficiently exactly compact applies factored decomposed linear grows exponentially induced tree width graph process dynamic applies representing process dynamic highly factored involving closely induced width resulting graph efficiently generalizing principled decomposing type domain help address help build intuition behave transition differ contribution reasonable footman chance killing enemy thus restrict requiring subfunction formally subfunction parameterization hold trivially scope simply simply parameter assignment also depend neighboring must parameterization accordingly parameter joint linked pair defining subfunctions subfunction contribution footmanl footman contribute defines link importantly contribute summation perhaps neighbor contribution differ thus footman subfunction parameter dead footman contribution alive generalize good wide replanning step simply must optimize maximizes formalize intuition probability distribution agent encounter want find good distribution view task optimizing chooses rest dynamic precisely transition obvious chooses distribution remaining evolution done dynamic footman enemy link yield formalize task mdps wish optimize parameter ground address used simply parameter subfunctions recall vector natural relevance eliminated infinite make unbounded prevent zero sufficiently fast tends infinity generative process selecting link intuitive formalized thus distribution arbitrarily long exponentially decaying sampling main size size grows grows exponentially even infinite practical address sample reasonable distribution resulting used sampled sampling term form note ables form thus sampled efficiently summarized step sampled simultaneously show close sufficient sampled sampled high probability sampling close considering parameter minimizing subject sampled optimal sampled probability omitted lack farias analyzing sampling mdps introduced sampling case subset full previously addressed farias relies sampled ideal distribution stationary distribution optimal unfortunately sampling distribution difficult computing sampled factored exactly avoiding dependency ideal distribution learning assumes many case even play role peasant build barrack distinction type learned agent gain experience domain detects regularity procedure take exactly tion feature feature peasant linked barrack well archer footman training data learning training data like many tackling task tree regression construct tree predicts parameter feature thus tree corresponds feature branch tree defines subset feature path leaf path regression tree learning construct tree predictive construct tree mean leaf close training data leaf thus leaf tend correspond thus take leaf tree subclass subclass characterized feature specified path leaf summarized step note mean subfunction leaf used subfunction parameter subfunction optimized step evaluated domain network administration freecraft network administration matlab cplex full used memory learning subclass subclass leaf characterized feature vector path computing parameter optimize relative acting repeat cording feature coordination graph maximizes take experimented multiagent network network topology pair neighboring machine factored efficiently tested extent plot ject gave assignment topology cluster used learn tree case learning partitioned subclass illustrated column highest broken server reaction affecting whole network column lowest affect evaluated classbased comparing planning topology sampled network sampled probabilistic planning network administrator training data learning learned evaluated monte carlo step learning subclass tactical freecraft footman enemy network used restriction parameter parameter optimized network process repealed network close replanning suggesting generalize well also utopic optimal removing neighbor machine loose close next wanted procedure learning yield default maxnorm replanning graph suggests learning tree regression tree procedure much replanned freecraft freecraft game used cplex task game strategic tactical battle maneuver freecraft interface task publicly http task rmdp system consulting domain planning evaluated game visualize reader view website website also rmdp note constructed relative game evaluated real game tactical goal take opposing enemy force unit time step footman decides enemy attack enemy freecraft modelled footman enemy decrease unit attacked used aggregator attacker encourage coordination footman linked buddy ring term triple linked footman enemy resulting fairly demonstrates successful coordination footman initially footman enemy enemy injured footman switch target enemy weak footman continues attack tackle enemy footman defeat enemy freecraft planning grow exponentially unit planning infeasible fortunately instantiate time step significantly thus even execute step generalize footman enemy replanning step continues demonstrate successful coordination footman beat freecraft unit enemy increasingly feature footman enemy loses freecraft close battle strategic goal kill enemy player peasant collect gold wood build barrack gold wood resource consumed build barrack gold player train footman footman attack enemy attacked enemy loses fight back kill footman peasant barrack footman enemy peasant central peasant footman buddy scope triple resulting peasant gather gold wood build barrack gold build footman attacking enemy footman wait footman built attack enemy stronger enemy able kill footman weak next footman trained waiting attack weak enemy able kill planning infeasible efficiently thus tackle peasant footman replanning peasant gather resource interestingly attacking footman wait trained attacking footman kill enemy thus probabilistic planning successfully joint pair pair conclusion tackled longstanding goal planning generalize plan complementary tackle replanning generalize plan tractable significantly planning fact generalizes well plan subclass discovered learning procedure improves successfully demonstrated real strategic game many dynamic resource allocation term task focused reusing isomorphic evolving parallel combine type work boutilier iteration computes generalize computing unlikely generalize relies proving tool deterministic planning focused generalizing compactly learned many domain incrementally build closest spirit work yoon extends stochastic domain procedure discover find regularity compactly thus tackle task multiagent planning exponentially compact interchangeability learning subclass deal case domain vary successful heterogeneous influence dynamic additionally connectivity domain many robocup arbitrarily many blocksworld probably case freecraft tactical domain scale combine sampling address high connectivity extending highly open successfully replanning domain sufficient good domain good refined assumed time many domain blocksworld robocup false work guestrin show independence dynamically changing coordination multiagent idea tackle dynamically changing believe significantly applicability task acknowledgement grateful parr many work muri administered office naval grant force darpa task
