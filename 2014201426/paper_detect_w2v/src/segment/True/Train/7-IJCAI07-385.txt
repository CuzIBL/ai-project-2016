incremental repeatedly find shortest path gridworld cell goal cell traversability cost cell decrease able find shortest path reuses beginning preceeding tree identical tree restoring open list time deviate preceeding demonstrate runtime advantageover lifelong planning alternative incremental heuristic studied repetitive process need find shortest path series time traffic airport route congestion case replan incremental able find shortest path series problemindependently preceeding koenig incremental hart repeatedly find shortest path gridworld cell goal cell traversability cost cell decrease able find shortest path reuses beginning preceeding tree identical tree restoring open list time possibly deviate preceeding encountered edge cost restarts solves reuses preceeding demonstrate runtime koenig alternative incremental solves finite gridworlds vertex correspond cell edge cost decrease time work gridworlds cell blocked unblocked move unblocked cell four adjacent cell cost adjacent cell unblocked able formally finite unblockedcells succ unblocked cell border unblocked cell repeatedly determines shortest unblocked path unblocked cell sstart unblockedgoal cell sgoal sstart goal traversability cell knowing cell unblocked hart heuristic maintains cell cell cell goal cell heuristic consistent satisfies triangle pearl cell cell cell parent pointer parent cell parent cell tree also maintains data closed list cell expanded initially empty open list cell expanded initially cell zero repeat procedure remove cell smallest open list closed list expands procedure unblocked adjacent cell adjacent cell neither open closed list generates adjacent cell adjacent cell expanded cell plus parent pointer adjacent cell expanded cell inserting adjacent cell open list adjacent cell open list expanded cell plus adjacent cell adjacent cell expanded cell plus parent pointer adjacent cell expanded cell terminates open list empty expand goal cell simplicity goal cell expanded show cell marked goal cell marked termination consistent manhattan absolute cell goal cell cell goal cell cell left corner cell also left corner corner parent pointer pointing parent cell tree expandedcell also sequencenumber corner expanded make four property terminates expanded cell monotonically nondecreasing time parent pointer cell expanded expanded cell cell cell cell shortest path cell cell identified reverse parent pointer cell cell property find shortest path cell goal cell terminates expand goal cell fourth path cell goal cell terminates open list empty incremental give pseudo idea behind shortest path cell goal cell traversability cell shortest path cell goal cell initially expands cell restores time possibly deviate encounter cell traversability restarts time scratch open closed list parent pointer cell contained step step restoration closed list expandedid cell identifying reusable cell repeatedly checking expandedid blockid expandediteration line generatediteration iteration reusable cell know cell decrease cell line efficiently part identifying traversing relevant part fringe line efficiently linked list skip blockid cell expandedid blockid expandediteration traverse outside continuous area reusable cell border gridworld case continuous area reusable cell touch border traverse outside continuous area reusable cell clockwise anchor cell leave anchor cell time reach cell border case traverse outside continuous area anchor cell reach potentially cell border fourth gridworld illustrates process collapse generatediteration expandediteration iteration code make pseudo code harder continued cell cell expanded expandedid cell expanded cell expanded expandedid cell traversability expands cell expandedid cell became blocked expands cell expandedid expandedid cell cell thus expandedid cell became blocked expands cell expandedidsucc expandedid cell neighbor cell expanded thus succ expandedid cell traversability expands cell expandedid curly brace refer line pseudo code thus cell guaranteed unblocked closed list refer reusable cell gridworld illustrates process cell became blocked cell reusable indicated grey turn maintaining complicated case reuse cell like expandedid mean cell expanded expandedid preceeding preceeding case cell expanded cell reusable cell cell cell invalid address maintaining iteration iteration also maintains blockid expandedid expandediteration cell initialized blockid cell expandedid expandediteration maintains expandedid blockid expandediteration cell expanded expandedid cell preceeding determines cell expandedid reusable iterationth proceeds invalidates cell sequencenumbersno blockid blockid iteration much visiting cell invalid expands cell iterationth expandediteration iteration expandedid blockid iteration iteration iteration step early termination goal cell reusable need replan shortest path cell goal cell preceeding also shortest path cell reusable blocked terminates replanning path cell goal cell cell reusable unblocked scratch step restoration open list unblocked cell border reusable cell open list identifies anchor cell cell border reusable cell parent pointer goal cell cell transition cell reusable cell cell anchor cell gridworld illustrates process resulting anchor cell identifies cell belong relevant part open list fringe reusable cell form continuous area reachable cell traverse outside continuous area clockwise anchor cell unblocked cell border reusable cell relevant part open list stop reach anchorcell time leave anchor cell time gridworld illustrates process cell form relevant part open list indicated show main termination cell goal cell cell became blocked visit cell traverse outside continuous area reusable cell stop anchor cell left south left east stop identify cell belong relevant part open list show main cell open list relevant cell goal cell cell became blocked cell irrelevant thus relevant part open list goal cell unblocked cell part shortest path cell goal cell thus refer open list mean relevant part open list step restoration parent pointer parent pointer reusable cell guaranteed parent pointer cell open list necessarily case cell open list became unblocked blocked parent pointer thus preceeding need corrected case parent pointer cell open list cell reusable parent pointer need corrected case case parent pointer unblocked cell path cell cell shorter path cell cell need restored time path path parent pointer cell need corrected left show main parent pointer cell open list cell goal cell left show show cell became blocked parent pointer cell incorrect need corrected case find reusable cell adjacent cell cell reusable cell plus parent pointer cell reusable cell case cell open list became unblocked exactly adjacent reusable cell correctness case next step sorting open list step open list binary heap transforming step binary heap inserting empty binary heap corman step restarting restarts open closed list computeshortestpath correctness restoration parent pointer cell open list easy case thus kind gridworlds used also parent pointer cell open list parent pointer cell reusable parent pointer cell cell expanded cell adjacent cell parent pointer cell procedure blockid forall cell generatediteration expandediteration expandedid open sstart sstart generatediteration sstart iteration computeshortestpath blockid iteration open sgoal true else expandediteration iteration expandedid forall succ generatediteration iteration iteration parent false cellreusable expandedid blockid expandediteration true false procedure updatemazetraversability tmpblockid forall cell traversability blocked cellreusable expandedid tmpblockid tmpblockid expandedid else parent null forall succ cellreusable expandedid tmpblockid tmpblockid expandedid forall iteration tmpblockid blockid blockid tmpblockid blockid iteration procedure retrievefringe open iteration iteration sgoal cellreusable parent parent sstart exit path move around area exactly cell cellreusable forall cellreusable generatediteration iteration unblocked parent null cellreusable parent forall break generatediteration iteration cell left procedure main repeat computeshortestpath exit path repeat identify path parent pointer wait traversability updatemazetraversability blockid iteration expandedid sgoal retrievefringe false fringe unblocked cell unblocked cellsadjacent cell manhattan mean cell adjacent cell cell expanded cell thus parent pointer cell cell cell expanded parent pointer cell thus parent pointerof cell cell expanded cell monotonically nondecreasingover time parent pointer cell thus alternatively must case thus thus cell differ must case mean parent pointer cell unblocked cell adjacent cell expanded parent pointer cell expanded cell monotonically nondecreasing time hold thus cell adjacent cell must thus must parent pointer cell celland cell thus must mean expanded cell adjacent cell parent pointer cell cell thus restoring cell decrease parent pointer cell open list cell reusable reusable cell thus cell need remains reusable cell plus thus parent pointer cell remain parent pointer cell open list cell reusable clearly parent pointer need corrected nonreusable cell preceeding pointed cell time expanded cell adjacent cell reusable cell adjacent cell subset thereforefind reusable cell adjacent cell cell reusable cell plus parent pointer cell reusable cell work incremental peter unpublished reuses beginning preceeding tree identical tree like restores open list repeating preceeding deviate cell need open list cell make repeated restores open list repeating preceeding main traverse expandedcells traverse expanded cell expanded cell form continuous area cell expanded cell basically form outside perimeter area area grow quadratically perimeter traversing cell perimeter potentially much traversing cell area incremental operate adaptive koenig likhachev unchanged make hvalues informed handle edge cost decrease thus used lifelong planning koenig differential trovato dorst leave unchanged modify handle edge cost decrease thus used viewed transforming tree preceeding tree differential slower tends slightly close goal cell moving agent used robot part lite koenig likhachev stentz simpler extend experimentally gridworlds size goal cell obstacle density cell blocked obstacle density zero gridworld traversability cell shortest path cell goal cell path cell goal cell existed traversability cell path time continued next gridworld runtime gridworlds path cell goal cell pseudo code simplicity handle case cell unblocked maintain obstacle density traversability rate cell close goal cell blocked unblocked cell close goal cell unblocked blocked rate zero rate obstacle density cell close goal cell manhattan closeness time manhattan cell closeness zero changing terrain inspired realtime game like warcraft player repeatedly attack player attack attacking player reach defending player process attacking player destroys defending player defending player build thus traversability terrain around attacking player simulated runtime runtimes pentium gbyte worth pointing runtime depend hardware compiler data coding trick used testing work thus proxy expanded cell find shortest path fair used binary heap open list deciding cell expand next broke cell smallest favor cell largest gvalue tends runtimes runtimes traversability obstacle density showing fastest runtime bold relationship hold consistently closeness hand closeness rate sufficiently threshold decrease closeness show rate bottom traversability overhead preprocessing traversability tends smallest none followed roughly overhead amplified rate closeness left decrease part preceeding tree reused rate bottom extent also decrease part preceeding tree reused closeness closeness closeness closeness closeness closeness rate part preceeding tree actually reused tends largest followed none roughly overhead identifying part reusable tree never fastest closeness decreasing threshold rate fastest decreasing threshold rate fastest slow rate closeness threshold fastest thus feasibility demonstrates find shortest path behind thus worth studied conclusion incremental repeatedly find shortest path gridworld cell goal cell traversability cost cell decrease feasibility demonstrates find shortest path work characterize acknowledgment thank peter sven koenig collaborated visit alberta ingenuity centre machine learning alberta collaboration comparing inspired year time seems know whereabouts peter also thank ariel felner intelligent partly award sven koenig view conclusion contained representing official expressed implied sponsoring agency company government
