extending rewrite system laboratory reve handle operator incorporating rule boolean algebra prover paradigm proving termination associativecommutative system system widely used system semantics equality declarative explicit control canonical system system rewrite term normal form used procedure equational survey rewrite system huet oppen rewrite system match term differentiated atomic unfortunately associativity commutativity handled axiom rule unification used take associativity commutativity rewrite system term constructed work part grant leave illinois jieh hsiang york stony brook david laboratory menlo park regular equat ional axiom rule term match subterm associativity commutativity term substitution subterm next acrewriting reve term rewriting lescaune refutat ionally proving canonical rewrite system boolean algebra paradigm computing arithmetic operator suggest proving termination rewrite system containing operator procedure introduced mean deriving canonical system serve procedure equational procedure creates rewrite rule resolve ambiguity resulting rule overlap reve interactive canonical rewriting system user construct ordering system reve able inductive invoking induction huet hullot incorporated reve term rewriting extend system unification stickel efficiently linear diophantine arise huet procedure modified handle operator peterson stickel plan series system interested unification rewrite system boolean algebra refutational proving dershowitz implicitly operator mean rule yield associative significance parent hesitation accordingly term flattened removing embeddings associative system sound fact rule proposit ional equivalence fact associative commutative term reducible must case rule reduce else must case reducible fourth rule used termination rule system confluent pair reduce term side associative commutative associativecommutative unification livesey siekmann rewrite system used kowliski straightforward computation rewriting paradigm advantageous computing mode main rewrite rule equivalence implication form procedure resolution hogger suggested equivalence prolog quotient remainder stickel used find sigma sigma sigma overlap overlap must case rule overlapping subtcrms lankford ballantyne peterson stickel rule side outermost pair must reduce terra permutation dershowitz dershowitz associative path ordering recursive path ordering show rpot sometimes show subterm subterm never show subterm subterm transform make transformation easy show much harder show reverse motivation associative path ordering term associate transforms associative path ordering thus ordered formed successively applying transforms flattened note flattening replaced associative role transform subterms transform term transform subterms composing operation transforms note need step subterms greatly computation fact ordering operator need kept associative recursive path ordering interactive reve comparing term
