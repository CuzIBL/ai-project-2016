describes transformation automatic successive transformation transformation carried form systematic simplification largely declarative mitigates applying problemspecific procedural scheme suggests framework describing also combine formal reasoning procedural generality system proven expressively powerful artificial intelligence machine learning automated reasoning intelligent interface illustrate complicated procedure idea serve tool hypothesis validated generating difficult task specified must satisfied simultaneously interact complicated case system used system case detract system differs database retrieval database retrieval deal previously sorted stored data item constructing novel fail largely ignoring good constantly concerned choosing good many possibility difficult highly like utility motivation automatic raise address deal evaluating well satisfies case clearly evidence sample even arbitrarily data referred vagueness difficulty tool powerful reasoning reasoning unambiguously somehow computational procedure natural automatic system rigorous formalism domain difficulty automatic literature expressive transformational successive transformation suggests framework also scheme procedural well system adopted domain formalism expressively powerful prover substantial reasoning base proving serf rich interluisp prover specified existentially quantified assignment qixjted assignment counter erampu assignment assignment quote listp quote listp specified term command read find containing difftrent findx command specifies resource time prover propositiooal calculus induction characterize implicitly universally quantified lacking quantifier recursion alternative give rise constructive viewed admitted like fact akin pure lisp prover generates compiled lisp code term proper term feature fact give straightforward iterating task task task descriptor describes task list task srorr task referencelist list assumed conjoined association list form substitution task describes test task task descriptor subgoal call pair subgoal used interchangeably task operation corresponds transformation transformation partially instantiating analyzing term case unfolding simplification taskspecific transformation invoked transformation completed task transforms subgoals task maintained agenda task task agenda task turn processed task repeat termination agenda empty specified time exceeded illustration agenda viewed tree node hich corresponds task major preprocessor executive task unirator task performer simplifier evaluator data task agenda also bast maintains form depicts architecture preprocessor also translates abbreviated executive executive manages flow control control maintain proper control loop task vary intentionally introduced feature turned termination equality form term containing task generates task resulting task task assigning applicable task operator attaching collected task scored plausibility scoring task operator syntactic extra coefficient scoring substantial controllability task performer lach task operator process generates list subgoals task retrieving relevant applying process task operator task task operator mark task session test retrieves clue test fixed successful test suhgoal successful test invokes linear simultaneous linear applies analyze applies rase case dcpand open dcpand task resulting subgoals temporarily inactivated recall task assemble reconstructs recall activates inactive suhgoal processed task operation simplifier major simplifier transfer sequentially substitution equality onto carrying substitution hardlist rewrite make simpler handle simplifier invoked subgoals resulting task simplification possibly eliminates subgoal subgoals resulting subgoals subject furl tier processing task simplification earning simplification simplifier relief task need care mundane normalizing simplifier task able relatively predict encountered eliminating apparently unsatisfiable subgoals simplifier enables promising fact simplifier make rewrite lemma degree extensibility evaluator evaluates well system able learn experience judge satisfies base critically base employ form heuristic form production rule name divided prover boxed lisp code system generates lisp code lisp code invoked term evaluated evaluating term extensively test task verified evaluator also expand task retrieves expands call appealing able restrictive novel sdefn lemma counter quick genrl case accor control fold lock lemma prover lemma proved stored name type simplifier make rewrite type lemma rewrite term play role block generating simply constituted rich substantially make system behave naturally used test task list quoted actually stored unquoted corresponds formal classified type counter must sorted user procedurally attached production part transforms possibly form simpler handle reverse quote transformed reverse quote linear simultaneous linear heuristic substantially illustration task processed task performer retrieves stored stored test evaluates established associating clue survives test verified evaluator possibl continuing procedure generating task long used many task machine learning learning system user interactively stored initially system lenat lack reasoning generates simply algorithmic specification gelernter experimented idea draw trying geometry geometry machine gelernter used prune backward chaining many magnitude structured system domain lisp data specified form desired pair expressive handling modification suitable case moderate expressive ballantyne bledsoe grapher generates printed quote case thown well time topological conjecture conjecture grapher construct relationship graph occurring conjecture graph serf specification employed able admittedly difficult cryptoarithmetic regression plan modification waldinger also prolog driven proving hardly classified carried applying controlling backward chaining prover semantically checking conjecture counterexample powerful howe describes projected near incorporating learning updating stored favor evaluating classifying experienced devising control dynamically adjusting task computation task tree represents derivational relationship task used evenly distribute extending elaborating base enriching user interface integration prover also play invaluable role conclusion automatic transformational suggests paradigm viewed transformation specification conforms scheme substitution equality view flexibility selecting scheme relatively enables formal reasoning procedural cooperate generality modifiability controllability system considering role play intelligence simulation intelligence belief true lead greatly enrich contemporary like thank robert boyer moore invaluable advice much thanks bledsoe encouragement gratitude also william young patiently proofread draft donald good generously permitted resource preparation
