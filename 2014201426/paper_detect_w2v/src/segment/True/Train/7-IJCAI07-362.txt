work anytime heuristic anytime window node localized sliding window comprising mode gradually proceeds incrementing window size tree property modification optimal iteration knapsack demonstrate efficacy anytime optimization work time limitation major need practitioner facing spawned anytime dean boddy work time limitation anytime regularly suddenly terminated best produced heuristic branch dfbb variant sarkar default anytime stream gradually improving suffer excessive node actually reach optimal anytime broadly classified namely heuristic pohl hansen zhou hansen likhachev beam zhou hansen furcy heuristic heuristic multiplied yield anytime variant series produced iterating hansen zhou hansen gradually decrementing iteration likhachev modify selective commitment kitamura major disadvantage weighing heuristic introduces substantially heuristic pearl difficult establish node weighing lengthy simulation find parameter also heuristic remaining path guided pearl used distinct kumar case applicable hand beam promising node remaining node pruned anytime variant beam zhou hansen furcy reasonably good lack providethe user apriori remains well work alternative anytime heuristic anytime window localizes competition fixedsize window comprising node outside window window slid downwards window window size mode increased iteratively proceeding pure like iteration window size anytime guided pruning relaxation retains admissibility heuristic continues mode window noted need explicit analyze tree reveals property term heuristic also optimal anytime window guaranteed iteration backtracks dynamically adjusts window size iteration restriction adhered demonstrate efficacy optimization namely traveling salesman knapsack comparative anytime like dfbb show considerable anytime window considers node term competition partially explored path node practice heuristic dependent pearl node lying comparable vary substantially node distant thus competition localized tighter pruning also node competitive even expect good localized form localize node sliding window work phase loop window algo routine fixed window size computes restriction loop algo window restriction gradually relaxed iteratively improving window routine work window size window size used restrict queue window size localized node expanded node open list suspended iteration window slide deeper node explored window terminates goal node expanded like termination open list node cost cost best iteration call window routine time gradual relaxation window window size mode window routine terminates node suspended iteration suspended list empty terminated returning optimal open list emptied suspended list moved open list window procedure window curlevel openlist empty bestsol node node openlist closedlist bestsol bestsol else curlevel windowsize remove closedlist suspendlist goto line else curlevel curlevel isgoal bestsol goal bestsol successor nodedo calculate openlist closedlist suspendlist else ifthen previously calculated path else ifthen previously calculated path goto line size increased used gradual window terminated interrupt best thus returned anytime window calculate openlist bestsol bestsol window call window suspendlist empty terminate bestsol optimal else openlist closedlist move suspendlist openlist windowsize windowsize goto line anytime desirable property namely interruptibility progress property ensures anytime termination time time allocated eventually optimal finite adheres property mentioned depthfirst mode trying fast possibly iteratively window size eventually window size node window optimal returned opportunity attain anytime termination substantially consistent heuristic node expanded window routine iteration lowered thus noted case iteration window loop property easy attain moving suspended list open list line algo iteration analyzing tree analyze response window term cost tree suggested pearl tree leaf node grouped part optimal goal node situated node terminal node window terminates optimal goal node suboptimal terminal node reached optimal path path node tree removed path node labeled node root node belongs binary tree quantify node probability reaching optimal goal node window restriction terminology probability node open list window size open list probability open list window size next tree node convergence probability node convergence probability window size lemma lemma node window size cost tree lemma probability reaching optimal goal node window size cost tree probability heuristic relative arbitrary distribution node belonging node thus identically distributed combining eqns observe node probability also also consistent heuristic thus property statistic know cardinality probability converging exponentially implication suggests probability converging exponentially thus approximated decreasing probably decrease exponential node optimal convergence probability distribution linear distribution exponential substituting eqns node window size binary tree height node well convergence probability window curve node convergenceprobabilities window size binary tree height curve observe node convergence probability explained exponential rapidly converges investigating heuristic observe convergence probability window convergence probability window size binary tree height node window size knapsack size curve show much variability convergence probability window size heuristic marginal node window substantially explained fact decrease causing relatively probability even pronounced node remain close hand node exponentially thus increased node expanded causing appreciable variance node presenting node convergence probability changing window size knapsack heuristic density fitting dominates optimal convergence window size knapsack depict node convergenceprobabilities heuristic show identical analytical anytime window provable anytime stream gradually improving established modified termed anytime window produced prespecified optimal iteratively tightened iteratively improving stream procedure window curlevel minsus openlist empty goto node node openlist closedlist goto line window size else curlevel windowsize move closedlist suspendlist minsus goto line else curlevel curlevel goal window window goto line bestsol move closedlist openlist merge suspendlist openlist windowsize openlist empty bestsol goto line iteration modify window routine window algo routine suspended node fsus noted node open list open list suspended list merged incrementing window size produced anytime window node closedlist suspendlist windowsize calculate openlist bestsol bestsol window suspendlist empty terminate bestsol optimal else openlist closedlist move suspendlist openlist goto line algo work high iteratively reduces routine algo intermediatesolutions iteration suspended list moved open list terminates suspended list empty iteration empirical comparing anytime dfbb optimization namely knapsack euclidean traveling salesman time spent proportionalwith node expanded term node cost node knapsack knapsack heuristic fitting remaining decreasing knapsack cost cost node dfbb percentage optimal convergence node curve initialized decreased iteration euclidean used spanning tree heuristic tour percentage optimality comparing dfbb knapsack observe superior dfbb term well percentage optimal convergence node knapsack show percentage optimal convergence node knapsack tour node euclidean percentage optimal convergence node euclidean node reiterating superiority window restriction concludethat considerably dfbb optimal convergence achieved conclusion anytime localizes competition sliding window knapsack demonstrate efficacy anytime noted form work memory restriction explore node knapsack memory adopted
