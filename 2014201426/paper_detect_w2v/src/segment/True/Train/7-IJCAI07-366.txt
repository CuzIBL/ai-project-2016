statistical testing rely sampling feasible path control flow graph difficulty come tiny ratio feasible path adaptive sampling inference testing able retrieve distinct feasible path high probability proceeds alternatively exploiting updating distribution path path accommodating dependency data sparsity parikh validation artificial demonstrates dramatic becoming domain machine learning motivated system rish ideally system able automatically adapt maintain repair step build system automatically system behaviour line testing brehelin modeling xiao debugging zheng revisit statistical testing denise sampling path control flow graph path test case exerting path path feasible control flow graph overly case fraction feasible path tiny ranging discriminant learning failed characterise feasible path tiny target generative learning exploration exploitation inference testing inspired distribution edas baluja davy learning auer lugosi proceeds iteratively generating path distribution programpaths updating distribution path labelled feasible infeasible made extending parikh hopcroft ullman powerful propositional long structured path contribution learning lugosi kocsis szepesvari reinforcement learning goal maximise distinct feasible path process opposed learning fixed organised briefly review work relevant machine learning testing introduces formal background describes parikh give system describes goal empirical validation artificial concludes perspective work interestingly synthesis grand goal machine learning machine learning testing seldom literature ernst detecting instrumenting hand searching predetermined regularity trace brehelin deterministic test procedure generating device trained used test coverage vardhan goal test concurrent asynchronous checking grammatical inference used characterise path relevant checking xiao testing game player discovering game difficult learning rule learning construct remotely work zheng actually concerned debugging identification trace misbehaviour ernst vardhan used brehelin used xiao black hand test done manually inspecting denise tested control flow graph node edge formally control flow graph finite automaton finite alphabet node block specifies transition node path finite iteratively choosing node successor node final node noted path case practical testing path classical labelled combinatorial flajolet thus used sample path path sample labelled feasible infeasible denise therein infeasibility path arises violates subtle dependency part infeasibility identified limitation rest node correlated node unchanged successor correlated feasible path path successor node must also successor node referred expressing possibly fragment path loop time loop happens restricted semantics uranium beam control procedure exactly time gouraud referred loop labelled path supervised learning path feasible learning specificity firstly noise oracle make secondly huge dozen hundred thousand path hundred long path labelling cost runtime path thirdly data distribution severely imbalanced infeasible path outnumber feasible many magnitude feasible path learning unsuccessful dasgupta lastly label path markovian begleiter many identify desired dependency transition frugal propositional inspired parikh hopcroft ullman occurrence path occurrence categorical give next occurrence occurrence learning framework devised exploration exploitation inference testing denise proceeds sampling path high ratio infeasible path goal thus sampling able retrieve distinct feasible path high probability path initially labelled path gradually enriched path labelled goal differs learning aimed retrieving informative mccallum learning interested sampling frontier discriminated interested sampling feasible mentioned learning hindered imbalanced distribution dasgupta goal also viewed perspective sampling distribution edas baluja davy aimed identifying optimum fitness edas iteratively proceed sampling distribution computing fitness sample updating biasing distribution sample maximal fitness relates exploration exploitation edas supposed gradually switch exploitation distribution converges optimum fitness goal gather feasible path must prevented generating also learning bandit gambler must next machine play past lugosi kocsis szepesvari relates cesabianchi lugosi kocsis szepesvari interested identifying best must avoid repeating past move borrowing edas incrementally exploiting updating distribution build probabilistic parikh formally probability generating feasible path conditionally successor occurrence time path probability used graduallyconstruct path iteratively selecting successor conditionally occurrence formalism meant avoid limitation probabilistic fsas markov begleiter actually probabilistic fsas likewise markov long dependency transition markov accommodate dependency sparsity data probabilistic parikh viewed case probabilistic abney take occurrence system module init module determines probability module probability iteratively path module module path construction initialised last node occurrence module selecting successor last node exploited final path occurrence plus formally probability generating feasible path conditionally occurrence occurrence init module conventionally path satisfying next node maximising probability ultimately feasible path simplest greedy selects successor node maximising roulettewheel stochastically selects node probability proportional bandist auer bandit algorithmis logarithmicregret loss optimal unknown trial bandist deterministically selects node maximising path satisfying successor init module init module determines probability used module baseline init computes fraction path satisfying feasible fails guide efficiently disjunctive target path feasible occurrence followed feasible vwvxvw vxvwvx vxvwvw feasible infeasible path vwvxv next step successor occurrence seen occurrence followed occurrence satisfied occurrence followed occurrence seeded init devised remedy abovelimitation idea subset seed feasible path belonging conjunctive subconcept feasible path conjunctive seeded procedure feasible path infeasible path ordered else construction seed seed stochastically extracted seeded procedure inspired torre initialisation feasible path ordered seed path iteratively considers feasible path construct previously path infeasible path parikh construction infeasible path sufficiently feasible path belonging conjunctive branch xors probability reflect long dependency node transition exploration strength enforced restart construct seed discounting feasible path time baskiotis validation describes used validate empirical sensitivity labelled path criterion validated node edge ratio feasible path path stochastic also baskiotis limitation series easy medium hard ratio feasible path easy medium hard node varies path varies variant greedy seededgreedy seededroulettewheel bandist seededbandist sbst variant reported distinct feasible path path averaged baseline sampling outperformed magnitude omitted visualisation variant displayed parallel easy medium hard infeasible training deviation seeded variant computational time minute pentium variant labelling cost distinct feasible path trial easy infeasible path best variant seededgreedy easy bandist seededroulettewheel decrease ratio feasible path decrease medium hard seeded beneficial combined greedy roulettewheel hard hard feasible divided many tiny conjunctive subconcepts probability belonging subconcepts misleading generating infeasible usefully seeded infeasible path feasible subconcepts seeded comparatively beneficial bandist bandist bias toward exploration unsurprisingly exploration poorly rewarded hard comparative greedy bandist type easy bandist dominates greedy reverse true hard sbst easy medium hard path deviation seeded variant bandist dominated exploration bias note bandist greedy explore transition explored feasible path path satisfying trial lead feasible path greedy never visit transition bandist retry note also seededgreedy significantly deviation seeded variant sensitivity usability compromised training good feasible infeasible path independently conducted medium displayed sensitivity medium feasible infeasible path infeasible path everything else concretely make system infeasible path besides feasible path even surprisingly feasible path degrades curve well curve explained modeling seeded procedure automaton step seeded procedure considers feasible path resulting tested correctness infeasible path belongs subconcept feasible path procedure test infeasible path reject infeasible path covered resulting rejected procedure infeasible path enforcing rejection preventing overgeneralisation seed seed subconcepts absorbing probability seed misleading lead infeasible path infeasible path governs transition probability probability exponentially infeasible path turn infeasible path useless incorrect lggs actually infeasible path sufficiently close parikh frontierof subconceptsare explains infeasible path significantly help process hand probability ending absorbing failure exponentially step seeded procedure feasible path sufficiently many sufficiently relevant infeasible path wealth feasible path process complementary baskiotis done feasible infeasible path show limitation feasible overcome limiting feasible path seeded procedure considering feasible path orderto adaptive control seeded procedure disjunctivity target presence infeasible path conclusion perspective machine learning testing relies distribution coping dependency data sparsity formal characterisation potentiality limitation parikh also clark testing structured domain contribution work seeded heuristic torre used extract relevant distribution representing conjunctive subconcepts heuristic combined exploration exploitation construct flexible sampling able retrieve distinct feasible path high probability statistical testing dramatically ratio distinct feasible path former sampling denise estimating distribution feasible path trial reach feasible path hitting time equivalence tester reachability tester huge automaton yannakakis studied
