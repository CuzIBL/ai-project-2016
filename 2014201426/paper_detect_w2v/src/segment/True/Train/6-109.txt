incident sometimes identify legal cautionary hide origin connection malicious user jumped host series host breaking final target connection describes path make difficult find part prohibitive cooperation synchronization practice administrator describes distributed automates tracing process worst case autonomous agent collaborate tracing origin interactive connection loop unwinding incorporating public cryptography ciphered channel communication meet system workload robustness prototype feature lightweight well dynamic scheme prevent sniffing denial service prototype system odiset unauthorized access system parallel growth internet irapalus protection accountability liability need connection reality area enforcement authentication network well distributed complicates task spotting host insys grant cdtedra insys lnvestigacidn seguridad informdtica instituto estudios superiores monterrey multiagent system connection stem sort anomalous user trace origin session identify person behind case easy accomplish yoda etoh domain straightforward tracing system administrator access host unfortunately session come inside connection outside contact administrator remote host discover identity user next link connection path fellow administrator look system realize perhaps compromised well user looking reach server case contact system administrator country abroad cheswick bellovin stoll obvious implication time system compromised perpetrator left installed facilitate access system interactive session visit system even patched backdoor remains untouched user logged detected audit trail file used tracing tough task audit tampered deleted case connection server http http host compose connection client server modified routing system modified force packet follow path case interactive session user suitable access permission host host back forth creating loop scramble connection path little significantly complicates root host actually everything fact connection host maybe connection rapidly host intrusion rately identify main incident ultimate goal catch intruder real time help intrusion system part session tracing intrusion intrusion response tool yoda eton asaka wang sort connection tracing also data correlation previously recorded user proposes make intelligent agent identify origin live session unwinding connection loop historical audit trail relies evidence captured operating system continuously refreshed system experience unnoticed communication agent cryptography rivest schneier encryption protects communication agent main automatic overhead imposed sort tool spafford zamboni prototype system odiset built lightweight ideal wide deployment open operating system idea behind tracing communication well release prototype rest explains connection relevant work area prototype conclusion work listing bibliography connection host user connection host connecting target host connection target host username find host compose connection identify root host straightforward host need analyzed identify connection host multiplies possibility creating confusing connection path system administrator access connecting server administrator login access server make tracing process connection coming outside unable freely access server scrutiny visibility type connection reduces link connection administrator terminal host user logging unable tell host fact machine user actually typing command find root host contact administrator remote system turn checking cumbersome time communication trust case connection closed audit examined find node lead origin connection sort tracing flaw existence audit file clean system system compromised case connection perpetrate attack probably case file tampered yoda etoh hand connection alive flow packet contained system network packet used trace user precisely work touch connection route tracing yoda etoh network traffic session tracing server compromised system computes deviation traffic host help host used connection checking network traffic node huge data packet permanently filter system build file analyzed data correlator identify host connection system deal deleted creating target type attack intrusion agent system asaka system detects origin incident intrusion system employ agent attack main host investigation agent sent requester need agent mlsi mark left suspected intruder reduce data flag system anomalous collect passive route tracing audit data tracing specified agent broadcast connection evidence peer identifying host attack tbair system intrusion response wang intrusion tool intrusion system response sleepy watermark tracing attack root vulnerability exploiting locating originator incident hold accountable intrusion evidence collected network thumbprinting heberlein process network capture thumbprint process host like case yoda etoh replicates packet review system fact packet session passing host identify host system capable detecting root connection identify host part system differs tracing audit system incorporate agent distributed agent communicate channel sharing odiset able identify origin connection also host part connection composition odiset tracing agent public encryption client server rule base base connection tree user data agent system decide need system agent agent system assurance spafford zamboni skill inference learning make automatic semiautomatic tool system administrator task securing system distributed agent parallel data processing take feature multiagent system perfectly network huhns connection autonomous agent eliminates need centralized data collection represents deficiency putting system risk monolithic system suffer agent survivability feature make resistant attack agent owns communication channel interacting peer intention probability denial service attack targeted toward agent scheme used scheme dynamically socket port used agent avoid monitored receiving request system feature agent agent capable detecting connection loop deal deleted damaged audit historical audit data agent look dynamic session extract data relevant tracing process process modifiable audit system inconsistency made type file make evident tracing system composed tracing agent communicate sharing user connection agent host ideal agent host network agent client server request agent supply agent need collect identify link connection agent target host eventually collect peer inform administrator origin connection perception tracing agent main system regarding user session connection message agent requesting agent inhabits highly dynamic communication channel agent stay touch peer network also tracing system malicious user gain access perceived agent send message agent request message agent broadcast message agent encryption encrypt message decrypt message identify connection loop retrieve system save safe agent stored repository base tracing host user data tree host part connection regarding user name login time date stored agent lost agent lose track peer agent take depend system perception russell norvig embodied agent rule agent work autonomously deciding rule rule base need analyzed conclusion proceeding rule base composed rule type perception evolve hereby modifying agent type rule make rule base form user console user target message request pkey tree alert protect agent used negotiate symmetric session encrypting message encryption visible reaching stack recipient deter sniffing attack plain text agent communication jansen tracing process connection need monitored agent target host receives system remote connection connection remote machine contact agent host connection channel opened asymmetric encryption agent symmetric session agreed upon message encrypted procedure followed relevant connection outside host coming server channel agent regarding connection user time link composing connection tracing agent rest agent broadcast communication agent sends message agent agent consistent incident acquired agent lost replicated enriched agent loop unwinding user connects host host loop agent tracing process able identify loop reduce tracing time host user creates connection system behave well worst case connection host host vice versa form loop arrangement agent find relevant connection host hereby unwinding loop fact agent capable identifying repeated connection toward storing user case loop passing host make worst case wolf loop unwinding mostly compiler discrete mathematics area utilize agent user name tracing process started agent engage communication neighbor agent collect data draw conclusion time agent receives loop done tracing request agent initiate tracing round waiting news agent asked cooperating agent tracing round well agent know part loop receiving tracing round started agent initiator property trace stored tree user traced repeat loop pass host agent located agent reduce tracing time omitting request follow loop dynamic protocol network service daemon work port listening request attack reveal service listening port host done look vulnerability service find flaw port previously identified attack started send request service vulnerable port many request pending answered incomplete request protocol machine slows need restarted additionally service port encryption traffic going network sniffer network service socket port suffer sort attack minimize likelihood target mentioned communication agent encrypted sniffing plain text impossible practice deter attack service port used real life equipment channel switching prototype initially agent listen port request service port allocate system resource port used agree communication port receiver proposes port sent channel switch port exchanging port switching repeated session fixed time defeat protection port scan time succeeds communication moved port frequency switching encryption prototype system odiset distributed session tracing agent process socket client server request well kpub kpriv agent launched agent started collaborate tracing session contacting peer agent public verifies certification must come odiset master publickey accessible agent message encryption encryption much slower schneier agent send message generates session kdes symmetric encryption encrypts message encrypts kdes public recipient sends encrypted session encrypted message rsaref cryptographic laboratory release odiset prototype redhat linux agent template system compiler unnecessary agent agent intention multiagent system best made minimizing considering data file damaged incident tool rely agent read system like utmp wtmp incorporate body give independence size agent around kbytes encryption need uploaded around kbytes well rule base never uploaded entirely memory base agent tree connection stored host regarding session connection sends agent agent read find host match tree creates branch keep rule base encoded body agent static keep entity prepared correction successful unwinding incorporated testing seven linux machine kernel redhat redhat redhat mandrake operating system installation creating connection host machine experience tell highly improbable session attacker much host case loop resolved prepared connection series loop connection circle host host host host back host show effectively unwinds loop agent find loop repeated time user connection user creating loop part contribution fact loop unwinding threshold linear host user connects agent charge tracing connection even long agent located host loop delay tracing process tracing encryption column growth tracing time linear time make think escalate well network time tracing tracing time encryption chaining block ciphering seven host corresponds connection encryption reminds cost cryptographic protect data connection extends thirty host even encrypted communication regarding agent communication strength unwinding possibility tracing autonomous lightweight agent dynamic effectively deter communication sniffing promise case agentbased well disadvantage system work exclusively alive connection user disconnect session host agent blind able trace intruder toward tracing system like highlighted case area fact agent user host interactive session command system intruder vulnerability spawn session host remote connection command seen connection command like system system none used intruder host presence able unnoticed conclusion work prof feasibility connection lightweight autonomous agent distributed fashion also proposes agent make communication robust encrypted agent communication adoption tracing system like operating system sort agent sand host contribute incident rapidly work integration odiset tracing tool intrusion system survivability agent tracing connection
