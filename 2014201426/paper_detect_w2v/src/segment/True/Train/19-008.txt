true specified metaclass true inheriting objvlisp built reflective architecture user access control metaclass metaclass link indefinitely suggest clarify smalltalk terminology treated expressed metaclass deal instantiation used organizes instantiation central simula built introduced simula data dynamically instantiating specified simula smalltalk abandon static scoping gain flexibility interactive typing system introspection paradigm distinct data type system smalltalk evolved give user control metaclass besides uniformity true specified remains react message passing specified metaclass metaclasses full answer metaclass imposes introduced metaclass distinct metaclass mainly used instantiation hold predefined metaclasses implicit implicitly virtual used true instantiated consequently metaclasses conceptual borning proposes drop empirical metaclasses regarded barrier learnability student ject block eliminated explored varlocal data alternative metaclasses prototype defines data deltatalk simply conforming said verts inclass stance greco stating smalltalk philosophy programmation cnrs france architecture agree borning view seems metaclasses great expressive ools really worthwhile find need metaclasses friendly system believe smalltalk remains impossibility true deficiency simplify unify metaclasses must citizenship clarity expressive terminal instantiated like many type kind terminal type distinction terminal differ respective accept message terminal reject metaclasses true metaclass specifies primitive metaclass owns primitive instantiation declared subclass inherits control thus metaclass consequently metaclasses true also true creation unification induces simplification instantiation inheritance imposes used simultaneously inheritance metaclasses inheritance terminal metaclass subclass ultimate subclass distinction metaclasses terminal consequence inheritance type distinction type describes ordered collection automatically inherited refers name describing specifies iait owns specified procedure usable also specified want need know describing isit name super convenient name name list name superclass inherit super list specifies held expressed pair isit belongs usual automatically supplied creating last real illustrate lisp objvlisp subclass instantiating metaclass commonlisp used send name super setq message send primitive recursively need prevent infinite regression need usual ools circularize instantiation tree loop root simplest loop declaring self severely constrains specified must match held isit name super isit name super briot cointe note exactly list self illustrates circular golden braid reflective need bootstrap lisp skeleton owning objvlisp root inheritance tree send name super isit isit redefine send name super name super bootstraping process system owns instantiation tree exactly like demonstrated uniformity explicit open immense possibility unicity genericity optimal simplicity generality unicity reflects type real hand inheritance kind creation thus generic creating inheritance applies terminal consequence makeinstance primitive need discriminate terminal explicit creating inheritance regain genericity primitive metaclass owning inheritance creating inheritance creating terminal alternative loop kernel augmented full specification disadvantage increased gain genericity easy extend alternative sense believe simpler manipulate indefinite extend system tool used instantiation inheritance control metaclasses defining memorize list mpoint memorizes parametrizes architecture send super listofinstances send nazne super send mpoint name super alternative smalltalk extend scope metaclass treated polygon polygon construction illustrate idea regular polygon hexagon lead hierarchy polygon hexagon subclass polygon vertex side consequently polygon treated parametrize side hexagon undef polygon nsides polygon nsides inherited triangle polygon smalltalk inheritance follow inheritance used hierarchy redefined newly inside collection subclass also memorized hexagon side metaclass hierarchy parallel nsides polygon treated polygon nevertheless access nsides polygon hexagon explicit metaclass controlling sided polygon transmission hexagon objvlisp polygon scheme believed applying capture decided thefe held polygon polygon claas nsides tnsidet polygon initialise numberofsides numberofsidei objvlisp metaclass realizing inheritance rule inherited subclass consequently alternative polygon send narae eupers nsidet send metapolygon name super imethoda nsides metapolygon subclass thus metaclass creation polygon explicits instantiation nsides polygon distinct nsides defining inheriting polygon hexagon sided sided polygon send metapolygon name super polygon nsides send metapolygon rname polygon rnsides send send access well consequently nsides access binding owns isit also access binding metaclass owns thus gaining meta nsides terminology terminology agree hand confused defines illustrate smalltalk objvlisp drawing polygon held polygon nsidei timesrepeat apen turn clan nsides apen eend send repeat nsidee tend apen send apen nsides keep term treated rename smalltalk term suggest term sharedclass unifies true specified primitive metaclass circular root instantiation tree potentially infinite user control acknowledgment thank perrot kris marcke henry lieberman helpful comment bobrow stefik loop manual xerox parc palo alto december borning deltatalk empirically aesthetical motivated simplification springer verlag cointe lieberman paris france june briot cointe objvlisp reflexive extensible brighton june cardelli semantics inheritance bell laboratory murray hill cointe objvlisp kernel reflective lisp architecture system proc architecture reflection north holland maes nardi alghero italy october dahl myhrhaug nygaard base simula norvegian computing oslo norway october goldberg manual xerox parc palo alto march goldberg robson ingalls system symposium popl tucson january krasner history word advice briot cointe
