many planner rely forward heuristic success heuristic derived plangraph guiding many domain remain many domain heuristic inadequate guide forward effectively domain learn reactive plan many inductive learning faulty fail high success rate work effectively integrate imperfect learned imperfect heuristic augment expanded step node neighbor node trajectory followed node horizon empirical show benefit leveraged automated learning heuristic outperforming benchmark planning domain heuristic successful dominant suboptimal planning hoffmann nebel alfonso gerevini serina vidal success largely developmentof intelligent automated heuristic relaxed plan plan ignore list heuristic gradient many planning domain domain gradient inadequate guidance heuristic planner fail scale domain domain blocksworld automated martin geffner fern yoon givan find good machine learning enabling planner scale well induced lack deductive practice prone resource copyright size training data planning competition nevertheless capture imperfect good main goal combining imperfect heuristic imperfect rollout bertsekas tsitsiklis discrepancy harvey ginsberg rollout simulation encountered encountered best take follow learned base horizon rollout poorly base flawed find look equally attractive domain rollout discrepancy determines horizon counting discrepancy base searched path path agree searched deeply cost exponential discrepancy tolerated prohibitively unless base make mostly limitation quantity training data lack hypothesis machine learning impossible effectively rollout suggest learned node heuristic neighbor node expanded also node trajectory learned node make node node discrepancy leverage heuristic heavily ordinary heuristic ignore heuristic long trajectory suggested learned help planner critically escaping severe plateau heuristic tion cheaper heuristic node even heuristic well tested domain planning competition domain automated heuristic real used competition learning used rest testing note empirical show domain planner planning deterministic planning domain defines term type expects arity fact fact arity type arity fact representing precondition usual applicable applicable planning domain planningproblem tuple fact representing goal plan planning lead goal learning reactive planning domain applicable desire find goal next good reactive decisionlist learned many planning domain khardon martin geffner yoon fern givan taxonomic list reactive ordered list rule rivest specifies rulen rule arity type rule fire tuple specified upon firing rule suggests earliest rule list fired fired suggested rule broken lexicographically arbitrary unchanging ordering domain carity specified omitted indicated make true filled match semantics construct refer yoon fern givan mcallester givan specification semantics note automatically derives target planning domain semantics relative database constructed goal deduced goal case relaxed plan goal form reasoning construct feature geffner reflexive transitive closure binary allowed goal feature relaxed plan yoon fern givan list blocksworld goal clearing block optimal putdown holdingunstack clear rule putdown block held rule unstack block block clear learning reactive learn reactive deploy learner yoon fern givan training training learn classifier learned classifier training labeled contained plan learning conduct beam greedily seeking type match match note training noisy sense labeled actually many training noise learned imperfect learned perfect bias variance learning procedure domain imperfection catastrophic high success rate domain flaw lead poor success rate nevertheless many even learned poor success rate suggest good like effectively rollout discrepancy utilize upon imperfect show work well many planning domain learned failure improving rollout lengthi lengthn heuristic heuristic heuristic rollout rollout horizon deterministic domain rollout trajectory plus heuristic used best rollout bertsekas tsitsiklis improving base simulation rollout sequentially selects best lookahead base show lookahead procedure simulates simulates base resulting forsome horizon goal cost trajectory plus heuristic final zero goal stochastic domain rollout tried time rollout trial used rollout achieved smallest cost repeat process resulting rollout mostly optimal poorly commits many leading inaccurate cost rollout used xiang procedure recursively applying rollout take time exponential recursive work well restricted step trajectory learned planning domain distribution form thus even rollout ineffective improving weak discrepancy discrepancy step heuristic discrepancy harvey ginsberg discrepancy discrepancy disrepancies path deviate time discrepancy thin edge discrepancy node labeled discrepancy show discrepancy thick line favored heuristic thin line discrepancy node rectangle labeled discrepancy reach node goal tree discrepancy reach goal node root node goal node discrepancy root node plain node disrepancy need visit node beforereaching goal discrepancy find goal greedy heuristic tree need backtrack many time reach goal node size exponential discrepancy like rollout also heuristic high heuristic incorporated applying heuristic leaf discrepancy tree selecting lead best heuristic incorporating heuristic work alternative incorporating imperfect take automated heuristic automated learning main idea node heuristic node node queue successor best node usual also encountered best node horizon marvin cole smith macroff botea yahsp vidal final encountered macro trajectory embedding node heuristic yield pure heuristic correlate well heuristic embedding reduce time much greedy heuristic greedy heuristic need heuristic neighbor considers selecting like blocksworld heuristic underestimate true node lead heuristic node heuristic node trajectory well neighbor evaluated strip domain planning competition blocksworld show planning system test effectiveness tested base system well system heuristic also planner domain best planner competition domain rollout discrepancy system domain time column used training data domain remaining testing unsolved minute system used horizon linux machine xeon processor blocksworld show blocksworld track domain failed used learning learned blocksworld thus system time showing benefit planning produced slightly plan blocksworld system time blocksworld summarizes domain domain significantly difficult learn used time learning depot driverlog freecell learning time substantial cost learned resused domain domain learned tested able slight depot domain freecell domain deadlock poorly probably leading deadlock show attained time demonstrating reduce time quickly outperforms decisively depot driverlog showing clear benefit imperfect heuristic domain show domain used hour time learning domain system time depot driverlog freecell cies pipesworld philosopher optical telegraph evaluated system domain best performer domain downloaded site system give idea note learned philosopher optical telegraph domain outperforms rendering incomparable pipesworld domain best performer domain competition much system showing benefit marvin macroff yahsp participated competition macro planner best planner domain combined showing clear show system able effectively combine learned imperfect heuristic novel neither rollout discrepancy regard aware work successfully integrated imperfect heuristic planner heuristic trace view incorporating heuristic plotted trace heuristic node depot show long plateau heuristic system show jump heuristic system fewer node indicating effectively helping escape plateau domain system time pipesworld pipesworld tankage middle complied philosopher optical telegraph show heuristic trace freecell failed unable escape plateau jump heuristic many node interestingly trace system show plateau heuristic followed rapid decrease heuristic upon investigating speculate learned manages lead planner away exit conclusion embedded learned heuristic node trajectory child node empirical conjecture correlate well heuristic embedding secondly embedding help escape heuristic repair faulty easy represents demonstration incorporation imperfect heuristic planning
