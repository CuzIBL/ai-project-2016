goal establish conceptual foundation computational system much computing wasted user difficulty full system much past system produced inadequate imposed unnecessary user failed respond changing need critic lisp prototype intelligent system critic enhance incremental learning system learning learning lisp locally style rule advice hypothesized user contained system user tool browser visualization illustrate advice used lisp proven valuable tool incremental learning lisp improving goal establish conceptual foundation computational system believe artificial intelligence opportunity goal improving productivity addressing ignoring need system augment intelligence winograd flores winograd flores argue tool conversation serf structured dynamic medium conversation systematic domain realistic relevant goal successfully communication widely perceived goal build autonomous intelligent thinking machine stefik fact track latter good high automatic translation automatic believe autonomous system pose automated evidence view come many cockpit describes work done cognitive colorada boulder part grant office naval german ministry triumph adler corporation nuernberg aircraft pilot assistant challenging goal electronic copilot chamber nagel argue successfully learn system incremental learning learning user task advice intelligent system system enhances incremental learning learning incremental learning fact life system constantly expanding little find take help system much printed documentation assistance like access bookmark leave trace session existence documentation know read fact life quickly settle plateau suboptimal want learn want something accomplished side work side motivated spend time learning system find phenomenon production paradox carroll rosson carroll rosson tendency stick know best effectively handled procedure willing deal suboptimal personally safe intentionally suboptimally subjective costeffectiveness suboptimal learning restricted even want learn able missing relevance applicability command verified command emacs command step occurrence text user confirm deny occurrence happens user mode like make note back fischer incorrect text whole leave take care rest file feature emacs recursive edit user modification restart show command recursive edit good used command time appreciate feature kind scope help system fischer lemke schwab give hint usefulness recursive edit time command used successfully computational system emacs command unix command embedded system wlisp lisp objtalk symbolics lisp machine flavor documentation symbolics lisp machine book page workstation book page beginner guide book totaling page quantitative system preliminary empirical prevent many user successfully exploiting system user know existence tool able user know access tool user know tool user tool user combine adapt modify tool need consequence many system underused strongly convinced cognitive modeling quantitatively qualitatively mode learning want balance supporting exploratory learning style learning philosophy behind logo papert guided learning experience coaching assistance system intelligent sleeman brown mode learning complement user goal acquisition user inexperienced system familiar able help ungulded exploration mode learning user control like like kind safe experimentation undo crucial intuitively approachable system unguided learning learning papert spreadsheet construction fischer lemke tutoring tutoring adequate mode learning getting started learning system predesign microworlds lead user anderson anderson reiser tutoring little help supporting learning user tutoring task anticipated system control dialogue user little control next asking help passive help system user actively seek help system even experienced user know minority command fischer expertise learned skilled gathering supplementing know system easy help system system huge mental form system documentation help structured system module command task accomplish task substantial answer must know existence unknown owen owen know volunteer acquisition chance unstructured learning process fair chance user occasionally pick relevant piece learning help system critic learning user unwilling learn system tool able successfully cope arise user consultant generates advice tailored need relevant eliminates burden learning many neutral user know ever used difficult learner imagine queryreplace help system critic overcome asking user whatever want interrupt user plan achieving something significantly inferior recommended drawback help area overcome accessing system area fashion assistance assistance case advice help mode learning best characterized cooperative process learner advice seeking person infinite articulate need system dijk kintsch many system advice seeking notable like rabbit argon brachman levesque assumed person know looking studying advisory dialogue webber finin hold valuable assistance formulating increasingly microworlds architecture incremental learning last year paradigm best increasingly microworlds fischer burton brown fischer paradigm capture instructional process skill difficult learn goal student exposed increasingly microworlds stepping stone expertise student challenging attainable goal increasingly microworlds also used protective shield novice prevent dumped unfamiliar area system paradigm precise learned microworld choosing next microworld capture essence incremental learning process lisp critic rich pursuing paradigm grain size microworlds microworlds constructing tool eliminate necessity learning subskills default constraining thereby decreasing computability system subjective computability fischer lemke topology microworlds work need goal need goal initiate transition microworld user initiate system transition take identify user microworld taking rule fire user code matched side rule indicating suggested statistical user user instantiating user lisp comparing stored fischer creating studying codifying idea system able raise difficult articulate concretely term goal incremental learning major goal pursue supporting incremental learning elimination suboptimal thereby enlargement possibility thereby learning presenting relevant structuring system threshold ceiling easy started microworlds system also rich experienced user user make system responsive need user tailoring explanation user conceptualization task intelligent system work used computational system construct intelligent system system intelligent task user communication user interact natural used enhance incremental learning process help documentation advice assist architecture intelligent system construction system documentation system assist incremental fischer schneider passive help system fischer lemke schwab oscilloscope serve visualization tool boecker fischer nieper guide construction artifact fischer lemke critic lisp critiquing used system mycin buchanan shortliffe consultation view clear control dialogue much consultant tutoring system anderson anderson reiser asking item data hand disadvantage user prevents user volunteering relevant leaving user undesirable asking machine help process developing critiquing user pursue goal interrupt user judged significantly inferior done critiquing used cooperative novice communicate much request factual novice able articulate help advice understood advisee request explanation person hypothesize communication partner misunderstood give advice asked last also explored work help system fischer lemke schwab suggests lisp code make code cognitively readable concise machine user kind suggestion interested operation lispcritic pane interface user initiate clicking button functioncode pane text work window show transformation carried title line window button explanation system user browse cognitive modeling system used user user want learn lisp code tested usefulness gathering statistical data student introductory lisp experienced user want code straightened hand user carefully reconsider code system proven code continuously modified show system operation able criticize user code replace compound call lisp call powerful evenp replaced oddp suggest macro setq replaced push find eliminate code cond dead code find alternative form arithmetic simpler replace append explode word char replaced nconc explode word char specialize replace floating arithmetic wherever simplified architecture subject domain goal rule network interrelated node user selectively browse operates applying transformation rule code show rule system user code matched rule transformation suggested rule user modified code file user inspect modification accept deny system explains justifies suggestion system user code simplified analyzed transformation rule protocol file produced used conceptual lisp explanation user fischer obtains rule fired statistical analyzer visited determines rule fire kind explanation statistical analyzer user subset user user macro nonstandard flow control transform cond rule cond taction safe machine name rule code rule abbcritic expl cond cadr cadr replace copying destructive rule append appendl restrict expr expr assq append nconc appendl nconcl expr safe machine name rule rule cell expr rule kaestle append explode word char nconc explode word char rule architecture criticism experience lisp criticism give understood system illustrate advice kaestle visualization tool part oscilloscope boecker fischer nieper illustrate functioning validity rule kaestle show transformation append explode word char nconc explode word char safe explode rule transformation append char explode word nconc char explode word unsafe destructive nconc undesirable visualization explanation operates browser semantic lisp textual explanation justify rule goal rule textual explanation extract lisp textbook wilensky explanation help student rationale advice also serve goaldirected know mode learning tutorial feature pursue tutorial framework accumulated system user used decide user criticized advice advice textual explanation manual kaestle visualization convincing perceived user must guess user make critic lisp critic respond user crucial lisp critic distribution initiative user system control system learning process feel user able proceed mode user personally dislike rule able turn system user never accepts suggested rule turned automatically fischer lemke schwab setq setq append char explode word nconc char explode word illustration validity rule kaestle screen word char list cognitive modeling user browse base experience lispcritic operation year many lisp user informal process learning lisp showed student gained experience lisp rule fired decreased time student learn structuring lisp instructor advice student also used code straightened rule base ongoing merit style surprise empirical work statistical showed even relatively fraction primitive lisp suggested many used system lisp system code discover suboptimal activist system fischer lemke schwab chose keystroke task hundred rule defines dialect rule lisp like unix writer workbench tool cherry style believe lead clarity understandably piece code saying expect universal agreement style unix writer workbench tool diction gettysburg address system suggested modification form restricted lisp domain accepts lisp code generality obvious shortcoming critic operates code system area naturally derive lisp pointed assistance much powerful determining addressing user goal extend advisory dialogue system like proust system johnson soloway able much deeper restricted module extend framework student work student line code derived like masterscope teitelman masinter cliche representing higherlevel construct operate empirical consequence many face system sort studying naturally occurring advisory urgently goal build intelligent system cooperative process feature extend system affair user illustration advice user advice explore goal operational system interested doubt domain lisp best area critic preliminary restricted domain like user interface construction wlisp fischer lemke rathke formatting system scribe lead believe critic even system system chance infer goal user acknowledgement many contributed last year like thank boecker many idea rule andreas lemke contributed framework incremental learning helga nieper kaestle christopher morel explanation bart burn statistical package catherine cormack analyzed user statistical package janet grassia assisted editing
