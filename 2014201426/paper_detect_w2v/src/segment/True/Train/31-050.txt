utility cost searching relevant outweighs benefit applying machine learning coping ensures stored genuinely deleting contribute sense limiting size examine deletion casebased reasoning system utility much dependant size growth mean retrieval overhead system deletion keep thereby control classical utility system competence demonstrated experimentally reply deletion take competence consideration deletion wisdom system good year view questioned demonstration harmful actually degrade system time dubbed utility minton tambe reasoning system case utility arises swamping ffrancis swamping relates expense searching case argue parallel retrieval swamping word keeping retrieval time size threatens system true degree realistic massively parallel machine norm must used fact massively parallel retrieval help delaying degradation eliminate altogether mark keane trinity college dublin dublin ireland email markovitch scott characterised dealing utility term filter process acquisition feature extraction learning relevant swamping selective selective retention selective filter markovitch scott prevent seeing item time system indexing scheme kolodner time bounding brown veloso subset made retrieval attendant disadvantage case missed retrieval time unfortunately omission unnecessarily even problemsolving failure alternative selective retention filter permanently remove holland markovitch scott minton system learn case case redundant case deletion selective retention whole retrieval time high case stored keep retrieval time acceptable investigate deletion argue applicable system damage competence system time introduces mind recognise possibility competence degradation case deletion explicit case competence guide deletion concluding look applicability appropriateness demonstrate effectiveness coping utility machine learning deletion work well preserve system smyth keane classical utility gradual irreversible reduction system competence properly control utility deletion preserve competence deletion deletion deletion item removed knowledgebase size exceeds predefined surprisingly deletion work well principled markovitch scott principled minton utility minton chooses item deletion benefit utility deletion remove item utility size frequency tends indirectly control size grows frequency item tends drop utility degrades substantial system minton employed elsewhere equally successful markovitch scott markovitch scott keller classical deletion system prone utility swamping much hope deletion transfer well system pure system learning system epitomised soar utility deletion successful pure system case system system soar serf perfectly fine learner like minton utility matter deleted system competence altered deletion disastrous reasoner deletion case significantly reduce competence system rendering target permanently unsolvable case case contribute mainly competence system predominantly contribute pivotal case empower system competence auxiliary case hand contribute deletion pivotal case irreversible reduction competence system deletion sensitive case consequently pivotal case contribute irreversible drop competence deletion competence system modelled deletion guard competence depletion controlling size guard swamping case competence four case pivotal auxiliary case competence spanning case correspond case deletion reduce competence case remain categorising case pivot spanning supporting auxiliary picture competence system coverage reachability categorising case coverage reachability coverage case target used reachability target case used target obviously computing case target impossible target simply vast tractable sample distribution target coverage case case retrieval reachability case case bring illustrates case term coverage reachability case numbered conesponding coverage labelled coverage reachable refer configuration coming pivotal case case pivotal case deletion reduces competence system irrespective case coverage reachability case pivotal reachable case pivotal case pivotal case outlier isolated case consequently target falling pivot pivot pivotal case case clear deleted target namely case auxiliary case auxiliary case competence deletion reduces system case auxiliary case coverage subsumed coverage reachable case auxiliary case auxiliary case tend cluster case deleted nearby case used target deleted auxiliary competence auxiliary case coverage proper subset coverage offered case target case case also case spanning case spanning case affect competence coverage link span independently covered case case linked deleted spanning case case spanning case coverage joining case case offering coverage realise case deleted spanning case spanning case case case spanning case affect competence coverage deletion case proper subset reduce competence removal whole analogous deleting pivot reduce competence formally case case case form coverage show case removal case influence competence coverage offered offered deleted modelling case competence computing competence cost strictly speaking case learned deleted case must recomputing coverage reachability case adjusting accordingly obviously time learning deletion heuristic efficiently updating case outline competence case learned learning target base pivotal base remove base pivotal case base target mark pivotal origin elself base target base elself spanning base make base target mark spanning origin elself auxiliary base target auxiliary case endlf learning smyth keane describes happens deleting case deletion note procedure make target accurately approximated true show accurate picture competence maintained deletion work well true effectiveness deteriorate footprint deletion ideally deletion work remove irrelevant case thereby guiding optimal configuration case optimal sense maximises competence minimising size call greatest case thus limiting deletion real system competence case coverage footprint deletion combining competence footprint deletion eliminate need utility deletion competence need deal footprint deletion collaboration partnership footprint utility constrain deletion preserve competence combining footprint deletion utility deletion refer resulting optimal competence footprint competence used sclectpivot selectspanning deletion footprint used deletion deleted selecting coverage largest reachability lowest utility word utility footprint competence base fewer case case mean ordering case deletion term competence contribution auxiliary case make contribution competence next case spanning case pivotal case outlined auxiliary case deletion case turn spanning pivotal case footprint deletion must formulated auxiliary case auxiliary case sized case pivot must deleted largest reachable mean case selectsupport selectauxiliary procedure referred utility used alternative auxiliary case case belonging pivotal case fact disadvantage footprint deletion utility case preserved high utility case competence contribution deleted combining footprint deletion utility deletion utility case deleted high utility case competence controlling swamping restrict size retrieval cost kept acceptable control swamping clear empirical deletion subject competence degradation footprint investigated imposing swamping competence system case deleted footprint work casebase maximises competence minimising size utility investigated varying swamping imposed system competence develops system residential property valuation nearestneighbour retrieval domain introduced smyth cunningham case target formulated test competence target system learning taking benchmark competence test capable target next learning allowed size restricted case swamping four carried target varying deletion learning proceeded unhindered size reached swamping learning take case removed show competence footprint deletion deletion managed maintain competence benchmark predicted deletion utility deletion resulted drop competence case deleted reaching swamping trial competence drop crucial case removed absence render target problms unsolvable competence fallen former utility deletion system desirable optimise competence deletion maximise competence minimising size deletion simply guard deletion case contribute competence also competence contributing case must deleted case carefully minimise inevitable competence loss alternatively case greatest competence contribution four deletion tested property time swamping imposed time swamping varied case case competence noted graphed clearly footprint optimising competence curve former rise benchmark much rapidly curve latter mean case allowed footprint seek make largest competence contribution utility competence competence contributing case stored beneficial viewpoint fact qualitative footprint deletion deletion explained term distribution pivotal spanning auxiliary case show distribution smyth keane residential property case optimal constructed pivotal case plus case benchmark competence must case pivot plus expect ideal deletion ideal view competence constrains optimal competence configuration competence reach benchmark swamping facilitates case happens footprint deletion deletion reach benchmark competence swamping case utility reach competence swamping conclusion demonstrated deletion controlling swamping perspective lead competence degradation many system case competence guide learning deletion case outlined suite constructing efficiently maintaining competence runtime deletion footprint deletion deletion preserve competence referring deletion time preliminary promising demonstrating competence system competence deletion enjoy utility time guarding competence degradation main case distribution good target distribution case distribution reliable target distribution competence reliable consequently effectiveness competence deletion contention domain characterised many exploiting property utility time avoiding possibility competence degradation competence modelling also used case acquisition system undesirable case utility secondly irrelevant case noise retrieval lead suboptimal case difficulty tuning modelling competence cast optimal formed manageable expertise
