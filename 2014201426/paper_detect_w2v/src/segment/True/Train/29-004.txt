reinforcement learning learn suitable maximize utility clue reinforcement signal punishment widely used reinforcement learning analyzed much autonomous agent size agent need computational resource time learn whitehead architecture modular decomposes whole subproblem distributes module thus module take charge part whole modular decompose suitable module manually agent fixed module architecture adapt dynamic architecture reinforcement learning amql automatic modular enables agent suitable module show agent automatically suitable module gain show agent adapt dynamic efficiently reconstructing module reinforcement learning agent learn suitable maximize faculty keio west kashimada kawasaki japan sony laboratory tokyo japan learning utility reinforcement signal punishment investigation autonomous agent learning reinforcement learning monolithic lack scalability agent much time learn suitable dealing additionally agent computational resource memorize utility tackle decompose suggested whitehead architecture modular decomposes whole subproblem distributes module goal goal decomposed subgoals distributed subgoals module module learns accomplish goal module take decrease monolithic whitehead showed modular improves learning time computational resource modular decompose module need decompose whole module learning module agent fixed module able adapt dynamic flexibly architecture enables agent suitable module agent flexibly adapt dynamic also experimentally architecture learning computationally intractable agent take investigate suitability architecture adaptability dynamic learning modular modular also show modular reinforcement learning autonomous creature receive reinforcement signal reinforcement learning agent learn suitable maximize utility clue reinforcement signal utility discounted cumulative reinforcement discounted cumulative reinforcement time time temporal discount watkins widely used reinforcement learning learning corresponds precise give utility agent receive take agent refer decide deterministic domain utility response payoff plus best utility next learning qfunction true learning rate maxq discount rate simplest make pair size take computational resource much time learning modular show decompose learning reinforcement learning dayan hinton investigation modular show learning whitehead modular architecture module dedicates subproblem architecture make qtable improves learning time goal modular module subgoal decides subgoal arbiter used mediate majority module pair module learn respective game goal updating module module goal learning agent yield suboptimal worse even succeed module predetermined reduces agent adapt dynamic modular learning cooperative game game benda distributed artificial intelligence capture prey agent four hunter agent surround prey hunter agent learned optimal capture prey learning agent consist module module take relative prey hunter considering case hunter agent agent encounter reach mean learning agent monolithic need enormous memory resource agent organize decrease experimenting architecture game showed agent modular kohri matsubayashi tokoro also learn cooperative took decompose allocate suitable module modular amql architecture phase fitness allocation phase module phase architecture modular made module suitable resulting agent fixed module adapt dynamically changing architecture amql automatic modular enables agent suitable module also experimentally show architecture learning amql architecture phase obtains module firstly module agent make agent learn amql fitness module contribute acquisition time module evaluated fitness repeating phase agent suitable module amql module like genetic phase amql architecture agent fixed module agent recognizes word agent correspond sensor robot agent module selects make process allocated module fitness allocation phase agent receive module contribute allocated fitness fitness degree contribution module agent decide greatest mass whitehead agent represents module summed largest agent receive module module largest word module desire fitness fitness cleared module module contributes acquisition module refer module individually goal module learn module module subset learn module fitness module phase module agent module evaluating module fitness module module fitness threshold remain fitness threshold module make threshold module acquisition case determines good module must retained closer module amql architecture phase module selects organize module make fitness module counter agent agent agent receive goal agent execute module agent receive fitness module biggest fitness fitness calculate fitness threshold fitness module module fitness threshold module make game computationally intractable investigate firstly amql architecture architecture also investigate adaptability amql architecture dynamic fixed module simulation simulation game grid edge torus agent time step till caption trial time step agent move north east south west stay hunter agent grid hunter agent prey hunter agent move grid occupied prey move must stay prey agent selects hunter agent sight agent identifier agent hunter agent recognize relative identifier agent sight trial goal accomplished prey agent captured time step parameter amql architecture hunter agent four module module trial determines threshold module module initialized module regarded adaptable module phase module agent make parameter learning rate discount architecture amql architecture architecture monolithic fixed module architecture hunter agent monolithic architecture kohri matsubayashi tokoro case fixed module hunter agent module hunter agent prey agent module trial show time step capture trial repeated time plotted monolithic architecture show take long time learn suitable behaviour monolithic qtable take take long time suitably amql fixed module architecture agent capture prey agent time step amql architecture module take agent amql module take agent amql architecture learn capture prey comparing learning case fixed module architecture previously amql architecture learning agent amql took time step well formed module agent amql succeeded obtaining suitable module convergence amql slower amql architecture take time find suitable module word case fixed module architecture suitable module amql architecture learn also suitable module automatically feature autonomous agent show amql architecture suitable module learning modular architecture changing next adaptability dynamically four hunter agent prey agent grid prey agent identifier preyl beginning trial hunter agent prey agent captured prey agent caught trial hunter agent receive prey captured adaptability dynamic amql architecture fixed module architecture fixed module architecture hunter agent module learning time step till caption trial amql fixed module architecture changing module changing module modutel preyl preyl preyl tion hunter agent prey agent module prey agent show time step capture trial also repeated time plotted convergence learning fixed module architecture amql architecture fixed module architecture capture well module agent amql architecture capture well even changing architecture module target show module hunter show agent module preyl changing module changing agent agent agent waste learning time computational resource suitable module dynamically changing predict agent amql architecture suitable optimal module learning show convergence amql changing take converge beginning changing learned catch obstructs module learning feature module learned used even show agent amql architecture able suitable module adapt changing much dealing modular architecture reinforcement learning thrun schwartz offered skill obtains used task skill loss skill take time find optimal monolithic amql make learning convergence monolithic architecture optimal idea considering amql time module amql lookup easy treat analyse also approximators neural network reinforcement learning sabes association reinforcement learning network also amql case module obtains part amql architecture learning convergence adaptability monolithic architecture know autonomous agent adaptive real open system dynamically thus difficult predict perfectly optimal amql seems promising architecture dynamically automatically suitable module learn monolithic architecture amql architecture applicable autonomous agent adaptability learning time conclusion work amql architecture obtains suitable module showed architecture adaptability dynamic game simulation showed agent amql architecture learn also suitable module automatically dynamically showed agent amql architecture adapt dynamically changing impossible agent fixed feature autonomous agent adapt flexibly efficiently drastically amql architecture abandon module learned relevant seems keep module case arises plan investigate architecture
