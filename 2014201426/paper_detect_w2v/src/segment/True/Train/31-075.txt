looking ahead satisfaction looking ahead help causing dynamic ordering show benefit looking ahead domain ordering heuristic call ordering time conflict lowest conflict show ordering substantial benefit hard satisfaction heuristic prioritizing searching satisfaction task satisfaction unlikely work well case nevertheless many heuristic substantial backtracking many satisfaction knowing satisfaction much time spent searching branch lead minimize backtracking lead consistent even slight probability part substantial time find work partially grant electrical epri grant toshiba america xerox northrop rockwell satisfaction ordering heuristic rank gathered looking ahead determining compatibility heuristic accurately predict lead accurate uninformed ordering show overhead outweighs benefit easy substantial interestingly improves backjumping well ordering type lookahead forward checking forward checking reject determines lead viewed form ordering regard refined also part formally satisfaction ordering describes conducted review summarize satisfaction network consisting respective domain subset cartesian consisting tuples subset compatible assignment violated termed satisfiable consistent sometimes desired find task proving binary satisfaction graph node connecting pair contained heuristic experimented ordering testing combine backjumping dynamic ordering pruning domain forward checking wide heuristic practical improves upon backjumping backjumping backtracking take sparseness graph backtracking backjumping instantiating xcur domain dcur violate xcur previously instantiated xcur backjumping prosser conflictdirected backjumping choosing best jump back consistent lookback violated also simplest forward checking assigning forward checking remove domain conflict refer subset incompatible removed reached remaining consistent instantiated removed conflicted instantiation restored jumped backjumping dynamic ordering dynamic ordering scheme branch tree derived forward checking style step smallest remaining domain size empty uninstantiated moved next breaking many domain size maintain list sorted degree graph case highest list scheme give substantially picking tying ordering backjumping dynamic ordering combined call frost dechter reported refer plain arbitrarily explore feasibility gleaned phase ordering rank decreasing likelihood leading tentatively instantiated domain look ahead domain uninstantiated four heuristic rank domain instantiated highest ranking back jump highest ranked remaining domain reinstantiated recalculated heuristic make work avoid repeating consistency save looking ahead step recomputed step size largest domain tree recomputed backjumping tree explored ordering next kilobyte access memory kilobyte severe reported take four parameter binary csps domain size parameter tightness specifies fraction pair disallowed pair disallowed distribution fraction incompatible pair termed loose relaxed parameter specifies distribution parameter satisfiable much difficult never parameter sometimes call solvable heuristic exactly conflict used prioritize experimented four heuristic rank looking ahead heuristic considers associate domain compatible heuristic inspired intuition subproblem heuristic prefers creates largest domain size instantiating xcur satisfaction xcur preferred csps parameter near crossover noted heuristic consistency time recorded mean median consistency digit omitted ratio column show statistic left divided statistic best ratio column time divided time parenthesis tell size confidence consistency mean size confidence centered around confident true mean domain size heuristic lead refined like prefers leave domain break domain size continuing paragraph leaf domain size rest domain size leaf domain size preferred fourth heuristic give domain size domain size domain size domain size smallest show comparing four heuristic term mean consistency improves matter heuristic heuristic clearly best experimentation rest heuristic conclusion draw comparing sufficiently difficult substantial medium help hurt easy overhead worse benefit roughly sufficiently difficult consistency easy consistency experimented selecting parameter generating used selecting parameter computationally tight sparse graph time consuming used tight generating parameter exactly used summarized data show mean median ratio many time ratio column mean median indication relative mean ratio median dechter divided consistency made mean dotted line showing percentage time measuring consistency scale tios fewer consistency time best ratio column superior time divided time bested consistency time many mean relevant statistic take occasional difficult convey sample consistency size confidence expressed percentage sample mean confidence around true population mean sample mean population deviation trial confidence actually know deviation population sample deviation acceptable long introduces inaccuracy median much mean sample difficult difficult half time spent hardest show skew distribution affect difficulty divided consistency satisfaction represents diagonal line fewer consistency easiest next easiest harmful increasingly benefit difficult scatter chart also distribution data show data drawn parameter chart data parameter statistic time slightly favorable statistic consistency reflecting fact approximately penalty time caused need copy hold looking ahead caching referred step many slightly fewer consistency slightly time resulting substantially consistency best ratio best ratio graph show domain size beneficial improves substantially domain size efficacy also near parameter solvable crossover data detrimental easy frost dechter unattacked cell heuristic unattacked cell heuristic dechter pearl advised backtrack subproblem instantiating relaxation remainder counted used rank advised backtrack idea heuristic relaxed sadeh also relaxation remaining scheduling ordering heuristic considers well scarce resource conclusion work introduced ordering ordering satisfaction show hard good dvcvalgorithm five drawback cache examined ranking process instantiated manipulating incurs overhead disadvantage easy solvable many many acceptable detrimental needlessly examines beneficial difficult consistency unexpectedly even help used backjumping tested forward checking plan explore possibility computationally scheme full directional consistency increased ordering reduce overhead easy achieved employing ordering ordering automatically turn conflict relatively indicating underconstrained eliminate overhead easy completed consistency cancelled restarted price extra consistency difficult cost easy majority avoided
