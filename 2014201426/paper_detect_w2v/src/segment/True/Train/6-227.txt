learning compete heterogeneous rinat khoussainov nicholas kushmerick college dublin belfield dublin ireland rinat nick mainly targeted engine user view parameter recall freshness returned optimised hand service interested parameter like processed resource used process optimisation engine service view affect engine competition independently engine many engine user want send best thus service offered engine influence competition even heterogeneous consisting many specialised engine access deep invisible specialised engine subset user sent engine best specialised engine done semi automatically rank engine user thus parameter specialised engine automatically affect ranking receive ultimately profit examining behaviour specialised engine heterogeneous analyse specialised engine specialise many simplified motivate rationality rationality assumes maker unable optimally gametheoretic sense incomplete computational resource cast reinforcement learning task goal specialised engine behaviour competitor funded foundation ireland office naval formalisation adopt economic view engine service cost resource used service simplified take cost resource processing engine expressed time engine represents service price processing request user service provisioning represents cost processing request resource sufficient process need process twice many time twice many resource twice many time thus resource cost proportional expressed reflects resource cost fast engine confirms cost reality risvik michelsen user extends reasonable user like send engine relevant engine ideal robot find relevant case user simply send engine containing largest engine engine poster sent engine largest ignores overlap hand associate term whole engine closely reflect engine work callan process time engine simultaneously independently decide many allocate resource process thus incurring cost engine unlimited crawling resource presume incremental justments time engine user allocated engine parameter engine know user submit allocate processing resource receive excess discarded engine benefit engine time engine trying compete indexed actually engine engine user submitted process modelled multistage game matrix game played player engine player receives payoff player knew opponent calculate optimal response maximising payoff case stream play outperform opponent profitable incur cost reality player know around agree supposedly mutually beneficial avoid deception player agree playing nash equilibrium game incentive follow agreement agreeing play nash equilibrium problematic game equilibrium player willing agree nash equilibrium yielding highest payoff task characterising nash equilibrium game even game conitzer sandholm possibility player game lead idea rationality player optimal sense cast optimal behaviour game learning task player learn well opponent learning repeated game studied extensively game machine learning fictious play opponent modelling robinson carmel markovitch reinforcement learning peshkin learner play parameterised finite automaton parameter probability transition stochastic gradient ascent parameter learning trial parameter payoff gradient domain work partially observable game also scale well modelling game factored correspond game reduce learning learning learner used distributed learning learning call engine cougar stand competitor rival preliminary evaluated simulation demonstrated cougar compete successfully opponent sake brevity competing engine engine fixed bubble cougar engine decrease keep indexed also observe size relative size opponent user submitted last calculated consisted metasearcher engine engine vector indexed engine used metasearcher engine simulate user used http proxy extraction rule individually engine extracted collected term simulate extracted term term belonging bubble many regard competitor poster unconstrained growing lead eventually fall threshold bubble engine bankrupt shrink retires trial process imitates expands business paying cost eventually money analogy bubble intuitively sensible response bubble wait bubble burst come game competitor anything bubble grows indexing bubble engine bankrupt simulation bubble decreasing indexed simultaneously trained cougar learning trial reached steady resulting evaluated scries testing trial simulation trial corresponds game played resulting whole trial calculated discounted show cougar improving learning visualises testing trial bubble cougar engine showing indexed engine trial half axis show bottom half show note cougar learned wait bubble bankrupt also investigated effectiveness evolving opponent evaluated cougar learned learner cougar case cougar stable equally learner sense cleverer learner cougar outperform bubble cougar sample trial work heterogeneous cougar promising step clearly made many relax make simulation realistic learning well learner motivated optimal behaviour service collection applicable involving service must weigh cost inventory inventory competitor anticipated need idea retail site must decide stock
