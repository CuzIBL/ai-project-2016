alignment computational biology optimally aligning dynamic frontier dcfs term time dimension varying dimension consumes time memory dcfs aligning protein alignment computational biology alignment comparing genome gene determining evolutionary linkage predicting protein secondary tertiary durbin waterman optimal alignment dynamic frontier dcfs dynamic alignment dcfs aligning korf extend work comparing simultaneously aligning find dcfs suggesting best aligning introducing alignment show mapped path ddimensional grid dynamic dcfs heuristic alignment used comparing work alignment grid pairwise alignment cost aligned inserting corresponds pair characterized match identical substitution acgtacgtacgt atgtcgtcacgt alignment cost alignment calculated assigning cost summing cost cost charge unit unit substitution unit cost alignment cost marked substitution optimal alignment minimizes cost cost alignment optimal alignment cost optimally aligning natural pairwise alignment cost minimized alignment cost cost alignment cost induced pairwise alignment cost cost alignment cost cost alignment summing cost pairwise alignment grid alignment mapped path directed grid dimension corresponds needleman wunsch associate cost edge grid cost alignment edge cost path allowed move toward goal orthogonally diagonally dimension find path grid path corner corner legal move diagonally subsection grid optimal path horizontal move corresponds vertical vertical move corresponds horizontal diagonal move correspond match substitution dimension grid size move seven node grid axis axis back axis back back back seek path grid move node aligning grid size optimal alignment subsection solid line represents path dashed line represents substitution dynamic dynamic dynamic used find path directed grid note optimal path passing node must optimal path passing predecessor path node need path node need know cost reach predecessor yield searching directed grid case grid scan grid left bottom node cost lowestcost path node cost cost edge left cost node left cost edge cost node cost edge diagonally left cost node diagonally left reach goal node cost optimal path trace back grid find path time cost node cost node time dimension time hypercube hirschberg hirschberg reduction much hirschbcrg best illustrated grid find node middle grid guaranteed optimal path recursively subproblems optimal path node optimal path goal node find node calculate cost left middle calculate cost left bottom middle forward backward cost reach middle node take node cost node node optimal path storing cost memory computation computation thus idea dimension eppstein hirschberg bidirectional also mentioned unidirectional attributed eppstein hirschberg hereafter eppstein best plained dimension maintaining cost proceed goal maintain cost middle maintain node pointer back ancestor middle path node reach goal pointer node middle path hirschberg recursively also dynamic limitation node grid dynamic introduces cost spouge optimal lattice path cost prune node cost path cost node cost reach node cost reaching goal node node exceeds know path aligning aligning cost prune node aligning much true cost deepening korf optimal cost fail reach goal node pruning many node iteratively increased repeated goal reached dynamic ukkonen normally increased lowest cost node pruned iteration quickly shallow optimal cost regressing reached used cost know goal node predicted deepening thus eliminating many iteration referred korf hirschberg eppstein practice eppstein used follow deepening iteration optimal cost reach goal hand optimal cost examines node know cost deepening knew optimal cost perfect optimal best case term depend deepening scheme refer comparing dcfs disadvantage dynamic easy dimension extending dimension much difficult also noted difficulty able dimension able extend four dimension dimension used legal operator node introduces time processing node take tailored dimension drawback used find path directed grid grid move dynamic must know priori node parent node shortestpath must dcfs eppstein frontier frontier dcfs heuristic korf dijkstra dijkstra hart normally closed list node expanded open list node expanded dcfs open list corresponds frontier searched area size closed list much size open list dcfs reduces aligning korf dcfs closed list prevent node expanded node list operator neighbor node expanded operator neighbor back marked used expanded used operator regenerated dcfs reach goal node retrace pointer discover path closed list alternatively storing path open node linear path node path hyperplane divide half node open list hyperplane pointer node hyperplane optimal path dimension hyperplane simply column halfway dimension hyperplane longest dimension encounter goal node pointer node middle plane optimal path recurses find optimal path node optimal middle node also middle node goal node dcfs heuristic frontier cost cost path node node heuristic reaching goal node heuristic accurate heuristic node visited dimension node diagonal time cost heuristic path must diagonal arrive goal node heuristic cost node time cost goal node dimension cost optimal pairwise alignment lowerbound heuristic obviously cost optimal pairwise alignment cost alignment part alignment optimal alignment cost alignment cost alignment pair heuristic cost aligning optimal pairwise alignment pair heuristic node grid path node goal corresponds alignment suffix correspond node alignment precompute matrix pair matrix cost optimally aligning remaining suffix pair heuristic node cube matrix case aligning cost alignment induced alignment cost much optimal alignment four dimension also optimal alignment heuristic alignment occupy alignment give five edge graph four node four triangle accurate heuristic resulting fewer node visited heuristic cost aligning pair cost pair part alignment alignment pairwise alignment graph node edge pair node representing pair graph triangle represents alignment need edge graph edge triangle edge ideally maximizes resulting heuristic edge graph four node edge triangle edge want many alignment make heuristic accurate four edge triplet pair graph five node node triplet four pair selecting partitioning give largest heuristic hope heuristic node indicator heuristic throughout evaluating choosing used time yield heuristic octree part cube part cube mcnaughton computing part octree save storing heuristic octree lead hard time used calculate heuristic offset time time node time node time node time node time node dimensional time node expanded node visited time node time node time node time node time node dimensional time node expanded node visited frontier dynamic perfect bdppb aligning goal harder difficulty test intel pentium cache cache used hash million node occupies memory tested real balibase thomson varied affected alphabet four letter simulating independently probability probability varied identical easy align solvable size hardest dimension averaged little variability trial used real protein balibase database benchmark alignment thomson protein alphabet amino acid pairwise cost used charge unit match unit substitution unit used cost four five dimension threedimensional heuristic heuristic reported time work korf showed outperforms dimension corroborate dimension aligns much time dimension disparity aligning time exceeds hour time four five dimension able much memory allocates memory size four dimension able align able align four minute significantly optimal cost realistic priori fare even worse aligning four five dimension able able align minute align aligning five comparing relative decrease moving four five take align four take cost dcfa luky refl refl lzin refl refl lajsa lpama refl lplc refl refl refl refl lton refl kinase dimensional real protein indicated time unsolvable memory limitation time aligning five four five dimension four five dimension able test four five dimension difficulty subsection overhead contributes disparity serious drawback believe slower four five dimension checking complicated cache decrease bookkeeping maintain reflected nearly dimension memory size dimension much memory used many node outside never visited worse dimensionality hand allocates hash align memory efficiently filling memory hour real four five dimensional real solvable memory solvable used fewer balibase refl neither work drawback dimension dynamically allocate node actually visited memory combining dynamic node allocation viewed dynamic best main drawback node processing significantly complicated mapping node memory grid dynamic mapping memory integral thus fundamentally cache main also decrease conclusion optimally alignment dynamic frontier alignment heuristic frontier dynamic perfect aligning four five varying degree also real protein inefficient memory practice significantly slower dimension surprising dimension acknowledgment thanks weixiong invaluable help proofreading draft supplying mensional code helpful feedback throughout grant
