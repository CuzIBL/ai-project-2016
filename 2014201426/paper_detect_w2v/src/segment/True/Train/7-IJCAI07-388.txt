much memory disk storage scale work show graph leveraged substantially externalmemory graph introduces edge partitioning form work improves scalability structured graph also applicability show effectiveness strip planning node memory able duplicate prevent node regeneration scalability dramatically increased storing node memory disk storage access disk magnitude slower memory graphsearch serialize disk access minimizes disk graph delayed duplicate stern dill korf edelkamp simplest form delayed duplicate expandsa node node frontier checking duplicate node duplicate disk file eventually remove duplicate sorting file keeping analyzing graph munagala ranade delayed duplicate make graph exceptthat undirected unweighted work show externalmemory graph significantly exploiting graph localize memory zhou hansen structured duplicate captured graph graph sufficient structured duplicate outperforms delayed duplicate never generates duplicate even temporarily thus overhead korf schulze show delayed duplicate reduce delay duplicate eventual removal graph depend kind sufficient thus legitimately equally graph graph kind exploited work kind exploited sense expands node novel form incremental node edge partitioning localize memory graph matter even graph techniquelocalizes memoryreferencescomplements kind graph exploited combined powerful edge partitioning structured duplicate implementit strip planning structured duplicate show greatly improves scalability close edge partitioning also used delayed duplicate structured duplicate structured duplicate zhou hansen graph leverage graph stored node memory disk duplicate node duplicate ever leveraged revealed mapping corresponds mapped ignoring ignore tile eight puzzle blank nine blank graph graph constructed node graph node corresponds node successor node successor show graph blank node corresponds blank located structured duplicate stored node graph divided nblocks nblock node node stored node structured duplicate scope localize memory duplicate scope node graph stored node equivalently nblocks successor node node eight puzzle scope node node node node node scope duplicate fraction stored node duplicate graph nblocks scope disk nblocks full used expands node time node expanded adjusted minimize disk minimizing disk node scope infrequently nblocks full nblocks outside scope flushed disk used nblocks disk nblocks disk expanding node nblock nblocks scope stored disk swapped panel show blank eight puzzle panel show graph considers blank edge partitioning kind exploited captured graph outdegree node relative node largest outdegree node reflects largest scope turn determines domain suggest form many zhou hansen varying degree degree affect degree scalability motivates make regardless degree kind fact even graph thus capture idea behind exploited sense expanding node incrementally mean generating successor node time generating successor incremental node make scope scope significantly reduce memory form scope node expanded stored node node successor node node expanded thus largest scope reflects largest successor node graph assumes successor time node expanded incrementally subdivide scope scope pair node successor node equivalently outgoing edge idea edge partitioning considers node node outgoing edge applies operator correspond edge successor node correspond successor node edge edge partitioning scope nblock node successor edge outgoing edge operator node successor node duplicate nblock eventually operator node expanded note full node incremental operator grouping graph used edge partitioning form node expandedincrementally edge time identify operator edge know successor refer annotation edge graph operator grouping operator refers instantiated grounded operator eight puzzle grounded operator even four left operator instantiation operator grouping built instantiated operator operator applicable node applicable eight puzzle operator applicable node blank located corner puzzle move move instantiation tile eight puzzle moved blank node applicable operator node applicable operator node applicable operator applicable operator node operator grouping identifies applicable operator edge edge edge graph connects pair node successor refer edge operator applicable node operator edge applicable resulting applying operator deterministic easy edge mapping operator operator edge partitioning operator grouping divide applicable operator node operator successor graph operator subset operator edge note successor successor graph operator grouping searching graph graph operator generating successor clear applies little modification searching graphsrepresentedby vertex edge scope idea edge partitioning subdivide scope scope edge operator edge successor time lead scope edge scope edge stored node edge scope edge guaranteed node node regardless graph scope edge stored duplicate successor applying operator node edge edge partitioning need nblock catch duplicate even worst case work edge edge partitioning operator successor node node edge partitioning expanded node operator operator successor nblock operator used generating successor nblock chooses nblock expand next successor edge partitioning node expanded call node edge partitioning incremental node eventually expanded operator illustrate edge partitioning work node represents eight puzzle blank located stored node node successor subscript encodes blank edge partitioning expands node operator corresponds moving blank successor node note node node need stored next edge partitioning operator correspond moving blank fourth successor node time node node need stored discussing edge partitioning review step graph hopefully capture graph stored node nblocks node graph moved disk nblock must able automatically zhou hansen like delayed duplicate used part expands node time frontier node idea expand node minimizes disk accomplished expandingnodes scope consecutively minimizing scope node heuristic expand node nblock nblocks ordered traversal graph full need decide nblocks move disk heuristic used nblocks disk edge partitioning trying minimize scope node considers edge incremental node heuristic operator node nblock nblock outgoing edge next reduce overhead operator grouping lazy operator grouping node time node expanded node node avoids overhead operator grouping node effectiveness tends size graph also lazy node disk upon switching scope node stored disk read node disk wait time node operator used successor node nblock successor node node operator applicable successor node used lazy avoids overhead node disk scope successor operator nblock previously need decide nblocks move disk full nblocks make duplicatedetection scope nblocks potentially flushed disk mean nblock part scope flushed disk even node expanded allowed avoided much make modification used updating time stamp nblock time accessed time stamp scope nblock next expanded part scope also simplifies maintenance clock need scope modification moving forward clock clock tick scope clock tick time stamp nblock clock tick clock time time stamp nblocks scope clock time nblock expanded next belong scope last flushed disk time stamp flushable nblock nblock time stamp clock time recall edge partitioning expands node nblock time operator affect remove node stored disk nblock simplest remove node disk soon swapped incur extra overhead node must back disk shortly make room note node nblock long operator used successor edge self loop self loop easy postpones removal node stored disk self loop operator last operator nblock used expand nblock edge partitioning disk disk increm structured duplicate edge partitioning strip planning column show peak node stored peak node stored disk disk full node incremental node increm time computational edge partitioning domainindependent strip planner heuristic zhou hansen heuristic memory efficiently edge partitioning improvesthe limiting need access disk regression planning find optimal plan admissible heuristic heuristic haslum geffner tested strip planner domain biennial planning competition domain truck storage competition operton processor cache edge partitioning largest planning domain edge partitioning taking time edge partitioning domain also largest edge partitioning show couple show edge partitioning reduce time planning peak node stored disk show overhead incremental expanding node inexpensive time many incremental edge partitioning used full time note extra time edge partitioning time operator grouping indirectly show roughly much memory edge partitioning full node give many node need node expands heuristic optimal expands roughly node disregarding full node need time memory heuristic edge partitioning ignores memory open list closed list actually considerable underestimate show edge partitioning strip planning great deal kind mean actually serious edge partitioning must identify exploited reduce memory even edge partitioning edge partitioning reduce memory much ratio edge partitioning even graph used capture wonder anymore reduce memory time edge partitioning time overhead incremental node avoided edge partitioning used fewer successor node node graph fewer incremental node expanded overhead incremental node show edge partitioning reduces memory time fairly modest delayed duplicate edge partitioning improves scalability internalmemory reduces proportion node need stored memory time duplicate show edge partitioning also used form delayed duplicate reduce delay node eventual removal duplicate disk storage review edge partitioning enhance delayed duplicate alternate phase successor duplicate elimination duplicate eliminated form graph used stern dill munagala ranade korf edelkamp sortingbased take file node frontier node frontier graph generates successor file checking duplicate sort file node duplicate node adjacent scan file remove duplicate dominated sorting confirm sorting step korf schultze form avoid sorting orthogonal hash node successor node file hash mean duplicate mapped file file successor node duplicate removed avoid overhead sorting removing duplicate hash duplicate hash accomplishes hashing sorting hash hash must memory corresponds largest node file thus care hash make sure many node file form depend leverage graph interleaving merging korf schultze work node frontier stored file parent file hash successor node node parent file expanded also stored file child file waiting parent file expanded merging child file next remove duplicate child file merged soon parent file possibly successor node expanded word interleaving merging make remove duplicate early generates duplicate disk eventually removing interleaving merging reduces extra disk storage fact best case reduce extra disk storage need branching reduction interleaving merging hash must capture graph child file must successor node parent file generic hash used hash node file hash capture must enhancement thus graph edge partitioning edge partitioning edge partitioning used kind exploited interleaving merging kind exploited previously pointed hash interleaving merging hash node file node file child file node file parent file fact relationship graph node correspond file edge node file successor node file make clear hash used actually statespace interleaving merging hash capture kind exploited help make precise scope child file node corresponds node parent file node predecessor graph node parent file node property scope guaranteed stored predecessor node child file lead merging duplicate node expanding node scope child file guaranteed eliminate duplicate child file scope identify graph interleaving merging principled relate kind exploited undirected graph exactly predecessor node coincides successor directed graph also interleaving merging graph scope child file parent file mean earliest time child file merged node expanded preventsthe interleaving merging show edge partitioning interleaving merging even case idea force node predecessorexpansion scope child file successor child file generating successor node child file time achieved node corresponds child file target merging merge duplicate node file early edge partitioning operator successor node parent file node node parent file successor child file merging take usual edge partitioning save memory generating possibly duplicate successor child file merging merging duplicate child file edge partitioning pick child file next merging target child file merged time last child file merged edge partitioning must used operator successor node incremental ensures interleaving merging empirical edge partitioning help clarify relationship interleaving merging graph thus enhanced edge partitioning conclusion introduced edge partitioning improves scalability structured externalmemory graph incremental node localize memory duplicate show significantly reduces memory structured duplicate guaranteed regardless graph also used reduce disk storage delayed duplicate work possibility vary degree incremental operator time edge partitioning operator successor node time memory reduce incremental edge partitioning reduce granularity edge partitioning circumstance answer help best trade disk operation
