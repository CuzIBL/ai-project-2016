necessarily imply distinct data describes philosophy reasoning system bottom calculus specialized planning describes system come cake emphasis calculus reported refinement calculus five subtle view reasoning system argue system characterized sense data necessarily imply distinct data body divided mree introduces reasoning reasoning hard hope gain architecture next describes cake reasoning trace cake difficulty cake reasoning system describes done artificial intelnoence laboratory massachusetts laboratory artlfioial intelligence part agency defense office naval part foundation grant part corporation view conclusion contained representing neither expressed implied defense foundation corporation system motivation cake central reasoning engine apprentice reasoning used synthesis verification apprentice formalism plan calculus plan formalism labelled directed graph node operation data flow data control kind reasoning involving plan cake must plan correspondence incoming outgoing plan operation plan operation plan satisfies specification operation kind reasoning operation precondition postconditions commutative domain subtype plan composed operation data flow operation indicated correspondence achieved kind plan roughly precondition correspondence incoming precondition assert postconditions data flow precondition assert postconditions correspondence outgoing postconditions successful hard highly simplified abstracted trace size tiny relevant unused postconditions apprentice concerned size simplest dump axiom prover resolution wait difficulty reasoning realistic size homogeneous strain system reasonable time basically inability control exploration irrelevant path want apprentice evolutionary reasoning system incremental retraction truth maintenance provers exploring cake reasoning task specialized reasoning even identify distinct reasoning attacked specialized plan equality correspondence algebraic property operator commutativity type inheritance subtype architecture cake kind reasoning hope gain partitioning reduction controllable size reasoning seen architecture cake cake argued utility partitioning reasoning task plan calculus partitioning show architecture cake system divided eight bottom five truth maintenance type refinement calculus correspond plan cake system bottom five plus plan calculus plan synthesis plan restrict system rich describing need word meant concretely collection subroutine data abstractly coherent system summarized arose mixture concern partly motivated take specialized kind reasoning congruence closure partly followed intuition part reasoning task type inheritance control attacked simply kind discipline help system formal modularity restriction weak subroutine invoke subroutine strict layered architecture retreated stricter usual prevented many optimization relationship follow proceeding cake must gratefully acknowledge minor mcallester reasoning utility package bottom cake major made noted truth maintenance bottommost cake truth maintenance boolean propagation network network prepositional axiom stored disjunctive clausal form literal make clause true false unknown clause also documentation generating explanation truth maintenance recording medium dependency thus retraction explanation deduction unit propositional resolution clause bottom architecture database final inferencing must eventually recorded data base also rich inference contradiction contradiction detected network control passed routine decide premise retract reasoning process wish assert obtains installs clause disjunctive normal form installing clause twofold answering answer documentation recursively propagation processing attached network retract retracted role architecture cake feature truth maintenance deductive completeness traded control mcallester prof computation triggered data base access worst linear size data base equality standpoint truth maintenance atomic truth equality introduces term term recursively atomic term list subterms operator followed term equality uniqueization term incremental maintenance congruence equality term uniqueization hashing list term term term subterms creates term incremental congruence closure operates roughly term equality tell proved cake possibly recursive substitution true equality term equality asserted retracted like answer equality list true equality used proper dependency installed truth maintenance substitution powerful inference used heavily cake note congruence closure operate creating substitution inefficient impossible connection equality truth maintenance equality truth maintenance keep track dependency substitution term equality term equated clause installed network equivalence demon demon triggered type equality truth maintenance demon interface many also kind trap door care miscellaneous kind inference cake type triggering creation term truth term data base demon searched demon match subterms term triggered demon triggered term match body demon simply lisp code make assertion dependency truth demon major processing term creation kind completeness equality demon equality creates carefully subset variant term term term substitution processing force creation variant equality variant demon triggered demon term equality true completeness processing term demon triggered truth demon type attached truth made body demon demon seen reasoning algebraic algebraic composed procedure algebraic property operator nine property specified hold independently permanently retractably operator reflexivity involution idempotency associativity commutativity distributivlty symmetry antisymmetry transitivity nine property algebraic also procedure reasoning complicated algebraic equivalence lattice boolean algebra property many type reasoning control flow transitivity arithmetic distributivity list associativity append boolean algebra simplifiers procedure kind property cake system retractable equality equality operator truth maintenance algebraic property stem attempting control creation irrelevant term completeness equality illustrate commutativity simplest property commutative operator obeys install demon commutative triggered assertion commutativity property creation term commutative trigger demon installs demon triggered term demon term demon installs equality rich dependency commutative term demon installed empty body sole demon force completeness processing creation variant term equality creation variant turn trigger demon install equality premise commutative enquire equality completeness processing commutative force creation term commutative installs demon demon trigger installing empty demon completeness processing force creation term variant trigger demon install recursive explanation derivation true transitivity equality true true premise true premise true defn commutativity commutative true commutative true premise true premise complicated algebraic listed partly demon property transitivity antisymmetry reflexivity also specialized graph haas lattice graph term indexing equality cake plan calculus type data type ubiquitous reasoning natural typed cake type type hierarchy inference type simply type inheritance boolean algebra algebraic subtypes intersection complement type inference involving tyoe incrementally dependency rich intersection type subtype assert type note type syntactically thus type algebraic demon type deduce lntersection typed operator domain type type axiom hold operator arity many property deduced kind operator type axiom demon operator form axiom handling undefined term plan calculus early showed semantics plan calculus mapping feature plan calculus semantics data flow equality term semantics control flow captured temporal precedence equivalence precondition postconditions plan calculus semantics specified precondition operation imply postconditions structured data type list plan calculus cluster node succeeding reported calculus formalization usable calculus plan wish make subtle relationship plan calculus postulate make cake system configuration plan true truth maintenance plan calculus access supporting node view plan used plan plan synthesis respective plan calculus data strictly taking view advocated brachman cake system plan calculus fact strictly interface tuning system expect caching indexing term concern regarding tradeoff recompute interface plan calculus querying altering feature plan querying altering embodies semantics feature term access enquiring data flow operation generates equality asking term access installing data flow asserts equality plan modification made plan calculus thus seen matter truth resulting plan modification trigger demon reasoning take revealing contradiction contradiction reflected back plan calculus explanation annotation installed altering installing data flow mark equality representing data flow true truth maintenance correspond feature plan reasoning data list reasoning involving term indirectly lead truth plan feature data flow equality dependency processing truth maintenance propagated feature depend contradiction also involving plan term degree flexibility dispatch handling contradiction cake locally binding unbinding contradiction handler part cake control explored going trace reasoning next briefly remaining plan brotsky parsing flow graph structural part cake verifying plan synthesis initially straightforward interactive plan plan refinement rule planner chapman plan synthesis plan argued elsewhere synthesis must make trace reasoning illustrate cake reasoning trace cake symbolics lisp machine approximately simplification trace also summarization follow alternative path omits irrelevant term clause produced even recall summarized plan operation correspondence control come plan plan simulated procedure data flow plan plan calculus truth maintenance true equality specification operation plan calculus truth maintenance clause resulting reduction disjunctive normal form data true commutative well demon indicated code body demon summarized quantified fact demon algebraic commutativity domain type part demon type fact subtype part demon type lattice type precondition also take premise correspondence plan operation true equality recognize need establish truth postconditions symbolically operation precondition true substitution equality line line line postcondition rich next need establish precondition operation creation term postconditions trigger demon installs clause line give creation term trigger subtype noticer installs clause line operation equality precondition line equality line clause line give postconditions substitution equality line line establish line postconditions creation term line trigger demon installs demon empty body completeness processing equality demon illustrated commutativity force substitution equality line term yielding creation term trigger commutativity demon installs commutative line true line postcondition transitivity equality line completes trace note byproduct reasoning dependency installed explanation incremental retraction conclusion system find give leverage control difficulty involving algebraic highly tuned difficult causing explosion computation also explosion concerned inherently exponential computation implicit full rich boolean algebra type turned practice eventually forced restricting type hierarchy krypton reasoning system simply like layered architecture cake spectrum many partitioned communicate reasoning system brotsky rich
