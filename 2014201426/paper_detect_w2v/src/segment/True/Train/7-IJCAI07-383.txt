many practical insufficient time find provably optimal hope balance time cost user preference expressed utility time cost rely anytime anytime extensive training data termination user utility bugsy incorporates utility obviating need termination challenging domain alignment temporal planning demonstrate surpass anytime requiring profiling task diverse planning alignment sufficient computation optimal admissible heuristic hart many practical time costly desirable even feasible look path must carefully allocated balance cost path computation time tradeoff expressed user utility specifies subjective time shortestpath bugsy incorporates user utility guide list unexplored node sorted cost experienced reaching node cost reaching optimal sense optimal visit fewer node dechter pearl many find practice pohl likhachev scheme series decreasing cost time initially high decremented allowed continue eventually reach cheapest path discovered optimal take simply suffer inherent difficulty well understood best user need linked cost time clear desired high many returned wasting time high take long time find user must many pilot domain find good parameter anytime user must time stop process black emit significantly moment must repeatedly probability continuing computation worthwhile user utility substantial statistical profile rest learned applies difficulty generalproblem anytime must inherently suboptimal ignorance user utility simply quickly transform best achievable scratch time best achievable time worst case visiting back child root node decide distant worth reaching anytime must manually engineered fixed hardcoded mean inevitably anytime waste time nearby overexert high sufficed address user utility variant represents user desire utility guidance call bugsy show empirically domain successfully adapt suit user sometimes significantly outperforming anytime easy requiring profiling bugsy ideally rational agent utility gained node utility utility eventual outcome enabled namely lying node treestructured expanding node beneath utility negativeutility time costly true utility utility merely utility highestutility lying node user utility captured linear form represents cost represents time returned user expect user supply udefault representing utility returning empty representing representing computation time utility expanding node udefault follow tradition utility requiring subtract cost time mean yield exclusive cost time linear time unit user willing spend cost unit quantity elicited user explicit domain utility also constructing termination anytime superficially bugsy node differs node unknown utility analogous heuristic merely computing cost cheapest node also estimating utility nearest cheapest node hypothetical cheapest many domain entail trivial modification usual multiplied time arrive note make time node informed also cost time nearest cheapest heuristic modified utility convenience notate inherited whichever hypothesized utility illustrates computation schematically solid hypothesized cheapest nearest heuristic dashed circle demonstrating dotted line contour utility dotted arrow show utility gradient solid utility combine cost cheapest time nearest probably note utility slope dotted line relative superiority nearest cheapest give sketch bugsy closely true underestimate arbitrarily path discover route previously expanded duplicate path detected step cheaper path retained link node child well preferred parent utility descendant recomputed bugsy open closed remove node open highest goal closed child goal skip closed cold cold child else open cold cold else open step bugsy outline step nilsson time omitted clarity ordering used open step prefers high breaking breaking breaking high note linear utility mean open need resorted time pass node lose utility rate cost utility stored time used bugsy bugsy admissibility data used convert russell wefald reported eschew training data correction keep node comparing node child decreased cost operator used child parent discrepancy decreased correction used computing node utility give accurate experience temper missible utility specifies cost time cost correction overhead bugsy relative take care time computing utility node property bugsy trivially node goal heuristic used inadmissible correction also finite bugsy reduces returning cheapest bugsy greedy broken route previously visited discarded size open size implying eventually discovered bugsy static term path previously visited discarded bounding ensuring completeness unfortunately infinite inadmissible bugsy pathological potentially mislead forever utility perfect bugsy optimal proceed highestutility perfect bugsy expands node child node path highest utility front open list bugsy expand node next child node must highest utility open list step closer goal parent previously highest utility lead bugsy proceeds highest utility achievable incurs loss utility wasted time expands node path optimal seems intuitive bugsy operator cost goal correspond cost even operator unit cost nearest cheapest heuristic bugsy make node closer goal node worse come even admissible consistent heuristic time heavily cost bugsy expand node capitalize reach goal quickly hand abandon path expand node dogged optimize cost regardless time domain bugsy high look cost find quickly greedy bugsy guided well cost possibly find time greedy empirical timeaware practice imperfect utility bugsy seven domain gridworld path planning alignment used zhou hansen anytime temporal planning coded caml compiled native code processor dual intel xeon machine measuring time used detecting duplicate closed list hash breaking favor high greedy like preferring breaking speedy like greedy preferring time goal breaking anytime continues pruning open list optimal goal hansen series decrementing likhachev reusing node lowest open list expands closest goal pearl note greedy speedy inherent adjusting cost time frame anytime well confirmed experimentally omit presentation poorlyin preliminary test taking long time node omit well domain many anytime reported thousand anytime reporting gridworld planning path planning grid probability blocked cell cost left corner goal corner unit cost move equally tested graduated cost move free cost call cost everyday living property quickly shallow tree relatively plan many annoying economizing step cost analytical ignoring obstacle cost bugsy unit cost blocked time microsec msec msec msec msec cost unit cost blocked time microsec microsec msec msec msec msec cost cost blocked time cost gridworld planning step cheapest goal nearest goal quantity used obstacle heuristic accurate challenging show gridworld anytime notated corresponds utility speedy optimal recall utility specifies relative weighting cost time find relative size determines time relative cost word utility specifies time spent gain cost unit time listed msec unit cost mean spend millisecond find step shorter word mean take find must unit cheaper judged superior utility tested magnitude time matter cost matter recall utility bugsy representing best tradeoff path cost time find time cost greedy notated speedy notated also well utility emphasis time cost well poorly anytime anytime stream time allowed optimality utility find optimal time optimize utility note termination give anytime unrealistic test utility resulting utility linearly scaled fall cell mean unit cost blocked bugsy well behaving like speedy greedy time like cost significantly surpassing middle utility next bugsy well long time dominating middle utility balancing time cost crucial inadmissible heuristic mean ocassionally slightly worse time marginal cost anytime poorly last taking many hour omitted bugsy profiling construct termination encouraging expect greedy well time howeveras cost greedy greedy speedy little alignment alignment domain heuristic hohwald consumed fromeach goal reached consumed move consume alignment five time cost substitution mismatched cost cost summing pairwise alignment tested five alignment used kobayashi imai zhou hansen five relatively dissimilar protein approximately long alphabet representing amino acid heuristic optimal pairwise alignment precomputed dynamic node bugsy time cost protein alignment simply remaining show representing utility normalized cell represents mean little variance domain bugsy well even holding greedy spectrum anytime fail match despite clairvoyant termination temporal planning last year applying heuristic planning zhou hansen must find connects goal tested temporal planning take time minimize plan duration makespan find plan used temporal regression planning framework planner backwards goal reach bonet geffner guide admissible heuristic planner haslum geffner heuristic shortest makespan pair reached dynamic taking pairwise mutual exclusion planning bugsy also step reach shortest makespan makespan closest step closest extracting relaxed plan hoffmann nebel closest term step shortest term makespan node makespan regression step plan used cost time closest cheapest bugsy relaxed plan extracted backward relaxed planning graph goal heuristic goal supporting favor close intial indicated heuristic favor take fewer step reach goal heuristic form dynamic step reach makespan tested five benchmark domain planning competition blocksword logistics zenotravel rover satellite blocksworld block configuration robot logistics zenotravel moving package rover differentroverstravel collect sample take picture communicate data back lander satellite satellite carrying equipment need turn take picture mode communicate data back earth show largest five domain represents utility wide disparity domain took logarithm utility normalizing speedy greedy badly temporal planning show bugsy anytime returned cost criterion bugsy well time domain significantly outperforms time satellite logistics rover zenotravel blocksworld utility domain best zenotravel blocksworld cost bugsy utility look utility bugsy magnitude outperforms utility achieved bugsy never worse achieved best much robust anytime empirical utility time demonstrating bugsy competitive anytime need termination extensive training data utility emphasis time significantly utility heavily cost sometimes slightly worse inadmissible heuristic bugsy remarkably robust domain utility considering access training data user utility note bugsy solves realtime korf variant step plan bugsy find plan goal time particularly domain operator invertible costly undo path goal ensures ensnared deadend also planning step series computation involving memory prominent concern time exhaust memory simplicity bugsy mean well integrate reduce memory consumption done preliminary incorporating bugsy encouragingresults effectively prune time applies temporal planning time resulting plan time bugsy allocate time conclusion nilsson note practical interested minimizing cost path cost path cost never actually difficult decide combine path cost cost emphasis bugsy address letting user path cost cost combined alternative anytime returning stream relying process decide justified process make judgment node empirical demonstrate bugsy computation time matter suggest procedure usefully thought black termination intelligent agent informed user goal acting rationally collect maximize user utility acknowledgment elisabeth crawford assisted summer internship parc parc embedded reasoning area encouragement many helpful suggestion
