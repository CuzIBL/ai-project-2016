skill compilation learning compilation operator memory limitation grape system simulates compilation operator simulation episode also data memory load successful lisp concerned cognitive acquiring skill like lisp relevant sufficient system compilation procedural form tuning operator underlie procedural form representing optimally operator possessed expanding memory keep relevant educational textbook user manual classroom four largely ignored learned implicitly looking novice learning lisp spend time actually trying absorb relevant time learning novice modest task serious hole dealt learned want stress lisp area geometry physic anderson larkin production system grape simulates learning grape operator decompose goal subgoals grape decomposing goal subgoals subgoals goal reached correspond lisp code operator grape moderately difficult lisp test debug code anderson farrell sauers sufficiency test eventually capable simulation novice hour learning lisp many simulation simulation skill compilation simulation onetwo case come subject take list onetwo onetwo subject take list list consisting list lisp subject knew time subject learned list knew list time onetwo flailed onetwo experimenter suggested simpler addtwo take make list able make headway speculate addtwo tractable onetwo going onetwo addtwo task burden memory subject able match operator memory limitation illustrate simulation anderson subject grape mentally simulated outcome code retrieving evidence answer onetwo perfect correspondence illustrates process decided deciding went episode reviewed knew searching grape list list rest grape chose fact list wanted make list subgoals piece selecting grape interface desired next grape turn part rest retiieve subject retrieved anderson farrell sauers semantic feature partially lost became rest manipulated grape memory corresponded encountered acquired operator repair embedded extra list grape errbr make corcrete mapping illustrates simulation concrete code lisp concrete code lisp unction clef addtwo lambda remaining task concrete mapping rule applies goal concrete lisp data involving term illustrates evolution coding addtwo brother goal checking code grape lisp code message undefined also corresponds encountered time previously anderson occasion failure quote assumed acquired operator used quote stop operator lisp code became addtwo lambda code tried time returned comparing desired localized grape went back retrying goal mapping addtwo lambda onetwo illustrates simulation subject returned anderson onetwo code onetwo lambda list list list subject hour code addtwo took minute onetwo time spent confirming onetwo addtwo rehearsal onetwo operator compiled summarized planning step went operator grape compiled summarizes illustrated started goal creating list resulted consing compilation procedure recognizes concrete code essential final answer trace step connection goal final consing operator built goal code list consisting subgoals code operator compiled correspond addtwo form goal code list consisting argumentl list consisting subgoals code argumentl code list consisting conclusion simulation illustrates conclusion come simulating subject conclusion hierarchically goal tree like illustrated conclusion subject prefer analogy concrete case episode subject tried code conclusion compilation extracting operator streamline numerous deciding much collapse operation hardly progress made consult anderson anderson farrell sauers hierarchical imposed goal compilation process serf episode compiled operator fourth conclusion concern memory failure incorrectly subject momentarily misrepresented memory failure incorrect represents trying data subject lisp taught parenthesized subject conceive lisp operator like list term made mark page think implication relative difficulty type easy difficult list fairly easy difficult illustrates four take list subject little difficulty overcoming name remander list subject difficulty frequent illustrated tail list list subject list parenthesis missing list subject find mnemonic easy greatest difficulty list frequent leaving extra parenthesis around exactly made little uncertain jeffries grape many explanation turn fact explained subject moving parenthesis explicit siklossy subject think thai operates deleting parenthesis inserting parenthesis front rest list last operation omitted subject think deleting left parenthesis inserting front inserting left parenthesis omitted deletion operation subject also think list moving parenthesis omission step list nonsensical omission step thus step omitted lead nondetectable consistent view subject make make expect produced occasionally forgetting step easy easy list difficult fairly easy think unavoidable certainly case originally lisp taught operating much closer lisp illustrates dotted pair weissman explained operation lisp dotted pair contrasted list informally harder list largely forgetting parenthesis like went away confirmed informal difficult list part failing parenthesis around difficulty reversed list derived failing embed clearly matter mnemonic word list suggested want read advocating lisp back good justification parenthesized list introducing find list data turn list consequence difficulty destroy reconstruct destroy reconstruct carried properly wrong answer characterize operation anderson avoid difficulty deleting left parenthesis reinserting left parenthesis characterized erasing characterizing deleting left parenthesis left parenthesis characterize squeezing front memory load surprise studying lisp novice much time spent recovering memory intend quantify protocol subject informally guess around time spent trying reconstruct forgotten subgoals worse subject misremembers subgoal solves also subject retrieve wrong task subject experience much wasted time retrospect tend forget failure memory remember step like know spent hour must asleep frequency memory part term memory perhaps something like chunking also reliable recalling occurred half hour protocol jeffries turner atwood poison simply chunking long term memory reliable domain reliable memory memory domain expertise seems fairly phenomenon chase ericsson studied subject reliably increased digit span digit usual also able show depended reliable storage retrieval subject digit span fact letter span think happens memory process memory classic memory retrieval novice lisp list anderson farrell sauers explained term subject list frequent thus seems memory load recall embedding extra processing increased illustrates materia used type task recognizing missing transform evaluating series recognizing anderson reverse reverse provision reverse type used list illustrated thus subject implicitly list occasionally append provision incorrect parenthesis much frequent subject list line relative difficulty manipulation reverse composed reverse simply list appropriateness list provision parenthesis scored parenthesis subject done reversing seen percentage reverse thus extra piece memory increased rate memory spill extra memory load logically particularly relevant student knowing list depend memory test many memory pose needle difficulty novice novice overburdened extracting needle fail extract learning frustrating lisp parenthesis counting novice verge insight parenthesis balanced lose chance getting insight finished balancing implication tutorial reduce memory load facilitate learning
