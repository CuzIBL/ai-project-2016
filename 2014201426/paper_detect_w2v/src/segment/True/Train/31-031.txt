optimal quickly even moderate size linearspace unnecessarily long time make memory memory effectively generic heuristie integrates idea bidirectional insight memory memory effectively instantiation benchmark domain showed excellent statistically previously reported optimal achieved fastest manhattan heuristic scheduling domain much difficult best competitor lesson learned also domain symmetric graph topology selecting memory used much effectively tradition hart exponential quickly even moderate size searching optimal like korf rbfs korf dfbb lawl wood suffer memory limitation even much memory make memory time unnecessarily long major heuristic memory effectively pure unidirectional utilizing memory lead convincing chakrabarti ghosh reinefeld marsland russell bagchi idea bidirectional kaindl khorsand koll kaindl pohl integrate unidirectional idea bidirectional generic heuristic insight memory memory effectively generic heuristic memory show appropriately instantiated domain many distinct cost domain data previously work generic heuristic memory generic heuristic integrates lead main idea address memory combine bidirectional style give integrate idea generic major step assign memory even nearly memory unless optimal reverse memory built possibly gether memory note little memory utilize tnrougn access nasning changing viewed form bidirectional perimeter dillenburg nelson also champeaux inefficient term time circumstance step also omitted instantiation domain show asymmetry generic also instantiated unidirectional generic instantiated must give guideline memory utilized heuristic well understood find clear categorization literature note item previously overlooked distinguish memory ordering node like organizes memory priority queue rbfs backtrack storing node configuration tile stored transposition directed acyclic graph avoid treeification heuristic node frontier node proportional cross node frontier arise path lead node dfbb normally recognize transposition extra memory also used taylor korf caching heuristic case distinguished static heuristic storing avoids recomputation accurate closer goal like mrec bagchi propagate heuristic back stored part graph heuristic frontier bidirectional utilize memory case distinguished bidirectional like bhpa pohl kaindl need memory find recognizing meeting frontier bidirectional memory find memory proving bidirectional heuristic utilizes memory storing optimal cost used proving idea instantiation generic utilize memory lead disjoint nearly storage give show generic memory side transposition reinefeld marsland side memory former used transposition caching accurate heuristic closer goal latter node help transposition part instantiation make combine unidirectional kaindl etal best suit property domain korf domain dfbb much instantiating domain distinct cost show generic instantiated domain characterized distinct cost reasonable part monotone manhattan make good monotone heuristic dechter pearl part idea bidirectional opposite step generic illustrates instantiation lead bidirectional idea memory also give part memory transposition illustrates call variant also find memory reverse frontier case optimal terminate must find optimal subsequently optimal technically part must slightly find goal node meet frontier opposing cost cost best stored cost best know optimal stored exceed threshold part exited successfully optimal part increased threshold admissible optimal cost part monotone heuristic node open admissible usual threshold used part explored technically invoked meet closed node opposing frontier branch meeting open node insufficient call nipping analogous even hashing node overhead ignored avoids hashing node heuristic know frontier opposing reach step generic must part bidirectional pohl pohl used cardinality criterion determining frontier node continue searching frontier fewer open node utilized node bidirectional decide beginning whole sufficiently symmetric slightly asymmetric determining seems reasonable make shallow probe side idea cardinality criterion incorporates also probing consistent iteration searched side fewer node part difficult much deeper part shortly best case seem fact even pure assigns dynamically lead systematically going worst case part part nipping save memory completing save iteration threshold early iteration iteration comparably cheap help much last iteration also terminated iteration cost best increased threshold terminates pure instantiating domain many distinct cost machine scheduling show generic instantiated domain characterized many distinct cost scheduling domain used bagchi townsend benchmark domain widely sketch shortly deal form processing time many distinct cost much reasonable dfbb part good case kind monotone analogously part idea bidirectional dfbb opposite step generic illustrates instantiation lead babb bidirectional technically computation heuristic backward modification trivial forward path backward path best excludes heuristic mentioned asymmetry cost distribution priori domain step generic omitted possibility instantiate generic omit also part memory form transposition analogously find transposition cache dynamically acquired heuristic call tcbb bidirectional idea side illustrated dotted arrow obvious babb tcbb continue searching memory node much obvious tcbb utilizes memory much effectively explained empirical babb tcbb task optimal domain derivation intuitively clear admissible terminate optimal formal kainz penalty completing time submitted time evaluated path penalty must sequenced machine penalty minimized property domain symmetric graph topology asymmetric distribution cost quadratic penalty look optimal best puzzle manhattan heuristic reinefeld marsland perimeter dillenburg nelson rbfs puzzle actually slightly worse korf noise last iteration show term node time data normalized respective node memory achieves nearly half node hashing slows utilizes memory save even node used korf even checking node opposing frontier mean measurable overhead done efficiently hashing node done efficiently puzzle korf even machine architecture influence relative time degree note data gained convex machine node data gained reimplementation code jonathan shaeffer note presenting absolute data relative difficulty reinefeld marsland reimplement data term node alexander reinefeld data reported reinefeld marsland insufficient comparable data time actually best reinefeld marsland absolute kaindletal overhead giving also node memory determining probing searching iteration generates node relatively high baisaves node also overhead hashing avoiding save quarter node time show respective memory nearly memory part half memory altogether node memory baitrans wave shaping generates slightly fewer node perimeter avoiding overhead wave shaping baitrans clearly perimeter overhead relatively make sure chance fluctuation statistic superiority term time pure pure statistically puzzle symmetric much gained selecting dynamically conducted variant selecting show even slightly overhead time pure statistically well probing iteration perfect oracle node overhead node determining move lacking data time reported dillenburg nelson sample perimeter perimeter korf reimplementation even term node much slower term time even slower communication john dillenburg turned slower korf node overhead wave shaping show clearly perimeter mean fewer stored node overhead wave shaping perimeter time consequently show data statistic test used kaindl kaindl smetana scheduling worse systematically searching backward significantly high deviation save systematically searching forward instantiating generic lead fastest optimal manhattan heuristic time pure seem impressive difficulty significantly improving appreciated looking many successful work machine scheduling best reported scheduling chose systematically forward optimal node memory bagchi signified utilize graph show data dfbb achieved instantiating generic appropriately dfbb memory data chose memory showing high tcbb regard memory used bagchi anup made show term time node computing heuristic dominates time note data logarithmic scale annotated previously best main systematically searching reverse goal much data surprising graph topology symmetric reversing attributed asymmetry graph topology actually phenomenon asymmetric distribution cost induced quadratic penalty find made phenomenon also heuristic searching forward many node must find path cost initially backward cost initially vary strongly identification path relatively node independently difficulty pure dfbb recognize transposition excessive time huge node searched babe insofar continue searching quit lack memory difficult many utilize resource optimally slightly tcbb generating slightly fewer node tcbb utilizes memory much babb node memory forward even tcbb need memory even searched node difficult find memory tcbb domain tcbb find good quickly avoids storing node cost unaware many node branching degree relatively high tcbb avoid storing many node reinforces generating storing successor node asymmetry cost distribution unidirectional even much reverse bidirectional view discover asymmetry domain even show well scale much forward node memory achieved scheduling domain best reported literature much difficult memory reasonable time work originally bidirectional heuristic work champeaux pohl show bidirectional unidirectional kaindl khorsand koll kaindl unfortunately bidirectional complicated make difficult domain fast node computation heuristic like imply overhead generic utilize idea bidirectional bidirectional sketched korf employ dfid heuristic difficult perimeter dillenburg nelson bidirectional look form wave shaping perimeter make inefficient term time bidirectional unidirectional mrec bagchi chakrabarti russell ghosh reinefeld marsland reinefeld marsland gave best term time aware referenced work viewed node searched tcbb clearly analogous dfbb much domain many distinct cost possibility getting reasonable cost conclusion make idea idea generic heuristic utilizes memory effectively categorize memory heuristic identify instantiation domain learned even nearly symmetric graph topology selecting distribution cost crucial kaindl etal memory utilized much effectively scheduling achieved significantly previously reported literature generic heuristic integrates idea bidirectional insight memory utilize memory effectively acknowledgment code puzzle made richard korf hashing schema jonathan shaeffer well code dfbb scheduling domain anup alexander reinefeld tony marsland data node well comment draft acknowledge comment draft wilhelm barth wolfgang schmid anup
