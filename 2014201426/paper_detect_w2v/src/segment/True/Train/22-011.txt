explaining system idea make explicit failure computation integrated explanation successful failed computation also rule containing effectively explained explanation system interactive full explanation successful failed computation heart system construct explanation year system explaining prolog system ranged teaching prolog brayshaw eisenstadt debugging prolog pereira shapiro presenting prologbased system clark mccabe hammond niblett sterling lalee walker yalqinalp sterling case extra make explicit relevant feature prolog backward chaining construct give explanation system collection prolog clause tree successful branch tree implicitly traversed prolog computation computation tree suitable answer history list branch tree traversed stack successive goal investigated goal user consulted find missing fact used refute goal allowed inquire grant equipment grant consulted construct sterling shapiro failure tree failure branch tree traversed computation used selectively collect failure branch success failure bruffaerts henin hammond sterling lalee walker failure tree used answer whynot construct clause prolog clark mccabe enhanced inetainterpreter work cited four clause metainterpreter clause reduction sterling shapiro explanation construct differentiated whynot explanation computation explanation hand computation address major limitation explanation system variant clause reduction inability adequately prolog negation accept adopted bruffaerts henin sterling lalee explaining negation totally limitation arise control flow modelled metainterpreter computation system failure prolog properly computation limitation arises view computation user computation computation answering user investigated completed failed computation part tree word user picture whynot explanation computation control flow proper explanation introducing tree treat explanation computation faithfully prolog computation good explanation good computation major limitation explanation prologbased system stem handling failure implicitly failure prolog composed failure goal fails unify clause failure backtracking alternative backtracking failure clause goal prolog answer inability unify exhaustion alternative goal implicitly used reported work augmented make levi sardu sterling lakhotia make fail behaviour prolog prolog behaviour kept maintaining explicit failure call goal branch goal branch computation goal computation returned note branch filtered goal prolog behaviour essence captured goal goal branch goal filter failure goal goal filter failure filter failure fail branch metainterpreter clause reduction code scope clause branch conjunctive goal system goal negated goal goal namely rule conditionals findall askable goal note prolog failure made explicit failure unify indicated branch clause none clause database unifiable goal recognized negation clause goal body prolog backtracking initiated failure filter failure explicit failure used extending computation prolog faithfully failure used computation computation handled wait computation goal failure system bruffaerts henin sterling lalee computation prolog handle presence make straightforward handle branch goal goal goal invert invert invert next demonstrate facilitates handling used namely commit represents type failure commitment body clause branch prolog clause ordering exploited desired branch branch commit obtaining commit branch affect type goal series conjunctive goal goal body retain computation namely commit failure occuring commitment inform parent goal final goal computation commil clause goal computation computation branch commit handled goal seen goal commitment branch mean failure parent goal mean commit branch goal actually goal goal investigate possibility clause branch handling achieved modifying failure filter failure port indicating failure upon commitment returning goal goal altered make actually commit placing goal prevents backtracking back branch wliich alternative modified goal sterling yalcinalp goal layered handle instantiating copy goal commitment instantiate goal binding propagated tree faithful process goal uninstantiated upon failure copy goal used creating branch explicit unification goal happens upon success control handled framework construct interpeter goal defining part control branch defining construct full explanation layered extra used collecting branch sterling shapiro used bruitaerts henin sterling lalee yalcinalp sterling success failure transmitted goal exit exit goal filter upon success failure commitment clause upon ultimate failure goal know goal ultimately fail kept goal branch commitment alternative imposing failure upon generating success branch previously encountered failure discarded relevant failure commitment ultimate failure branch enables collect failure brandy previously stored goal goal copy branch copy bresuit bresult commit true filter failure brcsult goal goai fail goal failure goal failure filter failure copy goal goal failure goal copy filter failure copy bproof copy bproof fail filter failure commit commit copy goal goal filter failure commit copy goal fail goal failure goal goal append prev failure commit copy failure copy goal interested keeping uninstantiated goal instantiate handle committing binding explained failure fail goal failure used collect failure goal goal failure list failure goal explanation goal used resolve tree scope failure goal construct disjunction fact tiling goal clause commitment propagated prolog construct must also adopt behaviour upon checking goal filter failure propagates commitment decides goal ultimately fails collect failure mentioned explanation actually good computation tree stilted english formed straightforward sterling shapiro used make computation collected understandable full trace subgoals body investigated clause explanation user navigate tree desired explanation clause upon explanation system reinvestigate computation process goal back rule investigated illustrate form explanation defines hypothetical rule candidacy student take qualifying test take sufficiently high grade candidacy student qualified math qualified math test math passed test math qualified math satisfies person subject exam person subject date passed test person subject person subject date student exam math fail sterling yalcinalp give answer explanation system user response italicized candidacyjim fails clause phclstudent succeeds qualified math fails qualified math fails clause test math succeeds passed test math fails goal qualified committed clause test applicable jrules rule database match goal computation committed clause clause reachable qualified math satisfies passecltest math fails clause math date fails goal match clause fact database math fail quit seen user investigate success failure goal request explanation regarding clause goal qualified math alternative presence fact enhance explanation explanation arbitrary prolog feature integrated yalcinalp sterling history explaining computation answer user request depend transpired computation alternatively system case western reserve discenzo user history computation answering case picture computation must recall full computation terminates contained tree instantiated tree explanation computation partially instantiated tree full branch completed computation uninstantiated node incomplete made call tree partially specified tree pereira shieber representing parse tree parsing process tree extra represents tree used sterling lalee yalcinalp sterling accessed time computation branch show node tree tree instantiated leaf computation finitely succeeds fails beginning computation entity uninstantiated tree goal goal tree tree node branch computation extra full tree passed computation tree conjunctive goal branch branch tree goal tree branch user interacts system computation last clause represents askable goal explanation tree computation handled passing represents tree investigate explanation explanation incorporates instantiation clause informs user goal conclusion expressive illustrated faithful prolog collection failure branchies pruned success failure bruffaerts henin sterling lalee computation handled also utility generating tree explanation user full computation termination computation modified believe handle debugging system style shapiro algorithmic debugging shapiro well explanation system moment clause database reported user well clause match goal inaccesible clause commitment also noted deguggers benefit work prolog cliche procedural loop construct success last clause meaningful repeated failure clause recognizing construct case tree kept explaining final clause also failure cliche repeat loop plan investigate style explanation good prolog construct system embedded explanation term construct embedded prolog prolog construct ignored entirely brief significance work computation kept implicit explicit said reified implicit absorbed reification absorption originally lisp smith rivieres smith used informally kahn ehud shapiro prolog reify clause reduction absorb unification construct disjunction failure also absorbed fourclause access backtracking affect computation layered reifies prolog control flow communication goal computation namely success failure commitment explicit prolog unification absorbed pondered reflection believe work terminology scope maes nardi lloyd
