parallel processing prolog distributed multiprocessor binding binding independently distributed processor binding scheme realises independence clause binding eagerly instantiating clause scheme prolog virtual machine illustrated feature simplicity preliminary demonstrated feasibility scheme background prolog widely recognised past powerful prolog much devoted parallel central binding manipulated parallelism effectively representing binding prolog stack werren much work parallel parallel stack process spawned parent process make binding branch stack kind investigated binding achievement neumann highly successful baron ciepielewski lusk central idea parallel build virtual stack process much sibling process binding scheme binding kept locally clause unification goal head applicable clause access unification unbound realised binding scheme dereference ancestor type auxiliary used binding hash window clause copy conery system centralised auxiliary binding scheme major disadvantage scheme access early dereference operation sometimes costly also link resolution centralised memory organisation facilitate auxiliary history sensitivity binding word binding kept descendent process access binding scheme seen process restricted scheme overcome drawback limitation tradeoff extra copying binding operation binding scheme epilog wise closed conery epilog accessed process achieved closed achieved closing operation parent child radical achieving nonshared former closing operation latter costly sometimes wasteful computing storage identified locally process system scheme identifies exportation also reduces eagerly instantiating process eager instantiation binding scheme binding scheme suited scalable multiprocessor high distributability desirable word distributed process operation stack register avoided true high distributability achieved cost copying data whole auxiliary copying overhead well outweigh gain distributing processing goal minimise size secondly binding scheme readily supportive thirdly relatively inexpensive system parallel switch mode eager instantiation binding scheme meet major feature scheme operated process instant time restricted process process entirely precedent sibling parent process process unification substituted word long binding precedent process sent process access need dereferenced ancestor binding scheme guaranteed instantiation operation appearing substituted structured term substitution reproduced substituted instantiation operation process next process transfer happen sibling process parent process child process head unification case instantiation made process sent process sibling process binding sibling process interface instantiation case instantiation done head unification child process body literal face instantiation child process terminates ancestor child process paired binding exported back parent process export operation interface instantiation achieves goal back unification operation epilog wise binding process parent sibling process face instantiation hand serf child process sufficient binding parent need dereference back illustrates eager instantiation binding scheme clause clause process goal head unification instantiated face instantiation goal child process match succeeds variableinstance pair sent back used instantiation arrow noted pair produced introduced head structured term containing unbound structured term instantiated interface instantiation sent goal upon successful instantiated interface instantiation sent back parent process merely stand clause term eager instantiation scheme child process match goal binding resulting unification process stored data stream variableinstance pair used instantiation generates stream full andparallelism allowed scheme scheme effectively restricted andparallelism degroot parallel processing goal interface instantiation goal exporting pair child process goal parent process data dependency sibling goal word child process evaluated parallel exporting pair parent process arrowed line omitted case binding scheme eager instantiation fact instantiation operation eagerly process occurrence replaced binding ensuring scheme introduces overhead instantiation operation copying simpler distributed parallel eliminating need accessing ancestor process eager instantiation procedure best term procedural semantics hogger reduction step computation entail invoking procedure parent process thereby introduces call goal child process procedure body process replacing call goal body call goal correspond semantics procedure make correspond unifying impose simpler semantics unification procedure call body goal representing cell gabriel used pair used accommodate binding dynamically arrangement loses cell accessed address binding conflict checked efficiently brings benefit uniquely proceeds unnecessary memory unbound cell unbound occupies synchronisation simultaneous binding process pair occupies term unification cell cell also need pair size process minimised optimisation done substituting part removing redundant variableinstance pair optimised occupy much cell thus extensively processor request distributed processing dataflow virtual machine eager instantiation binding scheme initially dataflow prolog dialog dialog built virtual machine dataflow computation dataflow computation operation data parallel computational restated graph dataflow graph show data dependency operation dialog virtual machine virtual dataflow graph representing prolog clause constructed node dataflow graph dataflow token node token simultaneously node token representing thus activate node eager instantiation binding scheme show instantiation dataflow graph clause brief node graph rule generating dataflow graph dataflow graph list rectangular node procedure call procedure call transfer process node clause clause head match process thus activate clause meanwhile returning pointer clause pointing descendant process parent process activated term instantiate node substitute appearing term binding recorded sends instantiated term export node merges pair ancestor process export parent process unify node unifies term generates term delivers binding appearing term illustrated list must graph jist dialog virtual machine head unification need stand head sent straight child process unification variableinstance pair produced exported parent process choosejist instantiated sent goal list child process list activated instantiated succeeds clause fails instantiated returned list imported parent process case binding exported export list back choosejisfs parent process clear child process list need access list snapshot applying scheme list dialog transputer system data identified storing storing binding form whole pair unbound unified pair thus binding identified pointer pointing list identified list pointer pointing address list identified pointer pointing address list referred structured term arity structured term term unbound structured term help eliminating unnecessary nonvariable structured term also play role restricted garbage collection copying memory consumed rapidly garbage collection reclaim memory occupied structured term used garbage collection scheme sufficient structured term extra indicating structured term term need goal term unified applicable clause incremented copy conversely discarded decrement term instantiating binding term occupies thus identifies term case term discarded replaced structured term reach zero memory term reclaimed term used machine architecture feasibility scheme dataflow architecture simulated noted binding scheme equally suited many kind architecture dataflow architecture constructed ring main compiled virtual stored packet queue fifo buffering packet flow homogeneous processing storing structured term distribution network delivering packet dataflow architecture dataflow architecture packet flowing simultaneously part ring behalf concurrent ring operates pipeline actively processing creating packet simultaneously fails responsible sends fail signal belonging graph allowed graph activated fail signal disabled tested binding scheme dataflow graph stored determinate list concatenation list append list concatenation list quicksorting list reversed qsort naive reverse list list checking list subset list sublist line presentation cube cube reflects nondeterminism sublist recursion appendl qsort graph copying sublist stream processing cube whole benchmarking closely phase scheme term structured data pair envlen envlen averaged accessing instant eager instantiation optimisation merges pair operation stay processing need access next time find host resides copy meanwhile sends identifier thus associating processed stay lazy copying work probability probability successive updating operation case copying unnecessary used system envcpy zero copying percentage cube operation thus copying copying dominant mostly sublist size copying overhead reasonably affordable eager instantiation binding scheme extensive copying structured term major shortcoming scheme summarises structured term strlen averaged accessing instant access structured term stracc copying operation strcpy proportional processed elecpy inference copying operation inference copying impose intolerable overhead copy structured term inference even copying serious structured term structured term reduce copying structured term knowing operation structured term overwhelmingly list head tail intuitive idea head tail part list list head tail modified remaining part list illustrated happens list tail list list correspond tailb list processing suggests list need newly constructed list arity last tail pointer list pointing remaining list list arity tell belonging list copying list used elecpy half copying elecpy introduces little extra overhead incurred tracing copying pointer conclusion binding scheme eager instantiation accessed locally binding centralised auxiliary orparallelism exploited effectively distributed processing also easy restricted parallelism scheme dataflow virtual machine also scheme implementational high distributability dialog utilising scheme evaluated reported elsewhere encouraging simulated dataflow architecture eight processor said binding scheme architecture suitable many kind architecture need tested gain broader assessment scheme acknowledgment like thank council postdoctoral fellowship
