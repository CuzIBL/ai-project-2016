cognitive process code view term process planning coding coding process reproduces code experienced fortran stated production system engaged form million boehm surprisingly sparse mainly take attempting process idea allen newell framework processing newell simon presenting prerequisite task spoken task fact task heading many specification specification debugging documentation task must find educational part task limitation time resource prevent inclusion part task involving debugging obvious limitation prevent process planning coding work coding process time task operation process invoke type hand work manual last spoken actually work must build deal property must desired final goal operation appropriately transformation process referred planning composes process process planning invoked type plan produced best programmlng specification real operation desired used schema outline guide code much plan used guide newell simon asserts sufficiency plan nearly task plan expressed sort investigated newell freeman specified invoke turn type whole analogous plan used planning task newell simon compiler routine heuristic compiler simon planning take operation process refinement take step make part plan terminating refinement reasonably part plan sufficiently feel know translate code even code unknown final process coding take coding process operates piece part plan code produced criterion coding process failure failure passed back planning process codeable plan coding process coding code plan piece code assigning code comparing stipulation plan used code code turn code plan continues cumulative code meet plan expenditure piece plan codeable code differentiation data must actually make accomplish printing must differentiate even task line code branch ment distinction line code accumulated also make differentiation thus loop branch combined give test type whole segment code code replacing real data whole process expressed resembles closely used plan major stated actually achieved protocol distinction planning intent coding clearly used identify process taking mentioned plan test fortran assigning loop plan next assign test closing loop continue summarize line loop test match plan proceed next plan alternative possibility illustrates test even parity parity test test even noting plan opposite alter test parity confronted erroneous inappropriate code process patch modify desired patching modifying main distinguish sort goal tree backtracking seen historically theorist newell simon system planner hewitt system rely heavily backtrack successful backtracking preferred creation subgoals hand attempting modify done take precedence backtracking infrequent backtracking take attempting code plan alternative writer decide plan fault happens made planning process made find plan piece plan code planning even process reinterpret process process coding process bottom planning process represents process bottomup process take coding coding process constructed brook summarized reproduce seen protocol thinking aloud series fortran sire unit code stated dialect lisp system defended newell simon memory longterm memory production system code presumed fixed chunk used access arbitrary size slot ordered item lost process analagous type forgetting item process item modification rehearsal alter item modification updating item contrasted item containing entirely rehearsal take item middle beginning bumped lost production system production system pair rule employed insure time system operates invoked none explicit branching control accomplished meeting asserts production system main control determining main extensive defense suitability control modeling newell simon production system presence absence item item uniquely stated term item disjunctive conjunctive specification item also item word planelement item pointer item meet specification invoked rehearse item planelement item pointer replace item memory production system make memory used storage body built code proceeds contained code much label piece code retrieved code used much long time remain unencoded form dynamically production system contained outside production system pair type pointer label name actually used fortran retrieval accomplished newmeaning getmeaning production system major production code actually access memory code little code remains sccessible subject wanted rewrite reuste piece code line never able recall memory modification correction code must retrieve code memory must retrieval code contslns data subject actually organize memory simplified code assumed searched linearly code preceding describes describes plan plan operation must desired plan basically list item operation plan production item time coding item show item belong inside loop part branch marker algol item belong protocol used plan piece code system form plan expressed take comment plan make plan lead code pointer establishment data pointer keep track template plan presumed semantics code must contained production system syntactic done mean coding template formally form recursion template segment code line mixture type informat code specif code code parameter replaced template actually used code template template data base consisting protocol experienced fortran manipulation contained used operation sample rearrance numbfs bkcimninc subject pencil terminal system name containing code read debug aloud tape recorder used subject transcription protocol formed data part segment coding protocol four modeling used extent coding segment effectively testing segment consisted plan derived protocol stated previously accomplished brook segment consisting line protocol part plan appeared segment protocol also plan derived protocol case planning began soon subject take line protocol subject identifiable planning seen protocol assumed planning completed segment plan used modification throughout segment show plan part looping testing keeping pointer last subject comment code line plan actually keeping pointer next pointing next tested comment line checking code actually inferred intends pointer next swap pointed pointer next production system take step plan convert code sample trace production system plan production system generates code subject area name slight code production system correspond size used subject production system code template goto invoked test inside protocol subject also divide unit assertion made mode make assertion coding coding plan code translation accomplished process line code laid process assigns used laying code collection piece code desired operation major assertion come correspondence subject protocol assertion come aasertlon coding verified estimating production code plan four segment production plan segment nunber served invoking production production system part production made memory system production decline cumulative size production grew indication plan make code assertion role code creation asking experienced fortran judge visible protocol able find segment coding indicating ubiquitous feature protocol assertion syntactic made template subject fortran template appropriately sized unit modeling enumeration construction protocol used conservatively template suggesting absolute approximately magnitude indicating template size implication artificial intelligence production system parallel central feature production system central control primry production system modeling next piece made parallel alternative dependency seen production system implemenatlon inherent control production system inherent part control argue production system particularly good representing coding coding process serial fashion case essential parallelism made retrieval association plan code main body code plan body serial process searching ought reveal long retrieval time code plan perhaps minute additionally protocol ought evidence elimination unwanted protocol subject plan coding seems utterance subject expend additionally subject considers alternative coding evidence fixed elimination unwanted alternative evidence strongly suggests coding made parallel true parallel process onto serial explication accomplished effectively correspondence process clear parallel process case representing production system particularly implication backtracking organize system backtracking subgoaler system subproblems imply system fall subproblem attempted backtracks successful system type vary considerably dimension used subgoals kind retained failure failure nilsson newell simon backtracking subgoaler inquire role backtracking play coding purest form backtracking consist abandoning piece code erasing crossing beginning code protocol type occurred occurrence taking protocol unsatisfactory code modified line crossing changing name corrected production system accomplished production hsve invoking unsatisfactory code modify code emphasized failure code much reused distinction system ernst newell planner hewitt failure discard entirely contrasting subject behave goal attempted attempting goal form code successive goal goal tree thus straight line generalizing suggests paradigm patch move forward suited task backtrack subgoal work coding process strlckly speaking applicable subject work broaden term process covered generality ought plan creation plan process retrieval stored plan code process code laid consequence consequence subproblems subproblems process goal control dependent goal stack bibliography extent affect plan code coding answer intriguing answer work improving footnote boehm quantitative assessment rand brook cognitive process code doctoral dissertation psychology dept ernst newell case generality academic york freeman newell reasoning proc joint artificial intelligence newell used plan heuristic consisting successive elaboration specification invoke turn hewitt planner doctoral dissertation massachusetts newell note psychology forthcoming newell simon york nilason artificial intelligence york simon heuristic compiler simon sikloesy englewood cliff jersey
