stratified reasoning produced hierarchical used assist casebased retrieval motivation integration reasoning hierarchical exemplify benefit comparative empirical path planning task show stratified reasoning significantly decrease computational expense retrieve match adapt case leading superior reasoning hierarchical initio reasoning paradigm retrieval revision reuse stored newly kolodner aamodt plaza case feature vector semantic network retrieval revision comparatively computational cost computational cost come expense representational task planning analogical reasoning difficult case expressive case retrieval revision case semantic network case subgraph isomorphism determination task garey johnson combat expressive case used reduce task introduces case reasoning david navy code naval laboratory washington simpler work indexing case precompute match case organizing case hierarchy partially ordered subgraph levinson alternative case indexing indexing focused thematic goal hammond expectation failure schank leake case feature ancestor feature hierarchy encodes subsumption feature porter advocate hierarchical give rise produced hierarchical retained assist indexing adapting refer case stratified case stratified stratified case benefit indexing retrieval accurate lsee kolodner kettler hendler work machine parallel architecture hierarchical used guide applicable lead reduction time sacerdoti holte knoblock bacchus yang goal task locate route connecting goal modeled task constructing straight curved track segment traversal operator goal track retaining case permit case much ground stored case much reuse case stratified case reused requiring fact stratified reusing hierarchical episode applicability domain hierarchy suitable hierarchical automatically derive hierarchy knoblock christensen bacchus yang task chose task demonstrate utility stratified reasoning task area robotics amenable hierarchical taskinvolves optimal path pair goal containing obstacle chose work allowed hierarchy zero indexing four show goal left ground containing grey associate operator used traverse thus unblocked ground operator blocked empty traversal operator traversal impossible determining operator determining operator four operator joining four traversal operator operator unavailable traversal reach restricted consideration obstacle configuration hierarchy operator downward refinement property bacchus yang refined concrete concrete thus hierarchical reduces stratified retain reuse path hierarchical retaining decrease cost stored path goal path accurately highest much size introduces five task downward refinement property satisfied operator adjacent obstacle arranged rectilinear adjacent obstacle size width size minus branting routefinding task manhattan heuristic goal hierarchical find path goal highest restricted falling path next case used hierarchical hierarchy goal hierarchical generates path connecting goal treated case refinement case next termed child case case termed parent refinement distinct ground identical distinct case identical parent case forest taxonomic tree case taxonomic forest case sharing hierarchy distinct pair goal ground simplest ground case ground path goal randomlyselected shortest path invokes find ground ground closest also case ground path case reasoning goal none ground closest adapts ground case locate shortest path joining goal stored case shortest adapted thus prevent retrieval proportion size case ground closest modification prune node cheapest thus ground closest bestfirst shortest path case case case shortest path stratified stratified reuse case stored retrieving case case case goal root case recurses child case continues recursing reach ground case segment connecting goal returned case goal latter case selects case hierarchical next restricting falling path case closest case case case match closest find refinement case case child adapts refinement find shortest path goal path restricting parent case path selects refinement shortest adapted closest recursively call step ground reached time selects adapted case final closest threshold recognize adapting case initio closest threshold behaves identically closest case case closest threshold find shortest path goal highest case adapted path path closest threshold treat case closest case closest threshold hierarchical prevent closest degrading redundant case case equally adapted closest type pruning case shortest adapted path closest retains path goal path highest case path goal path intersect path identical case reusable segment path indistinguishable case retained empirical work demonstrated hierarchical holte knoblock bacchus yang demonstrating utility reusing hierarchical describes empirical hierarchical also hierarchical deliver hypothesis empirical hypothesis explored reusing stored case decrease cost reusing case decrease cost reusing yield cost perfect preventing thresholding yield best task five hierarchical dependent work node expanded also size case base distribution goal ignore computational cost incurred hierarchical cost hierarchy ground traversal operator cost amortized training testing drawn ground obstacle configuration cost case retrieval hashing case goal varied ground closest branting varied listed held default reported refer testing decomposed subset subset refers layout obstacle layout constrained training test varying case varied stored case fixing size goal opposite dimension column fixed maximally summarizes hierarchical stored case remain five outperformed ground work decreased linearly size indicating stored case base occasionally match case base ground closest outperformed ground case base benefit adapting stored sufficient delivered stratified dramatic work decreased linearly size past case path ground segment benefit case reuse outweigh overhead retrieval involving goal near inexpensively initio case reasoning dicating utility reusing stored significantly outperformed ground training case indicating stratified task closest significantly outperformed ground closest closest significantly outperformed indicating preferable perfect task training case suggesting thresholding outperforms closest thus hypothesis fourth varying fixed size ground varied remain effected stored case varying show cost hierarchical stratified decrease slightly hierarchical reduces find perfect match incur cost stratified poorly used costly path goal significantly four used much costly closest outperformed closest threshold hypothesis contradict fourth varying distribution varied pair goal used opposite chooses maximally distant axis axis favorable bias stratified long path probability reuse decrease probability selects opposite side selects opposite side dimension differ degree prevent nearby goal pair opposite side prevents degree opposite prevents entirely summarizes cost rise hierarchical opposite side opposite also yield adapt explains improves stratified outperformed ground stratified outperform hypothesis stated outperform opposite distribution reuse decrease cost stratified outperform ground reuse case improves closest ground closest outperform perfectmatching ground closest threshold reflects mediates outperform closest contradicting fourth hypothesis thresholding yield best conjecture case cost best case sufficiently high thresholding beneficial work distinguishing stratified reasoning reuse stored holte alternating opportunism hierarchical refinement reduce cost cache simplifies complementary reduces perspective transformational retrieve operator revise derivational replay derivation problemsolving episode carbonell stratified employ transformation guide stratified case goal reduction applicable task goal reduction hypothesize task goal reduction stratified goal degree effectively derivational analogy indicative degree appearance graph priar kambhampati framework plan modification embodies many stratified priar retrieves branting predicted cost causal dependency guide partiallyordered hierarchy decomposing retrieved guaranteed refinable planning work priar focused semantics applicability isolating contribution resuing haigh integrate derivational analogy stratified work focused route planning task isolating contribution stratified hank weld framework permit plan stratified learning mitchell resembles stratified macro derived membership constitutes system reuse stratified reuse believe stratified beneficially incorporated hierarchical reinforcement learning kaelbling involving hierarchical view contribution envision incorporation many system conclusion stratified reasoning reasoning hierarchical empirical routefinding task demonstrated lead significantly computational cost hierarchical initio showed reusing yield reusing ground benefit stratified size case base outperforms perfect acknowledgement many thanks patrick harrison supporting leading holte feedback also valuable part visiting summer faculty grant naval laboratory
