work learning apprentice system suggests interactive promote reuse specification validation yield natural domain learning develops data explanationbased show learning used generalize promote reuse system lasr learning apprentice reuse acquire capturing generalizing interconnection data type role defining learned suggests representing learning considerable formal specification promote reuse developing suited reusable posse robustness generality usual ordinary practice show learning used formal specification capture generalize practice reuse applying machine learning motivated explicit domain embodied data type specification reasoning used validating deductive well learning training explained validated term domain training correspond semantically interconnection generalizing interconnection data formed yield reuse synthesized also suggesting alternative derivation used practice hoped time close acquisition nevertheless seems machine learning also promoting reuse show implication fact concrete relevant central much composing construction turn natural learning learned term learned seems applicable representing learning desirable incorporate generalizing interactive goguen describes supporting practical system system automatically base reuse system learning apprentice sense also describes system lasr learning apprentice reuse applying idea practical learning explanation learning comparatively paradigm machine learning concerned generating explanation training term domain extensive work learning explanationbased derive analyzing training consequence domain axiom deductive reasoning formal domain give applying learning machine learning contrasted derive conceptual classification noticing learning computationally intensive involving searching feature intensive subject revision invalidate empirical learning essential absence sufficient domain learning synthesis considering learned declarative explanation generalize training obtains characterization family goal learned thus goal process goal regression transforms goal inference step explanation operational operationality operationality term machine show process constructing explanation training term domain explanation accomplish goal describing learned training goal domain rule fact used explaining training goal operationality criterion form learned must expressed training sufficient goal satisfies operationality criterion automatically domain learning associate goal domain reasonable expect relationship goal explanation verification obvious applying learning procedural verification derive procedure imperative notably term weakest precondition name considerable literature subject merit elaboration view machine learning goal discover learning seem enlightening promising machine learning formal data play role validating promoting reuse larch give rise naturally learning domain equational correspond collection data type finite sort data type operation relating operation equational axiom characterizing data type give presentation stack presentation thought part declares operation type specification part module like part semantic operation operation free operation stack sort stack empty stack push stack stack stack stack stack empty stack boolean stack eqns empty empty push push empty empty true empty push false data stack learned submitting work hoare jifeng sander employing idea hill make data constructing composing refining particularly construct regard morphism morphism sort operation sort operation preserve sense axiom rewritten term sort operation deduced call target give morphism stack distinguished note morphism stack operation natural view morphism play role specification axiom preserved validation lead naturally validation explanation parameterized unconstrained sort analogous turn morphisms binding instantiating generic parameter goguen call view morphisms validation generalize adapting data data domain explaining explicit morphisms take role training presentation target data morphisms intuitively morphism reduce semantics well word little care must target extending make rule equational axiom operation push call operation operation imported primitive primitive operation used characterize operationality presenting morphisms suppress obvious correspondence associating stack data refinement morphism reasonable target morphism many reader find intuitive distinguishes form explanationbased learning learned term kind domain used explanation target nevertheless learned term also term explicit advantageous representing reasoning also attempting reuse procedure granularity promotes reuse much validation explanation morphism data used constructing defining correspondence training mapping sort operation domain data goal morphism subtheory operationality criterion axiom defining target expressed term primitive operation explanation morphism word collection axiom target goal regression equational validation morphisms equational data collection axiom follow axiom morphism assign else assign assign assign assign push step equational rule equational reasoning reflexive symmetric transitive substitution instantiation acquisition also axiom inference rule reasoning representing distinguishing term text treat equational reasoning data viewing axiom morphism goal equational inference step transform ultimately target transformation process constitutes goal regression axiom corresponds regressing goal explanation step rule equational reasoning regression extract explanation goal applies conjunctive branch collected distinct axiom derived validation assures regressed goal follow subtheory consisting regressed goal sort operation used describing learned sense rigid regressing collection axiom collection regressed axiom distinct target axiom case regressing axiom wasted target axiom used well significance distinction apparent observing structural property morphism equivalence obvious case operation explicit stack form axiom push true regressing axiom weaken target axiom morphism assign inductively axiom goal regression stack distinguished describes morphism refining stack data type distinguished import sort operation natural operation assign iarray replaced target defining morphism recovers precisely morphism sort eqns data morphism stack sort stack empty push assign empty true else false stack morphism practice stack richer adequate lisp nevertheless helpful think operation primitive defines process analogous going lisp transformed process confused think term extracting system retarget possibly system prescribes stack containing pair natural validation show morphism optimizing extra slot hold summation suppressed make readable finitely many summation size operation used reasoning read motivation data refinement operation practice evaluated repeatedly case storing part entity make sense needle concrete case sort assign size eqns assign else size size assign size assign data morphism size size assign assign assign caching morphism morphism note convenience initialized zero bothered bounding size operation keep track highest possibly distinguish operation target latter primed assign assign operation target validation morphism equational axiom integerarray validation morphism constructing target axiom regressed difficult construct validation regression axiom reproduce axiom axiom weakened assign else show main step axiom assign assign assign assign assign assign derivation regressed goal assign assign reduces assign gotten replacing axiom weaker regressed goal slot behave usual many alternative assign else lead data type assignment slot ignored slot evaluates slot assign else assignment slot type reminiscent hardware optimization register memory address differ ordinary slot case yield suggest alternative learning apprentice system learning apprentice system introduced learning apprentice interactive system assist user domain acquires normal capturing generalizing step carried user system recycles acquisition make suggestion learning apprentice system reduce acquisition bottleneck minimizing investment engineer creating maintaining base automatically domain constitute invested learning apprentice make user effectively reusable learning apprentice system leap leap applies learning vlsi suggests structural vlsi circuit specification leap user accept advice else construct alternative refinement latter case leap validate user validation explanation generalize leap form rule circuit conversion serial signal parallel network register leap take side rule work learning apprentice system applying learning domain inherent nevertheless expect learning apprentice system benefit fact stimulate machine learning paradigm acquisition bottleneck addressed learning apprentice system counterpart expertise invested developing procedure module paradigm creation promote reuse considerable distinct learning apprentice system promote reuse live code word take responsibility generalizing validating cataloging validation recognized validation reusable code validation make generic dimension help offset cost validation lasr learning apprentice reuse lasr learning apprentice system applies learning data type brings essential idea testing reuse interconnection derived experimenting promote reuse lasr hewlett packard give lasr deal reuse lasr interface user module refined system match specification refinement base base view morphisms pair data mapping sort operation mapping preserve property operation view retrieved base consistent term view specification specification user view specification operation axiom used base deques stack suggested stack corresponds part generalizing side leap rule inheritance suitable match specification rejected user refines specification system validate refinement step equational prover validation used generalize view refinement base hill acknowledgement lasr benefit learning apprentice system practical fruitfully equational limitation system system property temporal process like equational used representing reasoning institution give framework treating system desirable explanationbased goal regression equational seek intrinsic also morphism inhibits transformation well motivated practice well natural reuse idea weakening specification base reuse form parametrization inheritance conclusion learning generalizing practice complement reuse formal specification data type synthesized reuse interconnection time used modifying derivation creation reusable constitutes acquisition bottleneck learning apprentice system valuable developing system lasr framed term granularity suitable reuse goal suitable representing reasoning also valuable explanationbased learning work reported suggests involving deriving lowest communication network architecture intuitively thought adjoint functor validated morphisms validation acquisition like thank mitchell introducing learning learning apprentice system work hoare jifeng helpful weakest prespecification data refinement also suggested term adjoint functors grateful alan snyder martin gris goldstein enabling pursue
