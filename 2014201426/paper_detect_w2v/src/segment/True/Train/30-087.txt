exclaim reasoning originally operationalization kads system exclaim architecture namely domain inference task used domain inference task integrated domain mean upward downward reflection rule automatic domain operation inference task accessed inference task reasoning turn domain inference service modeling inference service deduction semantic consistency verification automatic classification argue validation verification assisting engineer developing reusable layered architecture well possibility generic inference reified membership system system aiming difficult domain notoriously difficult sheer size also ontology representable formalism assist engineer developing tool built eighty main tendency followed early year hand great system forward system like craft nexpert successfully used system drawback used system augmented rule daemon message passing describing reusable alternative tool inspired tool tool nevertheless inappropriate tool domain ontology much case case system suggest need tool nice simulation offered tool much harder case mentioned dealing much domain full domain reasoning full prover inefficient case also readability specification sometimes dealing modeling series specification forward kads ontolingua kads operationalization supporting kads executable tool omos momo karl modelk fork expressive formally sound computationally inefficient sometimes even intractable procedural semantics expressive tractable architecture aiming integrating viewed domain used representing inference control declarative modeling main byproduct declarative possibility developing reusable brief exclaim exclaim executable commonkads integrated modeling modeling integrating used representing domain dealing inference control originally commonkads system exclaim architecture namely domain inference task graphical exclaim architecture kads expertise relatively easy informal onto architecture domain encodes domain ontology domain mainly expressed fairly sophisticated inference service deduction semantic consistency checking automatic classification structuring indexing inference primitive functioning irrelevant view conceptual inference graphically oval role depicted rectangle roughly speaking inference inference role kind domain inference induces domain operation inference manipulate domain refer domain indirectly inference role domainlevel stripped reused domain reusability thus feature kads expertise enables construction inference control inference accomplished task domain exclaim domain constructor terminological assertional axiom used exclaim motel system constructor terminological assertional axiom database open automatically assumed moment inference service satisfiability consistency subsumption testing automatic classification hierarchy retrieval negation service make base consistency subsumption testing subsumes reduces unsatisfiability testing cept domain usable able collection list system lack constructor list extend collection tuples affect completeness inference terminological assertional separated impossible represents collection domain lead domain collection list stored domain binary stand domain name dljl inference inference primitive elementary operation operation functioning irrelevant view conceptual inference operate inference inference role kind metalevel domain enhance flexibility mapping inference role domain type inference role domain link introduced role refers role refers domain representing list role refers domain representing list domain link exclaim domainjink role upward reflection rule architecture responsible broadly speaking retrieving domain precisely role type domain operation retrieve retrieve domain linked role remove afterwards noretrieve retrieved domain domain operation role call inference retrieved domain retrieves domain subsequently remove domain must revision operation kads inference role role mapping type role downward reflection rule architecture responsible mainly storing domain precisely role type domain operation role asserted domain nostore role reflected domain passed caller inference inference automatic domain operation role domain made inference task domainindependent thus reusable code inference remain exactly even changing domain automatic domain operation inference regarded evolved form parameter passing inference call operation type noretrieve nostore domain operation rely explicit parameter passing call inference hand operation type domain operation backtrackable intend computation turn domain existence revision backtrackability domain operation inference domain operation fails domain restored call failing inference happens sought backtracking enhance flexibility inference primitive type role mapping also refers domain inference role refers domain inference role exclaim role mapping role operation role note role operation domain form doinain irrespective domain link type list conceptual view inference primitive well functioning need aiming operational system engineer code inference able execute exclaim inference normal clause form prolog head clause representing list role binding role binding term form role name rolevalue rolevalue partially instantiated prolog term role binding binding list irrelevant inference body call inference task recommended good modeling inference thought primitive executable exclaim inference primitive exec inference inference name outputvalue perforins operation unify inference call domain operation role retrieve execute inference body unify inference call domain operation role nostore step exec erence backtrackable mentioned backtracking domain operation domain revision task task embodies control task domain operation viewed composite executable primitive executable inference allowed domain operation domain operation task role task operational view like inference noretrieve role nostore role role inference role task role time role composite task also role inference subtask domain operation inference parameter passing task done call task view task inference outputvalue task body call inference subtasks task unifying task call body unifying task call step backtraekable resource allocation used illustrate exclaim taught lecturer seminar lecturer assistant assistant allowed teach seminar list familiar lecturer also lecturer teach know also taught lecturer lecturer teach lecturer teach goal find assignment lecturer resource request verified straightforward conceptualization defining defconcept lecturer prof assistant defpriraeconcept prof lecturer defprimeconcept assistant teach seminar disjoint prof assistant defconcept seminar defprimeconcept defprimeconcept seminar disjoint seminar defprimerelation know defprimerelation teach teach know link lecturer teach know know must find teach subject expressible like expressible take inference mentioning lecturer teach know unless famous constructor subset teach know composition induce undecidability inference service system encode inference task badea hand taught lecturer lecturer teach defprimeconcept teach lecturer defprimeconcept lecturer atmostd teach fact inference service inference task inference service reducible base consistency test work constructing constructed proving consistency used extract expressible really also wish exert tighter control process thus inference task relying entirely inference service turn computational view last trying reusable domain inference task turn stripping domain allocation lead reusable resource allocation lecturer abstracted resource viewed request also reuse domain involving lecturer domain proceed construction inference followed assignment teach constructed attempting extend assignment tuple teach tuples know linking lecturer free teach inference depicted note used generic name inference role denoting lecturer teach know regarded request lecturer resource allocated request tuples teach thought assignment tuples know assignment inference chooses request request passed assignoresource retrieve request succeeds assignment stored domain whole process repeated task unassigned request case terminates success failure case system automatically backtracks backtracking inference task also domain restored call inference task body heavily relying automatic domain operation inference also relying powerful inference mainly domain retrieval also checking consistency inference lecturer allocation note process computation deduction domain deduction inference task inference task show also process distributed feel separation computation natural leading reusability domain modification inference task illustrate lecturer know told assistant system alternative allocation namely assistant assignment retained consistent assistant teach generic inference reification achieving reusability need open possibility generic inference inference parametrized type runtime want staff want like director secretary like joan mary peter fred torn director joan secretary mary secretary peter fred note director secretary also director secretary confused director secretary director secretary like inference retrieving director secretary piece code inference retrieving secretary secretary cand cand like avoid piece code generic inference parametrized person like accomplished role type linked supposed person domain link role mapping generic domain link type type domain link role mapping generic domain link candidet role mapping generic choobe nostore generic cand cand type type type cand note link role linked predefined inference need refer used role role used role retrieves tuples form whith predefined kind rnetalevel generic inference sometimes reusable achieved abstracting inference also reifieation conclusion mentioned architecture system enables reusable psms ontology possibility developing executable psms supporting process validation service offered semantic inference role generic inference inference type director secretary cumbersome identical piece code piece code depend domain type director secretary domain introducing modify inference inference sition type hand generic inference domain link role type consistency checking domain deduction automatic classification structuring indexing tool inference service also tool inference service opposed exclaim clean integration inference used domain reasonable compromise expressiveness readability runtime exclaim inference task rely domain lack opinion drawback opposed exclaim reified membership used generic inference inference reusability work dealt combining carin none system reusable exclaim main goal creation domainindependent executable acknowledgment partly european pekads indebted doina tilivea developing graphical user interface exclaim wielemaker xpce well ullrich hustadt renate schmidt permitting motel terminological system
