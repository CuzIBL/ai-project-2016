backtracking lisp used optimal sens backtracking system routine sufficiently time operation property atom take backtracking achieved changing stored backtracking used insignificant overhead maintaining backtracking philosophy briefly contrasted backtracking system historical comment backtracking desired goal branching tree must made alternative next backtracking type branching insufficient branch lead goal wrong branch tried fails pretend incorrect branch never attempted selects alternative process backtracking algorithmic goal tree branch branching eventually tried worst case incorporated backtracking none incorporated exactly feature none backtracking exactly term term origin beginning used backtracking begun used past backtracking criticized quarter five year control dealing artificial intelligence contribute backtracking efficiently briefly backtracking algorithmic device expressible alternative goal tree alternative lead inherently control criticism come flavor criticism pragmatic criticism machine criticism backtracking mostly fallen latter criticize early pioneering system like planner system like incorporate flexibility answer many objection backtracking drawing experience wish used year artificial intelligence stanford versatile easy eminently practical continuing mention briefly view computation backtracking viewpoint call view view backtracking correspond computation ordinarily viewed view computation hold computation discrete step last yield desired consist algol viewed step leading computation fourth consist primitive step view computation term transformation computation counter stack system computation transformation representing desired computation continuing representing machine tuple computation mentioned must backtracking system view computation affected backtracking system golomb baumert explore computational backtracking took view computation demonstrated backtracking used reduce floyd early investigation took inverse computation assignment conditionals subroutine exit backtracking stopping forward inverse reached golomb floyd agree everything reset processing proceed forward command computation step expanded command command nondeterministic also stack reverse command backtracking backtracking undoing expanding computation step mechanical process compiler code forward step plus code save backtracking modular facilitates backtracking system inverse type debugged separately inverse backtracking soon need undone sometimes branch goal tree affect branch bother backtrack planner system incorporating powerful feature goaldirected computation planner backtracking feature actually planner really deal subset sussman charniak nevertheless continue name planner undoable backtracked designated letter front name backtracked thputprop thremprop thassert therase changing data base backtrackable putprop remprop exit undoable planner control failure happens property atom unless instructed give control backtracking enables eliminate superfluous hand mutt shifting burden backtracking shoulder system harder disadvantage overspeolfy difficult decide optimum save backtracking profound confusing distinction come made automatic control data backtracking view distinction backtracking obscured clarified main alternative goal tree unsuccessful never attempted computation reset beginning alternative alternative behave differently tried herring merely obscures nondeterministic want preserved alternative fails good nondeterministic backtracking view computation view backtracking summarized encountered computation machine system failure machine restored operation computation proceeds alternative alternative failure propagated preceding faithful adherence floyd golomb view backtracking namely everything restored incorrect alternative attempted control restored planner data also restored main process failing trying alternative backtracked unnecessarily time failure happens undone inverse restoration inverse undo last inverse effectively undoes inverse wasted failure transfer control back restored operation operation rapid blend nassign operator planner thsetq also backup stack much like stack stack stack backup stack exit case peculiar property failure restored last fuction theny planner control automataically restored responsibility nassign want restored sail sail implementers coroutine coroutining logically backtracking alternative coroutines failure achieved deactivating coroutine representing path activating sail remember list list word used list mean operation previously remembered thus sail planner automatically restores control data data must restored really want sail behave like system must remember system failure seldom sail primitive give convenient keep data destroyed processing hypothetical full backtracking coroutining logically backtracking neither physically conceptually backup stack coroutine system conceptually main seems automatically emphasis simplifying backtracking system automatically restoring data control coroutines regarded tool like iteration invoked system automatically save automatic eliminates never save unaware going eliminating inefficiency much also prevented type system much difficult system backtracking restoring straightforward inefficient copy area memory secondary storage time encountered thereafter paid failure reloaded storage restored regardless used backtracking introduced much much happens incremented thereafter stored fact nothing much happens failure decremented jump system failure modify backtracking anywhere goal tree resume penalty paid referencing atom property property property stored structured atom alist must searched time property referenced slow magnitude property take virtually backtracking slower case extensible backtracking stanford lisp system practical tool compiler translator well tool operational year good deal experience practical production backtracking system compiler deduction system english parser english french translator algol compiler translator major system experience conclusion feature simplicity need make backtracking practical philosophy backtracking never concerned backtracked seldom rewrite routine backtracking planner routine rewritten changing setqs thsetqs putprops thputprops nondeterministic inverse made backtracking routine deterministic system consideration nothing backtracking modifying lisp assembly bind code lambda setqs bind stack maintained normal pushdown stack pushdown stack stanford lisp system control compiled stack stack save used free compiled property list property list property list atom save property list well property list recursive call property list stack stack rebinding stack save stack stack property list atom control transfer failure lisp imputation handle causing many implementers away volume incremental occurred last work load distributing throughout computation encountered major system dynamic part computation encountered incremented monotonically unless deleted normally deleted alternative tried unsuccessful also deleted mean referencing backtracking communicating know back thus branch fails gain valuable process trying tree used selecting branch next branch happens incremental stack stack incremental stack complicated stack stored address modified exit happened stack copy everything also address jump system routine routine move etack move next address property list incrementing affect property list property list last property list simply processing continues incremental stack stack basically operation stack stack much time system stack stack copy everything stack must stack accomplished block transfer stack address containing address stack searching stack simply list reflect fact process property atom property atom actually form case indicator list must searched property list form feilure system list restoring property list pair namely pair inverse restoring distributes throughout backtracking property roughly proportional work done branch goal tree branch fails early little work done processing continues branch come nondeterministic planner backtracking lisp cell fetching fast backtracking fact lisp property property list nondeterministicaily deter ministically main lisp compiled many done efficiently stored stack stored machine free exit preserved inefficiency introduced free property list lisp thus must process explained lisp debugged mode compiled crucial production backtracking system compilation preserved system like planner comparable attained feature backtraeking backtracking sensitive matcher routine planner routine invoked match stream planner stream must unstructured token file linear list matcher assist simplify translator mlisp incorporate backtracking ordinary great explained backtracking meta construction repeat alternative simplify clarify reduce rule production identifier list zero identifier separated comma list identifier scanned corresponds rule production word followed followed word optionally followed word else lisp cond corresponds rule production production respective production corresponds rule give brief nondeterminism used proceeds match stream match succeeds list matched match fails failure termination domain exit termination call failure termination false proceed next step domain exit failure successor domain yield domain step give used failure happens computation restored beginning deleted computation proceeds empty list incorporate backtracking like nondetemninistic alternative tried form floyd converted lambda formal lambda proceeds domain domain termination domain true floyd choiceuo give domain identity lambda successor lambda plus termination exceeded lambda greaterp termination lambda failure propagates failure termination true illustrates intrinsic failure fails last restores computation item time list item clause form need propagate failure back simply final successor computes domain reorder domain gained trying last alternative system operate goal list goal successor modifies influenced last alternative tried passing thus affecting alternative feature final backtracking feature flush prune part goal tree flushing stack backtracking normally assignment take backtracked failure enables destroyed inside brace failure flush constitute backtracking note floyd system success success absence failure true anything lisp primitive slightly powerful system particularly planner failing label declare like nondeterministic label fail powerful control buiit deterministic well nondeterministic label many trying replace tried replace nondeterministic nondeterministic backtracking used smooth integration backtracking lisp system stored degraded backtracking system viewing computation opposed inverse backtracking system feature backtracking main conclusion incorporate backtracking production system frequent operation degraded backtracking used control done simplification omission backtracking summarized bibliography bobrow wegbreit stack bolt beranek newman collins popple stone edinburg scotland feldman swinehart taylor keoent algol intelligence artificial intelligence memo stanford fikes heuristic stated nondeterministic procedure thesis floyd nondeterministic golomb baumert backtrack hewitt procedural embedding planner proc hewitt planner manipulating proving robot memo milner computable artificial intelligence memo stanford prenner spitzen wegbreit backtracking sigplan quam diffie stanford lisp operating note stanford rulifson conoepts note stanford smith enea artificial intelligence memo stanford sussman mcdermott conniving planning proc fjcc
