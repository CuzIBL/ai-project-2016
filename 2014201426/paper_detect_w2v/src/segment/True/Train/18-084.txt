searching cost graph graph analyzed graph repreaentable free grammar coat coat graph lowest coat derivation property cost grammar show show distinct cost graph exponential size grammar representing correspondence serve guide modeling real graph procedure analyze searching graph graph interested composite process process karp held graph composite process wide procedure dynamic relevance practical giving grammar cost production terminal knuth synthesized motivation find lowest cost parse cdps property cost tree grammar derive cost graph graph grammar correspondence graph free grammar connector correspond production correspond production grammar graph show correspondence correspondence noted hall treatment nilsson node restricted type graph graph walk around time thinking term grammar graph parse tree graph much grammar graph infinitely many tree give tree graph note tree cost grant machine intelligence dept maryland grammar analyze minimalization realistic motivation monotone cdps dijkstra cdps size must tree node acyclic cdps restriction graph size size grammar production show minimalization expressed mean step mean infinitely many step step computation bounding computation time formalized alio logarithmic cost criterion cost storing manipulating proportional unit cost storing manipulating grammar cost proportional manipulating motteler kanal cost easy ignore analyzing easy must made precise ignore computing cost conclusion computing cost giving recursive cost cost giving digit cost translates digit production digit representing find charge step step cost difficulty circumvented requiring cdps honest computation cost take step unless noted honest fixed restriction computation cost cdps natural acyclic cdps cdps monotone cdps analyzed show structural relationship cdps summarizes showing relationship minimalization hierarchy monotone contained acdp sense cost graph former guaranteed acyclic arbitrary parse tree monotone acyclic formal outline cost real cost parse tree restricting cost natural tree show find minimalization acdp step step infinitely many acdp minimalization natural recursive generating shortest halt surprising infinite giving unbounded parse tree backed must tested find simply generating testing parse tree save lowest encountered stop next untested obvious decidable simply parse tree parse tree possibly contribute acdp cdps mcdps giving decidable varying show time acdp must find size parse tree distinct parse tree acyclic free grammar keep stacking high lemma proved outlining procedure find cost derivation acdp exhaustive parse tree show sufficient show infinitely many acyclic grammar parse tree node grammar distinct parse tree potentially reasonable expect constitute infinitely many acdps step minimalization acdps cdps exponential practically solvable difficulty arises compact tree acyclic grammar mean bounding size tree show even size tree size grammar hard minimalization lemma parse tree acyclic grammar fixed node show knapsack show lemma acyclic grammar generates minimalization distinct parse tree knapsack reduction show acyclic cdps natural acyclic natural obvious nondeterministic time solves must minimalization nondeterministic time done defining repeatedly make nondeterministic guess production derived test backed aginst successively counter sufficient simply guess parse tree tliis tree fewest node necessarily cost cdps monotone monotone nondecreasing also satisfying motteler kanal hall equivalence graph contextfree grammar communication july kanal kumar insight relationship dynamic branch heuristic procedure maryland karp held process dynamic appl math karp upfal wigderson computationally proceeding annual symposium computing providence york knuth semantics math system kumar unified procedure thesis dept univ maryland step presenting proving runtime correctness closely parallel runtime correctness generalizes dijkstra dynamic kumar procedure searching graph proceeding young elsevier north holland motteler kanal searching graph maryland nilsson artificial intelligence tioga pearl heuristic intelligent minimalization monotone conclusion slight cost grammar minimalization cost fails monotone much practical modeling real graph made graph structural lowest necessarily last word practically solvable sort take distribution difficult even know infinitely many difficult rare monotone cdps solvable cdps natural cdps monotone restriction lowest cost tree rooted monotone satisfies terminal node nonterminal node conjecture monotone cdps solvable time restriction also find natural definable cdps minimalization
