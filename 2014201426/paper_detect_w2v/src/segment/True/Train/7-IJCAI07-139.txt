planning dynamical system pomdps psrs computationally challenging task proven successful planning pointbased iteration pbvi work approximating finite anytime whereby incrementally family anytime pbvi identifying best next motivate choosing empirically demonstrating significantly fewer pbvi planning pineau spaan vlassis dynamical system relatively good anytime suggested pineau anytime planning benefit significantly principled collected iteration show property computation gain resulting argue maximal gain good empirically verified optimization find maximal gain empirically anytime planning show significantly resulting potentially beneficial computation time many fewer computation must benefit sometimes offset time benefit memory storage system storage benefit size background planning partiallyobservable dynamical system exactly find maximizes longterm discounted discount planning suitable dynamical system partially observable markov process pomdp newer predictive sake familiarity pomdps noted well planning dynamical system psrs james pomdps pomdps dynamical system latent nominal time step agent nominal upon taking agent receives transition stochastic transition receives stochastic compactness vector agent observe nominal must maintain sort memory characterize pomdps done belief probability distribution nominal belief summarizes history computing probability nominal computation belief reached taking getting belief used agent interacts dynamical system maintain agent belief iteration planning pbvi perseus partially observable dynamical system planning constructing updating nearby also idea calculate gradient carried fraction computational resource construct main vector used belief vector represents step piecewise linear convex belief surface vector belief bellman used next vector lead computational computation vector backup operator backup argmaxbtgab whereargmax gaoi btgaoi pbvi backup onesteppbvibackup sold snew backup snew snew snew perseus iteration vector transformed vector choosing applying backup operator process onestepperseusbackup sold snew list sample backup snew else argmax empty snew step pbvi perseus pickinitialpoints minimalalpha goto pickinitialpoints walk minimalalpha vector minrr stop iteration expanded anytime modifying pickinitialpoints step iteratively expands computation anytime pickinitialpoints minimalalpha readytoaddpoints bestpointstoadd findcandidatepoints goto introduced anytime readytoaddpoints determines findcandidatepoints step determining bestpointstoadd take determines main contribution determining best examination incremental pbvi perseus best case best subset case outside identified best case make scalar gain show used gain used informed belief gain much construct gain identifies changing affect many seen examining backup operator also propagate arbitrary time step propagate exactly identifying best gain much computationally gain must used gain examining backup operator derived gain linear gain gain identifying simplest take gain selects sophisticated leverage computing identify even gain gain gain backup gain vector backup intuitively also nearby significantly lead discounted improving many part gain backup note quantity previously computation vector make cached vector inexpensive computational standpoint gain stronger justification also come computational cost gain gain insight illustrate system nominal extend intuition system piecewise linear convex consisting nominal surface line vector vector line correspond interior line maximal intuitively relevant relevant vector inclusion vector vector hold vector line thus gain dynamical system nominal note axis unnecessary vector gain lineand system nominal vector gain tightest plane tightest plane produced findgainandregionforpoint best produced findbestpointforregion bounding case nominal analogous planar visualize plane pushed upward constrained move surface depicted plane come rest belief plane give tightest vector gain case plane straightforward even difficult higherdimensional difficulty dimensional case left selecting surface task formulated linear refer findgainandregionforpoint belief scalar scalar vector find tightest used gain word work nonzero expressed convex linear plane rest surface call bounding property must interior bounding play role next subtle regarding interior vector fact early process outside convex hull problematic want correspond relatively poorly approximated area never interior subset resolve unit remaining orthonormal belief augment belief unit backup augmented scalar form bounding best bounding gain criterion drawback bounding thus waste resource approximating work well none highest gain address findbestpointforregion take bounding find interior maximal note unit exterior take bounding scalar vector optimization scalar vector bnew scalar vnew bnew process best call findgainandregionforpoint gain pbvi perseus incremental gain linear referencing explored possibility readytoaddpoints bestpointstoadd findcandidatepoints many seem promising linear used gain find best findgainandregionforpoint findbestpointforregion computationally cheap possibility readytoaddpoints fixed iteration process approximately converged maximal threshold also explored findcandidatepoints keep list successor walk threshold pickinitialpoints gain used bestpointstoadd gain gain bounding findbestpointforregion best ordered baseline anytime used walk choosing exceeded threshold principled conducted testing pomdp domain sized fourth hallway domain cassandra tested baseline anytime perseus backup best used convergence readytoaddpoints network shuttle time hallway time choosing fewer backup perseusi used successor findcandidatepoints integrated little overhead lpbased used walk introduced overhead case averaged discounted belief graph type type effectiveness type iteration type time well principled affect type show time incurred process graph show resource iteration time used comparing resource examination graph show lpbased good identifying best resulting produced fewer backup perseusi also significantly baseline choosing thus goal achieved promisingly largest hallway used significantly fewer good graph show choosing good translate network baseline closely competitive slightly worse overhead incurred identifying good optimal fact combined lead draw conclusion promising need investigation
