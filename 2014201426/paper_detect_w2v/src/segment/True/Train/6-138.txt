examine encoding planning csps closely encoding planning transformation used eliminate encoding show transformation uncover planning subsumes uncovered graphplan planning graph encoded planning empirical evidence validate effectiveness planning show even prototype graphplan prototype even competitive optimized planning graph also demonstrate lifted type planning planning graph show planning resource powerful planning used kautz selman impose fixed plan convert resulting encoding alternative formalism kautz selman vossen satisfaction csps beek chen kambhampati powerful examine encoding planning csps closely encoding translate planning csps encoding preserve much planning thus transformation utilize utility exploiting planning convincingly demonstrated blackbox kautz selman kambhampati planner system encode transformed planning planning graph planning graph planning construction blum furst computes represents structural planning thus encoding planning graph planning blackbox able capture planning encoding bypass construction planning graph equally well planning time work encoding demonstrate transformation uncover planning graph work much richer robust consequently planning graph construction generalize planning graph enhance extract kind planning efficiently extend type planning involving resource final automatically utilize powerful graphplan searching evidence encoding planning transformation used eliminate encoding show transformation subsume generalize planning graph empirical evidence validate effectiveness planning demonstrate lifted type planning show planning resource close conclusion work generating encode planning impose size plan planning plan size step gpsteps plan apparent sequel mean time encode plan utilize propositional distinct planning boolean intuitively mean true graphplan step mean graphplan step opposite clearly capture plan many illegal plan nonsensical outcome also captured need satisfies constrains legal plan serve unary goal dropositional step zero step compatible goal planning precondition true unless precondition satisfied rives precondition tive successor implicit classical planning frame mentioned unaffected capture implicit reiter successor axiom reiter propositional true made true previously true made false thus successor axiom take form creatc easy automatically successor strip additionally successor mention step easy encode pednault operator successor successor encode precondition encoded thus complication subject successor disjunct true held step planning successor axiom unintended step creating deleting avoid unintended must restrict concurrent natural serial true type imposes graphplan concurrency basically asserts simultaneously true interfere work graphplan concurrency step impose step true block null step plan lblum furst kambhampati null plan step refer comprises gpconcurrent plan plan reduction representing planning transformation modify generating empirically sense transformation inferring eliminating valued transformation well enforcing consistency freuder taking form graphplan mutex well csps redundant getoor make explicit redundant examining precisely done planning graph insight interact used binary mutexes binary enforcing consistency freuder consistent assignment pair assignment consistent testing test worst case take time exponential planning thousand impossible make consistent even contribution graphplan demonstrated quickly achieves form consistency collection binary mutex planning graph lift mutex computation framework mutexes graphplan rule base mutexes interfering precondition mutex tional mutexes mutex pair precondition mutex propositional mutexes mutex achieves mutex achieves planning graph binary testing step test mutex step encoded planning proved omit brevity base mutexes mutexes planning graph construction dein tected mutex propositional transforming mutex valued true binary prohibits true transformed capture planning graph mutexes mutexes inferred planning graph simplest case arise last case deletes mutex middle plan planning graph hand graph mutex never mutex presence possibility null step plan propositional mutexes propositional mutexes complication encoding planning graph utilize nevertheless mutex examining case translation planning basbcsp symbolically simplify replacing valued reduction false yield represents case also know form precompute many type reduction realize many type valued reduction efficiently reduction valued transformation valued turn also interact mutex mutexes detected propositional must false conjunctive ditions also infer also valued false false producing possibly infer mutex involving true blocked mutexes valued reduction subsumes reachability planning graph remain valued subset appearing planning graph graphplan besides subsuming slightly generalizing planning graph inference transformation utilized transformation valued case like planning graph inference used make also feed graphplan reduction thus even mutexes binary graphplan mutexes prohibit pair truh true treat negated entirely symmetric fashion mean mutexes mutexes mutex mean must true false binary detected valued reduction graphplan reachability demonstrated valued reduction powerful reachability inherent planning graph construction encoding powerful obtaining reduction never modified propagated planning graph creator deletors successor axiom reduces planning valued thus searching step forced true deleted forced false reduction planning graph presence forced true reduce mutex false help reduce planning graph planning graph mutexes monotonically decreasing never forced encoding rule forcing true creating mutex step valued reduction imposed plan rule obvious inefficiency never make sense plan follow inverse load followed unload eliminating invalid mutex inverse pair consecutive time step blocking inverse also infer inverse deletes inferred mutex true must remain true time step also false system automatically detects pair inverse well imposed transformation explained planner find planning build incrementally step beginning sends constructed continue termination reached plan solves incrementally thus ensuring find optimal plan used katsirelos bacchus gaccbj gacvscbj nogoods driver driver bsearch redundant inverse mutexes changing heuristic planning mutexes inverse heuristic redundant removal valued redundant binary particularly mutexes removal valued clear dramatic even valued removed inferred mutex removal valued mutex time removing valued brought time even planning heuristic instantiated greatly affect time show heuristic bsearch heuristic take planning csps show bsearch much redundant show mutexes inverse slight cspplan mutexes inverse interestingly help minor negated degradation show graphplan blum black zenotravel satellite freccelll graphplan gpcsp blackbox strip domain mean parse lowest time bold furst kambhampati blackbox kautz selman koehler planner construction planning graph planning graph compiled blackbox searched graphplan hand bypass planning graph construction encoding explained seen yield significantly case planning graph planner graphplan evidence effectiveness reduction blackbox mixed blackbox utilizes highly engineered zchaff moskewicz zchaftutilizes heuristic learning nogoods clause code nevertheless considerable scope cspplan heuristic even demonstrates usefulness like gripper mixed planning dividing goal agenda koehler particularly domain like blocksworld depot gripper recast term csps utilize domain like logistics particularly presence mutexes inverse domain effectively used domain mirsopt time step changing optimization mips driverloglo resource step plan planning resource major encoding planning csps extend encoding planning planning resource simply csps numeric demonstrate flexibility deal planning planning graph koehler scratch dealing resource planning graph like arithmetic propagation well handle planning resource introduced mathematical operation precondition containing fuel truck successor numeric affecting true concurrency block simultaneously altering numeric easy reduction transformation used unchanged simplify mips edelkamp resource planning mips combine paradigm checking heuristic find totally ordered plan made concurrent procedure paradigm introduces paradigm used mips minimize step final plan optimization parameter show parameter affect final plan mips parameter mips spend time trying find plan fewer step successful fact mips spend time worse hand optimal planner shortest plan term sightly optimization criterion used mips even mlps optimization criterion plan much planner mips optimization flag show mips time step time step depotsl driverlogl driverlogs driver mips resource planning step explained comparable mips case plan step considerably scale well mips take much mips driverlog surprising optimal planner mips achieving optimality quickly difficult also note prototype propagate numeric csps nonetheless competitive competition mips conclusion demonstrated planning exploited encoding lifting planning richer robust many sophisticated able capture generalize inference planning graph excellent additionally showing extend planning resource evidence benefit lifting encoding work naturally lead fastest planner nevertheless heuristic used planner utilize planning graph construction seems feasible planning graph utilized heuristic particularly beneficial computing informative admissible heuristic heuristic transformation also explored much scope improving well suited resource optimization branch investigated deal resource competition neither planner actually trying optimize resource size plan
