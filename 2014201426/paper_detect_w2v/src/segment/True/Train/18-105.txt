show conceive sructural induction facilitate lead automatic proving lengthy even impossible tool inductionmatching hand procedure hand generating lemma intend show help demonstrate clearly justified facilitating clearer boycr moore aubin also formal system automatic proving structural duction followed work done boyer moore aubin huet hullot lisp want structural induction case induction step hope induction step tool call matchimg induction briefly used explanation induction step proven hypothesis conclusion substitution induction belong domain substi tution induction step proved substitution characterizes induction also show hypothesis conclusion hypothesis obvious easy proved induction toward fails remove failure generalizing generating lemma proving fact manipulate induction data type verified domain type family constructor supposed domain ordering subterm complicity loms axiom canonical rewrite system property user contained eqll address lipn univ paris nord avenue villetaneuse show append lisp associative show equivalence reverse list domain list list constructor binary operator list list natural dispose canonical rewrite system term find normal form applying rule happen case precise rewrite rule need show proceed step reduce empty occurrence rewrite rule give leftmost succeed reduce term process fail occurrence subterms must evaluated rewrite rule reduce successively occurrence applying process stop case normal form domain case subterms occurrence case aubin terminology recursion recursion also subterms must evaluated rule recursion term reduce empty occurrence subterms occurrence four rule give evaluating subterm must instanciate occurrence evaluating subterm must subterm instanciatc occurrence occurrence recursion existant need procedure expressed procedure criterion subterms give proceeding false fails analyse boyer moore aubin boyer moore subterms replace proved syntatically identical subterms procedure suit proving used framework crossfertilization reduces induction step recursively lemma proved term proved must careful want extend false generalize replacing subterms fact false thus make boyer moore false justified establish proved aubin proposes heuristic boyer moore heuristic chooses subterms distinguishes recursive practice distinction kind presence accumulator role paragraph accumulator recursively recursive criterion selecting induction choosing subterms chooses induction recursion selects occurrence subterm recursion give name generalizes replacing occurrence thus obtains proved false subterms left generalize syntatically identical recursion subterms aubin generalizes accumulator used indirect subterms accumulator recursion aubin justifies proved equivalence presence failure help ecjl induction step hypothesis rewrite rule extract rewrite rule presence accumulator lead fail rule reduces induction step lemma induction step applying establish presence occurrence prevents hypothesis rewrite rule fails aubin replacing false case ecjl false aubin proposes make also generalizes proceeds match look failure fails substitution attempted remove failure applying procedure procedure introduces responsible failure completes hypothesis last satisfied introduced neutral fails occurrence substitution attempted fails occurrence aubin procedure aubin introduces occurrence completes term followed neutral hypothesis proved aubin extend proved weakness heuristic used recursive justified introduced induction next step know facilitated even carried like combinatorial subterms heuristic justified intention autor hypothesis rewrite rule hand think aubin continuing false considering kind real remove failure show subterms choosen aubin occurrence fact part subterms responsible failure contradictory substitution occurrence substitution attempted occurrence subterms responsible failure occurrence aubin generalizes subterms occurrence failure systematizes step exemplified case proved induction step induction step proved fails indicated induction belong domain substitution deduce fails induction belongs domain substitution list subterms responsible failure labelled occurrence step savagely generalize term occurrence replace subterms occurrence distinct castaing list subterms syntatically identical subterm generalize occurrence call introduced separated collect separated give name susbtitution symbolizes collection idea broadly speaking generalizes much find make true savagely generalize occurrence list false look specialized true upon practice difficult find equality specialize fact diophantinc type simply equality show proceed practical failure savagely generalize occurrence subterms syntatically identical separated introduced successively give normal form separated term recursion separated left left collect giving name also collect giving name substitution symbolizes collection rcvx reader fail generalizing reduce occurrence rule hypothesis fails come back step removing empty savagely generalize term occurrence give normal form collect recursion proved ccjl case true rewrite system induction step subterm subterm substitution belong domain proved procedure proposes proved facilitated conclusion think boyer moore aubin procedure heuristic used aubin subterms autors procedure
