analogy derive derivational transformation derived deductively closed rule base emphasis speeding derivation heuristic find good analogue target efficiently show derivation trace used guide derivation analogical reasoning past experience system analogical reasoning fall broad system analogy domain incomplete winston falkenhainer greiner system deductive fact domain fill missing part analogy domain system analogy derivation final deductively closed domain even analogy arrive system mostly used construction kling dershowitz davy russel analogy work fall analogy derive past experience domain unix operating system unix piping redirection control construct control high unix much richer primitive command subroutine thus work richer block specification system work automatic system take semiformal specification unix command script specification system form specifies sideeflfects slot describes domain suchthat specifies print name file file specification directory list belongs size file user belongs predefined file directory user system user specification user ancestor ancestor list parent ancestor parent directory harandi bhansali rulebase system rule representing degree generality rule used unix specification step decomposing rule process form analogical highest system ride encode high rule encoded form template script cliche kbemacs command filled rule operating system domain rule encode sense reasoning type type type type inverse mapping rule unix operating system largest part rule base form command unix rule list directory command analogue system analogy discover analogue system analogue matched specified user system find analogue target task heuristic built intuitive feel kind find analogue match want remove file bigger process time form list process process time retrieve kill process seeing insight deleting file bigger form list file size retrieve file name remove file deleting comparing main analogy worked changing name file access appending suffix nothing deleting comparing used form list file file access retrieve name name analogy worked case automated deduction paradigm processing abstractly stated type characterising operator success analogical reasoning system contingent detecting occurrence paradigm specification time note seems analogous thus base like retrieved thus analogue matcher analogue best analogue base next give heuristic done heuristic analogy specification heuristic instantiation replace fragment analogous fragment target illustrates deleting file killing process instantiation remove know fragment append code deleting file killing process analogy detected hierarchy illustrated note unix captured specification kill process remove directory user simply remove directory remove process feature unix also system user invent command captured specification system build hierarchy dynamically specification thus user creates command file list word command automatically incorporated tree command list file list access command command relationship systematicity heuristic heuristic systematicity gentner gentner slightly abusing specification relationship analogous illustration heuristic instructive look formal specification directory remove file belongs size user remove process belongs belongs unary instantiated view unary name size aitribute time seen rell argl propertyl systematicity heuristic analogous analogous systematicity heuristic system specification match highest belong plus matched recursively matched syntactic heuristic dynamically user clue suggest analogous structural thus recursive find ancestor consist file ancestor file script test print parent invokes file parent easy descendant descendant list directory list descendant creating file list print call file recursively remarked rule inherently syntactic heuristic case envision hierarchy specification case belong hierarchy analogous paragraph line word analogous recognizing terminator white word newline line blank line paragraph mapping countable counting rule case work page recognized delimiter term line heuristic interact heuristic suggest possibly analogue target matcher need decide attached suggested alternative tried heuristic seems systematicity heuristic harandi bhansali ported heuristic matcher next definitional heuristic case heuristic used decide tried fourth heuristic really used deciding analog used strengthening candidature suggested heuristic derivational analogy transformation analogy system transformation kling dershowitz carbonell system retrieves perturbs guided heuristic satisfies system ignore reasoning behind step used deriving work domain inadequate construction even work inefficient inelegant simplistic occurrence word file form list word occurring file word find many time file list word file formed word file line deleting duplicate line want derive occurrence file transformation final find list file listing line deleting duplicate line inefficient text file priori derivational transformation carbonell avoids kind inefficiency encountered step derivation word line deleting duplicate line list word file know listing file derivation trace derivation trace subgoal pointer rule used decomposing node tree final show derivation tree find frequent word file show rule english used derive node unix automated deduction derivational transformation derivational transformation best understood going derivation target find frequent file name system system best analogue heuristic step generating unix command rule pertaining unix command stored separately rule searched command system analogue transformation rule used rule rule applicable target instantiated system rule next system left branch target tree repeat process till come node rule applicable happens rule applicable system reverts back usual mode eventually discover command list directory grep command remove extraneous link node referring removal duplicate line mapping line counting line taking list remain part remains final resulting code list word unlq sword echo sword done code find unix find frequent directory note step system thus take give outline used deriving analogy unix command command else continue find best analogous heuristic step call analogy else step rule decompose represents decomposing nonempty repeat represents call returned none fail compatible note fail step interact destructively invalidate passed plan analyzer subgoals achieved destroyed plan analyzer goal even failure scheme backtrack presenting analogy term said analogous rule applies stantiation parameter rule applicable instantiation parameter analogical substitution fragment correponding fragment step fail rule used decompose subproblems rule decompose unix command else analogy fail also fail fail compatible else fail note subproblems unix command step system discover thus system integrates problemsolving analogical reasoning sacrificing possibility analogy mentioned analogical process deductively rule base analogy natural analogy time purely analogical reasoning time harandi bhansali analogical reasoning justified want time analogy time find analogy rule used derivation thus rule take time time find analogue rule used problemsolving base rule rule searched rule analogy justified time find analog time rule much time base rule case analogy insufficient proportion rule matched analogy proportion rule base time analogy analogy justified suggests analogy time find analogue match degree target high rule searched size time find analogue match depend size base rule size base stored reduce stored judiciously plausible heuristic system decide stored base rule used deriving time final degree match fourth criterion reduce redundancy base conclusion work paradigm analogy derive specification derivation differs work deriving analogy maintains derivation history automated deduction analogical transformation validly made secondly depend upon user analogue heuristic efficiently find good analogous derivation process combine ordinary analogical reasoning find efficiently derived deductively closed rule base thus soundness verified system part automatic automate unix success judged base seems reasonable believe system size base deriving base computationally acknowledgement thank gregg collins early criticism work benefited comment brian falkenhainer kbpa
