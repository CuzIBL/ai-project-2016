compilation boolean satisfiability powerful paradigm domain reasoning compiled efficiently even benefit compilation address introducing lcnf combine propositional lpsat engine solves lcnf interleaving call incremental simplex systematic satisfaction compiler convert resource planning lcnf processing lpsat explores optimization lpsat learning failure cutoff satisfiability rendered previously intractable quickly solvable crawford auton selman cook mitchell bayardo schrag anbulagan gomes successful many difficult task compiled propositional form graph coloring planning circuit verification fastest kuitz selman selman many task resource planning temporal planning scheduling analog circuit verification thank code help greg badros alan borning corin anderson mike ernst zack ives subbarao karnbhampati henry kautz jana koehler tessa denise pinnel rachel pottinger bart selman blind reviewer funded part office naval grant foundation barbara cable fellowship foundation grant foundation graduate fellowship data flow demonstration resource planning system precludes grey reasoning quantity unfortunately difficult efficiently handle propositional yield powerful substrate handling introduces lcnf combine expressive propositional linear equality argue lcnf ideal target compiler translate task combine reasoning also lpsat lcnf systematic satisfiability integrated incremental simplex lpsat explores propositional managed linear turn simplex notifies propositional unsatisfiable optimization lpsat learning backjumping adapting lpsat core heuristic trigger restarts learning backjumping lpsat learns clause discovering explanation failure branch terminates resulting clause guide backjumping constrain truth assignment show linear crucial learn effectively conflict demonstrate utility lcnf also compiler resource planning show impressive lpsat solves resource planning encoded encoding boolean unwieldy hard ernst tiny lcnf logistics greatly simplified compiler truck load fuel make delivery load allloaded italicized typeface real variant pddl mcdermott construct used koehler logistics domain kautz selman lcnf formalism lcnf combine propositional encoding expressive trigger propositional trigger enforced trigger truth assignment true formally lcnf propositional linear equality propositional establishes triggered propositional vacuously true used trigger assignment lcnf mapping real truth lcnf assignment assignment satisfies lcnf make literal true clause satisfies show fragment sample lcnf truck load fuel make delivery move goodtrip lpsat step constructing lpsat engine foundation propositional motivated criterion must easy modify propositional trigger handle inconsistency reasoner must incremental simplex propositional propositional minimize modification lpsat engine modifying relsat satisfiability engine bayardo schrag combining cassowary borning badros borning nelson oppen relsat make excellent processing lcnf systematic truth assignment minimizes code exceptionally relsat incorporates powerful learning backjumping optimization cassowary simplex handling lcnf quickly respond build lpsat modified relsat trigger four must trigger truth assignment must solvable truth assignment satisfying must truth assignment boolean assignment real even purely trigger true trigger inconsistent pure literal elimination trigger pseudocode resulting incorporating learning backjumping lpsat inherits learning backjumping relsat bayardo schrag lpsat propositional creates assignment boolean fails assignment inconsistent lcnf lpsat identifies inconsistent subset truth assignment assignment optimal cassowary guaranteed globally optimal assignment real assignment propositional used vital cassowary default minimizes slack restriction fall line pure literal elimination rule trigger clause trigger clause maxload load maxload purely wolfman weld core lpsat learning backjumping inconsistency triggered possibly null literal true simplifying tree node labeled node branchpoints true false branch inconsistent bold conflict assignment conflict subset learn truth assignment conflict lead inevitably failure lpsat learn clause disallowing assignment triggered minfuel maxfuel maxload allloaded true inconsistent minfuel maxfuel allloaded form conflict lpsat learn clause continuing futile conflict truth assignment lpsat backjump deepest branch conflict assignment ignoring deeper branch show tree minfuel maxfuel maxload allloaded true conflict containing minfuel maxfuel allloaded lpsat backjump past branchpoint maxload branchpoint minfuel deepest conflict branchpoint lpsat inherits conflict relsat lpsat must conflict propositional failure graphical depiction shaded area represents dashed allloaded inconsistency relsat propositional failure thus propositional failure lpsat relsat conflict unchanged learning clause contradiction bayardo schrag conflict lpsat identifies inconsistent subset propositional trigger compose conflict examine identifying inconsistent subset conflict lpsat conflict suboptimal conflict pruning preliminary showed conflict learning backjumping conflict twice conflict conflict lpsat identifies potentially much responsible conflict identifies inconsistent conflict proper subset consistent illustrates maxload maxfuel minfuel implicit load consistent dashed marked allloaded inconsistent informally lpsat find conflict identifying greatest conflict lpsat discovers conflicting discovers lpsat allloaded cassowary cassowary initially slack thus trivially consistent minimized routine used minimize badros borning show move left corner corner shaded horizontal allloaded progress shaded made toward allloaded minimized strict inconsistent marker cassowary establish conflict marker exactly thus identifies derived lpsat examines derived give note marker contributes keeping thus identified plus compose conflict minfuel maxfuel restrain coming closer allloaded line intersection line note conflict allloaded plus maxload even cardinality find many conflict conflict discovering pruning know find best conflict efficiently ever conflict good supersets brief conflict wolfman weld resource planning demonstrate lpsat utility compiler planning domain base koehler kautz selman parser translates resource planning lcnf form lpsat solves lcnf decoding unit resulting boolean assignment plan believe architecture wide planning specified pddl mcdermott pddl typing equality quantified goal disjunctive precondition handle builtin type float fluent float plan fluent time step time step nagoya stockholm float fluents manipulated test influence test used precondition influence used execute parallel serialized ment test take equality composed float fluents arithmetic operation evaluates true hold influence take float fluent asserted asserted influence simultaneous influence cumulative falkenhainer forbus plan encoding compiler regular explanatory frame axiom conflict exclusion ernst adopt fluent time take nonnegative time time specified time zero property presumed false test influence compiles propositional trigger precondition implied trigger precondition implied compiler must frame axiom well propositional axiomatizations explanatory frame used boolean real compilation proceeds step activated next step plus influence untriggered influence zero next construct clause activates unless actually parallel encoding compiler must influence mutually exclusive simplicity adopt mutually exclusive influence exclusivity plan step strictly parallel serializable demonstrated make parallel arbitrarily serializable adopt restrictive exclusivity expressive test wolfman weld time lpsat logistics domain learning backjumping line marked learning conflict conflict progressively learning note final curve reach resource cutoff hour planner lpsat zeno system penberthy weld expressive system zeno unable even simplestmetric logistics koehler system koehler code concentrate displaying lpsat domain describing heuristic optimization used enhance lpsat lpsat time pentium processor averaged showing confidence compile time unoptimized compiler optimization lpsat compile time substantial twenty minute logistics domain feature logistics domain kautz selrnan truck moving package city site city fuel city truck fuel consume fuel move trip truck city refuel depot fuel simplification retained numbered highly successful learning jumping well optimization learning backjumping demonstrate time resulting activating learning backjumping hour time conflict hour learning backjumping lpsat quickly time type restarts tuned cutoff data cutoff cutoff doubling cutoff double exceeds time allotted learning backjumping activated conflict handle best conflict quickly solves even harder logistics domain splitting heuristic line lpsat pseudocode make nondeterministic recursive call splitting heuristic used guide bias relsat heuristic poorly overly preference trigger trigger implicit clause resolved trigger time modifies trigger call cassowary call dominate runtime tried trigger splitting heuristic multiplying trigger preference surprise unable preference trigger slow lead suspect lcnf insensitive heuristic compilation planning domain encodes trigger decide restarts lpsat backtracking early showed percentage exceeded median runtime experimented restarts process gomes fixed beforehand geometrically restart seed show twenty time calculated conflict learning backjumping cutoff time minimized runtime system twenty reran tuned cutoff time tuned cutoff data impressive substantial preliminary difficulty cutoff time unless used repeatedly process good restart time dominate runtime also experimented restart system cutoff doubling restart restart reaching effectiveness demonstrates fact consistency runtimes harder five twenty lasted longest cutoff doubling work precludes survey propositional satisfiability linear cook mitchell survey satisfiability karloff survey linear work inspired idea compiling probabilistic planning majercik littman seemed extend virtual machine probabilistic reasoning orthogonal handle combined reasoning clpr thought integration prolog linear work introduced incremental simplex jaffar saraswat thesis saraswat formulates family operate incremental construction framework chip hentenryck augments tool efficiently satisfaction consistency checking deal finite domain numerica extends work differential hentenryck hooker combining linear propagation hooker blackbox scheme planning satisfiability kautz selman zeno causal link temporal planner handled resource incremental simplex loop penberthy weld blum furst descendant also handle reasoning plan graph koehler sipe wilkins oplan currie tate industrial strength planner resource planning system address planning compilation kautz walser vossen conclusion work promising combine strength fast satisfiability incremental simplex efficiently handle involving propositional reasoning make contribution lcnf formalism combining boolean satisfiability linear equality lpsat lcnf relsat satisfiability bayardo schrag cassowary reasoner ibadros borning experimented optimization lpsat adapting splitting heuristic trigger restarts incorporating learning backjumping conflict guide learning backjumping four magnitude compiler resource planning lpsat compiler much zeno penberthy weld much remains done many compiler improving runtime optimizing exclusion exploring exclusion encoding optimizing used influence improving handling wish investigate tuning restarts thorough investigation exponentially growing resource also lcnk stochastic engine hope expressive nonlinear
