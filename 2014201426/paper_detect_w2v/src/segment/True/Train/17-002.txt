intelligent tutor lisp tutor achieves pedagogical derived anderson learning student much feedback goal tutorial interface facilitates communication prevents distracting test tutor college demonstrate classroom constructing intelligent tutoring system teach cognitive skill practical cognitive also arguably strongest test learning work intelligent tutor effectively help student learn lisp tutor pedagogical derived anderson learning anderson boyle farrell reiser anderson boyle reiser tutor achieves pedagogical test tutor classroom tutorial goal tutoring form student tutor learn four time quickly classroom attending lecture text homework bloom student tutor attained grasp comparable student spending time classroom pedagogical effectiveness tutoring anderson guided intelligent tutor lisp learning acquiring cognitive skill student actually domain major role tutor make problemsolving episode learning experience lisp tutor greaterp tutoring educational device structuring student feedback guidance student effectively learn thus tutor lisp able student trying target skill pedagogical student much work student learn told tutor must able adapt assistance student able thus tutor must able student guidance guidance must student floundering student successfully leading student tutor feedback tutor able made student avoid time wasted trying isolate student spend much learning time recovering interfere acquiring target skill student lost trying track perhaps misdiagnosing changing part student debug upon feedback rule used commit memory thus successfully modified memory find responsible rule tutor feedback must constantly student final tutor student communicates final form answer geometry focusing type goal subgoals answer anderson thus student left induce procedure obtaining insufficient early learning fall back upon test thus tutor communicate goal lisp tried goal tutor serf helpful student compose smart structured student make planning coding asks assistance tutor helpful student continue tutor also interrupt curtail floundering help student back path conceptual accurately screen tutor success student incorrect domain student diagnose guidance call process student tutor solves student tracing student reasoning enters part typed tutor rule misconception rule tutor stay silent wait hand diagnosed tutor interrupt advice thus extent student path lead tutor stay background acting intelligent structured upon request tutor diagnosis student trouble tutor next step enabling student continue student difficulty code tutor assist student planning student code tutor draw ideal student domain catalogue mistake poor novice tutoring control module pedagogical student reiser ideal student tutor must able domain student assist system adequately serve tutor heuristic curriculum student tutor must able must able student rule reasoning domain want student acquire must tutor explanation clancey thus lisp tutor ideal student simulation ideal student lisp ideal student learn anderson farrell sauers ideal lisp grape production system sauers farrell grape architecture particularly well suited modelling type goal production ideal specification goal rule rule applicable show production rule applies code append concatenate list production rule ideal goal combine list list list append subgoals code buggy rule goal combine list list list list subgoals code tutor response combine list list list list list wrap parens around buggy production rule tutor reiser ideal planning coding production rule planning rule specification coding production code many case coding production specification code bypassing planning step production handle case competent student planning phase code thus must redundancy ideal follow many path student background specified tutor goal code computes operation fact memory relationship conceptual ideal code lisp applies production rule plan lisp code catalogue rule ideal also buggy rule misconception novice learning buggy rule incorrect rule ideal brown burton sleeman buggy rule poor semantic confusion lisp misunderstanding manipulating erroneous syntactic construct missing quote misgrouped parenthesis slip buggy append rule diagnose tutor student rule ideal considering buggy rule relevant dynamically modelling student path tutor student intention inferring intention responding appropriately student misconception johnson soloway tutorial rule tutorial rule production rule ideal rule catalogue tutorial rule bridge tutor student screen tutorial rule tutor recognize student production rule rule buggy rule append list tutorial rule specifies production rule student tutorial rule production rule applicable code rule buggy production student answer wrong hint toward explanation constructed tutor buggy rule constructed instantiating english template english tutoring control module pedagogical tutor determines curtail student floundering interrupt next step invoke planning mode selects remedial tailored student weakness feedback guidance lisp tutor tutor much guidance encouraging student much thus tutor hint type guidance tutor responding hint reminder clarification helping student plan coding catalogue enables tutor respond effectively student soon student make mistake tutor responds diagnostic message student code piece time tutor feedback soon item code wrong learning student receives feedback coded perhaps even code tutor also must respond undiagnosed student answer fail match rule buggy rule tutor nothing code work tutor responds answer describes goal reminder clarifies student able enter code tutor student rare student enters code actually work recognized tutor tutor also guidance hinting toward student difficultly hint take form reminder goal student also request clarification goal clarity tutor next piece code student continue done student request request tutor ideal best production rule considering tutorial rule production accessed explanation production updating code plan tutor also intervene student coding fruitful student made allowed code student allowed continue long diagnosed diagnosis feedback discrimination student student fail match catalogue entering drastically inappropriate trying code wrong part student confused coding succeed code sufficiently tutor initiate planning mode work code tutor work student step step constructed student coding presumably idea code work properly part straightforward tutor next step student back path next code tutor enables student work rest case student give consequence student tackle difficult consequence feedback student receive practice debugging code fact debugging code trying code tutor diagnosed view limitation fact normal learning learning necessarily confounds skill code code debugging extent tutor enables student learn code complication simultaneously learn debugging skill lesson debugging train skill independently tutorial interface tutorial interface facilitate student learning intelligence code entered prevent syntactic difficulty achieved student intelligent structured enter code structured automatically balance parenthesis placeholder placeholder template coding rule happens student student type left parenthesis word defun tutor recognizes defun rule redisplays code bracket must coded case referring name parameter list body tutor cursor beneath name illuminates must coded next structured relief student burden balancing parenthesis trap illegal stop student committing syntactic forgetting parenthesis quoting call call typing left parenthesis beep typing quote reiser message call quoted evoke message typing call followed call left parenthesis repeated type response quickly understood student distraction student intending thus enables student lisp conceptually difficult demonstrate enabling student central conceptual lead learning major skill deficit student structured also facilitates communication student tutor student type code replacing placeholding thus clear part coded eductional tutor student synch student sure part tutor discussing querying windowing system used keep screen code window code tutor message window used message tutor hint diagnostic message thus student read message retaining access code last possibly incorrect student goal window reminds student goal problemsolving demonstrates tutor responding student case student list student forgotten prog message tutor window window soon student finished typing atom demonstrates planning tutor upon difficulty coding recursive factorial tutor help student plan code concrete tutor response student reiser tutor aiding student recursive goal lisp tutor communicate conceptual accomplished part placeholder template rest student type construct prog tutor iteration prog initialization body repeat template help student list initialization body loop repeated call beginning loop accordance task many expanded body tutor also communicates goal guidance planning lisp requested student encounter sufficient difficulty tutor initiate planning mode lead student accomplish thus student learns broken simpler coding planning mode goal window remind student goal dynamic student modelling central pedagogical tutor feedback constructed tutor student processed waiting student completes code call perhaps goal respond smallest unit disambiguate student intending grain size tutor lisp atom syntactic missing parenthesis tutor respond soon student finish typing atom word append list side tutor responded upon keystroke perhaps diagnosing soon rule answer categorization student typing mistake deleting incorrect letter hand unit inhibit feedback tutor chance student lost thus tutor greatly consequence student student learn danger spending unproductive time trying track perhaps even changing part loosing track trying accomplish grain size student also ramification student modelling trying interpret part student answer typed tutor access ideal thus tutor know goal diagnosis student limitation successful proust debugging johnson soloway analyzes proust find many alternative line code many buggy transformation path forced hand lisp tutor track student problemsolving thus construct accurate student reasoning ambiguous code never completed lisp tutor diagnosis sign line code never omitted misplaced many proust thus avoided generic individualized student tutor able ideal catalogue respond student production form generic student target misconception thus generic student rule student know well rule student posse generic student adequate type feedback guidance desired tutor response explanation need tailored student answer strength weakness student student also kept tutor form overlay generic goldstein production ideal weighting tutor well student know rule time student rule increased time student exhibit concerning rule decremented used assign remedial student remedial production rule student weak also constructing explanation production careless slip evidence serious misconception want differentially respond test tutor tutor lesson beginning lisp conditionals structured numeric list iteration numeric list recursion tutor production rule ideal buggy rule rule tutor diagnose respond appropriately student lesson testing lesson conducted lesson diagnose student newest lesson diagnose completed major tutor student tutor tutor help teaching assistant student pittsburgh undergraduate experience covered lesson lisp recursion scored approximately final test tutoring learned much quickly untutored student learned twice quickly tutor hour lesson tutor hour nearly quickly student tutor hour percentage student tutored successfully completed lesson time allotted student tutor week offered undergraduate fall semester corresponds pedagogical student attend lecture read text homework unassisted student student went lecture read text student tutor final exam learned tutor reiser demonstrate lisp tutor educational pedagogical student learn quickly achievement test benefit tutor difficult lesson experienced student tutor used many student learning fulfill selfpaced lisp humanity student lecture answer session majority coursework involving student interacting lisp tutor work focused extending tutor teach skill debugging comprehension lesson student code guided monitored tutor flow control call debugging lesson student asked locate code skill code tutor student comparing ideal feedback upon guidance used lisp tutor also explored tutoring system problemsolving domain algebra geometry boyle anderson
